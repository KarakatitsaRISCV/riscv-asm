
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	200027ff 	strdcs	r2, [r0], -pc	; <UNPREDICTABLE>
 8000004:	080016c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, ip}
 8000008:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800000c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000010:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000014:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000018:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
	...
 800002c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000030:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800003c:	08000395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9}
 8000040:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000044:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000048:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800004c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000050:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000054:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000058:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800005c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000060:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000064:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000068:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800006c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000070:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000074:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000078:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800007c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000080:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000084:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000088:	08000a8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r9, fp}
 800008c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000090:	080006a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl}
 8000094:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 8000098:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 800009c:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000a8:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000ac:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000b0:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000b4:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000b8:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000bc:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000c0:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000c4:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000c8:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000cc:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000d0:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000d4:	08000f07 	stmdaeq	r0, {r0, r1, r2, r8, r9, sl, fp}
 80000d8:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000dc:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000e0:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000e4:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000e8:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000ec:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
 80000f0:	08001709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip}
	...
 8000138:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	080019c0 	stmdaeq	r0, {r6, r7, r8, fp, ip}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000024 	andcs	r0, r0, r4, lsr #32
 8000148:	20000024 	andcs	r0, r0, r4, lsr #32
 800014c:	200006fc 	strdcs	r0, [r0], -ip

08000150 <init32>:
#define CLOCK_LSI 3
//#define CLOCK_HSE 1
#define CLOCK_FAIL_LSI -4

void init32(){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	; (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	; (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	; 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800016a:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000172:	635a      	str	r2, [r3, #52]	; 0x34
  
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800017a:	635a      	str	r2, [r3, #52]	; 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
  //RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000188:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000190:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000198:	635a      	str	r2, [r3, #52]	; 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	; 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	; (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	; 0x53
 80001a2:	625a      	str	r2, [r3, #36]	; 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	; (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	; 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->PRER = (127 << 16) | 249; //LSI
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	; 0xff
 80001d4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			; <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b5e      	ldr	r3, [pc, #376]	; (8000364 <clock_HS+0x17c>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	; 0xfff
int8_t clock_HS(int8_t quartz){
 80001f6:	f240 31e9 	movw	r1, #1001	; 0x3e9
 80001fa:	e000      	b.n	80001fe <clock_HS+0x16>
  for(i=0;i<0x0FFF;i++){
    clock_sleep(1000);
 80001fc:	bf00      	nop
 80001fe:	3901      	subs	r1, #1
 8000200:	d1fc      	bne.n	80001fc <clock_HS+0x14>
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 8000202:	6899      	ldr	r1, [r3, #8]
 8000204:	f011 0f0c 	tst.w	r1, #12
 8000208:	f000 8086 	beq.w	8000318 <clock_HS+0x130>
 800020c:	3a01      	subs	r2, #1
 800020e:	b292      	uxth	r2, r2
  for(i=0;i<0x0FFF;i++){
 8000210:	2a00      	cmp	r2, #0
 8000212:	d1f0      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000214:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000218:	4770      	bx	lr
  
  //if user wants to HSE try it
  if(quartz){
    RCC->CR |= RCC_CR_HSEON;
    for(i=0;i<0x0FFF;i++){
      clock_sleep(1000);
 800021a:	bf00      	nop
 800021c:	3a01      	subs	r2, #1
 800021e:	d1fc      	bne.n	800021a <clock_HS+0x32>
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 8000220:	680a      	ldr	r2, [r1, #0]
 8000222:	0392      	lsls	r2, r2, #14
 8000224:	d41b      	bmi.n	800025e <clock_HS+0x76>
 8000226:	3b01      	subs	r3, #1
 8000228:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 800022a:	2b00      	cmp	r3, #0
 800022c:	f040 8096 	bne.w	800035c <clock_HS+0x174>
    if(i != 0x1FFF)quartz = 0; //HSE fail; try to HSI
  }
  
  //if user wants to HSI or we cant start HSE - try to start HSI
  if(!quartz){
    RCC->CR |= RCC_CR_HSION;
 8000230:	4a4c      	ldr	r2, [pc, #304]	; (8000364 <clock_HS+0x17c>)
 8000232:	6813      	ldr	r3, [r2, #0]
 8000234:	f043 0301 	orr.w	r3, r3, #1
 8000238:	6013      	str	r3, [r2, #0]
 800023a:	f640 73ff 	movw	r3, #4095	; 0xfff
    RCC->CR |= RCC_CR_HSEON;
 800023e:	f240 30e9 	movw	r0, #1001	; 0x3e9
 8000242:	e000      	b.n	8000246 <clock_HS+0x5e>
    for(i=0;i<0x0FFF;i++){
      clock_sleep(1000);
 8000244:	bf00      	nop
 8000246:	3801      	subs	r0, #1
 8000248:	d1fc      	bne.n	8000244 <clock_HS+0x5c>
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 800024a:	6811      	ldr	r1, [r2, #0]
 800024c:	0789      	lsls	r1, r1, #30
 800024e:	d406      	bmi.n	800025e <clock_HS+0x76>
 8000250:	3b01      	subs	r3, #1
 8000252:	b29b      	uxth	r3, r3
    for(i=0;i<0x0FFF;i++){
 8000254:	2b00      	cmp	r3, #0
 8000256:	d1f2      	bne.n	800023e <clock_HS+0x56>
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 8000258:	f06f 0001 	mvn.w	r0, #1
 800025c:	4770      	bx	lr
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 800025e:	4b42      	ldr	r3, [pc, #264]	; (8000368 <clock_HS+0x180>)
  FLASH->ACR |= FLASH_ACR_LATENCY;
  FLASH->ACR |= FLASH_ACR_PRFTEN;
  
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
  tmp = PWR->CR;
 8000260:	4942      	ldr	r1, [pc, #264]	; (800036c <clock_HS+0x184>)
  FLASH->ACR |= FLASH_ACR_ACC64;
 8000262:	681a      	ldr	r2, [r3, #0]
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000264:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  FLASH->ACR |= FLASH_ACR_ACC64;
 8000268:	f042 0204 	orr.w	r2, r2, #4
 800026c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000270:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8000274:	f042 0201 	orr.w	r2, r2, #1
 8000278:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 800027c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8000280:	f042 0202 	orr.w	r2, r2, #2
 8000284:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000288:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800028a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800028e:	625a      	str	r2, [r3, #36]	; 0x24
  tmp = PWR->CR;
 8000290:	680a      	ldr	r2, [r1, #0]
  tmp &=~PWR_CR_VOS;
 8000292:	f422 52c0 	bic.w	r2, r2, #6144	; 0x1800
  tmp |= PWR_CR_VOS_0;
 8000296:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  PWR->CR = tmp;
 800029a:	600a      	str	r2, [r1, #0]

  
  tmp = RCC->CFGR;
 800029c:	689a      	ldr	r2, [r3, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800029e:	f422 027d 	bic.w	r2, r2, #16580608	; 0xfd0000
  
  if(quartz){
 80002a2:	b170      	cbz	r0, 80002c2 <clock_HS+0xda>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 80002a4:	f442 0211 	orr.w	r2, r2, #9502720	; 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 80002a8:	4931      	ldr	r1, [pc, #196]	; (8000370 <clock_HS+0x188>)
 80002aa:	4011      	ands	r1, r2
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 80002ac:	6099      	str	r1, [r3, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80002b4:	601a      	str	r2, [r3, #0]
 80002b6:	f640 73ff 	movw	r3, #4095	; 0xfff
  for(i=0;i<0x0FFF;i++){
    clock_sleep(1000);
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 80002ba:	4a2a      	ldr	r2, [pc, #168]	; (8000364 <clock_HS+0x17c>)
 80002bc:	f240 31e9 	movw	r1, #1001	; 0x3e9
 80002c0:	e003      	b.n	80002ca <clock_HS+0xe2>
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 80002c2:	f442 0208 	orr.w	r2, r2, #8912896	; 0x880000
 80002c6:	e7ef      	b.n	80002a8 <clock_HS+0xc0>
    clock_sleep(1000);
 80002c8:	bf00      	nop
 80002ca:	3901      	subs	r1, #1
 80002cc:	d1fc      	bne.n	80002c8 <clock_HS+0xe0>
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 80002ce:	6811      	ldr	r1, [r2, #0]
 80002d0:	0189      	lsls	r1, r1, #6
 80002d2:	d419      	bmi.n	8000308 <clock_HS+0x120>
 80002d4:	3b01      	subs	r3, #1
 80002d6:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d1ef      	bne.n	80002bc <clock_HS+0xd4>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 80002dc:	f06f 0002 	mvn.w	r0, #2
 80002e0:	4770      	bx	lr
  tmp = RCC->CFGR;
  tmp &=~RCC_CFGR_SW;
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    clock_sleep(1000);
 80002e2:	bf00      	nop
 80002e4:	3a01      	subs	r2, #1
 80002e6:	d1fc      	bne.n	80002e2 <clock_HS+0xfa>
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 80002e8:	688a      	ldr	r2, [r1, #8]
 80002ea:	f002 020c 	and.w	r2, r2, #12
 80002ee:	2a0c      	cmp	r2, #12
 80002f0:	d006      	beq.n	8000300 <clock_HS+0x118>
 80002f2:	3b01      	subs	r3, #1
 80002f4:	b29b      	uxth	r3, r3
  for(i=0;i<0x0FFF;i++){
 80002f6:	2b00      	cmp	r3, #0
 80002f8:	d0f0      	beq.n	80002dc <clock_HS+0xf4>
  RCC->CR |= RCC_CR_PLLON;
 80002fa:	f240 32e9 	movw	r2, #1001	; 0x3e9
 80002fe:	e7f1      	b.n	80002e4 <clock_HS+0xfc>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
 8000300:	3000      	adds	r0, #0
 8000302:	bf18      	it	ne
 8000304:	2001      	movne	r0, #1
  
  if(quartz)return CLOCK_HSE;
    else return CLOCK_HSI;
}
 8000306:	4770      	bx	lr
  tmp = RCC->CFGR;
 8000308:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 800030a:	4916      	ldr	r1, [pc, #88]	; (8000364 <clock_HS+0x17c>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 800030c:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 8000310:	6093      	str	r3, [r2, #8]
 8000312:	f640 73ff 	movw	r3, #4095	; 0xfff
 8000316:	e7f0      	b.n	80002fa <clock_HS+0x112>
  RCC->CR &=~ RCC_CR_HSEON;
 8000318:	681a      	ldr	r2, [r3, #0]
 800031a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800031e:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 8000320:	681a      	ldr	r2, [r3, #0]
 8000322:	f022 0201 	bic.w	r2, r2, #1
 8000326:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 8000328:	681a      	ldr	r2, [r3, #0]
 800032a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800032e:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 8000330:	681a      	ldr	r2, [r3, #0]
 8000332:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8000336:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 8000338:	681a      	ldr	r2, [r3, #0]
 800033a:	f022 42c0 	bic.w	r2, r2, #1610612736	; 0x60000000
 800033e:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8000346:	601a      	str	r2, [r3, #0]
  if(quartz){
 8000348:	2800      	cmp	r0, #0
 800034a:	f43f af71 	beq.w	8000230 <clock_HS+0x48>
    RCC->CR |= RCC_CR_HSEON;
 800034e:	681a      	ldr	r2, [r3, #0]
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 8000350:	4904      	ldr	r1, [pc, #16]	; (8000364 <clock_HS+0x17c>)
    RCC->CR |= RCC_CR_HSEON;
 8000352:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000356:	601a      	str	r2, [r3, #0]
 8000358:	f640 73ff 	movw	r3, #4095	; 0xfff
  RCC->CFGR = tmp;
 800035c:	f240 32e9 	movw	r2, #1001	; 0x3e9
 8000360:	e75c      	b.n	800021c <clock_HS+0x34>
 8000362:	bf00      	nop
 8000364:	40023800 	andmi	r3, r2, r0, lsl #16
 8000368:	40023c00 	andmi	r3, r2, r0, lsl #24
 800036c:	40007000 	andmi	r7, r0, r0
 8000370:	ff9bc00f 			; <UNDEFINED> instruction: 0xff9bc00f

08000374 <_init>:
 8000374:	4770      	bx	lr

08000376 <SystemInit>:
#include "usb_lib.h"
#include "clock.h"
#include "systick.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 8000376:	4770      	bx	lr

08000378 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 8000378:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 800037c:	d200      	bcs.n	8000380 <sleep+0x8>
}
 800037e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000380:	bf00      	nop
 8000382:	e7f9      	b.n	8000378 <sleep>

08000384 <systick_init>:

volatile uint32_t systick_internal = 0;

void systick_init(){
  //SysTick->LOAD = F_AHB / 8 / 1000;
  SysTick->LOAD = SysTick->CALIB;
 8000384:	4b02      	ldr	r3, [pc, #8]	; (8000390 <systick_init+0xc>)
 8000386:	68da      	ldr	r2, [r3, #12]
 8000388:	605a      	str	r2, [r3, #4]
  SysTick->CTRL = SysTick_CTRL_TICKINT | SysTick_CTRL_ENABLE;
 800038a:	2203      	movs	r2, #3
 800038c:	601a      	str	r2, [r3, #0]
}
 800038e:	4770      	bx	lr
 8000390:	e000e010 	and	lr, r0, r0, lsl r0

08000394 <SysTick_Handler>:

void SysTick_Handler(){
  systick_internal++;
 8000394:	4a02      	ldr	r2, [pc, #8]	; (80003a0 <SysTick_Handler+0xc>)
 8000396:	6813      	ldr	r3, [r2, #0]
 8000398:	3301      	adds	r3, #1
 800039a:	6013      	str	r3, [r2, #0]
}
 800039c:	4770      	bx	lr
 800039e:	bf00      	nop
 80003a0:	20000024 	andcs	r0, r0, r4, lsr #32

080003a4 <endp_callback_default>:
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))void usb_class_sof(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}

static void endp_callback_default(uint8_t epnum){}
 80003a4:	4770      	bx	lr
__attribute__((weak))void usb_class_init(){}
 80003a6:	4770      	bx	lr

080003a8 <usb_class_disconnect>:
 80003a8:	4770      	bx	lr
 80003aa:	4770      	bx	lr
 80003ac:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 80003ae:	2000      	movs	r0, #0
 80003b0:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 80003b2:	2000      	movs	r0, #0
 80003b4:	4770      	bx	lr

080003b6 <USB_setup>:
static config_pack_t setup_packet;

//USB_PULLUP may be defined in "hardware.h"

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80003b6:	4b1c      	ldr	r3, [pc, #112]	; (8000428 <USB_setup+0x72>)
 80003b8:	481c      	ldr	r0, [pc, #112]	; (800042c <USB_setup+0x76>)
 80003ba:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  #warning USB_PULLUP undefined
#endif

  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
  //Initialization of callback functions (thx Олег Свиридов, my_xfiles@mail.ru)
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 80003bc:	491c      	ldr	r1, [pc, #112]	; (8000430 <USB_setup+0x7a>)
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80003be:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80003c2:	625a      	str	r2, [r3, #36]	; 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80003c4:	6a1a      	ldr	r2, [r3, #32]
 80003c6:	f042 0201 	orr.w	r2, r2, #1
 80003ca:	621a      	str	r2, [r3, #32]
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 80003cc:	4a19      	ldr	r2, [pc, #100]	; (8000434 <USB_setup+0x7e>)
 80003ce:	6853      	ldr	r3, [r2, #4]
 80003d0:	f023 0301 	bic.w	r3, r3, #1
 80003d4:	6053      	str	r3, [r2, #4]
  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 80003d6:	2201      	movs	r2, #1
 80003d8:	4b17      	ldr	r3, [pc, #92]	; (8000438 <USB_setup+0x82>)
 80003da:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 80003de:	2308      	movs	r3, #8
 80003e0:	4a16      	ldr	r2, [pc, #88]	; (800043c <USB_setup+0x86>)
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 80003e2:	3b01      	subs	r3, #1
 80003e4:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80003e8:	f840 1b04 	str.w	r1, [r0], #4
 80003ec:	f842 1b04 	str.w	r1, [r2], #4
 80003f0:	d1f7      	bne.n	80003e2 <USB_setup+0x2c>
 80003f2:	4b13      	ldr	r3, [pc, #76]	; (8000440 <USB_setup+0x8a>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 80003f4:	bf00      	nop
 80003f6:	3b01      	subs	r3, #1
 80003f8:	d1fc      	bne.n	80003f4 <USB_setup+0x3e>
  USB->CNTR   = 0;
 80003fa:	4a0f      	ldr	r2, [pc, #60]	; (8000438 <USB_setup+0x82>)
 80003fc:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
  USB->BTABLE = 0;
 8000400:	f8a2 3050 	strh.w	r3, [r2, #80]	; 0x50
  USB->DADDR  = 0;
 8000404:	f8a2 304c 	strh.w	r3, [r2, #76]	; 0x4c
  USB->ISTR   = 0;
 8000408:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 800040c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000410:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8000414:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8000418:	4b0a      	ldr	r3, [pc, #40]	; (8000444 <USB_setup+0x8e>)
 800041a:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
#ifdef SYSCFG_PMC_USB_PU
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 800041c:	4a05      	ldr	r2, [pc, #20]	; (8000434 <USB_setup+0x7e>)
 800041e:	6853      	ldr	r3, [r2, #4]
 8000420:	f043 0301 	orr.w	r3, r3, #1
 8000424:	6053      	str	r3, [r2, #4]
#elif defined EXTEN_USBD_PU_EN
  EXTEN->EXTEN_CTR |= EXTEN_USBD_PU_EN;
#elif defined USB_PULLUP
  GPO_ON( USB_PULLUP );
#endif
}
 8000426:	4770      	bx	lr
 8000428:	40023800 	andmi	r3, r2, r0, lsl #16
 800042c:	2000027c 	andcs	r0, r0, ip, ror r2
 8000430:	080003a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9}
 8000434:	40010000 	andmi	r0, r1, r0
 8000438:	40005c00 	andmi	r5, r0, r0, lsl #24
 800043c:	2000025c 	andcs	r0, r0, ip, asr r2
 8000440:	000186a0 	andeq	r8, r1, r0, lsr #13
 8000444:	e000e100 	and	lr, r0, r0, lsl #2

08000448 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000448:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
 800044a:	4c41      	ldr	r4, [pc, #260]	; (8000550 <usb_ep_init+0x108>)
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 800044c:	f000 070f 	and.w	r7, r0, #15
 8000450:	fa4f fc80 	sxtb.w	ip, r0
 8000454:	00bd      	lsls	r5, r7, #2
  if(func == NULL)func = endp_callback_default;
 8000456:	2b00      	cmp	r3, #0
 8000458:	bf08      	it	eq
 800045a:	4623      	moveq	r3, r4
  
  if(dir_in){
 800045c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000460:	f1bc 0f00 	cmp.w	ip, #0
 8000464:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 8000468:	da17      	bge.n	800049a <usb_ep_init+0x52>
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800046a:	8828      	ldrh	r0, [r5, #0]
 800046c:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 8000470:	0500      	lsls	r0, r0, #20
 8000472:	0d00      	lsrs	r0, r0, #20
 8000474:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8000478:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800047c:	8028      	strh	r0, [r5, #0]
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
  }
  
  uint16_t buf = USB_EPx(epnum);
 800047e:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 8000480:	2902      	cmp	r1, #2
 8000482:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 8000486:	ea44 0407 	orr.w	r4, r4, r7
 800048a:	d011      	beq.n	80004b0 <usb_ep_init+0x68>
 800048c:	2903      	cmp	r1, #3
 800048e:	d035      	beq.n	80004fc <usb_ep_init+0xb4>
 8000490:	2900      	cmp	r1, #0
 8000492:	d136      	bne.n	8000502 <usb_ep_init+0xba>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000494:	f444 4402 	orr.w	r4, r4, #33280	; 0x8200
 8000498:	e00c      	b.n	80004b4 <usb_ep_init+0x6c>
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800049a:	882c      	ldrh	r4, [r5, #0]
 800049c:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80004a0:	04a4      	lsls	r4, r4, #18
 80004a2:	0ca4      	lsrs	r4, r4, #18
 80004a4:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 80004a8:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80004ac:	802c      	strh	r4, [r5, #0]
 80004ae:	e7e6      	b.n	800047e <usb_ep_init+0x36>
  buf &=~ USB_EP_T_FIELD;
 80004b0:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80004b4:	f044 0480 	orr.w	r4, r4, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 80004b8:	802c      	strh	r4, [r5, #0]
  
  if( dir_in ){
 80004ba:	4826      	ldr	r0, [pc, #152]	; (8000554 <usb_ep_init+0x10c>)
 80004bc:	013c      	lsls	r4, r7, #4
 80004be:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80004c2:	f1bc 0f00 	cmp.w	ip, #0
 80004c6:	8806      	ldrh	r6, [r0, #0]
 80004c8:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 80004cc:	da1c      	bge.n	8000508 <usb_ep_init+0xc0>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80004ce:	6026      	str	r6, [r4, #0]
    epfunc_in[epnum] = func;
 80004d0:	4c21      	ldr	r4, [pc, #132]	; (8000558 <usb_ep_init+0x110>)
    if((ep_type & 0x03) == USB_ENDP_ISO){
 80004d2:	f001 0103 	and.w	r1, r1, #3
    epfunc_in[epnum] = func;
 80004d6:	f844 3027 	str.w	r3, [r4, r7, lsl #2]
    if((ep_type & 0x03) == USB_ENDP_ISO){
 80004da:	f640 733f 	movw	r3, #3903	; 0xf3f
 80004de:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80004e0:	8829      	ldrh	r1, [r5, #0]
 80004e2:	ea03 0301 	and.w	r3, r3, r1
 80004e6:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80004ea:	bf0c      	ite	eq
 80004ec:	f083 03b0 	eoreq.w	r3, r3, #176	; 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 80004f0:	f083 03a0 	eorne.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 80004f4:	4432      	add	r2, r6
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004f6:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 80004f8:	8002      	strh	r2, [r0, #0]
}
 80004fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80004fc:	f444 4406 	orr.w	r4, r4, #34304	; 0x8600
 8000500:	e7d8      	b.n	80004b4 <usb_ep_init+0x6c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000502:	f444 4404 	orr.w	r4, r4, #33792	; 0x8400
 8000506:	e7d5      	b.n	80004b4 <usb_ep_init+0x6c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000508:	60a6      	str	r6, [r4, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800050a:	89a1      	ldrh	r1, [r4, #12]
    if(size < 64){
 800050c:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 800050e:	bf8b      	itete	hi
 8000510:	f441 4100 	orrhi.w	r1, r1, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000514:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 8000518:	81a1      	strhhi	r1, [r4, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800051a:	81a1      	strhls	r1, [r4, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800051c:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
 8000520:	bf8a      	itet	hi
 8000522:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000524:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000528:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 800052c:	f361 2c8e 	bfi	ip, r1, #10, #5
    epfunc_out[epnum] = func;
 8000530:	490a      	ldr	r1, [pc, #40]	; (800055c <usb_ep_init+0x114>)
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000532:	f8a4 c00c 	strh.w	ip, [r4, #12]
    epfunc_out[epnum] = func;
 8000536:	f841 3027 	str.w	r3, [r1, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 800053a:	882b      	ldrh	r3, [r5, #0]
 800053c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000540:	049b      	lsls	r3, r3, #18
 8000542:	0c9b      	lsrs	r3, r3, #18
 8000544:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000548:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 800054c:	e7d2      	b.n	80004f4 <usb_ep_init+0xac>
 800054e:	bf00      	nop
 8000550:	080003a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9}
 8000554:	20000000 	andcs	r0, r0, r0
 8000558:	2000025c 	andcs	r0, r0, ip, asr r2
 800055c:	2000027c 	andcs	r0, r0, ip, ror r2

08000560 <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000560:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000562:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 8000566:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800056a:	00b5      	lsls	r5, r6, #2
  if(func == NULL)func = endp_callback_default;
 800056c:	4c4a      	ldr	r4, [pc, #296]	; (8000698 <usb_ep_init_double+0x138>)
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800056e:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8000572:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
  if(func == NULL)func = endp_callback_default;
 8000576:	2b00      	cmp	r3, #0
 8000578:	bf08      	it	eq
 800057a:	4623      	moveq	r3, r4
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800057c:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 800057e:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000580:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 8000584:	ea4f 5404 	mov.w	r4, r4, lsl #20
 8000588:	ea4f 5414 	mov.w	r4, r4, lsr #20
 800058c:	ea44 0407 	orr.w	r4, r4, r7
 8000590:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000592:	882c      	ldrh	r4, [r5, #0]
 8000594:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 8000598:	ea4f 4484 	mov.w	r4, r4, lsl #18
 800059c:	ea4f 4494 	mov.w	r4, r4, lsr #18
 80005a0:	ea47 0704 	orr.w	r7, r7, r4
 80005a4:	802f      	strh	r7, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 80005a6:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 80005a8:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 80005ac:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 80005b0:	d02f      	beq.n	8000612 <usb_ep_init_double+0xb2>
 80005b2:	2903      	cmp	r1, #3
 80005b4:	d030      	beq.n	8000618 <usb_ep_init_double+0xb8>
 80005b6:	bb91      	cbnz	r1, 800061e <usb_ep_init_double+0xbe>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 80005b8:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 80005bc:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80006a4 <usb_ep_init_double+0x144>
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80005c0:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 80005c4:	8029      	strh	r1, [r5, #0]
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
 80005c6:	f8bc 4000 	ldrh.w	r4, [ip]
 80005ca:	0131      	lsls	r1, r6, #4
 80005cc:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80005d0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80005d4:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 80005d8:	eb02 0704 	add.w	r7, r2, r4
 80005dc:	4660      	mov	r0, ip
 80005de:	d021      	beq.n	8000624 <usb_ep_init_double+0xc4>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
    usb_epdata[epnum].usb_tx_count = 0;
 80005e0:	f04f 0c00 	mov.w	ip, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80005e4:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 80005e6:	f8c1 c004 	str.w	ip, [r1, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 80005ea:	608f      	str	r7, [r1, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 80005ec:	f8c1 c00c 	str.w	ip, [r1, #12]
    
    buf = USB_EPx(epnum);
 80005f0:	8829      	ldrh	r1, [r5, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 80005f2:	f081 0130 	eor.w	r1, r1, #48	; 0x30
 80005f6:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 80005fa:	b289      	uxth	r1, r1
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80005fc:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 80005fe:	4927      	ldr	r1, [pc, #156]	; (800069c <usb_ep_init_double+0x13c>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 8000600:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 8000604:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 8000608:	4925      	ldr	r1, [pc, #148]	; (80006a0 <usb_ep_init_double+0x140>)
  lastaddr += 2*size;
 800060a:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 800060c:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 8000610:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 8000612:	f444 4101 	orr.w	r1, r4, #33024	; 0x8100
 8000616:	e7d1      	b.n	80005bc <usb_ep_init_double+0x5c>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 8000618:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 800061c:	e7ce      	b.n	80005bc <usb_ep_init_double+0x5c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 800061e:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000622:	e7cb      	b.n	80005bc <usb_ep_init_double+0x5c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000624:	608c      	str	r4, [r1, #8]
    if(size < 64){
 8000626:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 8000628:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800062a:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 800062c:	d828      	bhi.n	8000680 <usb_ep_init_double+0x120>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800062e:	f36f 37cf 	bfc	r7, #15, #1
 8000632:	808f      	strh	r7, [r1, #4]
 8000634:	898f      	ldrh	r7, [r1, #12]
 8000636:	f36f 37cf 	bfc	r7, #15, #1
 800063a:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 800063c:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000640:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 8000644:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000648:	f8a1 c004 	strh.w	ip, [r1, #4]
 800064c:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 8000650:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000654:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000658:	8829      	ldrh	r1, [r5, #0]
 800065a:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 800065e:	0489      	lsls	r1, r1, #18
 8000660:	0c89      	lsrs	r1, r1, #18
 8000662:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 8000666:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 800066a:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 800066c:	8829      	ldrh	r1, [r5, #0]
 800066e:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8000672:	0509      	lsls	r1, r1, #20
 8000674:	0d09      	lsrs	r1, r1, #20
 8000676:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 800067a:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 800067e:	e7bd      	b.n	80005fc <usb_ep_init_double+0x9c>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 8000680:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 8000684:	808f      	strh	r7, [r1, #4]
 8000686:	898f      	ldrh	r7, [r1, #12]
 8000688:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 800068c:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 800068e:	0957      	lsrs	r7, r2, #5
 8000690:	3f01      	subs	r7, #1
 8000692:	f007 071f 	and.w	r7, r7, #31
 8000696:	e7d3      	b.n	8000640 <usb_ep_init_double+0xe0>
 8000698:	080003a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9}
 800069c:	2000025c 	andcs	r0, r0, ip, asr r2
 80006a0:	2000027c 	andcs	r0, r0, ip, ror r2
 80006a4:	20000000 	andcs	r0, r0, r0

080006a8 <USB_LP_IRQHandler>:
//-----------------------------------------------------------------------
//--------- USB IRQ handler----------------------------------------------
//-----------------------------------------------------------------------
void USB_LP_IRQHandler(){
 80006a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(USB->ISTR & USB_ISTR_CTR){
 80006ac:	4c4a      	ldr	r4, [pc, #296]	; (80007d8 <USB_LP_IRQHandler+0x130>)
 80006ae:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 80006b2:	0419      	lsls	r1, r3, #16
 80006b4:	d530      	bpl.n	8000718 <USB_LP_IRQHandler+0x70>
    do{
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
        epfunc_out[epnum](epnum);
 80006b6:	4f49      	ldr	r7, [pc, #292]	; (80007dc <USB_LP_IRQHandler+0x134>)
        ENDP_CTR_RX_CLR(epnum);
      }
      if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
        epfunc_in[epnum](epnum | 0x80);
 80006b8:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80007e4 <USB_LP_IRQHandler+0x13c>
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 80006bc:	f8b4 6044 	ldrh.w	r6, [r4, #68]	; 0x44
 80006c0:	f006 060f 	and.w	r6, r6, #15
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 80006c4:	00b5      	lsls	r5, r6, #2
 80006c6:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80006ca:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 80006ce:	882b      	ldrh	r3, [r5, #0]
 80006d0:	041a      	lsls	r2, r3, #16
 80006d2:	d50b      	bpl.n	80006ec <USB_LP_IRQHandler+0x44>
        epfunc_out[epnum](epnum);
 80006d4:	f857 3026 	ldr.w	r3, [r7, r6, lsl #2]
 80006d8:	4630      	mov	r0, r6
 80006da:	4798      	blx	r3
        ENDP_CTR_RX_CLR(epnum);
 80006dc:	882b      	ldrh	r3, [r5, #0]
 80006de:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80006e2:	051b      	lsls	r3, r3, #20
 80006e4:	0d1b      	lsrs	r3, r3, #20
 80006e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006ea:	802b      	strh	r3, [r5, #0]
      if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 80006ec:	882b      	ldrh	r3, [r5, #0]
 80006ee:	061b      	lsls	r3, r3, #24
 80006f0:	d50c      	bpl.n	800070c <USB_LP_IRQHandler+0x64>
        epfunc_in[epnum](epnum | 0x80);
 80006f2:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 80006f6:	f046 0080 	orr.w	r0, r6, #128	; 0x80
 80006fa:	4798      	blx	r3
        ENDP_CTR_TX_CLR(epnum);
 80006fc:	882b      	ldrh	r3, [r5, #0]
 80006fe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000702:	051b      	lsls	r3, r3, #20
 8000704:	0d1b      	lsrs	r3, r3, #20
 8000706:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800070a:	802b      	strh	r3, [r5, #0]
      }
    }while(USB->ISTR & USB_ISTR_CTR);
 800070c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000710:	041d      	lsls	r5, r3, #16
 8000712:	d4d3      	bmi.n	80006bc <USB_LP_IRQHandler+0x14>
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
  }
}
 8000714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(USB->ISTR & USB_ISTR_SOF){
 8000718:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800071c:	0598      	lsls	r0, r3, #22
 800071e:	d506      	bpl.n	800072e <USB_LP_IRQHandler+0x86>
    usb_class_sof();
 8000720:	f000 fbc5 	bl	8000eae <usb_class_sof>
    USB->ISTR = (uint16_t)~USB_ISTR_SOF;
 8000724:	f64f 53ff 	movw	r3, #65023	; 0xfdff
 8000728:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
    return;
 800072c:	e7f2      	b.n	8000714 <USB_LP_IRQHandler+0x6c>
  if(USB->ISTR & USB_ISTR_RESET){
 800072e:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000732:	0559      	lsls	r1, r3, #21
 8000734:	d52c      	bpl.n	8000790 <USB_LP_IRQHandler+0xe8>
    usb_class_disconnect();
 8000736:	f7ff fe37 	bl	80003a8 <usb_class_disconnect>
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 800073a:	f44f 431e 	mov.w	r3, #40448	; 0x9e00
    lastaddr = LASTADDR_DEFAULT;
 800073e:	2240      	movs	r2, #64	; 0x40
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000740:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 8000744:	4b26      	ldr	r3, [pc, #152]	; (80007e0 <USB_LP_IRQHandler+0x138>)
 8000746:	4925      	ldr	r1, [pc, #148]	; (80007dc <USB_LP_IRQHandler+0x134>)
 8000748:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 800074a:	2380      	movs	r3, #128	; 0x80
 800074c:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 8000750:	2408      	movs	r4, #8
 8000752:	4b24      	ldr	r3, [pc, #144]	; (80007e4 <USB_LP_IRQHandler+0x13c>)
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000754:	4a24      	ldr	r2, [pc, #144]	; (80007e8 <USB_LP_IRQHandler+0x140>)
 8000756:	3c01      	subs	r4, #1
 8000758:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
 800075c:	f841 2b04 	str.w	r2, [r1], #4
 8000760:	f843 2b04 	str.w	r2, [r3], #4
 8000764:	d1f7      	bne.n	8000756 <USB_LP_IRQHandler+0xae>
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000766:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 800076a:	4b1b      	ldr	r3, [pc, #108]	; (80007d8 <USB_LP_IRQHandler+0x130>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 800076c:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 800076e:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000772:	4620      	mov	r0, r4
 8000774:	4b1d      	ldr	r3, [pc, #116]	; (80007ec <USB_LP_IRQHandler+0x144>)
 8000776:	2208      	movs	r2, #8
 8000778:	f7ff fe66 	bl	8000448 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 800077c:	4b1c      	ldr	r3, [pc, #112]	; (80007f0 <USB_LP_IRQHandler+0x148>)
 800077e:	2208      	movs	r2, #8
 8000780:	4621      	mov	r1, r4
 8000782:	2080      	movs	r0, #128	; 0x80
 8000784:	f7ff fe60 	bl	8000448 <usb_ep_init>
    ep0_buf = NULL;
 8000788:	4b1a      	ldr	r3, [pc, #104]	; (80007f4 <USB_LP_IRQHandler+0x14c>)
 800078a:	601c      	str	r4, [r3, #0]
    usb_class_init();
 800078c:	f000 faf8 	bl	8000d80 <usb_class_init>
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000790:	4c11      	ldr	r4, [pc, #68]	; (80007d8 <USB_LP_IRQHandler+0x130>)
 8000792:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000796:	051a      	lsls	r2, r3, #20
 8000798:	d50b      	bpl.n	80007b2 <USB_LP_IRQHandler+0x10a>
    usb_class_disconnect();
 800079a:	f7ff fe05 	bl	80003a8 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 800079e:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 80007a2:	f043 030c 	orr.w	r3, r3, #12
 80007a6:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 80007aa:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 80007ae:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 80007b2:	4a09      	ldr	r2, [pc, #36]	; (80007d8 <USB_LP_IRQHandler+0x130>)
 80007b4:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 80007b8:	04db      	lsls	r3, r3, #19
 80007ba:	d5ab      	bpl.n	8000714 <USB_LP_IRQHandler+0x6c>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 80007bc:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 80007c0:	f023 030c 	bic.w	r3, r3, #12
 80007c4:	041b      	lsls	r3, r3, #16
 80007c6:	0c1b      	lsrs	r3, r3, #16
 80007c8:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 80007cc:	f64e 73ff 	movw	r3, #61439	; 0xefff
 80007d0:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 80007d4:	e79e      	b.n	8000714 <USB_LP_IRQHandler+0x6c>
 80007d6:	bf00      	nop
 80007d8:	40005c00 	andmi	r5, r0, r0, lsl #24
 80007dc:	2000027c 	andcs	r0, r0, ip, ror r2
 80007e0:	20000000 	andcs	r0, r0, r0
 80007e4:	2000025c 	andcs	r0, r0, ip, asr r2
 80007e8:	080003a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9}
 80007ec:	080008db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, fp}
 80007f0:	0800084d 	stmdaeq	r0, {r0, r2, r3, r6, fp}
 80007f4:	20000028 	andcs	r0, r0, r8, lsr #32

080007f8 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size){
 80007f8:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80007fa:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80007fc:	00c4      	lsls	r4, r0, #3
 80007fe:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000802:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000806:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000808:	1c56      	adds	r6, r2, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800080a:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800080e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 8000812:	0876      	lsrs	r6, r6, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000814:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000816:	b2af      	uxth	r7, r5
 8000818:	42be      	cmp	r6, r7
 800081a:	d811      	bhi.n	8000840 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800081c:	0840      	lsrs	r0, r0, #1
 800081e:	0080      	lsls	r0, r0, #2
 8000820:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 8000824:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000826:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800082a:	8803      	ldrh	r3, [r0, #0]
 800082c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000830:	051b      	lsls	r3, r3, #20
 8000832:	0d1b      	lsrs	r3, r3, #20
 8000834:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000838:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 800083c:	8003      	strh	r3, [r0, #0]
}
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000840:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 8000844:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 8000848:	3501      	adds	r5, #1
 800084a:	e7e4      	b.n	8000816 <_usb_ep_write+0x1e>

0800084c <ep0_in>:
static void ep0_in(uint8_t epnum){
 800084c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(ep0_buf == NULL)return;
 800084e:	4c0b      	ldr	r4, [pc, #44]	; (800087c <ep0_in+0x30>)
 8000850:	6825      	ldr	r5, [r4, #0]
 8000852:	b195      	cbz	r5, 800087a <ep0_in+0x2e>
  uint16_t left = ep0_count;
 8000854:	88a7      	ldrh	r7, [r4, #4]

#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint16_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000856:	4629      	mov	r1, r5
 8000858:	2f08      	cmp	r7, #8
 800085a:	463e      	mov	r6, r7
 800085c:	bf28      	it	cs
 800085e:	2608      	movcs	r6, #8
 8000860:	2000      	movs	r0, #0
 8000862:	4632      	mov	r2, r6
 8000864:	f7ff ffc8 	bl	80007f8 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 8000868:	2f07      	cmp	r7, #7
  ep0_count -= left;
 800086a:	eba7 0306 	sub.w	r3, r7, r6
 800086e:	80a3      	strh	r3, [r4, #4]
    ep0_buf = NULL;
 8000870:	bf93      	iteet	ls
 8000872:	2300      	movls	r3, #0
  ep0_buf += left;
 8000874:	19ad      	addhi	r5, r5, r6
 8000876:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 8000878:	6023      	strls	r3, [r4, #0]
}
 800087a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800087c:	20000028 	andcs	r0, r0, r8, lsr #32

08000880 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000880:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000882:	00c2      	lsls	r2, r0, #3
 8000884:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8000888:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 800088c:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 800088e:	6850      	ldr	r0, [r2, #4]
 8000890:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 8000894:	b300      	cbz	r0, 80008d8 <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000896:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 8000898:	1c44      	adds	r4, r0, #1
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800089a:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 800089e:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 80008a2:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 80008a4:	1064      	asrs	r4, r4, #1
 80008a6:	3902      	subs	r1, #2
 80008a8:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 80008ac:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 80008b0:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 80008b2:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 80008b6:	d1f9      	bne.n	80008ac <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 80008b8:	085b      	lsrs	r3, r3, #1
 80008ba:	009b      	lsls	r3, r3, #2
 80008bc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80008c0:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80008c4:	881a      	ldrh	r2, [r3, #0]
 80008c6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80008ca:	0492      	lsls	r2, r2, #18
 80008cc:	0c92      	lsrs	r2, r2, #18
 80008ce:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 80008d2:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 80008d6:	801a      	strh	r2, [r3, #0]
  return sz;
}
 80008d8:	bd30      	pop	{r4, r5, pc}

080008da <ep0_out>:
static void ep0_out(uint8_t epnum){
 80008da:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 80008dc:	4b46      	ldr	r3, [pc, #280]	; (80009f8 <ep0_out+0x11e>)
 80008de:	4c47      	ldr	r4, [pc, #284]	; (80009fc <ep0_out+0x122>)
 80008e0:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 80008e2:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80008e6:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 80008e8:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 80008ec:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 80008f0:	d009      	beq.n	8000906 <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 80008f2:	f994 3006 	ldrsb.w	r3, [r4, #6]
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	da17      	bge.n	800092a <ep0_out+0x50>
      bytesread = 0;
 80008fa:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80008fc:	4940      	ldr	r1, [pc, #256]	; (8000a00 <ep0_out+0x126>)
 80008fe:	2001      	movs	r0, #1
 8000900:	f7ff ffbe 	bl	8000880 <_usb_ep_read>
 8000904:	81e5      	strh	r5, [r4, #14]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000906:	79a2      	ldrb	r2, [r4, #6]
 8000908:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 800090c:	0612      	lsls	r2, r2, #24
 800090e:	d53c      	bpl.n	800098a <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 8000910:	b34e      	cbz	r6, 8000966 <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000912:	bb73      	cbnz	r3, 8000972 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 8000914:	79e0      	ldrb	r0, [r4, #7]
 8000916:	2806      	cmp	r0, #6
 8000918:	d00c      	beq.n	8000934 <ep0_out+0x5a>
 800091a:	2808      	cmp	r0, #8
 800091c:	d025      	beq.n	800096a <ep0_out+0x90>
 800091e:	bb40      	cbnz	r0, 8000972 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000920:	2202      	movs	r2, #2
 8000922:	4938      	ldr	r1, [pc, #224]	; (8000a04 <ep0_out+0x12a>)
 8000924:	f7ff ff68 	bl	80007f8 <_usb_ep_write>
 8000928:	e01d      	b.n	8000966 <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 800092a:	89a2      	ldrh	r2, [r4, #12]
 800092c:	89e3      	ldrh	r3, [r4, #14]
 800092e:	429a      	cmp	r2, r3
 8000930:	d8e9      	bhi.n	8000906 <ep0_out+0x2c>
 8000932:	e7e2      	b.n	80008fa <ep0_out+0x20>
          const void *data = ZLPP;
 8000934:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000936:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 8000938:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800093a:	8920      	ldrh	r0, [r4, #8]
 800093c:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000940:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000944:	f000 f99e 	bl	8000c84 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000948:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800094c:	89a3      	ldrh	r3, [r4, #12]
  ep0_in(0x80);
 800094e:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000950:	429a      	cmp	r2, r3
 8000952:	bf88      	it	hi
 8000954:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 8000958:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800095c:	80a3      	strh	r3, [r4, #4]
  ep0_buf = (uint8_t*)buf;
 800095e:	9b01      	ldr	r3, [sp, #4]
 8000960:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 8000962:	f7ff ff73 	bl	800084c <ep0_in>
}
 8000966:	b002      	add	sp, #8
 8000968:	bd70      	pop	{r4, r5, r6, pc}
 800096a:	2201      	movs	r2, #1
 800096c:	4926      	ldr	r1, [pc, #152]	; (8000a08 <ep0_out+0x12e>)
 800096e:	4618      	mov	r0, r3
 8000970:	e7d8      	b.n	8000924 <ep0_out+0x4a>
    void *data = ZLPP;
 8000972:	2301      	movs	r3, #1
 8000974:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 8000976:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000978:	f10d 0202 	add.w	r2, sp, #2
 800097c:	a901      	add	r1, sp, #4
 800097e:	4820      	ldr	r0, [pc, #128]	; (8000a00 <ep0_out+0x126>)
    uint16_t size = 0;
 8000980:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000984:	f000 f9cc 	bl	8000d20 <usb_class_ep0_in>
 8000988:	e7de      	b.n	8000948 <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 800098a:	b9db      	cbnz	r3, 80009c4 <ep0_out+0xea>
      if(setup_packet.bRequest == SET_ADDRESS){
 800098c:	79e2      	ldrb	r2, [r4, #7]
 800098e:	2a05      	cmp	r2, #5
 8000990:	d110      	bne.n	80009b4 <ep0_out+0xda>
 8000992:	461a      	mov	r2, r3
 8000994:	4619      	mov	r1, r3
 8000996:	4618      	mov	r0, r3
        uint8_t USB_Addr = setup_packet.wValue;
 8000998:	7a24      	ldrb	r4, [r4, #8]
 800099a:	f7ff ff2d 	bl	80007f8 <_usb_ep_write>
        while( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID ){}
 800099e:	4a1b      	ldr	r2, [pc, #108]	; (8000a0c <ep0_out+0x132>)
 80009a0:	8813      	ldrh	r3, [r2, #0]
 80009a2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80009a6:	2b30      	cmp	r3, #48	; 0x30
 80009a8:	d0fa      	beq.n	80009a0 <ep0_out+0xc6>
        USB->DADDR = USB_DADDR_EF | USB_Addr;
 80009aa:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80009ae:	f8a2 404c 	strh.w	r4, [r2, #76]	; 0x4c
        return;
 80009b2:	e7d8      	b.n	8000966 <ep0_out+0x8c>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 80009b4:	2a09      	cmp	r2, #9
 80009b6:	d105      	bne.n	80009c4 <ep0_out+0xea>
        configuration = setup_packet.wValue;
 80009b8:	8922      	ldrh	r2, [r4, #8]
 80009ba:	7422      	strb	r2, [r4, #16]
 80009bc:	2200      	movs	r2, #0
 80009be:	4611      	mov	r1, r2
 80009c0:	4610      	mov	r0, r2
 80009c2:	e7af      	b.n	8000924 <ep0_out+0x4a>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 80009c4:	462a      	mov	r2, r5
 80009c6:	89e1      	ldrh	r1, [r4, #14]
 80009c8:	480d      	ldr	r0, [pc, #52]	; (8000a00 <ep0_out+0x126>)
 80009ca:	f000 f9c0 	bl	8000d4e <usb_class_ep0_out>
 80009ce:	b950      	cbnz	r0, 80009e6 <ep0_out+0x10c>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 80009d0:	4a0e      	ldr	r2, [pc, #56]	; (8000a0c <ep0_out+0x132>)
 80009d2:	8813      	ldrh	r3, [r2, #0]
 80009d4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80009d8:	049b      	lsls	r3, r3, #18
 80009da:	0c9b      	lsrs	r3, r3, #18
 80009dc:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 80009e0:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 80009e4:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 80009e6:	89e3      	ldrh	r3, [r4, #14]
 80009e8:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80009ea:	89a3      	ldrh	r3, [r4, #12]
    bytesread += rxcount;
 80009ec:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80009ee:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80009f0:	81e5      	strh	r5, [r4, #14]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80009f2:	d8b8      	bhi.n	8000966 <ep0_out+0x8c>
 80009f4:	e7e2      	b.n	80009bc <ep0_out+0xe2>
 80009f6:	bf00      	nop
 80009f8:	40006000 	andmi	r6, r0, r0
 80009fc:	20000028 	andcs	r0, r0, r8, lsr #32
 8000a00:	2000002e 	andcs	r0, r0, lr, lsr #32
 8000a04:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 8000a08:	20000038 	andcs	r0, r0, r8, lsr r0
 8000a0c:	40005c00 	andmi	r5, r0, r0, lsl #24

08000a10 <mic_in_callback>:
  epnum &= 0x0F;
 8000a10:	f000 000f 	and.w	r0, r0, #15

volatile int16_t adc_buffer[ADC_SIZE];

volatile uint8_t adc_idx = 0;

static void mic_in_callback(uint8_t epnum){
 8000a14:	b538      	push	{r3, r4, r5, lr}
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000a16:	0083      	lsls	r3, r0, #2
  usb_ep_write_double( epnum, (void*)adc_buffer, (adc_idx+1)*2 );
 8000a18:	4d0e      	ldr	r5, [pc, #56]	; (8000a54 <mic_in_callback+0x44>)
 8000a1a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000a1e:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000a22:	782a      	ldrb	r2, [r5, #0]
 8000a24:	881c      	ldrh	r4, [r3, #0]
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000a26:	8819      	ldrh	r1, [r3, #0]
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000a28:	f3c4 3480 	ubfx	r4, r4, #14, #1
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000a2c:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 8000a30:	0509      	lsls	r1, r1, #20
 8000a32:	0d09      	lsrs	r1, r1, #20
 8000a34:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8000a38:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000a3c:	3201      	adds	r2, #1
 8000a3e:	8019      	strh	r1, [r3, #0]
  _usb_ep_write(idx, buf, size);
 8000a40:	0052      	lsls	r2, r2, #1
 8000a42:	4905      	ldr	r1, [pc, #20]	; (8000a58 <mic_in_callback+0x48>)
 8000a44:	eb04 0040 	add.w	r0, r4, r0, lsl #1
 8000a48:	f7ff fed6 	bl	80007f8 <_usb_ep_write>
  adc_idx = 0;
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	702b      	strb	r3, [r5, #0]
};
 8000a50:	bd38      	pop	{r3, r4, r5, pc}
 8000a52:	bf00      	nop
 8000a54:	2000003c 	andcs	r0, r0, ip, lsr r0
 8000a58:	2000029e 	mulcs	r0, lr, r2

08000a5c <adc_outfilter>:

#define OFILTER_PWR	8
#define OFILTER_MLT	4
uint16_t adc_outfilter(uint16_t curval){
  static uint32_t filter = (2048<<(OFILTER_PWR+OFILTER_MLT));
  filter += (curval << OFILTER_MLT) - (filter >> OFILTER_PWR);
 8000a5c:	4a04      	ldr	r2, [pc, #16]	; (8000a70 <adc_outfilter+0x14>)
 8000a5e:	6813      	ldr	r3, [r2, #0]
 8000a60:	eba3 2313 	sub.w	r3, r3, r3, lsr #8
 8000a64:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 8000a68:	6010      	str	r0, [r2, #0]
  return (filter>>OFILTER_PWR);
}
 8000a6a:	f3c0 200f 	ubfx	r0, r0, #8, #16
 8000a6e:	4770      	bx	lr
 8000a70:	20000004 	andcs	r0, r0, r4

08000a74 <midfilter>:

#define MIDFILTER_PWR	10
uint16_t midfilter(uint16_t curval){
  static uint32_t filter = (2048<<MIDFILTER_PWR);
  filter += curval - (filter>>MIDFILTER_PWR);
 8000a74:	4a04      	ldr	r2, [pc, #16]	; (8000a88 <midfilter+0x14>)
 8000a76:	6853      	ldr	r3, [r2, #4]
 8000a78:	eba3 2393 	sub.w	r3, r3, r3, lsr #10
 8000a7c:	4418      	add	r0, r3
 8000a7e:	6050      	str	r0, [r2, #4]
  return (filter >> MIDFILTER_PWR);
}
 8000a80:	f3c0 208f 	ubfx	r0, r0, #10, #16
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop
 8000a88:	20000004 	andcs	r0, r0, r4

08000a8c <adc_infilter>:
#define INFILTER_PWR 0
uint16_t adc_infilter(uint16_t curval){
  static uint32_t filter = (2048<<INFILTER_PWR);
  filter += curval - (filter>>INFILTER_PWR);
  return (filter >> INFILTER_PWR);
}
 8000a8c:	4770      	bx	lr

08000a8e <ADC1_IRQHandler>:

volatile uint8_t adc_timeH = 0;
volatile uint16_t adc_timeL = 0;
void ADC1_IRQHandler(){
 8000a8e:	b510      	push	{r4, lr}
  static uint8_t oversampl_cnt = 0;
  static uint16_t curval = 0;
  
  //Read ADC with oversampling
  if(oversampl_cnt == 0)curval = 0;
 8000a90:	491b      	ldr	r1, [pc, #108]	; (8000b00 <ADC1_IRQHandler+0x72>)
 8000a92:	784b      	ldrb	r3, [r1, #1]
 8000a94:	b903      	cbnz	r3, 8000a98 <ADC1_IRQHandler+0xa>
 8000a96:	804b      	strh	r3, [r1, #2]
  curval += ADC1->DR;
 8000a98:	4a1a      	ldr	r2, [pc, #104]	; (8000b04 <ADC1_IRQHandler+0x76>)
  oversampl_cnt++;
 8000a9a:	3301      	adds	r3, #1
  curval += ADC1->DR;
 8000a9c:	6d94      	ldr	r4, [r2, #88]	; 0x58
 8000a9e:	884a      	ldrh	r2, [r1, #2]
  oversampl_cnt++;
 8000aa0:	b2db      	uxtb	r3, r3
  curval += ADC1->DR;
 8000aa2:	4414      	add	r4, r2
 8000aa4:	b2a4      	uxth	r4, r4
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 8000aa6:	2b03      	cmp	r3, #3
  curval += ADC1->DR;
 8000aa8:	804c      	strh	r4, [r1, #2]
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 8000aaa:	d801      	bhi.n	8000ab0 <ADC1_IRQHandler+0x22>
  oversampl_cnt++;
 8000aac:	704b      	strb	r3, [r1, #1]
  //adc_timeH - count of full conversions
  if(adc_timeH<255)adc_timeH++;
  adc_timeL = TIM2->CNT;

  ADC1->SR &=~ADC_SR_EOC;
}
 8000aae:	bd10      	pop	{r4, pc}
  oversampl_cnt = 0;
 8000ab0:	2300      	movs	r3, #0
  curval /= OVERSAMPL_COUNT;
 8000ab2:	08a4      	lsrs	r4, r4, #2
  int32_t midval = midfilter(cval);
 8000ab4:	4620      	mov	r0, r4
  oversampl_cnt = 0;
 8000ab6:	704b      	strb	r3, [r1, #1]
  curval /= OVERSAMPL_COUNT;
 8000ab8:	804c      	strh	r4, [r1, #2]
  int32_t midval = midfilter(cval);
 8000aba:	f7ff ffdb 	bl	8000a74 <midfilter>
  if(adc_idx < ADC_SIZE){
 8000abe:	780b      	ldrb	r3, [r1, #0]
 8000ac0:	2b2b      	cmp	r3, #43	; 0x2b
 8000ac2:	d80b      	bhi.n	8000adc <ADC1_IRQHandler+0x4e>
    adc_buffer[adc_idx] = midval;
 8000ac4:	780b      	ldrb	r3, [r1, #0]
  midval = (((int32_t)cval)) - midval;
 8000ac6:	1a24      	subs	r4, r4, r0
  midval <<= 3; //ADC resolution is 0-4095. midval=0-4095. Diff=-4095..+4095 (2**12); Output = -32768..+32767 (2**15) => Kampl=8
 8000ac8:	00e4      	lsls	r4, r4, #3
    adc_buffer[adc_idx] = midval;
 8000aca:	4a0f      	ldr	r2, [pc, #60]	; (8000b08 <ADC1_IRQHandler+0x7a>)
 8000acc:	b2db      	uxtb	r3, r3
 8000ace:	b224      	sxth	r4, r4
 8000ad0:	f822 4013 	strh.w	r4, [r2, r3, lsl #1]
    adc_idx++;
 8000ad4:	780b      	ldrb	r3, [r1, #0]
 8000ad6:	3301      	adds	r3, #1
 8000ad8:	b2db      	uxtb	r3, r3
 8000ada:	700b      	strb	r3, [r1, #0]
  if(adc_timeH<255)adc_timeH++;
 8000adc:	790b      	ldrb	r3, [r1, #4]
  ADC1->SR &=~ADC_SR_EOC;
 8000ade:	4a09      	ldr	r2, [pc, #36]	; (8000b04 <ADC1_IRQHandler+0x76>)
  if(adc_timeH<255)adc_timeH++;
 8000ae0:	2bff      	cmp	r3, #255	; 0xff
 8000ae2:	bf1f      	itttt	ne
 8000ae4:	790b      	ldrbne	r3, [r1, #4]
 8000ae6:	3301      	addne	r3, #1
 8000ae8:	b2db      	uxtbne	r3, r3
 8000aea:	710b      	strbne	r3, [r1, #4]
  adc_timeL = TIM2->CNT;
 8000aec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000af0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000af2:	b29b      	uxth	r3, r3
 8000af4:	80cb      	strh	r3, [r1, #6]
  ADC1->SR &=~ADC_SR_EOC;
 8000af6:	6813      	ldr	r3, [r2, #0]
 8000af8:	f023 0302 	bic.w	r3, r3, #2
 8000afc:	6013      	str	r3, [r2, #0]
 8000afe:	e7d6      	b.n	8000aae <ADC1_IRQHandler+0x20>
 8000b00:	2000003c 	andcs	r0, r0, ip, lsr r0
 8000b04:	40012400 	andmi	r2, r1, r0, lsl #8
 8000b08:	2000029e 	mulcs	r0, lr, r2

08000b0c <mic_sof>:

void mic_sof(){
  if(adc_timeH > ADC_SIZE){
 8000b0c:	4a17      	ldr	r2, [pc, #92]	; (8000b6c <mic_sof+0x60>)
 8000b0e:	7913      	ldrb	r3, [r2, #4]
 8000b10:	2b2c      	cmp	r3, #44	; 0x2c
 8000b12:	d909      	bls.n	8000b28 <mic_sof+0x1c>
    if(TIM2->ARR < TIM2_ARR_MAX) TIM2->ARR++;
 8000b14:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b18:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000b1a:	f5b1 7f35 	cmp.w	r1, #724	; 0x2d4
 8000b1e:	d21a      	bcs.n	8000b56 <mic_sof+0x4a>
  }else if(adc_timeH < ADC_SIZE){
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
  }else{
    if(adc_timeL > (TIM2->ARR/2)){
      TIM2->ARR++;
 8000b20:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000b22:	3101      	adds	r1, #1
    }else if(adc_timeL < (TIM2->ARR*3/4)){
      TIM2->ARR--;
 8000b24:	62d9      	str	r1, [r3, #44]	; 0x2c
 8000b26:	e016      	b.n	8000b56 <mic_sof+0x4a>
  }else if(adc_timeH < ADC_SIZE){
 8000b28:	7913      	ldrb	r3, [r2, #4]
 8000b2a:	2b2b      	cmp	r3, #43	; 0x2b
 8000b2c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b30:	d805      	bhi.n	8000b3e <mic_sof+0x32>
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
 8000b32:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000b34:	292d      	cmp	r1, #45	; 0x2d
 8000b36:	d90e      	bls.n	8000b56 <mic_sof+0x4a>
      TIM2->ARR--;
 8000b38:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000b3a:	3901      	subs	r1, #1
 8000b3c:	e7f2      	b.n	8000b24 <mic_sof+0x18>
    if(adc_timeL > (TIM2->ARR/2)){
 8000b3e:	88d1      	ldrh	r1, [r2, #6]
 8000b40:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8000b42:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 8000b46:	d8eb      	bhi.n	8000b20 <mic_sof+0x14>
    }else if(adc_timeL < (TIM2->ARR*3/4)){
 8000b48:	88d0      	ldrh	r0, [r2, #6]
 8000b4a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000b4c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8000b50:	ebb0 0f91 	cmp.w	r0, r1, lsr #2
 8000b54:	d3f0      	bcc.n	8000b38 <mic_sof+0x2c>
    }
  }
  TIM2->CNT = 0;
 8000b56:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000b5a:	2000      	movs	r0, #0
 8000b5c:	6258      	str	r0, [r3, #36]	; 0x24
  TIM2->CR1 |= TIM_CR1_URS;
 8000b5e:	6819      	ldr	r1, [r3, #0]
 8000b60:	f041 0104 	orr.w	r1, r1, #4
 8000b64:	6019      	str	r1, [r3, #0]
  adc_timeH = 0;
 8000b66:	7110      	strb	r0, [r2, #4]
}
 8000b68:	4770      	bx	lr
 8000b6a:	bf00      	nop
 8000b6c:	2000003c 	andcs	r0, r0, ip, lsr r0

08000b70 <hid_ep0_in>:
    USAGE( 0 ),
    FEATURE_HID16( HID_DATA |  HID_VAR | HID_ABS | HID_BUF ),
  )
};

char hid_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000b70:	b510      	push	{r4, lr}
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 8000b72:	7803      	ldrb	r3, [r0, #0]
 8000b74:	2b81      	cmp	r3, #129	; 0x81
 8000b76:	d10c      	bne.n	8000b92 <hid_ep0_in+0x22>
    if( req->bRequest == GET_DESCRIPTOR ){
 8000b78:	7843      	ldrb	r3, [r0, #1]
 8000b7a:	2b06      	cmp	r3, #6
 8000b7c:	d116      	bne.n	8000bac <hid_ep0_in+0x3c>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 8000b7e:	8843      	ldrh	r3, [r0, #2]
 8000b80:	f5b3 5f08 	cmp.w	r3, #8704	; 0x2200
 8000b84:	d112      	bne.n	8000bac <hid_ep0_in+0x3c>
        *data = (void**)&USB_HIDDescriptor;
 8000b86:	4b0a      	ldr	r3, [pc, #40]	; (8000bb0 <hid_ep0_in+0x40>)
        *size = sizeof(USB_HIDDescriptor);
        return 1;
 8000b88:	2001      	movs	r0, #1
        *data = (void**)&USB_HIDDescriptor;
 8000b8a:	600b      	str	r3, [r1, #0]
        *size = sizeof(USB_HIDDescriptor);
 8000b8c:	2315      	movs	r3, #21
 8000b8e:	8013      	strh	r3, [r2, #0]
      *size = sizeof(hid_data_t);
      return 1;
    }
  }
  return 0;
}
 8000b90:	bd10      	pop	{r4, pc}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE | 0x80) ){
 8000b92:	2ba1      	cmp	r3, #161	; 0xa1
 8000b94:	d10a      	bne.n	8000bac <hid_ep0_in+0x3c>
    if( req->bRequest == HIDREQ_GET_REPORT ){
 8000b96:	7840      	ldrb	r0, [r0, #1]
 8000b98:	2801      	cmp	r0, #1
 8000b9a:	d107      	bne.n	8000bac <hid_ep0_in+0x3c>
      resdata.data = 0;
 8000b9c:	2400      	movs	r4, #0
 8000b9e:	4b05      	ldr	r3, [pc, #20]	; (8000bb4 <hid_ep0_in+0x44>)
 8000ba0:	f823 4f08 	strh.w	r4, [r3, #8]!
      *data = (void*)&resdata;
 8000ba4:	600b      	str	r3, [r1, #0]
      *size = sizeof(hid_data_t);
 8000ba6:	2302      	movs	r3, #2
 8000ba8:	8013      	strh	r3, [r2, #0]
      return 1;
 8000baa:	e7f1      	b.n	8000b90 <hid_ep0_in+0x20>
  return 0;
 8000bac:	2000      	movs	r0, #0
 8000bae:	e7ef      	b.n	8000b90 <hid_ep0_in+0x20>
 8000bb0:	080017ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl, ip}
 8000bb4:	2000003c 	andcs	r0, r0, ip, lsr r0

08000bb8 <hid_ep0_out>:

char hid_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000bb8:	b510      	push	{r4, lr}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000bba:	7803      	ldrb	r3, [r0, #0]
 8000bbc:	2b21      	cmp	r3, #33	; 0x21
 8000bbe:	d123      	bne.n	8000c08 <hid_ep0_out+0x50>
    if( req->bRequest == HIDREQ_SET_REPORT ){
 8000bc0:	7843      	ldrb	r3, [r0, #1]
 8000bc2:	2b09      	cmp	r3, #9
 8000bc4:	d120      	bne.n	8000c08 <hid_ep0_out+0x50>
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000bc6:	b1ea      	cbz	r2, 8000c04 <hid_ep0_out+0x4c>
      //анализом запроса не заморачиваемя. Считаем, что ничего кроме нужного не придет
      if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000bc8:	2a02      	cmp	r2, #2
 8000bca:	d11d      	bne.n	8000c08 <hid_ep0_out+0x50>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000bcc:	4c0f      	ldr	r4, [pc, #60]	; (8000c0c <hid_ep0_out+0x54>)
 8000bce:	2001      	movs	r0, #1
 8000bd0:	4621      	mov	r1, r4
 8000bd2:	f7ff fe55 	bl	8000880 <_usb_ep_read>
      usb_ep_read(0, (void*)&hid_data);
      
      //PA0-PA7 + PB8-PB15 = hid_data
      uint16_t temp = GPIOA->ODR;
 8000bd6:	490e      	ldr	r1, [pc, #56]	; (8000c10 <hid_ep0_out+0x58>)
 8000bd8:	694b      	ldr	r3, [r1, #20]
      temp = (temp & 0xFF00) | (hid_data.data & 0x00FF);
 8000bda:	8822      	ldrh	r2, [r4, #0]
 8000bdc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8000be0:	b2d2      	uxtb	r2, r2
      GPIOA->ODR = temp;
 8000be2:	4313      	orrs	r3, r2
 8000be4:	614b      	str	r3, [r1, #20]
      
      temp = GPIOB->ODR;
 8000be6:	f8d1 3414 	ldr.w	r3, [r1, #1044]	; 0x414
      temp = (temp & 0x00FF) | (hid_data.data & 0xFF00);
 8000bea:	8822      	ldrh	r2, [r4, #0]
 8000bec:	b2db      	uxtb	r3, r3
 8000bee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
      GPIOB->ODR = temp;
 8000bf2:	4313      	orrs	r3, r2
 8000bf4:	f8c1 3414 	str.w	r3, [r1, #1044]	; 0x414
#ifndef _SYSTICK_H_
#define _SYSTICK_H_

#include <inttypes.h>
extern volatile uint32_t systick_internal;
inline uint32_t systick_ms(){return systick_internal;}
 8000bf8:	4b06      	ldr	r3, [pc, #24]	; (8000c14 <hid_ep0_out+0x5c>)
      
      //GPO_T( BLED );
      hid_timeout = systick_ms() + HID_TIMEOUT_MS;
 8000bfa:	4a07      	ldr	r2, [pc, #28]	; (8000c18 <hid_ep0_out+0x60>)
 8000bfc:	681b      	ldr	r3, [r3, #0]
 8000bfe:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000c02:	60d3      	str	r3, [r2, #12]
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000c04:	2001      	movs	r0, #1
      
      return 1;
    }
  }
  return 0;
}
 8000c06:	bd10      	pop	{r4, pc}
  return 0;
 8000c08:	2000      	movs	r0, #0
 8000c0a:	e7fc      	b.n	8000c06 <hid_ep0_out+0x4e>
 8000c0c:	2000029c 	mulcs	r0, ip, r2
 8000c10:	40020000 	andmi	r0, r2, r0
 8000c14:	20000024 	andcs	r0, r0, r4, lsr #32
 8000c18:	2000003c 	andcs	r0, r0, ip, lsr r0

08000c1c <hid_init>:

void hid_init(){
  //PA0-PA7 = GPIO_PP50
  GPIOA->MODER = (GPIOA->MODER &~ (0b11 * 0x00005555)) | (GPIO_PP * 0x00005555);
 8000c1c:	4a10      	ldr	r2, [pc, #64]	; (8000c60 <hid_init+0x44>)
  GPIOA->OSPEEDR = (GPIOA->OSPEEDR &~ (0b11 * 0x00005555)) | (GPIO_VS * 0x00005555);
 8000c1e:	4911      	ldr	r1, [pc, #68]	; (8000c64 <hid_init+0x48>)
  GPIOA->MODER = (GPIOA->MODER &~ (0b11 * 0x00005555)) | (GPIO_PP * 0x00005555);
 8000c20:	6813      	ldr	r3, [r2, #0]
 8000c22:	0c1b      	lsrs	r3, r3, #16
 8000c24:	041b      	lsls	r3, r3, #16
 8000c26:	f443 43aa 	orr.w	r3, r3, #21760	; 0x5500
 8000c2a:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 8000c2e:	6013      	str	r3, [r2, #0]
  GPIOA->OSPEEDR = (GPIOA->OSPEEDR &~ (0b11 * 0x00005555)) | (GPIO_VS * 0x00005555);
 8000c30:	6893      	ldr	r3, [r2, #8]
 8000c32:	400b      	ands	r3, r1
 8000c34:	f443 337f 	orr.w	r3, r3, #261120	; 0x3fc00
 8000c38:	f443 737f 	orr.w	r3, r3, #1020	; 0x3fc
 8000c3c:	6093      	str	r3, [r2, #8]
  //PB8-PB15 = GPIO_PP50
  GPIOB->MODER = (GPIOB->MODER &~ (0b11 * 0x55550000U)) | (GPIO_PP * 0x55550000U);
 8000c3e:	f8d2 3400 	ldr.w	r3, [r2, #1024]	; 0x400
 8000c42:	b29b      	uxth	r3, r3
 8000c44:	f043 43aa 	orr.w	r3, r3, #1426063360	; 0x55000000
 8000c48:	f443 03aa 	orr.w	r3, r3, #5570560	; 0x550000
 8000c4c:	f8c2 3400 	str.w	r3, [r2, #1024]	; 0x400
  GPIOB->OSPEEDR = (GPIOB->OSPEEDR &~ (0b11 * 0x55550000U)) | (GPIO_VS * 0x55550000U);
 8000c50:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8000c54:	b29b      	uxth	r3, r3
 8000c56:	430b      	orrs	r3, r1
 8000c58:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
}
 8000c5c:	4770      	bx	lr
 8000c5e:	bf00      	nop
 8000c60:	40020000 	andmi	r0, r2, r0
 8000c64:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000

08000c68 <hid_poll>:
 8000c68:	4b04      	ldr	r3, [pc, #16]	; (8000c7c <hid_poll+0x14>)
 8000c6a:	681a      	ldr	r2, [r3, #0]

void hid_poll(){
  if(systick_ms() > hid_timeout){
 8000c6c:	4b04      	ldr	r3, [pc, #16]	; (8000c80 <hid_poll+0x18>)
 8000c6e:	68d9      	ldr	r1, [r3, #12]
 8000c70:	4291      	cmp	r1, r2
    hid_timeout = 0xFFFFFFFF;
 8000c72:	bf3c      	itt	cc
 8000c74:	f04f 32ff 	movcc.w	r2, #4294967295	; 0xffffffff
 8000c78:	60da      	strcc	r2, [r3, #12]
    //GPO_OFF(BLED);
  }
}
 8000c7a:	4770      	bx	lr
 8000c7c:	20000024 	andcs	r0, r0, r4, lsr #32
 8000c80:	2000003c 	andcs	r0, r0, ip, lsr r0

08000c84 <usb_class_get_std_descr>:
USB_STRING(USB_String_PROGR, u"STFLASH");
USB_STRING(USB_String_LOG, u"LOG");


void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000c84:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8000c88:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000c8c:	d010      	beq.n	8000cb0 <usb_class_get_std_descr+0x2c>
 8000c8e:	d803      	bhi.n	8000c98 <usb_class_get_std_descr+0x14>
 8000c90:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c94:	d007      	beq.n	8000ca6 <usb_class_get_std_descr+0x22>
 8000c96:	4770      	bx	lr
 8000c98:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000c9c:	d011      	beq.n	8000cc2 <usb_class_get_std_descr+0x3e>
 8000c9e:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000ca2:	d00a      	beq.n	8000cba <usb_class_get_std_descr+0x36>
 8000ca4:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 8000ca6:	4b14      	ldr	r3, [pc, #80]	; (8000cf8 <usb_class_get_std_descr+0x74>)
 8000ca8:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 8000caa:	2312      	movs	r3, #18
          *data = &USB_String_LOG;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000cac:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 8000cae:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000cb0:	4b12      	ldr	r3, [pc, #72]	; (8000cfc <usb_class_get_std_descr+0x78>)
 8000cb2:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000cb4:	f44f 73a2 	mov.w	r3, #324	; 0x144
 8000cb8:	e7f8      	b.n	8000cac <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000cba:	4b11      	ldr	r3, [pc, #68]	; (8000d00 <usb_class_get_std_descr+0x7c>)
 8000cbc:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000cbe:	230a      	movs	r3, #10
 8000cc0:	e7f4      	b.n	8000cac <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000cc2:	b2c0      	uxtb	r0, r0
 8000cc4:	2806      	cmp	r0, #6
 8000cc6:	d8f2      	bhi.n	8000cae <usb_class_get_std_descr+0x2a>
 8000cc8:	e8df f000 	tbb	[pc, r0]
 8000ccc:	0d0b0904 	vstreq.16	s0, [fp, #-8]	; <UNPREDICTABLE>
 8000cd0:	0013110f 	andseq	r1, r3, pc, lsl #2
          *data = &USB_StringLangDescriptor;
 8000cd4:	4b0b      	ldr	r3, [pc, #44]	; (8000d04 <usb_class_get_std_descr+0x80>)
          *data = &USB_String_LOG;
 8000cd6:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000cd8:	680b      	ldr	r3, [r1, #0]
 8000cda:	781b      	ldrb	r3, [r3, #0]
 8000cdc:	e7e6      	b.n	8000cac <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 8000cde:	4b0a      	ldr	r3, [pc, #40]	; (8000d08 <usb_class_get_std_descr+0x84>)
 8000ce0:	e7f9      	b.n	8000cd6 <usb_class_get_std_descr+0x52>
          *data = &USB_StringProdDescriptor;
 8000ce2:	4b0a      	ldr	r3, [pc, #40]	; (8000d0c <usb_class_get_std_descr+0x88>)
 8000ce4:	e7f7      	b.n	8000cd6 <usb_class_get_std_descr+0x52>
          *data = &USB_StringSerialDescriptor;
 8000ce6:	4b0a      	ldr	r3, [pc, #40]	; (8000d10 <usb_class_get_std_descr+0x8c>)
 8000ce8:	e7f5      	b.n	8000cd6 <usb_class_get_std_descr+0x52>
          *data = &USB_String_TTY;
 8000cea:	4b0a      	ldr	r3, [pc, #40]	; (8000d14 <usb_class_get_std_descr+0x90>)
 8000cec:	e7f3      	b.n	8000cd6 <usb_class_get_std_descr+0x52>
          *data = &USB_String_PROGR;
 8000cee:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <usb_class_get_std_descr+0x94>)
 8000cf0:	e7f1      	b.n	8000cd6 <usb_class_get_std_descr+0x52>
          *data = &USB_String_LOG;
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <usb_class_get_std_descr+0x98>)
 8000cf4:	e7ef      	b.n	8000cd6 <usb_class_get_std_descr+0x52>
 8000cf6:	bf00      	nop
 8000cf8:	080017e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, sl, ip}
 8000cfc:	080017f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sl, ip}
 8000d00:	08001939 	stmdaeq	r0, {r0, r3, r4, r5, r8, fp, ip}
 8000d04:	08001944 	stmdaeq	r0, {r2, r6, r8, fp, ip}
 8000d08:	08001948 	stmdaeq	r0, {r3, r6, r8, fp, ip}
 8000d0c:	0800195e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, fp, ip}
 8000d10:	08001988 	stmdaeq	r0, {r3, r7, r8, fp, ip}
 8000d14:	0800198c 	stmdaeq	r0, {r2, r3, r7, r8, fp, ip}
 8000d18:	08001994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip}
 8000d1c:	080019a4 	stmdaeq	r0, {r2, r5, r7, r8, fp, ip}

08000d20 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000d20:	b570      	push	{r4, r5, r6, lr}
 8000d22:	4604      	mov	r4, r0
 8000d24:	460d      	mov	r5, r1
 8000d26:	4616      	mov	r6, r2
  if( hid_ep0_in( req, data, size ) )return 1;
 8000d28:	f7ff ff22 	bl	8000b70 <hid_ep0_in>
 8000d2c:	b108      	cbz	r0, 8000d32 <usb_class_ep0_in+0x12>
 8000d2e:	2001      	movs	r0, #1
  if( mic_ep0_in( req, data, size ) )return 1;
  if( programmer_ep0_in( req, data, size ) )return 1;
  if( usb_log_ep0_in( req, data, size ) )return 1;
  return 0;
}
 8000d30:	bd70      	pop	{r4, r5, r6, pc}
  if( programmer_ep0_in( req, data, size ) )return 1;
 8000d32:	4620      	mov	r0, r4
 8000d34:	f000 f978 	bl	8001028 <programmer_ep0_in>
 8000d38:	2800      	cmp	r0, #0
 8000d3a:	d1f8      	bne.n	8000d2e <usb_class_ep0_in+0xe>
  if( usb_log_ep0_in( req, data, size ) )return 1;
 8000d3c:	4632      	mov	r2, r6
 8000d3e:	4629      	mov	r1, r5
 8000d40:	4620      	mov	r0, r4
 8000d42:	f000 fbdb 	bl	80014fc <usb_log_ep0_in>
  if( hid_ep0_in( req, data, size ) )return 1;
 8000d46:	3000      	adds	r0, #0
 8000d48:	bf18      	it	ne
 8000d4a:	2001      	movne	r0, #1
 8000d4c:	e7f0      	b.n	8000d30 <usb_class_ep0_in+0x10>

08000d4e <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000d4e:	b570      	push	{r4, r5, r6, lr}
 8000d50:	4604      	mov	r4, r0
 8000d52:	460d      	mov	r5, r1
 8000d54:	4616      	mov	r6, r2
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000d56:	f7ff ff2f 	bl	8000bb8 <hid_ep0_out>
 8000d5a:	b108      	cbz	r0, 8000d60 <usb_class_ep0_out+0x12>
 8000d5c:	2001      	movs	r0, #1
  if( mic_ep0_out( req, offset, rx_size ) )return 1;
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
  if( usb_log_ep0_out( req, offset, rx_size ) )return 1;
  return 0;
}
 8000d5e:	bd70      	pop	{r4, r5, r6, pc}
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
 8000d60:	4632      	mov	r2, r6
 8000d62:	4629      	mov	r1, r5
 8000d64:	4620      	mov	r0, r4
 8000d66:	f000 f9b7 	bl	80010d8 <programmer_ep0_out>
 8000d6a:	2800      	cmp	r0, #0
 8000d6c:	d1f6      	bne.n	8000d5c <usb_class_ep0_out+0xe>
  if( usb_log_ep0_out( req, offset, rx_size ) )return 1;
 8000d6e:	4632      	mov	r2, r6
 8000d70:	4629      	mov	r1, r5
 8000d72:	4620      	mov	r0, r4
 8000d74:	f000 fbd8 	bl	8001528 <usb_log_ep0_out>
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000d78:	3000      	adds	r0, #0
 8000d7a:	bf18      	it	ne
 8000d7c:	2001      	movne	r0, #1
 8000d7e:	e7ee      	b.n	8000d5e <usb_class_ep0_out+0x10>

08000d80 <usb_class_init>:

void usb_class_init(){
 8000d80:	b508      	push	{r3, lr}
  hid_init();
 8000d82:	f7ff ff4b 	bl	8000c1c <hid_init>
  usb_ep_init_double( ENDP_MIC | 0x80, USB_ENDP_ISO, ENDP_MIC_SIZE, mic_in_callback );
 8000d86:	4b3f      	ldr	r3, [pc, #252]	; (8000e84 <usb_class_init+0x104>)
 8000d88:	2264      	movs	r2, #100	; 0x64
 8000d8a:	2101      	movs	r1, #1
 8000d8c:	2087      	movs	r0, #135	; 0x87
 8000d8e:	f7ff fbe7 	bl	8000560 <usb_ep_init_double>
  GPIO_config(ADC_IN);
 8000d92:	4b3d      	ldr	r3, [pc, #244]	; (8000e88 <usb_class_init+0x108>)
 8000d94:	681a      	ldr	r2, [r3, #0]
 8000d96:	f042 0203 	orr.w	r2, r2, #3
 8000d9a:	601a      	str	r2, [r3, #0]
 8000d9c:	689a      	ldr	r2, [r3, #8]
 8000d9e:	f022 0203 	bic.w	r2, r2, #3
 8000da2:	609a      	str	r2, [r3, #8]
  RCC->CR |= RCC_CR_HSION;
 8000da4:	f503 5350 	add.w	r3, r3, #13312	; 0x3400
 8000da8:	681a      	ldr	r2, [r3, #0]
 8000daa:	4619      	mov	r1, r3
 8000dac:	f042 0201 	orr.w	r2, r2, #1
 8000db0:	601a      	str	r2, [r3, #0]
 8000db2:	f640 72ff 	movw	r2, #4095	; 0xfff
    if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 8000db6:	6818      	ldr	r0, [r3, #0]
 8000db8:	0780      	lsls	r0, r0, #30
 8000dba:	d403      	bmi.n	8000dc4 <usb_class_init+0x44>
 8000dbc:	3a01      	subs	r2, #1
 8000dbe:	b292      	uxth	r2, r2
  for(uint16_t i=0;i<0x0FFF;i++){
 8000dc0:	2a00      	cmp	r2, #0
 8000dc2:	d1f8      	bne.n	8000db6 <usb_class_init+0x36>
  RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000dc4:	6a0b      	ldr	r3, [r1, #32]
 8000dc6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000dca:	620b      	str	r3, [r1, #32]
  ADC->CCR |= ADC_CCR_TSVREFE;
 8000dcc:	4b2f      	ldr	r3, [pc, #188]	; (8000e8c <usb_class_init+0x10c>)
 8000dce:	685a      	ldr	r2, [r3, #4]
  ADC_SAMPLING_TIME( ADC_1, marg3(ADC_IN), ADC_SAMPL_TIME_4 );
 8000dd0:	f5a3 7340 	sub.w	r3, r3, #768	; 0x300
  ADC->CCR |= ADC_CCR_TSVREFE;
 8000dd4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dd8:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
  PM_BITMASK( ADC->CCR, ADC_CCR_ADCPRE, ADC_SPEED_1 ); //prescaler: 1/1
 8000ddc:	f8d3 2304 	ldr.w	r2, [r3, #772]	; 0x304
 8000de0:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8000de4:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
  ADC_SAMPLING_TIME( ADC_1, marg3(ADC_IN), ADC_SAMPL_TIME_4 );
 8000de8:	695a      	ldr	r2, [r3, #20]
 8000dea:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 8000dee:	615a      	str	r2, [r3, #20]
  ADC_SEQ_SET( ADC_1, 1, marg3(ADC_IN) );
 8000df0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000df2:	f022 021f 	bic.w	r2, r2, #31
 8000df6:	f042 0208 	orr.w	r2, r2, #8
 8000dfa:	641a      	str	r2, [r3, #64]	; 0x40
 8000dfc:	681a      	ldr	r2, [r3, #0]
 8000dfe:	05d2      	lsls	r2, r2, #23
 8000e00:	d4fc      	bmi.n	8000dfc <usb_class_init+0x7c>
 8000e02:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  ADC_SEQ_CNT( ADC_1, 1 );
 8000e06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000e08:	f022 72f8 	bic.w	r2, r2, #32505856	; 0x1f00000
 8000e0c:	631a      	str	r2, [r3, #48]	; 0x30
  ADC_Trigger( ADC_1, ADC_TRIG_TIM2_2 );
 8000e0e:	689a      	ldr	r2, [r3, #8]
 8000e10:	f022 527c 	bic.w	r2, r2, #1056964608	; 0x3f000000
 8000e14:	f042 5298 	orr.w	r2, r2, #318767104	; 0x13000000
 8000e18:	609a      	str	r2, [r3, #8]
  ADC1->CR1 |= ADC_CR1_EOCIE;
 8000e1a:	685a      	ldr	r2, [r3, #4]
 8000e1c:	f042 0220 	orr.w	r2, r2, #32
 8000e20:	605a      	str	r2, [r3, #4]
 8000e22:	4a1b      	ldr	r2, [pc, #108]	; (8000e90 <usb_class_init+0x110>)
 8000e24:	6011      	str	r1, [r2, #0]
  ADC1->CR2 |= ADC_CR2_ADON;
 8000e26:	689a      	ldr	r2, [r3, #8]
 8000e28:	f042 0201 	orr.w	r2, r2, #1
 8000e2c:	609a      	str	r2, [r3, #8]
  while(! (ADC1->SR & ADC_SR_ADONS) ){}
 8000e2e:	4a19      	ldr	r2, [pc, #100]	; (8000e94 <usb_class_init+0x114>)
 8000e30:	6813      	ldr	r3, [r2, #0]
 8000e32:	065b      	lsls	r3, r3, #25
 8000e34:	d5fc      	bpl.n	8000e30 <usb_class_init+0xb0>
  RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000e36:	4a18      	ldr	r2, [pc, #96]	; (8000e98 <usb_class_init+0x118>)
 8000e38:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8000e3a:	f043 0301 	orr.w	r3, r3, #1
 8000e3e:	6253      	str	r3, [r2, #36]	; 0x24
  TIM2->PSC = 0;
 8000e40:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e44:	2200      	movs	r2, #0
 8000e46:	629a      	str	r2, [r3, #40]	; 0x28
  TIM2->ARR = TIM2_ARR_AVG;
 8000e48:	22b5      	movs	r2, #181	; 0xb5
 8000e4a:	62da      	str	r2, [r3, #44]	; 0x2c
  TIM2->CR1 |= TIM_CR1_ARPE;
 8000e4c:	681a      	ldr	r2, [r3, #0]
 8000e4e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000e52:	601a      	str	r2, [r3, #0]
  PM_BITMASK( TIM2->CCMR1, TIM_CCMR1_OC2M, 0b110 );
 8000e54:	699a      	ldr	r2, [r3, #24]
 8000e56:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 8000e5a:	f442 42c0 	orr.w	r2, r2, #24576	; 0x6000
 8000e5e:	619a      	str	r2, [r3, #24]
  TIM2->CCR2 = 1;
 8000e60:	2201      	movs	r2, #1
 8000e62:	639a      	str	r2, [r3, #56]	; 0x38
  TIM2->CCMR1 |= TIM_CCMR1_OC2PE;
 8000e64:	699a      	ldr	r2, [r3, #24]
 8000e66:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8000e6a:	619a      	str	r2, [r3, #24]
  TIM2->CCER = TIM_CCER_CC2E;
 8000e6c:	2210      	movs	r2, #16
 8000e6e:	621a      	str	r2, [r3, #32]
  TIM2->CR1 |= TIM_CR1_CEN;
 8000e70:	681a      	ldr	r2, [r3, #0]
 8000e72:	f042 0201 	orr.w	r2, r2, #1
 8000e76:	601a      	str	r2, [r3, #0]
  mic_init();
  programmer_init();
 8000e78:	f000 f97c 	bl	8001174 <programmer_init>
  usb_log_init();
}
 8000e7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_log_init();
 8000e80:	f000 bb6a 	b.w	8001558 <usb_log_init>
 8000e84:	08000a11 	stmdaeq	r0, {r0, r4, r9, fp}
 8000e88:	40020400 	andmi	r0, r2, r0, lsl #8
 8000e8c:	40012700 	andmi	r2, r1, r0, lsl #14
 8000e90:	e000e100 	and	lr, r0, r0, lsl #2
 8000e94:	40012400 	andmi	r2, r1, r0, lsl #8
 8000e98:	40023800 	andmi	r3, r2, r0, lsl #16

08000e9c <usb_class_poll>:

void usb_class_poll(){
 8000e9c:	b508      	push	{r3, lr}
  hid_poll();
 8000e9e:	f7ff fee3 	bl	8000c68 <hid_poll>
  mic_poll();
  programmer_poll();
 8000ea2:	f000 fa2f 	bl	8001304 <programmer_poll>
  usb_log_poll();
}
 8000ea6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_log_poll();
 8000eaa:	f000 bbc5 	b.w	8001638 <usb_log_poll>

08000eae <usb_class_sof>:

void usb_class_sof(){
  mic_sof();
 8000eae:	f7ff be2d 	b.w	8000b0c <mic_sof>
 8000eb2:	bf00      	nop

08000eb4 <uart_buf_size>:
  volatile uint8_t st,en;
  volatile uint8_t arr[UART_SIZE];
}uart_buffer;

uint8_t uart_buf_size(uart_buffer *buf){
  return ((buf->st - buf->en) & UART_MASK);
 8000eb4:	7803      	ldrb	r3, [r0, #0]
 8000eb6:	7840      	ldrb	r0, [r0, #1]
 8000eb8:	1a18      	subs	r0, r3, r0
}
 8000eba:	b2c0      	uxtb	r0, r0
 8000ebc:	4770      	bx	lr

08000ebe <uart_buf_read>:
  return ((buf->st - buf->en) & UART_MASK);
 8000ebe:	7801      	ldrb	r1, [r0, #0]
 8000ec0:	7842      	ldrb	r2, [r0, #1]

uint8_t uart_buf_read(uart_buffer *buf){
 8000ec2:	4603      	mov	r3, r0
  uint8_t res;
  if(uart_buf_size(buf) == 0)return 0;
 8000ec4:	4291      	cmp	r1, r2
 8000ec6:	d00b      	beq.n	8000ee0 <uart_buf_read+0x22>
  res = buf->arr[buf->st];
 8000ec8:	7802      	ldrb	r2, [r0, #0]
 8000eca:	4402      	add	r2, r0
 8000ecc:	7890      	ldrb	r0, [r2, #2]
  buf->st++;
 8000ece:	781a      	ldrb	r2, [r3, #0]
  res = buf->arr[buf->st];
 8000ed0:	b2c0      	uxtb	r0, r0
  buf->st++;
 8000ed2:	3201      	adds	r2, #1
 8000ed4:	b2d2      	uxtb	r2, r2
 8000ed6:	701a      	strb	r2, [r3, #0]
  buf->st &= UART_MASK;
 8000ed8:	781a      	ldrb	r2, [r3, #0]
 8000eda:	b2d2      	uxtb	r2, r2
 8000edc:	701a      	strb	r2, [r3, #0]
  return res;
 8000ede:	4770      	bx	lr
  if(uart_buf_size(buf) == 0)return 0;
 8000ee0:	2000      	movs	r0, #0
}
 8000ee2:	4770      	bx	lr

08000ee4 <uart_buf_write>:
  return ((buf->st - buf->en) & UART_MASK);
 8000ee4:	7803      	ldrb	r3, [r0, #0]
 8000ee6:	7842      	ldrb	r2, [r0, #1]
 8000ee8:	1a9b      	subs	r3, r3, r2

void uart_buf_write(uart_buffer *buf, uint8_t dat){
  if(uart_buf_size(buf)!=1){
 8000eea:	b2db      	uxtb	r3, r3
 8000eec:	2b01      	cmp	r3, #1
 8000eee:	d009      	beq.n	8000f04 <uart_buf_write+0x20>
    buf->arr[buf->en]=dat;
 8000ef0:	7843      	ldrb	r3, [r0, #1]
 8000ef2:	4403      	add	r3, r0
 8000ef4:	7099      	strb	r1, [r3, #2]
    buf->en++; buf->en &= UART_MASK;
 8000ef6:	7843      	ldrb	r3, [r0, #1]
 8000ef8:	3301      	adds	r3, #1
 8000efa:	b2db      	uxtb	r3, r3
 8000efc:	7043      	strb	r3, [r0, #1]
 8000efe:	7843      	ldrb	r3, [r0, #1]
 8000f00:	b2db      	uxtb	r3, r3
 8000f02:	7043      	strb	r3, [r0, #1]
  }
}
 8000f04:	4770      	bx	lr

08000f06 <USART1_IRQHandler>:
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef UART1_EN
static uart_buffer uart1_rx;
static uart_buffer uart1_tx;

void USART1_IRQHandler(void){
 8000f06:	b510      	push	{r4, lr}
  if( USART1->SR & USART_SR_RXNE ){
 8000f08:	4c0f      	ldr	r4, [pc, #60]	; (8000f48 <USART1_IRQHandler+0x42>)
 8000f0a:	6823      	ldr	r3, [r4, #0]
 8000f0c:	069a      	lsls	r2, r3, #26
 8000f0e:	d506      	bpl.n	8000f1e <USART1_IRQHandler+0x18>
    uint8_t temp = USART1->DR;
 8000f10:	6861      	ldr	r1, [r4, #4]
    uart_buf_write(&uart1_rx, temp);
 8000f12:	480e      	ldr	r0, [pc, #56]	; (8000f4c <USART1_IRQHandler+0x46>)
 8000f14:	b2c9      	uxtb	r1, r1
  }else if( USART1->SR & USART_SR_TXE ){
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
      else USART1->CR1 &=~ USART_CR1_TXEIE;
  }
}
 8000f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    uart_buf_write(&uart1_rx, temp);
 8000f1a:	f7ff bfe3 	b.w	8000ee4 <uart_buf_write>
  }else if( USART1->SR & USART_SR_TXE ){
 8000f1e:	6823      	ldr	r3, [r4, #0]
 8000f20:	061b      	lsls	r3, r3, #24
 8000f22:	d50b      	bpl.n	8000f3c <USART1_IRQHandler+0x36>
  return ((buf->st - buf->en) & UART_MASK);
 8000f24:	4809      	ldr	r0, [pc, #36]	; (8000f4c <USART1_IRQHandler+0x46>)
 8000f26:	f890 2102 	ldrb.w	r2, [r0, #258]	; 0x102
 8000f2a:	f890 3103 	ldrb.w	r3, [r0, #259]	; 0x103
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
 8000f2e:	429a      	cmp	r2, r3
 8000f30:	d005      	beq.n	8000f3e <USART1_IRQHandler+0x38>
 8000f32:	f500 7081 	add.w	r0, r0, #258	; 0x102
 8000f36:	f7ff ffc2 	bl	8000ebe <uart_buf_read>
 8000f3a:	6060      	str	r0, [r4, #4]
}
 8000f3c:	bd10      	pop	{r4, pc}
      else USART1->CR1 &=~ USART_CR1_TXEIE;
 8000f3e:	68e3      	ldr	r3, [r4, #12]
 8000f40:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000f44:	60e3      	str	r3, [r4, #12]
}
 8000f46:	e7f9      	b.n	8000f3c <USART1_IRQHandler+0x36>
 8000f48:	40013800 	andmi	r3, r1, r0, lsl #16
 8000f4c:	2000004c 	andcs	r0, r0, ip, asr #32

08000f50 <UART1_write>:

void UART1_write(uint8_t *data, uint8_t len){
 8000f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f52:	4604      	mov	r4, r0
  while(len--)UART_putc(1, *(data++));
 8000f54:	4f07      	ldr	r7, [pc, #28]	; (8000f74 <UART1_write+0x24>)
 8000f56:	4d08      	ldr	r5, [pc, #32]	; (8000f78 <UART1_write+0x28>)
 8000f58:	1846      	adds	r6, r0, r1
 8000f5a:	42b4      	cmp	r4, r6
 8000f5c:	d100      	bne.n	8000f60 <UART1_write+0x10>
}
 8000f5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  while(len--)UART_putc(1, *(data++));
 8000f60:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f64:	4638      	mov	r0, r7
 8000f66:	f7ff ffbd 	bl	8000ee4 <uart_buf_write>
 8000f6a:	68eb      	ldr	r3, [r5, #12]
 8000f6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f70:	60eb      	str	r3, [r5, #12]
 8000f72:	e7f2      	b.n	8000f5a <UART1_write+0xa>
 8000f74:	2000014e 	andcs	r0, r0, lr, asr #2
 8000f78:	40013800 	andmi	r3, r1, r0, lsl #16

08000f7c <UART1_puts>:

void UART1_puts(char *str){
 8000f7c:	b570      	push	{r4, r5, r6, lr}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000f7e:	4e07      	ldr	r6, [pc, #28]	; (8000f9c <UART1_puts+0x20>)
 8000f80:	4d07      	ldr	r5, [pc, #28]	; (8000fa0 <UART1_puts+0x24>)
 8000f82:	1e44      	subs	r4, r0, #1
 8000f84:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000f88:	b901      	cbnz	r1, 8000f8c <UART1_puts+0x10>
}
 8000f8a:	bd70      	pop	{r4, r5, r6, pc}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000f8c:	4630      	mov	r0, r6
 8000f8e:	f7ff ffa9 	bl	8000ee4 <uart_buf_write>
 8000f92:	68eb      	ldr	r3, [r5, #12]
 8000f94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f98:	60eb      	str	r3, [r5, #12]
 8000f9a:	e7f3      	b.n	8000f84 <UART1_puts+0x8>
 8000f9c:	2000014e 	andcs	r0, r0, lr, asr #2
 8000fa0:	40013800 	andmi	r3, r1, r0, lsl #16

08000fa4 <UART1_read>:

void UART1_read(uint8_t *data, uint8_t len){
 8000fa4:	b570      	push	{r4, r5, r6, lr}
 8000fa6:	4604      	mov	r4, r0
  return ((buf->st - buf->en) & UART_MASK);
 8000fa8:	4d08      	ldr	r5, [pc, #32]	; (8000fcc <UART1_read+0x28>)
 8000faa:	1846      	adds	r6, r0, r1
  while(len--){
 8000fac:	42b4      	cmp	r4, r6
 8000fae:	d100      	bne.n	8000fb2 <UART1_read+0xe>
    while(UART_rx_count(1) == 0){}
    *(data++) = UART_getc(1);
  }
}
 8000fb0:	bd70      	pop	{r4, r5, r6, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000fb2:	782a      	ldrb	r2, [r5, #0]
 8000fb4:	786b      	ldrb	r3, [r5, #1]
    while(UART_rx_count(1) == 0){}
 8000fb6:	1a9b      	subs	r3, r3, r2
 8000fb8:	f013 0fff 	tst.w	r3, #255	; 0xff
 8000fbc:	d0f9      	beq.n	8000fb2 <UART1_read+0xe>
    *(data++) = UART_getc(1);
 8000fbe:	4628      	mov	r0, r5
 8000fc0:	f7ff ff7d 	bl	8000ebe <uart_buf_read>
 8000fc4:	f804 0b01 	strb.w	r0, [r4], #1
 8000fc8:	e7f0      	b.n	8000fac <UART1_read+0x8>
 8000fca:	bf00      	nop
 8000fcc:	2000004c 	andcs	r0, r0, ip, asr #32

08000fd0 <UART1_gets>:

void UART1_gets(char *str, uint8_t len){
 8000fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fd2:	4606      	mov	r6, r0
 8000fd4:	3901      	subs	r1, #1
  return ((buf->st - buf->en) & UART_MASK);
 8000fd6:	4f13      	ldr	r7, [pc, #76]	; (8001024 <UART1_gets+0x54>)
 8000fd8:	b2cc      	uxtb	r4, r1
  while(len--){
 8000fda:	2cff      	cmp	r4, #255	; 0xff
 8000fdc:	4635      	mov	r5, r6
 8000fde:	d10d      	bne.n	8000ffc <UART1_gets+0x2c>
    while(UART_rx_count(1) == 0){}
    str[0] = UART_getc(1);
    if(str[0] == 0 || str[0] == 13)break;
    str++;
  }
  if(str[0] != 0){
 8000fe0:	782b      	ldrb	r3, [r5, #0]
 8000fe2:	b153      	cbz	r3, 8000ffa <UART1_gets+0x2a>
    if(len < 3)str[0] = 0;
 8000fe4:	2c02      	cmp	r4, #2
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000fe6:	bf83      	ittte	hi
 8000fe8:	230a      	movhi	r3, #10
 8000fea:	702b      	strbhi	r3, [r5, #0]
 8000fec:	230d      	movhi	r3, #13
    if(len < 3)str[0] = 0;
 8000fee:	2300      	movls	r3, #0
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ff0:	bf85      	ittet	hi
 8000ff2:	706b      	strbhi	r3, [r5, #1]
 8000ff4:	2300      	movhi	r3, #0
    if(len < 3)str[0] = 0;
 8000ff6:	702b      	strbls	r3, [r5, #0]
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ff8:	70ab      	strbhi	r3, [r5, #2]
  }
}
 8000ffa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000ffc:	783a      	ldrb	r2, [r7, #0]
 8000ffe:	787b      	ldrb	r3, [r7, #1]
    while(UART_rx_count(1) == 0){}
 8001000:	1a9b      	subs	r3, r3, r2
 8001002:	f013 0fff 	tst.w	r3, #255	; 0xff
 8001006:	d0f9      	beq.n	8000ffc <UART1_gets+0x2c>
    str[0] = UART_getc(1);
 8001008:	4638      	mov	r0, r7
 800100a:	f7ff ff58 	bl	8000ebe <uart_buf_read>
 800100e:	f806 0b01 	strb.w	r0, [r6], #1
    if(str[0] == 0 || str[0] == 13)break;
 8001012:	2800      	cmp	r0, #0
 8001014:	d0e4      	beq.n	8000fe0 <UART1_gets+0x10>
 8001016:	1e63      	subs	r3, r4, #1
 8001018:	280d      	cmp	r0, #13
 800101a:	b2db      	uxtb	r3, r3
 800101c:	d0e0      	beq.n	8000fe0 <UART1_gets+0x10>
 800101e:	461c      	mov	r4, r3
 8001020:	e7db      	b.n	8000fda <UART1_gets+0xa>
 8001022:	bf00      	nop
 8001024:	2000004c 	andcs	r0, r0, ip, asr #32

08001028 <programmer_ep0_in>:
#define timeout_reset() do{timeout_ms = systick_ms() + TIMEOUT_MS;}while(0)

void uart_ctrl( uint8_t *buf, int size);

char programmer_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8001028:	7803      	ldrb	r3, [r0, #0]
 800102a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800102e:	2b21      	cmp	r3, #33	; 0x21
 8001030:	d112      	bne.n	8001058 <programmer_ep0_in+0x30>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 8001032:	7843      	ldrb	r3, [r0, #1]
 8001034:	2b21      	cmp	r3, #33	; 0x21
 8001036:	d10f      	bne.n	8001058 <programmer_ep0_in+0x30>
      if( req->wIndex == ifnum(interface_tty) ){
 8001038:	8880      	ldrh	r0, [r0, #4]
 800103a:	2801      	cmp	r0, #1
 800103c:	d104      	bne.n	8001048 <programmer_ep0_in+0x20>
        *data = (void*)&tty_cfg;
 800103e:	4b07      	ldr	r3, [pc, #28]	; (800105c <programmer_ep0_in+0x34>)
 8001040:	600b      	str	r3, [r1, #0]
        *size = sizeof(tty_cfg);
 8001042:	2307      	movs	r3, #7
 8001044:	8013      	strh	r3, [r2, #0]
 8001046:	4770      	bx	lr
      }else if( req->wIndex == ifnum(interface_progr) ){
 8001048:	2803      	cmp	r0, #3
 800104a:	d103      	bne.n	8001054 <programmer_ep0_in+0x2c>
        *data = (void*)&progr_cfg;
 800104c:	4b04      	ldr	r3, [pc, #16]	; (8001060 <programmer_ep0_in+0x38>)
 800104e:	600b      	str	r3, [r1, #0]
        *size = sizeof(progr_cfg);
 8001050:	2307      	movs	r3, #7
 8001052:	8013      	strh	r3, [r2, #0]
      }
      return 1;
 8001054:	2001      	movs	r0, #1
    }
  }
  return 0;
}
 8001056:	4770      	bx	lr
  return 0;
 8001058:	2000      	movs	r0, #0
 800105a:	4770      	bx	lr
 800105c:	2000000c 	andcs	r0, r0, ip
 8001060:	20000013 	andcs	r0, r0, r3, lsl r0

08001064 <uart_cfg>:

void uart_cfg( volatile struct cdc_linecoding *cfg ){
  UART_speed( USART, cfg->baudrate );
 8001064:	4a19      	ldr	r2, [pc, #100]	; (80010cc <uart_cfg+0x68>)
 8001066:	6a13      	ldr	r3, [r2, #32]
 8001068:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800106c:	6213      	str	r3, [r2, #32]
 800106e:	6803      	ldr	r3, [r0, #0]
 8001070:	4a17      	ldr	r2, [pc, #92]	; (80010d0 <uart_cfg+0x6c>)
 8001072:	fbb2 f2f3 	udiv	r2, r2, r3
 8001076:	4b17      	ldr	r3, [pc, #92]	; (80010d4 <uart_cfg+0x70>)
 8001078:	609a      	str	r2, [r3, #8]
  //stopbits
  
  //parity
  if(cfg->parity == 0){ //none
 800107a:	7942      	ldrb	r2, [r0, #5]
 800107c:	b942      	cbnz	r2, 8001090 <uart_cfg+0x2c>
    USART1->CR1 &=~USART_CR1_PCE;
 800107e:	68da      	ldr	r2, [r3, #12]
 8001080:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001084:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_M;
 8001086:	68da      	ldr	r2, [r3, #12]
 8001088:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 |= USART_CR1_PS;
  }else if(cfg->parity == 2){ //even
    USART1->CR1 |= USART_CR1_M;
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 &=~USART_CR1_PS;
 800108c:	60da      	str	r2, [r3, #12]
  }
}
 800108e:	4770      	bx	lr
  }else if(cfg->parity == 1){ //odd
 8001090:	7942      	ldrb	r2, [r0, #5]
 8001092:	2a01      	cmp	r2, #1
 8001094:	d10b      	bne.n	80010ae <uart_cfg+0x4a>
    USART1->CR1 |= USART_CR1_M;
 8001096:	68da      	ldr	r2, [r3, #12]
 8001098:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800109c:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 800109e:	68da      	ldr	r2, [r3, #12]
 80010a0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80010a4:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PS;
 80010a6:	68da      	ldr	r2, [r3, #12]
 80010a8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80010ac:	e7ee      	b.n	800108c <uart_cfg+0x28>
  }else if(cfg->parity == 2){ //even
 80010ae:	7942      	ldrb	r2, [r0, #5]
 80010b0:	2a02      	cmp	r2, #2
 80010b2:	d1ec      	bne.n	800108e <uart_cfg+0x2a>
    USART1->CR1 |= USART_CR1_M;
 80010b4:	68da      	ldr	r2, [r3, #12]
 80010b6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80010ba:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 80010bc:	68da      	ldr	r2, [r3, #12]
 80010be:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80010c2:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_PS;
 80010c4:	68da      	ldr	r2, [r3, #12]
 80010c6:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80010ca:	e7df      	b.n	800108c <uart_cfg+0x28>
 80010cc:	40023800 	andmi	r3, r2, r0, lsl #16
 80010d0:	01e84800 	mvneq	r4, r0, lsl #16
 80010d4:	40013800 	andmi	r3, r1, r0, lsl #16

080010d8 <programmer_ep0_out>:

char programmer_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80010d8:	b530      	push	{r4, r5, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80010da:	7803      	ldrb	r3, [r0, #0]
char programmer_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80010dc:	b09b      	sub	sp, #108	; 0x6c
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80010de:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80010e2:	2b21      	cmp	r3, #33	; 0x21
 80010e4:	d13d      	bne.n	8001162 <programmer_ep0_out+0x8a>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 80010e6:	7843      	ldrb	r3, [r0, #1]
 80010e8:	2b20      	cmp	r3, #32
 80010ea:	d13a      	bne.n	8001162 <programmer_ep0_out+0x8a>
      if(rx_size == 0)return 1;
 80010ec:	b912      	cbnz	r2, 80010f4 <programmer_ep0_out+0x1c>
        }
      }else{
        uint8_t buf[100];
        usb_ep_read(0, (void*)buf);
      }
      return 1;
 80010ee:	2001      	movs	r0, #1
      //  1   : RTS
      //  0   : DTR
    }
  }
  return 0;
}
 80010f0:	b01b      	add	sp, #108	; 0x6c
 80010f2:	bd30      	pop	{r4, r5, pc}
      if( req->wIndex == ifnum(interface_tty) ){
 80010f4:	8884      	ldrh	r4, [r0, #4]
 80010f6:	2c01      	cmp	r4, #1
 80010f8:	d10c      	bne.n	8001114 <programmer_ep0_out+0x3c>
 80010fa:	491b      	ldr	r1, [pc, #108]	; (8001168 <programmer_ep0_out+0x90>)
 80010fc:	4620      	mov	r0, r4
 80010fe:	f7ff fbbf 	bl	8000880 <_usb_ep_read>
        if(ttymode == TTYM_NORMAL){
 8001102:	4b1a      	ldr	r3, [pc, #104]	; (800116c <programmer_ep0_out+0x94>)
 8001104:	f893 3204 	ldrb.w	r3, [r3, #516]	; 0x204
 8001108:	2b00      	cmp	r3, #0
 800110a:	d1f0      	bne.n	80010ee <programmer_ep0_out+0x16>
          uart_cfg( &tty_cfg );
 800110c:	4816      	ldr	r0, [pc, #88]	; (8001168 <programmer_ep0_out+0x90>)
 800110e:	f7ff ffa9 	bl	8001064 <uart_cfg>
 8001112:	e7ec      	b.n	80010ee <programmer_ep0_out+0x16>
      }else if( req->wIndex == ifnum(interface_progr) ){
 8001114:	2c03      	cmp	r4, #3
 8001116:	d11f      	bne.n	8001158 <programmer_ep0_out+0x80>
 8001118:	4d13      	ldr	r5, [pc, #76]	; (8001168 <programmer_ep0_out+0x90>)
 800111a:	2001      	movs	r0, #1
 800111c:	1de9      	adds	r1, r5, #7
 800111e:	f7ff fbaf 	bl	8000880 <_usb_ep_read>
        if( progr_cfg.baudrate == SPEED_CTRL ){
 8001122:	f8d5 3007 	ldr.w	r3, [r5, #7]
 8001126:	4c11      	ldr	r4, [pc, #68]	; (800116c <programmer_ep0_out+0x94>)
 8001128:	2b32      	cmp	r3, #50	; 0x32
 800112a:	d10a      	bne.n	8001142 <programmer_ep0_out+0x6a>
          ttymode = TTYM_CTRL;
 800112c:	2302      	movs	r3, #2
 800112e:	f884 3204 	strb.w	r3, [r4, #516]	; 0x204
 8001132:	4b0f      	ldr	r3, [pc, #60]	; (8001170 <programmer_ep0_out+0x98>)
 8001134:	681b      	ldr	r3, [r3, #0]
          timeout_reset();
 8001136:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 800113a:	3310      	adds	r3, #16
 800113c:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 8001140:	e7d5      	b.n	80010ee <programmer_ep0_out+0x16>
        }else if( ttymode == TTYM_CTRL ){
 8001142:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8001146:	2b02      	cmp	r3, #2
 8001148:	d1d1      	bne.n	80010ee <programmer_ep0_out+0x16>
          ttymode = TTYM_PROGR;
 800114a:	2101      	movs	r1, #1
          uart_cfg( &progr_cfg );
 800114c:	1de8      	adds	r0, r5, #7
          ttymode = TTYM_PROGR;
 800114e:	f884 1204 	strb.w	r1, [r4, #516]	; 0x204
          uart_cfg( &progr_cfg );
 8001152:	f7ff ff87 	bl	8001064 <uart_cfg>
 8001156:	e7ec      	b.n	8001132 <programmer_ep0_out+0x5a>
 8001158:	a901      	add	r1, sp, #4
 800115a:	2001      	movs	r0, #1
 800115c:	f7ff fb90 	bl	8000880 <_usb_ep_read>
 8001160:	e7c5      	b.n	80010ee <programmer_ep0_out+0x16>
  return 0;
 8001162:	2000      	movs	r0, #0
 8001164:	e7c4      	b.n	80010f0 <programmer_ep0_out+0x18>
 8001166:	bf00      	nop
 8001168:	2000000c 	andcs	r0, r0, ip
 800116c:	2000004c 	andcs	r0, r0, ip, asr #32
 8001170:	20000024 	andcs	r0, r0, r4, lsr #32

08001174 <programmer_init>:
  }
}

static char initflag = 0;

void programmer_init(){
 8001174:	b570      	push	{r4, r5, r6, lr}
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 8001176:	2620      	movs	r6, #32
 8001178:	4934      	ldr	r1, [pc, #208]	; (800124c <programmer_init+0xd8>)
  UART_init(USART, 9600);
 800117a:	4b35      	ldr	r3, [pc, #212]	; (8001250 <programmer_init+0xdc>)
 800117c:	f8c1 6084 	str.w	r6, [r1, #132]	; 0x84
 8001180:	681a      	ldr	r2, [r3, #0]
 8001182:	2400      	movs	r4, #0
 8001184:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8001188:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 800118c:	601a      	str	r2, [r3, #0]
 800118e:	689a      	ldr	r2, [r3, #8]
 8001190:	4d30      	ldr	r5, [pc, #192]	; (8001254 <programmer_init+0xe0>)
 8001192:	f442 1240 	orr.w	r2, r2, #3145728	; 0x300000
 8001196:	609a      	str	r2, [r3, #8]
 8001198:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  UART_puts(USART, "Test\n\r");
 800119a:	482f      	ldr	r0, [pc, #188]	; (8001258 <programmer_init+0xe4>)
  UART_init(USART, 9600);
 800119c:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 80011a0:	f442 62e0 	orr.w	r2, r2, #1792	; 0x700
 80011a4:	625a      	str	r2, [r3, #36]	; 0x24
 80011a6:	681a      	ldr	r2, [r3, #0]
 80011a8:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 80011ac:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80011b0:	601a      	str	r2, [r3, #0]
 80011b2:	689a      	ldr	r2, [r3, #8]
 80011b4:	f442 2240 	orr.w	r2, r2, #786432	; 0xc0000
 80011b8:	609a      	str	r2, [r3, #8]
 80011ba:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80011bc:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80011c0:	f042 0270 	orr.w	r2, r2, #112	; 0x70
 80011c4:	625a      	str	r2, [r3, #36]	; 0x24
 80011c6:	4a25      	ldr	r2, [pc, #148]	; (800125c <programmer_init+0xe8>)
 80011c8:	6a13      	ldr	r3, [r2, #32]
 80011ca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011ce:	6213      	str	r3, [r2, #32]
 80011d0:	f640 5205 	movw	r2, #3333	; 0xd05
 80011d4:	4b22      	ldr	r3, [pc, #136]	; (8001260 <programmer_init+0xec>)
 80011d6:	609a      	str	r2, [r3, #8]
 80011d8:	f242 022c 	movw	r2, #8236	; 0x202c
 80011dc:	60da      	str	r2, [r3, #12]
 80011de:	611c      	str	r4, [r3, #16]
 80011e0:	615c      	str	r4, [r3, #20]
 80011e2:	619c      	str	r4, [r3, #24]
 80011e4:	702c      	strb	r4, [r5, #0]
 80011e6:	706c      	strb	r4, [r5, #1]
 80011e8:	f885 4102 	strb.w	r4, [r5, #258]	; 0x102
 80011ec:	f885 4103 	strb.w	r4, [r5, #259]	; 0x103
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80011f0:	604e      	str	r6, [r1, #4]
  UART_puts(USART, "Test\n\r");
 80011f2:	f7ff fec3 	bl	8000f7c <UART1_puts>
  ttymode = TTYM_NORMAL;
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80011f6:	4623      	mov	r3, r4
 80011f8:	2208      	movs	r2, #8
 80011fa:	2103      	movs	r1, #3
 80011fc:	2084      	movs	r0, #132	; 0x84
  ttymode = TTYM_NORMAL;
 80011fe:	f885 4204 	strb.w	r4, [r5, #516]	; 0x204
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 8001202:	f7ff f921 	bl	8000448 <usb_ep_init>
  usb_ep_init( ENDP_TTY_IN   | 0x80, USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 8001206:	4623      	mov	r3, r4
 8001208:	4632      	mov	r2, r6
 800120a:	2102      	movs	r1, #2
 800120c:	2081      	movs	r0, #129	; 0x81
 800120e:	f7ff f91b 	bl	8000448 <usb_ep_init>
  usb_ep_init( ENDP_TTY_OUT,         USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 8001212:	4623      	mov	r3, r4
 8001214:	4632      	mov	r2, r6
 8001216:	2102      	movs	r1, #2
 8001218:	2001      	movs	r0, #1
 800121a:	f7ff f915 	bl	8000448 <usb_ep_init>

  usb_ep_init( ENDP_PROG_CTL | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800121e:	4623      	mov	r3, r4
 8001220:	2208      	movs	r2, #8
 8001222:	2103      	movs	r1, #3
 8001224:	2085      	movs	r0, #133	; 0x85
 8001226:	f7ff f90f 	bl	8000448 <usb_ep_init>
  usb_ep_init( ENDP_PROG_IN  | 0x80, USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 800122a:	4623      	mov	r3, r4
 800122c:	4632      	mov	r2, r6
 800122e:	2102      	movs	r1, #2
 8001230:	2082      	movs	r0, #130	; 0x82
 8001232:	f7ff f909 	bl	8000448 <usb_ep_init>
  usb_ep_init( ENDP_PROG_OUT,        USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 8001236:	2102      	movs	r1, #2
 8001238:	4623      	mov	r3, r4
 800123a:	4632      	mov	r2, r6
 800123c:	4608      	mov	r0, r1
 800123e:	f7ff f903 	bl	8000448 <usb_ep_init>
  initflag = 1;
 8001242:	2301      	movs	r3, #1
 8001244:	f885 320c 	strb.w	r3, [r5, #524]	; 0x20c
}
 8001248:	bd70      	pop	{r4, r5, r6, pc}
 800124a:	bf00      	nop
 800124c:	e000e100 	and	lr, r0, r0, lsl #2
 8001250:	40020000 	andmi	r0, r2, r0
 8001254:	2000004c 	andcs	r0, r0, ip, asr #32
 8001258:	080019ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp, ip}
 800125c:	40023800 	andmi	r3, r2, r0, lsl #16
 8001260:	40013800 	andmi	r3, r1, r0, lsl #16

08001264 <uart_ctrl>:
//*/
#define CTRL_RST	(1<<0)
#define CTRL_BOOT0	(1<<1)
#define CTRL_USB	(1<<2)
//control sequence
void uart_ctrl( uint8_t *buf, int size){
 8001264:	b5f0      	push	{r4, r5, r6, r7, lr}
  //GPO_T( GLED );
  uint8_t val = 0;
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001266:	4b24      	ldr	r3, [pc, #144]	; (80012f8 <uart_ctrl+0x94>)
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001268:	4d24      	ldr	r5, [pc, #144]	; (80012fc <uart_ctrl+0x98>)
  if( GPI_ON(RESET) )val |= CTRL_RST;
 800126a:	691b      	ldr	r3, [r3, #16]
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 800126c:	692a      	ldr	r2, [r5, #16]
  if( GPI_ON(RESET) )val |= CTRL_RST;
 800126e:	f483 7380 	eor.w	r3, r3, #256	; 0x100
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001272:	0712      	lsls	r2, r2, #28
  uint8_t val = 0;
 8001274:	f3c3 2300 	ubfx	r3, r3, #8, #1
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001278:	d501      	bpl.n	800127e <uart_ctrl+0x1a>
 800127a:	f043 0302 	orr.w	r3, r3, #2
 800127e:	1e44      	subs	r4, r0, #1
#ifdef USBR
  if( GPI_ON(USBR ) )val |= CTRL_USB;
#endif
  for(int i=0; i<size; i++){
    if(buf[i] == 'z')timeout_ms = 0;
 8001280:	4e1f      	ldr	r6, [pc, #124]	; (8001300 <uart_ctrl+0x9c>)
  for(int i=0; i<size; i++){
 8001282:	f1c0 0001 	rsb	r0, r0, #1
    if(buf[i] == 'z')timeout_ms = 0;
 8001286:	2700      	movs	r7, #0
 8001288:	e00a      	b.n	80012a0 <uart_ctrl+0x3c>
 800128a:	7862      	ldrb	r2, [r4, #1]
 800128c:	2a7a      	cmp	r2, #122	; 0x7a
 800128e:	bf08      	it	eq
 8001290:	f8c6 7208 	streq.w	r7, [r6, #520]	; 0x208
    if(buf[i] == 'R')val |= CTRL_RST;
 8001294:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8001298:	2a52      	cmp	r2, #82	; 0x52
 800129a:	d114      	bne.n	80012c6 <uart_ctrl+0x62>
 800129c:	f043 0301 	orr.w	r3, r3, #1
  for(int i=0; i<size; i++){
 80012a0:	1902      	adds	r2, r0, r4
 80012a2:	428a      	cmp	r2, r1
 80012a4:	dbf1      	blt.n	800128a <uart_ctrl+0x26>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
    if(buf[i] == 'U')val |= CTRL_USB;
    if(buf[i] == 'u')val &=~CTRL_USB;
  }
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 80012a6:	f013 0f01 	tst.w	r3, #1
 80012aa:	bf14      	ite	ne
 80012ac:	f04f 7180 	movne.w	r1, #16777216	; 0x1000000
 80012b0:	f44f 7180 	moveq.w	r1, #256	; 0x100
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 80012b4:	079b      	lsls	r3, r3, #30
 80012b6:	bf4c      	ite	mi
 80012b8:	2308      	movmi	r3, #8
 80012ba:	f44f 2300 	movpl.w	r3, #524288	; 0x80000
 80012be:	4a0e      	ldr	r2, [pc, #56]	; (80012f8 <uart_ctrl+0x94>)
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 80012c0:	6191      	str	r1, [r2, #24]
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 80012c2:	61ab      	str	r3, [r5, #24]
#ifdef USBR
  if( val & CTRL_USB)	GPO_ON(USBR);  else GPO_OFF(USBR);
#endif
}
 80012c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if(buf[i] == 'r')val &=~CTRL_RST;
 80012c6:	2a72      	cmp	r2, #114	; 0x72
 80012c8:	d00a      	beq.n	80012e0 <uart_ctrl+0x7c>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
 80012ca:	2a42      	cmp	r2, #66	; 0x42
 80012cc:	d00b      	beq.n	80012e6 <uart_ctrl+0x82>
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
 80012ce:	2a62      	cmp	r2, #98	; 0x62
 80012d0:	d00c      	beq.n	80012ec <uart_ctrl+0x88>
    if(buf[i] == 'U')val |= CTRL_USB;
 80012d2:	2a55      	cmp	r2, #85	; 0x55
 80012d4:	d00d      	beq.n	80012f2 <uart_ctrl+0x8e>
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012d6:	2a75      	cmp	r2, #117	; 0x75
 80012d8:	d1e2      	bne.n	80012a0 <uart_ctrl+0x3c>
 80012da:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 80012de:	e7df      	b.n	80012a0 <uart_ctrl+0x3c>
    if(buf[i] == 'r')val &=~CTRL_RST;
 80012e0:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    if(buf[i] == 'U')val |= CTRL_USB;
 80012e4:	e7dc      	b.n	80012a0 <uart_ctrl+0x3c>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
 80012e6:	f043 0302 	orr.w	r3, r3, #2
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012ea:	e7d9      	b.n	80012a0 <uart_ctrl+0x3c>
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
 80012ec:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012f0:	e7d6      	b.n	80012a0 <uart_ctrl+0x3c>
    if(buf[i] == 'U')val |= CTRL_USB;
 80012f2:	f043 0304 	orr.w	r3, r3, #4
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012f6:	e7d3      	b.n	80012a0 <uart_ctrl+0x3c>
 80012f8:	40020000 	andmi	r0, r2, r0
 80012fc:	40020400 	andmi	r0, r2, r0, lsl #8
 8001300:	2000004c 	andcs	r0, r0, ip, asr #32

08001304 <programmer_poll>:
void programmer_poll(){
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(!initflag)return;
 8001306:	4c56      	ldr	r4, [pc, #344]	; (8001460 <programmer_poll+0x15c>)
void programmer_poll(){
 8001308:	b091      	sub	sp, #68	; 0x44
  if(!initflag)return;
 800130a:	f894 320c 	ldrb.w	r3, [r4, #524]	; 0x20c
 800130e:	2b00      	cmp	r3, #0
 8001310:	d061      	beq.n	80013d6 <programmer_poll+0xd2>
  return ((buf->st - buf->en) & UART_MASK);
 8001312:	7822      	ldrb	r2, [r4, #0]
 8001314:	7865      	ldrb	r5, [r4, #1]
 8001316:	4f53      	ldr	r7, [pc, #332]	; (8001464 <programmer_poll+0x160>)
  size = UART_rx_count( USART );
 8001318:	1aad      	subs	r5, r5, r2
  if(size > 0){
 800131a:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
 800131e:	4e52      	ldr	r6, [pc, #328]	; (8001468 <programmer_poll+0x164>)
 8001320:	d014      	beq.n	800134c <programmer_poll+0x48>
    if( ttymode == TTYM_NORMAL ){
 8001322:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8001326:	2d20      	cmp	r5, #32
 8001328:	bfa8      	it	ge
 800132a:	2520      	movge	r5, #32
 800132c:	2b00      	cmp	r3, #0
 800132e:	d154      	bne.n	80013da <programmer_poll+0xd6>
      if(usb_ep_ready( ENDP_TTY_IN | 0x80 )){
 8001330:	883b      	ldrh	r3, [r7, #0]
 8001332:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8001336:	2b30      	cmp	r3, #48	; 0x30
 8001338:	d008      	beq.n	800134c <programmer_poll+0x48>
        UART_read( USART, buf, size);
 800133a:	4629      	mov	r1, r5
 800133c:	4668      	mov	r0, sp
 800133e:	f7ff fe31 	bl	8000fa4 <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8001342:	462a      	mov	r2, r5
 8001344:	4669      	mov	r1, sp
 8001346:	2002      	movs	r0, #2
 8001348:	f7ff fa56 	bl	80007f8 <_usb_ep_write>
  if(ttymode == TTYM_NORMAL){
 800134c:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8001350:	2b00      	cmp	r3, #0
 8001352:	d158      	bne.n	8001406 <programmer_poll+0x102>
    if(usb_ep_ready( ENDP_PROG_OUT))usb_ep_read( ENDP_PROG_OUT, (void*)buf );
 8001354:	8833      	ldrh	r3, [r6, #0]
 8001356:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800135a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800135e:	d103      	bne.n	8001368 <programmer_poll+0x64>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8001360:	a908      	add	r1, sp, #32
 8001362:	2005      	movs	r0, #5
 8001364:	f7ff fa8c 	bl	8000880 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_TTY_OUT ))return;
 8001368:	883b      	ldrh	r3, [r7, #0]
 800136a:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800136e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001372:	d117      	bne.n	80013a4 <programmer_poll+0xa0>
    epnum = ENDP_TTY_OUT;
 8001374:	2001      	movs	r0, #1
  if(ttymode != TTYM_CTRL){
 8001376:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 800137a:	2b02      	cmp	r3, #2
 800137c:	d05c      	beq.n	8001438 <programmer_poll+0x134>
 800137e:	f894 3102 	ldrb.w	r3, [r4, #258]	; 0x102
 8001382:	f894 2103 	ldrb.w	r2, [r4, #259]	; 0x103
 8001386:	1a9b      	subs	r3, r3, r2
    if( UART_tx_count( USART ) > (ENDP_TTY_SIZE + 10) ){
 8001388:	b2db      	uxtb	r3, r3
 800138a:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 800138e:	2b2a      	cmp	r3, #42	; 0x2a
 8001390:	dd08      	ble.n	80013a4 <programmer_poll+0xa0>
 8001392:	0040      	lsls	r0, r0, #1
 8001394:	a908      	add	r1, sp, #32
 8001396:	3001      	adds	r0, #1
 8001398:	f7ff fa72 	bl	8000880 <_usb_ep_read>
      UART_write( USART, buf, size );
 800139c:	b2c1      	uxtb	r1, r0
 800139e:	a808      	add	r0, sp, #32
 80013a0:	f7ff fdd6 	bl	8000f50 <UART1_write>
  if( ttymode != TTYM_NORMAL ){
 80013a4:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 80013a8:	b15b      	cbz	r3, 80013c2 <programmer_poll+0xbe>
 80013aa:	4b30      	ldr	r3, [pc, #192]	; (800146c <programmer_poll+0x168>)
 80013ac:	681b      	ldr	r3, [r3, #0]
    if( systick_ms() > timeout_ms ){
 80013ae:	f8d4 2208 	ldr.w	r2, [r4, #520]	; 0x208
 80013b2:	429a      	cmp	r2, r3
 80013b4:	d205      	bcs.n	80013c2 <programmer_poll+0xbe>
      ttymode = TTYM_NORMAL;
 80013b6:	2300      	movs	r3, #0
      uart_cfg( &tty_cfg );
 80013b8:	482d      	ldr	r0, [pc, #180]	; (8001470 <programmer_poll+0x16c>)
      ttymode = TTYM_NORMAL;
 80013ba:	f884 3204 	strb.w	r3, [r4, #516]	; 0x204
      uart_cfg( &tty_cfg );
 80013be:	f7ff fe51 	bl	8001064 <uart_cfg>
  if( ttymode == TTYM_NORMAL ){		//green
 80013c2:	f894 2204 	ldrb.w	r2, [r4, #516]	; 0x204
 80013c6:	4b2b      	ldr	r3, [pc, #172]	; (8001474 <programmer_poll+0x170>)
 80013c8:	2a00      	cmp	r2, #0
 80013ca:	d13e      	bne.n	800144a <programmer_poll+0x146>
    GPO_ON(GLED); GPO_OFF(RLED);
 80013cc:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80013d0:	619a      	str	r2, [r3, #24]
 80013d2:	2220      	movs	r2, #32
    GPO_ON(RLED); GPO_ON(GLED);
 80013d4:	619a      	str	r2, [r3, #24]
}
 80013d6:	b011      	add	sp, #68	; 0x44
 80013d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    }else if( ttymode == TTYM_PROGR ){
 80013da:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 80013de:	2b01      	cmp	r3, #1
 80013e0:	d10c      	bne.n	80013fc <programmer_poll+0xf8>
      if(usb_ep_ready( ENDP_PROG_IN | 0x80 )){
 80013e2:	8833      	ldrh	r3, [r6, #0]
 80013e4:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80013e8:	2b30      	cmp	r3, #48	; 0x30
 80013ea:	d0af      	beq.n	800134c <programmer_poll+0x48>
        UART_read( USART, buf, size);
 80013ec:	4629      	mov	r1, r5
 80013ee:	4668      	mov	r0, sp
 80013f0:	f7ff fdd8 	bl	8000fa4 <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80013f4:	462a      	mov	r2, r5
 80013f6:	4669      	mov	r1, sp
 80013f8:	2004      	movs	r0, #4
 80013fa:	e7a5      	b.n	8001348 <programmer_poll+0x44>
      UART_read( USART, buf, size );
 80013fc:	4629      	mov	r1, r5
 80013fe:	4668      	mov	r0, sp
 8001400:	f7ff fdd0 	bl	8000fa4 <UART1_read>
 8001404:	e7a2      	b.n	800134c <programmer_poll+0x48>
    if(usb_ep_ready( ENDP_TTY_OUT ))usb_ep_read( ENDP_TTY_OUT, (void*)buf );
 8001406:	883b      	ldrh	r3, [r7, #0]
 8001408:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800140c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001410:	d103      	bne.n	800141a <programmer_poll+0x116>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8001412:	a908      	add	r1, sp, #32
 8001414:	2003      	movs	r0, #3
 8001416:	f7ff fa33 	bl	8000880 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_PROG_OUT))return;
 800141a:	8833      	ldrh	r3, [r6, #0]
 800141c:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001420:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001424:	d1be      	bne.n	80013a4 <programmer_poll+0xa0>
 8001426:	4b11      	ldr	r3, [pc, #68]	; (800146c <programmer_poll+0x168>)
    epnum = ENDP_PROG_OUT;
 8001428:	2002      	movs	r0, #2
 800142a:	681b      	ldr	r3, [r3, #0]
    timeout_reset();
 800142c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 8001430:	3310      	adds	r3, #16
 8001432:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 8001436:	e79e      	b.n	8001376 <programmer_poll+0x72>
 8001438:	a908      	add	r1, sp, #32
 800143a:	2005      	movs	r0, #5
 800143c:	f7ff fa20 	bl	8000880 <_usb_ep_read>
    uart_ctrl( buf, size );
 8001440:	4601      	mov	r1, r0
 8001442:	a808      	add	r0, sp, #32
 8001444:	f7ff ff0e 	bl	8001264 <uart_ctrl>
 8001448:	e7ac      	b.n	80013a4 <programmer_poll+0xa0>
  }else if( ttymode == TTYM_PROGR ){	//red
 800144a:	f894 2204 	ldrb.w	r2, [r4, #516]	; 0x204
 800144e:	2a01      	cmp	r2, #1
 8001450:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
    GPO_ON(RLED); GPO_OFF(GLED);
 8001454:	619a      	str	r2, [r3, #24]
 8001456:	bf0c      	ite	eq
 8001458:	2240      	moveq	r2, #64	; 0x40
    GPO_ON(RLED); GPO_ON(GLED);
 800145a:	f44f 0280 	movne.w	r2, #4194304	; 0x400000
 800145e:	e7b9      	b.n	80013d4 <programmer_poll+0xd0>
 8001460:	2000004c 	andcs	r0, r0, ip, asr #32
 8001464:	40005c04 	andmi	r5, r0, r4, lsl #24
 8001468:	40005c08 	andmi	r5, r0, r8, lsl #24
 800146c:	20000024 	andcs	r0, r0, r4, lsr #32
 8001470:	2000000c 	andcs	r0, r0, ip
 8001474:	40020400 	andmi	r0, r2, r0, lsl #8

08001478 <fifo_data_size>:
  volatile uint16_t st,en;
  volatile uint8_t arr[USB_LOG_SIZE];
}fifo;

uint16_t fifo_data_size(){
  return ((fifo.en - fifo.st) & USB_LOG_MASK);
 8001478:	4b03      	ldr	r3, [pc, #12]	; (8001488 <fifo_data_size+0x10>)
 800147a:	8858      	ldrh	r0, [r3, #2]
 800147c:	881b      	ldrh	r3, [r3, #0]
 800147e:	1ac0      	subs	r0, r0, r3
}
 8001480:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8001484:	4770      	bx	lr
 8001486:	bf00      	nop
 8001488:	200002f6 	strdcs	r0, [r0], -r6

0800148c <fifo_write>:
#define fifo_free_size() (USB_LOG_MASK - fifo_data_size())

void fifo_write(uint8_t *buf, int size){
 800148c:	b538      	push	{r3, r4, r5, lr}
  uint16_t en = fifo.en;
 800148e:	4c0d      	ldr	r4, [pc, #52]	; (80014c4 <fifo_write+0x38>)
void fifo_write(uint8_t *buf, int size){
 8001490:	4605      	mov	r5, r0
  uint16_t en = fifo.en;
 8001492:	8862      	ldrh	r2, [r4, #2]
 8001494:	b292      	uxth	r2, r2
  uint16_t av = fifo_free_size();
 8001496:	f7ff ffef 	bl	8001478 <fifo_data_size>
 800149a:	f5c0 707f 	rsb	r0, r0, #1020	; 0x3fc
 800149e:	3003      	adds	r0, #3
 80014a0:	b280      	uxth	r0, r0
  if(av > size)av = size;
 80014a2:	4288      	cmp	r0, r1
 80014a4:	bfc8      	it	gt
 80014a6:	b288      	uxthgt	r0, r1
 80014a8:	4428      	add	r0, r5
  while( av > 0 ){
 80014aa:	4285      	cmp	r5, r0
 80014ac:	d101      	bne.n	80014b2 <fifo_write+0x26>
    fifo.arr[en] = buf[0];
    en = (en + 1) & USB_LOG_MASK;
    buf++;
    av--;
  }
  fifo.en = en;
 80014ae:	8062      	strh	r2, [r4, #2]
}
 80014b0:	bd38      	pop	{r3, r4, r5, pc}
    fifo.arr[en] = buf[0];
 80014b2:	f815 1b01 	ldrb.w	r1, [r5], #1
 80014b6:	18a3      	adds	r3, r4, r2
    en = (en + 1) & USB_LOG_MASK;
 80014b8:	3201      	adds	r2, #1
    fifo.arr[en] = buf[0];
 80014ba:	7119      	strb	r1, [r3, #4]
    en = (en + 1) & USB_LOG_MASK;
 80014bc:	f3c2 0209 	ubfx	r2, r2, #0, #10
    av--;
 80014c0:	e7f3      	b.n	80014aa <fifo_write+0x1e>
 80014c2:	bf00      	nop
 80014c4:	200002f6 	strdcs	r0, [r0], -r6

080014c8 <fifo_read>:
#define fifo_str(str) fifo_write((uint8_t*)str, sizeof(str))

int fifo_read(uint8_t *buf, int size){
 80014c8:	b538      	push	{r3, r4, r5, lr}
 80014ca:	4604      	mov	r4, r0
  uint16_t av = fifo_data_size();
 80014cc:	f7ff ffd4 	bl	8001478 <fifo_data_size>
  uint16_t st = fifo.st;
 80014d0:	4a09      	ldr	r2, [pc, #36]	; (80014f8 <fifo_read+0x30>)
  if(av > size)av = size;
 80014d2:	4288      	cmp	r0, r1
  uint16_t st = fifo.st;
 80014d4:	8813      	ldrh	r3, [r2, #0]
  if(av > size)av = size;
 80014d6:	bfc8      	it	gt
 80014d8:	b288      	uxthgt	r0, r1
  uint16_t st = fifo.st;
 80014da:	b29b      	uxth	r3, r3
  size = av;
  while( av > 0 ){
 80014dc:	1821      	adds	r1, r4, r0
 80014de:	428c      	cmp	r4, r1
 80014e0:	d101      	bne.n	80014e6 <fifo_read+0x1e>
    buf[0] = fifo.arr[st];
    buf++;
    st = (st + 1) & USB_LOG_MASK;
    av--;
  }
  fifo.st = st;
 80014e2:	8013      	strh	r3, [r2, #0]
  return size;
}
 80014e4:	bd38      	pop	{r3, r4, r5, pc}
    buf[0] = fifo.arr[st];
 80014e6:	18d5      	adds	r5, r2, r3
 80014e8:	792d      	ldrb	r5, [r5, #4]
    st = (st + 1) & USB_LOG_MASK;
 80014ea:	3301      	adds	r3, #1
    buf[0] = fifo.arr[st];
 80014ec:	f804 5b01 	strb.w	r5, [r4], #1
    st = (st + 1) & USB_LOG_MASK;
 80014f0:	f3c3 0309 	ubfx	r3, r3, #0, #10
    av--;
 80014f4:	e7f3      	b.n	80014de <fifo_read+0x16>
 80014f6:	bf00      	nop
 80014f8:	200002f6 	strdcs	r0, [r0], -r6

080014fc <usb_log_ep0_in>:
  .parity = 0,
  .wordsize = 8,
};

char usb_log_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80014fc:	7803      	ldrb	r3, [r0, #0]
 80014fe:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001502:	2b21      	cmp	r3, #33	; 0x21
 8001504:	d10b      	bne.n	800151e <usb_log_ep0_in+0x22>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 8001506:	7843      	ldrb	r3, [r0, #1]
 8001508:	2b21      	cmp	r3, #33	; 0x21
 800150a:	d108      	bne.n	800151e <usb_log_ep0_in+0x22>
      if( req->wIndex == ifnum(interface_log) ){
 800150c:	8883      	ldrh	r3, [r0, #4]
 800150e:	2b05      	cmp	r3, #5
 8001510:	d105      	bne.n	800151e <usb_log_ep0_in+0x22>
        *data = (void*)&log_cfg;
 8001512:	4b04      	ldr	r3, [pc, #16]	; (8001524 <usb_log_ep0_in+0x28>)
        *size = sizeof(log_cfg);
        return 1;
 8001514:	2001      	movs	r0, #1
        *data = (void*)&log_cfg;
 8001516:	600b      	str	r3, [r1, #0]
        *size = sizeof(log_cfg);
 8001518:	2307      	movs	r3, #7
 800151a:	8013      	strh	r3, [r2, #0]
        return 1;
 800151c:	4770      	bx	lr
      }
    }
  }
  return 0;
 800151e:	2000      	movs	r0, #0
}
 8001520:	4770      	bx	lr
 8001522:	bf00      	nop
 8001524:	2000001a 	andcs	r0, r0, sl, lsl r0

08001528 <usb_log_ep0_out>:

char usb_log_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8001528:	b510      	push	{r4, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 800152a:	7803      	ldrb	r3, [r0, #0]
 800152c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001530:	2b21      	cmp	r3, #33	; 0x21
 8001532:	d10c      	bne.n	800154e <usb_log_ep0_out+0x26>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 8001534:	7843      	ldrb	r3, [r0, #1]
 8001536:	2b20      	cmp	r3, #32
 8001538:	d109      	bne.n	800154e <usb_log_ep0_out+0x26>
      if(rx_size == 0)return 1;
 800153a:	b132      	cbz	r2, 800154a <usb_log_ep0_out+0x22>
      if( req->wIndex == ifnum(interface_tty) ){
 800153c:	8884      	ldrh	r4, [r0, #4]
 800153e:	2c01      	cmp	r4, #1
 8001540:	d105      	bne.n	800154e <usb_log_ep0_out+0x26>
 8001542:	4904      	ldr	r1, [pc, #16]	; (8001554 <usb_log_ep0_out+0x2c>)
 8001544:	4620      	mov	r0, r4
 8001546:	f7ff f99b 	bl	8000880 <_usb_ep_read>
      if(rx_size == 0)return 1;
 800154a:	2001      	movs	r0, #1
        return 1;
      }
    }
  }
  return 0;
}
 800154c:	bd10      	pop	{r4, pc}
  return 0;
 800154e:	2000      	movs	r0, #0
 8001550:	e7fc      	b.n	800154c <usb_log_ep0_out+0x24>
 8001552:	bf00      	nop
 8001554:	2000001a 	andcs	r0, r0, sl, lsl r0

08001558 <usb_log_init>:
void usb_log_init(){
 8001558:	b510      	push	{r4, lr}
  usb_ep_init( ENDP_LOG_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800155a:	2300      	movs	r3, #0
 800155c:	2208      	movs	r2, #8
 800155e:	2103      	movs	r1, #3
 8001560:	2086      	movs	r0, #134	; 0x86
 8001562:	f7fe ff71 	bl	8000448 <usb_ep_init>
  usb_ep_init( ENDP_LOG_IN   | 0x80, USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
 8001566:	2300      	movs	r3, #0
 8001568:	2220      	movs	r2, #32
 800156a:	2102      	movs	r1, #2
 800156c:	2083      	movs	r0, #131	; 0x83
 800156e:	f7fe ff6b 	bl	8000448 <usb_ep_init>
  usb_ep_init( ENDP_LOG_OUT,         USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
}
 8001572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_ep_init( ENDP_LOG_OUT,         USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
 8001576:	2300      	movs	r3, #0
 8001578:	2220      	movs	r2, #32
 800157a:	2102      	movs	r1, #2
 800157c:	2003      	movs	r0, #3
 800157e:	f7fe bf63 	b.w	8000448 <usb_ep_init>

08001582 <log_dir>:

void log_dir(uint8_t dir_tx){
  if(dir_tx){
    fifo_str("⍄");
 8001582:	2104      	movs	r1, #4
  if(dir_tx){
 8001584:	b110      	cbz	r0, 800158c <log_dir+0xa>
    fifo_str("⍄");
 8001586:	4802      	ldr	r0, [pc, #8]	; (8001590 <log_dir+0xe>)
  }else{
    fifo_str("⍃");
 8001588:	f7ff bf80 	b.w	800148c <fifo_write>
 800158c:	4801      	ldr	r0, [pc, #4]	; (8001594 <log_dir+0x12>)
 800158e:	e7fb      	b.n	8001588 <log_dir+0x6>
 8001590:	080019b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, fp, ip}
 8001594:	080019b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, fp, ip}

08001598 <usb_log_grab>:
  }
}

void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 8001598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800159c:	4604      	mov	r4, r0
 800159e:	460d      	mov	r5, r1
 80015a0:	4616      	mov	r6, r2
  static uint8_t dir_prev = 0xFF;
  uint16_t av = fifo_free_size();
 80015a2:	f7ff ff69 	bl	8001478 <fifo_data_size>
 80015a6:	f5c0 707f 	rsb	r0, r0, #1020	; 0x3fc
 80015aa:	3003      	adds	r0, #3
  if(av < 10)return;
 80015ac:	b280      	uxth	r0, r0
 80015ae:	2809      	cmp	r0, #9
 80015b0:	d938      	bls.n	8001624 <usb_log_grab+0x8c>
  
  if(dir_prev != dir_tx){
 80015b2:	4b1d      	ldr	r3, [pc, #116]	; (8001628 <usb_log_grab+0x90>)
 80015b4:	79da      	ldrb	r2, [r3, #7]
 80015b6:	42a2      	cmp	r2, r4
 80015b8:	d007      	beq.n	80015ca <usb_log_grab+0x32>
    dir_prev = dir_tx;
    fifo_str("\r\n");
 80015ba:	481c      	ldr	r0, [pc, #112]	; (800162c <usb_log_grab+0x94>)
 80015bc:	2103      	movs	r1, #3
    dir_prev = dir_tx;
 80015be:	71dc      	strb	r4, [r3, #7]
    fifo_str("\r\n");
 80015c0:	f7ff ff64 	bl	800148c <fifo_write>
    log_dir(dir_tx);
 80015c4:	4620      	mov	r0, r4
 80015c6:	f7ff ffdc 	bl	8001582 <log_dir>
void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 80015ca:	f04f 0a00 	mov.w	sl, #0
 80015ce:	4653      	mov	r3, sl
      fifo_write(&buf[pi], i-pi);
      fifo_str("\r");
      log_dir(dir_tx);
    }else if(buf[i] == '\n'){
      fifo_write(&buf[pi], i-pi);
      fifo_str("\n\r");
 80015d0:	4f17      	ldr	r7, [pc, #92]	; (8001630 <usb_log_grab+0x98>)
      fifo_str("\r");
 80015d2:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8001634 <usb_log_grab+0x9c>
 80015d6:	fa1f f98a 	uxth.w	r9, sl
  for(i=0; i<size; i++){
 80015da:	45b1      	cmp	r9, r6
 80015dc:	4649      	mov	r1, r9
 80015de:	eb05 0003 	add.w	r0, r5, r3
 80015e2:	db04      	blt.n	80015ee <usb_log_grab+0x56>
    }
    
    pi = i+1;
  }
  fifo_write(&buf[pi], i-pi);
}
 80015e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  fifo_write(&buf[pi], i-pi);
 80015e8:	1ac9      	subs	r1, r1, r3
 80015ea:	f7ff bf4f 	b.w	800148c <fifo_write>
    if(buf[i] == '\r'){
 80015ee:	5c6a      	ldrb	r2, [r5, r1]
 80015f0:	2a0d      	cmp	r2, #13
 80015f2:	d10f      	bne.n	8001614 <usb_log_grab+0x7c>
      fifo_write(&buf[pi], i-pi);
 80015f4:	1ac9      	subs	r1, r1, r3
 80015f6:	f7ff ff49 	bl	800148c <fifo_write>
      fifo_str("\r");
 80015fa:	2102      	movs	r1, #2
 80015fc:	4640      	mov	r0, r8
      fifo_str("\n\r");
 80015fe:	f7ff ff45 	bl	800148c <fifo_write>
      log_dir(dir_tx);
 8001602:	4620      	mov	r0, r4
 8001604:	f7ff ffbd 	bl	8001582 <log_dir>
    pi = i+1;
 8001608:	f109 0301 	add.w	r3, r9, #1
 800160c:	b29b      	uxth	r3, r3
 800160e:	f10a 0a01 	add.w	sl, sl, #1
 8001612:	e7e0      	b.n	80015d6 <usb_log_grab+0x3e>
    }else if(buf[i] == '\n'){
 8001614:	2a0a      	cmp	r2, #10
 8001616:	d1fa      	bne.n	800160e <usb_log_grab+0x76>
      fifo_write(&buf[pi], i-pi);
 8001618:	1ac9      	subs	r1, r1, r3
 800161a:	f7ff ff37 	bl	800148c <fifo_write>
      fifo_str("\n\r");
 800161e:	2103      	movs	r1, #3
 8001620:	4638      	mov	r0, r7
 8001622:	e7ec      	b.n	80015fe <usb_log_grab+0x66>
}
 8001624:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001628:	2000001a 	andcs	r0, r0, sl, lsl r0
 800162c:	080019bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, fp, ip}
 8001630:	080019b0 	stmdaeq	r0, {r4, r5, r7, r8, fp, ip}
 8001634:	080019b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, fp, ip}

08001638 <usb_log_poll>:

void usb_log_poll(){
 8001638:	b510      	push	{r4, lr}
  uint16_t size;
  USB_ALIGN uint8_t buf[ENDP_LOG_SIZE];
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 800163a:	4c0e      	ldr	r4, [pc, #56]	; (8001674 <usb_log_poll+0x3c>)
void usb_log_poll(){
 800163c:	b088      	sub	sp, #32
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 800163e:	8822      	ldrh	r2, [r4, #0]
 8001640:	f002 0230 	and.w	r2, r2, #48	; 0x30
 8001644:	2a30      	cmp	r2, #48	; 0x30
 8001646:	d008      	beq.n	800165a <usb_log_poll+0x22>
    size = fifo_read(buf, sizeof(buf));
 8001648:	2120      	movs	r1, #32
 800164a:	4668      	mov	r0, sp
 800164c:	f7ff ff3c 	bl	80014c8 <fifo_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8001650:	4669      	mov	r1, sp
 8001652:	b282      	uxth	r2, r0
 8001654:	2006      	movs	r0, #6
 8001656:	f7ff f8cf 	bl	80007f8 <_usb_ep_write>
    usb_ep_write( ENDP_LOG_IN | 0x80, (uint16_t*)buf, size );
  }
  if(usb_ep_ready( ENDP_LOG_OUT ) ){
 800165a:	8823      	ldrh	r3, [r4, #0]
 800165c:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001660:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001664:	d103      	bne.n	800166e <usb_log_poll+0x36>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8001666:	4669      	mov	r1, sp
 8001668:	2007      	movs	r0, #7
 800166a:	f7ff f909 	bl	8000880 <_usb_ep_read>
    usb_ep_read( ENDP_LOG_OUT, (uint16_t*)buf);
  }
 800166e:	b008      	add	sp, #32
 8001670:	bd10      	pop	{r4, pc}
 8001672:	bf00      	nop
 8001674:	40005c0c 	andmi	r5, r0, ip, lsl #24

08001678 <__libc_init_array>:
 8001678:	b570      	push	{r4, r5, r6, lr}
 800167a:	4e0d      	ldr	r6, [pc, #52]	; (80016b0 <__libc_init_array+0x38>)
 800167c:	4d0d      	ldr	r5, [pc, #52]	; (80016b4 <__libc_init_array+0x3c>)
 800167e:	1b76      	subs	r6, r6, r5
 8001680:	10b6      	asrs	r6, r6, #2
 8001682:	d006      	beq.n	8001692 <__libc_init_array+0x1a>
 8001684:	2400      	movs	r4, #0
 8001686:	3401      	adds	r4, #1
 8001688:	f855 3b04 	ldr.w	r3, [r5], #4
 800168c:	4798      	blx	r3
 800168e:	42a6      	cmp	r6, r4
 8001690:	d1f9      	bne.n	8001686 <__libc_init_array+0xe>
 8001692:	4e09      	ldr	r6, [pc, #36]	; (80016b8 <__libc_init_array+0x40>)
 8001694:	4d09      	ldr	r5, [pc, #36]	; (80016bc <__libc_init_array+0x44>)
 8001696:	f7fe fe6d 	bl	8000374 <_init>
 800169a:	1b76      	subs	r6, r6, r5
 800169c:	10b6      	asrs	r6, r6, #2
 800169e:	d006      	beq.n	80016ae <__libc_init_array+0x36>
 80016a0:	2400      	movs	r4, #0
 80016a2:	3401      	adds	r4, #1
 80016a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80016a8:	4798      	blx	r3
 80016aa:	42a6      	cmp	r6, r4
 80016ac:	d1f9      	bne.n	80016a2 <__libc_init_array+0x2a>
 80016ae:	bd70      	pop	{r4, r5, r6, pc}
 80016b0:	080019c0 	stmdaeq	r0, {r6, r7, r8, fp, ip}
 80016b4:	080019c0 	stmdaeq	r0, {r6, r7, r8, fp, ip}
 80016b8:	080019c0 	stmdaeq	r0, {r6, r7, r8, fp, ip}
 80016bc:	080019c0 	stmdaeq	r0, {r6, r7, r8, fp, ip}

080016c0 <Reset_Handler>:
 80016c0:	2100      	movs	r1, #0
 80016c2:	e003      	b.n	80016cc <LoopCopyDataInit>

080016c4 <CopyDataInit>:
 80016c4:	4b0b      	ldr	r3, [pc, #44]	; (80016f4 <LoopFillZerobss+0x14>)
 80016c6:	585b      	ldr	r3, [r3, r1]
 80016c8:	5043      	str	r3, [r0, r1]
 80016ca:	3104      	adds	r1, #4

080016cc <LoopCopyDataInit>:
 80016cc:	480a      	ldr	r0, [pc, #40]	; (80016f8 <LoopFillZerobss+0x18>)
 80016ce:	4b0b      	ldr	r3, [pc, #44]	; (80016fc <LoopFillZerobss+0x1c>)
 80016d0:	1842      	adds	r2, r0, r1
 80016d2:	429a      	cmp	r2, r3
 80016d4:	d3f6      	bcc.n	80016c4 <CopyDataInit>
 80016d6:	4a0a      	ldr	r2, [pc, #40]	; (8001700 <LoopFillZerobss+0x20>)
 80016d8:	e002      	b.n	80016e0 <LoopFillZerobss>

080016da <FillZerobss>:
 80016da:	2300      	movs	r3, #0
 80016dc:	f842 3b04 	str.w	r3, [r2], #4

080016e0 <LoopFillZerobss>:
 80016e0:	4b08      	ldr	r3, [pc, #32]	; (8001704 <LoopFillZerobss+0x24>)
 80016e2:	429a      	cmp	r2, r3
 80016e4:	d3f9      	bcc.n	80016da <FillZerobss>
 80016e6:	f7fe fe46 	bl	8000376 <SystemInit>
 80016ea:	f7ff ffc5 	bl	8001678 <__libc_init_array>
 80016ee:	f000 f80d 	bl	800170c <main>
 80016f2:	4770      	bx	lr
 80016f4:	080019c0 	stmdaeq	r0, {r6, r7, r8, fp, ip}
 80016f8:	20000000 	andcs	r0, r0, r0
 80016fc:	20000024 	andcs	r0, r0, r4, lsr #32
 8001700:	20000024 	andcs	r0, r0, r4, lsr #32
 8001704:	200006fc 	strdcs	r0, [r0], -ip

08001708 <BusFault_Handler>:
 8001708:	e7fe      	b.n	8001708 <BusFault_Handler>
	...

0800170c <main>:

int main(void){
 800170c:	b508      	push	{r3, lr}
  clock_HS(1);
 800170e:	2001      	movs	r0, #1
 8001710:	f7fe fd6a 	bl	80001e8 <clock_HS>
  systick_init();
 8001714:	f7fe fe36 	bl	8000384 <systick_init>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 8001718:	4a29      	ldr	r2, [pc, #164]	; (80017c0 <main+0xb4>)
 800171a:	69d3      	ldr	r3, [r2, #28]
 800171c:	f043 030f 	orr.w	r3, r3, #15
 8001720:	61d3      	str	r3, [r2, #28]

  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(BLED);
 8001722:	4b28      	ldr	r3, [pc, #160]	; (80017c4 <main+0xb8>)
 8001724:	681a      	ldr	r2, [r3, #0]
 8001726:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800172a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800172e:	601a      	str	r2, [r3, #0]
 8001730:	689a      	ldr	r2, [r3, #8]
 8001732:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
 8001736:	609a      	str	r2, [r3, #8]
 8001738:	681a      	ldr	r2, [r3, #0]
 800173a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800173e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001742:	601a      	str	r2, [r3, #0]
 8001744:	689a      	ldr	r2, [r3, #8]
 8001746:	f442 5240 	orr.w	r2, r2, #12288	; 0x3000
 800174a:	609a      	str	r2, [r3, #8]
 800174c:	681a      	ldr	r2, [r3, #0]
 800174e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8001752:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001756:	601a      	str	r2, [r3, #0]
 8001758:	689a      	ldr	r2, [r3, #8]
 800175a:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800175e:	609a      	str	r2, [r3, #8]
  GPIO_config(ADC_IN); GPIO_config(RESET); GPIO_config(BOOT0);
 8001760:	681a      	ldr	r2, [r3, #0]
 8001762:	f042 0203 	orr.w	r2, r2, #3
 8001766:	601a      	str	r2, [r3, #0]
 8001768:	689a      	ldr	r2, [r3, #8]
 800176a:	f022 0203 	bic.w	r2, r2, #3
 800176e:	609a      	str	r2, [r3, #8]
 8001770:	4a15      	ldr	r2, [pc, #84]	; (80017c8 <main+0xbc>)
 8001772:	6811      	ldr	r1, [r2, #0]
 8001774:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
 8001778:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 800177c:	6011      	str	r1, [r2, #0]
 800177e:	6891      	ldr	r1, [r2, #8]
 8001780:	f441 3140 	orr.w	r1, r1, #196608	; 0x30000
 8001784:	6091      	str	r1, [r2, #8]
 8001786:	6819      	ldr	r1, [r3, #0]
 8001788:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800178c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001790:	6019      	str	r1, [r3, #0]
 8001792:	6899      	ldr	r1, [r3, #8]
 8001794:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 8001798:	6099      	str	r1, [r3, #8]
  
  GPO_OFF(RLED); GPO_OFF(GLED); GPO_OFF(BLED);
 800179a:	2120      	movs	r1, #32
 800179c:	6199      	str	r1, [r3, #24]
 800179e:	2140      	movs	r1, #64	; 0x40
 80017a0:	6199      	str	r1, [r3, #24]
 80017a2:	2110      	movs	r1, #16
 80017a4:	6199      	str	r1, [r3, #24]
  GPO_OFF(RESET); GPO_OFF(BOOT0);
 80017a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80017aa:	6191      	str	r1, [r2, #24]
 80017ac:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 80017b0:	619a      	str	r2, [r3, #24]
  
  USB_setup();
 80017b2:	f7fe fe00 	bl	80003b6 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 80017b6:	b662      	cpsie	i
  __enable_irq();
  
  //uint32_t ntime_ms = 0;

  while(1){
    usb_class_poll();
 80017b8:	f7ff fb70 	bl	8000e9c <usb_class_poll>
 80017bc:	e7fc      	b.n	80017b8 <main+0xac>
 80017be:	bf00      	nop
 80017c0:	40023800 	andmi	r3, r2, r0, lsl #16
 80017c4:	40020400 	andmi	r0, r2, r0, lsl #8
 80017c8:	40020000 	andmi	r0, r2, r0

Disassembly of section .rodata:

080017cc <USB_HIDDescriptor-0x2>:
	...

080017ce <USB_HIDDescriptor>:
static const uint8_t USB_HIDDescriptor[] = {
 80017ce:	09ff0006 	ldmibeq	pc!, {r1, r2}^	; <UNPREDICTABLE>
 80017d2:	1501a101 	strne	sl, [r1, #-257]	; 0xfffffeff
 80017d6:	75ff2500 	ldrbvc	r2, [pc, #1280]!	; 8001cde <__exidx_end+0x31e>
 80017da:	09029508 	stmdbeq	r2, {r3, r8, sl, ip, pc}
 80017de:	0102b200 	mrseq	fp, R10_usr
 80017e2:	 	andne	r1, r1, r0, asr #5

080017e3 <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 80017e3:	01100112 	tsteq	r0, r2, lsl r1
 80017e7:	080102ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9}
 80017eb:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 8001eb3 <__exidx_end+0x4f3>
 80017ef:	02010001 	andeq	r0, r1, #1
 80017f3:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

080017f5 <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 80017f5:	01440209 	cmpeq	r4, r9, lsl #4
 80017f9:	80000109 	andhi	r0, r0, r9, lsl #2
 80017fd:	00040932 	andeq	r0, r4, r2, lsr r9
 8001801:	00030000 	andeq	r0, r3, r0
 8001805:	21090000 	mrscs	r0, (UNDEF: 9)
 8001809:	01000101 	tsteq	r0, r1, lsl #2
 800180d:	08001522 	stmdaeq	r0, {r1, r5, r8, sl, ip}
 8001811:	0202010b 	andeq	r0, r2, #-1073741822	; 0xc0000002
 8001815:	09040002 	stmdbeq	r4, {r1}
 8001819:	01000104 	tsteq	r0, r4, lsl #2
 800181d:	04000202 	streq	r0, [r0], #-514	; 0xfffffdfe
 8001821:	10002405 	andne	r2, r0, r5, lsl #8
 8001825:	01240501 			; <UNDEFINED> instruction: 0x01240501
 8001829:	24040200 	strcs	r0, [r4], #-512	; 0xfffffe00
 800182d:	24050202 	strcs	r0, [r5], #-514	; 0xfffffdfe
 8001831:	07020106 	streq	r0, [r2, -r6, lsl #2]
 8001835:	08038405 	stmdaeq	r3, {r0, r2, sl, pc}
 8001839:	04096400 	streq	r6, [r9], #-1024	; 0xfffffc00
 800183d:	0a020002 	beq	808184d <__exidx_end+0x7fe8d>
 8001841:	07000000 	streq	r0, [r0, -r0]
 8001845:	20020105 	andcs	r0, r2, r5, lsl #2
 8001849:	05070000 	streq	r0, [r7, #-0]
 800184d:	00200281 	eoreq	r0, r0, r1, lsl #5
 8001851:	030b0800 	movweq	r0, #47104	; 0xb800
 8001855:	00020202 	andeq	r0, r2, r2, lsl #4
 8001859:	03040905 	movweq	r0, #18693	; 0x4905
 800185d:	02020100 	andeq	r0, r2, #0, 2
 8001861:	24050500 	strcs	r0, [r5], #-1280	; 0xfffffb00
 8001865:	05011000 	streq	r1, [r1, #-0]
 8001869:	04000124 	streq	r0, [r0], #-292	; 0xfffffedc
 800186d:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 8001871:	03062405 	movweq	r2, #25605	; 0x6405
 8001875:	85050704 	strhi	r0, [r5, #-1796]	; 0xfffff8fc
 8001879:	64000803 	strvs	r0, [r0], #-2051	; 0xfffff7fd
 800187d:	00040409 	andeq	r0, r4, r9, lsl #8
 8001881:	00000a02 	andeq	r0, r0, r2, lsl #20
 8001885:	02050700 	andeq	r0, r5, #0, 14
 8001889:	00002002 	andeq	r2, r0, r2
 800188d:	02820507 	addeq	r0, r2, #29360128	; 0x1c00000
 8001891:	08000020 	stmdaeq	r0, {r5}
 8001895:	0203050b 	andeq	r0, r3, #46137344	; 0x2c00000
 8001899:	09060002 	stmdbeq	r6, {r1}
 800189d:	01000504 	tsteq	r0, r4, lsl #10
 80018a1:	06000202 	streq	r0, [r0], -r2, lsl #4
 80018a5:	10002405 	andne	r2, r0, r5, lsl #8
 80018a9:	01240501 			; <UNDEFINED> instruction: 0x01240501
 80018ad:	24040600 	strcs	r0, [r4], #-1536	; 0xfffffa00
 80018b1:	24050202 	strcs	r0, [r5], #-514	; 0xfffffdfe
 80018b5:	07060506 	streq	r0, [r6, -r6, lsl #10]
 80018b9:	08038605 	stmdaeq	r3, {r0, r2, r9, sl, pc}
 80018bd:	04096400 	streq	r6, [r9], #-1024	; 0xfffffc00
 80018c1:	0a020006 	beq	80818e1 <__exidx_end+0x7ff21>
 80018c5:	07000000 	streq	r0, [r0, -r0]
 80018c9:	20020305 	andcs	r0, r2, r5, lsl #6
 80018cd:	05070000 	streq	r0, [r7, #-0]
 80018d1:	00200283 	eoreq	r0, r0, r3, lsl #5
 80018d5:	070b0800 	streq	r0, [fp, -r0, lsl #16]
 80018d9:	00010102 	andeq	r0, r1, r2, lsl #2
 80018dd:	07040900 	streq	r0, [r4, -r0, lsl #18]
 80018e1:	01010000 	mrseq	r0, (UNDEF: 1)
 80018e5:	24090000 	strcs	r0, [r9], #-0
 80018e9:	1e010001 	cdpne	0, 0, cr0, cr1, cr1, {0}
 80018ed:	0c080100 	stfeqs	f0, [r8], {-0}
 80018f1:	01010224 	tsteq	r1, r4, lsr #4
 80018f5:	00010002 	andeq	r0, r1, r2
 80018f9:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 80018fd:	01020324 	tsteq	r2, r4, lsr #6
 8001901:	00010001 	andeq	r0, r1, r1
 8001905:	00080409 	andeq	r0, r8, r9, lsl #8
 8001909:	00020100 	andeq	r0, r2, r0, lsl #2
 800190d:	08040900 	stmdaeq	r4, {r8, fp}
 8001911:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8001915:	24070000 	strcs	r0, [r7], #-0
 8001919:	01010201 	tsteq	r1, r1, lsl #4
 800191d:	02240b00 	eoreq	r0, r4, #0, 22
 8001921:	10020101 	andne	r0, r2, r1, lsl #2
 8001925:	00abe001 	adceq	lr, fp, r1
 8001929:	01870509 	orreq	r0, r7, r9, lsl #10
 800192d:	00010064 	andeq	r0, r1, r4, rrx
 8001931:	01250700 			; <UNDEFINED> instruction: 0x01250700
 8001935:	00000000 	andeq	r0, r0, r0

08001939 <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 8001939:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 800193d:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8001941:	 	streq	r0, [r0], #-1

08001944 <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 8001944:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

08001948 <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 8001948:	00430316 	subeq	r0, r3, r6, lsl r3
 800194c:	004b004f 	subeq	r0, fp, pc, asr #32
 8001950:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 8001954:	00450057 	subeq	r0, r5, r7, asr r0
 8001958:	00450048 	subeq	r0, r5, r8, asr #32
 800195c:	 			; <UNDEFINED> instruction: 0x032a0055

0800195e <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"USB RISCV programmer"); //Product
 800195e:	0055032a 	subseq	r0, r5, sl, lsr #6
 8001962:	00420053 	subeq	r0, r2, r3, asr r0
 8001966:	00520020 	subseq	r0, r2, r0, lsr #32
 800196a:	00530049 	subseq	r0, r3, r9, asr #32
 800196e:	00560043 	subseq	r0, r6, r3, asr #32
 8001972:	00700020 	rsbseq	r0, r0, r0, lsr #32
 8001976:	006f0072 	rsbeq	r0, pc, r2, ror r0	; <UNPREDICTABLE>
 800197a:	00720067 	rsbseq	r0, r2, r7, rrx
 800197e:	006d0061 	rsbeq	r0, sp, r1, rrx
 8001982:	0065006d 	rsbeq	r0, r5, sp, rrx
 8001986:	 	movweq	r0, #16498	; 0x4072

08001988 <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8001988:	00310304 	eorseq	r0, r1, r4, lsl #6

0800198c <USB_String_TTY>:
USB_STRING(USB_String_TTY, u"DBG");
 800198c:	00440308 	subeq	r0, r4, r8, lsl #6
 8001990:	00470042 	subeq	r0, r7, r2, asr #32

08001994 <USB_String_PROGR>:
USB_STRING(USB_String_PROGR, u"STFLASH");
 8001994:	00530310 	subseq	r0, r3, r0, lsl r3
 8001998:	00460054 	subeq	r0, r6, r4, asr r0
 800199c:	0041004c 	subeq	r0, r1, ip, asr #32
 80019a0:	00480053 	subeq	r0, r8, r3, asr r0

080019a4 <USB_String_LOG>:
USB_STRING(USB_String_LOG, u"LOG");
 80019a4:	004c0308 	subeq	r0, ip, r8, lsl #6
 80019a8:	0047004f 	subeq	r0, r7, pc, asr #32
 80019ac:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 80019b0:	e2000d0a 	and	r0, r0, #640	; 0x280
 80019b4:	e200848d 	and	r8, r0, #-1929379840	; 0x8d000000
 80019b8:	0d00838d 	stceq	3, cr8, [r0, #-564]	; 0xfffffdcc
 80019bc:	0000000a 	andeq	r0, r0, sl

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

20000004 <filter.5141>:
20000004:	00800000 	addeq	r0, r0, r0

20000008 <filter.5145>:
20000008:	00200000 	eoreq	r0, r0, r0

2000000c <tty_cfg>:
volatile struct cdc_linecoding tty_cfg = {
2000000c:	00002580 	andeq	r2, r0, r0, lsl #11
20000010:	 	andhi	r0, r8, r1

20000013 <progr_cfg>:
volatile struct cdc_linecoding progr_cfg = {
20000013:	00002580 	andeq	r2, r0, r0, lsl #11
20000017:	 	andhi	r0, r8, r1

2000001a <log_cfg>:
volatile struct cdc_linecoding log_cfg = {
2000001a:	00002580 	andeq	r2, r0, r0, lsl #11
2000001e:	 			; <UNDEFINED> instruction: 0xff080001

20000021 <dir_prev.4445>:
20000021:	Address 0x0000000020000021 is out of bounds.


Disassembly of section .bss:

20000024 <systick_internal>:
volatile uint32_t systick_internal = 0;
20000024:	00000000 	andeq	r0, r0, r0

20000028 <ep0_buf>:
static const uint8_t *ep0_buf = NULL;
20000028:	00000000 	andeq	r0, r0, r0

2000002c <ep0_count>:
	...

2000002e <setup_packet>:
	...

20000036 <bytesread.4450>:
	...

20000038 <configuration>:
static uint8_t configuration = 0;
20000038:	00000000 	andeq	r0, r0, r0

2000003c <adc_idx>:
	...

2000003d <oversampl_cnt.5154>:
	...

2000003e <curval.5155>:
	...

20000040 <adc_timeH>:
	...

20000042 <adc_timeL>:
	...

20000044 <resdata.5171>:
20000044:	00000000 	andeq	r0, r0, r0

20000048 <hid_timeout>:
static volatile uint32_t hid_timeout = 0;
20000048:	00000000 	andeq	r0, r0, r0

2000004c <uart1_rx>:
	...

2000014e <uart1_tx>:
	...

20000250 <ttymode>:
volatile char ttymode = TTYM_NORMAL;
20000250:	00000000 	andeq	r0, r0, r0

20000254 <timeout_ms>:
volatile uint32_t timeout_ms = 0;
20000254:	00000000 	andeq	r0, r0, r0

20000258 <initflag>:
static char initflag = 0;
20000258:	00000000 	andeq	r0, r0, r0

2000025c <epfunc_in>:
	...

2000027c <epfunc_out>:
	...

2000029c <hid_data>:
	...

2000029e <adc_buffer>:
	...

200002f6 <fifo>:
	...

Disassembly of section ._user_heap_stack:

200006fc <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_Min_Stack_Size+0x45c3c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000355 	andeq	r0, r0, r5, asr r3
      10:	0000120c 	andeq	r1, r0, ip, lsl #4
      14:	0000ca00 	andeq	ip, r0, r0, lsl #20
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000298 	muleq	r0, r8, r2
      30:	00073103 	andeq	r3, r7, r3, lsl #2
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	b1050202 	tstlt	r5, r2, lsl #4
      40:	02000002 	andeq	r0, r0, #2
      44:	00930504 	addseq	r0, r3, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	00008e05 	andeq	r8, r0, r5, lsl #28
      50:	08010200 	stmdaeq	r1, {r9}
      54:	00000296 	muleq	r0, r6, r2
      58:	00014403 	andeq	r4, r1, r3, lsl #8
      5c:	19310400 	ldmdbne	r1!, {sl}
      60:	00000064 	andeq	r0, r0, r4, rrx
      64:	be070202 	cdplt	2, 0, cr0, cr7, cr2, {0}
      68:	03000001 	movweq	r0, #1
      6c:	000002f8 	strdeq	r0, [r0], -r8
      70:	7c193404 	cfldrsvc	mvf3, [r9], {4}
      74:	04000000 	streq	r0, [r0], #-0
      78:	0000006b 	andeq	r0, r0, fp, rrx
      7c:	5e070402 	cdppl	4, 0, cr0, cr7, cr2, {0}
      80:	02000000 	andeq	r0, r0, #0
      84:	00590708 	subseq	r0, r9, r8, lsl #14
      88:	04050000 	streq	r0, [r5], #-0
      8c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
      90:	008a0400 	addeq	r0, sl, r0, lsl #8
      94:	04020000 	streq	r0, [r2], #-0
      98:	00006307 	andeq	r6, r0, r7, lsl #6
      9c:	02a40600 	adceq	r0, r4, #0, 12
      a0:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
      a4:	00911506 	addseq	r1, r1, r6, lsl #10
      a8:	01010000 	mrseq	r0, (UNDEF: 1)
      ac:	00017a07 	andeq	r7, r1, r7, lsl #20
      b0:	114c0500 	cmpne	ip, r0, lsl #10
      b4:	0000006b 	andeq	r0, r0, fp, rrx
      b8:	84080101 	strhi	r0, [r8], #-257	; 0xfffffeff
      bc:	09012506 	stmdbeq	r1, {r1, r2, r8, sl, sp}
      c0:	00000175 	andeq	r0, r0, r5, ror r1
      c4:	52434109 	subpl	r4, r3, #1073741826	; 0x40000002
      c8:	01270600 			; <UNDEFINED> instruction: 0x01270600
      cc:	00007711 	andeq	r7, r0, r1, lsl r7
      d0:	00230200 	eoreq	r0, r3, r0, lsl #4
      d4:	0000af0a 	andeq	sl, r0, sl, lsl #30
      d8:	01280600 			; <UNDEFINED> instruction: 0x01280600
      dc:	00007711 	andeq	r7, r0, r1, lsl r7
      e0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
      e4:	0001540a 	andeq	r5, r1, sl, lsl #8
      e8:	01290600 			; <UNDEFINED> instruction: 0x01290600
      ec:	00007711 	andeq	r7, r0, r1, lsl r7
      f0:	08230200 	stmdaeq	r3!, {r9}
      f4:	0003350a 	andeq	r3, r3, sl, lsl #10
      f8:	012a0600 			; <UNDEFINED> instruction: 0x012a0600
      fc:	00007711 	andeq	r7, r0, r1, lsl r7
     100:	0c230200 	sfmeq	f0, 4, [r3], #-0
     104:	0000700a 	andeq	r7, r0, sl
     108:	012b0600 			; <UNDEFINED> instruction: 0x012b0600
     10c:	00007711 	andeq	r7, r0, r1, lsl r7
     110:	10230200 	eorne	r0, r3, r0, lsl #4
     114:	00012d0a 	andeq	r2, r1, sl, lsl #26
     118:	012c0600 			; <UNDEFINED> instruction: 0x012c0600
     11c:	00007711 	andeq	r7, r0, r1, lsl r7
     120:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     124:	00525309 	subseq	r5, r2, r9, lsl #6
     128:	11012d06 	tstne	r1, r6, lsl #26
     12c:	00000077 	andeq	r0, r0, r7, ror r0
     130:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     134:	0052424f 	subseq	r4, r2, pc, asr #4
     138:	11012e06 	tstne	r1, r6, lsl #28
     13c:	00000077 	andeq	r0, r0, r7, ror r0
     140:	0a1c2302 	beq	708d50 <_Min_Stack_Size+0x708950>
     144:	00000230 	andeq	r0, r0, r0, lsr r2
     148:	11012f06 	tstne	r1, r6, lsl #30
     14c:	00000077 	andeq	r0, r0, r7, ror r0
     150:	0a202302 	beq	808d60 <_Min_Stack_Size+0x808960>
     154:	000002c1 	andeq	r0, r0, r1, asr #5
     158:	0e013006 	cdpeq	0, 0, cr3, cr1, cr6, {0}
     15c:	00000175 	andeq	r0, r0, r5, ror r1
     160:	0a242302 	beq	908d70 <_Min_Stack_Size+0x908970>
     164:	00000236 	andeq	r0, r0, r6, lsr r2
     168:	11013106 	tstne	r1, r6, lsl #2
     16c:	00000077 	andeq	r0, r0, r7, ror r0
     170:	01802303 	orreq	r2, r0, r3, lsl #6
     174:	006b0b00 	rsbeq	r0, fp, r0, lsl #22
     178:	01850000 	orreq	r0, r5, r0
     17c:	960c0000 	strls	r0, [ip], -r0
     180:	16000000 	strne	r0, [r0], -r0
     184:	00a10d00 	adceq	r0, r1, r0, lsl #26
     188:	32060000 	andcc	r0, r6, #0
     18c:	00ba0301 	adcseq	r0, sl, r1, lsl #6
     190:	2c080000 	stccs	0, cr0, [r8], {-0}
     194:	09014f06 	stmdbeq	r1, {r1, r2, r8, r9, sl, fp, lr}
     198:	0000023d 	andeq	r0, r0, sp, lsr r2
     19c:	0000530a 	andeq	r5, r0, sl, lsl #6
     1a0:	01510600 	cmpeq	r1, r0, lsl #12
     1a4:	00007711 	andeq	r7, r0, r1, lsl r7
     1a8:	00230200 	eoreq	r0, r3, r0, lsl #4
     1ac:	0000290a 	andeq	r2, r0, sl, lsl #18
     1b0:	01520600 	cmpeq	r2, r0, lsl #12
     1b4:	00007711 	andeq	r7, r0, r1, lsl r7
     1b8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1bc:	00015b0a 	andeq	r5, r1, sl, lsl #22
     1c0:	01530600 	cmpeq	r3, r0, lsl #12
     1c4:	00007711 	andeq	r7, r0, r1, lsl r7
     1c8:	08230200 	stmdaeq	r3!, {r9}
     1cc:	0000070a 	andeq	r0, r0, sl, lsl #14
     1d0:	01540600 	cmpeq	r4, r0, lsl #12
     1d4:	00007711 	andeq	r7, r0, r1, lsl r7
     1d8:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1dc:	52444909 	subpl	r4, r4, #147456	; 0x24000
     1e0:	01550600 	cmpeq	r5, r0, lsl #12
     1e4:	00007711 	andeq	r7, r0, r1, lsl r7
     1e8:	10230200 	eorne	r0, r3, r0, lsl #4
     1ec:	52444f09 	subpl	r4, r4, #9, 30	; 0x24
     1f0:	01560600 	cmpeq	r6, r0, lsl #12
     1f4:	00007711 	andeq	r7, r0, r1, lsl r7
     1f8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     1fc:	00009c0a 	andeq	r9, r0, sl, lsl #24
     200:	01570600 	cmpeq	r7, r0, lsl #12
     204:	00007711 	andeq	r7, r0, r1, lsl r7
     208:	18230200 	stmdane	r3!, {r9}
     20c:	00000d0a 	andeq	r0, r0, sl, lsl #26
     210:	01580600 	cmpeq	r8, r0, lsl #12
     214:	00007711 	andeq	r7, r0, r1, lsl r7
     218:	1c230200 	sfmne	f0, 4, [r3], #-0
     21c:	52464109 	subpl	r4, r6, #1073741826	; 0x40000002
     220:	01590600 	cmpeq	r9, r0, lsl #12
     224:	00024d11 	andeq	r4, r2, r1, lsl sp
     228:	20230200 	eorcs	r0, r3, r0, lsl #4
     22c:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     230:	015a0600 	cmpeq	sl, r0, lsl #12
     234:	00007711 	andeq	r7, r0, r1, lsl r7
     238:	28230200 	stmdacs	r3!, {r9}
     23c:	00770b00 	rsbseq	r0, r7, r0, lsl #22
     240:	024d0000 	subeq	r0, sp, #0
     244:	960c0000 	strls	r0, [ip], -r0
     248:	01000000 	mrseq	r0, (UNDEF: 0)
     24c:	023d0400 	eorseq	r0, sp, #0, 8
     250:	970d0000 	strls	r0, [sp, -r0]
     254:	06000001 	streq	r0, [r0], -r1
     258:	9203015b 	andls	r0, r3, #-1073741802	; 0xc0000016
     25c:	08000001 	stmdaeq	r0, {r0}
     260:	01890608 	orreq	r0, r9, r8, lsl #12
     264:	00028909 	andeq	r8, r2, r9, lsl #18
     268:	52430900 	subpl	r0, r3, #0, 18
     26c:	018b0600 	orreq	r0, fp, r0, lsl #12
     270:	00007711 	andeq	r7, r0, r1, lsl r7
     274:	00230200 	eoreq	r0, r3, r0, lsl #4
     278:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     27c:	018c0600 	orreq	r0, ip, r0, lsl #12
     280:	00007711 	andeq	r7, r0, r1, lsl r7
     284:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     288:	02040d00 	andeq	r0, r4, #0, 26
     28c:	8d060000 	stchi	0, cr0, [r6, #-0]
     290:	025f0301 	subseq	r0, pc, #67108864	; 0x4000000
     294:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     298:	09019306 	stmdbeq	r1, {r1, r2, r8, r9, ip, pc}
     29c:	00000380 	andeq	r0, r0, r0, lsl #7
     2a0:	00524309 	subseq	r4, r2, r9, lsl #6
     2a4:	11019506 	tstne	r1, r6, lsl #10
     2a8:	00000077 	andeq	r0, r0, r7, ror r0
     2ac:	0a002302 	beq	8ebc <_Min_Stack_Size+0x8abc>
     2b0:	00000329 	andeq	r0, r0, r9, lsr #6
     2b4:	11019606 	tstne	r1, r6, lsl #12
     2b8:	00000077 	andeq	r0, r0, r7, ror r0
     2bc:	0a042302 	beq	108ecc <_Min_Stack_Size+0x108acc>
     2c0:	000002ed 	andeq	r0, r0, sp, ror #5
     2c4:	11019706 	tstne	r1, r6, lsl #14
     2c8:	00000077 	andeq	r0, r0, r7, ror r0
     2cc:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2d0:	00524943 	subseq	r4, r2, r3, asr #18
     2d4:	11019806 	tstne	r1, r6, lsl #16
     2d8:	00000077 	andeq	r0, r0, r7, ror r0
     2dc:	0a0c2302 	beq	308eec <_Min_Stack_Size+0x308aec>
     2e0:	00000243 	andeq	r0, r0, r3, asr #4
     2e4:	11019906 	tstne	r1, r6, lsl #18
     2e8:	00000077 	andeq	r0, r0, r7, ror r0
     2ec:	0a102302 	beq	408efc <_Min_Stack_Size+0x408afc>
     2f0:	00000105 	andeq	r0, r0, r5, lsl #2
     2f4:	11019a06 	tstne	r1, r6, lsl #20
     2f8:	00000077 	andeq	r0, r0, r7, ror r0
     2fc:	0a142302 	beq	508f0c <_Min_Stack_Size+0x508b0c>
     300:	00000250 	andeq	r0, r0, r0, asr r2
     304:	11019b06 	tstne	r1, r6, lsl #22
     308:	00000077 	andeq	r0, r0, r7, ror r0
     30c:	0a182302 	beq	608f1c <_Min_Stack_Size+0x608b1c>
     310:	000003e8 	andeq	r0, r0, r8, ror #7
     314:	11019c06 	tstne	r1, r6, lsl #24
     318:	00000077 	andeq	r0, r0, r7, ror r0
     31c:	0a1c2302 	beq	708f2c <_Min_Stack_Size+0x708b2c>
     320:	000002d1 	ldrdeq	r0, [r0], -r1
     324:	11019d06 	tstne	r1, r6, lsl #26
     328:	00000077 	andeq	r0, r0, r7, ror r0
     32c:	0a202302 	beq	808f3c <_Min_Stack_Size+0x808b3c>
     330:	00000313 	andeq	r0, r0, r3, lsl r3
     334:	11019e06 	tstne	r1, r6, lsl #28
     338:	00000077 	andeq	r0, r0, r7, ror r0
     33c:	0a242302 	beq	908f4c <_Min_Stack_Size+0x908b4c>
     340:	0000011d 	andeq	r0, r0, sp, lsl r1
     344:	11019f06 	tstne	r1, r6, lsl #30
     348:	00000077 	andeq	r0, r0, r7, ror r0
     34c:	0a282302 	beq	a08f5c <_Min_Stack_Size+0xa08b5c>
     350:	000001fa 	strdeq	r0, [r0], -sl
     354:	1101a006 	tstne	r1, r6
     358:	00000077 	andeq	r0, r0, r7, ror r0
     35c:	0a2c2302 	beq	b08f6c <_Min_Stack_Size+0xb08b6c>
     360:	000001d7 	ldrdeq	r0, [r0], -r7
     364:	1101a106 	tstne	r1, r6, lsl #2
     368:	00000077 	andeq	r0, r0, r7, ror r0
     36c:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     370:	00525343 	subseq	r5, r2, r3, asr #6
     374:	1101a206 	tstne	r1, r6, lsl #4
     378:	00000077 	andeq	r0, r0, r7, ror r0
     37c:	00342302 	eorseq	r2, r4, r2, lsl #6
     380:	0001a40d 	andeq	sl, r1, sp, lsl #8
     384:	01a30600 			; <UNDEFINED> instruction: 0x01a30600
     388:	00029603 	andeq	r9, r2, r3, lsl #12
     38c:	06d00800 	ldrbeq	r0, [r0], r0, lsl #16
     390:	e90901c0 	stmdb	r9, {r6, r7, r8}
     394:	09000006 	stmdbeq	r0, {r1, r2}
     398:	06005254 			; <UNDEFINED> instruction: 0x06005254
     39c:	771101c2 	ldrvc	r0, [r1, -r2, asr #3]
     3a0:	02000000 	andeq	r0, r0, #0
     3a4:	44090023 	strmi	r0, [r9], #-35	; 0xffffffdd
     3a8:	c3060052 	movwgt	r0, #24658	; 0x6052
     3ac:	00771101 	rsbseq	r1, r7, r1, lsl #2
     3b0:	23020000 	movwcs	r0, #8192	; 0x2000
     3b4:	52430904 	subpl	r0, r3, #4, 18	; 0x10000
     3b8:	01c40600 	biceq	r0, r4, r0, lsl #12
     3bc:	00007711 	andeq	r7, r0, r1, lsl r7
     3c0:	08230200 	stmdaeq	r3!, {r9}
     3c4:	52534909 	subspl	r4, r3, #147456	; 0x24000
     3c8:	01c50600 	biceq	r0, r5, r0, lsl #12
     3cc:	00007711 	andeq	r7, r0, r1, lsl r7
     3d0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3d4:	00004e0a 	andeq	r4, r0, sl, lsl #28
     3d8:	01c60600 	biceq	r0, r6, r0, lsl #12
     3dc:	00007711 	andeq	r7, r0, r1, lsl r7
     3e0:	10230200 	eorne	r0, r3, r0, lsl #4
     3e4:	0003010a 	andeq	r0, r3, sl, lsl #2
     3e8:	01c70600 	biceq	r0, r7, r0, lsl #12
     3ec:	00007711 	andeq	r7, r0, r1, lsl r7
     3f0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     3f4:	0000000a 	andeq	r0, r0, sl
     3f8:	01c80600 	biceq	r0, r8, r0, lsl #12
     3fc:	00007711 	andeq	r7, r0, r1, lsl r7
     400:	18230200 	stmdane	r3!, {r9}
     404:	0002660a 	andeq	r6, r2, sl, lsl #12
     408:	01c90600 	biceq	r0, r9, r0, lsl #12
     40c:	00007711 	andeq	r7, r0, r1, lsl r7
     410:	1c230200 	sfmne	f0, 4, [r3], #-0
     414:	0002e60a 	andeq	lr, r2, sl, lsl #12
     418:	01ca0600 	biceq	r0, sl, r0, lsl #12
     41c:	00007711 	andeq	r7, r0, r1, lsl r7
     420:	20230200 	eorcs	r0, r3, r0, lsl #4
     424:	52505709 	subspl	r5, r0, #2359296	; 0x240000
     428:	01cb0600 	biceq	r0, fp, r0, lsl #12
     42c:	00007711 	andeq	r7, r0, r1, lsl r7
     430:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     434:	52535309 	subspl	r5, r3, #603979776	; 0x24000000
     438:	01cc0600 	biceq	r0, ip, r0, lsl #12
     43c:	00007711 	andeq	r7, r0, r1, lsl r7
     440:	28230200 	stmdacs	r3!, {r9}
     444:	0003220a 	andeq	r2, r3, sl, lsl #4
     448:	01cd0600 	biceq	r0, sp, r0, lsl #12
     44c:	00007711 	andeq	r7, r0, r1, lsl r7
     450:	2c230200 	sfmcs	f0, 4, [r3], #-0
     454:	0001e10a 	andeq	lr, r1, sl, lsl #2
     458:	01ce0600 	biceq	r0, lr, r0, lsl #12
     45c:	00007711 	andeq	r7, r0, r1, lsl r7
     460:	30230200 	eorcc	r0, r3, r0, lsl #4
     464:	00001d0a 	andeq	r1, r0, sl, lsl #26
     468:	01cf0600 	biceq	r0, pc, r0, lsl #12
     46c:	00007711 	andeq	r7, r0, r1, lsl r7
     470:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     474:	0000c40a 	andeq	ip, r0, sl, lsl #8
     478:	01d00600 	bicseq	r0, r0, r0, lsl #12
     47c:	00007711 	andeq	r7, r0, r1, lsl r7
     480:	38230200 	stmdacc	r3!, {r9}
     484:	00021d0a 	andeq	r1, r2, sl, lsl #26
     488:	01d10600 	bicseq	r0, r1, r0, lsl #12
     48c:	00007711 	andeq	r7, r0, r1, lsl r7
     490:	3c230200 	sfmcc	f0, 4, [r3], #-0
     494:	0001e60a 	andeq	lr, r1, sl, lsl #12
     498:	01d20600 	bicseq	r0, r2, r0, lsl #12
     49c:	00007711 	andeq	r7, r0, r1, lsl r7
     4a0:	40230200 	eormi	r0, r3, r0, lsl #4
     4a4:	0001710a 	andeq	r7, r1, sl, lsl #2
     4a8:	01d30600 	bicseq	r0, r3, r0, lsl #12
     4ac:	00007711 	andeq	r7, r0, r1, lsl r7
     4b0:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     4b4:	0001140a 	andeq	r1, r1, sl, lsl #8
     4b8:	01d40600 	bicseq	r0, r4, r0, lsl #12
     4bc:	00007711 	andeq	r7, r0, r1, lsl r7
     4c0:	48230200 	stmdami	r3!, {r9}
     4c4:	00027a0a 	andeq	r7, r2, sl, lsl #20
     4c8:	01d50600 	bicseq	r0, r5, r0, lsl #12
     4cc:	00006b0c 	andeq	r6, r0, ip, lsl #22
     4d0:	4c230200 	sfmmi	f0, 4, [r3], #-0
     4d4:	0002bb0a 	andeq	fp, r2, sl, lsl #22
     4d8:	01d60600 	bicseq	r0, r6, r0, lsl #12
     4dc:	00007711 	andeq	r7, r0, r1, lsl r7
     4e0:	50230200 	eorpl	r0, r3, r0, lsl #4
     4e4:	00030d0a 	andeq	r0, r3, sl, lsl #26
     4e8:	01d70600 	bicseq	r0, r7, r0, lsl #12
     4ec:	00007711 	andeq	r7, r0, r1, lsl r7
     4f0:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
     4f4:	0003430a 	andeq	r4, r3, sl, lsl #6
     4f8:	01d80600 	bicseq	r0, r8, r0, lsl #12
     4fc:	00007711 	andeq	r7, r0, r1, lsl r7
     500:	58230200 	stmdapl	r3!, {r9}
     504:	0000480a 	andeq	r4, r0, sl, lsl #16
     508:	01d90600 	bicseq	r0, r9, r0, lsl #12
     50c:	00007711 	andeq	r7, r0, r1, lsl r7
     510:	5c230200 	sfmpl	f0, 4, [r3], #-0
     514:	00010e0a 	andeq	r0, r1, sl, lsl #28
     518:	01da0600 	bicseq	r0, sl, r0, lsl #12
     51c:	00007711 	andeq	r7, r0, r1, lsl r7
     520:	60230200 	eorvs	r0, r3, r0, lsl #4
     524:	00018a0a 	andeq	r8, r1, sl, lsl #20
     528:	01db0600 	bicseq	r0, fp, r0, lsl #12
     52c:	00007711 	andeq	r7, r0, r1, lsl r7
     530:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     534:	0002100a 	andeq	r1, r2, sl
     538:	01dc0600 	bicseq	r0, ip, r0, lsl #12
     53c:	00007711 	andeq	r7, r0, r1, lsl r7
     540:	68230200 	stmdavs	r3!, {r9}
     544:	00026d0a 	andeq	r6, r2, sl, lsl #26
     548:	01dd0600 	bicseq	r0, sp, r0, lsl #12
     54c:	00007711 	andeq	r7, r0, r1, lsl r7
     550:	6c230200 	sfmvs	f0, 4, [r3], #-0
     554:	0002f20a 	andeq	pc, r2, sl, lsl #4
     558:	01de0600 	bicseq	r0, lr, r0, lsl #12
     55c:	00007711 	andeq	r7, r0, r1, lsl r7
     560:	70230200 	eorvc	r0, r3, r0, lsl #4
     564:	00032f0a 	andeq	r2, r3, sl, lsl #30
     568:	01df0600 	bicseq	r0, pc, r0, lsl #12
     56c:	00007711 	andeq	r7, r0, r1, lsl r7
     570:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     574:	0001ec0a 	andeq	lr, r1, sl, lsl #24
     578:	01e00600 	mvneq	r0, r0, lsl #12
     57c:	00007711 	andeq	r7, r0, r1, lsl r7
     580:	78230200 	stmdavc	r3!, {r9}
     584:	00023c0a 	andeq	r3, r2, sl, lsl #24
     588:	01e10600 	mvneq	r0, r0, lsl #12
     58c:	00007711 	andeq	r7, r0, r1, lsl r7
     590:	7c230200 	sfmvc	f0, 4, [r3], #-0
     594:	0002ca0a 	andeq	ip, r2, sl, lsl #20
     598:	01e20600 	mvneq	r0, r0, lsl #12
     59c:	00007711 	andeq	r7, r0, r1, lsl r7
     5a0:	80230300 	eorhi	r0, r3, r0, lsl #6
     5a4:	031b0a01 	tsteq	fp, #4096	; 0x1000
     5a8:	e3060000 	movw	r0, #24576	; 0x6000
     5ac:	00771101 	rsbseq	r1, r7, r1, lsl #2
     5b0:	23030000 	movwcs	r0, #12288	; 0x3000
     5b4:	490a0184 	stmdbmi	sl, {r2, r7, r8}
     5b8:	06000003 	streq	r0, [r0], -r3
     5bc:	771101e4 	ldrvc	r0, [r1, -r4, ror #3]
     5c0:	03000000 	movweq	r0, #0
     5c4:	0a018823 	beq	62658 <_Min_Stack_Size+0x62258>
     5c8:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     5cc:	1101e506 	tstne	r1, r6, lsl #10
     5d0:	00000077 	andeq	r0, r0, r7, ror r0
     5d4:	018c2303 	orreq	r2, ip, r3, lsl #6
     5d8:	0001260a 	andeq	r2, r1, sl, lsl #12
     5dc:	01e60600 	mvneq	r0, r0, lsl #12
     5e0:	00007711 	andeq	r7, r0, r1, lsl r7
     5e4:	90230300 	eorls	r0, r3, r0, lsl #6
     5e8:	01900a01 	orrseq	r0, r0, r1, lsl #20
     5ec:	e7060000 	str	r0, [r6, -r0]
     5f0:	00771101 	rsbseq	r1, r7, r1, lsl #2
     5f4:	23030000 	movwcs	r0, #12288	; 0x3000
     5f8:	160a0194 			; <UNDEFINED> instruction: 0x160a0194
     5fc:	06000002 	streq	r0, [r0], -r2
     600:	771101e8 	ldrvc	r0, [r1, -r8, ror #3]
     604:	03000000 	movweq	r0, #0
     608:	0a019823 	beq	6669c <_Min_Stack_Size+0x6629c>
     60c:	00000273 	andeq	r0, r0, r3, ror r2
     610:	1101e906 	tstne	r1, r6, lsl #18
     614:	00000077 	andeq	r0, r0, r7, ror r0
     618:	019c2303 	orrseq	r2, ip, r3, lsl #6
     61c:	00014d0a 	andeq	r4, r1, sl, lsl #26
     620:	01ea0600 	mvneq	r0, r0, lsl #12
     624:	00007711 	andeq	r7, r0, r1, lsl r7
     628:	a0230300 	eorge	r0, r3, r0, lsl #6
     62c:	01b70a01 			; <UNDEFINED> instruction: 0x01b70a01
     630:	eb060000 	bl	180638 <_Min_Stack_Size+0x180238>
     634:	00771101 	rsbseq	r1, r7, r1, lsl #2
     638:	23030000 	movwcs	r0, #12288	; 0x3000
     63c:	290a01a4 	stmdbcs	sl, {r2, r5, r7, r8}
     640:	06000002 	streq	r0, [r0], -r2
     644:	771101ec 	ldrvc	r0, [r1, -ip, ror #3]
     648:	03000000 	movweq	r0, #0
     64c:	0a01a823 	beq	6a6e0 <_Min_Stack_Size+0x6a2e0>
     650:	0000028f 	andeq	r0, r0, pc, lsl #5
     654:	1101ed06 	tstne	r1, r6, lsl #26
     658:	00000077 	andeq	r0, r0, r7, ror r0
     65c:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
     660:	0003060a 	andeq	r0, r3, sl, lsl #12
     664:	01ee0600 	mvneq	r0, r0, lsl #12
     668:	00007711 	andeq	r7, r0, r1, lsl r7
     66c:	b0230300 	eorlt	r0, r3, r0, lsl #6
     670:	033c0a01 	teqeq	ip, #4096	; 0x1000
     674:	ef060000 	svc	0x00060000
     678:	00771101 	rsbseq	r1, r7, r1, lsl #2
     67c:	23030000 	movwcs	r0, #12288	; 0x3000
     680:	220a01b4 	andcs	r0, sl, #180, 2	; 0x2d
     684:	06000000 	streq	r0, [r0], -r0
     688:	771101f0 			; <UNDEFINED> instruction: 0x771101f0
     68c:	03000000 	movweq	r0, #0
     690:	0a01b823 	beq	6e724 <_Min_Stack_Size+0x6e324>
     694:	000000bd 	strheq	r0, [r0], -sp
     698:	1101f106 	tstne	r1, r6, lsl #2	; <UNPREDICTABLE>
     69c:	00000077 	andeq	r0, r0, r7, ror r0
     6a0:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
     6a4:	00016a0a 	andeq	r6, r1, sl, lsl #20
     6a8:	01f20600 	mvnseq	r0, r0, lsl #12
     6ac:	00007711 	andeq	r7, r0, r1, lsl r7
     6b0:	c0230300 	eorgt	r0, r3, r0, lsl #6
     6b4:	01f30a01 	mvnseq	r0, r1, lsl #20
     6b8:	f3060000 	vhadd.u8	d0, d6, d0
     6bc:	00771101 	rsbseq	r1, r7, r1, lsl #2
     6c0:	23030000 	movwcs	r0, #12288	; 0x3000
     6c4:	300a01c4 	andcc	r0, sl, r4, asr #3
     6c8:	06000000 	streq	r0, [r0], -r0
     6cc:	771101f4 			; <UNDEFINED> instruction: 0x771101f4
     6d0:	03000000 	movweq	r0, #0
     6d4:	0a01c823 	beq	72768 <_Min_Stack_Size+0x72368>
     6d8:	000000fe 	strdeq	r0, [r0], -lr
     6dc:	1101f506 	tstne	r1, r6, lsl #10	; <UNPREDICTABLE>
     6e0:	00000077 	andeq	r0, r0, r7, ror r0
     6e4:	01cc2303 	biceq	r2, ip, r3, lsl #6
     6e8:	00780d00 	rsbseq	r0, r8, r0, lsl #26
     6ec:	f6060000 			; <UNDEFINED> instruction: 0xf6060000
     6f0:	038d0301 	orreq	r0, sp, #67108864	; 0x4000000
     6f4:	37070000 	strcc	r0, [r7, -r0]
     6f8:	07000000 	streq	r0, [r0, -r0]
     6fc:	00771a05 	rsbseq	r1, r7, r5, lsl #20
     700:	01010000 	mrseq	r0, (UNDEF: 1)
     704:	0350010e 	cmpeq	r0, #-2147483645	; 0x80000003
     708:	0f020000 	svceq	0x00020000
     70c:	008a0105 	addeq	r0, sl, r5, lsl #2
     710:	170c0000 	strne	r0, [ip, -r0]
     714:	17cc0800 	strbne	r0, [ip, r0, lsl #16]
     718:	00000800 	andeq	r0, r0, r0, lsl #16
     71c:	33010000 	movwcc	r0, #4096	; 0x1000
     720:	0f000008 	svceq	0x00000008
     724:	08001722 	stmdaeq	r0, {r1, r5, r8, r9, sl, ip}
     728:	08001738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, ip}
     72c:	00000745 	andeq	r0, r0, r5, asr #14
     730:	0000f910 	andeq	pc, r0, r0, lsl r9	; <UNPREDICTABLE>
     734:	03140200 	tsteq	r4, #0, 4
     738:	0000006b 	andeq	r0, r0, fp, rrx
     73c:	00000028 	andeq	r0, r0, r8, lsr #32
     740:	00000020 	andeq	r0, r0, r0, lsr #32
     744:	17380f00 	ldrne	r0, [r8, -r0, lsl #30]!
     748:	174c0800 	strbne	r0, [ip, -r0, lsl #16]
     74c:	07670800 	strbeq	r0, [r7, -r0, lsl #16]!
     750:	f9100000 			; <UNDEFINED> instruction: 0xf9100000
     754:	02000000 	andeq	r0, r0, #0
     758:	006b1614 	rsbeq	r1, fp, r4, lsl r6
     75c:	006b0000 	rsbeq	r0, fp, r0
     760:	00630000 	rsbeq	r0, r3, r0
     764:	0f000000 	svceq	0x00000000
     768:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
     76c:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
     770:	00000789 	andeq	r0, r0, r9, lsl #15
     774:	0000f910 	andeq	pc, r0, r0, lsl r9	; <UNPREDICTABLE>
     778:	29140200 	ldmdbcs	r4, {r9}
     77c:	0000006b 	andeq	r0, r0, fp, rrx
     780:	000000ae 	andeq	r0, r0, lr, lsr #1
     784:	000000a6 	andeq	r0, r0, r6, lsr #1
     788:	17600f00 	strbne	r0, [r0, -r0, lsl #30]!
     78c:	17700800 	ldrbne	r0, [r0, -r0, lsl #16]!
     790:	07ab0800 	streq	r0, [fp, r0, lsl #16]!
     794:	f9100000 			; <UNDEFINED> instruction: 0xf9100000
     798:	02000000 	andeq	r0, r0, #0
     79c:	006b0315 	rsbeq	r0, fp, r5, lsl r3
     7a0:	00f10000 	rscseq	r0, r1, r0
     7a4:	00e90000 	rsceq	r0, r9, r0
     7a8:	0f000000 	svceq	0x00000000
     7ac:	08001770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, ip}
     7b0:	08001786 	stmdaeq	r0, {r1, r2, r7, r8, r9, sl, ip}
     7b4:	000007cd 	andeq	r0, r0, sp, asr #15
     7b8:	0000f910 	andeq	pc, r0, r0, lsl r9	; <UNPREDICTABLE>
     7bc:	18150200 	ldmdane	r5, {r9}
     7c0:	0000006b 	andeq	r0, r0, fp, rrx
     7c4:	00000133 	andeq	r0, r0, r3, lsr r1
     7c8:	0000012b 	andeq	r0, r0, fp, lsr #2
     7cc:	17860f00 	strne	r0, [r6, r0, lsl #30]
     7d0:	179a0800 	ldrne	r0, [sl, r0, lsl #16]
     7d4:	07ef0800 	strbeq	r0, [pc, r0, lsl #16]!
     7d8:	f9100000 			; <UNDEFINED> instruction: 0xf9100000
     7dc:	02000000 	andeq	r0, r0, #0
     7e0:	006b2c15 	rsbeq	r2, fp, r5, lsl ip
     7e4:	01770000 	cmneq	r7, r0
     7e8:	016f0000 	cmneq	pc, r0
     7ec:	11000000 	mrsne	r0, (UNDEF: 0)
     7f0:	0000098c 	andeq	r0, r0, ip, lsl #19
     7f4:	080017b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, ip}
     7f8:	0017b601 	andseq	fp, r7, r1, lsl #12
     7fc:	0017b808 	andseq	fp, r7, r8, lsl #16
     800:	031b0208 	tsteq	fp, #8, 4	; 0x80000000
     804:	00171412 	andseq	r1, r7, r2, lsl r4
     808:	00088208 	andeq	r8, r8, r8, lsl #4
     80c:	00081700 	andeq	r1, r8, r0, lsl #14
     810:	50011300 	andpl	r1, r1, r0, lsl #6
     814:	14003101 	strne	r3, [r0], #-257	; 0xfffffeff
     818:	08001718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip}
     81c:	00000996 	muleq	r0, r6, r9
     820:	0017b614 	andseq	fp, r7, r4, lsl r6
     824:	0009a408 	andeq	sl, r9, r8, lsl #8
     828:	17bc1400 	ldrne	r1, [ip, r0, lsl #8]!
     82c:	09b20800 	ldmibeq	r2!, {fp}
     830:	15000000 	strne	r0, [r0, #-0]
     834:	0001d101 	andeq	sp, r1, r1, lsl #2
     838:	060b0200 	streq	r0, [fp], -r0, lsl #4
     83c:	00037801 	andeq	r7, r3, r1, lsl #16
     840:	00038408 	andeq	r8, r3, r8, lsl #8
     844:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     848:	00086201 	andeq	r6, r8, r1, lsl #4
     84c:	024b1600 	subeq	r1, fp, #0, 12
     850:	0b020000 	bleq	80858 <_Min_Stack_Size+0x80458>
     854:	00006b15 	andeq	r6, r0, r5, lsl fp
     858:	0001b800 	andeq	fp, r1, r0, lsl #16
     85c:	0001b200 	andeq	fp, r1, r0, lsl #4
     860:	01170000 	tsteq	r7, r0
     864:	00000284 	andeq	r0, r0, r4, lsl #5
     868:	011c0902 	tsteq	ip, r2, lsl #18
     86c:	08000376 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9}
     870:	08000378 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9}
     874:	01007d02 	tsteq	r0, r2, lsl #26
     878:	0f000118 	svceq	0x00000118
     87c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     880:	0119011c 	tsteq	r9, ip, lsl r1
     884:	000000b4 	strheq	r0, [r0], -r4
     888:	01083601 	tsteq	r8, r1, lsl #12
     88c:	00000030 	andeq	r0, r0, r0, lsr r0
     890:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
     894:	08000374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9}
     898:	01007d02 	tsteq	r0, r2, lsl #26
     89c:	00000977 	andeq	r0, r0, r7, ror r9
     8a0:	00022216 	andeq	r2, r2, r6, lsl r2
     8a4:	18360100 	ldmdane	r6!, {r8}
     8a8:	00000030 	andeq	r0, r0, r0, lsr r0
     8ac:	000001ed 	andeq	r0, r0, sp, ror #3
     8b0:	000001e3 	andeq	r0, r0, r3, ror #3
     8b4:	0100691a 	tsteq	r0, sl, lsl r9
     8b8:	00580c37 	subseq	r0, r8, r7, lsr ip
     8bc:	025a0000 	subseq	r0, sl, #0
     8c0:	02320000 	eorseq	r0, r2, #0
     8c4:	741a0000 	ldrvc	r0, [sl], #-0
     8c8:	0100706d 	tsteq	r0, sp, rrx
     8cc:	006b0c38 	rsbeq	r0, fp, r8, lsr ip
     8d0:	03bb0000 			; <UNDEFINED> instruction: 0x03bb0000
     8d4:	03970000 	orrseq	r0, r7, #0
     8d8:	fc0f0000 	stc2	0, cr0, [pc], {-0}
     8dc:	02080001 	andeq	r0, r8, #1
     8e0:	fa080002 	blx	2008f0 <_Min_Stack_Size+0x2004f0>
     8e4:	1a000008 	bne	90c <_Min_Stack_Size+0x50c>
     8e8:	40010074 	andmi	r0, r1, r4, ror r0
     8ec:	00006b05 	andeq	r6, r0, r5, lsl #22
     8f0:	0004b400 	andeq	fp, r4, r0, lsl #8
     8f4:	0004b000 	andeq	fp, r4, r0
     8f8:	1a0f0000 	bne	3c0900 <_Min_Stack_Size+0x3c0500>
     8fc:	20080002 	andcs	r0, r8, r2
     900:	1a080002 	bne	200910 <_Min_Stack_Size+0x200510>
     904:	1a000009 	bne	930 <_Min_Stack_Size+0x530>
     908:	51010074 	tstpl	r1, r4, ror r0
     90c:	00006b07 	andeq	r6, r0, r7, lsl #22
     910:	0004da00 	andeq	sp, r4, r0, lsl #20
     914:	0004d600 	andeq	sp, r4, r0, lsl #12
     918:	440f0000 	strmi	r0, [pc], #-0	; 920 <_Min_Stack_Size+0x520>
     91c:	4a080002 	bmi	20092c <_Min_Stack_Size+0x20052c>
     920:	3a080002 	bcc	200930 <_Min_Stack_Size+0x200530>
     924:	1a000009 	bne	950 <_Min_Stack_Size+0x550>
     928:	5b010074 	blpl	40b00 <_Min_Stack_Size+0x40700>
     92c:	00006b07 	andeq	r6, r0, r7, lsl #22
     930:	00050000 	andeq	r0, r5, r0
     934:	0004fc00 	andeq	pc, r4, r0, lsl #24
     938:	c80f0000 	stmdagt	pc, {}	; <UNPREDICTABLE>
     93c:	ce080002 	cdpgt	0, 0, cr0, cr8, cr2, {0}
     940:	5a080002 	bpl	200950 <_Min_Stack_Size+0x200550>
     944:	1a000009 	bne	970 <_Min_Stack_Size+0x570>
     948:	87010074 	smlsdxhi	r1, r4, r0, r0
     94c:	00006b05 	andeq	r6, r0, r5, lsl #22
     950:	00052600 	andeq	r2, r5, r0, lsl #12
     954:	00052200 	andeq	r2, r5, r0, lsl #4
     958:	e21b0000 	ands	r0, fp, #0
     95c:	e8080002 	stmda	r8, {r1}
     960:	1a080002 	bne	200970 <_Min_Stack_Size+0x200570>
     964:	91010074 	tstls	r1, r4, ror r0
     968:	00006b05 	andeq	r6, r0, r5, lsl #22
     96c:	00054c00 	andeq	r4, r5, r0, lsl #24
     970:	00054800 	andeq	r4, r5, r0, lsl #16
     974:	1c000000 	stcne	0, cr0, [r0], {-0}
     978:	00016301 	andeq	r6, r1, r1, lsl #6
     97c:	06160100 	ldreq	r0, [r6], -r0, lsl #2
     980:	08000150 	stmdaeq	r0, {r4, r6, r8}
     984:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
     988:	01007d02 	tsteq	r0, r2, lsl #26
     98c:	0002591d 	andeq	r5, r2, sp, lsl r9
     990:	04b40300 	ldrteq	r0, [r4], #768	; 0x300
     994:	011e0316 	tsteq	lr, r6, lsl r3
     998:	0002d901 	andeq	sp, r2, r1, lsl #18
     99c:	0002d900 	andeq	sp, r2, r0, lsl #18
     9a0:	06080700 	streq	r0, [r8], -r0, lsl #14
     9a4:	8401011e 	strhi	r0, [r1], #-286	; 0xfffffee2
     9a8:	84000000 	strhi	r0, [r0], #-0
     9ac:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     9b0:	011e0628 	tsteq	lr, r8, lsr #12
     9b4:	00013501 	andeq	r3, r1, r1, lsl #10
     9b8:	00013500 	andeq	r3, r1, r0, lsl #10
     9bc:	06460800 	strbeq	r0, [r6], -r0, lsl #16
     9c0:	00013e00 	andeq	r3, r1, r0, lsl #28
     9c4:	02000200 	andeq	r0, r0, #0, 4
     9c8:	04000002 	streq	r0, [r0], #-2
     9cc:	00035501 	andeq	r5, r3, r1, lsl #10
     9d0:	03ef0c00 	mvneq	r0, #0, 24
     9d4:	00ca0000 	sbceq	r0, sl, r0
     9d8:	03840000 	orreq	r0, r4, #0
     9dc:	03a40800 			; <UNDEFINED> instruction: 0x03a40800
     9e0:	04a70800 	strteq	r0, [r7], #2048	; 0x800
     9e4:	01020000 	mrseq	r0, (UNDEF: 2)
     9e8:	00029806 	andeq	r9, r2, r6, lsl #16
     9ec:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     9f0:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
     9f4:	93050402 	movwls	r0, #21506	; 0x5402
     9f8:	02000000 	andeq	r0, r0, #0
     9fc:	008e0508 	addeq	r0, lr, r8, lsl #10
     a00:	01020000 	mrseq	r0, (UNDEF: 2)
     a04:	00029608 	andeq	r9, r2, r8, lsl #12
     a08:	07020200 	streq	r0, [r2, -r0, lsl #4]
     a0c:	000001be 			; <UNDEFINED> instruction: 0x000001be
     a10:	0002f803 	andeq	pc, r2, r3, lsl #16
     a14:	19340300 	ldmdbne	r4!, {r8, r9}
     a18:	00000065 	andeq	r0, r0, r5, rrx
     a1c:	00004f04 	andeq	r4, r0, r4, lsl #30
     a20:	005b0500 	subseq	r0, fp, r0, lsl #10
     a24:	04020000 	streq	r0, [r2], #-0
     a28:	00005e07 	andeq	r5, r0, r7, lsl #28
     a2c:	07080200 	streq	r0, [r8, -r0, lsl #4]
     a30:	00000059 	andeq	r0, r0, r9, asr r0
     a34:	69050406 	stmdbvs	r5, {r1, r2, sl}
     a38:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
     a3c:	00000073 	andeq	r0, r0, r3, ror r0
     a40:	63070402 	movwvs	r0, #29698	; 0x7402
     a44:	07000000 	streq	r0, [r0, -r0]
     a48:	016d0210 	cmneq	sp, r0, lsl r2
     a4c:	0000d109 	andeq	sp, r0, r9, lsl #2
     a50:	04030800 	streq	r0, [r3], #-2048	; 0xfffff800
     a54:	6f020000 	svcvs	0x00020000
     a58:	005b1101 	subseq	r1, fp, r1, lsl #2
     a5c:	23020000 	movwcs	r0, #8192	; 0x2000
     a60:	04080800 	streq	r0, [r8], #-2048	; 0xfffff800
     a64:	70020000 	andvc	r0, r2, r0
     a68:	005b1101 	subseq	r1, fp, r1, lsl #2
     a6c:	23020000 	movwcs	r0, #8192	; 0x2000
     a70:	41560904 	cmpmi	r6, r4, lsl #18
     a74:	7102004c 	tstvc	r2, ip, asr #32
     a78:	005b1101 	subseq	r1, fp, r1, lsl #2
     a7c:	23020000 	movwcs	r0, #8192	; 0x2000
     a80:	03fd0808 	mvnseq	r0, #8, 16	; 0x80000
     a84:	72020000 	andvc	r0, r2, #0
     a88:	00601101 	rsbeq	r1, r0, r1, lsl #2
     a8c:	23020000 	movwcs	r0, #8192	; 0x2000
     a90:	1d0a000c 	stcne	0, cr0, [sl, #-48]	; 0xffffffd0
     a94:	02000004 	andeq	r0, r0, #4
     a98:	86030173 			; <UNDEFINED> instruction: 0x86030173
     a9c:	0b000000 	bleq	aa4 <_Min_Stack_Size+0x6a4>
     aa0:	000002a4 	andeq	r0, r0, r4, lsr #5
     aa4:	1506ce02 	strne	ip, [r6, #-3586]	; 0xfffff1fe
     aa8:	0000007a 	andeq	r0, r0, sl, ror r0
     aac:	7a0c0101 	bvc	300eb8 <_Min_Stack_Size+0x300ab8>
     ab0:	04000001 	streq	r0, [r0], #-1
     ab4:	004f114c 	subeq	r1, pc, ip, asr #2
     ab8:	01010000 	mrseq	r0, (UNDEF: 1)
     abc:	0000370c 	andeq	r3, r0, ip, lsl #14
     ac0:	1a050500 	bne	141ec8 <_Min_Stack_Size+0x141ac8>
     ac4:	0000005b 	andeq	r0, r0, fp, asr r0
     ac8:	fb0d0101 	blx	340ed6 <_Min_Stack_Size+0x340ad6>
     acc:	01000000 	mrseq	r0, (UNDEF: 0)
     ad0:	03051304 	movweq	r1, #21252	; 0x5304
     ad4:	20000024 	andcs	r0, r0, r4, lsr #32
     ad8:	040d010e 	streq	r0, [sp], #-270	; 0xfffffef2
     adc:	0c010000 	stceq	0, cr0, [r1], {-0}
     ae0:	00039406 	andeq	r9, r3, r6, lsl #8
     ae4:	0003a408 	andeq	sl, r3, r8, lsl #8
     ae8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     aec:	d9010e01 	stmdble	r1, {r0, r9, sl, fp}
     af0:	01000002 	tsteq	r0, r2
     af4:	03840606 	orreq	r0, r4, #6291456	; 0x600000
     af8:	03940800 	orrseq	r0, r4, #0, 16
     afc:	7d020800 	stcvc	8, cr0, [r2, #-0]
     b00:	f6000100 			; <UNDEFINED> instruction: 0xf6000100
     b04:	02000012 	andeq	r0, r0, #18
     b08:	0002d600 	andeq	sp, r2, r0, lsl #12
     b0c:	55010400 	strpl	r0, [r1, #-1024]	; 0xfffffc00
     b10:	0c000003 	stceq	0, cr0, [r0], {3}
     b14:	000007e0 	andeq	r0, r0, r0, ror #15
     b18:	000000ca 	andeq	r0, r0, sl, asr #1
     b1c:	080003a4 	stmdaeq	r0, {r2, r5, r7, r8, r9}
     b20:	08000a10 	stmdaeq	r0, {r4, r9, fp}
     b24:	00000579 	andeq	r0, r0, r9, ror r5
     b28:	98060102 	stmdals	r6, {r1, r8}
     b2c:	02000002 	andeq	r0, r0, #2
     b30:	02b10502 	adcseq	r0, r1, #8388608	; 0x800000
     b34:	04020000 	streq	r0, [r2], #-0
     b38:	00009305 	andeq	r9, r0, r5, lsl #6
     b3c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     b40:	0000008e 	andeq	r0, r0, lr, lsl #1
     b44:	00073003 	andeq	r3, r7, r3
     b48:	182e0400 	stmdane	lr!, {sl}
     b4c:	00000057 	andeq	r0, r0, r7, asr r0
     b50:	00004104 	andeq	r4, r0, r4, lsl #2
     b54:	00410500 	subeq	r0, r1, r0, lsl #10
     b58:	01020000 	mrseq	r0, (UNDEF: 2)
     b5c:	00029608 	andeq	r9, r2, r8, lsl #12
     b60:	01440300 	mrseq	r0, SPSR_abt
     b64:	31040000 	mrscc	r0, (UNDEF: 4)
     b68:	00007419 	andeq	r7, r0, r9, lsl r4
     b6c:	005e0400 	subseq	r0, lr, r0, lsl #8
     b70:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     b74:	02000000 	andeq	r0, r0, #0
     b78:	01be0702 			; <UNDEFINED> instruction: 0x01be0702
     b7c:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
     b80:	04000002 	streq	r0, [r0], #-2
     b84:	008c1934 	addeq	r1, ip, r4, lsr r9
     b88:	7b040000 	blvc	100b90 <_Min_Stack_Size+0x100790>
     b8c:	02000000 	andeq	r0, r0, #0
     b90:	005e0704 	subseq	r0, lr, r4, lsl #14
     b94:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     b98:	00005907 	andeq	r5, r0, r7, lsl #18
     b9c:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     ba0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     ba4:	00009a04 	andeq	r9, r0, r4, lsl #20
     ba8:	07040200 	streq	r0, [r4, -r0, lsl #4]
     bac:	00000063 	andeq	r0, r0, r3, rrx
     bb0:	00079503 	andeq	r9, r7, r3, lsl #10
     bb4:	0f1d0300 	svceq	0x001d0300
     bb8:	000000b9 	strheq	r0, [r0], -r9
     bbc:	00bf0407 	adcseq	r0, pc, r7, lsl #8
     bc0:	01080000 	mrseq	r0, (UNDEF: 8)
     bc4:	000000cb 	andeq	r0, r0, fp, asr #1
     bc8:	00004109 	andeq	r4, r0, r9, lsl #2
     bcc:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     bd0:	20091e03 	andcs	r1, r9, r3, lsl #28
     bd4:	0b000001 	bleq	be0 <_Min_Stack_Size+0x7e0>
     bd8:	000004ad 	andeq	r0, r0, sp, lsr #9
     bdc:	410b1f03 	tstmi	fp, r3, lsl #30
     be0:	02000000 	andeq	r0, r0, #0
     be4:	fc0b0023 	stc2	0, cr0, [fp], {35}	; 0x23
     be8:	03000008 	movweq	r0, #8
     bec:	00410b20 	subeq	r0, r1, r0, lsr #22
     bf0:	23020000 	movwcs	r0, #8192	; 0x2000
     bf4:	052a0b01 	streq	r0, [sl, #-2817]!	; 0xfffff4ff
     bf8:	21030000 	mrscs	r0, (UNDEF: 3)
     bfc:	00005e0c 	andeq	r5, r0, ip, lsl #28
     c00:	02230200 	eoreq	r0, r3, #0, 4
     c04:	0004350b 	andeq	r3, r4, fp, lsl #10
     c08:	0c220300 	stceq	3, cr0, [r2], #-0
     c0c:	0000005e 	andeq	r0, r0, lr, asr r0
     c10:	0b042302 	bleq	109820 <_Min_Stack_Size+0x109420>
     c14:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     c18:	5e0c2303 	cdppl	3, 0, cr2, cr12, cr3, {0}
     c1c:	02000000 	andeq	r0, r0, #0
     c20:	03000623 	movweq	r0, #1571	; 0x623
     c24:	00000968 	andeq	r0, r0, r8, ror #18
     c28:	cb022403 	blgt	89c3c <_Min_Stack_Size+0x8983c>
     c2c:	0c000000 	stceq	0, cr0, [r0], {-0}
     c30:	00250105 	eoreq	r0, r5, r5, lsl #2
     c34:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     c38:	0002a301 	andeq	sl, r2, r1, lsl #6
     c3c:	08cb0d00 	stmiaeq	fp, {r8, sl, fp}^
     c40:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     c44:	00000531 	andeq	r0, r0, r1, lsr r5
     c48:	07730d74 			; <UNDEFINED> instruction: 0x07730d74
     c4c:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     c50:	000009ae 	andeq	r0, r0, lr, lsr #19
     c54:	047b0d76 	ldrbteq	r0, [fp], #-3446	; 0xfffff28a
     c58:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     c5c:	0000099c 	muleq	r0, ip, r9
     c60:	05000d7c 	streq	r0, [r0, #-3452]	; 0xfffff284
     c64:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     c68:	00000934 	andeq	r0, r0, r4, lsr r9
     c6c:	074f0e7f 	smlsldxeq	r0, pc, pc, lr	; <UNPREDICTABLE>
     c70:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     c74:	0000078c 	andeq	r0, r0, ip, lsl #15
     c78:	05560e01 	ldrbeq	r0, [r6, #-3585]	; 0xfffff1ff
     c7c:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     c80:	0000065b 	andeq	r0, r0, fp, asr r6
     c84:	04c80e03 	strbeq	r0, [r8], #3587	; 0xe03
     c88:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     c8c:	00000521 	andeq	r0, r0, r1, lsr #10
     c90:	04dd0e05 	ldrbeq	r0, [sp], #3589	; 0xe05
     c94:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     c98:	000008f1 	strdeq	r0, [r0], -r1
     c9c:	06850e07 	streq	r0, [r5], r7, lsl #28
     ca0:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     ca4:	00000a43 	andeq	r0, r0, r3, asr #20
     ca8:	07810e09 	streq	r0, [r1, r9, lsl #28]
     cac:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     cb0:	0000070e 	andeq	r0, r0, lr, lsl #14
     cb4:	048e0e0b 	streq	r0, [lr], #3595	; 0xe0b
     cb8:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     cbc:	000007cd 	andeq	r0, r0, sp, asr #15
     cc0:	05c10e0d 	strbeq	r0, [r1, #3597]	; 0xe0d
     cc4:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     cc8:	00000a18 	andeq	r0, r0, r8, lsl sl
     ccc:	06d10e0f 	ldrbeq	r0, [r1], pc, lsl #28
     cd0:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     cd4:	0000045b 	andeq	r0, r0, fp, asr r4
     cd8:	06900e11 			; <UNDEFINED> instruction: 0x06900e11
     cdc:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     ce0:	00000990 	muleq	r0, r0, r9
     ce4:	0aa40e13 	beq	fe904538 <BootRAM+0xd874cd9>
     ce8:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     cec:	00000a32 	andeq	r0, r0, r2, lsr sl
     cf0:	05e30e15 	strbeq	r0, [r3, #3605]!	; 0xe15
     cf4:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     cf8:	000009e8 	andeq	r0, r0, r8, ror #19
     cfc:	04510e17 	ldrbeq	r0, [r1], #-3607	; 0xfffff1e9
     d00:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     d04:	00000744 	andeq	r0, r0, r4, asr #14
     d08:	042a0e1a 	strteq	r0, [sl], #-3610	; 0xfffff1e6
     d0c:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     d10:	00000947 	andeq	r0, r0, r7, asr #18
     d14:	07040e1c 	smladeq	r4, ip, lr, r0
     d18:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     d1c:	00000484 	andeq	r0, r0, r4, lsl #9
     d20:	07ee0e1e 			; <UNDEFINED> instruction: 0x07ee0e1e
     d24:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     d28:	00000927 	andeq	r0, r0, r7, lsr #18
     d2c:	069a0e20 	ldreq	r0, [sl], r0, lsr #28
     d30:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     d34:	0000046e 	andeq	r0, r0, lr, ror #8
     d38:	059f0e22 	ldreq	r0, [pc, #3618]	; 1b62 <_Min_Stack_Size+0x1762>
     d3c:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     d40:	000009ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     d44:	08b30e24 	ldmeq	r3!, {r2, r5, r9, sl, fp}
     d48:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     d4c:	0000063c 	andeq	r0, r0, ip, lsr r6
     d50:	0a8e0e26 	beq	fe3845f0 <BootRAM+0xd2f4d91>
     d54:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     d58:	000004e8 	andeq	r0, r0, r8, ror #9
     d5c:	082c0e28 	stmdaeq	ip!, {r3, r5, r9, sl, fp}
     d60:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     d64:	0000088e 	andeq	r0, r0, lr, lsl #17
     d68:	05b70e2a 	ldreq	r0, [r7, #3626]!	; 0xe2a
     d6c:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
     d70:	00000a0e 	andeq	r0, r0, lr, lsl #20
     d74:	07c30e2c 	strbeq	r0, [r3, ip, lsr #28]
     d78:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
     d7c:	000006ac 	andeq	r0, r0, ip, lsr #13
     d80:	06e40e2f 	strbteq	r0, [r4], pc, lsr #28
     d84:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
     d88:	00000a7b 	andeq	r0, r0, fp, ror sl
     d8c:	07b00e33 			; <UNDEFINED> instruction: 0x07b00e33
     d90:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
     d94:	00000583 	andeq	r0, r0, r3, lsl #11
     d98:	09140e35 	ldmdbeq	r4, {r0, r2, r4, r5, r9, sl, fp}
     d9c:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
     da0:	000006c3 	andeq	r0, r0, r3, asr #13
     da4:	29030038 	stmdbcs	r3, {r3, r4, r5}
     da8:	05000006 	streq	r0, [r0, #-6]
     dac:	012c0398 			; <UNDEFINED> instruction: 0x012c0398
     db0:	040f0000 	streq	r0, [pc], #-0	; db8 <_Min_Stack_Size+0x9b8>
     db4:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     db8:	00000387 	andeq	r0, r0, r7, lsl #7
     dbc:	0005680b 	andeq	r6, r5, fp, lsl #16
     dc0:	11860200 	orrne	r0, r6, r0, lsl #4
     dc4:	00000397 	muleq	r0, r7, r3
     dc8:	0b002302 	bleq	99d8 <_Min_Stack_Size+0x95d8>
     dcc:	00000848 	andeq	r0, r0, r8, asr #16
     dd0:	9c118702 	ldcls	7, cr8, [r1], {2}
     dd4:	02000003 	andeq	r0, r0, #3
     dd8:	fa0b2023 	blx	2c8e6c <_Min_Stack_Size+0x2c8a6c>
     ddc:	02000009 	andeq	r0, r0, #9
     de0:	03971188 	orrseq	r1, r7, #136, 2	; 0x22
     de4:	23030000 	movwcs	r0, #12288	; 0x3000
     de8:	960b0180 	strls	r0, [fp], -r0, lsl #3
     dec:	02000005 	andeq	r0, r0, #5
     df0:	039c1189 	orrseq	r1, ip, #1073741858	; 0x40000022
     df4:	23030000 	movwcs	r0, #12288	; 0x3000
     df8:	610b01a0 	smlatbvs	fp, r0, r1, r0
     dfc:	0200000a 	andeq	r0, r0, #10
     e00:	0397118a 	orrseq	r1, r7, #-2147483614	; 0x80000022
     e04:	23030000 	movwcs	r0, #12288	; 0x3000
     e08:	5c0b0280 	sfmpl	f0, 4, [fp], {128}	; 0x80
     e0c:	02000008 	andeq	r0, r0, #8
     e10:	039c118b 	orrseq	r1, ip, #-1073741790	; 0xc0000022
     e14:	23030000 	movwcs	r0, #12288	; 0x3000
     e18:	ab0b02a0 	blge	2c18a0 <_Min_Stack_Size+0x2c14a0>
     e1c:	02000007 	andeq	r0, r0, #7
     e20:	0397118c 	orrseq	r1, r7, #140, 2	; 0x23
     e24:	23030000 	movwcs	r0, #12288	; 0x3000
     e28:	660b0380 	strvs	r0, [fp], -r0, lsl #7
     e2c:	02000008 	andeq	r0, r0, #8
     e30:	039c118d 	orrseq	r1, ip, #1073741859	; 0x40000023
     e34:	23030000 	movwcs	r0, #12288	; 0x3000
     e38:	090b03a0 	stmdbeq	fp, {r5, r7, r8, r9}
     e3c:	0200000a 	andeq	r0, r0, #10
     e40:	0397118e 	orrseq	r1, r7, #-2147483613	; 0x80000023
     e44:	23030000 	movwcs	r0, #12288	; 0x3000
     e48:	700b0480 	andvc	r0, fp, r0, lsl #9
     e4c:	02000008 	andeq	r0, r0, #8
     e50:	03ac118f 			; <UNDEFINED> instruction: 0x03ac118f
     e54:	23030000 	movwcs	r0, #12288	; 0x3000
     e58:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     e5c:	90020050 	andls	r0, r2, r0, asr r0
     e60:	0003cc11 	andeq	ip, r3, r1, lsl ip
     e64:	80230300 	eorhi	r0, r3, r0, lsl #6
     e68:	087a0b06 	ldmdaeq	sl!, {r1, r2, r8, r9, fp}^
     e6c:	91020000 	mrsls	r0, (UNDEF: 2)
     e70:	0003d111 	andeq	sp, r3, r1, lsl r1
     e74:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     e78:	08270b07 	stmdaeq	r7!, {r0, r1, r2, r8, r9, fp}
     e7c:	92020000 	andls	r0, r2, #0
     e80:	00008711 	andeq	r8, r0, r1, lsl r7
     e84:	80230300 	eorhi	r0, r3, r0, lsl #6
     e88:	8711001c 			; <UNDEFINED> instruction: 0x8711001c
     e8c:	97000000 	strls	r0, [r0, -r0]
     e90:	12000003 	andne	r0, r0, #3
     e94:	000000a6 	andeq	r0, r0, r6, lsr #1
     e98:	87040007 	strhi	r0, [r4, -r7]
     e9c:	11000003 	tstne	r0, r3
     ea0:	0000007b 	andeq	r0, r0, fp, ror r0
     ea4:	000003ac 	andeq	r0, r0, ip, lsr #7
     ea8:	0000a612 	andeq	sl, r0, r2, lsl r6
     eac:	11001700 	tstne	r0, r0, lsl #14
     eb0:	0000007b 	andeq	r0, r0, fp, ror r0
     eb4:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
     eb8:	0000a612 	andeq	sl, r0, r2, lsl r6
     ebc:	11003700 	tstne	r0, r0, lsl #14
     ec0:	0000004d 	andeq	r0, r0, sp, asr #32
     ec4:	000003cc 	andeq	r0, r0, ip, asr #7
     ec8:	0000a612 	andeq	sl, r0, r2, lsl r6
     ecc:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     ed0:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
     ed4:	00007b11 	andeq	r7, r0, r1, lsl fp
     ed8:	0003e200 	andeq	lr, r3, r0, lsl #4
     edc:	00a61300 	adceq	r1, r6, r0, lsl #6
     ee0:	02830000 	addeq	r0, r3, #0
     ee4:	09050300 	stmdbeq	r5, {r8, r9}
     ee8:	93020000 	movwls	r0, #8192	; 0x2000
     eec:	0002af04 	andeq	sl, r2, r4, lsl #30
     ef0:	02a41400 	adceq	r1, r4, #0, 8
     ef4:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     ef8:	00a11506 	adceq	r1, r1, r6, lsl #10
     efc:	01010000 	mrseq	r0, (UNDEF: 1)
     f00:	00017a15 	andeq	r7, r1, r5, lsl sl
     f04:	114c0600 	cmpne	ip, r0, lsl #12
     f08:	0000007b 	andeq	r0, r0, fp, ror r0
     f0c:	18160101 	ldmdane	r6, {r0, r8}
     f10:	09016105 	stmdbeq	r1, {r0, r2, r8, sp, lr}
     f14:	00000446 	andeq	r0, r0, r6, asr #8
     f18:	00051a17 	andeq	r1, r5, r7, lsl sl
     f1c:	01630500 	cmneq	r3, r0, lsl #10
     f20:	00008711 	andeq	r8, r0, r1, lsl r7
     f24:	00230200 	eoreq	r0, r3, r0, lsl #4
     f28:	434d5018 	movtmi	r5, #53272	; 0xd018
     f2c:	01640500 	cmneq	r4, r0, lsl #10
     f30:	00008711 	andeq	r8, r0, r1, lsl r7
     f34:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     f38:	00073817 	andeq	r3, r7, r7, lsl r8
     f3c:	01650500 	cmneq	r5, r0, lsl #10
     f40:	00045611 	andeq	r5, r4, r1, lsl r6
     f44:	08230200 	stmdaeq	r3!, {r9}
     f48:	00871100 	addeq	r1, r7, r0, lsl #2
     f4c:	04560000 	ldrbeq	r0, [r6], #-0
     f50:	a6120000 	ldrge	r0, [r2], -r0
     f54:	03000000 	movweq	r0, #0
     f58:	04460400 	strbeq	r0, [r6], #-1024	; 0xfffffc00
     f5c:	3c190000 	ldccc	0, cr0, [r9], {-0}
     f60:	05000004 	streq	r0, [r0, #-4]
     f64:	0b030166 	bleq	c1504 <_Min_Stack_Size+0xc1104>
     f68:	16000004 	strne	r0, [r0], -r4
     f6c:	01930538 	orrseq	r0, r3, r8, lsr r5
     f70:	00055209 	andeq	r5, r5, r9, lsl #4
     f74:	52431800 	subpl	r1, r3, #0, 16
     f78:	01950500 	orrseq	r0, r5, r0, lsl #10
     f7c:	00008711 	andeq	r8, r0, r1, lsl r7
     f80:	00230200 	eoreq	r0, r3, r0, lsl #4
     f84:	00032917 	andeq	r2, r3, r7, lsl r9
     f88:	01960500 	orrseq	r0, r6, r0, lsl #10
     f8c:	00008711 	andeq	r8, r0, r1, lsl r7
     f90:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     f94:	0002ed17 	andeq	lr, r2, r7, lsl sp
     f98:	01970500 	orrseq	r0, r7, r0, lsl #10
     f9c:	00008711 	andeq	r8, r0, r1, lsl r7
     fa0:	08230200 	stmdaeq	r3!, {r9}
     fa4:	52494318 	subpl	r4, r9, #24, 6	; 0x60000000
     fa8:	01980500 	orrseq	r0, r8, r0, lsl #10
     fac:	00008711 	andeq	r8, r0, r1, lsl r7
     fb0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     fb4:	00024317 	andeq	r4, r2, r7, lsl r3
     fb8:	01990500 	orrseq	r0, r9, r0, lsl #10
     fbc:	00008711 	andeq	r8, r0, r1, lsl r7
     fc0:	10230200 	eorne	r0, r3, r0, lsl #4
     fc4:	00010517 	andeq	r0, r1, r7, lsl r5
     fc8:	019a0500 	orrseq	r0, sl, r0, lsl #10
     fcc:	00008711 	andeq	r8, r0, r1, lsl r7
     fd0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     fd4:	00025017 	andeq	r5, r2, r7, lsl r0
     fd8:	019b0500 	orrseq	r0, fp, r0, lsl #10
     fdc:	00008711 	andeq	r8, r0, r1, lsl r7
     fe0:	18230200 	stmdane	r3!, {r9}
     fe4:	0003e817 	andeq	lr, r3, r7, lsl r8
     fe8:	019c0500 	orrseq	r0, ip, r0, lsl #10
     fec:	00008711 	andeq	r8, r0, r1, lsl r7
     ff0:	1c230200 	sfmne	f0, 4, [r3], #-0
     ff4:	0002d117 	andeq	sp, r2, r7, lsl r1
     ff8:	019d0500 	orrseq	r0, sp, r0, lsl #10
     ffc:	00008711 	andeq	r8, r0, r1, lsl r7
    1000:	20230200 	eorcs	r0, r3, r0, lsl #4
    1004:	00031317 	andeq	r1, r3, r7, lsl r3
    1008:	019e0500 	orrseq	r0, lr, r0, lsl #10
    100c:	00008711 	andeq	r8, r0, r1, lsl r7
    1010:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    1014:	00011d17 	andeq	r1, r1, r7, lsl sp
    1018:	019f0500 	orrseq	r0, pc, r0, lsl #10
    101c:	00008711 	andeq	r8, r0, r1, lsl r7
    1020:	28230200 	stmdacs	r3!, {r9}
    1024:	0001fa17 	andeq	pc, r1, r7, lsl sl	; <UNPREDICTABLE>
    1028:	01a00500 	lsleq	r0, r0, #10
    102c:	00008711 	andeq	r8, r0, r1, lsl r7
    1030:	2c230200 	sfmcs	f0, 4, [r3], #-0
    1034:	0001d717 	andeq	sp, r1, r7, lsl r7
    1038:	01a10500 			; <UNDEFINED> instruction: 0x01a10500
    103c:	00008711 	andeq	r8, r0, r1, lsl r7
    1040:	30230200 	eorcc	r0, r3, r0, lsl #4
    1044:	52534318 	subspl	r4, r3, #24, 6	; 0x60000000
    1048:	01a20500 			; <UNDEFINED> instruction: 0x01a20500
    104c:	00008711 	andeq	r8, r0, r1, lsl r7
    1050:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    1054:	01a41900 			; <UNDEFINED> instruction: 0x01a41900
    1058:	a3050000 	movwge	r0, #20480	; 0x5000
    105c:	04680301 	strbteq	r0, [r8], #-769	; 0xfffffcff
    1060:	54160000 	ldrpl	r0, [r6], #-0
    1064:	09023705 	stmdbeq	r2, {r0, r2, r8, r9, sl, ip, sp}
    1068:	0000070a 	andeq	r0, r0, sl, lsl #14
    106c:	00065617 	andeq	r5, r6, r7, lsl r6
    1070:	02390500 	eorseq	r0, r9, #0, 10
    1074:	00006a11 	andeq	r6, r0, r1, lsl sl
    1078:	00230200 	eoreq	r0, r3, r0, lsl #4
    107c:	00084817 	andeq	r4, r8, r7, lsl r8
    1080:	023a0500 	eorseq	r0, sl, #0, 10
    1084:	00006a11 	andeq	r6, r0, r1, lsl sl
    1088:	02230200 	eoreq	r0, r3, #0, 4
    108c:	0006a717 	andeq	sl, r6, r7, lsl r7
    1090:	023b0500 	eorseq	r0, fp, #0, 10
    1094:	00006a11 	andeq	r6, r0, r1, lsl sl
    1098:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    109c:	00085217 	andeq	r5, r8, r7, lsl r2
    10a0:	023c0500 	eorseq	r0, ip, #0, 10
    10a4:	00006a11 	andeq	r6, r0, r1, lsl sl
    10a8:	06230200 	strteq	r0, [r3], -r0, lsl #4
    10ac:	00073f17 	andeq	r3, r7, r7, lsl pc
    10b0:	023d0500 	eorseq	r0, sp, #0, 10
    10b4:	00006a11 	andeq	r6, r0, r1, lsl sl
    10b8:	08230200 	stmdaeq	r3!, {r9}
    10bc:	00085c17 	andeq	r5, r8, r7, lsl ip
    10c0:	023e0500 	eorseq	r0, lr, #0, 10
    10c4:	00006a11 	andeq	r6, r0, r1, lsl sl
    10c8:	0a230200 	beq	8c18d0 <_Min_Stack_Size+0x8c14d0>
    10cc:	00076e17 	andeq	r6, r7, r7, lsl lr
    10d0:	023f0500 	eorseq	r0, pc, #0, 10
    10d4:	00006a11 	andeq	r6, r0, r1, lsl sl
    10d8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    10dc:	00086617 	andeq	r6, r8, r7, lsl r6
    10e0:	02400500 	subeq	r0, r0, #0, 10
    10e4:	00006a11 	andeq	r6, r0, r1, lsl sl
    10e8:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
    10ec:	0009f517 	andeq	pc, r9, r7, lsl r5	; <UNPREDICTABLE>
    10f0:	02410500 	subeq	r0, r1, #0, 10
    10f4:	00006a11 	andeq	r6, r0, r1, lsl sl
    10f8:	10230200 	eorne	r0, r3, r0, lsl #4
    10fc:	00087017 	andeq	r7, r8, r7, lsl r0
    1100:	02420500 	subeq	r0, r2, #0, 10
    1104:	00006a11 	andeq	r6, r0, r1, lsl sl
    1108:	12230200 	eorne	r0, r3, #0, 4
    110c:	00084317 	andeq	r4, r8, r7, lsl r3
    1110:	02430500 	subeq	r0, r3, #0, 10
    1114:	00006a11 	andeq	r6, r0, r1, lsl sl
    1118:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    111c:	00087a17 	andeq	r7, r8, r7, lsl sl
    1120:	02440500 	subeq	r0, r4, #0, 10
    1124:	00006a11 	andeq	r6, r0, r1, lsl sl
    1128:	16230200 	strtne	r0, [r3], -r0, lsl #4
    112c:	0008e717 	andeq	lr, r8, r7, lsl r7
    1130:	02450500 	subeq	r0, r5, #0, 10
    1134:	00006a11 	andeq	r6, r0, r1, lsl sl
    1138:	18230200 	stmdane	r3!, {r9}
    113c:	00088417 	andeq	r8, r8, r7, lsl r4
    1140:	02460500 	subeq	r0, r6, #0, 10
    1144:	00006a11 	andeq	r6, r0, r1, lsl sl
    1148:	1a230200 	bne	8c1950 <_Min_Stack_Size+0x8c1550>
    114c:	00096317 	andeq	r6, r9, r7, lsl r3
    1150:	02470500 	subeq	r0, r7, #0, 10
    1154:	00006a11 	andeq	r6, r0, r1, lsl sl
    1158:	1c230200 	sfmne	f0, 4, [r3], #-0
    115c:	00027a17 	andeq	r7, r2, r7, lsl sl
    1160:	02480500 	subeq	r0, r8, #0, 10
    1164:	00071a11 	andeq	r1, r7, r1, lsl sl
    1168:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
    116c:	00090f17 	andeq	r0, r9, r7, lsl pc
    1170:	02490500 	subeq	r0, r9, #0, 10
    1174:	00006a11 	andeq	r6, r0, r1, lsl sl
    1178:	40230200 	eormi	r0, r3, r0, lsl #4
    117c:	000a9a17 	andeq	r9, sl, r7, lsl sl
    1180:	024a0500 	subeq	r0, sl, #0, 10
    1184:	00006a11 	andeq	r6, r0, r1, lsl sl
    1188:	42230200 	eormi	r0, r3, #0, 4
    118c:	00055117 	andeq	r5, r5, r7, lsl r1
    1190:	024b0500 	subeq	r0, fp, #0, 10
    1194:	00006a11 	andeq	r6, r0, r1, lsl sl
    1198:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    119c:	00089f17 	andeq	r9, r8, r7, lsl pc
    11a0:	024c0500 	subeq	r0, ip, #0, 10
    11a4:	00006a11 	andeq	r6, r0, r1, lsl sl
    11a8:	46230200 	strtmi	r0, [r3], -r0, lsl #4
    11ac:	524e4618 	subpl	r4, lr, #24, 12	; 0x1800000
    11b0:	024d0500 	subeq	r0, sp, #0, 10
    11b4:	00006a11 	andeq	r6, r0, r1, lsl sl
    11b8:	48230200 	stmdami	r3!, {r9}
    11bc:	0008a917 	andeq	sl, r8, r7, lsl r9
    11c0:	024e0500 	subeq	r0, lr, #0, 10
    11c4:	00006a11 	andeq	r6, r0, r1, lsl sl
    11c8:	4a230200 	bmi	8c19d0 <_Min_Stack_Size+0x8c15d0>
    11cc:	0005f917 	andeq	pc, r5, r7, lsl r9	; <UNPREDICTABLE>
    11d0:	024f0500 	subeq	r0, pc, #0, 10
    11d4:	00006a11 	andeq	r6, r0, r1, lsl sl
    11d8:	4c230200 	sfmmi	f0, 4, [r3], #-0
    11dc:	000ab017 	andeq	fp, sl, r7, lsl r0
    11e0:	02500500 	subseq	r0, r0, #0, 10
    11e4:	00006a11 	andeq	r6, r0, r1, lsl sl
    11e8:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
    11ec:	000a2b17 	andeq	r2, sl, r7, lsl fp
    11f0:	02510500 	subseq	r0, r1, #0, 10
    11f4:	00006a11 	andeq	r6, r0, r1, lsl sl
    11f8:	50230200 	eorpl	r0, r3, r0, lsl #4
    11fc:	000aba17 	andeq	fp, sl, r7, lsl sl
    1200:	02520500 	subseq	r0, r2, #0, 10
    1204:	00006a11 	andeq	r6, r0, r1, lsl sl
    1208:	52230200 	eorpl	r0, r3, #0, 4
    120c:	006a1100 	rsbeq	r1, sl, r0, lsl #2
    1210:	071a0000 	ldreq	r0, [sl, -r0]
    1214:	a6120000 	ldrge	r0, [r2], -r0
    1218:	10000000 	andne	r0, r0, r0
    121c:	070a0400 	streq	r0, [sl, -r0, lsl #8]
    1220:	ed190000 	ldc	0, cr0, [r9, #-0]
    1224:	05000005 	streq	r0, [r0, #-5]
    1228:	5f030253 	svcpl	0x00030253
    122c:	0a000005 	beq	1248 <_Min_Stack_Size+0xe48>
    1230:	07290104 	streq	r0, [r9, -r4, lsl #2]!
    1234:	0000076c 	andeq	r0, r0, ip, ror #14
    1238:	0007a21a 	andeq	sl, r7, sl, lsl r2
    123c:	122a0100 	eorne	r0, sl, #0, 2
    1240:	0000007b 	andeq	r0, r0, fp, ror r0
    1244:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    1248:	821a0023 	andshi	r0, sl, #35	; 0x23
    124c:	01000009 	tsteq	r0, r9
    1250:	007b122b 	rsbseq	r1, fp, fp, lsr #4
    1254:	05040000 	streq	r0, [r4, #-0]
    1258:	00230211 	eoreq	r0, r3, r1, lsl r2
    125c:	00081a1a 	andeq	r1, r8, sl, lsl sl
    1260:	122c0100 	eorne	r0, ip, #0, 2
    1264:	0000007b 	andeq	r0, r0, fp, ror r0
    1268:	02100104 	andseq	r0, r0, #4, 2
    126c:	1b000023 	blne	1300 <_Min_Stack_Size+0xf00>
    1270:	0e270104 	sufeqs	f0, f7, f4
    1274:	00000787 	andeq	r0, r0, r7, lsl #15
    1278:	00079e1c 	andeq	r9, r7, ip, lsl lr
    127c:	10280100 	eorne	r0, r8, r0, lsl #2
    1280:	0000007b 	andeq	r0, r0, fp, ror r0
    1284:	00072c1d 	andeq	r2, r7, sp, lsl ip
    1288:	6c040000 	stcvs	0, cr0, [r4], {-0}
    128c:	0a000007 	beq	12b0 <_Min_Stack_Size+0xeb0>
    1290:	07320104 	ldreq	r0, [r2, -r4, lsl #2]!
    1294:	000007cc 	andeq	r0, r0, ip, asr #15
    1298:	000a6a1a 	andeq	r6, sl, sl, lsl sl
    129c:	12330100 	eorsne	r0, r3, #0, 2
    12a0:	0000007b 	andeq	r0, r0, fp, ror r0
    12a4:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    12a8:	fb1a0023 	blx	68133e <_Min_Stack_Size+0x680f3e>
    12ac:	01000007 	tsteq	r0, r7
    12b0:	007b1234 	rsbseq	r1, fp, r4, lsr r2
    12b4:	05040000 	streq	r0, [r4, #-0]
    12b8:	00230211 	eoreq	r0, r3, r1, lsl r2
    12bc:	0009be1a 	andeq	fp, r9, sl, lsl lr
    12c0:	12350100 	eorsne	r0, r5, #0, 2
    12c4:	0000007b 	andeq	r0, r0, fp, ror r0
    12c8:	02100104 	andseq	r0, r0, #4, 2
    12cc:	1b000023 	blne	1360 <_Min_Stack_Size+0xf60>
    12d0:	0e300104 	rsfeqs	f0, f0, f4
    12d4:	000007e7 	andeq	r0, r0, r7, ror #15
    12d8:	000a661c 	andeq	r6, sl, ip, lsl r6
    12dc:	10310100 	eorsne	r0, r1, r0, lsl #2
    12e0:	0000007b 	andeq	r0, r0, fp, ror r0
    12e4:	00078c1d 	andeq	r8, r7, sp, lsl ip
    12e8:	cc040000 	stcgt	0, cr0, [r4], {-0}
    12ec:	0a000007 	beq	1310 <_Min_Stack_Size+0xf10>
    12f0:	09250110 	stmdbeq	r5!, {r4, r8}
    12f4:	00000824 	andeq	r0, r0, r4, lsr #16
    12f8:	000a550b 	andeq	r5, sl, fp, lsl #10
    12fc:	17260100 	strne	r0, [r6, -r0, lsl #2]!
    1300:	00000087 	andeq	r0, r0, r7, lsl #1
    1304:	1e002302 	cdpne	3, 0, cr2, cr0, cr2, {0}
    1308:	00000787 	andeq	r0, r0, r7, lsl #15
    130c:	0b042302 	bleq	109f1c <_Min_Stack_Size+0x109b1c>
    1310:	00000976 	andeq	r0, r0, r6, ror r9
    1314:	87172f01 	ldrhi	r2, [r7, -r1, lsl #30]
    1318:	02000000 	andeq	r0, r0, #0
    131c:	e71e0823 	ldr	r0, [lr, -r3, lsr #16]
    1320:	02000007 	andeq	r0, r0, #7
    1324:	03000c23 	movweq	r0, #3107	; 0xc23
    1328:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
    132c:	ec023801 	stc	8, cr3, [r2], {1}
    1330:	11000007 	tstne	r0, r7
    1334:	000000ad 	andeq	r0, r0, sp, lsr #1
    1338:	00000840 	andeq	r0, r0, r0, asr #16
    133c:	0000a612 	andeq	sl, r0, r2, lsl r6
    1340:	1f000700 	svcne	0x00000700
    1344:	000009cb 	andeq	r0, r0, fp, asr #19
    1348:	300a3a01 	andcc	r3, sl, r1, lsl #20
    134c:	01000008 	tsteq	r0, r8
    1350:	025c0305 	subseq	r0, ip, #335544320	; 0x14000000
    1354:	721f2000 	andsvc	r2, pc, #0
    1358:	01000006 	tsteq	r0, r6
    135c:	08300a3b 	ldmdaeq	r0!, {r0, r1, r3, r4, r5, r9, fp}
    1360:	05010000 	streq	r0, [r1, #-0]
    1364:	00027c03 	andeq	r7, r2, r3, lsl #24
    1368:	04bb2020 	ldrteq	r2, [fp], #32
    136c:	3d010000 	stccc	0, cr0, [r1, #-0]
    1370:	00012016 	andeq	r2, r1, r6, lsl r0
    1374:	2e030500 	cfsh32cs	mvfx0, mvfx3, #0
    1378:	20200000 	eorcs	r0, r0, r0
    137c:	0000067d 	andeq	r0, r0, sp, ror r6
    1380:	8a176901 	bhi	5db78c <_Min_Stack_Size+0x5db38c>
    1384:	05000008 	streq	r0, [r0, #-8]
    1388:	00002803 	andeq	r2, r0, r3, lsl #16
    138c:	52040720 	andpl	r0, r4, #32, 14	; 0x800000
    1390:	20000000 	andcs	r0, r0, r0
    1394:	00000547 	andeq	r0, r0, r7, asr #10
    1398:	5e116a01 	vnmlspl.f32	s12, s2, s2
    139c:	05000000 	streq	r0, [r0, #-0]
    13a0:	00002c03 	andeq	r2, r0, r3, lsl #24
    13a4:	06482020 	strbeq	r2, [r8], -r0, lsr #32
    13a8:	80010000 	andhi	r0, r1, r0
    13ac:	00004110 	andeq	r4, r0, r0, lsl r1
    13b0:	38030500 	stmdacc	r3, {r8, sl}
    13b4:	20200000 	eorcs	r0, r0, r0
    13b8:	000004f7 	strdeq	r0, [r0], -r7
    13bc:	5e11c801 	cdppl	8, 1, cr12, cr1, cr1, {0}
    13c0:	05000000 	streq	r0, [r0, #-0]
    13c4:	00000003 	andeq	r0, r0, r3
    13c8:	01041620 	tsteq	r4, r0, lsr #12
    13cc:	0a050168 	beq	141974 <_Min_Stack_Size+0x141574>
    13d0:	21000009 	tstcs	r0, r9
    13d4:	00000a6a 	andeq	r0, r0, sl, ror #20
    13d8:	10016901 	andne	r6, r1, r1, lsl #18
    13dc:	0000007b 	andeq	r0, r0, fp, ror r0
    13e0:	02160a04 	andseq	r0, r6, #4, 20	; 0x4000
    13e4:	fb210023 	blx	84147a <_Min_Stack_Size+0x84107a>
    13e8:	01000007 	tsteq	r0, r7
    13ec:	7b10016a 	blvc	40199c <_Min_Stack_Size+0x40159c>
    13f0:	04000000 	streq	r0, [r0], #-0
    13f4:	23021105 	movwcs	r1, #8453	; 0x2105
    13f8:	09be2100 	ldmibeq	lr!, {r8, sp}
    13fc:	6b010000 	blvs	41404 <_Min_Stack_Size+0x41004>
    1400:	007b1001 	rsbseq	r1, fp, r1
    1404:	01040000 	mrseq	r0, (UNDEF: 4)
    1408:	00230210 	eoreq	r0, r3, r0, lsl r2
    140c:	01042200 	mrseq	r2, R12_usr
    1410:	270c0166 	strcs	r0, [ip, -r6, ror #2]
    1414:	23000009 	movwcs	r0, #9
    1418:	0000054b 	andeq	r0, r0, fp, asr #10
    141c:	0e016701 	cdpeq	7, 0, cr6, cr1, cr1, {0}
    1420:	0000007b 	andeq	r0, r0, fp, ror r0
    1424:	0008c61d 	andeq	ip, r8, sp, lsl r6
    1428:	0a040000 	beq	101430 <_Min_Stack_Size+0x101030>
    142c:	16000009 	strne	r0, [r0], -r9
    1430:	01640108 	cmneq	r4, r8, lsl #2
    1434:	00094f09 	andeq	r4, r9, r9, lsl #30
    1438:	097d1700 	ldmdbeq	sp!, {r8, r9, sl, ip}^
    143c:	65010000 	strvs	r0, [r1, #-0]
    1440:	00871501 	addeq	r1, r7, r1, lsl #10
    1444:	23020000 	movwcs	r0, #8192	; 0x2000
    1448:	09271e00 	stmdbeq	r7!, {r9, sl, fp, ip}
    144c:	23020000 	movwcs	r0, #8192	; 0x2000
    1450:	a1190004 	tstge	r9, r4
    1454:	01000004 	tsteq	r0, r4
    1458:	2c02016e 	stfcss	f0, [r2], {110}	; 0x6e
    145c:	24000009 	strcs	r0, [r0], #-9
    1460:	0006f701 	andeq	pc, r6, r1, lsl #14
    1464:	017e0100 	cmneq	lr, r0, lsl #2
    1468:	009a0105 	addseq	r0, sl, r5, lsl #2
    146c:	08800000 	stmeq	r0, {}	; <UNPREDICTABLE>
    1470:	08da0800 	ldmeq	sl, {fp}^
    1474:	056e0800 	strbeq	r0, [lr, #-2048]!	; 0xfffff800
    1478:	10010000 	andne	r0, r1, r0
    147c:	2500000a 	strcs	r0, [r0, #-10]
    1480:	00786469 	rsbseq	r6, r8, r9, ror #8
    1484:	1a017e01 	bne	60c90 <_Min_Stack_Size+0x60890>
    1488:	00000041 	andeq	r0, r0, r1, asr #32
    148c:	00000592 	muleq	r0, r2, r5
    1490:	0000058e 	andeq	r0, r0, lr, lsl #11
    1494:	66756225 	ldrbtvs	r6, [r5], -r5, lsr #4
    1498:	017e0100 	cmneq	lr, r0, lsl #2
    149c:	000a1029 	andeq	r1, sl, r9, lsr #32
    14a0:	0005b900 	andeq	fp, r5, r0, lsl #18
    14a4:	0005b300 	andeq	fp, r5, r0, lsl #6
    14a8:	06232600 	strteq	r2, [r3], -r0, lsl #12
    14ac:	7f010000 	svcvc	0x00010000
    14b0:	0a161001 	beq	5854bc <_Min_Stack_Size+0x5850bc>
    14b4:	05eb0000 	strbeq	r0, [fp, #0]!
    14b8:	05e70000 	strbeq	r0, [r7, #0]!
    14bc:	73270000 			; <UNDEFINED> instruction: 0x73270000
    14c0:	8001007a 	andhi	r0, r1, sl, ror r0
    14c4:	009a0701 	addseq	r0, sl, r1, lsl #14
    14c8:	06150000 	ldreq	r0, [r5], -r0
    14cc:	06130000 	ldreq	r0, [r3], -r0
    14d0:	6e270000 	cdpvs	0, 2, cr0, cr7, cr0, {0}
    14d4:	01820100 	orreq	r0, r2, r0, lsl #2
    14d8:	00009a07 	andeq	r9, r0, r7, lsl #20
    14dc:	00062e00 	andeq	r2, r6, r0, lsl #28
    14e0:	00062800 	andeq	r2, r6, r0, lsl #16
    14e4:	6e692700 	cdpvs	7, 6, cr2, cr9, cr0, {0}
    14e8:	01830100 	orreq	r0, r3, r0, lsl #2
    14ec:	000a1c16 	andeq	r1, sl, r6, lsl ip
    14f0:	00066500 	andeq	r6, r6, r0, lsl #10
    14f4:	00065f00 	andeq	r5, r6, r0, lsl #30
    14f8:	00a02800 	adceq	r2, r0, r0, lsl #16
    14fc:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
    1500:	01840100 	orreq	r0, r4, r0, lsl #2
    1504:	00009a0b 	andeq	r9, r0, fp, lsl #20
    1508:	00069200 	andeq	r9, r6, r0, lsl #4
    150c:	00069000 	andeq	r9, r6, r0
    1510:	07000000 	streq	r0, [r0, -r0]
    1514:	00005e04 	andeq	r5, r0, r4, lsl #28
    1518:	4f040700 	svcmi	0x00040700
    151c:	07000009 	streq	r0, [r0, -r9]
    1520:	00008704 	andeq	r8, r0, r4, lsl #14
    1524:	a9012900 	stmdbge	r1, {r8, fp, sp}
    1528:	01000005 	tsteq	r0, r5
    152c:	01060170 	tsteq	r6, r0, ror r1
    1530:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
    1534:	0800084c 	stmdaeq	r0, {r2, r3, r6, fp}
    1538:	000006a6 	andeq	r0, r0, r6, lsr #13
    153c:	000ade01 	andeq	sp, sl, r1, lsl #28
    1540:	64692500 	strbtvs	r2, [r9], #-1280	; 0xfffffb00
    1544:	70010078 	andvc	r0, r1, r8, ror r0
    1548:	00411c01 	subeq	r1, r1, r1, lsl #24
    154c:	06cc0000 	strbeq	r0, [ip], r0
    1550:	06c60000 	strbeq	r0, [r6], r0
    1554:	622a0000 	eorvs	r0, sl, #0
    1558:	01006675 	tsteq	r0, r5, ror r6
    155c:	de310170 	mrcle	1, 1, r0, cr1, cr0, {3}
    1560:	0100000a 	tsteq	r0, sl
    1564:	13af2b51 			; <UNDEFINED> instruction: 0x13af2b51
    1568:	70010000 	andvc	r0, r1, r0
    156c:	005e3f01 	subseq	r3, lr, r1, lsl #30
    1570:	52010000 	andpl	r0, r1, #0
    1574:	00062326 	andeq	r2, r6, r6, lsr #6
    1578:	01710100 	cmneq	r1, r0, lsl #2
    157c:	000a1610 	andeq	r1, sl, r0, lsl r6
    1580:	0006fa00 	andeq	pc, r6, r0, lsl #20
    1584:	0006f800 	andeq	pc, r6, r0, lsl #16
    1588:	324e2700 	subcc	r2, lr, #0, 14
    158c:	01720100 	cmneq	r2, r0, lsl #2
    1590:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1594:	00070f00 	andeq	r0, r7, r0, lsl #30
    1598:	00070d00 	andeq	r0, r7, r0, lsl #26
    159c:	044b2600 	strbeq	r2, [fp], #-1536	; 0xfffffa00
    15a0:	74010000 	strvc	r0, [r1], #-0
    15a4:	0a100d01 	beq	4049b0 <_Min_Stack_Size+0x4045b0>
    15a8:	07240000 	streq	r0, [r4, -r0]!
    15ac:	07220000 	streq	r0, [r2, -r0]!
    15b0:	6f270000 	svcvs	0x00270000
    15b4:	01007475 	tsteq	r0, r5, ror r4
    15b8:	1c160175 	ldfnes	f0, [r6], {117}	; 0x75
    15bc:	3d00000a 	stccc	0, cr0, [r0, #-40]	; 0xffffffd8
    15c0:	37000007 	strcc	r0, [r0, -r7]
    15c4:	28000007 	stmdacs	r0, {r0, r1, r2}
    15c8:	00000068 	andeq	r0, r0, r8, rrx
    15cc:	01006927 	tsteq	r0, r7, lsr #18
    15d0:	5e100176 	fixplz	r0, f6
    15d4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    15d8:	74000007 	strvc	r0, [r0], #-7
    15dc:	00000007 	andeq	r0, r0, r7
    15e0:	6f040700 	svcvs	0x00040700
    15e4:	2c000000 	stccs	0, cr0, [r0], {-0}
    15e8:	0005ff01 	andeq	pc, r5, r1, lsl #30
    15ec:	012e0100 			; <UNDEFINED> instruction: 0x012e0100
    15f0:	0006a806 	andeq	sl, r6, r6, lsl #16
    15f4:	0007f808 	andeq	pc, r7, r8, lsl #16
    15f8:	00079808 	andeq	r9, r7, r8, lsl #16
    15fc:	0bcf0100 	bleq	ff3c1a04 <BootRAM+0xe3321a5>
    1600:	382d0000 	stmdacc	sp!, {}	; <UNPREDICTABLE>
    1604:	3d000000 	stccc	0, cr0, [r0, #-0]
    1608:	2600000b 	strcs	r0, [r0], -fp
    160c:	00000941 	andeq	r0, r0, r1, asr #18
    1610:	0f013101 	svceq	0x00013101
    1614:	00000041 	andeq	r0, r0, r1, asr #32
    1618:	000007ba 			; <UNDEFINED> instruction: 0x000007ba
    161c:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
    1620:	0006dc2e 	andeq	sp, r6, lr, lsr #24
    1624:	000b2d08 	andeq	r2, fp, r8, lsl #26
    1628:	50012f00 	andpl	r2, r1, r0, lsl #30
    162c:	00007602 	andeq	r7, r0, r2, lsl #12
    1630:	0006fc30 	andeq	pc, r6, r0, lsr ip	; <UNPREDICTABLE>
    1634:	50012f08 	andpl	r2, r1, r8, lsl #30
    1638:	08007605 	stmdaeq	r0, {r0, r2, r9, sl, ip, sp, lr}
    163c:	00002180 	andeq	r2, r0, r0, lsl #3
    1640:	0000502d 	andeq	r5, r0, sp, lsr #32
    1644:	000b5a00 	andeq	r5, fp, r0, lsl #20
    1648:	00692700 	rsbeq	r2, r9, r0, lsl #14
    164c:	11014d01 	tstne	r1, r1, lsl #26
    1650:	00000041 	andeq	r0, r0, r1, asr #32
    1654:	000007d1 	ldrdeq	r0, [r0], -r1
    1658:	000007cd 	andeq	r0, r0, sp, asr #15
    165c:	07243100 	streq	r3, [r4, -r0, lsl #2]!
    1660:	123a0800 	eorsne	r0, sl, #0, 16
    1664:	3a310000 	bcc	c4166c <_Min_Stack_Size+0xc4126c>
    1668:	4c080007 	stcmi	0, cr0, [r8], {7}
    166c:	32000012 	andcc	r0, r0, #18
    1670:	0800077c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl}
    1674:	00000c64 	andeq	r0, r0, r4, ror #24
    1678:	00000b94 	muleq	r0, r4, fp
    167c:	0250012f 	subseq	r0, r0, #-1073741813	; 0xc000000b
    1680:	012f0074 			; <UNDEFINED> instruction: 0x012f0074
    1684:	00740251 	rsbseq	r0, r4, r1, asr r2
    1688:	0152012f 	cmpeq	r2, pc, lsr #2
    168c:	53012f38 	movwpl	r2, #7992	; 0x1f38
    1690:	08db0305 	ldmeq	fp, {r0, r2, r8, r9}^
    1694:	32000800 	andcc	r0, r0, #0, 16
    1698:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
    169c:	00000c64 	andeq	r0, r0, r4, ror #24
    16a0:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    16a4:	0250012f 	subseq	r0, r0, #-1073741813	; 0xc000000b
    16a8:	012f8009 			; <UNDEFINED> instruction: 0x012f8009
    16ac:	00740251 	rsbseq	r0, r4, r1, asr r2
    16b0:	0152012f 	cmpeq	r2, pc, lsr #2
    16b4:	53012f38 	movwpl	r2, #7992	; 0x1f38
    16b8:	084d0305 	stmdaeq	sp, {r0, r2, r8, r9}^
    16bc:	31000800 	tstcc	r0, r0, lsl #16
    16c0:	08000790 	stmdaeq	r0, {r4, r7, r8, r9, sl}
    16c4:	00001255 	andeq	r1, r0, r5, asr r2
    16c8:	00079e31 	andeq	r9, r7, r1, lsr lr
    16cc:	00124c08 	andseq	r4, r2, r8, lsl #24
    16d0:	01330000 	teqeq	r3, r0
    16d4:	000009d5 	ldrdeq	r0, [r0], -r5
    16d8:	0106f901 	tsteq	r6, r1, lsl #18	; <UNPREDICTABLE>
    16dc:	08000560 	stmdaeq	r0, {r5, r6, r8, sl}
    16e0:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
    16e4:	000007f4 	strdeq	r0, [r0], -r4
    16e8:	000c6401 	andeq	r6, ip, r1, lsl #8
    16ec:	09413400 	stmdbeq	r1, {sl, ip, sp}^
    16f0:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    16f4:	00004121 	andeq	r4, r0, r1, lsr #2
    16f8:	00081800 	andeq	r1, r8, r0, lsl #16
    16fc:	00081400 	andeq	r1, r8, r0, lsl #8
    1700:	0a3b3400 	beq	ece708 <_Min_Stack_Size+0xece308>
    1704:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    1708:	00004130 	andeq	r4, r0, r0, lsr r1
    170c:	00084600 	andeq	r4, r8, r0, lsl #12
    1710:	00083600 	andeq	r3, r8, r0, lsl #12
    1714:	13af3400 			; <UNDEFINED> instruction: 0x13af3400
    1718:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    171c:	00005e42 	andeq	r5, r0, r2, asr #28
    1720:	0008b800 	andeq	fp, r8, r0, lsl #16
    1724:	0008b200 	andeq	fp, r8, r0, lsl #4
    1728:	0d723400 	cfldrdeq	mvd3, [r2, #-0]
    172c:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    1730:	0000ad51 	andeq	sl, r0, r1, asr sp
    1734:	0008e800 	andeq	lr, r8, r0, lsl #16
    1738:	0008e400 	andeq	lr, r8, r0, lsl #8
    173c:	0a4e3500 	beq	138eb44 <_Min_Stack_Size+0x138e744>
    1740:	fb010000 	blx	4174a <_Min_Stack_Size+0x4134a>
    1744:	0000410b 	andeq	r4, r0, fp, lsl #2
    1748:	00090e00 	andeq	r0, r9, r0, lsl #28
    174c:	00090600 	andeq	r0, r9, r0, lsl #12
    1750:	75622700 	strbvc	r2, [r2, #-1792]!	; 0xfffff900
    1754:	01010066 	tsteq	r1, r6, rrx
    1758:	005e0c01 	subseq	r0, lr, r1, lsl #24
    175c:	096a0000 	stmdbeq	sl!, {}^	; <UNPREDICTABLE>
    1760:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    1764:	33000000 	movwcc	r0, #0
    1768:	0008bf01 	andeq	fp, r8, r1, lsl #30
    176c:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    1770:	00044801 	andeq	r4, r4, r1, lsl #16
    1774:	00056008 	andeq	r6, r5, r8
    1778:	0009fd08 	andeq	pc, r9, r8, lsl #26
    177c:	0cf80100 	ldfeqe	f0, [r8]
    1780:	41340000 	teqmi	r4, r0
    1784:	01000009 	tsteq	r0, r9
    1788:	00411ac9 	subeq	r1, r1, r9, asr #21
    178c:	0a210000 	beq	841794 <_Min_Stack_Size+0x841394>
    1790:	0a1d0000 	beq	741798 <_Min_Stack_Size+0x741398>
    1794:	3b340000 	blcc	d0179c <_Min_Stack_Size+0xd0139c>
    1798:	0100000a 	tsteq	r0, sl
    179c:	004129c9 	subeq	r2, r1, r9, asr #19
    17a0:	0a470000 	beq	11c17a8 <_Min_Stack_Size+0x11c13a8>
    17a4:	0a3f0000 	beq	fc17ac <_Min_Stack_Size+0xfc13ac>
    17a8:	af340000 	svcge	0x00340000
    17ac:	01000013 	tsteq	r0, r3, lsl r0
    17b0:	005e3bc9 	subseq	r3, lr, r9, asr #23
    17b4:	0a870000 	beq	fe1c17bc <BootRAM+0xd131f5d>
    17b8:	0a810000 	beq	fe0417c0 <BootRAM+0xcfb1f61>
    17bc:	72340000 	eorsvc	r0, r4, #0
    17c0:	0100000d 	tsteq	r0, sp
    17c4:	00ad4ac9 	adceq	r4, sp, r9, asr #21
    17c8:	0abf0000 	beq	fefc17d0 <BootRAM+0xdf31f71>
    17cc:	0ab30000 	beq	fecc17d4 <BootRAM+0xdc31f75>
    17d0:	4e350000 	cdpmi	0, 3, cr0, cr5, cr0, {0}
    17d4:	0100000a 	tsteq	r0, sl
    17d8:	00410bcb 	subeq	r0, r1, fp, asr #23
    17dc:	0b310000 	bleq	c417e4 <_Min_Stack_Size+0xc413e4>
    17e0:	0b270000 	bleq	9c17e8 <_Min_Stack_Size+0x9c13e8>
    17e4:	62360000 	eorsvs	r0, r6, #0
    17e8:	01006675 	tsteq	r0, r5, ror r6
    17ec:	005e0cd4 	ldrsbeq	r0, [lr], #-196	; 0xffffff3c
    17f0:	0b980000 	bleq	fe6017f8 <BootRAM+0xd571f99>
    17f4:	0b8a0000 	bleq	fe2817fc <BootRAM+0xd1f1f9d>
    17f8:	37000000 	strcc	r0, [r0, -r0]
    17fc:	0000108d 	andeq	r1, r0, sp, lsl #1
    1800:	010d8201 	tsteq	sp, r1, lsl #4
    1804:	080008da 	stmdaeq	r0, {r1, r3, r4, r6, r7, fp}
    1808:	08000a10 	stmdaeq	r0, {r4, r9, fp}
    180c:	00000c1f 	andeq	r0, r0, pc, lsl ip
    1810:	00101f01 	andseq	r1, r0, r1, lsl #30
    1814:	09413400 	stmdbeq	r1, {sl, ip, sp}^
    1818:	82010000 	andhi	r0, r1, #0
    181c:	0000411d 	andeq	r4, r0, sp, lsl r1
    1820:	000c5f00 	andeq	r5, ip, r0, lsl #30
    1824:	000c5700 	andeq	r5, ip, r0, lsl #14
    1828:	04d32000 	ldrbeq	r2, [r3], #0
    182c:	83010000 	movwhi	r0, #4096	; 0x1000
    1830:	00005e13 	andeq	r5, r0, r3, lsl lr
    1834:	36030500 	strcc	r0, [r3], -r0, lsl #10
    1838:	35200000 	strcc	r0, [r0, #-0]!
    183c:	00000a73 	andeq	r0, r0, r3, ror sl
    1840:	5e0c8401 	cdppl	4, 0, cr8, cr12, cr1, {0}
    1844:	a1000000 	mrsge	r0, (UNDEF: 0)
    1848:	9900000c 	stmdbls	r0, {r2, r3}
    184c:	3500000c 	strcc	r0, [r0, #-12]
    1850:	00000088 	andeq	r0, r0, r8, lsl #1
    1854:	410b8501 	tstmi	fp, r1, lsl #10
    1858:	d7000000 	strle	r0, [r0, -r0]
    185c:	d500000c 	strle	r0, [r0, #-12]
    1860:	3600000c 	strcc	r0, [r0], -ip
    1864:	00716572 	rsbseq	r6, r1, r2, ror r5
    1868:	410b9501 	tstmi	fp, r1, lsl #10
    186c:	04000000 	streq	r0, [r0], #-0
    1870:	f400000d 	vst4.8	{d0-d3}, [r0]!
    1874:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    1878:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    187c:	00000ebf 			; <UNDEFINED> instruction: 0x00000ebf
    1880:	000b0220 	andeq	r0, fp, r0, lsr #4
    1884:	0bac0100 	bleq	feb01c8c <BootRAM+0xda7242d>
    1888:	0000101f 	andeq	r1, r0, pc, lsl r0
    188c:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    1890:	000013af 	andeq	r1, r0, pc, lsr #7
    1894:	5e0ead01 	cdppl	13, 0, cr10, cr14, cr1, {0}
    1898:	02000000 	andeq	r0, r0, #0
    189c:	34386a91 	ldrtcc	r6, [r8], #-2705	; 0xfffff56f
    18a0:	48080009 	stmdami	r8, {r0, r3}
    18a4:	dd080009 	stcle	0, cr0, [r8, #-36]	; 0xffffffdc
    18a8:	2000000d 	andcs	r0, r0, sp
    18ac:	00000b02 	andeq	r0, r0, r2, lsl #22
    18b0:	21179d01 	tstcs	r7, r1, lsl #26
    18b4:	02000010 	andeq	r0, r0, #16
    18b8:	af206c91 	svcge	0x00206c91
    18bc:	01000013 	tsteq	r0, r3, lsl r0
    18c0:	005e149e 			; <UNDEFINED> instruction: 0x005e149e
    18c4:	91020000 	mrsls	r0, (UNDEF: 2)
    18c8:	0948396a 	stmdbeq	r8, {r1, r3, r5, r6, r8, fp, ip, sp}^
    18cc:	12eb0800 	rscne	r0, fp, #0, 16
    18d0:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    18d4:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    18d8:	0252012f 	subseq	r0, r2, #-1073741813	; 0xc000000b
    18dc:	00006a91 	muleq	r0, r1, sl
    18e0:	00128a3a 	andseq	r8, r2, sl, lsr sl
    18e4:	00092000 	andeq	r2, r9, r0
    18e8:	09200108 	stmdbeq	r0!, {r3, r8}
    18ec:	09240800 	stmdbeq	r4!, {fp}
    18f0:	a5010800 	strge	r0, [r1, #-2048]	; 0xfffff800
    18f4:	000e1e0b 	andeq	r1, lr, fp, lsl #28
    18f8:	12b03b00 	adcsne	r3, r0, #0, 22
    18fc:	0d700000 	ldcleq	0, cr0, [r0, #-0]
    1900:	0d6e0000 	stcleq	0, cr0, [lr, #-0]
    1904:	a43b0000 	ldrtge	r0, [fp], #-0
    1908:	86000012 			; <UNDEFINED> instruction: 0x86000012
    190c:	8400000d 	strhi	r0, [r0], #-13
    1910:	3b00000d 	blcc	194c <_Min_Stack_Size+0x154c>
    1914:	00001298 	muleq	r0, r8, r2
    1918:	00000da0 	andeq	r0, r0, r0, lsr #27
    191c:	00000d9e 	muleq	r0, lr, sp
    1920:	10283c00 	eorne	r3, r8, r0, lsl #24
    1924:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    1928:	f0010800 			; <UNDEFINED> instruction: 0xf0010800
    192c:	01000000 	mrseq	r0, (UNDEF: 0)
    1930:	0e5e05b0 	mrceq	5, 2, r0, cr14, cr0, {5}
    1934:	423b0000 	eorsmi	r0, fp, #0
    1938:	b6000010 			; <UNDEFINED> instruction: 0xb6000010
    193c:	b400000d 	strlt	r0, [r0], #-13
    1940:	3b00000d 	blcc	197c <_Min_Stack_Size+0x157c>
    1944:	00001036 	andeq	r1, r0, r6, lsr r0
    1948:	00000dcc 	andeq	r0, r0, ip, asr #27
    194c:	00000dca 	andeq	r0, r0, sl, asr #27
    1950:	00096639 	andeq	r6, r9, r9, lsr r6
    1954:	00104f08 	andseq	r4, r0, r8, lsl #30
    1958:	50012f00 	andpl	r2, r1, r0, lsl #30
    195c:	00800902 	addeq	r0, r0, r2, lsl #18
    1960:	128a3a00 	addne	r3, sl, #0, 20
    1964:	096a0000 	stmdbeq	sl!, {}^	; <UNPREDICTABLE>
    1968:	6a010800 	bvs	43970 <_Min_Stack_Size+0x43570>
    196c:	72080009 	andvc	r0, r8, #9
    1970:	01080009 	tsteq	r8, r9
    1974:	0e9f0ba8 	vfnmseq.f64	d0, d31, d24
    1978:	b03b0000 	eorslt	r0, fp, r0
    197c:	e2000012 	and	r0, r0, #18
    1980:	e000000d 	and	r0, r0, sp
    1984:	3b00000d 	blcc	19c0 <_Min_Stack_Size+0x15c0>
    1988:	000012a4 	andeq	r1, r0, r4, lsr #5
    198c:	00000df8 	strdeq	r0, [r0], -r8
    1990:	00000df6 	strdeq	r0, [r0], -r6
    1994:	0012983b 	andseq	r9, r2, fp, lsr r8
    1998:	000e1200 	andeq	r1, lr, r0, lsl #4
    199c:	000e1000 	andeq	r1, lr, r0
    19a0:	88390000 	ldmdahi	r9!, {}	; <UNPREDICTABLE>
    19a4:	e5080009 	str	r0, [r8, #-9]
    19a8:	2f000011 	svccs	0x00000011
    19ac:	03055001 	movweq	r5, #20481	; 0x5001
    19b0:	2000002e 	andcs	r0, r0, lr, lsr #32
    19b4:	0251012f 	subseq	r0, r1, #-1073741813	; 0xc000000b
    19b8:	012f6c91 			; <UNDEFINED> instruction: 0x012f6c91
    19bc:	6a910252 	bvs	fe44230c <BootRAM+0xd3b2aad>
    19c0:	92380000 	eorsls	r0, r8, #0
    19c4:	b4080009 	strlt	r0, [r8], #-9
    19c8:	36080009 	strcc	r0, [r8], -r9
    19cc:	3500000f 	strcc	r0, [r0, #-15]
    19d0:	00000669 	andeq	r0, r0, r9, ror #12
    19d4:	4111b501 	tstmi	r1, r1, lsl #10
    19d8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    19dc:	2600000e 	strcs	r0, [r0], -lr
    19e0:	3d00000e 	stccc	0, cr0, [r0, #-56]	; 0xffffffc8
    19e4:	0000128a 	andeq	r1, r0, sl, lsl #5
    19e8:	0800099a 	stmdaeq	r0, {r1, r3, r4, r7, r8, fp}
    19ec:	00012001 	andeq	r2, r1, r1
    19f0:	09b60100 	ldmibeq	r6!, {r8}
    19f4:	0012b03b 	andseq	fp, r2, fp, lsr r0
    19f8:	000e3d00 	andeq	r3, lr, r0, lsl #26
    19fc:	000e3b00 	andeq	r3, lr, r0, lsl #22
    1a00:	12a43b00 	adcne	r3, r4, #0, 22
    1a04:	0e3d0000 	cdpeq	0, 3, cr0, cr13, cr0, {0}
    1a08:	0e3b0000 	cdpeq	0, 3, cr0, cr11, cr0, {0}
    1a0c:	983b0000 	ldmdals	fp!, {}	; <UNPREDICTABLE>
    1a10:	3d000012 	stccc	0, cr0, [r0, #-72]	; 0xffffffb8
    1a14:	3b00000e 	blcc	1a54 <_Min_Stack_Size+0x1654>
    1a18:	3900000e 	stmdbcc	r0, {r1, r2, r3}
    1a1c:	0800099e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, fp}
    1a20:	00000a22 	andeq	r0, r0, r2, lsr #20
    1a24:	0250012f 	subseq	r0, r0, #-1073741813	; 0xc000000b
    1a28:	012f0071 			; <UNDEFINED> instruction: 0x012f0071
    1a2c:	00710251 	rsbseq	r0, r1, r1, asr r2
    1a30:	0252012f 	subseq	r0, r2, #-1073741813	; 0xc000000b
    1a34:	00000071 	andeq	r0, r0, r1, ror r0
    1a38:	125f3c00 	subsne	r3, pc, #0, 24
    1a3c:	08fa0000 	ldmeq	sl!, {}^	; <UNPREDICTABLE>
    1a40:	b8010800 	stmdalt	r1, {fp}
    1a44:	01000000 	mrseq	r0, (UNDEF: 0)
    1a48:	0f7e0789 	svceq	0x007e0789
    1a4c:	713b0000 	teqvc	fp, r0
    1a50:	53000012 	movwpl	r0, #18
    1a54:	5100000e 	tstpl	r0, lr
    1a58:	3b00000e 	blcc	1a98 <_Min_Stack_Size+0x1698>
    1a5c:	0000127d 	andeq	r1, r0, sp, ror r2
    1a60:	00000e69 	andeq	r0, r0, r9, ror #28
    1a64:	00000e67 	andeq	r0, r0, r7, ror #28
    1a68:	00090439 	andeq	r0, r9, r9, lsr r4
    1a6c:	00095c08 	andeq	r5, r9, r8, lsl #24
    1a70:	50012f00 	andpl	r2, r1, r0, lsl #30
    1a74:	012f3101 			; <UNDEFINED> instruction: 0x012f3101
    1a78:	2e030551 	cfrshl32cs	mvfx3, mvfx1, r0
    1a7c:	00200000 	eoreq	r0, r0, r0
    1a80:	128a3c00 	addne	r3, sl, #0, 24
    1a84:	09bc0000 	ldmibeq	ip!, {}	; <UNPREDICTABLE>
    1a88:	08050800 	stmdaeq	r5, {fp}
    1a8c:	01000001 	tsteq	r0, r1
    1a90:	0fc42cc4 	svceq	0x00c42cc4
    1a94:	b03b0000 	eorslt	r0, fp, r0
    1a98:	83000012 	movwhi	r0, #18
    1a9c:	8100000e 	tsthi	r0, lr
    1aa0:	3b00000e 	blcc	1ae0 <_Min_Stack_Size+0x16e0>
    1aa4:	000012a4 	andeq	r1, r0, r4, lsr #5
    1aa8:	00000e83 	andeq	r0, r0, r3, lsl #29
    1aac:	00000e81 	andeq	r0, r0, r1, lsl #29
    1ab0:	0012983b 	andseq	r9, r2, fp, lsr r8
    1ab4:	000e8300 	andeq	r8, lr, r0, lsl #6
    1ab8:	000e8100 	andeq	r8, lr, r0, lsl #2
    1abc:	09283100 	stmdbeq	r8!, {r8, ip, sp}
    1ac0:	0a220800 	beq	883ac8 <_Min_Stack_Size+0x8836c8>
    1ac4:	3a000000 	bcc	1acc <_Min_Stack_Size+0x16cc>
    1ac8:	0000128a 	andeq	r1, r0, sl, lsl #5
    1acc:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
    1ad0:	0009bc01 	andeq	fp, r9, r1, lsl #24
    1ad4:	0009bc08 	andeq	fp, r9, r8, lsl #24
    1ad8:	09bc0108 	ldmibeq	ip!, {r3, r8}
    1adc:	00001005 	andeq	r1, r0, r5
    1ae0:	0012b03b 	andseq	fp, r2, fp, lsr r0
    1ae4:	000e9900 	andeq	r9, lr, r0, lsl #18
    1ae8:	000e9700 	andeq	r9, lr, r0, lsl #14
    1aec:	12a43b00 	adcne	r3, r4, #0, 22
    1af0:	0e990000 	cdpeq	0, 9, cr0, cr9, cr0, {0}
    1af4:	0e970000 	cdpeq	0, 9, cr0, cr7, cr0, {0}
    1af8:	983b0000 	ldmdals	fp!, {}	; <UNPREDICTABLE>
    1afc:	99000012 	stmdbls	r0, {r1, r4}
    1b00:	9700000e 	strls	r0, [r0, -lr]
    1b04:	0000000e 	andeq	r0, r0, lr
    1b08:	0009ce39 	andeq	ip, r9, r9, lsr lr
    1b0c:	00118908 	andseq	r8, r1, r8, lsl #18
    1b10:	50012f00 	andpl	r2, r1, r0, lsl #30
    1b14:	002e0305 	eoreq	r0, lr, r5, lsl #6
    1b18:	012f2000 			; <UNDEFINED> instruction: 0x012f2000
    1b1c:	00750252 	rsbseq	r0, r5, r2, asr r2
    1b20:	043e0000 	ldrteq	r0, [lr], #-0
    1b24:	10270407 	eorne	r0, r7, r7, lsl #8
    1b28:	403f0000 	eorsmi	r0, pc, r0
    1b2c:	00000633 	andeq	r0, r0, r3, lsr r6
    1b30:	01147a01 	tsteq	r4, r1, lsl #20
    1b34:	00104f03 	andseq	r4, r0, r3, lsl #30
    1b38:	75624100 	strbvc	r4, [r2, #-256]!	; 0xffffff00
    1b3c:	7a010066 	bvc	41cdc <_Min_Stack_Size+0x418dc>
    1b40:	000ade2d 	andeq	sp, sl, sp, lsr #28
    1b44:	13af4200 			; <UNDEFINED> instruction: 0x13af4200
    1b48:	7a010000 	bvc	41b50 <_Min_Stack_Size+0x41750>
    1b4c:	00005e3b 	andeq	r5, r0, fp, lsr lr
    1b50:	25370000 	ldrcs	r0, [r7, #-0]!
    1b54:	0100000f 	tsteq	r0, pc
    1b58:	4c010d6c 	stcmi	13, cr0, [r1], {108}	; 0x6c
    1b5c:	80080008 	andhi	r0, r8, r8
    1b60:	ad080008 	stcge	0, cr0, [r8, #-32]	; 0xffffffe0
    1b64:	0100000e 	tsteq	r0, lr
    1b68:	000010e6 	andeq	r1, r0, r6, ror #1
    1b6c:	00094134 	andeq	r4, r9, r4, lsr r1
    1b70:	1c6c0100 	stfnee	f0, [ip], #-0
    1b74:	00000041 	andeq	r0, r0, r1, asr #32
    1b78:	00000ed1 	ldrdeq	r0, [r0], -r1
    1b7c:	00000ecd 	andeq	r0, r0, sp, asr #29
    1b80:	0008ec35 	andeq	lr, r8, r5, lsr ip
    1b84:	0c6e0100 	stfeqe	f0, [lr], #-0
    1b88:	0000005e 	andeq	r0, r0, lr, asr r0
    1b8c:	00000ef6 	strdeq	r0, [r0], -r6
    1b90:	00000ef2 	strdeq	r0, [r0], -r2
    1b94:	00128a3d 	andseq	r8, r2, sp, lsr sl
    1b98:	00086000 	andeq	r6, r8, r0
    1b9c:	00880208 	addeq	r0, r8, r8, lsl #4
    1ba0:	70010000 	andvc	r0, r1, r0
    1ba4:	12b03b03 	adcsne	r3, r0, #3072	; 0xc00
    1ba8:	0f160000 	svceq	0x00160000
    1bac:	0f140000 	svceq	0x00140000
    1bb0:	a43b0000 	ldrtge	r0, [fp], #-0
    1bb4:	2b000012 	blcs	1c04 <_Min_Stack_Size+0x1804>
    1bb8:	2900000f 	stmdbcs	r0, {r0, r1, r2, r3}
    1bbc:	3b00000f 	blcc	1c00 <_Min_Stack_Size+0x1800>
    1bc0:	00001298 	muleq	r0, r8, r2
    1bc4:	00000f40 	andeq	r0, r0, r0, asr #30
    1bc8:	00000f3e 	andeq	r0, r0, lr, lsr pc
    1bcc:	00086839 	andeq	r6, r8, r9, lsr r8
    1bd0:	000a2208 	andeq	r2, sl, r8, lsl #4
    1bd4:	50012f00 	andpl	r2, r1, r0, lsl #30
    1bd8:	012f3001 			; <UNDEFINED> instruction: 0x012f3001
    1bdc:	00710251 	rsbseq	r0, r1, r1, asr r2
    1be0:	0252012f 	subseq	r0, r2, #-1073741813	; 0xc000000b
    1be4:	00000072 	andeq	r0, r0, r2, ror r0
    1be8:	84014300 	strhi	r4, [r1], #-768	; 0xfffffd00
    1bec:	01000000 	mrseq	r0, (UNDEF: 0)
    1bf0:	03b60641 			; <UNDEFINED> instruction: 0x03b60641
    1bf4:	04480800 	strbeq	r0, [r8], #-2048	; 0xfffff800
    1bf8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1bfc:	11610100 	cmnne	r1, r0, lsl #2
    1c00:	182d0000 	stmdane	sp!, {}	; <UNPREDICTABLE>
    1c04:	1b000000 	blne	1c0c <_Min_Stack_Size+0x180c>
    1c08:	36000011 			; <UNDEFINED> instruction: 0x36000011
    1c0c:	58010069 	stmdapl	r1, {r0, r3, r5, r6}
    1c10:	0000410f 	andeq	r4, r0, pc, lsl #2
    1c14:	000f5800 	andeq	r5, pc, r0, lsl #16
    1c18:	000f5400 	andeq	r5, pc, r0, lsl #8
    1c1c:	f4380000 			; <UNDEFINED> instruction: 0xf4380000
    1c20:	fa080003 	blx	201c34 <_Min_Stack_Size+0x201834>
    1c24:	3d080003 	stccc	0, cr0, [r8, #-12]
    1c28:	36000011 			; <UNDEFINED> instruction: 0x36000011
    1c2c:	00727463 	rsbseq	r7, r2, r3, ror #8
    1c30:	7b105901 	blvc	41803c <_Min_Stack_Size+0x417c3c>
    1c34:	81000000 	mrshi	r0, (UNDEF: 0)
    1c38:	7b00000f 	blvc	1c7c <_Min_Stack_Size+0x187c>
    1c3c:	0000000f 	andeq	r0, r0, pc
    1c40:	0012bd44 	andseq	fp, r2, r4, asr #26
    1c44:	00041400 	andeq	r1, r4, r0, lsl #8
    1c48:	04140108 	ldreq	r0, [r4], #-264	; 0xfffffef8
    1c4c:	041c0800 	ldreq	r0, [ip], #-2048	; 0xfffff800
    1c50:	5f010800 	svcpl	0x00010800
    1c54:	12cc3b03 	sbcne	r3, ip, #3072	; 0xc00
    1c58:	0fc40000 	svceq	0x00c40000
    1c5c:	0fc20000 	svceq	0x00c20000
    1c60:	00000000 	andeq	r0, r0, r0
    1c64:	00056d45 	andeq	r6, r5, r5, asr #26
    1c68:	0d230100 	stfeqs	f0, [r3, #-0]
    1c6c:	0003a401 	andeq	sl, r3, r1, lsl #8
    1c70:	0003a608 	andeq	sl, r3, r8, lsl #12
    1c74:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1c78:	00118901 	andseq	r8, r1, r1, lsl #18
    1c7c:	09414600 	stmdbeq	r1, {r9, sl, lr}^
    1c80:	23010000 	movwcs	r0, #4096	; 0x1000
    1c84:	0000412b 	andeq	r4, r0, fp, lsr #2
    1c88:	00500100 	subseq	r0, r0, r0, lsl #2
    1c8c:	09510147 	ldmdbeq	r1, {r0, r1, r2, r6, r8}^
    1c90:	21010000 	mrscs	r0, (UNDEF: 1)
    1c94:	11d8011b 	bicsne	r0, r8, fp, lsl r1
    1c98:	03b20000 			; <UNDEFINED> instruction: 0x03b20000
    1c9c:	03b60800 			; <UNDEFINED> instruction: 0x03b60800
    1ca0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1ca4:	11d80100 	bicsne	r0, r8, r0, lsl #2
    1ca8:	72480000 	subvc	r0, r8, #0
    1cac:	01007165 	tsteq	r0, r5, ror #2
    1cb0:	11df3c21 	bicsne	r3, pc, r1, lsr #24
    1cb4:	0fdc0000 	svceq	0x00dc0000
    1cb8:	0fd80000 	svceq	0x00d80000
    1cbc:	9d460000 	stclls	0, cr0, [r6, #-0]
    1cc0:	0100000f 	tsteq	r0, pc
    1cc4:	005e4a21 	subseq	r4, lr, r1, lsr #20
    1cc8:	51010000 	mrspl	r0, (UNDEF: 1)
    1ccc:	00083b46 	andeq	r3, r8, r6, asr #22
    1cd0:	5b210100 	blpl	8420d8 <_Min_Stack_Size+0x841cd8>
    1cd4:	0000005e 	andeq	r0, r0, lr, asr r0
    1cd8:	02005201 	andeq	r5, r0, #268435456	; 0x10000000
    1cdc:	029f0801 	addseq	r0, pc, #65536	; 0x10000
    1ce0:	04070000 	streq	r0, [r7], #-0
    1ce4:	00000120 	andeq	r0, r0, r0, lsr #2
    1ce8:	08090147 	stmdaeq	r9, {r0, r1, r2, r6, r8}
    1cec:	20010000 	andcs	r0, r1, r0
    1cf0:	11d8011b 	bicsne	r0, r8, fp, lsl r1
    1cf4:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
    1cf8:	03b20800 			; <UNDEFINED> instruction: 0x03b20800
    1cfc:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1d00:	12340100 	eorsne	r0, r4, #0, 2
    1d04:	72480000 	subvc	r0, r8, #0
    1d08:	01007165 	tsteq	r0, r5, ror #2
    1d0c:	11df3b20 	bicsne	r3, pc, r0, lsr #22
    1d10:	10010000 	andne	r0, r1, r0
    1d14:	0ffd0000 	svceq	0x00fd0000
    1d18:	02460000 	subeq	r0, r6, #0
    1d1c:	0100000b 	tsteq	r0, fp
    1d20:	12344720 	eorsne	r4, r4, #32, 14	; 0x800000
    1d24:	51010000 	mrspl	r0, (UNDEF: 1)
    1d28:	0013af46 	andseq	sl, r3, r6, asr #30
    1d2c:	57200100 	strpl	r0, [r0, -r0, lsl #2]!
    1d30:	00000a10 	andeq	r0, r0, r0, lsl sl
    1d34:	07005201 	streq	r5, [r0, -r1, lsl #4]
    1d38:	00101f04 	andseq	r1, r0, r4, lsl #30
    1d3c:	0c014900 			; <UNDEFINED> instruction: 0x0c014900
    1d40:	01000005 	tsteq	r0, r5
    1d44:	01491b1f 	cmpeq	r9, pc, lsl fp
    1d48:	00000135 	andeq	r0, r0, r5, lsr r1
    1d4c:	491b1e01 	ldmdbmi	fp, {r0, r9, sl, fp, ip}
    1d50:	00075901 	andeq	r5, r7, r1, lsl #18
    1d54:	1b1d0100 	blne	74215c <_Min_Stack_Size+0x741d5c>
    1d58:	0721014a 	streq	r0, [r1, -sl, asr #2]!
    1d5c:	1c010000 	stcne	0, cr0, [r1], {-0}
    1d60:	f84b011b 			; <UNDEFINED> instruction: 0xf84b011b
    1d64:	03000006 	movweq	r0, #6
    1d68:	9a0113c1 	bls	46c74 <_Min_Stack_Size+0x46874>
    1d6c:	03000000 	movweq	r0, #0
    1d70:	0000128a 	andeq	r1, r0, sl, lsl #5
    1d74:	00094142 	andeq	r4, r9, r2, asr #2
    1d78:	27c10300 	strbcs	r0, [r1, r0, lsl #6]
    1d7c:	00000041 	andeq	r0, r0, r1, asr #32
    1d80:	66756241 	ldrbtvs	r6, [r5], -r1, asr #4
    1d84:	38c10300 	stmiacc	r1, {r8, r9}^
    1d88:	00000a10 	andeq	r0, r0, r0, lsl sl
    1d8c:	05aa4000 	streq	r4, [sl, #0]!
    1d90:	b4030000 	strlt	r0, [r3], #-0
    1d94:	bd030114 	stflts	f0, [r3, #-80]	; 0xffffffb0
    1d98:	42000012 	andmi	r0, r0, #18
    1d9c:	00000941 	andeq	r0, r0, r1, asr #18
    1da0:	4129b403 			; <UNDEFINED> instruction: 0x4129b403
    1da4:	41000000 	mrsmi	r0, (UNDEF: 0)
    1da8:	00667562 	rsbeq	r7, r6, r2, ror #10
    1dac:	de40b403 	cdple	4, 4, cr11, cr0, cr3, {0}
    1db0:	4200000a 	andmi	r0, r0, #10
    1db4:	000013af 	andeq	r1, r0, pc, lsr #7
    1db8:	5e4eb403 	cdppl	4, 4, cr11, cr14, cr3, {0}
    1dbc:	00000000 	andeq	r0, r0, r0
    1dc0:	0005d44c 	andeq	sp, r5, ip, asr #8
    1dc4:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    1dc8:	da030116 	ble	c2228 <_Min_Stack_Size+0xc1e28>
    1dcc:	4d000012 	stcmi	0, cr0, [r0, #-72]	; 0xffffffb8
    1dd0:	0000074a 	andeq	r0, r0, sl, asr #14
    1dd4:	2f05de02 	svccs	0x0005de02
    1dd8:	000002a3 	andeq	r0, r0, r3, lsr #5
    1ddc:	12554e00 	subsne	r4, r5, #0, 28
    1de0:	03a60000 			; <UNDEFINED> instruction: 0x03a60000
    1de4:	03a80800 			; <UNDEFINED> instruction: 0x03a80800
    1de8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1dec:	014f0100 	mrseq	r0, (UNDEF: 95)
    1df0:	00061101 	andeq	r1, r6, r1, lsl #2
    1df4:	00061100 	andeq	r1, r6, r0, lsl #2
    1df8:	063d0300 	ldrteq	r0, [sp], -r0, lsl #6
    1dfc:	00218e00 	eoreq	r8, r1, r0, lsl #28
    1e00:	cf000200 	svcgt	0x00000200
    1e04:	04000007 	streq	r0, [r0], #-7
    1e08:	00035501 	andeq	r5, r3, r1, lsl #10
    1e0c:	0b630c00 	bleq	18c4e14 <_Min_Stack_Size+0x18c4a14>
    1e10:	00ca0000 	sbceq	r0, sl, r0
    1e14:	0a100000 	beq	401e1c <_Min_Stack_Size+0x401a1c>
    1e18:	0eb20800 	cdpeq	8, 11, cr0, cr2, cr0, {0}
    1e1c:	0d920800 	ldceq	8, cr0, [r2]
    1e20:	01020000 	mrseq	r0, (UNDEF: 2)
    1e24:	00029806 	andeq	r9, r2, r6, lsl #16
    1e28:	01450300 	mrseq	r0, (UNDEF: 117)
    1e2c:	25070000 	strcs	r0, [r7, #-0]
    1e30:	00003d18 	andeq	r3, r0, r8, lsl sp
    1e34:	002c0400 	eoreq	r0, ip, r0, lsl #8
    1e38:	02020000 	andeq	r0, r2, #0
    1e3c:	0002b105 	andeq	fp, r2, r5, lsl #2
    1e40:	02f90300 	rscseq	r0, r9, #0, 6
    1e44:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    1e48:	00005018 	andeq	r5, r0, r8, lsl r0
    1e4c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1e50:	00000093 	muleq	r0, r3, r0
    1e54:	8e050802 	cdphi	8, 0, cr0, cr5, cr2, {0}
    1e58:	03000000 	movweq	r0, #0
    1e5c:	00000730 	andeq	r0, r0, r0, lsr r7
    1e60:	74182e07 	ldrvc	r2, [r8], #-3591	; 0xfffff1f9
    1e64:	04000000 	streq	r0, [r0], #-0
    1e68:	0000005e 	andeq	r0, r0, lr, asr r0
    1e6c:	00005e05 	andeq	r5, r0, r5, lsl #28
    1e70:	08010200 	stmdaeq	r1, {r9}
    1e74:	00000296 	muleq	r0, r6, r2
    1e78:	00014403 	andeq	r4, r1, r3, lsl #8
    1e7c:	19310700 	ldmdbne	r1!, {r8, r9, sl}
    1e80:	00000091 	muleq	r0, r1, r0
    1e84:	00007b04 	andeq	r7, r0, r4, lsl #22
    1e88:	007b0500 	rsbseq	r0, fp, r0, lsl #10
    1e8c:	02020000 	andeq	r0, r2, #0
    1e90:	0001be07 	andeq	fp, r1, r7, lsl #28
    1e94:	02f80300 	rscseq	r0, r8, #0, 6
    1e98:	34070000 	strcc	r0, [r7], #-0
    1e9c:	0000a919 	andeq	sl, r0, r9, lsl r9
    1ea0:	00980400 	addseq	r0, r8, r0, lsl #8
    1ea4:	04020000 	streq	r0, [r2], #-0
    1ea8:	00005e07 	andeq	r5, r0, r7, lsl #28
    1eac:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1eb0:	00000059 	andeq	r0, r0, r9, asr r0
    1eb4:	69050406 	stmdbvs	r5, {r1, r2, sl}
    1eb8:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    1ebc:	000000b7 	strheq	r0, [r0], -r7
    1ec0:	63070402 	movwvs	r0, #29698	; 0x7402
    1ec4:	07000000 	streq	r0, [r0, -r0]
    1ec8:	091e0208 	ldmdbeq	lr, {r3, r9}
    1ecc:	0000011f 	andeq	r0, r0, pc, lsl r1
    1ed0:	0004ad08 	andeq	sl, r4, r8, lsl #26
    1ed4:	0b1f0200 	bleq	7c26dc <_Min_Stack_Size+0x7c22dc>
    1ed8:	0000005e 	andeq	r0, r0, lr, asr r0
    1edc:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1ee0:	000008fc 	strdeq	r0, [r0], -ip
    1ee4:	5e0b2002 	cdppl	0, 0, cr2, cr11, cr2, {0}
    1ee8:	02000000 	andeq	r0, r0, #0
    1eec:	2a080123 	bcs	202380 <_Min_Stack_Size+0x201f80>
    1ef0:	02000005 	andeq	r0, r0, #5
    1ef4:	007b0c21 	rsbseq	r0, fp, r1, lsr #24
    1ef8:	23020000 	movwcs	r0, #8192	; 0x2000
    1efc:	04350802 	ldrteq	r0, [r5], #-2050	; 0xfffff7fe
    1f00:	22020000 	andcs	r0, r2, #0
    1f04:	00007b0c 	andeq	r7, r0, ip, lsl #22
    1f08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1f0c:	0008df08 	andeq	sp, r8, r8, lsl #30
    1f10:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1f14:	0000007b 	andeq	r0, r0, fp, ror r0
    1f18:	00062302 	andeq	r2, r6, r2, lsl #6
    1f1c:	00096803 	andeq	r6, r9, r3, lsl #16
    1f20:	02240200 	eoreq	r0, r4, #0, 4
    1f24:	000000ca 	andeq	r0, r0, sl, asr #1
    1f28:	25010509 	strcs	r0, [r1, #-1289]	; 0xfffffaf7
    1f2c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1f30:	02a20158 	adceq	r0, r2, #88, 2
    1f34:	cb0a0000 	blgt	281f3c <_Min_Stack_Size+0x281b3c>
    1f38:	72000008 	andvc	r0, r0, #8
    1f3c:	0005310a 	andeq	r3, r5, sl, lsl #2
    1f40:	730a7400 	movwvc	r7, #41984	; 0xa400
    1f44:	75000007 	strvc	r0, [r0, #-7]
    1f48:	0009ae0a 	andeq	sl, r9, sl, lsl #28
    1f4c:	7b0a7600 	blvc	29f754 <_Min_Stack_Size+0x29f354>
    1f50:	7b000004 	blvc	1f68 <_Min_Stack_Size+0x1b68>
    1f54:	00099c0a 	andeq	r9, r9, sl, lsl #24
    1f58:	000a7c00 	andeq	r7, sl, r0, lsl #24
    1f5c:	7e000005 	cdpvc	0, 0, cr0, cr0, cr5, {0}
    1f60:	0009340a 	andeq	r3, r9, sl, lsl #8
    1f64:	4f0b7f00 	svcmi	0x000b7f00
    1f68:	00000007 	andeq	r0, r0, r7
    1f6c:	00078c0b 	andeq	r8, r7, fp, lsl #24
    1f70:	560b0100 	strpl	r0, [fp], -r0, lsl #2
    1f74:	02000005 	andeq	r0, r0, #5
    1f78:	00065b0b 	andeq	r5, r6, fp, lsl #22
    1f7c:	c80b0300 	stmdagt	fp, {r8, r9}
    1f80:	04000004 	streq	r0, [r0], #-4
    1f84:	0005210b 	andeq	r2, r5, fp, lsl #2
    1f88:	dd0b0500 	cfstr32le	mvfx0, [fp, #-0]
    1f8c:	06000004 	streq	r0, [r0], -r4
    1f90:	0008f10b 	andeq	pc, r8, fp, lsl #2
    1f94:	850b0700 	strhi	r0, [fp, #-1792]	; 0xfffff900
    1f98:	08000006 	stmdaeq	r0, {r1, r2}
    1f9c:	000a430b 	andeq	r4, sl, fp, lsl #6
    1fa0:	810b0900 	tsthi	fp, r0, lsl #18
    1fa4:	0a000007 	beq	1fc8 <_Min_Stack_Size+0x1bc8>
    1fa8:	00070e0b 	andeq	r0, r7, fp, lsl #28
    1fac:	8e0b0b00 	vmlahi.f64	d0, d11, d0
    1fb0:	0c000004 	stceq	0, cr0, [r0], {4}
    1fb4:	0007cd0b 	andeq	ip, r7, fp, lsl #26
    1fb8:	c10b0d00 	tstgt	fp, r0, lsl #26
    1fbc:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    1fc0:	000a180b 	andeq	r1, sl, fp, lsl #16
    1fc4:	d10b0f00 	tstle	fp, r0, lsl #30
    1fc8:	10000006 	andne	r0, r0, r6
    1fcc:	00045b0b 	andeq	r5, r4, fp, lsl #22
    1fd0:	900b1100 	andls	r1, fp, r0, lsl #2
    1fd4:	12000006 	andne	r0, r0, #6
    1fd8:	0009900b 	andeq	r9, r9, fp
    1fdc:	a40b1300 	strge	r1, [fp], #-768	; 0xfffffd00
    1fe0:	1400000a 	strne	r0, [r0], #-10
    1fe4:	000a320b 	andeq	r3, sl, fp, lsl #4
    1fe8:	e30b1500 	movw	r1, #46336	; 0xb500
    1fec:	16000005 	strne	r0, [r0], -r5
    1ff0:	0009e80b 	andeq	lr, r9, fp, lsl #16
    1ff4:	510b1700 	tstpl	fp, r0, lsl #14
    1ff8:	19000004 	stmdbne	r0, {r2}
    1ffc:	0007440b 	andeq	r4, r7, fp, lsl #8
    2000:	2a0b1a00 	bcs	2c8808 <_Min_Stack_Size+0x2c8408>
    2004:	1b000004 	blne	201c <_Min_Stack_Size+0x1c1c>
    2008:	0009470b 	andeq	r4, r9, fp, lsl #14
    200c:	040b1c00 	streq	r1, [fp], #-3072	; 0xfffff400
    2010:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    2014:	0004840b 	andeq	r8, r4, fp, lsl #8
    2018:	ee0b1e00 	cdp	14, 0, cr1, cr11, cr0, {0}
    201c:	1f000007 	svcne	0x00000007
    2020:	0009270b 	andeq	r2, r9, fp, lsl #14
    2024:	9a0b2000 	bls	2ca02c <_Min_Stack_Size+0x2c9c2c>
    2028:	21000006 	tstcs	r0, r6
    202c:	00046e0b 	andeq	r6, r4, fp, lsl #28
    2030:	9f0b2200 	svcls	0x000b2200
    2034:	23000005 	movwcs	r0, #5
    2038:	0009ff0b 	andeq	pc, r9, fp, lsl #30
    203c:	b30b2400 	movwlt	r2, #46080	; 0xb400
    2040:	25000008 	strcs	r0, [r0, #-8]
    2044:	00063c0b 	andeq	r3, r6, fp, lsl #24
    2048:	8e0b2600 	cfmadd32hi	mvax0, mvfx2, mvfx11, mvfx0
    204c:	2700000a 	strcs	r0, [r0, -sl]
    2050:	0004e80b 	andeq	lr, r4, fp, lsl #16
    2054:	2c0b2800 	stccs	8, cr2, [fp], {-0}
    2058:	29000008 	stmdbcs	r0, {r3}
    205c:	00088e0b 	andeq	r8, r8, fp, lsl #28
    2060:	b70b2a00 	strlt	r2, [fp, -r0, lsl #20]
    2064:	2b000005 	blcs	2080 <_Min_Stack_Size+0x1c80>
    2068:	000a0e0b 	andeq	r0, sl, fp, lsl #28
    206c:	c30b2c00 	movwgt	r2, #48128	; 0xbc00
    2070:	2e000007 	cdpcs	0, 0, cr0, cr0, cr7, {0}
    2074:	0006ac0b 	andeq	sl, r6, fp, lsl #24
    2078:	e40b2f00 	str	r2, [fp], #-3840	; 0xfffff100
    207c:	32000006 	andcc	r0, r0, #6
    2080:	000a7b0b 	andeq	r7, sl, fp, lsl #22
    2084:	b00b3300 	andlt	r3, fp, r0, lsl #6
    2088:	34000007 	strcc	r0, [r0], #-7
    208c:	0005830b 	andeq	r8, r5, fp, lsl #6
    2090:	140b3500 	strne	r3, [fp], #-1280	; 0xfffffb00
    2094:	36000009 	strcc	r0, [r0], -r9
    2098:	0006c30b 	andeq	ip, r6, fp, lsl #6
    209c:	03003800 	movweq	r3, #2048	; 0x800
    20a0:	00000629 	andeq	r0, r0, r9, lsr #12
    20a4:	2b039808 	blcs	e80cc <_Min_Stack_Size+0xe7ccc>
    20a8:	0c000001 	stceq	0, cr0, [r0], {1}
    20ac:	84060e04 	strhi	r0, [r6], #-3588	; 0xfffff1fc
    20b0:	00038609 	andeq	r8, r3, r9, lsl #12
    20b4:	05680800 	strbeq	r0, [r8, #-2048]!	; 0xfffff800
    20b8:	86060000 	strhi	r0, [r6], -r0
    20bc:	00039611 	andeq	r9, r3, r1, lsl r6
    20c0:	00230200 	eoreq	r0, r3, r0, lsl #4
    20c4:	00084808 	andeq	r4, r8, r8, lsl #16
    20c8:	11870600 	orrne	r0, r7, r0, lsl #12
    20cc:	0000039b 	muleq	r0, fp, r3
    20d0:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    20d4:	000009fa 	strdeq	r0, [r0], -sl
    20d8:	96118806 	ldrls	r8, [r1], -r6, lsl #16
    20dc:	03000003 	movweq	r0, #3
    20e0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    20e4:	00000596 	muleq	r0, r6, r5
    20e8:	9b118906 	blls	464508 <_Min_Stack_Size+0x464108>
    20ec:	03000003 	movweq	r0, #3
    20f0:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    20f4:	00000a61 	andeq	r0, r0, r1, ror #20
    20f8:	96118a06 	ldrls	r8, [r1], -r6, lsl #20
    20fc:	03000003 	movweq	r0, #3
    2100:	08028023 	stmdaeq	r2, {r0, r1, r5, pc}
    2104:	0000085c 	andeq	r0, r0, ip, asr r8
    2108:	9b118b06 	blls	464d28 <_Min_Stack_Size+0x464928>
    210c:	03000003 	movweq	r0, #3
    2110:	0802a023 	stmdaeq	r2, {r0, r1, r5, sp, pc}
    2114:	000007ab 	andeq	r0, r0, fp, lsr #15
    2118:	96118c06 	ldrls	r8, [r1], -r6, lsl #24
    211c:	03000003 	movweq	r0, #3
    2120:	08038023 	stmdaeq	r3, {r0, r1, r5, pc}
    2124:	00000866 	andeq	r0, r0, r6, ror #16
    2128:	9b118d06 	blls	465548 <_Min_Stack_Size+0x465148>
    212c:	03000003 	movweq	r0, #3
    2130:	0803a023 	stmdaeq	r3, {r0, r1, r5, sp, pc}
    2134:	00000a09 	andeq	r0, r0, r9, lsl #20
    2138:	96118e06 	ldrls	r8, [r1], -r6, lsl #28
    213c:	03000003 	movweq	r0, #3
    2140:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
    2144:	00000870 	andeq	r0, r0, r0, ror r8
    2148:	ab118f06 	blge	465d68 <_Min_Stack_Size+0x465968>
    214c:	03000003 	movweq	r0, #3
    2150:	0d04a023 	stceq	0, cr10, [r4, #-140]	; 0xffffff74
    2154:	06005049 	streq	r5, [r0], -r9, asr #32
    2158:	03cb1190 	biceq	r1, fp, #144, 2	; 0x24
    215c:	23030000 	movwcs	r0, #12288	; 0x3000
    2160:	7a080680 	bvc	203b68 <_Min_Stack_Size+0x203768>
    2164:	06000008 	streq	r0, [r0], -r8
    2168:	03d01191 	bicseq	r1, r0, #1073741860	; 0x40000024
    216c:	23030000 	movwcs	r0, #12288	; 0x3000
    2170:	270807f0 			; <UNDEFINED> instruction: 0x270807f0
    2174:	06000008 	streq	r0, [r0], -r8
    2178:	00a41192 	umlaleq	r1, r4, r2, r1
    217c:	23030000 	movwcs	r0, #12288	; 0x3000
    2180:	0e001c80 	cdpeq	12, 0, cr1, cr0, cr0, {4}
    2184:	000000a4 	andeq	r0, r0, r4, lsr #1
    2188:	00000396 	muleq	r0, r6, r3
    218c:	0000c30f 	andeq	ip, r0, pc, lsl #6
    2190:	04000700 	streq	r0, [r0], #-1792	; 0xfffff900
    2194:	00000386 	andeq	r0, r0, r6, lsl #7
    2198:	0000980e 	andeq	r9, r0, lr, lsl #16
    219c:	0003ab00 	andeq	sl, r3, r0, lsl #22
    21a0:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    21a4:	00170000 	andseq	r0, r7, r0
    21a8:	0000980e 	andeq	r9, r0, lr, lsl #16
    21ac:	0003bb00 	andeq	fp, r3, r0, lsl #22
    21b0:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    21b4:	00370000 	eorseq	r0, r7, r0
    21b8:	00006a0e 	andeq	r6, r0, lr, lsl #20
    21bc:	0003cb00 	andeq	ip, r3, r0, lsl #22
    21c0:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    21c4:	00ef0000 	rsceq	r0, pc, r0
    21c8:	0003bb04 	andeq	fp, r3, r4, lsl #22
    21cc:	00980e00 	addseq	r0, r8, r0, lsl #28
    21d0:	03e10000 	mvneq	r0, #0
    21d4:	c3100000 	tstgt	r0, #0
    21d8:	83000000 	movwhi	r0, #0
    21dc:	05030002 	streq	r0, [r3, #-2]
    21e0:	06000009 	streq	r0, [r0], -r9
    21e4:	02ae0493 	adceq	r0, lr, #-1828716544	; 0x93000000
    21e8:	a4110000 	ldrge	r0, [r1], #-0
    21ec:	06000002 	streq	r0, [r0], -r2
    21f0:	be1506ce 	cfmsub32lt	mvax6, mvfx0, mvfx5, mvfx14
    21f4:	01000000 	mrseq	r0, (UNDEF: 0)
    21f8:	017a1201 	cmneq	sl, r1, lsl #4
    21fc:	4c090000 	stcmi	0, cr0, [r9], {-0}
    2200:	00009811 	andeq	r9, r0, r1, lsl r8
    2204:	07010100 	streq	r0, [r1, -r0, lsl #2]
    2208:	09aa0860 	stmibeq	sl!, {r5, r6, fp}
    220c:	0000057a 	andeq	r0, r0, sl, ror r5
    2210:	0052530d 	subseq	r5, r2, sp, lsl #6
    2214:	a411ac08 	ldrge	sl, [r1], #-3080	; 0xfffff3f8
    2218:	02000000 	andeq	r0, r0, #0
    221c:	430d0023 	movwmi	r0, #53283	; 0xd023
    2220:	08003152 	stmdaeq	r0, {r1, r4, r6, r8, ip, sp}
    2224:	00a411ad 	adceq	r1, r4, sp, lsr #3
    2228:	23020000 	movwcs	r0, #8192	; 0x2000
    222c:	52430d04 	subpl	r0, r3, #4, 26	; 0x100
    2230:	ae080032 	mcrge	0, 0, r0, cr8, cr2, {1}
    2234:	0000a411 	andeq	sl, r0, r1, lsl r4
    2238:	08230200 	stmdaeq	r3!, {r9}
    223c:	000edc08 	andeq	sp, lr, r8, lsl #24
    2240:	11af0800 			; <UNDEFINED> instruction: 0x11af0800
    2244:	000000a4 	andeq	r0, r0, r4, lsr #1
    2248:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    224c:	00000ee2 	andeq	r0, r0, r2, ror #29
    2250:	a411b008 	ldrge	fp, [r1], #-8
    2254:	02000000 	andeq	r0, r0, #0
    2258:	39081023 	stmdbcc	r8, {r0, r1, r5, ip}
    225c:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2260:	00a411b1 	strhteq	r1, [r4], r1
    2264:	23020000 	movwcs	r0, #8192	; 0x2000
    2268:	11880814 	orrne	r0, r8, r4, lsl r8
    226c:	b2080000 	andlt	r0, r8, #0
    2270:	0000a411 	andeq	sl, r0, r1, lsl r4
    2274:	18230200 	stmdane	r3!, {r9}
    2278:	00118e08 	andseq	r8, r1, r8, lsl #28
    227c:	11b30800 			; <UNDEFINED> instruction: 0x11b30800
    2280:	000000a4 	andeq	r0, r0, r4, lsr #1
    2284:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    2288:	00001194 	muleq	r0, r4, r1
    228c:	a411b408 	ldrge	fp, [r1], #-1032	; 0xfffffbf8
    2290:	02000000 	andeq	r0, r0, #0
    2294:	9a082023 	bls	20a328 <_Min_Stack_Size+0x209f28>
    2298:	08000011 	stmdaeq	r0, {r0, r4}
    229c:	00a411b5 	strhteq	r1, [r4], r5
    22a0:	23020000 	movwcs	r0, #8192	; 0x2000
    22a4:	54480d24 	strbpl	r0, [r8], #-3364	; 0xfffff2dc
    22a8:	b6080052 			; <UNDEFINED> instruction: 0xb6080052
    22ac:	0000a411 	andeq	sl, r0, r1, lsl r4
    22b0:	28230200 	stmdacs	r3!, {r9}
    22b4:	52544c0d 	subspl	r4, r4, #3328	; 0xd00
    22b8:	11b70800 			; <UNDEFINED> instruction: 0x11b70800
    22bc:	000000a4 	andeq	r0, r0, r4, lsr #1
    22c0:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    22c4:	00000ac4 	andeq	r0, r0, r4, asr #21
    22c8:	a411b808 	ldrge	fp, [r1], #-2056	; 0xfffff7f8
    22cc:	02000000 	andeq	r0, r0, #0
    22d0:	c9083023 	stmdbgt	r8, {r0, r1, r5, ip, sp}
    22d4:	0800000a 	stmdaeq	r0, {r1, r3}
    22d8:	00a411b9 	strhteq	r1, [r4], r9
    22dc:	23020000 	movwcs	r0, #8192	; 0x2000
    22e0:	0ace0834 	beq	ff3843b8 <BootRAM+0xe2f4b59>
    22e4:	ba080000 	blt	2022ec <_Min_Stack_Size+0x201eec>
    22e8:	0000a411 	andeq	sl, r0, r1, lsl r4
    22ec:	38230200 	stmdacc	r3!, {r9}
    22f0:	000ad308 	andeq	sp, sl, r8, lsl #6
    22f4:	11bb0800 			; <UNDEFINED> instruction: 0x11bb0800
    22f8:	000000a4 	andeq	r0, r0, r4, lsr #1
    22fc:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    2300:	00000ad8 	ldrdeq	r0, [r0], -r8
    2304:	a411bc08 	ldrge	fp, [r1], #-3080	; 0xfffff3f8
    2308:	02000000 	andeq	r0, r0, #0
    230c:	af084023 	svcge	0x00084023
    2310:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    2314:	00a411bd 	strhteq	r1, [r4], sp
    2318:	23020000 	movwcs	r0, #8192	; 0x2000
    231c:	0f340844 	svceq	0x00340844
    2320:	be080000 	cdplt	0, 0, cr0, cr8, cr0, {0}
    2324:	0000a411 	andeq	sl, r0, r1, lsl r4
    2328:	48230200 	stmdami	r3!, {r9}
    232c:	000f3908 	andeq	r3, pc, r8, lsl #18
    2330:	11bf0800 			; <UNDEFINED> instruction: 0x11bf0800
    2334:	000000a4 	andeq	r0, r0, r4, lsr #1
    2338:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
    233c:	00000f3e 	andeq	r0, r0, lr, lsr pc
    2340:	a411c008 	ldrge	ip, [r1], #-8
    2344:	02000000 	andeq	r0, r0, #0
    2348:	43085023 	movwmi	r5, #32803	; 0x8023
    234c:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    2350:	00a411c1 	adceq	r1, r4, r1, asr #3
    2354:	23020000 	movwcs	r0, #8192	; 0x2000
    2358:	52440d54 	subpl	r0, r4, #84, 26	; 0x1500
    235c:	11c20800 	bicne	r0, r2, r0, lsl #16
    2360:	000000a4 	andeq	r0, r0, r4, lsr #1
    2364:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    2368:	000002c1 	andeq	r0, r0, r1, asr #5
    236c:	980cc308 	stmdals	ip, {r3, r8, r9, lr, pc}
    2370:	02000000 	andeq	r0, r0, #0
    2374:	03005c23 	movweq	r5, #3107	; 0xc23
    2378:	00000df8 	strdeq	r0, [r0], -r8
    237c:	0a03c408 	beq	f33a4 <_Min_Stack_Size+0xf2fa4>
    2380:	07000004 	streq	r0, [r0, -r4]
    2384:	09c60808 	stmibeq	r6, {r3, fp}^
    2388:	000005ae 	andeq	r0, r0, lr, lsr #11
    238c:	5253430d 	subspl	r4, r3, #872415232	; 0x34000000
    2390:	11c80800 	bicne	r0, r8, r0, lsl #16
    2394:	000000a4 	andeq	r0, r0, r4, lsr #1
    2398:	0d002302 	stceq	3, cr2, [r0, #-8]
    239c:	00524343 	subseq	r4, r2, r3, asr #6
    23a0:	a411c908 	ldrge	ip, [r1], #-2312	; 0xfffff6f8
    23a4:	02000000 	andeq	r0, r0, #0
    23a8:	03000423 	movweq	r0, #1059	; 0x423
    23ac:	00000eb4 			; <UNDEFINED> instruction: 0x00000eb4
    23b0:	8603ca08 	strhi	ip, [r3], -r8, lsl #20
    23b4:	13000005 	movwne	r0, #5
    23b8:	014f082c 	cmpeq	pc, ip, lsr #16
    23bc:	00066509 	andeq	r6, r6, r9, lsl #10
    23c0:	00531400 	subseq	r1, r3, r0, lsl #8
    23c4:	51080000 	mrspl	r0, (UNDEF: 8)
    23c8:	00a41101 	adceq	r1, r4, r1, lsl #2
    23cc:	23020000 	movwcs	r0, #8192	; 0x2000
    23d0:	00291400 	eoreq	r1, r9, r0, lsl #8
    23d4:	52080000 	andpl	r0, r8, #0
    23d8:	00a41101 	adceq	r1, r4, r1, lsl #2
    23dc:	23020000 	movwcs	r0, #8192	; 0x2000
    23e0:	015b1404 	cmpeq	fp, r4, lsl #8
    23e4:	53080000 	movwpl	r0, #32768	; 0x8000
    23e8:	00a41101 	adceq	r1, r4, r1, lsl #2
    23ec:	23020000 	movwcs	r0, #8192	; 0x2000
    23f0:	00071408 	andeq	r1, r7, r8, lsl #8
    23f4:	54080000 	strpl	r0, [r8], #-0
    23f8:	00a41101 	adceq	r1, r4, r1, lsl #2
    23fc:	23020000 	movwcs	r0, #8192	; 0x2000
    2400:	4449150c 	strbmi	r1, [r9], #-1292	; 0xfffffaf4
    2404:	55080052 	strpl	r0, [r8, #-82]	; 0xffffffae
    2408:	00a41101 	adceq	r1, r4, r1, lsl #2
    240c:	23020000 	movwcs	r0, #8192	; 0x2000
    2410:	444f1510 	strbmi	r1, [pc], #-1296	; 2418 <_Min_Stack_Size+0x2018>
    2414:	56080052 			; <UNDEFINED> instruction: 0x56080052
    2418:	00a41101 	adceq	r1, r4, r1, lsl #2
    241c:	23020000 	movwcs	r0, #8192	; 0x2000
    2420:	009c1414 	addseq	r1, ip, r4, lsl r4
    2424:	57080000 	strpl	r0, [r8, -r0]
    2428:	00a41101 	adceq	r1, r4, r1, lsl #2
    242c:	23020000 	movwcs	r0, #8192	; 0x2000
    2430:	000d1418 	andeq	r1, sp, r8, lsl r4
    2434:	58080000 	stmdapl	r8, {}	; <UNPREDICTABLE>
    2438:	00a41101 	adceq	r1, r4, r1, lsl #2
    243c:	23020000 	movwcs	r0, #8192	; 0x2000
    2440:	4641151c 			; <UNDEFINED> instruction: 0x4641151c
    2444:	59080052 	stmdbpl	r8, {r1, r4, r6}
    2448:	06751101 	ldrbteq	r1, [r5], -r1, lsl #2
    244c:	23020000 	movwcs	r0, #8192	; 0x2000
    2450:	52421520 	subpl	r1, r2, #32, 10	; 0x8000000
    2454:	5a080052 	bpl	2025a4 <_Min_Stack_Size+0x2021a4>
    2458:	00a41101 	adceq	r1, r4, r1, lsl #2
    245c:	23020000 	movwcs	r0, #8192	; 0x2000
    2460:	a40e0028 	strge	r0, [lr], #-40	; 0xffffffd8
    2464:	75000000 	strvc	r0, [r0, #-0]
    2468:	0f000006 	svceq	0x00000006
    246c:	000000c3 	andeq	r0, r0, r3, asr #1
    2470:	65040001 	strvs	r0, [r4, #-1]
    2474:	16000006 	strne	r0, [r0], -r6
    2478:	00000197 	muleq	r0, r7, r1
    247c:	03015b08 	movweq	r5, #6920	; 0x1b08
    2480:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    2484:	93083813 	movwls	r3, #34835	; 0x8813
    2488:	07710901 	ldrbeq	r0, [r1, -r1, lsl #18]!
    248c:	43150000 	tstmi	r5, #0
    2490:	95080052 	strls	r0, [r8, #-82]	; 0xffffffae
    2494:	00a41101 	adceq	r1, r4, r1, lsl #2
    2498:	23020000 	movwcs	r0, #8192	; 0x2000
    249c:	03291400 			; <UNDEFINED> instruction: 0x03291400
    24a0:	96080000 	strls	r0, [r8], -r0
    24a4:	00a41101 	adceq	r1, r4, r1, lsl #2
    24a8:	23020000 	movwcs	r0, #8192	; 0x2000
    24ac:	02ed1404 	rsceq	r1, sp, #4, 8	; 0x4000000
    24b0:	97080000 	strls	r0, [r8, -r0]
    24b4:	00a41101 	adceq	r1, r4, r1, lsl #2
    24b8:	23020000 	movwcs	r0, #8192	; 0x2000
    24bc:	49431508 	stmdbmi	r3, {r3, r8, sl, ip}^
    24c0:	98080052 	stmdals	r8, {r1, r4, r6}
    24c4:	00a41101 	adceq	r1, r4, r1, lsl #2
    24c8:	23020000 	movwcs	r0, #8192	; 0x2000
    24cc:	0243140c 	subeq	r1, r3, #12, 8	; 0xc000000
    24d0:	99080000 	stmdbls	r8, {}	; <UNPREDICTABLE>
    24d4:	00a41101 	adceq	r1, r4, r1, lsl #2
    24d8:	23020000 	movwcs	r0, #8192	; 0x2000
    24dc:	01051410 	tsteq	r5, r0, lsl r4
    24e0:	9a080000 	bls	2024e8 <_Min_Stack_Size+0x2020e8>
    24e4:	00a41101 	adceq	r1, r4, r1, lsl #2
    24e8:	23020000 	movwcs	r0, #8192	; 0x2000
    24ec:	02501414 	subseq	r1, r0, #20, 8	; 0x14000000
    24f0:	9b080000 	blls	2024f8 <_Min_Stack_Size+0x2020f8>
    24f4:	00a41101 	adceq	r1, r4, r1, lsl #2
    24f8:	23020000 	movwcs	r0, #8192	; 0x2000
    24fc:	03e81418 	mvneq	r1, #24, 8	; 0x18000000
    2500:	9c080000 	stcls	0, cr0, [r8], {-0}
    2504:	00a41101 	adceq	r1, r4, r1, lsl #2
    2508:	23020000 	movwcs	r0, #8192	; 0x2000
    250c:	02d1141c 	sbcseq	r1, r1, #28, 8	; 0x1c000000
    2510:	9d080000 	stcls	0, cr0, [r8, #-0]
    2514:	00a41101 	adceq	r1, r4, r1, lsl #2
    2518:	23020000 	movwcs	r0, #8192	; 0x2000
    251c:	03131420 	tsteq	r3, #32, 8	; 0x20000000
    2520:	9e080000 	cdpls	0, 0, cr0, cr8, cr0, {0}
    2524:	00a41101 	adceq	r1, r4, r1, lsl #2
    2528:	23020000 	movwcs	r0, #8192	; 0x2000
    252c:	011d1424 	tsteq	sp, r4, lsr #8
    2530:	9f080000 	svcls	0x00080000
    2534:	00a41101 	adceq	r1, r4, r1, lsl #2
    2538:	23020000 	movwcs	r0, #8192	; 0x2000
    253c:	01fa1428 	mvnseq	r1, r8, lsr #8
    2540:	a0080000 	andge	r0, r8, r0
    2544:	00a41101 	adceq	r1, r4, r1, lsl #2
    2548:	23020000 	movwcs	r0, #8192	; 0x2000
    254c:	01d7142c 	bicseq	r1, r7, ip, lsr #8
    2550:	a1080000 	mrsge	r0, (UNDEF: 8)
    2554:	00a41101 	adceq	r1, r4, r1, lsl #2
    2558:	23020000 	movwcs	r0, #8192	; 0x2000
    255c:	53431530 	movtpl	r1, #13616	; 0x3530
    2560:	a2080052 	andge	r0, r8, #82	; 0x52
    2564:	00a41101 	adceq	r1, r4, r1, lsl #2
    2568:	23020000 	movwcs	r0, #8192	; 0x2000
    256c:	a4160034 	ldrge	r0, [r6], #-52	; 0xffffffcc
    2570:	08000001 	stmdaeq	r0, {r0}
    2574:	870301a3 	strhi	r0, [r3, -r3, lsr #3]
    2578:	13000006 	movwne	r0, #6
    257c:	020c0854 	andeq	r0, ip, #84, 16	; 0x540000
    2580:	0008d709 	andeq	sp, r8, r9, lsl #14
    2584:	52431500 	subpl	r1, r3, #0, 10
    2588:	0e080031 	mcreq	0, 0, r0, cr8, cr1, {1}
    258c:	00a41102 	adceq	r1, r4, r2, lsl #2
    2590:	23020000 	movwcs	r0, #8192	; 0x2000
    2594:	52431500 	subpl	r1, r3, #0, 10
    2598:	0f080032 	svceq	0x00080032
    259c:	00a41102 	adceq	r1, r4, r2, lsl #2
    25a0:	23020000 	movwcs	r0, #8192	; 0x2000
    25a4:	0f481404 	svceq	0x00481404
    25a8:	10080000 	andne	r0, r8, r0
    25ac:	00a41102 	adceq	r1, r4, r2, lsl #2
    25b0:	23020000 	movwcs	r0, #8192	; 0x2000
    25b4:	0d0a1408 	cfstrseq	mvf1, [sl, #-32]	; 0xffffffe0
    25b8:	11080000 	mrsne	r0, (UNDEF: 8)
    25bc:	00a41102 	adceq	r1, r4, r2, lsl #2
    25c0:	23020000 	movwcs	r0, #8192	; 0x2000
    25c4:	5253150c 	subspl	r1, r3, #12, 10	; 0x3000000
    25c8:	02120800 	andseq	r0, r2, #0, 16
    25cc:	0000a411 	andeq	sl, r0, r1, lsl r4
    25d0:	10230200 	eorne	r0, r3, r0, lsl #4
    25d4:	52474515 	subpl	r4, r7, #88080384	; 0x5400000
    25d8:	02130800 	andseq	r0, r3, #0, 16
    25dc:	0000a411 	andeq	sl, r0, r1, lsl r4
    25e0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    25e4:	000c3814 	andeq	r3, ip, r4, lsl r8
    25e8:	02140800 	andseq	r0, r4, #0, 16
    25ec:	0000a411 	andeq	sl, r0, r1, lsl r4
    25f0:	18230200 	stmdane	r3!, {r9}
    25f4:	000c3e14 	andeq	r3, ip, r4, lsl lr
    25f8:	02150800 	andseq	r0, r5, #0, 16
    25fc:	0000a411 	andeq	sl, r0, r1, lsl r4
    2600:	1c230200 	sfmne	f0, 4, [r3], #-0
    2604:	000bfc14 	andeq	pc, fp, r4, lsl ip	; <UNPREDICTABLE>
    2608:	02160800 	andseq	r0, r6, #0, 16
    260c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2610:	20230200 	eorcs	r0, r3, r0, lsl #4
    2614:	544e4315 	strbpl	r4, [lr], #-789	; 0xfffffceb
    2618:	02170800 	andseq	r0, r7, #0, 16
    261c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2620:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    2624:	43535015 	cmpmi	r3, #21
    2628:	02180800 	andseq	r0, r8, #0, 16
    262c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2630:	28230200 	stmdacs	r3!, {r9}
    2634:	52524115 	subspl	r4, r2, #1073741829	; 0x40000005
    2638:	02190800 	andseq	r0, r9, #0, 16
    263c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2640:	2c230200 	sfmcs	f0, 4, [r3], #-0
    2644:	0010c914 	andseq	ip, r0, r4, lsl r9
    2648:	021a0800 	andseq	r0, sl, #0, 16
    264c:	00009811 	andeq	r9, r0, r1, lsl r8
    2650:	30230200 	eorcc	r0, r3, r0, lsl #4
    2654:	000c2e14 	andeq	r2, ip, r4, lsl lr
    2658:	021b0800 	andseq	r0, fp, #0, 16
    265c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2660:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    2664:	000c3314 	andeq	r3, ip, r4, lsl r3
    2668:	021c0800 	andseq	r0, ip, #0, 16
    266c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2670:	38230200 	stmdacc	r3!, {r9}
    2674:	00107214 	andseq	r7, r0, r4, lsl r2
    2678:	021d0800 	andseq	r0, sp, #0, 16
    267c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2680:	3c230200 	sfmcc	f0, 4, [r3], #-0
    2684:	00107714 	andseq	r7, r0, r4, lsl r7
    2688:	021e0800 	andseq	r0, lr, #0, 16
    268c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2690:	40230200 	eormi	r0, r3, r0, lsl #4
    2694:	0010d414 	andseq	sp, r0, r4, lsl r4
    2698:	021f0800 	andseq	r0, pc, #0, 16
    269c:	00009811 	andeq	r9, r0, r1, lsl r8
    26a0:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    26a4:	52434415 	subpl	r4, r3, #352321536	; 0x15000000
    26a8:	02200800 	eoreq	r0, r0, #0, 16
    26ac:	0000a411 	andeq	sl, r0, r1, lsl r4
    26b0:	48230200 	stmdami	r3!, {r9}
    26b4:	000f5514 	andeq	r5, pc, r4, lsl r5	; <UNPREDICTABLE>
    26b8:	02210800 	eoreq	r0, r1, #0, 16
    26bc:	0000a411 	andeq	sl, r0, r1, lsl r4
    26c0:	4c230200 	sfmmi	f0, 4, [r3], #-0
    26c4:	00524f15 	subseq	r4, r2, r5, lsl pc
    26c8:	11022208 	tstne	r2, r8, lsl #4
    26cc:	000000a4 	andeq	r0, r0, r4, lsr #1
    26d0:	00502302 	subseq	r2, r0, r2, lsl #6
    26d4:	000be116 	andeq	lr, fp, r6, lsl r1
    26d8:	02230800 	eoreq	r0, r3, #0, 16
    26dc:	00077e03 	andeq	r7, r7, r3, lsl #28
    26e0:	08541300 	ldmdaeq	r4, {r8, r9, ip}^
    26e4:	8f090237 	svchi	0x00090237
    26e8:	1400000a 	strne	r0, [r0], #-10
    26ec:	00000656 	andeq	r0, r0, r6, asr r6
    26f0:	11023908 	tstne	r2, r8, lsl #18
    26f4:	00000087 	andeq	r0, r0, r7, lsl #1
    26f8:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    26fc:	00000848 	andeq	r0, r0, r8, asr #16
    2700:	11023a08 	tstne	r2, r8, lsl #20
    2704:	00000087 	andeq	r0, r0, r7, lsl #1
    2708:	14022302 	strne	r2, [r2], #-770	; 0xfffffcfe
    270c:	000006a7 	andeq	r0, r0, r7, lsr #13
    2710:	11023b08 	tstne	r2, r8, lsl #22
    2714:	00000087 	andeq	r0, r0, r7, lsl #1
    2718:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    271c:	00000852 	andeq	r0, r0, r2, asr r8
    2720:	11023c08 	tstne	r2, r8, lsl #24
    2724:	00000087 	andeq	r0, r0, r7, lsl #1
    2728:	14062302 	strne	r2, [r6], #-770	; 0xfffffcfe
    272c:	0000073f 	andeq	r0, r0, pc, lsr r7
    2730:	11023d08 	tstne	r2, r8, lsl #26
    2734:	00000087 	andeq	r0, r0, r7, lsl #1
    2738:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    273c:	0000085c 	andeq	r0, r0, ip, asr r8
    2740:	11023e08 	tstne	r2, r8, lsl #28
    2744:	00000087 	andeq	r0, r0, r7, lsl #1
    2748:	140a2302 	strne	r2, [sl], #-770	; 0xfffffcfe
    274c:	0000076e 	andeq	r0, r0, lr, ror #14
    2750:	11023f08 	tstne	r2, r8, lsl #30
    2754:	00000087 	andeq	r0, r0, r7, lsl #1
    2758:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    275c:	00000866 	andeq	r0, r0, r6, ror #16
    2760:	11024008 	tstne	r2, r8
    2764:	00000087 	andeq	r0, r0, r7, lsl #1
    2768:	140e2302 	strne	r2, [lr], #-770	; 0xfffffcfe
    276c:	000009f5 	strdeq	r0, [r0], -r5
    2770:	11024108 	tstne	r2, r8, lsl #2
    2774:	00000087 	andeq	r0, r0, r7, lsl #1
    2778:	14102302 	ldrne	r2, [r0], #-770	; 0xfffffcfe
    277c:	00000870 	andeq	r0, r0, r0, ror r8
    2780:	11024208 	tstne	r2, r8, lsl #4
    2784:	00000087 	andeq	r0, r0, r7, lsl #1
    2788:	14122302 	ldrne	r2, [r2], #-770	; 0xfffffcfe
    278c:	00000843 	andeq	r0, r0, r3, asr #16
    2790:	11024308 	tstne	r2, r8, lsl #6
    2794:	00000087 	andeq	r0, r0, r7, lsl #1
    2798:	14142302 	ldrne	r2, [r4], #-770	; 0xfffffcfe
    279c:	0000087a 	andeq	r0, r0, sl, ror r8
    27a0:	11024408 	tstne	r2, r8, lsl #8
    27a4:	00000087 	andeq	r0, r0, r7, lsl #1
    27a8:	14162302 	ldrne	r2, [r6], #-770	; 0xfffffcfe
    27ac:	000008e7 	andeq	r0, r0, r7, ror #17
    27b0:	11024508 	tstne	r2, r8, lsl #10
    27b4:	00000087 	andeq	r0, r0, r7, lsl #1
    27b8:	14182302 	ldrne	r2, [r8], #-770	; 0xfffffcfe
    27bc:	00000884 	andeq	r0, r0, r4, lsl #17
    27c0:	11024608 	tstne	r2, r8, lsl #12
    27c4:	00000087 	andeq	r0, r0, r7, lsl #1
    27c8:	141a2302 	ldrne	r2, [sl], #-770	; 0xfffffcfe
    27cc:	00000963 	andeq	r0, r0, r3, ror #18
    27d0:	11024708 	tstne	r2, r8, lsl #14
    27d4:	00000087 	andeq	r0, r0, r7, lsl #1
    27d8:	141c2302 	ldrne	r2, [ip], #-770	; 0xfffffcfe
    27dc:	0000027a 	andeq	r0, r0, sl, ror r2
    27e0:	11024808 	tstne	r2, r8, lsl #16
    27e4:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    27e8:	141e2302 	ldrne	r2, [lr], #-770	; 0xfffffcfe
    27ec:	0000090f 	andeq	r0, r0, pc, lsl #18
    27f0:	11024908 	tstne	r2, r8, lsl #18
    27f4:	00000087 	andeq	r0, r0, r7, lsl #1
    27f8:	14402302 	strbne	r2, [r0], #-770	; 0xfffffcfe
    27fc:	00000a9a 	muleq	r0, sl, sl
    2800:	11024a08 	tstne	r2, r8, lsl #20
    2804:	00000087 	andeq	r0, r0, r7, lsl #1
    2808:	14422302 	strbne	r2, [r2], #-770	; 0xfffffcfe
    280c:	00000551 	andeq	r0, r0, r1, asr r5
    2810:	11024b08 	tstne	r2, r8, lsl #22
    2814:	00000087 	andeq	r0, r0, r7, lsl #1
    2818:	14442302 	strbne	r2, [r4], #-770	; 0xfffffcfe
    281c:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    2820:	11024c08 	tstne	r2, r8, lsl #24
    2824:	00000087 	andeq	r0, r0, r7, lsl #1
    2828:	15462302 	strbne	r2, [r6, #-770]	; 0xfffffcfe
    282c:	00524e46 	subseq	r4, r2, r6, asr #28
    2830:	11024d08 	tstne	r2, r8, lsl #26
    2834:	00000087 	andeq	r0, r0, r7, lsl #1
    2838:	14482302 	strbne	r2, [r8], #-770	; 0xfffffcfe
    283c:	000008a9 	andeq	r0, r0, r9, lsr #17
    2840:	11024e08 	tstne	r2, r8, lsl #28
    2844:	00000087 	andeq	r0, r0, r7, lsl #1
    2848:	144a2302 	strbne	r2, [sl], #-770	; 0xfffffcfe
    284c:	000005f9 	strdeq	r0, [r0], -r9
    2850:	11024f08 	tstne	r2, r8, lsl #30
    2854:	00000087 	andeq	r0, r0, r7, lsl #1
    2858:	144c2302 	strbne	r2, [ip], #-770	; 0xfffffcfe
    285c:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    2860:	11025008 	tstne	r2, r8
    2864:	00000087 	andeq	r0, r0, r7, lsl #1
    2868:	144e2302 	strbne	r2, [lr], #-770	; 0xfffffcfe
    286c:	00000a2b 	andeq	r0, r0, fp, lsr #20
    2870:	11025108 	tstne	r2, r8, lsl #2
    2874:	00000087 	andeq	r0, r0, r7, lsl #1
    2878:	14502302 	ldrbne	r2, [r0], #-770	; 0xfffffcfe
    287c:	00000aba 			; <UNDEFINED> instruction: 0x00000aba
    2880:	11025208 	tstne	r2, r8, lsl #4
    2884:	00000087 	andeq	r0, r0, r7, lsl #1
    2888:	00522302 	subseq	r2, r2, r2, lsl #6
    288c:	0000870e 	andeq	r8, r0, lr, lsl #14
    2890:	000a9f00 	andeq	r9, sl, r0, lsl #30
    2894:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2898:	00100000 	andseq	r0, r0, r0
    289c:	000a8f04 	andeq	r8, sl, r4, lsl #30
    28a0:	05ed1600 	strbeq	r1, [sp, #1536]!	; 0x600
    28a4:	53080000 	movwpl	r0, #32768	; 0x8000
    28a8:	08e40302 	stmiaeq	r4!, {r1, r8, r9}^
    28ac:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    28b0:	000ef104 	andeq	pc, lr, r4, lsl #2
    28b4:	12261600 	eorne	r1, r6, #0, 12
    28b8:	650a0000 	strvs	r0, [sl, #-0]
    28bc:	00c31701 	sbceq	r1, r3, r1, lsl #14
    28c0:	3f030000 	svccc	0x00030000
    28c4:	0b00000b 	bleq	28f8 <_Min_Stack_Size+0x24f8>
    28c8:	00500e2e 	subseq	r0, r0, lr, lsr #28
    28cc:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    28d0:	0b00000b 	bleq	2904 <_Min_Stack_Size+0x2504>
    28d4:	00500e74 	subseq	r0, r0, r4, ror lr
    28d8:	04170000 	ldreq	r0, [r7], #-0
    28dc:	ff03a50b 			; <UNDEFINED> instruction: 0xff03a50b
    28e0:	1800000a 	stmdane	r0, {r1, r3}
    28e4:	00000da4 	andeq	r0, r0, r4, lsr #27
    28e8:	b80ca70b 	stmdalt	ip, {r0, r1, r3, r8, r9, sl, sp, pc}
    28ec:	1800000a 	stmdane	r0, {r1, r3}
    28f0:	00000f74 	andeq	r0, r0, r4, ror pc
    28f4:	ff13a80b 			; <UNDEFINED> instruction: 0xff13a80b
    28f8:	0000000a 	andeq	r0, r0, sl
    28fc:	0000740e 	andeq	r7, r0, lr, lsl #8
    2900:	000b0f00 	andeq	r0, fp, r0, lsl #30
    2904:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2908:	00030000 	andeq	r0, r3, r0
    290c:	a20b0807 	andge	r0, fp, #458752	; 0x70000
    2910:	000b3709 	andeq	r3, fp, r9, lsl #14
    2914:	0c1d0800 	ldceq	8, cr0, [sp], {-0}
    2918:	a40b0000 	strge	r0, [fp], #-0
    291c:	0000b707 	andeq	fp, r0, r7, lsl #14
    2920:	00230200 	eoreq	r0, r3, r0, lsl #4
    2924:	000d3108 	andeq	r3, sp, r8, lsl #2
    2928:	05a90b00 	streq	r0, [r9, #2816]!	; 0xb00
    292c:	00000add 	ldrdeq	r0, [r0], -sp
    2930:	00042302 	andeq	r2, r4, r2, lsl #6
    2934:	000e8103 	andeq	r8, lr, r3, lsl #2
    2938:	03aa0b00 			; <UNDEFINED> instruction: 0x03aa0b00
    293c:	00000b0f 	andeq	r0, r0, pc, lsl #22
    2940:	3d030419 	cfstrscc	mvf0, [r3, #-100]	; 0xffffff9c
    2944:	0c00000e 	stceq	0, cr0, [r0], {14}
    2948:	00a91916 	adceq	r1, r9, r6, lsl r9
    294c:	73030000 	movwvc	r0, #12288	; 0x3000
    2950:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    2954:	00b70d0c 	adcseq	r0, r7, ip, lsl #26
    2958:	9b030000 	blls	c2960 <_Min_Stack_Size+0xc2560>
    295c:	0c00000d 	stceq	0, cr0, [r0], {13}
    2960:	0b511b23 	bleq	14495f4 <_Min_Stack_Size+0x14491f4>
    2964:	4d1a0000 	ldcmi	0, cr0, [sl, #-0]
    2968:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    296c:	cf08340c 	svcgt	0x0008340c
    2970:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2974:	000011f6 	strdeq	r1, [r0], -r6
    2978:	cf13360c 	svcgt	0x0013360c
    297c:	0200000b 	andeq	r0, r0, #11
    2980:	5f0d0023 	svcpl	0x000d0023
    2984:	370c006b 	strcc	r0, [ip, -fp, rrx]
    2988:	0000b707 	andeq	fp, r0, r7, lsl #14
    298c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2990:	000ff708 	andeq	pc, pc, r8, lsl #14
    2994:	0b370c00 	bleq	dc599c <_Min_Stack_Size+0xdc559c>
    2998:	000000b7 	strheq	r0, [r0], -r7
    299c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    29a0:	00000f6e 	andeq	r0, r0, lr, ror #30
    29a4:	b714370c 	ldrlt	r3, [r4, -ip, lsl #14]
    29a8:	02000000 	andeq	r0, r0, #0
    29ac:	8c080c23 	stchi	12, cr0, [r8], {35}	; 0x23
    29b0:	0c00000c 	stceq	0, cr0, [r0], {12}
    29b4:	00b71b37 	adcseq	r1, r7, r7, lsr fp
    29b8:	23020000 	movwcs	r0, #8192	; 0x2000
    29bc:	785f0d10 	ldmdavc	pc, {r4, r8, sl, fp}^	; <UNPREDICTABLE>
    29c0:	0b380c00 	bleq	e059c8 <_Min_Stack_Size+0xe055c8>
    29c4:	00000bd5 	ldrdeq	r0, [r0], -r5
    29c8:	00142302 	andseq	r2, r4, r2, lsl #6
    29cc:	0b69041b 	bleq	1a43a40 <_Min_Stack_Size+0x1a43640>
    29d0:	450e0000 	strmi	r0, [lr, #-0]
    29d4:	e500000b 	str	r0, [r0, #-11]
    29d8:	0f00000b 	svceq	0x0000000b
    29dc:	000000c3 	andeq	r0, r0, r3, asr #1
    29e0:	121a0000 	andsne	r0, sl, #0
    29e4:	24000010 	strcs	r0, [r0], #-16
    29e8:	7a083c0c 	bvc	211a20 <_Min_Stack_Size+0x211620>
    29ec:	0800000c 	stmdaeq	r0, {r2, r3}
    29f0:	00000cd4 	ldrdeq	r0, [r0], -r4
    29f4:	b7093e0c 	strlt	r3, [r9, -ip, lsl #28]
    29f8:	02000000 	andeq	r0, r0, #0
    29fc:	25080023 	strcs	r0, [r8, #-35]	; 0xffffffdd
    2a00:	0c00000c 	stceq	0, cr0, [r0], {12}
    2a04:	00b7093f 	adcseq	r0, r7, pc, lsr r9
    2a08:	23020000 	movwcs	r0, #8192	; 0x2000
    2a0c:	0c010804 	stceq	8, cr0, [r1], {4}
    2a10:	400c0000 	andmi	r0, ip, r0
    2a14:	0000b709 	andeq	fp, r0, r9, lsl #14
    2a18:	08230200 	stmdaeq	r3!, {r9}
    2a1c:	000d6308 	andeq	r6, sp, r8, lsl #6
    2a20:	09410c00 	stmdbeq	r1, {sl, fp}^
    2a24:	000000b7 	strheq	r0, [r0], -r7
    2a28:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    2a2c:	00000ee8 	andeq	r0, r0, r8, ror #29
    2a30:	b709420c 	strlt	r4, [r9, -ip, lsl #4]
    2a34:	02000000 	andeq	r0, r0, #0
    2a38:	17081023 	strne	r1, [r8, -r3, lsr #32]
    2a3c:	0c00000f 	stceq	0, cr0, [r0], {15}
    2a40:	00b70943 	adcseq	r0, r7, r3, asr #18
    2a44:	23020000 	movwcs	r0, #8192	; 0x2000
    2a48:	0bd70814 	bleq	ff5c4aa0 <BootRAM+0xe535241>
    2a4c:	440c0000 	strmi	r0, [ip], #-0
    2a50:	0000b709 	andeq	fp, r0, r9, lsl #14
    2a54:	18230200 	stmdane	r3!, {r9}
    2a58:	000cdd08 	andeq	sp, ip, r8, lsl #26
    2a5c:	09450c00 	stmdbeq	r5, {sl, fp}^
    2a60:	000000b7 	strheq	r0, [r0], -r7
    2a64:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    2a68:	00000e93 	muleq	r0, r3, lr
    2a6c:	b709460c 	strlt	r4, [r9, -ip, lsl #12]
    2a70:	02000000 	andeq	r0, r0, #0
    2a74:	1c002023 	stcne	0, cr2, [r0], {35}	; 0x23
    2a78:	00000f8e 	andeq	r0, r0, lr, lsl #31
    2a7c:	4f0c0108 	svcmi	0x000c0108
    2a80:	000cc808 	andeq	ip, ip, r8, lsl #16
    2a84:	11500800 	cmpne	r0, r0, lsl #16
    2a88:	500c0000 	andpl	r0, ip, r0
    2a8c:	000cc80a 	andeq	ip, ip, sl, lsl #16
    2a90:	00230200 	eoreq	r0, r3, r0, lsl #4
    2a94:	00105508 	andseq	r5, r0, r8, lsl #10
    2a98:	09510c00 	ldmdbeq	r1, {sl, fp}^
    2a9c:	00000cc8 	andeq	r0, r0, r8, asr #25
    2aa0:	01802303 	orreq	r2, r0, r3, lsl #6
    2aa4:	0010c008 	andseq	ip, r0, r8
    2aa8:	0a530c00 	beq	14c5ab0 <_Min_Stack_Size+0x14c56b0>
    2aac:	00000b45 	andeq	r0, r0, r5, asr #22
    2ab0:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
    2ab4:	0011e308 	andseq	lr, r1, r8, lsl #6
    2ab8:	0a560c00 	beq	1585ac0 <_Min_Stack_Size+0x15856c0>
    2abc:	00000b45 	andeq	r0, r0, r5, asr #22
    2ac0:	02842303 	addeq	r2, r4, #201326592	; 0xc000000
    2ac4:	0b430e00 	bleq	10c62cc <_Min_Stack_Size+0x10c5ecc>
    2ac8:	0cd80000 	ldcleq	0, cr0, [r8], {0}
    2acc:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2ad0:	1f000000 	svcne	0x00000000
    2ad4:	0f2c1c00 	svceq	0x002c1c00
    2ad8:	01900000 	orrseq	r0, r0, r0
    2adc:	2408620c 	strcs	r6, [r8], #-524	; 0xfffffdf4
    2ae0:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2ae4:	000011f6 	strdeq	r1, [r0], -r6
    2ae8:	2412630c 	ldrcs	r6, [r2], #-780	; 0xfffffcf4
    2aec:	0200000d 	andeq	r0, r0, #13
    2af0:	c7080023 	strgt	r0, [r8, -r3, lsr #32]
    2af4:	0c00000e 	stceq	0, cr0, [r0], {14}
    2af8:	00b70664 	adcseq	r0, r7, r4, ror #12
    2afc:	23020000 	movwcs	r0, #8192	; 0x2000
    2b00:	0bc10804 	bleq	ff044b18 <BootRAM+0xdfb52b9>
    2b04:	660c0000 	strvs	r0, [ip], -r0
    2b08:	000d2a09 	andeq	r2, sp, r9, lsl #20
    2b0c:	08230200 	stmdaeq	r3!, {r9}
    2b10:	000f8e08 	andeq	r8, pc, r8, lsl #28
    2b14:	1e670c00 	cdpne	12, 6, cr0, cr7, cr0, {0}
    2b18:	00000c7a 	andeq	r0, r0, sl, ror ip
    2b1c:	01882303 	orreq	r2, r8, r3, lsl #6
    2b20:	d8041b00 	stmdale	r4, {r8, r9, fp, ip}
    2b24:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    2b28:	00000d3a 	andeq	r0, r0, sl, lsr sp
    2b2c:	00000d3a 	andeq	r0, r0, sl, lsr sp
    2b30:	0000c30f 	andeq	ip, r0, pc, lsl #6
    2b34:	1b001f00 	blne	a73c <_Min_Stack_Size+0xa33c>
    2b38:	000d4004 	andeq	r4, sp, r4
    2b3c:	1a011d00 	bne	49f44 <_Min_Stack_Size+0x49b44>
    2b40:	00000f06 	andeq	r0, r0, r6, lsl #30
    2b44:	087a0c08 	ldmdaeq	sl!, {r3, sl, fp}^
    2b48:	00000d6e 	andeq	r0, r0, lr, ror #26
    2b4c:	000e2708 	andeq	r2, lr, r8, lsl #14
    2b50:	117b0c00 	cmnne	fp, r0, lsl #24
    2b54:	00000d6e 	andeq	r0, r0, lr, ror #26
    2b58:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    2b5c:	000013ae 	andeq	r1, r0, lr, lsr #7
    2b60:	b7067c0c 	strlt	r7, [r6, -ip, lsl #24]
    2b64:	02000000 	andeq	r0, r0, #0
    2b68:	1b000423 	blne	3bfc <_Min_Stack_Size+0x37fc>
    2b6c:	00007404 	andeq	r7, r0, r4, lsl #8
    2b70:	0c841a00 	vstmiaeq	r4, {s2-s1}
    2b74:	0c680000 	stcleq	0, cr0, [r8], #-0
    2b78:	0ee708ba 	mcreq	8, 7, r0, cr7, cr10, {5}
    2b7c:	5f0d0000 	svcpl	0x000d0000
    2b80:	bb0c0070 	bllt	302d48 <_Min_Stack_Size+0x302948>
    2b84:	000d6e12 	andeq	r6, sp, r2, lsl lr
    2b88:	00230200 	eoreq	r0, r3, r0, lsl #4
    2b8c:	00725f0d 	rsbseq	r5, r2, sp, lsl #30
    2b90:	b707bc0c 	strlt	fp, [r7, -ip, lsl #24]
    2b94:	02000000 	andeq	r0, r0, #0
    2b98:	5f0d0423 	svcpl	0x000d0423
    2b9c:	bd0c0077 	stclt	0, cr0, [ip, #-476]	; 0xfffffe24
    2ba0:	0000b707 	andeq	fp, r0, r7, lsl #14
    2ba4:	08230200 	stmdaeq	r3!, {r9}
    2ba8:	000b3008 	andeq	r3, fp, r8
    2bac:	09be0c00 	ldmibeq	lr!, {sl, fp}
    2bb0:	0000003d 	andeq	r0, r0, sp, lsr r0
    2bb4:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    2bb8:	00000e61 	andeq	r0, r0, r1, ror #28
    2bbc:	3d09bf0c 	stccc	15, cr11, [r9, #-48]	; 0xffffffd0
    2bc0:	02000000 	andeq	r0, r0, #0
    2bc4:	5f0d0e23 	svcpl	0x000d0e23
    2bc8:	0c006662 	stceq	6, cr6, [r0], {98}	; 0x62
    2bcc:	0d4211c0 	stfeqe	f1, [r2, #-768]	; 0xfffffd00
    2bd0:	23020000 	movwcs	r0, #8192	; 0x2000
    2bd4:	0b270810 	bleq	9c4c1c <_Min_Stack_Size+0x9c481c>
    2bd8:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    2bdc:	0000b707 	andeq	fp, r0, r7, lsl #14
    2be0:	18230200 	stmdane	r3!, {r9}
    2be4:	000bc608 	andeq	ip, fp, r8, lsl #12
    2be8:	0ac80c00 	beq	ff205bf0 <BootRAM+0xe176391>
    2bec:	00000b43 	andeq	r0, r0, r3, asr #22
    2bf0:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    2bf4:	000012f0 	strdeq	r1, [r0], -r0
    2bf8:	981dca0c 	ldmdals	sp, {r2, r3, r9, fp, lr, pc}
    2bfc:	02000010 	andeq	r0, r0, #16
    2c00:	43082023 	movwmi	r2, #32803	; 0x8023
    2c04:	0c000012 	stceq	0, cr0, [r0], {18}
    2c08:	10c31dcc 	sbcne	r1, r3, ip, asr #27
    2c0c:	23020000 	movwcs	r0, #8192	; 0x2000
    2c10:	0ca30824 	stceq	8, cr0, [r3], #144	; 0x90
    2c14:	cf0c0000 	svcgt	0x000c0000
    2c18:	0010e80d 	andseq	lr, r0, sp, lsl #16
    2c1c:	28230200 	stmdacs	r3!, {r9}
    2c20:	000dc008 	andeq	ip, sp, r8
    2c24:	09d00c00 	ldmibeq	r0, {sl, fp}^
    2c28:	00001103 	andeq	r1, r0, r3, lsl #2
    2c2c:	0d2c2302 	stceq	3, cr2, [ip, #-8]!
    2c30:	0062755f 	rsbeq	r7, r2, pc, asr r5
    2c34:	4211d30c 	andsmi	sp, r1, #12, 6	; 0x30000000
    2c38:	0200000d 	andeq	r0, r0, #13
    2c3c:	5f0d3023 	svcpl	0x000d3023
    2c40:	0c007075 	stceq	0, cr7, [r0], {117}	; 0x75
    2c44:	0d6e12d4 	sfmeq	f1, 2, [lr, #-848]!	; 0xfffffcb0
    2c48:	23020000 	movwcs	r0, #8192	; 0x2000
    2c4c:	755f0d38 	ldrbvc	r0, [pc, #-3384]	; 1f1c <_Min_Stack_Size+0x1b1c>
    2c50:	d50c0072 	strle	r0, [ip, #-114]	; 0xffffff8e
    2c54:	0000b707 	andeq	fp, r0, r7, lsl #14
    2c58:	3c230200 	sfmcc	f0, 4, [r3], #-0
    2c5c:	000ca908 	andeq	sl, ip, r8, lsl #18
    2c60:	11d80c00 	bicsne	r0, r8, r0, lsl #24
    2c64:	00001109 	andeq	r1, r0, r9, lsl #2
    2c68:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    2c6c:	000011bb 			; <UNDEFINED> instruction: 0x000011bb
    2c70:	1911d90c 	ldmdbne	r1, {r2, r3, r8, fp, ip, lr, pc}
    2c74:	02000011 	andeq	r0, r0, #17
    2c78:	5f0d4323 	svcpl	0x000d4323
    2c7c:	0c00626c 	sfmeq	f6, 4, [r0], {108}	; 0x6c
    2c80:	0d4211dc 	stfeqe	f1, [r2, #-880]	; 0xfffffc90
    2c84:	23020000 	movwcs	r0, #8192	; 0x2000
    2c88:	10090844 	andne	r0, r9, r4, asr #16
    2c8c:	df0c0000 	svcle	0x000c0000
    2c90:	0000b707 	andeq	fp, r0, r7, lsl #14
    2c94:	4c230200 	sfmmi	f0, 4, [r3], #-0
    2c98:	000f9c08 	andeq	r9, pc, r8, lsl #24
    2c9c:	0ae00c00 	beq	ff805ca4 <BootRAM+0xe776445>
    2ca0:	00000ac5 	andeq	r0, r0, r5, asr #21
    2ca4:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    2ca8:	00000b01 	andeq	r0, r0, r1, lsl #22
    2cac:	0612e30c 	ldreq	lr, [r2], -ip, lsl #6
    2cb0:	0200000f 	andeq	r0, r0, #15
    2cb4:	17085423 	strne	r5, [r8, -r3, lsr #8]
    2cb8:	0c000010 	stceq	0, cr0, [r0], {16}
    2cbc:	0b5d0ce7 	bleq	1746060 <_Min_Stack_Size+0x1745c60>
    2cc0:	23020000 	movwcs	r0, #8192	; 0x2000
    2cc4:	0bce0858 	bleq	ff384e2c <BootRAM+0xe2f55cd>
    2cc8:	e90c0000 	stmdb	ip, {}	; <UNPREDICTABLE>
    2ccc:	000b370e 	andeq	r3, fp, lr, lsl #14
    2cd0:	5c230200 	sfmpl	f0, 4, [r3], #-0
    2cd4:	0011db08 	andseq	sp, r1, r8, lsl #22
    2cd8:	09ea0c00 	stmibeq	sl!, {sl, fp}^
    2cdc:	000000b7 	strheq	r0, [r0], -r7
    2ce0:	00642302 	rsbeq	r2, r4, r2, lsl #6
    2ce4:	00b7011e 	adcseq	r0, r7, lr, lsl r1
    2ce8:	0f060000 	svceq	0x00060000
    2cec:	061f0000 	ldreq	r0, [pc], -r0
    2cf0:	1f00000f 	svcne	0x0000000f
    2cf4:	00000b43 	andeq	r0, r0, r3, asr #22
    2cf8:	0010861f 	andseq	r8, r0, pc, lsl r6
    2cfc:	00b71f00 	adcseq	r1, r7, r0, lsl #30
    2d00:	1b000000 	blne	2d08 <_Min_Stack_Size+0x2908>
    2d04:	000f1104 	andeq	r1, pc, r4, lsl #2
    2d08:	0f060500 	svceq	0x00060500
    2d0c:	68200000 	stmdavs	r0!, {}	; <UNPREDICTABLE>
    2d10:	28000011 	stmdacs	r0, {r0, r4}
    2d14:	02650c04 	rsbeq	r0, r5, #4, 24	; 0x400
    2d18:	00108608 	andseq	r8, r0, r8, lsl #12
    2d1c:	0c9c1400 	cfldrseq	mvf1, [ip], {0}
    2d20:	670c0000 	strvs	r0, [ip, -r0]
    2d24:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2d28:	23020000 	movwcs	r0, #8192	; 0x2000
    2d2c:	0de21400 	cfstrdeq	mvd1, [r2]
    2d30:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    2d34:	117b0b02 	cmnne	fp, r2, lsl #22
    2d38:	23020000 	movwcs	r0, #8192	; 0x2000
    2d3c:	0bb11404 	bleq	fec47d54 <BootRAM+0xdbb84f5>
    2d40:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    2d44:	117b1402 	cmnne	fp, r2, lsl #8
    2d48:	23020000 	movwcs	r0, #8192	; 0x2000
    2d4c:	121e1408 	andsne	r1, lr, #8, 8	; 0x8000000
    2d50:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    2d54:	117b1e02 	cmnne	fp, r2, lsl #28
    2d58:	23020000 	movwcs	r0, #8192	; 0x2000
    2d5c:	0ce7140c 	cfstrdeq	mvd1, [r7], #48	; 0x30
    2d60:	6e0c0000 	cdpvs	0, 0, cr0, cr12, cr0, {0}
    2d64:	00b70802 	adcseq	r0, r7, r2, lsl #16
    2d68:	23020000 	movwcs	r0, #8192	; 0x2000
    2d6c:	0caf1410 	cfstrseq	mvf1, [pc], #64	; 2db4 <_Min_Stack_Size+0x29b4>
    2d70:	6f0c0000 	svcvs	0x000c0000
    2d74:	13b40802 			; <UNDEFINED> instruction: 0x13b40802
    2d78:	23020000 	movwcs	r0, #8192	; 0x2000
    2d7c:	0b851414 	bleq	fe147dd4 <BootRAM+0xd0b8575>
    2d80:	720c0000 	andvc	r0, ip, #0
    2d84:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2d88:	23020000 	movwcs	r0, #8192	; 0x2000
    2d8c:	11481430 	cmpne	r8, r0, lsr r4
    2d90:	730c0000 	movwvc	r0, #49152	; 0xc000
    2d94:	13ca1602 	bicne	r1, sl, #2097152	; 0x200000
    2d98:	23020000 	movwcs	r0, #8192	; 0x2000
    2d9c:	0dc71434 	cfstrdeq	mvd1, [r7, #208]	; 0xd0
    2da0:	750c0000 	strvc	r0, [ip, #-0]
    2da4:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2da8:	23020000 	movwcs	r0, #8192	; 0x2000
    2dac:	0e771438 	mrceq	4, 3, r1, cr7, cr8, {1}
    2db0:	770c0000 	strvc	r0, [ip, -r0]
    2db4:	13dc0a02 	bicsne	r0, ip, #8192	; 0x2000
    2db8:	23020000 	movwcs	r0, #8192	; 0x2000
    2dbc:	0bed143c 	bleq	ffb47eb4 <BootRAM+0xeab8655>
    2dc0:	7a0c0000 	bvc	302dc8 <_Min_Stack_Size+0x3029c8>
    2dc4:	0bcf1302 	bleq	ff3c79d4 <BootRAM+0xe338175>
    2dc8:	23020000 	movwcs	r0, #8192	; 0x2000
    2dcc:	0c581440 	cfldrdeq	mvd1, [r8], {64}	; 0x40
    2dd0:	7b0c0000 	blvc	302dd8 <_Min_Stack_Size+0x3029d8>
    2dd4:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2dd8:	23020000 	movwcs	r0, #8192	; 0x2000
    2ddc:	0d3f1444 	cfldrseq	mvf1, [pc, #-272]!	; 2cd4 <_Min_Stack_Size+0x28d4>
    2de0:	7c0c0000 	stcvc	0, cr0, [ip], {-0}
    2de4:	0bcf1302 	bleq	ff3c79f4 <BootRAM+0xe338195>
    2de8:	23020000 	movwcs	r0, #8192	; 0x2000
    2dec:	0e2d1448 	cdpeq	4, 2, cr1, cr13, cr8, {2}
    2df0:	7d0c0000 	stcvc	0, cr0, [ip, #-0]
    2df4:	13e21402 	mvnne	r1, #33554432	; 0x2000000
    2df8:	23020000 	movwcs	r0, #8192	; 0x2000
    2dfc:	0fef144c 	svceq	0x00ef144c
    2e00:	800c0000 	andhi	r0, ip, r0
    2e04:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2e08:	23020000 	movwcs	r0, #8192	; 0x2000
    2e0c:	106a1450 	rsbne	r1, sl, r0, asr r4
    2e10:	810c0000 	mrshi	r0, (UNDEF: 12)
    2e14:	10860902 	addne	r0, r6, r2, lsl #18
    2e18:	23020000 	movwcs	r0, #8192	; 0x2000
    2e1c:	0bac1454 	bleq	feb07f74 <BootRAM+0xda78715>
    2e20:	a40c0000 	strge	r0, [ip], #-0
    2e24:	138f0702 	orrne	r0, pc, #524288	; 0x80000
    2e28:	23020000 	movwcs	r0, #8192	; 0x2000
    2e2c:	0f2c1458 	svceq	0x002c1458
    2e30:	a80c0000 	stmdage	ip, {}	; <UNPREDICTABLE>
    2e34:	0d241302 	stceq	3, cr1, [r4, #-8]!
    2e38:	23030000 	movwcs	r0, #12288	; 0x3000
    2e3c:	fc1402c8 	ldc2	2, cr0, [r4], {200}	; 0xc8
    2e40:	0c000011 	stceq	0, cr0, [r0], {17}
    2e44:	d81202a9 	ldmdale	r2, {r0, r3, r5, r7, r9}
    2e48:	0300000c 	movweq	r0, #12
    2e4c:	1402cc23 	strne	ip, [r2], #-3107	; 0xfffff3dd
    2e50:	00000d6d 	andeq	r0, r0, sp, ror #26
    2e54:	0c02ad0c 	stceq	13, cr10, [r2], {12}
    2e58:	000013f4 	strdeq	r1, [r0], -r4
    2e5c:	05dc2303 	ldrbeq	r2, [ip, #771]	; 0x303
    2e60:	00111714 	andseq	r1, r1, r4, lsl r7
    2e64:	02b20c00 	adcseq	r0, r2, #0, 24
    2e68:	00113610 	andseq	r3, r1, r0, lsl r6
    2e6c:	e0230300 	eor	r0, r3, r0, lsl #6
    2e70:	0f691405 	svceq	0x00691405
    2e74:	b40c0000 	strlt	r0, [ip], #-0
    2e78:	14000a02 	strne	r0, [r0], #-2562	; 0xfffff5fe
    2e7c:	23030000 	movwcs	r0, #12288	; 0x3000
    2e80:	1b0005ec 	blne	4638 <_Min_Stack_Size+0x4238>
    2e84:	00108c04 	andseq	r8, r0, r4, lsl #24
    2e88:	08010200 	stmdaeq	r1, {r9}
    2e8c:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    2e90:	00108c05 	andseq	r8, r0, r5, lsl #24
    2e94:	e7041b00 	str	r1, [r4, -r0, lsl #22]
    2e98:	1e00000e 	cdpne	0, 0, cr0, cr0, cr14, {0}
    2e9c:	0000b701 	andeq	fp, r0, r1, lsl #14
    2ea0:	0010bd00 	andseq	fp, r0, r0, lsl #26
    2ea4:	0f061f00 	svceq	0x00061f00
    2ea8:	431f0000 	tstmi	pc, #0
    2eac:	1f00000b 	svcne	0x0000000b
    2eb0:	000010bd 	strheq	r1, [r0], -sp
    2eb4:	0000b71f 	andeq	fp, r0, pc, lsl r7
    2eb8:	041b0000 	ldreq	r0, [fp], #-0
    2ebc:	00001093 	muleq	r0, r3, r0
    2ec0:	109e041b 	addsne	r0, lr, fp, lsl r4
    2ec4:	011e0000 	tsteq	lr, r0
    2ec8:	00000ad1 	ldrdeq	r0, [r0], -r1
    2ecc:	000010e8 	andeq	r1, r0, r8, ror #1
    2ed0:	000f061f 	andeq	r0, pc, pc, lsl r6	; <UNPREDICTABLE>
    2ed4:	0b431f00 	bleq	10caadc <_Min_Stack_Size+0x10ca6dc>
    2ed8:	d11f0000 	tstle	pc, r0
    2edc:	1f00000a 	svcne	0x0000000a
    2ee0:	000000b7 	strheq	r0, [r0], -r7
    2ee4:	c9041b00 	stmdbgt	r4, {r8, r9, fp, ip}
    2ee8:	1e000010 	mcrne	0, 0, r0, cr0, cr0, {0}
    2eec:	0000b701 	andeq	fp, r0, r1, lsl #14
    2ef0:	00110300 	andseq	r0, r1, r0, lsl #6
    2ef4:	0f061f00 	svceq	0x00061f00
    2ef8:	431f0000 	tstmi	pc, #0
    2efc:	0000000b 	andeq	r0, r0, fp
    2f00:	10ee041b 	rscne	r0, lr, fp, lsl r4
    2f04:	740e0000 	strvc	r0, [lr], #-0
    2f08:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    2f0c:	0f000011 	svceq	0x00000011
    2f10:	000000c3 	andeq	r0, r0, r3, asr #1
    2f14:	740e0002 	strvc	r0, [lr], #-2
    2f18:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    2f1c:	0f000011 	svceq	0x00000011
    2f20:	000000c3 	andeq	r0, r0, r3, asr #1
    2f24:	f5160000 			; <UNDEFINED> instruction: 0xf5160000
    2f28:	0c00000b 	stceq	0, cr0, [r0], {11}
    2f2c:	741a0124 	ldrvc	r0, [sl], #-292	; 0xfffffedc
    2f30:	2100000d 	tstcs	r0, sp
    2f34:	00001111 	andeq	r1, r0, r1, lsl r1
    2f38:	01280c0c 			; <UNDEFINED> instruction: 0x01280c0c
    2f3c:	00117508 	andseq	r7, r1, r8, lsl #10
    2f40:	11f61400 	mvnsne	r1, r0, lsl #8
    2f44:	2a0c0000 	bcs	302f4c <_Min_Stack_Size+0x302b4c>
    2f48:	11751101 	cmnne	r5, r1, lsl #2
    2f4c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f50:	104e1400 	subne	r1, lr, r0, lsl #8
    2f54:	2b0c0000 	blcs	302f5c <_Min_Stack_Size+0x302b5c>
    2f58:	00b70701 	adcseq	r0, r7, r1, lsl #14
    2f5c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f60:	0daa1404 	cfstrseq	mvf1, [sl, #16]!
    2f64:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    2f68:	117b0b01 	cmnne	fp, r1, lsl #22
    2f6c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f70:	041b0008 	ldreq	r0, [fp], #-8
    2f74:	00001136 	andeq	r1, r0, r6, lsr r1
    2f78:	1129041b 			; <UNDEFINED> instruction: 0x1129041b
    2f7c:	44210000 	strtmi	r0, [r1], #-0
    2f80:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    2f84:	0801440c 	stmdaeq	r1, {r2, r3, sl, lr}
    2f88:	000011c0 	andeq	r1, r0, r0, asr #3
    2f8c:	0011eb14 	andseq	lr, r1, r4, lsl fp
    2f90:	01450c00 	cmpeq	r5, r0, lsl #24
    2f94:	0011c012 	andseq	ip, r1, r2, lsl r0
    2f98:	00230200 	eoreq	r0, r3, r0, lsl #4
    2f9c:	000e3714 	andeq	r3, lr, r4, lsl r7
    2fa0:	01460c00 	cmpeq	r6, r0, lsl #24
    2fa4:	0011c012 	andseq	ip, r1, r2, lsl r0
    2fa8:	06230200 	strteq	r0, [r3], -r0, lsl #4
    2fac:	000c0b14 	andeq	r0, ip, r4, lsl fp
    2fb0:	01470c00 	cmpeq	r7, r0, lsl #24
    2fb4:	00009112 	andeq	r9, r0, r2, lsl r1
    2fb8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2fbc:	00910e00 	addseq	r0, r1, r0, lsl #28
    2fc0:	11d00000 	bicsne	r0, r0, r0
    2fc4:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2fc8:	02000000 	andeq	r0, r0, #0
    2fcc:	0cd01300 	ldcleq	3, cr1, [r0], {0}
    2fd0:	14070285 	strne	r0, [r7], #-645	; 0xfffffd7b
    2fd4:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    2fd8:	000011c1 	andeq	r1, r0, r1, asr #3
    2fdc:	1802870c 	stmdane	r2, {r2, r3, r8, r9, sl, pc}
    2fe0:	000000c3 	andeq	r0, r0, r3, asr #1
    2fe4:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    2fe8:	0000111f 	andeq	r1, r0, pc, lsl r1
    2fec:	1202880c 	andne	r8, r2, #12, 16	; 0xc0000
    2ff0:	00001086 	andeq	r1, r0, r6, lsl #1
    2ff4:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    2ff8:	00000c77 	andeq	r0, r0, r7, ror ip
    2ffc:	1002890c 	andne	r8, r2, ip, lsl #18
    3000:	00001314 	andeq	r1, r0, r4, lsl r3
    3004:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    3008:	00000fbf 			; <UNDEFINED> instruction: 0x00000fbf
    300c:	17028a0c 	strne	r8, [r2, -ip, lsl #20]
    3010:	00000be5 	andeq	r0, r0, r5, ror #23
    3014:	14242302 	strtne	r2, [r4], #-770	; 0xfffffcfe
    3018:	00000de9 	andeq	r0, r0, r9, ror #27
    301c:	0f028b0c 	svceq	0x00028b0c
    3020:	000000b7 	strheq	r0, [r0], -r7
    3024:	14482302 	strbne	r2, [r8], #-770	; 0xfffffcfe
    3028:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    302c:	2c028c0c 	stccs	12, cr8, [r2], {12}
    3030:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    3034:	14502302 	ldrbne	r2, [r0], #-770	; 0xfffffcfe
    3038:	00000b16 	andeq	r0, r0, r6, lsl fp
    303c:	1a028d0c 	bne	a6474 <_Min_Stack_Size+0xa6074>
    3040:	00001181 	andeq	r1, r0, r1, lsl #3
    3044:	14582302 	ldrbne	r2, [r8], #-770	; 0xfffffcfe
    3048:	00000d56 	andeq	r0, r0, r6, asr sp
    304c:	16028e0c 	strne	r8, [r2], -ip, lsl #28
    3050:	00000b37 	andeq	r0, r0, r7, lsr fp
    3054:	14682302 	strbtne	r2, [r8], #-770	; 0xfffffcfe
    3058:	0000112c 	andeq	r1, r0, ip, lsr #2
    305c:	16028f0c 	strne	r8, [r2], -ip, lsl #30
    3060:	00000b37 	andeq	r0, r0, r7, lsr fp
    3064:	14702302 	ldrbtne	r2, [r0], #-770	; 0xfffffcfe
    3068:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    306c:	1602900c 	strne	r9, [r2], -ip
    3070:	00000b37 	andeq	r0, r0, r7, lsr fp
    3074:	14782302 	ldrbtne	r2, [r8], #-770	; 0xfffffcfe
    3078:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    307c:	1002910c 	andne	r9, r2, ip, lsl #2
    3080:	00001324 	andeq	r1, r0, r4, lsr #6
    3084:	01802303 	orreq	r2, r0, r3, lsl #6
    3088:	000b1b14 	andeq	r1, fp, r4, lsl fp
    308c:	02920c00 	addseq	r0, r2, #0, 24
    3090:	00133410 	andseq	r3, r3, r0, lsl r4
    3094:	88230300 	stmdahi	r3!, {r8, r9}
    3098:	107c1401 	rsbsne	r1, ip, r1, lsl #8
    309c:	930c0000 	movwls	r0, #49152	; 0xc000
    30a0:	00b70f02 	adcseq	r0, r7, r2, lsl #30
    30a4:	23030000 	movwcs	r0, #12288	; 0x3000
    30a8:	9e1401a0 	muflsdp	f0, f4, f0
    30ac:	0c00000b 	stceq	0, cr0, [r0], {11}
    30b0:	37160294 			; <UNDEFINED> instruction: 0x37160294
    30b4:	0300000b 	movweq	r0, #11
    30b8:	1401a423 	strne	sl, [r1], #-1059	; 0xfffffbdd
    30bc:	00000d77 	andeq	r0, r0, r7, ror sp
    30c0:	1602950c 	strne	r9, [r2], -ip, lsl #10
    30c4:	00000b37 	andeq	r0, r0, r7, lsr fp
    30c8:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    30cc:	000cf914 	andeq	pc, ip, r4, lsl r9	; <UNPREDICTABLE>
    30d0:	02960c00 	addseq	r0, r6, #0, 24
    30d4:	000b3716 	andeq	r3, fp, r6, lsl r7
    30d8:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    30dc:	0e521401 	cdpeq	4, 5, cr1, cr2, cr1, {0}
    30e0:	970c0000 	strls	r0, [ip, -r0]
    30e4:	0b371602 	bleq	dc88f4 <_Min_Stack_Size+0xdc84f4>
    30e8:	23030000 	movwcs	r0, #12288	; 0x3000
    30ec:	9e1401bc 	mrcls	1, 0, r0, cr4, cr12, {5}
    30f0:	0c00000e 	stceq	0, cr0, [r0], {14}
    30f4:	37160298 			; <UNDEFINED> instruction: 0x37160298
    30f8:	0300000b 	movweq	r0, #11
    30fc:	1401c423 	strne	ip, [r1], #-1059	; 0xfffffbdd
    3100:	00000c9a 	muleq	r0, sl, ip
    3104:	0802990c 	stmdaeq	r2, {r2, r3, r8, fp, ip, pc}
    3108:	000000b7 	strheq	r0, [r0], -r7
    310c:	01cc2303 	biceq	r2, ip, r3, lsl #6
    3110:	108c0e00 	addne	r0, ip, r0, lsl #28
    3114:	13240000 			; <UNDEFINED> instruction: 0x13240000
    3118:	c30f0000 	movwgt	r0, #61440	; 0xf000
    311c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    3120:	108c0e00 	addne	r0, ip, r0, lsl #28
    3124:	13340000 	teqne	r4, #0
    3128:	c30f0000 	movwgt	r0, #61440	; 0xf000
    312c:	07000000 	streq	r0, [r0, -r0]
    3130:	108c0e00 	addne	r0, ip, r0, lsl #28
    3134:	13440000 	movtne	r0, #16384	; 0x4000
    3138:	c30f0000 	movwgt	r0, #61440	; 0xf000
    313c:	17000000 	strne	r0, [r0, -r0]
    3140:	0cf01300 	ldcleq	3, cr1, [r0]
    3144:	6f07029e 	svcvs	0x0007029e
    3148:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    314c:	00000e04 	andeq	r0, r0, r4, lsl #28
    3150:	1b02a10c 	blne	ab588 <_Min_Stack_Size+0xab188>
    3154:	0000136f 	andeq	r1, r0, pc, ror #6
    3158:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    315c:	00000b46 	andeq	r0, r0, r6, asr #22
    3160:	1802a20c 	stmdane	r2, {r2, r3, r9, sp, pc}
    3164:	0000137f 	andeq	r1, r0, pc, ror r3
    3168:	00782302 	rsbseq	r2, r8, r2, lsl #6
    316c:	000d6e0e 	andeq	r6, sp, lr, lsl #28
    3170:	00137f00 	andseq	r7, r3, r0, lsl #30
    3174:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    3178:	001d0000 	andseq	r0, sp, r0
    317c:	0000c30e 	andeq	ip, r0, lr, lsl #6
    3180:	00138f00 	andseq	r8, r3, r0, lsl #30
    3184:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    3188:	001d0000 	andseq	r0, sp, r0
    318c:	830cf022 	movwhi	pc, #49186	; 0xc022	; <UNPREDICTABLE>
    3190:	13b40302 			; <UNDEFINED> instruction: 0x13b40302
    3194:	68230000 	stmdavs	r3!, {}	; <UNPREDICTABLE>
    3198:	0c000011 	stceq	0, cr0, [r0], {17}
    319c:	d00b029a 	mulle	fp, sl, r2
    31a0:	23000011 	movwcs	r0, #17
    31a4:	00000fe7 	andeq	r0, r0, r7, ror #31
    31a8:	0b02a30c 	bleq	abde0 <_Min_Stack_Size+0xab9e0>
    31ac:	00001344 	andeq	r1, r0, r4, asr #6
    31b0:	108c0e00 	addne	r0, ip, r0, lsl #28
    31b4:	13c40000 	bicne	r0, r4, #0
    31b8:	c30f0000 	movwgt	r0, #61440	; 0xf000
    31bc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    31c0:	12052400 	andne	r2, r5, #0, 8
    31c4:	1b010000 	blne	431cc <_Min_Stack_Size+0x42dcc>
    31c8:	0013c404 	andseq	ip, r3, r4, lsl #8
    31cc:	dc012500 	cfstr32le	mvfx2, [r1], {-0}
    31d0:	1f000013 	svcne	0x00000013
    31d4:	00000f06 	andeq	r0, r0, r6, lsl #30
    31d8:	d0041b00 	andle	r1, r4, r0, lsl #22
    31dc:	1b000013 	blne	3230 <_Min_Stack_Size+0x2e30>
    31e0:	000bcf04 	andeq	ip, fp, r4, lsl #30
    31e4:	f4012500 	vst3.8	{d2,d4,d6}, [r1], r0
    31e8:	1f000013 	svcne	0x00000013
    31ec:	000000b7 	strheq	r0, [r0], -r7
    31f0:	fa041b00 	blx	109df8 <_Min_Stack_Size+0x1099f8>
    31f4:	1b000013 	blne	3248 <_Min_Stack_Size+0x2e48>
    31f8:	0013e804 	andseq	lr, r3, r4, lsl #16
    31fc:	11290e00 			; <UNDEFINED> instruction: 0x11290e00
    3200:	14100000 	ldrne	r0, [r0], #-0
    3204:	c30f0000 	movwgt	r0, #61440	; 0xf000
    3208:	02000000 	andeq	r0, r0, #0
    320c:	0f821100 	svceq	0x00821100
    3210:	330c0000 	movwcc	r0, #49152	; 0xc000
    3214:	0f061703 	svceq	0x00061703
    3218:	01010000 	mrseq	r0, (UNDEF: 1)
    321c:	000f7b11 	andeq	r7, pc, r1, lsl fp	; <UNPREDICTABLE>
    3220:	03340c00 	teqeq	r4, #0, 24
    3224:	000f0c1d 	andeq	r0, pc, sp, lsl ip	; <UNPREDICTABLE>
    3228:	12010100 	andne	r0, r1, #0, 2
    322c:	00000037 	andeq	r0, r0, r7, lsr r0
    3230:	a41a0504 	ldrge	r0, [sl], #-1284	; 0xfffffafc
    3234:	01000000 	mrseq	r0, (UNDEF: 0)
    3238:	00380e01 	eorseq	r0, r8, r1, lsl #28
    323c:	144c0000 	strbne	r0, [ip], #-0
    3240:	c30f0000 	movwgt	r0, #61440	; 0xf000
    3244:	2b000000 	blcs	324c <_Min_Stack_Size+0x2e4c>
    3248:	143c0400 	ldrtne	r0, [ip], #-1024	; 0xfffffc00
    324c:	0b260000 	bleq	983254 <_Min_Stack_Size+0x982e54>
    3250:	0100000e 	tsteq	r0, lr
    3254:	144c120e 	strbne	r1, [ip], #-526	; 0xfffffdf2
    3258:	05010000 	streq	r0, [r1, #-0]
    325c:	00029e03 	andeq	r9, r2, r3, lsl #28
    3260:	10462620 	subne	r2, r6, r0, lsr #12
    3264:	10010000 	andne	r0, r1, r0
    3268:	00006a12 	andeq	r6, r0, r2, lsl sl
    326c:	03050100 	movweq	r0, #20736	; 0x5100
    3270:	2000003c 	andcs	r0, r0, ip, lsr r0
    3274:	000add26 	andeq	sp, sl, r6, lsr #26
    3278:	12560100 	subsne	r0, r6, #0, 2
    327c:	0000006a 	andeq	r0, r0, sl, rrx
    3280:	40030501 	andmi	r0, r3, r1, lsl #10
    3284:	26200000 	strtcs	r0, [r0], -r0
    3288:	00000f0d 	andeq	r0, r0, sp, lsl #30
    328c:	87135701 	ldrhi	r5, [r3, -r1, lsl #14]
    3290:	01000000 	mrseq	r0, (UNDEF: 0)
    3294:	00420305 	subeq	r0, r2, r5, lsl #6
    3298:	951a2000 	ldrls	r2, [sl, #-0]
    329c:	02000010 	andeq	r0, r0, #16
    32a0:	ba190903 	blt	6456b4 <_Min_Stack_Size+0x6452b4>
    32a4:	08000014 	stmdaeq	r0, {r2, r4}
    32a8:	00000b02 	andeq	r0, r0, r2, lsl #22
    32ac:	7b0c0a03 	blvc	305ac0 <_Min_Stack_Size+0x3056c0>
    32b0:	02000000 	andeq	r0, r0, #0
    32b4:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    32b8:	0000149d 	muleq	r0, sp, r4
    32bc:	0010a003 	andseq	sl, r0, r3
    32c0:	020b0300 	andeq	r0, fp, #0, 6
    32c4:	000014ba 			; <UNDEFINED> instruction: 0x000014ba
    32c8:	000afe26 	andeq	pc, sl, r6, lsr #28
    32cc:	0c0c0300 	stceq	3, cr0, [ip], {-0}
    32d0:	000014bf 			; <UNDEFINED> instruction: 0x000014bf
    32d4:	9c030501 	cfstr32ls	mvfx0, [r3], {1}
    32d8:	27200002 	strcs	r0, [r0, -r2]!
    32dc:	00000c4c 	andeq	r0, r0, ip, asr #24
    32e0:	a41a0f03 	ldrge	r0, [sl], #-3843	; 0xfffff0fd
    32e4:	05000000 	streq	r0, [r0, #-0]
    32e8:	00004803 	andeq	r4, r0, r3, lsl #16
    32ec:	006f0e20 	rsbeq	r0, pc, r0, lsr #28
    32f0:	15000000 	strne	r0, [r0, #-0]
    32f4:	c30f0000 	movwgt	r0, #61440	; 0xf000
    32f8:	14000000 	strne	r0, [r0], #-0
    32fc:	14f00500 	ldrbtne	r0, [r0], #1280	; 0x500
    3300:	c2270000 	eorgt	r0, r7, #0
    3304:	0300000c 	movweq	r0, #12
    3308:	15001611 	strne	r1, [r0, #-1553]	; 0xfffff9ef
    330c:	03050000 	movweq	r0, #20480	; 0x5000
    3310:	080017ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl, ip}
    3314:	00006f0e 	andeq	r6, r0, lr, lsl #30
    3318:	00152700 	andseq	r2, r5, r0, lsl #14
    331c:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    3320:	00110000 	andseq	r0, r1, r0
    3324:	00151705 	andseq	r1, r5, r5, lsl #14
    3328:	10ab2700 	adcne	r2, fp, r0, lsl #14
    332c:	1e050000 	cdpne	0, 0, cr0, cr5, cr0, {0}
    3330:	00152716 	andseq	r2, r5, r6, lsl r7
    3334:	e3030500 	movw	r0, #13568	; 0x3500
    3338:	0e080017 	mcreq	0, 0, r0, cr8, cr7, {0}
    333c:	0000006f 	andeq	r0, r0, pc, rrx
    3340:	0000154e 	andeq	r1, r0, lr, asr #10
    3344:	0000c30f 	andeq	ip, r0, pc, lsl #6
    3348:	05000900 	streq	r0, [r0, #-2304]	; 0xfffff700
    334c:	0000153e 	andeq	r1, r0, lr, lsr r5
    3350:	00101d27 	andseq	r1, r0, r7, lsr #26
    3354:	16310500 	ldrtne	r0, [r1], -r0, lsl #10
    3358:	0000154e 	andeq	r1, r0, lr, asr #10
    335c:	19390305 	ldmdbne	r9!, {r0, r2, r8, r9}
    3360:	6f0e0800 	svcvs	0x000e0800
    3364:	76000000 	strvc	r0, [r0], -r0
    3368:	10000015 	andne	r0, r0, r5, lsl r0
    336c:	000000c3 	andeq	r0, r0, r3, asr #1
    3370:	05000143 	streq	r0, [r0, #-323]	; 0xfffffebd
    3374:	00001565 	andeq	r1, r0, r5, ror #10
    3378:	000c6227 	andeq	r6, ip, r7, lsr #4
    337c:	163f0500 	ldrtne	r0, [pc], -r0, lsl #10
    3380:	00001576 	andeq	r1, r0, r6, ror r5
    3384:	17f50305 	ldrbne	r0, [r5, r5, lsl #6]!
    3388:	ce210800 	cdpgt	8, 2, cr0, cr1, cr0, {0}
    338c:	0400000f 	streq	r0, [r0], #-15
    3390:	0101e205 	tsteq	r1, r5, lsl #4
    3394:	000015cc 	andeq	r1, r0, ip, asr #11
    3398:	0011d314 	andseq	sp, r1, r4, lsl r3
    339c:	01e20500 	mvneq	r0, r0, lsl #10
    33a0:	00005e01 	andeq	r5, r0, r1, lsl #28
    33a4:	00230200 	eoreq	r0, r3, r0, lsl #4
    33a8:	0010df14 	andseq	sp, r0, r4, lsl pc
    33ac:	01e20500 	mvneq	r0, r0, lsl #10
    33b0:	00005e01 	andeq	r5, r0, r1, lsl #28
    33b4:	01230200 			; <UNDEFINED> instruction: 0x01230200
    33b8:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    33bc:	01e20500 	mvneq	r0, r0, lsl #10
    33c0:	0015d101 	andseq	sp, r5, r1, lsl #2
    33c4:	02230200 	eoreq	r0, r3, #0, 4
    33c8:	158d0500 	strne	r0, [sp, #1280]	; 0x500
    33cc:	7b0e0000 	blvc	3833d4 <_Min_Stack_Size+0x382fd4>
    33d0:	e1000000 	mrs	r0, (UNDEF: 0)
    33d4:	0f000015 	svceq	0x00000015
    33d8:	000000c3 	andeq	r0, r0, r3, asr #1
    33dc:	ce280000 	cdpgt	0, 2, cr0, cr8, cr0, {0}
    33e0:	0500000f 	streq	r0, [r0, #-15]
    33e4:	cc0101e2 	stfgts	f0, [r1], {226}	; 0xe2
    33e8:	02000015 	andeq	r0, r0, #21
    33ec:	19440305 	stmdbne	r4, {r0, r2, r8, r9}^
    33f0:	ef210800 	svc	0x00210800
    33f4:	16000010 			; <UNDEFINED> instruction: 0x16000010
    33f8:	0101e305 	tsteq	r1, r5, lsl #6
    33fc:	00001634 	andeq	r1, r0, r4, lsr r6
    3400:	0011d314 	andseq	sp, r1, r4, lsl r3
    3404:	01e30500 	mvneq	r0, r0, lsl #10
    3408:	00005e01 	andeq	r5, r0, r1, lsl #28
    340c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3410:	0010df14 	andseq	sp, r0, r4, lsl pc
    3414:	01e30500 	mvneq	r0, r0, lsl #10
    3418:	00005e01 	andeq	r5, r0, r1, lsl #28
    341c:	01230200 			; <UNDEFINED> instruction: 0x01230200
    3420:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    3424:	01e30500 	mvneq	r0, r0, lsl #10
    3428:	00163901 	andseq	r3, r6, r1, lsl #18
    342c:	02230200 	eoreq	r0, r3, #0, 4
    3430:	15f50500 	ldrbne	r0, [r5, #1280]!	; 0x500
    3434:	7b0e0000 	blvc	38343c <_Min_Stack_Size+0x38303c>
    3438:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    343c:	0f000016 	svceq	0x00000016
    3440:	000000c3 	andeq	r0, r0, r3, asr #1
    3444:	ef280009 	svc	0x00280009
    3448:	05000010 	streq	r0, [r0, #-16]
    344c:	340101e3 	strcc	r0, [r1], #-483	; 0xfffffe1d
    3450:	02000016 	andeq	r0, r0, #22
    3454:	19480305 	stmdbne	r8, {r0, r2, r8, r9}^
    3458:	6f210800 	svcvs	0x00210800
    345c:	2a000011 	bcs	34a8 <_Min_Stack_Size+0x30a8>
    3460:	0101e405 	tsteq	r1, r5, lsl #8
    3464:	0000169c 	muleq	r0, ip, r6
    3468:	0011d314 	andseq	sp, r1, r4, lsl r3
    346c:	01e40500 	mvneq	r0, r0, lsl #10
    3470:	00005e01 	andeq	r5, r0, r1, lsl #28
    3474:	00230200 	eoreq	r0, r3, r0, lsl #4
    3478:	0010df14 	andseq	sp, r0, r4, lsl pc
    347c:	01e40500 	mvneq	r0, r0, lsl #10
    3480:	00005e01 	andeq	r5, r0, r1, lsl #28
    3484:	01230200 			; <UNDEFINED> instruction: 0x01230200
    3488:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    348c:	01e40500 	mvneq	r0, r0, lsl #10
    3490:	0016a101 	andseq	sl, r6, r1, lsl #2
    3494:	02230200 	eoreq	r0, r3, #0, 4
    3498:	165d0500 	ldrbne	r0, [sp], -r0, lsl #10
    349c:	7b0e0000 	blvc	3834a4 <_Min_Stack_Size+0x3830a4>
    34a0:	b1000000 	mrslt	r0, (UNDEF: 0)
    34a4:	0f000016 	svceq	0x00000016
    34a8:	000000c3 	andeq	r0, r0, r3, asr #1
    34ac:	6f280013 	svcvs	0x00280013
    34b0:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    34b4:	9c0101e4 	stflss	f0, [r1], {228}	; 0xe4
    34b8:	02000016 	andeq	r0, r0, #22
    34bc:	195e0305 	ldmdbne	lr, {r0, r2, r8, r9}^
    34c0:	a4210800 	strtge	r0, [r1], #-2048	; 0xfffff800
    34c4:	0400000f 	streq	r0, [r0], #-15
    34c8:	0101e505 	tsteq	r1, r5, lsl #10
    34cc:	00001704 	andeq	r1, r0, r4, lsl #14
    34d0:	0011d314 	andseq	sp, r1, r4, lsl r3
    34d4:	01e50500 	mvneq	r0, r0, lsl #10
    34d8:	00005e01 	andeq	r5, r0, r1, lsl #28
    34dc:	00230200 	eoreq	r0, r3, r0, lsl #4
    34e0:	0010df14 	andseq	sp, r0, r4, lsl pc
    34e4:	01e50500 	mvneq	r0, r0, lsl #10
    34e8:	00005e01 	andeq	r5, r0, r1, lsl #28
    34ec:	01230200 			; <UNDEFINED> instruction: 0x01230200
    34f0:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    34f4:	01e50500 	mvneq	r0, r0, lsl #10
    34f8:	0015d101 	andseq	sp, r5, r1, lsl #2
    34fc:	02230200 	eoreq	r0, r3, #0, 4
    3500:	16c50500 	strbne	r0, [r5], r0, lsl #10
    3504:	a4280000 	strtge	r0, [r8], #-0
    3508:	0500000f 	streq	r0, [r0, #-15]
    350c:	040101e5 	streq	r0, [r1], #-485	; 0xfffffe1b
    3510:	02000017 	andeq	r0, r0, #23
    3514:	19880305 	stmibne	r8, {r0, r2, r8, r9}
    3518:	07210800 	streq	r0, [r1, -r0, lsl #16]!
    351c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    3520:	0101e605 	tsteq	r1, r5, lsl #12
    3524:	0000175c 	andeq	r1, r0, ip, asr r7
    3528:	0011d314 	andseq	sp, r1, r4, lsl r3
    352c:	01e60500 	mvneq	r0, r0, lsl #10
    3530:	00005e01 	andeq	r5, r0, r1, lsl #28
    3534:	00230200 	eoreq	r0, r3, r0, lsl #4
    3538:	0010df14 	andseq	sp, r0, r4, lsl pc
    353c:	01e60500 	mvneq	r0, r0, lsl #10
    3540:	00005e01 	andeq	r5, r0, r1, lsl #28
    3544:	01230200 			; <UNDEFINED> instruction: 0x01230200
    3548:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    354c:	01e60500 	mvneq	r0, r0, lsl #10
    3550:	00176101 	andseq	r6, r7, r1, lsl #2
    3554:	02230200 	eoreq	r0, r3, #0, 4
    3558:	171d0500 	ldrne	r0, [sp, -r0, lsl #10]
    355c:	7b0e0000 	blvc	383564 <_Min_Stack_Size+0x383164>
    3560:	71000000 	mrsvc	r0, (UNDEF: 0)
    3564:	0f000017 	svceq	0x00000017
    3568:	000000c3 	andeq	r0, r0, r3, asr #1
    356c:	07280002 	streq	r0, [r8, -r2]!
    3570:	0500000b 	streq	r0, [r0, #-11]
    3574:	5c0101e6 	stfpls	f0, [r1], {230}	; 0xe6
    3578:	02000017 	andeq	r0, r0, #23
    357c:	198c0305 	stmibne	ip, {r0, r2, r8, r9}
    3580:	16210800 	strtne	r0, [r1], -r0, lsl #16
    3584:	1000000e 	andne	r0, r0, lr
    3588:	0101e705 	tsteq	r1, r5, lsl #14
    358c:	000017c4 	andeq	r1, r0, r4, asr #15
    3590:	0011d314 	andseq	sp, r1, r4, lsl r3
    3594:	01e70500 	mvneq	r0, r0, lsl #10
    3598:	00005e01 	andeq	r5, r0, r1, lsl #28
    359c:	00230200 	eoreq	r0, r3, r0, lsl #4
    35a0:	0010df14 	andseq	sp, r0, r4, lsl pc
    35a4:	01e70500 	mvneq	r0, r0, lsl #10
    35a8:	00005e01 	andeq	r5, r0, r1, lsl #28
    35ac:	01230200 			; <UNDEFINED> instruction: 0x01230200
    35b0:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    35b4:	01e70500 	mvneq	r0, r0, lsl #10
    35b8:	0017c901 	andseq	ip, r7, r1, lsl #18
    35bc:	02230200 	eoreq	r0, r3, #0, 4
    35c0:	17850500 	strne	r0, [r5, r0, lsl #10]
    35c4:	7b0e0000 	blvc	3835cc <_Min_Stack_Size+0x3831cc>
    35c8:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    35cc:	0f000017 	svceq	0x00000017
    35d0:	000000c3 	andeq	r0, r0, r3, asr #1
    35d4:	16280006 	strtne	r0, [r8], -r6
    35d8:	0500000e 	streq	r0, [r0, #-14]
    35dc:	c40101e7 	strgt	r0, [r1], #-487	; 0xfffffe19
    35e0:	02000017 	andeq	r0, r0, #23
    35e4:	19940305 	ldmibne	r4, {r0, r2, r8, r9}
    35e8:	ac210800 	stcge	8, cr0, [r1], #-0
    35ec:	08000011 	stmdaeq	r0, {r0, r4}
    35f0:	0101e805 	tsteq	r1, r5, lsl #16
    35f4:	0000182c 	andeq	r1, r0, ip, lsr #16
    35f8:	0011d314 	andseq	sp, r1, r4, lsl r3
    35fc:	01e80500 	mvneq	r0, r0, lsl #10
    3600:	00005e01 	andeq	r5, r0, r1, lsl #28
    3604:	00230200 	eoreq	r0, r3, r0, lsl #4
    3608:	0010df14 	andseq	sp, r0, r4, lsl pc
    360c:	01e80500 	mvneq	r0, r0, lsl #10
    3610:	00005e01 	andeq	r5, r0, r1, lsl #28
    3614:	01230200 			; <UNDEFINED> instruction: 0x01230200
    3618:	000f5a14 	andeq	r5, pc, r4, lsl sl	; <UNPREDICTABLE>
    361c:	01e80500 	mvneq	r0, r0, lsl #10
    3620:	00176101 	andseq	r6, r7, r1, lsl #2
    3624:	02230200 	eoreq	r0, r3, #0, 4
    3628:	17ed0500 	strbne	r0, [sp, r0, lsl #10]!
    362c:	ac280000 	stcge	0, cr0, [r8], #-0
    3630:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    3634:	2c0101e8 	stfcss	f0, [r1], {232}	; 0xe8
    3638:	02000018 	andeq	r0, r0, #24
    363c:	19a40305 	stmibne	r4!, {r0, r2, r8, r9}
    3640:	01290800 			; <UNDEFINED> instruction: 0x01290800
    3644:	0000050c 	andeq	r0, r0, ip, lsl #10
    3648:	06023805 	streq	r3, [r2], -r5, lsl #16
    364c:	08000eae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, sl, fp}
    3650:	08000eb2 	stmdaeq	r0, {r1, r4, r5, r7, r9, sl, fp}
    3654:	01007d02 	tsteq	r0, r2, lsl #26
    3658:	0000186a 	andeq	r1, r0, sl, ror #16
    365c:	000eb22a 	andeq	fp, lr, sl, lsr #4
    3660:	1c430108 	stfnee	f0, [r3], {8}
    3664:	2b000000 	blcs	366c <_Min_Stack_Size+0x326c>
    3668:	00013501 	andeq	r3, r1, r1, lsl #10
    366c:	02310500 	eorseq	r0, r1, #0, 10
    3670:	000e9c06 	andeq	r9, lr, r6, lsl #24
    3674:	000eae08 	andeq	sl, lr, r8, lsl #28
    3678:	00102208 	andseq	r2, r0, r8, lsl #4
    367c:	18a20100 	stmiane	r2!, {r8}
    3680:	a22c0000 	eorge	r0, ip, #0
    3684:	6f08000e 	svcvs	0x0008000e
    3688:	2c00001b 	stccs	0, cr0, [r0], {27}
    368c:	08000ea6 	stmdaeq	r0, {r1, r2, r5, r7, r9, sl, fp}
    3690:	000020f7 	strdeq	r2, [r0], -r7
    3694:	000eae2a 	andeq	sl, lr, sl, lsr #28
    3698:	21050108 	tstcs	r5, r8, lsl #2
    369c:	2b000000 	blcs	36a4 <_Min_Stack_Size+0x32a4>
    36a0:	00072101 	andeq	r2, r7, r1, lsl #2
    36a4:	022a0500 	eoreq	r0, sl, #0, 10
    36a8:	000d8006 	andeq	r8, sp, r6
    36ac:	000e9c08 	andeq	r9, lr, r8, lsl #24
    36b0:	00104e08 	andseq	r4, r0, r8, lsl #28
    36b4:	19950100 	ldmibne	r5, {r8}
    36b8:	852d0000 	strhi	r0, [sp, #-0]!
    36bc:	8600001d 			; <UNDEFINED> instruction: 0x8600001d
    36c0:	0108000d 	tsteq	r8, sp
    36c4:	08000d86 	stmdaeq	r0, {r1, r2, r7, r8, sl, fp}
    36c8:	08000e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp}
    36cc:	03022c05 	movweq	r2, #11269	; 0x2c05
    36d0:	00001978 	andeq	r1, r0, r8, ror r9
    36d4:	001d922e 	andseq	r9, sp, lr, lsr #4
    36d8:	000d9200 	andeq	r9, sp, r0, lsl #4
    36dc:	000da408 	andeq	sl, sp, r8, lsl #8
    36e0:	0018f608 	andseq	pc, r8, r8, lsl #12
    36e4:	1d972f00 	ldcne	15, cr2, [r7]
    36e8:	10820000 	addne	r0, r2, r0
    36ec:	107a0000 	rsbsne	r0, sl, r0
    36f0:	30000000 	andcc	r0, r0, r0
    36f4:	00001da4 	andeq	r1, r0, r4, lsr #27
    36f8:	00000198 	muleq	r0, r8, r1
    36fc:	00001911 	andeq	r1, r0, r1, lsl r9
    3700:	001da92f 	andseq	sl, sp, pc, lsr #18
    3704:	0010c500 	andseq	ip, r0, r0, lsl #10
    3708:	0010bf00 	andseq	fp, r0, r0, lsl #30
    370c:	46310000 	ldrtmi	r0, [r1], -r0
    3710:	2200001f 	andcs	r0, r0, #31
    3714:	0108000e 	tsteq	r8, lr
    3718:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    371c:	34032f01 	strcc	r2, [r3], #-3841	; 0xfffff0ff
    3720:	32000019 	andcc	r0, r0, #25
    3724:	00001f55 	andeq	r1, r0, r5, asr pc
    3728:	000010fd 	strdeq	r1, [r0], -sp
    372c:	000010fb 	strdeq	r1, [r0], -fp
    3730:	1db42e00 	ldcne	14, cr2, [r4]
    3734:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    3738:	0e1a0800 	cdpeq	8, 1, cr0, cr10, cr0, {0}
    373c:	19530800 	ldmdbne	r3, {fp}^
    3740:	b52f0000 	strlt	r0, [pc, #-0]!	; 3748 <_Min_Stack_Size+0x3348>
    3744:	1900001d 	stmdbne	r0, {r0, r2, r3, r4}
    3748:	11000011 	tstne	r0, r1, lsl r0
    374c:	00000011 	andeq	r0, r0, r1, lsl r0
    3750:	000d9233 	andeq	r9, sp, r3, lsr r2
    3754:	00211308 	eoreq	r1, r1, r8, lsl #6
    3758:	50013400 	andpl	r3, r1, r0, lsl #8
    375c:	34870902 	strcc	r0, [r7], #2306	; 0x902
    3760:	31015101 	tstcc	r1, r1, lsl #2
    3764:	02520134 	subseq	r0, r2, #52, 2
    3768:	01346408 	teqeq	r4, r8, lsl #8
    376c:	11030553 	tstne	r3, r3, asr r5
    3770:	0008000a 	andeq	r0, r8, sl
    3774:	0d862c00 	stceq	12, cr2, [r6]
    3778:	1b9e0800 	blne	fe785780 <BootRAM+0xd6f5f21>
    377c:	7c2c0000 	stcvc	0, cr0, [ip], #-0
    3780:	2108000e 	tstcs	r8, lr
    3784:	2a000021 	bcs	3810 <_Min_Stack_Size+0x3410>
    3788:	08000e84 	stmdaeq	r0, {r2, r7, r9, sl, fp}
    378c:	00212f01 	eoreq	r2, r1, r1, lsl #30
    3790:	01350000 	teqeq	r5, r0
    3794:	00000951 	andeq	r0, r0, r1, asr r9
    3798:	06022205 	streq	r2, [r2], -r5, lsl #4
    379c:	00108c01 	andseq	r8, r0, r1, lsl #24
    37a0:	000d4e00 	andeq	r4, sp, r0, lsl #28
    37a4:	000d8008 	andeq	r8, sp, r8
    37a8:	00115b08 	andseq	r5, r1, r8, lsl #22
    37ac:	1a510100 	bne	1443bb4 <_Min_Stack_Size+0x14437b4>
    37b0:	72360000 	eorsvc	r0, r6, #0
    37b4:	05007165 	streq	r7, [r0, #-357]	; 0xfffffe9b
    37b8:	51270222 			; <UNDEFINED> instruction: 0x51270222
    37bc:	7f00001a 	svcvc	0x0000001a
    37c0:	7b000011 	blvc	380c <_Min_Stack_Size+0x340c>
    37c4:	37000011 	smladcc	r0, r1, r0, r0
    37c8:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    37cc:	35022205 	strcc	r2, [r2, #-517]	; 0xfffffdfb
    37d0:	0000007b 	andeq	r0, r0, fp, ror r0
    37d4:	000011a1 	andeq	r1, r0, r1, lsr #3
    37d8:	0000119d 	muleq	r0, sp, r1
    37dc:	00083b37 	andeq	r3, r8, r7, lsr fp
    37e0:	02220500 	eoreq	r0, r2, #0, 10
    37e4:	00007b46 	andeq	r7, r0, r6, asr #22
    37e8:	0011c600 	andseq	ip, r1, r0, lsl #12
    37ec:	0011c200 	andseq	ip, r1, r0, lsl #4
    37f0:	0d5a3800 	ldcleq	8, cr3, [sl, #-0]
    37f4:	1bb30800 	blne	fecc57fc <BootRAM+0xdc35f9d>
    37f8:	1a140000 	bne	503800 <_Min_Stack_Size+0x503400>
    37fc:	01340000 	teqeq	r4, r0
    3800:	00740250 	rsbseq	r0, r4, r0, asr r2
    3804:	02510134 	subseq	r0, r1, #52, 2
    3808:	01340075 	teqeq	r4, r5, ror r0
    380c:	00760252 	rsbseq	r0, r6, r2, asr r2
    3810:	0d6a3800 	stcleq	8, cr3, [sl, #-0]
    3814:	213d0800 	teqcs	sp, r0, lsl #16
    3818:	1a340000 	bne	d03820 <_Min_Stack_Size+0xd03420>
    381c:	01340000 	teqeq	r4, r0
    3820:	00740250 	rsbseq	r0, r4, r0, asr r2
    3824:	02510134 	subseq	r0, r1, #52, 2
    3828:	01340075 	teqeq	r4, r5, ror r0
    382c:	00760252 	rsbseq	r0, r6, r2, asr r2
    3830:	0d783300 	ldcleq	3, cr3, [r8, #-0]
    3834:	214b0800 	cmpcs	fp, r0, lsl #16
    3838:	01340000 	teqeq	r4, r0
    383c:	00740250 	rsbseq	r0, r4, r0, asr r2
    3840:	02510134 	subseq	r0, r1, #52, 2
    3844:	01340075 	teqeq	r4, r5, ror r0
    3848:	00760252 	rsbseq	r0, r6, r2, asr r2
    384c:	041b0000 	ldreq	r0, [fp], #-0
    3850:	0000011f 	andeq	r0, r0, pc, lsl r1
    3854:	08090135 	stmdaeq	r9, {r0, r2, r4, r5, r8}
    3858:	1a050000 	bne	143860 <_Min_Stack_Size+0x143460>
    385c:	8c010602 	stchi	6, cr0, [r1], {2}
    3860:	20000010 	andcs	r0, r0, r0, lsl r0
    3864:	4e08000d 	cdpmi	0, 0, cr0, cr8, cr13, {0}
    3868:	e708000d 	str	r0, [r8, -sp]
    386c:	01000011 	tsteq	r0, r1, lsl r0
    3870:	00001b07 	andeq	r1, r0, r7, lsl #22
    3874:	71657236 	cmnvc	r5, r6, lsr r2
    3878:	021a0500 	andseq	r0, sl, #0, 10
    387c:	001a5126 	andseq	r5, sl, r6, lsr #2
    3880:	00120b00 	andseq	r0, r2, r0, lsl #22
    3884:	00120700 	andseq	r0, r2, r0, lsl #14
    3888:	0b023700 	bleq	91490 <_Min_Stack_Size+0x91090>
    388c:	1a050000 	bne	143894 <_Min_Stack_Size+0x143494>
    3890:	1b073202 	blne	1d00a0 <_Min_Stack_Size+0x1cfca0>
    3894:	12310000 	eorsne	r0, r1, #0
    3898:	12290000 	eorne	r0, r9, #0
    389c:	af370000 	svcge	0x00370000
    38a0:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    38a4:	0d42021a 	sfmeq	f0, 2, [r2, #-104]	; 0xffffff98
    38a8:	6d00001b 	stcvs	0, cr0, [r0, #-108]	; 0xffffff94
    38ac:	65000012 	strvs	r0, [r0, #-18]	; 0xffffffee
    38b0:	38000012 	stmdacc	r0, {r1, r4}
    38b4:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
    38b8:	00001bf9 	strdeq	r1, [r0], -r9
    38bc:	00001ad6 	ldrdeq	r1, [r0], -r6
    38c0:	02500134 	subseq	r0, r0, #52, 2
    38c4:	01340074 	teqeq	r4, r4, ror r0
    38c8:	00710251 	rsbseq	r0, r1, r1, asr r2
    38cc:	02520134 	subseq	r0, r2, #52, 2
    38d0:	38000072 	stmdacc	r0, {r1, r4, r5, r6}
    38d4:	08000d38 	stmdaeq	r0, {r3, r4, r5, r8, sl, fp}
    38d8:	00002159 	andeq	r2, r0, r9, asr r1
    38dc:	00001aea 	andeq	r1, r0, sl, ror #21
    38e0:	02500134 	subseq	r0, r0, #52, 2
    38e4:	33000074 	movwcc	r0, #116	; 0x74
    38e8:	08000d46 	stmdaeq	r0, {r1, r2, r6, r8, sl, fp}
    38ec:	00002167 	andeq	r2, r0, r7, ror #2
    38f0:	02500134 	subseq	r0, r0, #52, 2
    38f4:	01340074 	teqeq	r4, r4, ror r0
    38f8:	00750251 	rsbseq	r0, r5, r1, asr r2
    38fc:	02520134 	subseq	r0, r2, #52, 2
    3900:	00000076 	andeq	r0, r0, r6, ror r0
    3904:	0b43041b 	bleq	10c4978 <_Min_Stack_Size+0x10c4578>
    3908:	041b0000 	ldreq	r0, [fp], #-0
    390c:	0000007b 	andeq	r0, r0, fp, ror r0
    3910:	06110139 			; <UNDEFINED> instruction: 0x06110139
    3914:	eb050000 	bl	14391c <_Min_Stack_Size+0x14351c>
    3918:	84010601 	strhi	r0, [r1], #-1537	; 0xfffff9ff
    391c:	2008000c 	andcs	r0, r8, ip
    3920:	0208000d 	andeq	r0, r8, #13
    3924:	6201007d 	andvs	r0, r1, #125	; 0x7d
    3928:	3700001b 	smladcc	r0, fp, r0, r0
    392c:	00000623 	andeq	r0, r0, r3, lsr #12
    3930:	2701eb05 	strcs	lr, [r1, -r5, lsl #22]
    3934:	0000007b 	andeq	r0, r0, fp, ror r0
    3938:	000012a9 	andeq	r1, r0, r9, lsr #5
    393c:	000012a1 	andeq	r1, r0, r1, lsr #5
    3940:	000b023a 	andeq	r0, fp, sl, lsr r2
    3944:	01eb0500 	mvneq	r0, r0, lsl #10
    3948:	001b623b 	andseq	r6, fp, fp, lsr r2
    394c:	3a510100 	bcc	1443d54 <_Min_Stack_Size+0x1443954>
    3950:	000013af 	andeq	r1, r0, pc, lsr #7
    3954:	4b01eb05 	blmi	7e570 <_Min_Stack_Size+0x7e170>
    3958:	00001b0d 	andeq	r1, r0, sp, lsl #22
    395c:	1b005201 	blne	18168 <_Min_Stack_Size+0x17d68>
    3960:	001b6804 	andseq	r6, fp, r4, lsl #16
    3964:	6e041b00 	vmlavs.f64	d1, d4, d0
    3968:	3b00001b 	blcc	39dc <_Min_Stack_Size+0x35dc>
    396c:	0ae7013c 	beq	ff9c3e64 <BootRAM+0xe934605>
    3970:	57030000 	strpl	r0, [r3, -r0]
    3974:	000c6806 	andeq	r6, ip, r6, lsl #16
    3978:	000c8408 	andeq	r8, ip, r8, lsl #8
    397c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3980:	001b9e01 	andseq	r9, fp, r1, lsl #28
    3984:	1ec83d00 	cdpne	13, 12, cr3, cr8, cr0, {0}
    3988:	0c680000 	stcleq	0, cr0, [r8], #-0
    398c:	68020800 	stmdavs	r2, {fp}
    3990:	6c08000c 	stcvs	0, cr0, [r8], {12}
    3994:	0308000c 	movweq	r0, #32780	; 0x800c
    3998:	3e000658 	mcrcc	6, 0, r0, cr0, cr8, {2}
    399c:	00106101 	andseq	r6, r0, r1, lsl #2
    39a0:	064e0300 	strbeq	r0, [lr], -r0, lsl #6
    39a4:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
    39a8:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
    39ac:	01007d02 	tsteq	r0, r2, lsl #26
    39b0:	11a0013f 	lsrne	r0, pc, r1
    39b4:	34030000 	strcc	r0, [r3], #-0
    39b8:	108c0106 	addne	r0, ip, r6, lsl #2
    39bc:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    39c0:	4000001b 	andmi	r0, r0, fp, lsl r0
    39c4:	00716572 	rsbseq	r6, r1, r2, ror r5
    39c8:	51213403 			; <UNDEFINED> instruction: 0x51213403
    39cc:	4100001a 	tstmi	r0, sl, lsl r0
    39d0:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    39d4:	7b2f3403 	blvc	bd09e8 <_Min_Stack_Size+0xbd05e8>
    39d8:	41000000 	mrsmi	r0, (UNDEF: 0)
    39dc:	0000083b 	andeq	r0, r0, fp, lsr r8
    39e0:	7b403403 	blvc	10109f4 <_Min_Stack_Size+0x10105f4>
    39e4:	42000000 	andmi	r0, r0, #0
    39e8:	0000f943 	andeq	pc, r0, r3, asr #18
    39ec:	103d0300 	eorsne	r0, sp, r0, lsl #6
    39f0:	0000007b 	andeq	r0, r0, fp, ror r0
    39f4:	013f0000 	teqeq	pc, r0
    39f8:	0000103b 	andeq	r1, r0, fp, lsr r0
    39fc:	01061d03 	tsteq	r6, r3, lsl #26
    3a00:	0000108c 	andeq	r1, r0, ip, lsl #1
    3a04:	001c4301 	andseq	r4, ip, r1, lsl #6
    3a08:	65724000 	ldrbvs	r4, [r2, #-0]!
    3a0c:	1d030071 	stcne	0, cr0, [r3, #-452]	; 0xfffffe3c
    3a10:	001a5120 	andseq	r5, sl, r0, lsr #2
    3a14:	0b024100 	bleq	93e1c <_Min_Stack_Size+0x93a1c>
    3a18:	1d030000 	stcne	0, cr0, [r3, #-0]
    3a1c:	001b072c 	andseq	r0, fp, ip, lsr #14
    3a20:	13af4100 			; <UNDEFINED> instruction: 0x13af4100
    3a24:	1d030000 	stcne	0, cr0, [r3, #-0]
    3a28:	001b0d3c 	andseq	r0, fp, ip, lsr sp
    3a2c:	0cba2700 	ldceq	7, cr2, [sl]
    3a30:	27030000 	strcs	r0, [r3, -r0]
    3a34:	0014bf15 	andseq	fp, r4, r5, lsl pc
    3a38:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    3a3c:	00200000 	eoreq	r0, r0, r0
    3a40:	0b37013e 	bleq	dc3f40 <_Min_Stack_Size+0xdc3b40>
    3a44:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    3a48:	000b0c06 	andeq	r0, fp, r6, lsl #24
    3a4c:	000b7008 	andeq	r7, fp, r8
    3a50:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3a54:	b0014401 	andlt	r4, r1, r1, lsl #8
    3a58:	0100000d 	tsteq	r0, sp
    3a5c:	0a8e0658 	beq	fe3853c4 <BootRAM+0xd2f5b65>
    3a60:	0b0c0800 	bleq	305a68 <_Min_Stack_Size+0x305668>
    3a64:	12e30800 	rscne	r0, r3, #0, 16
    3a68:	cf010000 	svcgt	0x00010000
    3a6c:	2700001c 	smladcs	r0, ip, r0, r0
    3a70:	0000113a 	andeq	r1, r0, sl, lsr r1
    3a74:	5e125901 	vnmlspl.f16	s10, s4, s2	; <UNPREDICTABLE>
    3a78:	05000000 	streq	r0, [r0, #-0]
    3a7c:	00003d03 	andeq	r3, r0, r3, lsl #26
    3a80:	0f622720 	svceq	0x00622720
    3a84:	5a010000 	bpl	43a8c <_Min_Stack_Size+0x4368c>
    3a88:	00007b13 	andeq	r7, r0, r3, lsl fp
    3a8c:	3e030500 	cfsh32cc	mvfx0, mvfx3, #0
    3a90:	45200000 	strmi	r0, [r0, #-0]!
    3a94:	000011ce 	andeq	r1, r0, lr, asr #3
    3a98:	7b0c6401 	blvc	31caa4 <_Min_Stack_Size+0x31c6a4>
    3a9c:	05000000 	streq	r0, [r0, #-0]
    3aa0:	03000013 	movweq	r0, #19
    3aa4:	45000013 	strmi	r0, [r0, #-19]	; 0xffffffed
    3aa8:	00000e8c 	andeq	r0, r0, ip, lsl #29
    3aac:	440b6501 	strmi	r6, [fp], #-1281	; 0xfffffaff
    3ab0:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    3ab4:	18000013 	stmdane	r0, {r0, r1, r4}
    3ab8:	33000013 	movwcc	r0, #19
    3abc:	08000abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp}
    3ac0:	00001cfb 	strdeq	r1, [r0], -fp
    3ac4:	02500134 	subseq	r0, r0, #52, 2
    3ac8:	00000074 	andeq	r0, r0, r4, ror r0
    3acc:	0cec013f 	stfeqe	f0, [ip], #252	; 0xfc
    3ad0:	50010000 	andpl	r0, r1, r0
    3ad4:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    3ad8:	fb010000 	blx	43ae2 <_Min_Stack_Size+0x436e2>
    3adc:	4100001c 	tstmi	r0, ip, lsl r0
    3ae0:	00000f62 	andeq	r0, r0, r2, ror #30
    3ae4:	7b205001 	blvc	817af0 <_Min_Stack_Size+0x8176f0>
    3ae8:	43000000 	movwmi	r0, #0
    3aec:	00000d94 	muleq	r0, r4, sp
    3af0:	98135101 	ldmdals	r3, {r0, r8, ip, lr}
    3af4:	00000000 	andeq	r0, r0, r0
    3af8:	0d910146 	ldfeqs	f0, [r1, #280]	; 0x118
    3afc:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    3b00:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    3b04:	0a740000 	beq	1d03b0c <_Min_Stack_Size+0x1d0370c>
    3b08:	0a8c0800 	beq	fe305b10 <BootRAM+0xd2762b1>
    3b0c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3b10:	1d400100 	stfnee	f0, [r0, #-0]
    3b14:	62470000 	subvs	r0, r7, #0
    3b18:	0100000f 	tsteq	r0, pc
    3b1c:	007b1d49 	rsbseq	r1, fp, r9, asr #26
    3b20:	136d0000 	cmnne	sp, #0
    3b24:	13690000 	cmnne	r9, #0
    3b28:	94270000 	strtls	r0, [r7], #-0
    3b2c:	0100000d 	tsteq	r0, sp
    3b30:	0098134a 	addseq	r1, r8, sl, asr #6
    3b34:	03050000 	movweq	r0, #20480	; 0x5000
    3b38:	20000008 	andcs	r0, r0, r8
    3b3c:	10014600 	andne	r4, r1, r0, lsl #12
    3b40:	01000012 	tsteq	r0, r2, lsl r0
    3b44:	7b010a42 	blvc	46454 <_Min_Stack_Size+0x46054>
    3b48:	5c000000 	stcpl	0, cr0, [r0], {-0}
    3b4c:	7408000a 	strvc	r0, [r8], #-10
    3b50:	0208000a 	andeq	r0, r8, #10
    3b54:	8501007d 	strhi	r0, [r1, #-125]	; 0xffffff83
    3b58:	4700001d 	smladmi	r0, sp, r0, r0
    3b5c:	00000f62 	andeq	r0, r0, r2, ror #30
    3b60:	7b214201 	blvc	85436c <_Min_Stack_Size+0x853f6c>
    3b64:	92000000 	andls	r0, r0, #0
    3b68:	8e000013 	mcrhi	0, 0, r0, cr0, cr3, {0}
    3b6c:	27000013 	smladcs	r0, r3, r0, r0
    3b70:	00000d94 	muleq	r0, r4, sp
    3b74:	98134301 	ldmdals	r3, {r0, r8, r9, lr}
    3b78:	05000000 	streq	r0, [r0, #-0]
    3b7c:	00000403 	andeq	r0, r0, r3, lsl #8
    3b80:	fd480020 	stc2l	0, cr0, [r8, #-128]	; 0xffffff80
    3b84:	0100000e 	tsteq	r0, lr
    3b88:	c3010d1d 	movwgt	r0, #7453	; 0x1d1d
    3b8c:	4900001d 	stmdbmi	r0, {r0, r2, r3, r4}
    3b90:	00001da4 	andeq	r1, r0, r4, lsr #27
    3b94:	0000f943 	andeq	pc, r0, r3, asr #18
    3b98:	031f0100 	tsteq	pc, #0, 2
    3b9c:	00000098 	muleq	r0, r8, r0
    3ba0:	1db44900 			; <UNDEFINED> instruction: 0x1db44900
    3ba4:	694a0000 	stmdbvs	sl, {}^	; <UNPREDICTABLE>
    3ba8:	10220100 	eorne	r0, r2, r0, lsl #2
    3bac:	0000007b 	andeq	r0, r0, fp, ror r0
    3bb0:	f9434200 			; <UNDEFINED> instruction: 0xf9434200
    3bb4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bb8:	0098032d 	addseq	r0, r8, sp, lsr #6
    3bbc:	00000000 	andeq	r0, r0, r0
    3bc0:	000dd24b 	andeq	sp, sp, fp, asr #4
    3bc4:	0d120100 	ldfeqs	f0, [r2, #-0]
    3bc8:	000a1001 	andeq	r1, sl, r1
    3bcc:	000a5c08 	andeq	r5, sl, r8, lsl #24
    3bd0:	0013b308 	andseq	fp, r3, r8, lsl #6
    3bd4:	1e510100 	rdfnes	f0, f1, f0
    3bd8:	41470000 	mrsmi	r0, (UNDEF: 71)
    3bdc:	01000009 	tsteq	r0, r9
    3be0:	005e2512 	subseq	r2, lr, r2, lsl r5
    3be4:	13d70000 	bicsne	r0, r7, #0
    3be8:	13d30000 	bicsne	r0, r3, #0
    3bec:	014c0000 	mrseq	r0, (UNDEF: 76)
    3bf0:	2400001f 	strcs	r0, [r0], #-31	; 0xffffffe1
    3bf4:	0008000a 	andeq	r0, r8, sl
    3bf8:	00000138 	andeq	r0, r0, r8, lsr r1
    3bfc:	32031301 	andcc	r1, r3, #67108864	; 0x4000000
    3c00:	00001f1b 	andeq	r1, r0, fp, lsl pc
    3c04:	000013fa 	strdeq	r1, [r0], -sl
    3c08:	000013f8 	strdeq	r1, [r0], -r8
    3c0c:	001f2732 	andseq	r2, pc, r2, lsr r7	; <UNPREDICTABLE>
    3c10:	00141400 	andseq	r1, r4, r0, lsl #8
    3c14:	00141200 	andseq	r1, r4, r0, lsl #4
    3c18:	1f0f3200 	svcne	0x000f3200
    3c1c:	14360000 	ldrtne	r0, [r6], #-0
    3c20:	14300000 	ldrtne	r0, [r0], #-0
    3c24:	384d0000 	stmdacc	sp, {}^	; <UNPREDICTABLE>
    3c28:	2f000001 	svccs	0x00000001
    3c2c:	00001f33 	andeq	r1, r0, r3, lsr pc
    3c30:	00001466 	andeq	r1, r0, r6, ror #8
    3c34:	00001462 	andeq	r1, r0, r2, ror #8
    3c38:	000a4c33 	andeq	r4, sl, r3, lsr ip
    3c3c:	00217508 	eoreq	r7, r1, r8, lsl #10
    3c40:	51013400 	tstpl	r1, r0, lsl #8
    3c44:	029e0305 	addseq	r0, lr, #335544320	; 0x14000000
    3c48:	00002000 	andeq	r2, r0, r0
    3c4c:	914e0000 	mrsls	r0, (UNDEF: 78)
    3c50:	0100000c 	tsteq	r0, ip
    3c54:	4f010d0c 	svcmi	0x00010d0c
    3c58:	00001089 	andeq	r1, r0, r9, lsl #1
    3c5c:	010d0b01 	tsteq	sp, r1, lsl #22
    3c60:	0000108c 	andeq	r1, r0, ip, lsl #1
    3c64:	001e9101 	andseq	r9, lr, r1, lsl #2
    3c68:	65724000 	ldrbvs	r4, [r2, #-0]!
    3c6c:	0b010071 	bleq	43e38 <_Min_Stack_Size+0x43a38>
    3c70:	001a5128 	andseq	r5, sl, r8, lsr #2
    3c74:	0f9d4100 	svceq	0x009d4100
    3c78:	0b010000 	bleq	43c80 <_Min_Stack_Size+0x43880>
    3c7c:	00007b36 	andeq	r7, r0, r6, lsr fp
    3c80:	083b4100 	ldmdaeq	fp!, {r8, lr}
    3c84:	0b010000 	bleq	43c8c <_Min_Stack_Size+0x4388c>
    3c88:	00007b47 	andeq	r7, r0, r7, asr #22
    3c8c:	214f0000 	mrscs	r0, SPSR
    3c90:	0100000f 	tsteq	r0, pc
    3c94:	8c010d0a 	stchi	13, cr0, [r1], {10}
    3c98:	01000010 	tsteq	r0, r0, lsl r0
    3c9c:	00001ec8 	andeq	r1, r0, r8, asr #29
    3ca0:	71657240 	cmnvc	r5, r0, asr #4
    3ca4:	270a0100 	strcs	r0, [sl, -r0, lsl #2]
    3ca8:	00001a51 	andeq	r1, r0, r1, asr sl
    3cac:	000b0241 	andeq	r0, fp, r1, asr #4
    3cb0:	330a0100 	movwcc	r0, #41216	; 0xa100
    3cb4:	00001b07 	andeq	r1, r0, r7, lsl #22
    3cb8:	0013af41 	andseq	sl, r3, r1, asr #30
    3cbc:	430a0100 	movwmi	r0, #41216	; 0xa100
    3cc0:	00001b0d 	andeq	r1, r0, sp, lsl #22
    3cc4:	86015000 	strhi	r5, [r1], -r0
    3cc8:	0400000d 	streq	r0, [r0], #-13
    3ccc:	00981106 	addseq	r1, r8, r6, lsl #2
    3cd0:	4f030000 	svcmi	0x00030000
    3cd4:	000006f8 	strdeq	r0, [r0], -r8
    3cd8:	0113c102 	tsteq	r3, r2, lsl #2
    3cdc:	000000b7 	strheq	r0, [r0], -r7
    3ce0:	001f0103 	andseq	r0, pc, r3, lsl #2
    3ce4:	09414100 	stmdbeq	r1, {r8, lr}^
    3ce8:	c1020000 	mrsgt	r0, (UNDEF: 2)
    3cec:	00005e27 	andeq	r5, r0, r7, lsr #28
    3cf0:	75624000 	strbvc	r4, [r2, #-0]!
    3cf4:	c1020066 	tstgt	r2, r6, rrx
    3cf8:	001b0d38 	andseq	r0, fp, r8, lsr sp
    3cfc:	4f510000 	svcmi	0x00510000
    3d00:	0200000b 	andeq	r0, r0, #11
    3d04:	030114b8 	movweq	r1, #5304	; 0x14b8
    3d08:	00001f40 	andeq	r1, r0, r0, asr #30
    3d0c:	00094141 	andeq	r4, r9, r1, asr #2
    3d10:	30b80200 	adcscc	r0, r8, r0, lsl #4
    3d14:	0000005e 	andeq	r0, r0, lr, asr r0
    3d18:	66756240 	ldrbtvs	r6, [r5], -r0, asr #4
    3d1c:	47b80200 	ldrmi	r0, [r8, r0, lsl #4]!
    3d20:	00001f40 	andeq	r1, r0, r0, asr #30
    3d24:	0013af41 	andseq	sl, r3, r1, asr #30
    3d28:	55b80200 	ldrpl	r0, [r8, #512]!	; 0x200
    3d2c:	0000007b 	andeq	r0, r0, fp, ror r0
    3d30:	7864694a 	stmdavc	r4!, {r1, r3, r6, r8, fp, sp, lr}^
    3d34:	0bba0200 	bleq	fee8453c <BootRAM+0xddf4cdd>
    3d38:	0000005e 	andeq	r0, r0, lr, asr r0
    3d3c:	8c041b00 			; <UNDEFINED> instruction: 0x8c041b00
    3d40:	52000000 	andpl	r0, r0, #0
    3d44:	000005d4 	ldrdeq	r0, [r0], -r4
    3d48:	1605de06 	strne	sp, [r5], -r6, lsl #28
    3d4c:	1f630301 	svcne	0x00630301
    3d50:	4a530000 	bmi	14c3d58 <_Min_Stack_Size+0x14c3958>
    3d54:	06000007 	streq	r0, [r0], -r7
    3d58:	a22f05de 	eorge	r0, pc, #931135488	; 0x37800000
    3d5c:	00000002 	andeq	r0, r0, r2
    3d60:	001ccf54 	andseq	ip, ip, r4, asr pc
    3d64:	000a8c00 	andeq	r8, sl, r0, lsl #24
    3d68:	000a8e08 	andeq	r8, sl, r8, lsl #28
    3d6c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3d70:	001f8001 	andseq	r8, pc, r1
    3d74:	1ce25500 	cfstr64ne	mvdx5, [r2]
    3d78:	50010000 	andpl	r0, r1, r0
    3d7c:	1bf95600 	blne	ffe59584 <BootRAM+0xedc9d25>
    3d80:	0b700000 	bleq	1c03d88 <_Min_Stack_Size+0x1c03988>
    3d84:	0bb80800 	bleq	fee05d8c <BootRAM+0xdd7652d>
    3d88:	148b0800 	strne	r0, [fp], #2048	; 0x800
    3d8c:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    3d90:	3200001f 	andcc	r0, r0, #31
    3d94:	00001c0c 	andeq	r1, r0, ip, lsl #24
    3d98:	000014b3 			; <UNDEFINED> instruction: 0x000014b3
    3d9c:	000014ab 	andeq	r1, r0, fp, lsr #9
    3da0:	001c1855 	andseq	r1, ip, r5, asr r8
    3da4:	55510100 	ldrbpl	r0, [r1, #-256]	; 0xffffff00
    3da8:	00001c24 	andeq	r1, r0, r4, lsr #24
    3dac:	f9575201 			; <UNDEFINED> instruction: 0xf9575201
    3db0:	9600001b 			; <UNDEFINED> instruction: 0x9600001b
    3db4:	0008000b 	andeq	r0, r8, fp
    3db8:	08000b96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, fp}
    3dbc:	08000bac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, fp}
    3dc0:	32061d03 	andcc	r1, r6, #3, 26	; 0xc0
    3dc4:	00001c24 	andeq	r1, r0, r4, lsr #24
    3dc8:	000014ef 	andeq	r1, r0, pc, ror #9
    3dcc:	000014ed 	andeq	r1, r0, sp, ror #9
    3dd0:	001c1832 	andseq	r1, ip, r2, lsr r8
    3dd4:	00150400 	andseq	r0, r5, r0, lsl #8
    3dd8:	00150200 	andseq	r0, r5, r0, lsl #4
    3ddc:	1c0c3200 	sfmne	f3, 4, [ip], {-0}
    3de0:	151b0000 	ldrne	r0, [fp, #-0]
    3de4:	15170000 	ldrne	r0, [r7, #-0]
    3de8:	96580000 	ldrbls	r0, [r8], -r0
    3dec:	ac08000b 	stcge	0, cr0, [r8], {11}
    3df0:	0008000b 	andeq	r0, r8, fp
    3df4:	1bb35600 	blne	fecd95fc <BootRAM+0xdc49d9d>
    3df8:	0bb80000 	bleq	fee03e00 <BootRAM+0xdd745a1>
    3dfc:	0c1c0800 	ldceq	8, cr0, [ip], {-0}
    3e00:	153c0800 	ldrne	r0, [ip, #-2048]!	; 0xfffff800
    3e04:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    3e08:	32000020 	andcc	r0, r0, #32
    3e0c:	00001bc6 	andeq	r1, r0, r6, asr #23
    3e10:	00001564 	andeq	r1, r0, r4, ror #10
    3e14:	0000155c 	andeq	r1, r0, ip, asr r5
    3e18:	001bd232 	andseq	sp, fp, r2, lsr r2
    3e1c:	0015a400 	andseq	sl, r5, r0, lsl #8
    3e20:	00159e00 	andseq	r9, r5, r0, lsl #28
    3e24:	1bde3200 	blne	ff79062c <BootRAM+0xe700dcd>
    3e28:	15d60000 	ldrbne	r0, [r6]
    3e2c:	15d00000 	ldrbne	r0, [r0]
    3e30:	68590000 	ldmdavs	r9, {}^	; <UNPREDICTABLE>
    3e34:	44000001 	strmi	r0, [r0], #-1
    3e38:	5a000020 	bpl	3ec0 <_Min_Stack_Size+0x3ac0>
    3e3c:	00001beb 	andeq	r1, r0, fp, ror #23
    3e40:	1bb35700 	blne	fecd9a48 <BootRAM+0xdc4a1e9>
    3e44:	0bcc0000 	bleq	ff303e4c <BootRAM+0xe2745ed>
    3e48:	cc000800 	stcgt	8, cr0, [r0], {-0}
    3e4c:	0408000b 	streq	r0, [r8], #-11
    3e50:	0308000c 	movweq	r0, #32780	; 0x800c
    3e54:	c6320634 			; <UNDEFINED> instruction: 0xc6320634
    3e58:	0600001b 			; <UNDEFINED> instruction: 0x0600001b
    3e5c:	02000016 	andeq	r0, r0, #22
    3e60:	32000016 	andcc	r0, r0, #22
    3e64:	00001bd2 	ldrdeq	r1, [r0], -r2
    3e68:	00001629 	andeq	r1, r0, r9, lsr #12
    3e6c:	00001627 	andeq	r1, r0, r7, lsr #12
    3e70:	001bde32 	andseq	sp, fp, r2, lsr lr
    3e74:	00164100 	andseq	r4, r6, r0, lsl #2
    3e78:	00163f00 	andseq	r3, r6, r0, lsl #30
    3e7c:	20355b00 	eorscs	r5, r5, r0, lsl #22
    3e80:	0bcc0000 	bleq	ff303e88 <BootRAM+0xe274629>
    3e84:	0c040800 	stceq	8, cr0, [r4], {-0}
    3e88:	eb2f0800 	bl	bc5e90 <_Min_Stack_Size+0xbc5a90>
    3e8c:	5d00001b 	stcpl	0, cr0, [r0, #-108]	; 0xffffff94
    3e90:	55000016 	strpl	r0, [r0, #-22]	; 0xffffffea
    3e94:	5c000016 	stcpl	0, cr0, [r0], {22}
    3e98:	00001ed6 	ldrdeq	r1, [r0], -r6
    3e9c:	08000bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp}
    3ea0:	000bcc02 	andeq	ip, fp, r2, lsl #24
    3ea4:	000bd608 	andeq	sp, fp, r8, lsl #12
    3ea8:	073a0308 	ldreq	r0, [sl, -r8, lsl #6]!
    3eac:	000020e3 	andeq	r2, r0, r3, ror #1
    3eb0:	001ee832 	andseq	lr, lr, r2, lsr r8
    3eb4:	0016ab00 	andseq	sl, r6, r0, lsl #22
    3eb8:	0016a900 	andseq	sl, r6, r0, lsl #18
    3ebc:	1ef43200 	cdpne	2, 15, cr3, cr4, cr0, {0}
    3ec0:	16c10000 	strbne	r0, [r1], r0
    3ec4:	16bf0000 	ldrtne	r0, [pc], r0
    3ec8:	d6330000 	ldrtle	r0, [r3], -r0
    3ecc:	8308000b 	movwhi	r0, #32779	; 0x800b
    3ed0:	34000021 	strcc	r0, [r0], #-33	; 0xffffffdf
    3ed4:	31015001 	tstcc	r1, r1
    3ed8:	02510134 	subseq	r0, r1, #52, 2
    3edc:	00000074 	andeq	r0, r0, r4, ror r0
    3ee0:	001ec85d 	andseq	ip, lr, sp, asr r8
    3ee4:	000bf800 	andeq	pc, fp, r0, lsl #16
    3ee8:	01800108 	orreq	r0, r0, r8, lsl #2
    3eec:	46030000 	strmi	r0, [r3], -r0
    3ef0:	00000015 	andeq	r0, r0, r5, lsl r0
    3ef4:	6701015e 	smlsdvs	r1, lr, r1, r0
    3ef8:	6700000e 	strvs	r0, [r0, -lr]
    3efc:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    3f00:	015e060a 	cmpeq	lr, sl, lsl #12
    3f04:	000e4501 	andeq	r4, lr, r1, lsl #10
    3f08:	000e4500 	andeq	r4, lr, r0, lsl #10
    3f0c:	060c0f00 	streq	r0, [ip], -r0, lsl #30
    3f10:	d501015e 	strle	r0, [r1, #-350]	; 0xfffffea2
    3f14:	d5000009 	strle	r0, [r0, #-9]
    3f18:	02000009 	andeq	r0, r0, #9
    3f1c:	015e062a 	cmpeq	lr, sl, lsr #12
    3f20:	00115801 	andseq	r5, r1, r1, lsl #16
    3f24:	00115800 	andseq	r5, r1, r0, lsl #16
    3f28:	06090e00 	streq	r0, [r9], -r0, lsl #28
    3f2c:	1001015e 	andne	r0, r1, lr, asr r1
    3f30:	1000000c 	andne	r0, r0, ip
    3f34:	0f00000c 	svceq	0x0000000c
    3f38:	015e060b 	cmpeq	lr, fp, lsl #12
    3f3c:	000d0f01 	andeq	r0, sp, r1, lsl #30
    3f40:	000d0f00 	andeq	r0, sp, r0, lsl #30
    3f44:	06080e00 	streq	r0, [r8], -r0, lsl #28
    3f48:	cc01015e 	stfgts	f0, [r1], {94}	; 0x5e
    3f4c:	cc00000e 	stcgt	0, cr0, [r0], {14}
    3f50:	0f00000e 	svceq	0x0000000e
    3f54:	015e060a 	cmpeq	lr, sl, lsl #12
    3f58:	000d4401 	andeq	r4, sp, r1, lsl #8
    3f5c:	000d4400 	andeq	r4, sp, r0, lsl #8
    3f60:	06070e00 	streq	r0, [r7], -r0, lsl #28
    3f64:	2201015e 	andcs	r0, r1, #-2147483625	; 0x80000017
    3f68:	2200000d 	andcs	r0, r0, #13
    3f6c:	0f00000d 	svceq	0x0000000d
    3f70:	015e0609 	cmpeq	lr, r9, lsl #12
    3f74:	0005a901 	andeq	sl, r5, r1, lsl #18
    3f78:	0005a900 	andeq	sl, r5, r0, lsl #18
    3f7c:	06b30200 	ldrteq	r0, [r3], r0, lsl #4
    3f80:	f701015e 			; <UNDEFINED> instruction: 0xf701015e
    3f84:	f7000006 			; <UNDEFINED> instruction: 0xf7000006
    3f88:	02000006 	andeq	r0, r0, #6
    3f8c:	550005c0 	strpl	r0, [r0, #-1472]	; 0xfffffa40
    3f90:	02000015 	andeq	r0, r0, #21
    3f94:	000d9600 	andeq	r9, sp, r0, lsl #12
    3f98:	55010400 	strpl	r0, [r1, #-1024]	; 0xfffffc00
    3f9c:	0c000003 	stceq	0, cr0, [r0], {3}
    3fa0:	00001313 	andeq	r1, r0, r3, lsl r3
    3fa4:	000000ca 	andeq	r0, r0, sl, asr #1
    3fa8:	08000eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp}
    3fac:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
    3fb0:	0000152a 	andeq	r1, r0, sl, lsr #10
    3fb4:	98060102 	stmdals	r6, {r1, r8}
    3fb8:	02000002 	andeq	r0, r0, #2
    3fbc:	02b10502 	adcseq	r0, r1, #8388608	; 0x800000
    3fc0:	04020000 	streq	r0, [r2], #-0
    3fc4:	00009305 	andeq	r9, r0, r5, lsl #6
    3fc8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    3fcc:	0000008e 	andeq	r0, r0, lr, lsl #1
    3fd0:	00073003 	andeq	r3, r7, r3
    3fd4:	182e0600 	stmdane	lr!, {r9, sl}
    3fd8:	00000052 	andeq	r0, r0, r2, asr r0
    3fdc:	00004104 	andeq	r4, r0, r4, lsl #2
    3fe0:	08010200 	stmdaeq	r1, {r9}
    3fe4:	00000296 	muleq	r0, r6, r2
    3fe8:	00014403 	andeq	r4, r1, r3, lsl #8
    3fec:	19310600 	ldmdbne	r1!, {r9, sl}
    3ff0:	0000006f 	andeq	r0, r0, pc, rrx
    3ff4:	00005904 	andeq	r5, r0, r4, lsl #18
    3ff8:	00590500 	subseq	r0, r9, r0, lsl #10
    3ffc:	02020000 	andeq	r0, r2, #0
    4000:	0001be07 	andeq	fp, r1, r7, lsl #28
    4004:	02f80300 	rscseq	r0, r8, #0, 6
    4008:	34060000 	strcc	r0, [r6], #-0
    400c:	00008719 	andeq	r8, r0, r9, lsl r7
    4010:	00760400 	rsbseq	r0, r6, r0, lsl #8
    4014:	04020000 	streq	r0, [r2], #-0
    4018:	00005e07 	andeq	r5, r0, r7, lsl #28
    401c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    4020:	00000059 	andeq	r0, r0, r9, asr r0
    4024:	69050406 	stmdbvs	r5, {r1, r2, sl}
    4028:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    402c:	00000095 	muleq	r0, r5, r0
    4030:	63070402 	movwvs	r0, #29698	; 0x7402
    4034:	07000000 	streq	r0, [r0, -r0]
    4038:	091e0308 	ldmdbeq	lr, {r3, r8, r9}
    403c:	000000fd 	strdeq	r0, [r0], -sp
    4040:	0004ad08 	andeq	sl, r4, r8, lsl #26
    4044:	0b1f0300 	bleq	7c4c4c <_Min_Stack_Size+0x7c484c>
    4048:	00000041 	andeq	r0, r0, r1, asr #32
    404c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    4050:	000008fc 	strdeq	r0, [r0], -ip
    4054:	410b2003 	tstmi	fp, r3
    4058:	02000000 	andeq	r0, r0, #0
    405c:	2a080123 	bcs	2044f0 <_Min_Stack_Size+0x2040f0>
    4060:	03000005 	movweq	r0, #5
    4064:	00590c21 	subseq	r0, r9, r1, lsr #24
    4068:	23020000 	movwcs	r0, #8192	; 0x2000
    406c:	04350802 	ldrteq	r0, [r5], #-2050	; 0xfffff7fe
    4070:	22030000 	andcs	r0, r3, #0
    4074:	0000590c 	andeq	r5, r0, ip, lsl #18
    4078:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    407c:	0008df08 	andeq	sp, r8, r8, lsl #30
    4080:	0c230300 	stceq	3, cr0, [r3], #-0
    4084:	00000059 	andeq	r0, r0, r9, asr r0
    4088:	00062302 	andeq	r2, r6, r2, lsl #6
    408c:	00096803 	andeq	r6, r9, r3, lsl #16
    4090:	02240300 	eoreq	r0, r4, #0, 6
    4094:	000000a8 	andeq	r0, r0, r8, lsr #1
    4098:	25010509 	strcs	r0, [r1, #-1289]	; 0xfffffaf7
    409c:	07000000 	streq	r0, [r0, -r0]
    40a0:	02800158 	addeq	r0, r0, #88, 2
    40a4:	cb0a0000 	blgt	2840ac <_Min_Stack_Size+0x283cac>
    40a8:	72000008 	andvc	r0, r0, #8
    40ac:	0005310a 	andeq	r3, r5, sl, lsl #2
    40b0:	730a7400 	movwvc	r7, #41984	; 0xa400
    40b4:	75000007 	strvc	r0, [r0, #-7]
    40b8:	0009ae0a 	andeq	sl, r9, sl, lsl #28
    40bc:	7b0a7600 	blvc	2a18c4 <_Min_Stack_Size+0x2a14c4>
    40c0:	7b000004 	blvc	40d8 <_Min_Stack_Size+0x3cd8>
    40c4:	00099c0a 	andeq	r9, r9, sl, lsl #24
    40c8:	000a7c00 	andeq	r7, sl, r0, lsl #24
    40cc:	7e000005 	cdpvc	0, 0, cr0, cr0, cr5, {0}
    40d0:	0009340a 	andeq	r3, r9, sl, lsl #8
    40d4:	4f0b7f00 	svcmi	0x000b7f00
    40d8:	00000007 	andeq	r0, r0, r7
    40dc:	00078c0b 	andeq	r8, r7, fp, lsl #24
    40e0:	560b0100 	strpl	r0, [fp], -r0, lsl #2
    40e4:	02000005 	andeq	r0, r0, #5
    40e8:	00065b0b 	andeq	r5, r6, fp, lsl #22
    40ec:	c80b0300 	stmdagt	fp, {r8, r9}
    40f0:	04000004 	streq	r0, [r0], #-4
    40f4:	0005210b 	andeq	r2, r5, fp, lsl #2
    40f8:	dd0b0500 	cfstr32le	mvfx0, [fp, #-0]
    40fc:	06000004 	streq	r0, [r0], -r4
    4100:	0008f10b 	andeq	pc, r8, fp, lsl #2
    4104:	850b0700 	strhi	r0, [fp, #-1792]	; 0xfffff900
    4108:	08000006 	stmdaeq	r0, {r1, r2}
    410c:	000a430b 	andeq	r4, sl, fp, lsl #6
    4110:	810b0900 	tsthi	fp, r0, lsl #18
    4114:	0a000007 	beq	4138 <_Min_Stack_Size+0x3d38>
    4118:	00070e0b 	andeq	r0, r7, fp, lsl #28
    411c:	8e0b0b00 	vmlahi.f64	d0, d11, d0
    4120:	0c000004 	stceq	0, cr0, [r0], {4}
    4124:	0007cd0b 	andeq	ip, r7, fp, lsl #26
    4128:	c10b0d00 	tstgt	fp, r0, lsl #26
    412c:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    4130:	000a180b 	andeq	r1, sl, fp, lsl #16
    4134:	d10b0f00 	tstle	fp, r0, lsl #30
    4138:	10000006 	andne	r0, r0, r6
    413c:	00045b0b 	andeq	r5, r4, fp, lsl #22
    4140:	900b1100 	andls	r1, fp, r0, lsl #2
    4144:	12000006 	andne	r0, r0, #6
    4148:	0009900b 	andeq	r9, r9, fp
    414c:	a40b1300 	strge	r1, [fp], #-768	; 0xfffffd00
    4150:	1400000a 	strne	r0, [r0], #-10
    4154:	000a320b 	andeq	r3, sl, fp, lsl #4
    4158:	e30b1500 	movw	r1, #46336	; 0xb500
    415c:	16000005 	strne	r0, [r0], -r5
    4160:	0009e80b 	andeq	lr, r9, fp, lsl #16
    4164:	510b1700 	tstpl	fp, r0, lsl #14
    4168:	19000004 	stmdbne	r0, {r2}
    416c:	0007440b 	andeq	r4, r7, fp, lsl #8
    4170:	2a0b1a00 	bcs	2ca978 <_Min_Stack_Size+0x2ca578>
    4174:	1b000004 	blne	418c <_Min_Stack_Size+0x3d8c>
    4178:	0009470b 	andeq	r4, r9, fp, lsl #14
    417c:	040b1c00 	streq	r1, [fp], #-3072	; 0xfffff400
    4180:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    4184:	0004840b 	andeq	r8, r4, fp, lsl #8
    4188:	ee0b1e00 	cdp	14, 0, cr1, cr11, cr0, {0}
    418c:	1f000007 	svcne	0x00000007
    4190:	0009270b 	andeq	r2, r9, fp, lsl #14
    4194:	9a0b2000 	bls	2cc19c <_Min_Stack_Size+0x2cbd9c>
    4198:	21000006 	tstcs	r0, r6
    419c:	00046e0b 	andeq	r6, r4, fp, lsl #28
    41a0:	9f0b2200 	svcls	0x000b2200
    41a4:	23000005 	movwcs	r0, #5
    41a8:	0009ff0b 	andeq	pc, r9, fp, lsl #30
    41ac:	b30b2400 	movwlt	r2, #46080	; 0xb400
    41b0:	25000008 	strcs	r0, [r0, #-8]
    41b4:	00063c0b 	andeq	r3, r6, fp, lsl #24
    41b8:	8e0b2600 	cfmadd32hi	mvax0, mvfx2, mvfx11, mvfx0
    41bc:	2700000a 	strcs	r0, [r0, -sl]
    41c0:	0004e80b 	andeq	lr, r4, fp, lsl #16
    41c4:	2c0b2800 	stccs	8, cr2, [fp], {-0}
    41c8:	29000008 	stmdbcs	r0, {r3}
    41cc:	00088e0b 	andeq	r8, r8, fp, lsl #28
    41d0:	b70b2a00 	strlt	r2, [fp, -r0, lsl #20]
    41d4:	2b000005 	blcs	41f0 <_Min_Stack_Size+0x3df0>
    41d8:	000a0e0b 	andeq	r0, sl, fp, lsl #28
    41dc:	c30b2c00 	movwgt	r2, #48128	; 0xbc00
    41e0:	2e000007 	cdpcs	0, 0, cr0, cr0, cr7, {0}
    41e4:	0006ac0b 	andeq	sl, r6, fp, lsl #24
    41e8:	e40b2f00 	str	r2, [fp], #-3840	; 0xfffff100
    41ec:	32000006 	andcc	r0, r0, #6
    41f0:	000a7b0b 	andeq	r7, sl, fp, lsl #22
    41f4:	b00b3300 	andlt	r3, fp, r0, lsl #6
    41f8:	34000007 	strcc	r0, [r0], #-7
    41fc:	0005830b 	andeq	r8, r5, fp, lsl #6
    4200:	140b3500 	strne	r3, [fp], #-1280	; 0xfffffb00
    4204:	36000009 	strcc	r0, [r0], -r9
    4208:	0006c30b 	andeq	ip, r6, fp, lsl #6
    420c:	03003800 	movweq	r3, #2048	; 0x800
    4210:	00000629 	andeq	r0, r0, r9, lsr #12
    4214:	09039807 	stmdbeq	r3, {r0, r1, r2, fp, ip, pc}
    4218:	0c000001 	stceq	0, cr0, [r0], {1}
    421c:	84050e04 	strhi	r0, [r5], #-3588	; 0xfffff1fc
    4220:	00036409 	andeq	r6, r3, r9, lsl #8
    4224:	05680800 	strbeq	r0, [r8, #-2048]!	; 0xfffff800
    4228:	86050000 	strhi	r0, [r5], -r0
    422c:	00037411 	andeq	r7, r3, r1, lsl r4
    4230:	00230200 	eoreq	r0, r3, r0, lsl #4
    4234:	00084808 	andeq	r4, r8, r8, lsl #16
    4238:	11870500 	orrne	r0, r7, r0, lsl #10
    423c:	00000379 	andeq	r0, r0, r9, ror r3
    4240:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    4244:	000009fa 	strdeq	r0, [r0], -sl
    4248:	74118805 	ldrvc	r8, [r1], #-2053	; 0xfffff7fb
    424c:	03000003 	movweq	r0, #3
    4250:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    4254:	00000596 	muleq	r0, r6, r5
    4258:	79118905 	ldmdbvc	r1, {r0, r2, r8, fp, pc}
    425c:	03000003 	movweq	r0, #3
    4260:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    4264:	00000a61 	andeq	r0, r0, r1, ror #20
    4268:	74118a05 	ldrvc	r8, [r1], #-2565	; 0xfffff5fb
    426c:	03000003 	movweq	r0, #3
    4270:	08028023 	stmdaeq	r2, {r0, r1, r5, pc}
    4274:	0000085c 	andeq	r0, r0, ip, asr r8
    4278:	79118b05 	ldmdbvc	r1, {r0, r2, r8, r9, fp, pc}
    427c:	03000003 	movweq	r0, #3
    4280:	0802a023 	stmdaeq	r2, {r0, r1, r5, sp, pc}
    4284:	000007ab 	andeq	r0, r0, fp, lsr #15
    4288:	74118c05 	ldrvc	r8, [r1], #-3077	; 0xfffff3fb
    428c:	03000003 	movweq	r0, #3
    4290:	08038023 	stmdaeq	r3, {r0, r1, r5, pc}
    4294:	00000866 	andeq	r0, r0, r6, ror #16
    4298:	79118d05 	ldmdbvc	r1, {r0, r2, r8, sl, fp, pc}
    429c:	03000003 	movweq	r0, #3
    42a0:	0803a023 	stmdaeq	r3, {r0, r1, r5, sp, pc}
    42a4:	00000a09 	andeq	r0, r0, r9, lsl #20
    42a8:	74118e05 	ldrvc	r8, [r1], #-3589	; 0xfffff1fb
    42ac:	03000003 	movweq	r0, #3
    42b0:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
    42b4:	00000870 	andeq	r0, r0, r0, ror r8
    42b8:	89118f05 	ldmdbhi	r1, {r0, r2, r8, r9, sl, fp, pc}
    42bc:	03000003 	movweq	r0, #3
    42c0:	0d04a023 	stceq	0, cr10, [r4, #-140]	; 0xffffff74
    42c4:	05005049 	streq	r5, [r0, #-73]	; 0xffffffb7
    42c8:	03a91190 			; <UNDEFINED> instruction: 0x03a91190
    42cc:	23030000 	movwcs	r0, #12288	; 0x3000
    42d0:	7a080680 	bvc	205cd8 <_Min_Stack_Size+0x2058d8>
    42d4:	05000008 	streq	r0, [r0, #-8]
    42d8:	03ae1191 			; <UNDEFINED> instruction: 0x03ae1191
    42dc:	23030000 	movwcs	r0, #12288	; 0x3000
    42e0:	270807f0 			; <UNDEFINED> instruction: 0x270807f0
    42e4:	05000008 	streq	r0, [r0, #-8]
    42e8:	00821192 	umulleq	r1, r2, r2, r1
    42ec:	23030000 	movwcs	r0, #12288	; 0x3000
    42f0:	0e001c80 	cdpeq	12, 0, cr1, cr0, cr0, {4}
    42f4:	00000082 	andeq	r0, r0, r2, lsl #1
    42f8:	00000374 	andeq	r0, r0, r4, ror r3
    42fc:	0000a10f 	andeq	sl, r0, pc, lsl #2
    4300:	04000700 	streq	r0, [r0], #-1792	; 0xfffff900
    4304:	00000364 	andeq	r0, r0, r4, ror #6
    4308:	0000760e 	andeq	r7, r0, lr, lsl #12
    430c:	00038900 	andeq	r8, r3, r0, lsl #18
    4310:	00a10f00 	adceq	r0, r1, r0, lsl #30
    4314:	00170000 	andseq	r0, r7, r0
    4318:	0000760e 	andeq	r7, r0, lr, lsl #12
    431c:	00039900 	andeq	r9, r3, r0, lsl #18
    4320:	00a10f00 	adceq	r0, r1, r0, lsl #30
    4324:	00370000 	eorseq	r0, r7, r0
    4328:	00004d0e 	andeq	r4, r0, lr, lsl #26
    432c:	0003a900 	andeq	sl, r3, r0, lsl #18
    4330:	00a10f00 	adceq	r0, r1, r0, lsl #30
    4334:	00ef0000 	rsceq	r0, pc, r0
    4338:	00039904 	andeq	r9, r3, r4, lsl #18
    433c:	00760e00 	rsbseq	r0, r6, r0, lsl #28
    4340:	03bf0000 			; <UNDEFINED> instruction: 0x03bf0000
    4344:	a1100000 	tstge	r0, r0
    4348:	83000000 	movwhi	r0, #0
    434c:	05030002 	streq	r0, [r3, #-2]
    4350:	05000009 	streq	r0, [r0, #-9]
    4354:	028c0493 	addeq	r0, ip, #-1828716544	; 0x93000000
    4358:	a4110000 	ldrge	r0, [r1], #-0
    435c:	05000002 	streq	r0, [r0, #-2]
    4360:	9c1506ce 	ldcls	6, cr0, [r5], {206}	; 0xce
    4364:	01000000 	mrseq	r0, (UNDEF: 0)
    4368:	017a1201 	cmneq	sl, r1, lsl #4
    436c:	4c080000 	stcmi	0, cr0, [r8], {-0}
    4370:	00007611 	andeq	r7, r0, r1, lsl r6
    4374:	13010100 	movwne	r0, #4352	; 0x1100
    4378:	014f072c 	cmpeq	pc, ip, lsr #14
    437c:	00049309 	andeq	r9, r4, r9, lsl #6
    4380:	00531400 	subseq	r1, r3, r0, lsl #8
    4384:	51070000 	mrspl	r0, (UNDEF: 7)
    4388:	00821101 	addeq	r1, r2, r1, lsl #2
    438c:	23020000 	movwcs	r0, #8192	; 0x2000
    4390:	00291400 	eoreq	r1, r9, r0, lsl #8
    4394:	52070000 	andpl	r0, r7, #0
    4398:	00821101 	addeq	r1, r2, r1, lsl #2
    439c:	23020000 	movwcs	r0, #8192	; 0x2000
    43a0:	015b1404 	cmpeq	fp, r4, lsl #8
    43a4:	53070000 	movwpl	r0, #28672	; 0x7000
    43a8:	00821101 	addeq	r1, r2, r1, lsl #2
    43ac:	23020000 	movwcs	r0, #8192	; 0x2000
    43b0:	00071408 	andeq	r1, r7, r8, lsl #8
    43b4:	54070000 	strpl	r0, [r7], #-0
    43b8:	00821101 	addeq	r1, r2, r1, lsl #2
    43bc:	23020000 	movwcs	r0, #8192	; 0x2000
    43c0:	4449150c 	strbmi	r1, [r9], #-1292	; 0xfffffaf4
    43c4:	55070052 	strpl	r0, [r7, #-82]	; 0xffffffae
    43c8:	00821101 	addeq	r1, r2, r1, lsl #2
    43cc:	23020000 	movwcs	r0, #8192	; 0x2000
    43d0:	444f1510 	strbmi	r1, [pc], #-1296	; 43d8 <_Min_Stack_Size+0x3fd8>
    43d4:	56070052 			; <UNDEFINED> instruction: 0x56070052
    43d8:	00821101 	addeq	r1, r2, r1, lsl #2
    43dc:	23020000 	movwcs	r0, #8192	; 0x2000
    43e0:	009c1414 	addseq	r1, ip, r4, lsl r4
    43e4:	57070000 	strpl	r0, [r7, -r0]
    43e8:	00821101 	addeq	r1, r2, r1, lsl #2
    43ec:	23020000 	movwcs	r0, #8192	; 0x2000
    43f0:	000d1418 	andeq	r1, sp, r8, lsl r4
    43f4:	58070000 	stmdapl	r7, {}	; <UNPREDICTABLE>
    43f8:	00821101 	addeq	r1, r2, r1, lsl #2
    43fc:	23020000 	movwcs	r0, #8192	; 0x2000
    4400:	4641151c 			; <UNDEFINED> instruction: 0x4641151c
    4404:	59070052 	stmdbpl	r7, {r1, r4, r6}
    4408:	04a31101 	strteq	r1, [r3], #257	; 0x101
    440c:	23020000 	movwcs	r0, #8192	; 0x2000
    4410:	52421520 	subpl	r1, r2, #32, 10	; 0x8000000
    4414:	5a070052 	bpl	1c4564 <_Min_Stack_Size+0x1c4164>
    4418:	00821101 	addeq	r1, r2, r1, lsl #2
    441c:	23020000 	movwcs	r0, #8192	; 0x2000
    4420:	820e0028 	andhi	r0, lr, #40	; 0x28
    4424:	a3000000 	movwge	r0, #0
    4428:	0f000004 	svceq	0x00000004
    442c:	000000a1 	andeq	r0, r0, r1, lsr #1
    4430:	93040001 	movwls	r0, #16385	; 0x4001
    4434:	16000004 	strne	r0, [r0], -r4
    4438:	00000197 	muleq	r0, r7, r1
    443c:	03015b07 	movweq	r5, #6919	; 0x1b07
    4440:	000003e8 	andeq	r0, r0, r8, ror #7
    4444:	93073813 	movwls	r3, #30739	; 0x7813
    4448:	059f0901 	ldreq	r0, [pc, #2305]	; 4d51 <_Min_Stack_Size+0x4951>
    444c:	43150000 	tstmi	r5, #0
    4450:	95070052 	strls	r0, [r7, #-82]	; 0xffffffae
    4454:	00821101 	addeq	r1, r2, r1, lsl #2
    4458:	23020000 	movwcs	r0, #8192	; 0x2000
    445c:	03291400 			; <UNDEFINED> instruction: 0x03291400
    4460:	96070000 	strls	r0, [r7], -r0
    4464:	00821101 	addeq	r1, r2, r1, lsl #2
    4468:	23020000 	movwcs	r0, #8192	; 0x2000
    446c:	02ed1404 	rsceq	r1, sp, #4, 8	; 0x4000000
    4470:	97070000 	strls	r0, [r7, -r0]
    4474:	00821101 	addeq	r1, r2, r1, lsl #2
    4478:	23020000 	movwcs	r0, #8192	; 0x2000
    447c:	49431508 	stmdbmi	r3, {r3, r8, sl, ip}^
    4480:	98070052 	stmdals	r7, {r1, r4, r6}
    4484:	00821101 	addeq	r1, r2, r1, lsl #2
    4488:	23020000 	movwcs	r0, #8192	; 0x2000
    448c:	0243140c 	subeq	r1, r3, #12, 8	; 0xc000000
    4490:	99070000 	stmdbls	r7, {}	; <UNPREDICTABLE>
    4494:	00821101 	addeq	r1, r2, r1, lsl #2
    4498:	23020000 	movwcs	r0, #8192	; 0x2000
    449c:	01051410 	tsteq	r5, r0, lsl r4
    44a0:	9a070000 	bls	1c44a8 <_Min_Stack_Size+0x1c40a8>
    44a4:	00821101 	addeq	r1, r2, r1, lsl #2
    44a8:	23020000 	movwcs	r0, #8192	; 0x2000
    44ac:	02501414 	subseq	r1, r0, #20, 8	; 0x14000000
    44b0:	9b070000 	blls	1c44b8 <_Min_Stack_Size+0x1c40b8>
    44b4:	00821101 	addeq	r1, r2, r1, lsl #2
    44b8:	23020000 	movwcs	r0, #8192	; 0x2000
    44bc:	03e81418 	mvneq	r1, #24, 8	; 0x18000000
    44c0:	9c070000 	stcls	0, cr0, [r7], {-0}
    44c4:	00821101 	addeq	r1, r2, r1, lsl #2
    44c8:	23020000 	movwcs	r0, #8192	; 0x2000
    44cc:	02d1141c 	sbcseq	r1, r1, #28, 8	; 0x1c000000
    44d0:	9d070000 	stcls	0, cr0, [r7, #-0]
    44d4:	00821101 	addeq	r1, r2, r1, lsl #2
    44d8:	23020000 	movwcs	r0, #8192	; 0x2000
    44dc:	03131420 	tsteq	r3, #32, 8	; 0x20000000
    44e0:	9e070000 	cdpls	0, 0, cr0, cr7, cr0, {0}
    44e4:	00821101 	addeq	r1, r2, r1, lsl #2
    44e8:	23020000 	movwcs	r0, #8192	; 0x2000
    44ec:	011d1424 	tsteq	sp, r4, lsr #8
    44f0:	9f070000 	svcls	0x00070000
    44f4:	00821101 	addeq	r1, r2, r1, lsl #2
    44f8:	23020000 	movwcs	r0, #8192	; 0x2000
    44fc:	01fa1428 	mvnseq	r1, r8, lsr #8
    4500:	a0070000 	andge	r0, r7, r0
    4504:	00821101 	addeq	r1, r2, r1, lsl #2
    4508:	23020000 	movwcs	r0, #8192	; 0x2000
    450c:	01d7142c 	bicseq	r1, r7, ip, lsr #8
    4510:	a1070000 	mrsge	r0, (UNDEF: 7)
    4514:	00821101 	addeq	r1, r2, r1, lsl #2
    4518:	23020000 	movwcs	r0, #8192	; 0x2000
    451c:	53431530 	movtpl	r1, #13616	; 0x3530
    4520:	a2070052 	andge	r0, r7, #82	; 0x52
    4524:	00821101 	addeq	r1, r2, r1, lsl #2
    4528:	23020000 	movwcs	r0, #8192	; 0x2000
    452c:	a4160034 	ldrge	r0, [r6], #-52	; 0xffffffcc
    4530:	07000001 	streq	r0, [r0, -r1]
    4534:	b50301a3 	strlt	r0, [r3, #-419]	; 0xfffffe5d
    4538:	13000004 	movwne	r0, #4
    453c:	0228071c 	eoreq	r0, r8, #28, 14	; 0x700000
    4540:	00062509 	andeq	r2, r6, r9, lsl #10
    4544:	52531500 	subspl	r1, r3, #0, 10
    4548:	022a0700 	eoreq	r0, sl, #0, 14
    454c:	00008211 	andeq	r8, r0, r1, lsl r2
    4550:	00230200 	eoreq	r0, r3, r0, lsl #4
    4554:	00524415 	subseq	r4, r2, r5, lsl r4
    4558:	11022b07 	tstne	r2, r7, lsl #22
    455c:	00000082 	andeq	r0, r0, r2, lsl #1
    4560:	15042302 	strne	r2, [r4, #-770]	; 0xfffffcfe
    4564:	00525242 	subseq	r5, r2, r2, asr #4
    4568:	11022c07 	tstne	r2, r7, lsl #24
    456c:	00000082 	andeq	r0, r0, r2, lsl #1
    4570:	15082302 	strne	r2, [r8, #-770]	; 0xfffffcfe
    4574:	00315243 	eorseq	r5, r1, r3, asr #4
    4578:	11022d07 	tstne	r2, r7, lsl #26
    457c:	00000082 	andeq	r0, r0, r2, lsl #1
    4580:	150c2302 	strne	r2, [ip, #-770]	; 0xfffffcfe
    4584:	00325243 	eorseq	r5, r2, r3, asr #4
    4588:	11022e07 	tstne	r2, r7, lsl #28
    458c:	00000082 	andeq	r0, r0, r2, lsl #1
    4590:	15102302 	ldrne	r2, [r0, #-770]	; 0xfffffcfe
    4594:	00335243 	eorseq	r5, r3, r3, asr #4
    4598:	11022f07 	tstne	r2, r7, lsl #30
    459c:	00000082 	andeq	r0, r0, r2, lsl #1
    45a0:	14142302 	ldrne	r2, [r4], #-770	; 0xfffffcfe
    45a4:	00001280 	andeq	r1, r0, r0, lsl #5
    45a8:	11023007 	tstne	r2, r7
    45ac:	00000082 	andeq	r0, r0, r2, lsl #1
    45b0:	00182302 	andseq	r2, r8, r2, lsl #6
    45b4:	0012ae16 	andseq	sl, r2, r6, lsl lr
    45b8:	02310700 	eorseq	r0, r1, #0, 14
    45bc:	0005ac03 	andeq	sl, r5, r3, lsl #24
    45c0:	07541300 	ldrbeq	r1, [r4, -r0, lsl #6]
    45c4:	dd090237 	sfmle	f0, 4, [r9, #-220]	; 0xffffff24
    45c8:	14000007 	strne	r0, [r0], #-7
    45cc:	00000656 	andeq	r0, r0, r6, asr r6
    45d0:	11023907 	tstne	r2, r7, lsl #18
    45d4:	00000065 	andeq	r0, r0, r5, rrx
    45d8:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    45dc:	00000848 	andeq	r0, r0, r8, asr #16
    45e0:	11023a07 	tstne	r2, r7, lsl #20
    45e4:	00000065 	andeq	r0, r0, r5, rrx
    45e8:	14022302 	strne	r2, [r2], #-770	; 0xfffffcfe
    45ec:	000006a7 	andeq	r0, r0, r7, lsr #13
    45f0:	11023b07 	tstne	r2, r7, lsl #22
    45f4:	00000065 	andeq	r0, r0, r5, rrx
    45f8:	14042302 	strne	r2, [r4], #-770	; 0xfffffcfe
    45fc:	00000852 	andeq	r0, r0, r2, asr r8
    4600:	11023c07 	tstne	r2, r7, lsl #24
    4604:	00000065 	andeq	r0, r0, r5, rrx
    4608:	14062302 	strne	r2, [r6], #-770	; 0xfffffcfe
    460c:	0000073f 	andeq	r0, r0, pc, lsr r7
    4610:	11023d07 	tstne	r2, r7, lsl #26
    4614:	00000065 	andeq	r0, r0, r5, rrx
    4618:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    461c:	0000085c 	andeq	r0, r0, ip, asr r8
    4620:	11023e07 	tstne	r2, r7, lsl #28
    4624:	00000065 	andeq	r0, r0, r5, rrx
    4628:	140a2302 	strne	r2, [sl], #-770	; 0xfffffcfe
    462c:	0000076e 	andeq	r0, r0, lr, ror #14
    4630:	11023f07 	tstne	r2, r7, lsl #30
    4634:	00000065 	andeq	r0, r0, r5, rrx
    4638:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    463c:	00000866 	andeq	r0, r0, r6, ror #16
    4640:	11024007 	tstne	r2, r7
    4644:	00000065 	andeq	r0, r0, r5, rrx
    4648:	140e2302 	strne	r2, [lr], #-770	; 0xfffffcfe
    464c:	000009f5 	strdeq	r0, [r0], -r5
    4650:	11024107 	tstne	r2, r7, lsl #2
    4654:	00000065 	andeq	r0, r0, r5, rrx
    4658:	14102302 	ldrne	r2, [r0], #-770	; 0xfffffcfe
    465c:	00000870 	andeq	r0, r0, r0, ror r8
    4660:	11024207 	tstne	r2, r7, lsl #4
    4664:	00000065 	andeq	r0, r0, r5, rrx
    4668:	14122302 	ldrne	r2, [r2], #-770	; 0xfffffcfe
    466c:	00000843 	andeq	r0, r0, r3, asr #16
    4670:	11024307 	tstne	r2, r7, lsl #6
    4674:	00000065 	andeq	r0, r0, r5, rrx
    4678:	14142302 	ldrne	r2, [r4], #-770	; 0xfffffcfe
    467c:	0000087a 	andeq	r0, r0, sl, ror r8
    4680:	11024407 	tstne	r2, r7, lsl #8
    4684:	00000065 	andeq	r0, r0, r5, rrx
    4688:	14162302 	ldrne	r2, [r6], #-770	; 0xfffffcfe
    468c:	000008e7 	andeq	r0, r0, r7, ror #17
    4690:	11024507 	tstne	r2, r7, lsl #10
    4694:	00000065 	andeq	r0, r0, r5, rrx
    4698:	14182302 	ldrne	r2, [r8], #-770	; 0xfffffcfe
    469c:	00000884 	andeq	r0, r0, r4, lsl #17
    46a0:	11024607 	tstne	r2, r7, lsl #12
    46a4:	00000065 	andeq	r0, r0, r5, rrx
    46a8:	141a2302 	ldrne	r2, [sl], #-770	; 0xfffffcfe
    46ac:	00000963 	andeq	r0, r0, r3, ror #18
    46b0:	11024707 	tstne	r2, r7, lsl #14
    46b4:	00000065 	andeq	r0, r0, r5, rrx
    46b8:	141c2302 	ldrne	r2, [ip], #-770	; 0xfffffcfe
    46bc:	0000027a 	andeq	r0, r0, sl, ror r2
    46c0:	11024807 	tstne	r2, r7, lsl #16
    46c4:	000007ed 	andeq	r0, r0, sp, ror #15
    46c8:	141e2302 	ldrne	r2, [lr], #-770	; 0xfffffcfe
    46cc:	0000090f 	andeq	r0, r0, pc, lsl #18
    46d0:	11024907 	tstne	r2, r7, lsl #18
    46d4:	00000065 	andeq	r0, r0, r5, rrx
    46d8:	14402302 	strbne	r2, [r0], #-770	; 0xfffffcfe
    46dc:	00000a9a 	muleq	r0, sl, sl
    46e0:	11024a07 	tstne	r2, r7, lsl #20
    46e4:	00000065 	andeq	r0, r0, r5, rrx
    46e8:	14422302 	strbne	r2, [r2], #-770	; 0xfffffcfe
    46ec:	00000551 	andeq	r0, r0, r1, asr r5
    46f0:	11024b07 	tstne	r2, r7, lsl #22
    46f4:	00000065 	andeq	r0, r0, r5, rrx
    46f8:	14442302 	strbne	r2, [r4], #-770	; 0xfffffcfe
    46fc:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    4700:	11024c07 	tstne	r2, r7, lsl #24
    4704:	00000065 	andeq	r0, r0, r5, rrx
    4708:	15462302 	strbne	r2, [r6, #-770]	; 0xfffffcfe
    470c:	00524e46 	subseq	r4, r2, r6, asr #28
    4710:	11024d07 	tstne	r2, r7, lsl #26
    4714:	00000065 	andeq	r0, r0, r5, rrx
    4718:	14482302 	strbne	r2, [r8], #-770	; 0xfffffcfe
    471c:	000008a9 	andeq	r0, r0, r9, lsr #17
    4720:	11024e07 	tstne	r2, r7, lsl #28
    4724:	00000065 	andeq	r0, r0, r5, rrx
    4728:	144a2302 	strbne	r2, [sl], #-770	; 0xfffffcfe
    472c:	000005f9 	strdeq	r0, [r0], -r9
    4730:	11024f07 	tstne	r2, r7, lsl #30
    4734:	00000065 	andeq	r0, r0, r5, rrx
    4738:	144c2302 	strbne	r2, [ip], #-770	; 0xfffffcfe
    473c:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    4740:	11025007 	tstne	r2, r7
    4744:	00000065 	andeq	r0, r0, r5, rrx
    4748:	144e2302 	strbne	r2, [lr], #-770	; 0xfffffcfe
    474c:	00000a2b 	andeq	r0, r0, fp, lsr #20
    4750:	11025107 	tstne	r2, r7, lsl #2
    4754:	00000065 	andeq	r0, r0, r5, rrx
    4758:	14502302 	ldrbne	r2, [r0], #-770	; 0xfffffcfe
    475c:	00000aba 			; <UNDEFINED> instruction: 0x00000aba
    4760:	11025207 	tstne	r2, r7, lsl #4
    4764:	00000065 	andeq	r0, r0, r5, rrx
    4768:	00522302 	subseq	r2, r2, r2, lsl #6
    476c:	0000650e 	andeq	r6, r0, lr, lsl #10
    4770:	0007ed00 	andeq	lr, r7, r0, lsl #26
    4774:	00a10f00 	adceq	r0, r1, r0, lsl #30
    4778:	00100000 	andseq	r0, r0, r0
    477c:	0007dd04 	andeq	sp, r7, r4, lsl #26
    4780:	05ed1600 	strbeq	r1, [sp, #1536]!	; 0x600
    4784:	53070000 	movwpl	r0, #28672	; 0x7000
    4788:	06320302 	ldrteq	r0, [r2], -r2, lsl #6
    478c:	020c0000 	andeq	r0, ip, #0
    4790:	093a0101 	ldmdbeq	sl!, {r0, r8}
    4794:	00000835 	andeq	r0, r0, r5, lsr r8
    4798:	0074730d 	rsbseq	r7, r4, sp, lsl #6
    479c:	4d143b01 	vldrmi	d3, [r4, #-4]
    47a0:	02000000 	andeq	r0, r0, #0
    47a4:	650d0023 	strvs	r0, [sp, #-35]	; 0xffffffdd
    47a8:	3b01006e 	blcc	44968 <_Min_Stack_Size+0x44568>
    47ac:	00004d17 	andeq	r4, r0, r7, lsl sp
    47b0:	01230200 			; <UNDEFINED> instruction: 0x01230200
    47b4:	7272610d 	rsbsvc	r6, r2, #1073741827	; 0x40000003
    47b8:	143c0100 	ldrtne	r0, [ip], #-256	; 0xffffff00
    47bc:	00000845 	andeq	r0, r0, r5, asr #16
    47c0:	00022302 	andeq	r2, r2, r2, lsl #6
    47c4:	00004d0e 	andeq	r4, r0, lr, lsl #26
    47c8:	00084500 	andeq	r4, r8, r0, lsl #10
    47cc:	00a10f00 	adceq	r0, r1, r0, lsl #30
    47d0:	00ff0000 	rscseq	r0, pc, r0
    47d4:	00083504 	andeq	r3, r8, r4, lsl #10
    47d8:	13360300 	teqne	r6, #0, 6
    47dc:	3d010000 	stccc	0, cr0, [r1, #-0]
    47e0:	0007ff02 	andeq	pc, r7, r2, lsl #30
    47e4:	126e1700 	rsbne	r1, lr, #0, 14
    47e8:	8b010000 	blhi	447f0 <_Min_Stack_Size+0x443f0>
    47ec:	00084a14 	andeq	r4, r8, r4, lsl sl
    47f0:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    47f4:	17200000 	strne	r0, [r0, -r0]!
    47f8:	0000132d 	andeq	r1, r0, sp, lsr #6
    47fc:	4a148c01 	bmi	527808 <_Min_Stack_Size+0x527408>
    4800:	05000008 	streq	r0, [r0, #-8]
    4804:	00014e03 	andeq	r4, r1, r3, lsl #28
    4808:	00371220 	eorseq	r1, r7, r0, lsr #4
    480c:	05040000 	streq	r0, [r4, #-0]
    4810:	0000821a 	andeq	r8, r0, sl, lsl r2
    4814:	18010100 	stmdane	r1, {r8}
    4818:	00001255 	andeq	r1, r0, r5, asr r2
    481c:	08150207 	ldmdaeq	r5, {r0, r1, r2, r9}
    4820:	000008d2 	ldrdeq	r0, [r0], -r2
    4824:	00123508 	andseq	r3, r2, r8, lsl #10
    4828:	0c160200 	lfmeq	f0, 4, [r6], {-0}
    482c:	00000076 	andeq	r0, r0, r6, ror r0
    4830:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    4834:	0000135a 	andeq	r1, r0, sl, asr r3
    4838:	410b1702 	tstmi	fp, r2, lsl #14
    483c:	02000000 	andeq	r0, r0, #0
    4840:	f6080423 			; <UNDEFINED> instruction: 0xf6080423
    4844:	02000012 	andeq	r0, r0, #18
    4848:	00410b18 	subeq	r0, r1, r8, lsl fp
    484c:	23020000 	movwcs	r0, #8192	; 0x2000
    4850:	13240805 			; <UNDEFINED> instruction: 0x13240805
    4854:	19020000 	stmdbne	r2, {}	; <UNPREDICTABLE>
    4858:	0000410b 	andeq	r4, r0, fp, lsl #2
    485c:	06230200 	strteq	r0, [r3], -r0, lsl #4
    4860:	08880400 	stmeq	r8, {sl}
    4864:	2d190000 	ldccs	0, cr0, [r9, #-0]
    4868:	02000012 	andeq	r0, r0, #18
    486c:	08d2201c 	ldmeq	r2, {r2, r3, r4, sp}^
    4870:	05010000 	streq	r0, [r1, #-0]
    4874:	00000c03 	andeq	r0, r0, r3, lsl #24
    4878:	13501920 	cmpne	r0, #32, 18	; 0x80000
    487c:	22020000 	andcs	r0, r2, #0
    4880:	0008d220 	andeq	sp, r8, r0, lsr #4
    4884:	03050100 	movweq	r0, #20736	; 0x5100
    4888:	20000013 	andcs	r0, r0, r3, lsl r0
    488c:	00130b19 	andseq	r0, r3, r9, lsl fp
    4890:	0f2c0200 	svceq	0x002c0200
    4894:	00000917 	andeq	r0, r0, r7, lsl r9
    4898:	50030501 	andpl	r0, r3, r1, lsl #10
    489c:	02200002 	eoreq	r0, r0, #2
    48a0:	029f0801 	addseq	r0, pc, #65536	; 0x10000
    48a4:	10040000 	andne	r0, r4, r0
    48a8:	19000009 	stmdbne	r0, {r0, r3}
    48ac:	0000124a 	andeq	r1, r0, sl, asr #4
    48b0:	82132d02 	andshi	r2, r3, #2, 26	; 0x80
    48b4:	01000000 	mrseq	r0, (UNDEF: 0)
    48b8:	02540305 	subseq	r0, r4, #335544320	; 0x14000000
    48bc:	77172000 	ldrvc	r2, [r7, -r0]
    48c0:	02000012 	andeq	r0, r0, #18
    48c4:	09100d93 	ldmdbeq	r0, {r0, r1, r4, r7, r8, sl, fp}
    48c8:	03050000 	movweq	r0, #20480	; 0x5000
    48cc:	20000258 	andcs	r0, r0, r8, asr r2
    48d0:	1264011a 	rsbne	r0, r4, #-2147483642	; 0x80000006
    48d4:	d9020000 	stmdble	r2, {}	; <UNPREDICTABLE>
    48d8:	12640106 	rsbne	r0, r4, #-2147483647	; 0x80000001
    48dc:	13040800 	movwne	r0, #18432	; 0x4800
    48e0:	16d90800 	ldrbne	r0, [r9], r0, lsl #16
    48e4:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    48e8:	1b000009 	blne	4914 <_Min_Stack_Size+0x4514>
    48ec:	00667562 	rsbeq	r7, r6, r2, ror #10
    48f0:	a91ad902 	ldmdbge	sl, {r1, r8, fp, ip, lr, pc}
    48f4:	ff000009 			; <UNDEFINED> instruction: 0xff000009
    48f8:	f9000016 			; <UNDEFINED> instruction: 0xf9000016
    48fc:	1c000016 	stcne	0, cr0, [r0], {22}
    4900:	000013af 	andeq	r1, r0, pc, lsr #7
    4904:	9523d902 	strls	sp, [r3, #-2306]!	; 0xfffff6fe
    4908:	33000000 	movwcc	r0, #0
    490c:	2d000017 	stccs	0, cr0, [r0, #-92]	; 0xffffffa4
    4910:	1d000017 	stcne	0, cr0, [r0, #-92]	; 0xffffffa4
    4914:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4918:	410bdb02 	tstmi	fp, r2, lsl #22
    491c:	65000000 	strvs	r0, [r0, #-0]
    4920:	5f000017 	svcpl	0x00000017
    4924:	1e000017 	mcrne	0, 0, r0, cr0, cr7, {0}
    4928:	00000278 	andeq	r0, r0, r8, ror r2
    492c:	0200691f 	andeq	r6, r0, #507904	; 0x7c000
    4930:	00950be1 	addseq	r0, r5, r1, ror #23
    4934:	00000000 	andeq	r0, r0, r0
    4938:	00410420 	subeq	r0, r1, r0, lsr #8
    493c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4940:	00000e67 	andeq	r0, r0, r7, ror #28
    4944:	0406a302 	streq	sl, [r6], #-770	; 0xfffffcfe
    4948:	78080013 	stmdavc	r8, {r0, r1, r4}
    494c:	8f080014 	svchi	0x00080014
    4950:	01000017 	tsteq	r0, r7, lsl r0
    4954:	00000cc9 	andeq	r0, r0, r9, asr #25
    4958:	66756222 	ldrbtvs	r6, [r5], -r2, lsr #4
    495c:	15a50200 	strne	r0, [r5, #512]!	; 0x200
    4960:	00000cc9 	andeq	r0, r0, r9, asr #25
    4964:	a8910302 	ldmge	r1, {r1, r8, r9}
    4968:	13af237f 			; <UNDEFINED> instruction: 0x13af237f
    496c:	a6020000 	strge	r0, [r2], -r0
    4970:	00009507 	andeq	r9, r0, r7, lsl #10
    4974:	0017dd00 	andseq	sp, r7, r0, lsl #26
    4978:	0017d500 	andseq	sp, r7, r0, lsl #10
    497c:	13962400 	orrsne	r2, r6, #0, 8
    4980:	13120000 	tstne	r2, #0
    4984:	12030800 	andne	r0, r3, #0, 16
    4988:	18080013 	stmdane	r8, {r0, r1, r4}
    498c:	02080013 	andeq	r0, r8, #19
    4990:	0a150aa8 	beq	547438 <_Min_Stack_Size+0x547038>
    4994:	a9250000 	stmdbge	r5!, {}	; <UNPREDICTABLE>
    4998:	28000013 	stmdacs	r0, {r0, r1, r4}
    499c:	26000018 			; <UNDEFINED> instruction: 0x26000018
    49a0:	00000018 	andeq	r0, r0, r8, lsl r0
    49a4:	0013e124 	andseq	lr, r3, r4, lsr #2
    49a8:	00134200 	andseq	r4, r3, r0, lsl #4
    49ac:	13420108 	movtne	r0, #8456	; 0x2108
    49b0:	13480800 	movtne	r0, #34816	; 0x8800
    49b4:	af020800 	svcge	0x00020800
    49b8:	000a5609 	andeq	r5, sl, r9, lsl #12
    49bc:	14072500 	strne	r2, [r7], #-1280	; 0xfffffb00
    49c0:	18420000 	stmdane	r2, {}^	; <UNPREDICTABLE>
    49c4:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
    49c8:	fb250000 	blx	9449d2 <_Min_Stack_Size+0x9445d2>
    49cc:	57000013 	smladpl	r0, r3, r0, r0
    49d0:	55000018 	strpl	r0, [r0, #-24]	; 0xffffffe8
    49d4:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
    49d8:	000013ef 	andeq	r1, r0, pc, ror #7
    49dc:	0000186c 	andeq	r1, r0, ip, ror #16
    49e0:	0000186a 	andeq	r1, r0, sl, ror #16
    49e4:	13e12600 	mvnne	r2, #0, 12
    49e8:	13f40000 	mvnsne	r0, #0
    49ec:	90010800 	andls	r0, r1, r0, lsl #16
    49f0:	02000002 	andeq	r0, r0, #2
    49f4:	0a9c09b4 	beq	fe7070cc <BootRAM+0xd67786d>
    49f8:	07250000 	streq	r0, [r5, -r0]!
    49fc:	83000014 	movwhi	r0, #20
    4a00:	81000018 	tsthi	r0, r8, lsl r0
    4a04:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
    4a08:	000013fb 	strdeq	r1, [r0], -fp
    4a0c:	00001898 	muleq	r0, r8, r8
    4a10:	00001896 	muleq	r0, r6, r8
    4a14:	0013ef25 	andseq	lr, r3, r5, lsr #30
    4a18:	0018ad00 	andseq	sl, r8, r0, lsl #26
    4a1c:	0018ab00 	andseq	sl, r8, r0, lsl #22
    4a20:	134c2700 	movtne	r2, #50944	; 0xc700
    4a24:	152e0800 	strne	r0, [lr, #-2048]!	; 0xfffff800
    4a28:	26000000 	strcs	r0, [r0], -r0
    4a2c:	00000e6b 	andeq	r0, r0, fp, ror #28
    4a30:	0800134c 	stmdaeq	r0, {r2, r3, r6, r8, r9, ip}
    4a34:	0002a802 	andeq	sl, r2, r2, lsl #16
    4a38:	03bb0200 			; <UNDEFINED> instruction: 0x03bb0200
    4a3c:	00000c55 	andeq	r0, r0, r5, asr ip
    4a40:	000e7925 	andeq	r7, lr, r5, lsr #18
    4a44:	0018c600 	andseq	ip, r8, r0, lsl #12
    4a48:	0018c200 	andseq	ip, r8, r0, lsl #4
    4a4c:	02a81e00 	adceq	r1, r8, #0, 28
    4a50:	85280000 	strhi	r0, [r8, #-0]!
    4a54:	0200000e 	andeq	r0, r0, #14
    4a58:	91294891 			; <UNDEFINED> instruction: 0x91294891
    4a5c:	ec00000e 	stc	0, cr0, [r0], {14}
    4a60:	e6000018 			; <UNDEFINED> instruction: 0xe6000018
    4a64:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    4a68:	000013b6 			; <UNDEFINED> instruction: 0x000013b6
    4a6c:	08001360 	stmdaeq	r0, {r5, r6, r8, r9, ip}
    4a70:	00136001 	andseq	r6, r3, r1
    4a74:	00136808 	andseq	r6, r3, r8, lsl #16
    4a78:	257f0208 	ldrbcs	r0, [pc, #-520]!	; 4878 <_Min_Stack_Size+0x4478>
    4a7c:	00000b21 	andeq	r0, r0, r1, lsr #22
    4a80:	0013d425 	andseq	sp, r3, r5, lsr #8
    4a84:	00191b00 	andseq	r1, r9, r0, lsl #22
    4a88:	00191500 	andseq	r1, r9, r0, lsl #10
    4a8c:	13c82500 	bicne	r2, r8, #0, 10
    4a90:	194a0000 	stmdbne	sl, {}^	; <UNPREDICTABLE>
    4a94:	19480000 	stmdbne	r8, {}^	; <UNPREDICTABLE>
    4a98:	682a0000 	stmdavs	sl!, {}	; <UNPREDICTABLE>
    4a9c:	3c080013 	stccc	0, cr0, [r8], {19}
    4aa0:	2b000015 	blcs	4afc <_Min_Stack_Size+0x46fc>
    4aa4:	35015001 	strcc	r5, [r1, #-1]
    4aa8:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    4aac:	00004891 	muleq	r0, r1, r8
    4ab0:	00139624 	andseq	r9, r3, r4, lsr #12
    4ab4:	00137e00 	andseq	r7, r3, r0, lsl #28
    4ab8:	137e0108 	cmnne	lr, #8, 2
    4abc:	13880800 	orrne	r0, r8, #0, 16
    4ac0:	89020800 	stmdbhi	r2, {fp}
    4ac4:	000b4809 	andeq	r4, fp, r9, lsl #16
    4ac8:	13a92500 			; <UNDEFINED> instruction: 0x13a92500
    4acc:	19600000 	stmdbne	r0!, {}^	; <UNPREDICTABLE>
    4ad0:	195e0000 	ldmdbne	lr, {}^	; <UNPREDICTABLE>
    4ad4:	24000000 	strcs	r0, [r0], #-0
    4ad8:	000013b6 			; <UNDEFINED> instruction: 0x000013b6
    4adc:	08001392 	stmdaeq	r0, {r1, r4, r7, r8, r9, ip}
    4ae0:	00139201 	andseq	r9, r3, r1, lsl #4
    4ae4:	00139c08 	andseq	r9, r3, r8, lsl #24
    4ae8:	0e8a0208 	cdpeq	2, 8, cr0, cr10, cr8, {0}
    4aec:	00000b8c 	andeq	r0, r0, ip, lsl #23
    4af0:	0013d425 	andseq	sp, r3, r5, lsr #8
    4af4:	00197e00 	andseq	r7, r9, r0, lsl #28
    4af8:	00197800 	andseq	r7, r9, r0, lsl #16
    4afc:	13c82500 	bicne	r2, r8, #0, 10
    4b00:	19ad0000 	stmibne	sp!, {}	; <UNPREDICTABLE>
    4b04:	19ab0000 	stmibne	fp!, {}	; <UNPREDICTABLE>
    4b08:	9c2a0000 	stcls	0, cr0, [sl], #-0
    4b0c:	3c080013 	stccc	0, cr0, [r8], {19}
    4b10:	2b000015 	blcs	4b6c <_Min_Stack_Size+0x476c>
    4b14:	91025101 	tstls	r2, r1, lsl #2
    4b18:	24000048 	strcs	r0, [r0], #-72	; 0xffffffb8
    4b1c:	000013b6 			; <UNDEFINED> instruction: 0x000013b6
    4b20:	08001412 	stmdaeq	r0, {r1, r4, sl, ip}
    4b24:	00141201 	andseq	r1, r4, r1, lsl #4
    4b28:	00141a08 	andseq	r1, r4, r8, lsl #20
    4b2c:	25830208 	strcs	r0, [r3, #520]	; 0x208
    4b30:	00000bd5 	ldrdeq	r0, [r0], -r5
    4b34:	0013d425 	andseq	sp, r3, r5, lsr #8
    4b38:	0019c600 	andseq	ip, r9, r0, lsl #12
    4b3c:	0019c000 	andseq	ip, r9, r0
    4b40:	13c82500 	bicne	r2, r8, #0, 10
    4b44:	19f50000 	ldmibne	r5!, {}^	; <UNPREDICTABLE>
    4b48:	19f30000 	ldmibne	r3!, {}^	; <UNPREDICTABLE>
    4b4c:	1a2a0000 	bne	a84b54 <_Min_Stack_Size+0xa84754>
    4b50:	3c080014 	stccc	0, cr0, [r8], {20}
    4b54:	2b000015 	blcs	4bb0 <_Min_Stack_Size+0x47b0>
    4b58:	33015001 	movwcc	r5, #4097	; 0x1001
    4b5c:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    4b60:	00004891 	muleq	r0, r1, r8
    4b64:	0010d72c 	andseq	sp, r0, ip, lsr #14
    4b68:	00142600 	andseq	r2, r4, r0, lsl #12
    4b6c:	02c00208 	sbceq	r0, r0, #8, 4	; 0x80000000
    4b70:	85020000 	strhi	r0, [r2, #-0]
    4b74:	13b62405 			; <UNDEFINED> instruction: 0x13b62405
    4b78:	14380000 	ldrtne	r0, [r8], #-0
    4b7c:	38010800 	stmdacc	r1, {fp}
    4b80:	40080014 	andmi	r0, r8, r4, lsl r0
    4b84:	02080014 	andeq	r0, r8, #20
    4b88:	0c2f0c8e 	stceq	12, cr0, [pc], #-568	; 4958 <_Min_Stack_Size+0x4558>
    4b8c:	d4250000 	strtle	r0, [r5], #-0
    4b90:	0f000013 	svceq	0x00000013
    4b94:	0900001a 	stmdbeq	r0, {r1, r3, r4}
    4b98:	2500001a 	strcs	r0, [r0, #-26]	; 0xffffffe6
    4b9c:	000013c8 	andeq	r1, r0, r8, asr #7
    4ba0:	00001a3e 	andeq	r1, r0, lr, lsr sl
    4ba4:	00001a3c 	andeq	r1, r0, ip, lsr sl
    4ba8:	0014402a 	andseq	r4, r4, sl, lsr #32
    4bac:	00153c08 	andseq	r3, r5, r8, lsl #24
    4bb0:	50012b00 	andpl	r2, r1, r0, lsl #22
    4bb4:	012b3501 			; <UNDEFINED> instruction: 0x012b3501
    4bb8:	48910251 	ldmmi	r1, {r0, r4, r6, r9}
    4bbc:	a42d0000 	strtge	r0, [sp], #-0
    4bc0:	19080013 	stmdbne	r8, {r0, r1, r4}
    4bc4:	43000012 	movwmi	r0, #18
    4bc8:	2b00000c 	blcs	4c00 <_Min_Stack_Size+0x4800>
    4bcc:	91025001 	tstls	r2, r1
    4bd0:	482a0048 	stmdami	sl!, {r3, r6}
    4bd4:	41080014 	tstmi	r8, r4, lsl r0
    4bd8:	2b000009 	blcs	4c04 <_Min_Stack_Size+0x4804>
    4bdc:	91025001 	tstls	r2, r1
    4be0:	00000048 	andeq	r0, r0, r8, asr #32
    4be4:	0010d72e 	andseq	sp, r0, lr, lsr #14
    4be8:	0013aa00 	andseq	sl, r3, r0, lsl #20
    4bec:	13aa0108 			; <UNDEFINED> instruction: 0x13aa0108
    4bf0:	13ae0800 			; <UNDEFINED> instruction: 0x13ae0800
    4bf4:	bf020800 	svclt	0x00020800
    4bf8:	13422d09 	movtne	r2, #11529	; 0x2d09
    4bfc:	11620800 	cmnne	r2, r0, lsl #16
    4c00:	0c840000 	stceq	0, cr0, [r4], {0}
    4c04:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    4c08:	007d0250 	rsbseq	r0, sp, r0, asr r2
    4c0c:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    4c10:	2d000075 	stccs	0, cr0, [r0, #-468]	; 0xfffffe2c
    4c14:	080013c2 	stmdaeq	r0, {r1, r6, r7, r8, r9, ip}
    4c18:	00001058 	andeq	r1, r0, r8, asr r0
    4c1c:	00000c98 	muleq	r0, r8, ip
    4c20:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4c24:	2d000070 	stccs	0, cr0, [r0, #-448]	; 0xfffffe40
    4c28:	080013f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, ip}
    4c2c:	00001162 	andeq	r1, r0, r2, ror #2
    4c30:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    4c34:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4c38:	012b007d 			; <UNDEFINED> instruction: 0x012b007d
    4c3c:	00750251 	rsbseq	r0, r5, r1, asr r2
    4c40:	14042a00 	strne	r2, [r4], #-2560	; 0xfffff600
    4c44:	11620800 	cmnne	r2, r0, lsl #16
    4c48:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    4c4c:	007d0250 	rsbseq	r0, sp, r0, asr r2
    4c50:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    4c54:	00000075 	andeq	r0, r0, r5, ror r0
    4c58:	0000410e 	andeq	r4, r0, lr, lsl #2
    4c5c:	000cd900 	andeq	sp, ip, r0, lsl #18
    4c60:	00a10f00 	adceq	r0, r1, r0, lsl #30
    4c64:	001f0000 	andseq	r0, pc, r0
    4c68:	11580121 	cmpne	r8, r1, lsr #2
    4c6c:	95020000 	strls	r0, [r2, #-0]
    4c70:	00117406 	andseq	r7, r1, r6, lsl #8
    4c74:	00126408 	andseq	r6, r2, r8, lsl #8
    4c78:	001a5208 	andseq	r5, sl, r8, lsl #4
    4c7c:	0e6b0100 	poweqe	f0, f3, f0
    4c80:	482f0000 	stmdami	pc!, {}	; <UNPREDICTABLE>
    4c84:	11000002 	tstne	r0, r2
    4c88:	2300000d 	movwcs	r0, #13
    4c8c:	000000f9 	strdeq	r0, [r0], -r9
    4c90:	76039602 	strvc	r9, [r3], -r2, lsl #12
    4c94:	7a000000 	bvc	4c9c <_Min_Stack_Size+0x489c>
    4c98:	7200001a 	andvc	r0, r0, #26
    4c9c:	0000001a 	andeq	r0, r0, sl, lsl r0
    4ca0:	0011a630 	andseq	sl, r1, r0, lsr r6
    4ca4:	0011c608 	andseq	ip, r1, r8, lsl #12
    4ca8:	000d3308 	andeq	r3, sp, r8, lsl #6
    4cac:	00f92300 	rscseq	r2, r9, r0, lsl #6
    4cb0:	96020000 	strls	r0, [r2], -r0
    4cb4:	00007603 	andeq	r7, r0, r3, lsl #12
    4cb8:	001ac100 	andseq	ip, sl, r0, lsl #2
    4cbc:	001ab700 	andseq	fp, sl, r0, lsl #14
    4cc0:	1a260000 	bne	984cc8 <_Min_Stack_Size+0x9848c8>
    4cc4:	74000014 	strvc	r0, [r0], #-20	; 0xffffffec
    4cc8:	03080011 	movweq	r0, #32785	; 0x8011
    4ccc:	00000228 	andeq	r0, r0, r8, lsr #4
    4cd0:	56039602 	strpl	r9, [r3], -r2, lsl #12
    4cd4:	2500000d 	strcs	r0, [r0, #-13]
    4cd8:	00001429 	andeq	r1, r0, r9, lsr #8
    4cdc:	00001b0e 	andeq	r1, r0, lr, lsl #22
    4ce0:	00001b0c 	andeq	r1, r0, ip, lsl #22
    4ce4:	14372400 	ldrtne	r2, [r7], #-1024	; 0xfffffc00
    4ce8:	11f00000 	mvnsne	r0, r0
    4cec:	f0010800 			; <UNDEFINED> instruction: 0xf0010800
    4cf0:	f2080011 	vqadd.s8	d0, d8, d1
    4cf4:	02080011 	andeq	r0, r8, #17
    4cf8:	0d7d0396 	ldcleq	3, cr0, [sp, #-600]!	; 0xfffffda8
    4cfc:	46250000 	strtmi	r0, [r5], -r0
    4d00:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    4d04:	2300001b 	movwcs	r0, #27
    4d08:	0000001b 	andeq	r0, r0, fp, lsl r0
    4d0c:	0011f62d 	andseq	pc, r1, sp, lsr #12
    4d10:	0011d908 	andseq	sp, r1, r8, lsl #18
    4d14:	000d9400 	andeq	r9, sp, r0, lsl #8
    4d18:	50012b00 	andpl	r2, r1, r0, lsl #22
    4d1c:	19ac0305 	stmibne	ip!, {r0, r2, r8, r9}
    4d20:	2d000800 	stccs	8, cr0, [r0, #-0]
    4d24:	08001206 	stmdaeq	r0, {r1, r2, r9, ip}
    4d28:	0000154a 	andeq	r1, r0, sl, asr #10
    4d2c:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
    4d30:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4d34:	012b8409 			; <UNDEFINED> instruction: 0x012b8409
    4d38:	2b330151 	blcs	cc5284 <_Min_Stack_Size+0xcc4e84>
    4d3c:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    4d40:	0253012b 	subseq	r0, r3, #-1073741814	; 0xc000000a
    4d44:	2d000074 	stccs	0, cr0, [r0, #-464]	; 0xfffffe30
    4d48:	08001212 	stmdaeq	r0, {r1, r4, r9, ip}
    4d4c:	0000154a 	andeq	r1, r0, sl, asr #10
    4d50:	00000ddd 	ldrdeq	r0, [r0], -sp
    4d54:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4d58:	012b8109 			; <UNDEFINED> instruction: 0x012b8109
    4d5c:	2b320151 	blcs	c852a8 <_Min_Stack_Size+0xc84ea8>
    4d60:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4d64:	53012b00 	movwpl	r2, #6912	; 0x1b00
    4d68:	00007402 	andeq	r7, r0, r2, lsl #8
    4d6c:	00121e2d 	andseq	r1, r2, sp, lsr #28
    4d70:	00154a08 	andseq	r4, r5, r8, lsl #20
    4d74:	000e0100 	andeq	r0, lr, r0, lsl #2
    4d78:	50012b00 	andpl	r2, r1, r0, lsl #22
    4d7c:	012b3101 			; <UNDEFINED> instruction: 0x012b3101
    4d80:	2b320151 	blcs	c852cc <_Min_Stack_Size+0xc84ecc>
    4d84:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4d88:	53012b00 	movwpl	r2, #6912	; 0x1b00
    4d8c:	00007402 	andeq	r7, r0, r2, lsl #8
    4d90:	00122a2d 	andseq	r2, r2, sp, lsr #20
    4d94:	00154a08 	andseq	r4, r5, r8, lsl #20
    4d98:	000e2500 	andeq	r2, lr, r0, lsl #10
    4d9c:	50012b00 	andpl	r2, r1, r0, lsl #22
    4da0:	2b850902 	blcs	fe1471b0 <BootRAM+0xd0b7951>
    4da4:	33015101 	movwcc	r5, #4353	; 0x1101
    4da8:	0152012b 	cmpeq	r2, fp, lsr #2
    4dac:	53012b38 	movwpl	r2, #6968	; 0x1b38
    4db0:	00007402 	andeq	r7, r0, r2, lsl #8
    4db4:	0012362d 	andseq	r3, r2, sp, lsr #12
    4db8:	00154a08 	andseq	r4, r5, r8, lsl #20
    4dbc:	000e4a00 	andeq	r4, lr, r0, lsl #20
    4dc0:	50012b00 	andpl	r2, r1, r0, lsl #22
    4dc4:	2b820902 	blcs	fe0871d4 <BootRAM+0xcff7975>
    4dc8:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
    4dcc:	0252012b 	subseq	r0, r2, #-1073741814	; 0xc000000a
    4dd0:	012b0076 			; <UNDEFINED> instruction: 0x012b0076
    4dd4:	00740253 	rsbseq	r0, r4, r3, asr r2
    4dd8:	12422a00 	subne	r2, r2, #0, 20
    4ddc:	154a0800 	strbne	r0, [sl, #-2048]	; 0xfffff800
    4de0:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    4de4:	2b320150 	blcs	c8532c <_Min_Stack_Size+0xc84f2c>
    4de8:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
    4dec:	0252012b 	subseq	r0, r2, #-1073741814	; 0xc000000a
    4df0:	012b0076 			; <UNDEFINED> instruction: 0x012b0076
    4df4:	00740253 	rsbseq	r0, r4, r3, asr r2
    4df8:	a6310000 	ldrtge	r0, [r1], -r0
    4dfc:	02000012 	andeq	r0, r0, #18
    4e00:	01010d79 	tsteq	r1, r9, ror sp
    4e04:	00000e9e 	muleq	r0, lr, lr
    4e08:	00094132 	andeq	r4, r9, r2, lsr r1
    4e0c:	1d790200 	lfmne	f0, 2, [r9, #-0]
    4e10:	00000041 	andeq	r0, r0, r1, asr #32
    4e14:	6675621f 			; <UNDEFINED> instruction: 0x6675621f
    4e18:	0b7a0200 	bleq	1e85620 <_Min_Stack_Size+0x1e85220>
    4e1c:	00000cc9 	andeq	r0, r0, r9, asr #25
    4e20:	0013af33 	andseq	sl, r3, r3, lsr pc
    4e24:	077b0200 	ldrbeq	r0, [fp, -r0, lsl #4]!
    4e28:	00000095 	muleq	r0, r5, r0
    4e2c:	0f013400 	svceq	0x00013400
    4e30:	0200000d 	andeq	r0, r0, #13
    4e34:	10010657 	andne	r0, r1, r7, asr r6
    4e38:	d8000009 	stmdale	r0, {r0, r3}
    4e3c:	74080010 	strvc	r0, [r8], #-16
    4e40:	3a080011 	bcc	204e8c <_Min_Stack_Size+0x204a8c>
    4e44:	0100001b 	tsteq	r0, fp, lsl r0
    4e48:	00001042 	andeq	r1, r0, r2, asr #32
    4e4c:	7165721b 	cmnvc	r5, fp, lsl r2
    4e50:	28570200 	ldmdacs	r7, {r9}^
    4e54:	00001042 	andeq	r1, r0, r2, asr #32
    4e58:	00001b94 	muleq	r0, r4, fp
    4e5c:	00001b80 	andeq	r1, r0, r0, lsl #23
    4e60:	000f9d1c 	andeq	r9, pc, ip, lsl sp	; <UNPREDICTABLE>
    4e64:	36570200 	ldrbcc	r0, [r7], -r0, lsl #4
    4e68:	00000059 	andeq	r0, r0, r9, asr r0
    4e6c:	00001c2b 	andeq	r1, r0, fp, lsr #24
    4e70:	00001c19 	andeq	r1, r0, r9, lsl ip
    4e74:	00083b1c 	andeq	r3, r8, ip, lsl fp
    4e78:	47570200 	ldrbmi	r0, [r7, -r0, lsl #4]
    4e7c:	00000059 	andeq	r0, r0, r9, asr r0
    4e80:	00001cb4 			; <UNDEFINED> instruction: 0x00001cb4
    4e84:	00001ca2 	andeq	r1, r0, r2, lsr #25
    4e88:	00115830 	andseq	r5, r1, r0, lsr r8
    4e8c:	00116208 	andseq	r6, r1, r8, lsl #4
    4e90:	000f5d08 	andeq	r5, pc, r8, lsl #26
    4e94:	75623500 	strbvc	r3, [r2, #-1280]!	; 0xfffffb00
    4e98:	6b020066 	blvs	85038 <_Min_Stack_Size+0x84c38>
    4e9c:	00104811 	andseq	r4, r0, r1, lsl r8
    4ea0:	8c910300 	ldchi	3, cr0, [r1], {0}
    4ea4:	13b6367f 			; <UNDEFINED> instruction: 0x13b6367f
    4ea8:	11580000 	cmpne	r8, r0
    4eac:	58020800 	stmdapl	r2, {fp}
    4eb0:	62080011 	andvs	r0, r8, #17
    4eb4:	02080011 	andeq	r0, r8, #17
    4eb8:	d425096c 	strtle	r0, [r5], #-2412	; 0xfffff694
    4ebc:	31000013 	tstcc	r0, r3, lsl r0
    4ec0:	2b00001d 	blcs	4f3c <_Min_Stack_Size+0x4b3c>
    4ec4:	2500001d 	strcs	r0, [r0, #-29]	; 0xffffffe3
    4ec8:	000013c8 	andeq	r1, r0, r8, asr #7
    4ecc:	00001d62 	andeq	r1, r0, r2, ror #26
    4ed0:	00001d60 	andeq	r1, r0, r0, ror #26
    4ed4:	0011602a 	andseq	r6, r1, sl, lsr #32
    4ed8:	00153c08 	andseq	r3, r5, r8, lsl #24
    4edc:	50012b00 	andpl	r2, r1, r0, lsl #22
    4ee0:	012b3101 			; <UNDEFINED> instruction: 0x012b3101
    4ee4:	8c910351 	ldchi	3, cr0, [r1], {81}	; 0x51
    4ee8:	0000007f 	andeq	r0, r0, pc, ror r0
    4eec:	0013b624 	andseq	fp, r3, r4, lsr #12
    4ef0:	0010fa00 	andseq	pc, r0, r0, lsl #20
    4ef4:	10fa0108 	rscsne	r0, sl, r8, lsl #2
    4ef8:	11020800 	tstne	r2, r0, lsl #16
    4efc:	5c020800 	stcpl	8, cr0, [r2], {-0}
    4f00:	000faa09 	andeq	sl, pc, r9, lsl #20
    4f04:	13d42500 	bicsne	r2, r4, #0, 10
    4f08:	1d780000 	ldclne	0, cr0, [r8, #-0]
    4f0c:	1d760000 	ldclne	0, cr0, [r6, #-0]
    4f10:	c8250000 	stmdagt	r5!, {}	; <UNPREDICTABLE>
    4f14:	92000013 	andls	r0, r0, #19
    4f18:	9000001d 	andls	r0, r0, sp, lsl r0
    4f1c:	2a00001d 	bcs	4f98 <_Min_Stack_Size+0x4b98>
    4f20:	08001102 	stmdaeq	r0, {r1, r8, ip}
    4f24:	0000153c 	andeq	r1, r0, ip, lsr r5
    4f28:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4f2c:	012b0074 			; <UNDEFINED> instruction: 0x012b0074
    4f30:	0c030551 	cfstr32eq	mvfx0, [r3], {81}	; 0x51
    4f34:	00200000 	eoreq	r0, r0, r0
    4f38:	13b62400 			; <UNDEFINED> instruction: 0x13b62400
    4f3c:	11180000 	tstne	r8, r0
    4f40:	18010800 	stmdane	r1, {fp}
    4f44:	22080011 	andcs	r0, r8, #17
    4f48:	02080011 	andeq	r0, r8, #17
    4f4c:	0ff30961 	svceq	0x00f30961
    4f50:	d4250000 	strtle	r0, [r5], #-0
    4f54:	a8000013 	stmdage	r0, {r0, r1, r4}
    4f58:	a600001d 			; <UNDEFINED> instruction: 0xa600001d
    4f5c:	2500001d 	strcs	r0, [r0, #-29]	; 0xffffffe3
    4f60:	000013c8 	andeq	r1, r0, r8, asr #7
    4f64:	00001dc2 	andeq	r1, r0, r2, asr #27
    4f68:	00001dc0 	andeq	r1, r0, r0, asr #27
    4f6c:	0011222a 	andseq	r2, r1, sl, lsr #4
    4f70:	00153c08 	andseq	r3, r5, r8, lsl #24
    4f74:	50012b00 	andpl	r2, r1, r0, lsl #22
    4f78:	012b3101 			; <UNDEFINED> instruction: 0x012b3101
    4f7c:	07750251 			; <UNDEFINED> instruction: 0x07750251
    4f80:	d72e0000 	strle	r0, [lr, -r0]!
    4f84:	32000010 	andcc	r0, r0, #16
    4f88:	02080011 	andeq	r0, r8, #17
    4f8c:	08001132 	stmdaeq	r0, {r1, r4, r5, r8, ip}
    4f90:	08001132 	stmdaeq	r0, {r1, r4, r5, r8, ip}
    4f94:	2e0b6402 	cdpcs	4, 0, cr6, cr11, cr2, {0}
    4f98:	000010d7 	ldrdeq	r1, [r0], -r7
    4f9c:	08001132 	stmdaeq	r0, {r1, r4, r5, r8, ip}
    4fa0:	00113206 	andseq	r3, r1, r6, lsl #4
    4fa4:	00113608 	andseq	r3, r1, r8, lsl #12
    4fa8:	0b680208 	bleq	1a057d0 <_Min_Stack_Size+0x1a053d0>
    4fac:	0011122d 	andseq	r1, r1, sp, lsr #4
    4fb0:	00105808 	andseq	r5, r0, r8, lsl #16
    4fb4:	00103100 	andseq	r3, r0, r0, lsl #2
    4fb8:	50012b00 	andpl	r2, r1, r0, lsl #22
    4fbc:	00007002 	andeq	r7, r0, r2
    4fc0:	0011562a 	andseq	r5, r1, sl, lsr #12
    4fc4:	00105808 	andseq	r5, r0, r8, lsl #16
    4fc8:	50012b00 	andpl	r2, r1, r0, lsl #22
    4fcc:	00007002 	andeq	r7, r0, r2
    4fd0:	fd042000 	stc2	0, cr2, [r4, #-0]
    4fd4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    4fd8:	00000041 	andeq	r0, r0, r1, asr #32
    4fdc:	00001058 	andeq	r1, r0, r8, asr r0
    4fe0:	0000a10f 	andeq	sl, r0, pc, lsl #2
    4fe4:	37006300 	strcc	r6, [r0, -r0, lsl #6]
    4fe8:	0012e201 	andseq	lr, r2, r1, lsl #4
    4fec:	06440200 	strbeq	r0, [r4], -r0, lsl #4
    4ff0:	10740101 	rsbsne	r0, r4, r1, lsl #2
    4ff4:	63380000 	teqvs	r8, #0
    4ff8:	02006766 	andeq	r6, r0, #26738688	; 0x1980000
    4ffc:	10743044 	rsbsne	r3, r4, r4, asr #32
    5000:	20000000 	andcs	r0, r0, r0
    5004:	0008d204 	andeq	sp, r8, r4, lsl #4
    5008:	44013900 	strmi	r3, [r1], #-2304	; 0xfffff700
    500c:	0200000d 	andeq	r0, r0, #13
    5010:	10010634 	andne	r0, r1, r4, lsr r6
    5014:	28000009 	stmdacs	r0, {r0, r3}
    5018:	64080010 	strvs	r0, [r8], #-16
    501c:	02080010 	andeq	r0, r8, #16
    5020:	c901007d 	stmdbgt	r1, {r0, r2, r3, r4, r5, r6}
    5024:	1b000010 	blne	506c <_Min_Stack_Size+0x4c6c>
    5028:	00716572 	rsbseq	r6, r1, r2, ror r5
    502c:	42273402 	eormi	r3, r7, #33554432	; 0x2000000
    5030:	de000010 	mcrle	0, 0, r0, cr0, cr0, {0}
    5034:	d600001d 			; <UNDEFINED> instruction: 0xd600001d
    5038:	3a00001d 	bcc	50b4 <_Min_Stack_Size+0x4cb4>
    503c:	00000b02 	andeq	r0, r0, r2, lsl #22
    5040:	c9333402 	ldmdbgt	r3!, {r1, sl, ip, sp}
    5044:	01000010 	tsteq	r0, r0, lsl r0
    5048:	13af3a51 			; <UNDEFINED> instruction: 0x13af3a51
    504c:	34020000 	strcc	r0, [r2], #-0
    5050:	0010d143 	andseq	sp, r0, r3, asr #2
    5054:	00520100 	subseq	r0, r2, r0, lsl #2
    5058:	10cf0420 	sbcne	r0, pc, r0, lsr #8
    505c:	043b0000 	ldrteq	r0, [fp], #-0
    5060:	00590420 	subseq	r0, r9, r0, lsr #8
    5064:	013c0000 	teqeq	ip, r0
    5068:	00000d86 	andeq	r0, r0, r6, lsl #27
    506c:	76110604 	ldrvc	r0, [r1], -r4, lsl #12
    5070:	03000000 	movweq	r0, #0
    5074:	12d7011a 	sbcsne	r0, r7, #-2147483642	; 0x80000006
    5078:	a7010000 	strge	r0, [r1, -r0]
    507c:	0fd00106 	svceq	0x00d00106
    5080:	10280800 	eorne	r0, r8, r0, lsl #16
    5084:	1e180800 	cdpne	8, 1, cr0, cr8, cr0, {0}
    5088:	5c010000 	stcpl	0, cr0, [r1], {-0}
    508c:	1b000011 	blne	50d8 <_Min_Stack_Size+0x4cd8>
    5090:	00727473 	rsbseq	r7, r2, r3, ror r4
    5094:	5c17a701 	ldcpl	7, cr10, [r7], {1}
    5098:	3c000011 	stccc	0, cr0, [r0], {17}
    509c:	3800001e 	stmdacc	r0, {r1, r2, r3, r4}
    50a0:	1b00001e 	blne	5120 <_Min_Stack_Size+0x4d20>
    50a4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    50a8:	4124a701 			; <UNDEFINED> instruction: 0x4124a701
    50ac:	60000000 	andvs	r0, r0, r0
    50b0:	5a00001e 	bpl	5130 <_Min_Stack_Size+0x4d30>
    50b4:	2600001e 			; <UNDEFINED> instruction: 0x2600001e
    50b8:	00001396 	muleq	r0, r6, r3
    50bc:	08000ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    50c0:	0001f801 	andeq	pc, r1, r1, lsl #16
    50c4:	0ba90100 	bleq	fea454cc <BootRAM+0xd9b5c6d>
    50c8:	0000114b 	andeq	r1, r0, fp, asr #2
    50cc:	0013a925 	andseq	sl, r3, r5, lsr #18
    50d0:	001e8e00 	andseq	r8, lr, r0, lsl #28
    50d4:	001e8c00 	andseq	r8, lr, r0, lsl #24
    50d8:	0e2a0000 	cdpeq	0, 2, cr0, cr10, cr0, {0}
    50dc:	2c080010 	stccs	0, cr0, [r8], {16}
    50e0:	2b000013 	blcs	5134 <_Min_Stack_Size+0x4d34>
    50e4:	77025001 	strvc	r5, [r2, -r1]
    50e8:	20000000 	andcs	r0, r0, r0
    50ec:	00091004 	andeq	r1, r9, r4
    50f0:	eb011a00 	bl	4b8f8 <_Min_Stack_Size+0x4b4f8>
    50f4:	01000012 	tsteq	r0, r2, lsl r0
    50f8:	a40106a0 	strge	r0, [r1], #-1696	; 0xfffff960
    50fc:	d008000f 	andle	r0, r8, pc
    5100:	a608000f 	strge	r0, [r8], -pc
    5104:	0100001e 	tsteq	r0, lr, lsl r0
    5108:	000011d9 	ldrdeq	r1, [r0], -r9
    510c:	000b021c 	andeq	r0, fp, ip, lsl r2
    5110:	1aa00100 	bne	fe805518 <BootRAM+0xd775cb9>
    5114:	000009a9 	andeq	r0, r0, r9, lsr #19
    5118:	00001ecc 	andeq	r1, r0, ip, asr #29
    511c:	00001ec6 	andeq	r1, r0, r6, asr #29
    5120:	6e656c1b 	mcrvs	12, 3, r6, cr5, cr11, {0}
    5124:	28a00100 	stmiacs	r0!, {r8}
    5128:	00000041 	andeq	r0, r0, r1, asr #32
    512c:	00001ef9 	strdeq	r1, [r0], -r9
    5130:	00001ef7 	strdeq	r1, [r0], -r7
    5134:	00139626 	andseq	r9, r3, r6, lsr #12
    5138:	000fb200 	andeq	fp, pc, r0, lsl #4
    513c:	01e00108 	mvneq	r0, r8, lsl #2
    5140:	a2010000 	andge	r0, r1, #0
    5144:	0011c80b 	andseq	ip, r1, fp, lsl #16
    5148:	13a92500 			; <UNDEFINED> instruction: 0x13a92500
    514c:	1f0e0000 	svcne	0x000e0000
    5150:	1f0c0000 	svcne	0x000c0000
    5154:	2a000000 	bcs	515c <_Min_Stack_Size+0x4d5c>
    5158:	08000fc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, fp}
    515c:	0000132c 	andeq	r1, r0, ip, lsr #6
    5160:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    5164:	00000075 	andeq	r0, r0, r5, ror r0
    5168:	12cc011a 	sbcne	r0, ip, #-2147483642	; 0x80000006
    516c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5170:	0f7c0106 	svceq	0x007c0106
    5174:	0fa40800 	svceq	0x00a40800
    5178:	1f260800 	svcne	0x00260800
    517c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    5180:	1b000012 	blne	51d0 <_Min_Stack_Size+0x4dd0>
    5184:	00727473 	rsbseq	r7, r2, r3, ror r4
    5188:	5c179c01 	ldcpl	12, cr9, [r7], {1}
    518c:	4e000011 	mcrmi	0, 0, r0, cr0, cr1, {0}
    5190:	4600001f 			; <UNDEFINED> instruction: 0x4600001f
    5194:	2a00001f 	bcs	5218 <_Min_Stack_Size+0x4e18>
    5198:	08000f92 	stmdaeq	r0, {r1, r4, r7, r8, r9, sl, fp}
    519c:	000012fe 	strdeq	r1, [r0], -lr
    51a0:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    51a4:	00000070 	andeq	r0, r0, r0, ror r0
    51a8:	123e011a 	eorsne	r0, lr, #-2147483642	; 0x80000006
    51ac:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    51b0:	0f500106 	svceq	0x00500106
    51b4:	0f7c0800 	svceq	0x007c0800
    51b8:	1f860800 	svcne	0x00860800
    51bc:	73010000 	movwvc	r0, #4096	; 0x1000
    51c0:	1c000012 	stcne	0, cr0, [r0], {18}
    51c4:	00000b02 	andeq	r0, r0, r2, lsl #22
    51c8:	a91b9801 	ldmdbge	fp, {r0, fp, ip, pc}
    51cc:	ac000009 	stcge	0, cr0, [r0], {9}
    51d0:	a600001f 			; <UNDEFINED> instruction: 0xa600001f
    51d4:	1b00001f 	blne	5258 <_Min_Stack_Size+0x4e58>
    51d8:	006e656c 	rsbeq	r6, lr, ip, ror #10
    51dc:	41299801 			; <UNDEFINED> instruction: 0x41299801
    51e0:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    51e4:	d700001f 	smladle	r0, pc, r0, r0	; <UNPREDICTABLE>
    51e8:	2a00001f 	bcs	526c <_Min_Stack_Size+0x4e6c>
    51ec:	08000f6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, fp}
    51f0:	000012fe 	strdeq	r1, [r0], -lr
    51f4:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    51f8:	012b0070 			; <UNDEFINED> instruction: 0x012b0070
    51fc:	00710251 	rsbseq	r0, r1, r1, asr r2
    5200:	011a0000 	tsteq	sl, r0
    5204:	00001294 	muleq	r0, r4, r2
    5208:	01068e01 	tsteq	r6, r1, lsl #28
    520c:	08000f06 	stmdaeq	r0, {r1, r2, r8, r9, sl, fp}
    5210:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
    5214:	00001fec 	andeq	r1, r0, ip, ror #31
    5218:	0012fe01 	andseq	pc, r2, r1, lsl #28
    521c:	01c82f00 	biceq	r2, r8, r0, lsl #30
    5220:	12c30000 	sbcne	r0, r3, #0
    5224:	f9230000 			; <UNDEFINED> instruction: 0xf9230000
    5228:	01000000 	mrseq	r0, (UNDEF: 0)
    522c:	00410d90 	umaaleq	r0, r1, r0, sp
    5230:	20260000 	eorcs	r0, r6, r0
    5234:	20240000 	eorcs	r0, r4, r0
    5238:	1e3d0000 	cdpne	0, 3, cr0, cr13, cr0, {0}
    523c:	0108000f 	tsteq	r8, pc
    5240:	000012fe 	strdeq	r1, [r0], -lr
    5244:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    5248:	012b0070 			; <UNDEFINED> instruction: 0x012b0070
    524c:	00710251 	rsbseq	r0, r1, r1, asr r2
    5250:	96240000 	strtls	r0, [r4], -r0
    5254:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    5258:	0108000f 	tsteq	r8, pc
    525c:	08000f24 	stmdaeq	r0, {r2, r5, r8, r9, sl, fp}
    5260:	08000f2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, sl, fp}
    5264:	ea089301 	b	229e70 <_Min_Stack_Size+0x229a70>
    5268:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
    526c:	000013a9 	andeq	r1, r0, r9, lsr #7
    5270:	0000203b 	andeq	r2, r0, fp, lsr r0
    5274:	00002039 	andeq	r2, r0, r9, lsr r0
    5278:	0f3a2a00 	svceq	0x003a2a00
    527c:	132c0800 			; <UNDEFINED> instruction: 0x132c0800
    5280:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    5284:	4e030550 	cfrshl32mi	mvfx3, mvfx0, r0
    5288:	00200001 	eoreq	r0, r0, r1
    528c:	85013700 	strhi	r3, [r1, #-1792]	; 0xfffff900
    5290:	01000012 	tsteq	r0, r2, lsl r0
    5294:	0101064c 	tsteq	r1, ip, asr #12
    5298:	00001326 	andeq	r1, r0, r6, lsr #6
    529c:	66756238 			; <UNDEFINED> instruction: 0x66756238
    52a0:	224c0100 	subcs	r0, ip, #0, 2
    52a4:	00001326 	andeq	r1, r0, r6, lsr #6
    52a8:	74616438 	strbtvc	r6, [r1], #-1080	; 0xfffffbc8
    52ac:	2f4c0100 	svccs	0x004c0100
    52b0:	00000041 	andeq	r0, r0, r1, asr #32
    52b4:	4a042000 	bmi	10d2bc <_Min_Stack_Size+0x10cebc>
    52b8:	39000008 	stmdbcc	r0, {r3}
    52bc:	00134201 	andseq	r4, r3, r1, lsl #4
    52c0:	09430100 	stmdbeq	r3, {r8}^
    52c4:	00004101 	andeq	r4, r0, r1, lsl #2
    52c8:	000ebe00 	andeq	fp, lr, r0, lsl #28
    52cc:	000ee408 	andeq	lr, lr, r8, lsl #8
    52d0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    52d4:	00139601 	andseq	r9, r3, r1, lsl #12
    52d8:	75621b00 	strbvc	r1, [r2, #-2816]!	; 0xfffff500
    52dc:	43010066 	movwmi	r0, #4198	; 0x1066
    52e0:	00132624 	andseq	r2, r3, r4, lsr #12
    52e4:	00205b00 	eoreq	r5, r0, r0, lsl #22
    52e8:	00205300 	eoreq	r5, r0, r0, lsl #6
    52ec:	65721d00 	ldrbvs	r1, [r2, #-3328]!	; 0xfffff300
    52f0:	44010073 	strmi	r0, [r1], #-115	; 0xffffff8d
    52f4:	0000410b 	andeq	r4, r0, fp, lsl #2
    52f8:	00209100 	eoreq	r9, r0, r0, lsl #2
    52fc:	00208f00 	eoreq	r8, r0, r0, lsl #30
    5300:	13963600 	orrsne	r3, r6, #0, 12
    5304:	0ebe0000 	cdpeq	0, 11, cr0, cr14, cr0, {0}
    5308:	be030800 	cdplt	8, 0, cr0, cr3, cr0, {0}
    530c:	c208000e 	andgt	r0, r8, #14
    5310:	0108000e 	tsteq	r8, lr
    5314:	a9250645 	stmdbge	r5!, {r0, r2, r6, r9, sl}
    5318:	a6000013 			; <UNDEFINED> instruction: 0xa6000013
    531c:	a4000020 	strge	r0, [r0], #-32	; 0xffffffe0
    5320:	00000020 	andeq	r0, r0, r0, lsr #32
    5324:	fd013e00 	stc2	14, cr3, [r1, #-0]
    5328:	01000012 	tsteq	r0, r2, lsl r0
    532c:	4101093f 	tstmi	r1, pc, lsr r9
    5330:	01000000 	mrseq	r0, (UNDEF: 0)
    5334:	000013b6 			; <UNDEFINED> instruction: 0x000013b6
    5338:	66756238 			; <UNDEFINED> instruction: 0x66756238
    533c:	243f0100 	ldrtcs	r0, [pc], #-256	; 5344 <_Min_Stack_Size+0x4f44>
    5340:	00001326 	andeq	r1, r0, r6, lsr #6
    5344:	06f83f00 	ldrbteq	r3, [r8], r0, lsl #30
    5348:	c1030000 	mrsgt	r0, (UNDEF: 3)
    534c:	00950113 	addseq	r0, r5, r3, lsl r1
    5350:	e1030000 	mrs	r0, (UNDEF: 3)
    5354:	32000013 	andcc	r0, r0, #19
    5358:	00000941 	andeq	r0, r0, r1, asr #18
    535c:	4127c103 			; <UNDEFINED> instruction: 0x4127c103
    5360:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    5364:	00667562 	rsbeq	r7, r6, r2, ror #10
    5368:	d138c103 	teqle	r8, r3, lsl #2
    536c:	00000010 	andeq	r0, r0, r0, lsl r0
    5370:	0005aa31 	andeq	sl, r5, r1, lsr sl
    5374:	14b40300 	ldrtne	r0, [r4], #768	; 0x300
    5378:	14140301 	ldrne	r0, [r4], #-769	; 0xfffffcff
    537c:	41320000 	teqmi	r2, r0
    5380:	03000009 	movweq	r0, #9
    5384:	004129b4 	strheq	r2, [r1], #-148	; 0xffffff6c
    5388:	62380000 	eorsvs	r0, r8, #0
    538c:	03006675 	movweq	r6, #1653	; 0x675
    5390:	141440b4 	ldrne	r4, [r4], #-180	; 0xffffff4c
    5394:	af320000 	svcge	0x00320000
    5398:	03000013 	movweq	r0, #19
    539c:	00594eb4 	ldrheq	r4, [r9], #-228	; 0xffffff1c
    53a0:	20000000 	andcs	r0, r0, r0
    53a4:	00006a04 	andeq	r6, r0, r4, lsl #20
    53a8:	12bc4000 	adcsne	r4, ip, #0
    53ac:	eb050000 	bl	1453b4 <_Min_Stack_Size+0x144fb4>
    53b0:	03011605 	movweq	r1, #5637	; 0x1605
    53b4:	00001437 	andeq	r1, r0, r7, lsr r4
    53b8:	00074a41 	andeq	r4, r7, r1, asr #20
    53bc:	05eb0500 	strbeq	r0, [fp, #1280]!	; 0x500
    53c0:	00028030 	andeq	r8, r2, r0, lsr r0
    53c4:	d4400000 	strble	r0, [r0], #-0
    53c8:	05000005 	streq	r0, [r0, #-5]
    53cc:	011605de 			; <UNDEFINED> instruction: 0x011605de
    53d0:	00145403 	andseq	r5, r4, r3, lsl #8
    53d4:	074a4100 	strbeq	r4, [sl, -r0, lsl #2]
    53d8:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    53dc:	02802f05 	addeq	r2, r0, #5, 30
    53e0:	42000000 	andmi	r0, r0, #0
    53e4:	00001396 	muleq	r0, r6, r3
    53e8:	08000eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp}
    53ec:	08000ebe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, sl, fp}
    53f0:	01007d02 	tsteq	r0, r2, lsl #26
    53f4:	00001477 	andeq	r1, r0, r7, ror r4
    53f8:	0013a925 	andseq	sl, r3, r5, lsr #18
    53fc:	0020bd00 	eoreq	fp, r0, r0, lsl #26
    5400:	0020b900 	eoreq	fp, r0, r0, lsl #18
    5404:	fe420000 	cdp2	0, 4, cr0, cr2, cr0, {0}
    5408:	e4000012 	str	r0, [r0], #-18	; 0xffffffee
    540c:	0608000e 	streq	r0, [r8], -lr
    5410:	0208000f 	andeq	r0, r8, #15
    5414:	f201007d 	vqadd.s8	q0, <illegal reg q0.5>, <illegal reg q14.5>
    5418:	43000014 	movwmi	r0, #20
    541c:	0000130d 	andeq	r1, r0, sp, lsl #6
    5420:	19435001 	stmdbne	r3, {r0, ip, lr}^
    5424:	01000013 	tsteq	r0, r3, lsl r0
    5428:	13962451 	orrsne	r2, r6, #1358954496	; 0x51000000
    542c:	0ee40000 	cdpeq	0, 14, cr0, cr4, cr0, {0}
    5430:	e4020800 	str	r0, [r2], #-2048	; 0xfffff800
    5434:	ea08000e 	b	205474 <_Min_Stack_Size+0x205074>
    5438:	0108000e 	tsteq	r8, lr
    543c:	14c1064d 	strbne	r0, [r1], #1613	; 0x64d
    5440:	a9250000 	stmdbge	r5!, {}	; <UNPREDICTABLE>
    5444:	e0000013 	and	r0, r0, r3, lsl r0
    5448:	de000020 	cdple	0, 0, cr0, cr0, cr0, {1}
    544c:	00000020 	andeq	r0, r0, r0, lsr #32
    5450:	0012fe36 	andseq	pc, r2, r6, lsr lr	; <UNPREDICTABLE>
    5454:	000ef000 	andeq	pc, lr, r0
    5458:	0ef00008 	cdpeq	0, 15, cr0, cr0, cr8, {0}
    545c:	0f040800 	svceq	0x00040800
    5460:	4c010800 	stcmi	8, cr0, [r1], {-0}
    5464:	13192506 	tstne	r9, #25165824	; 0x1800000
    5468:	20f50000 	rscscs	r0, r5, r0
    546c:	20f30000 	rscscs	r0, r3, r0
    5470:	0d250000 	stceq	0, cr0, [r5, #-0]
    5474:	0a000013 	beq	54c8 <_Min_Stack_Size+0x50c8>
    5478:	08000021 	stmdaeq	r0, {r0, r5}
    547c:	00000021 	andeq	r0, r0, r1, lsr #32
    5480:	10584200 	subsne	r4, r8, r0, lsl #4
    5484:	10640000 	rsbne	r0, r4, r0
    5488:	10d80800 	sbcsne	r0, r8, r0, lsl #16
    548c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    5490:	152e0100 	strne	r0, [lr, #-256]!	; 0xffffff00
    5494:	67430000 	strbvs	r0, [r3, -r0]
    5498:	01000010 	tsteq	r0, r0, lsl r0
    549c:	10584450 	subsne	r4, r8, r0, asr r4
    54a0:	10b40000 	adcsne	r0, r4, r0
    54a4:	10000800 	andne	r0, r0, r0, lsl #16
    54a8:	02000002 	andeq	r0, r0, #2
    54ac:	67250644 	strvs	r0, [r5, -r4, asr #12]!
    54b0:	1f000010 	svcne	0x00000010
    54b4:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    54b8:	00000021 	andeq	r0, r0, r1, lsr #32
    54bc:	01014500 	tsteq	r1, r0, lsl #10
    54c0:	000005a9 	andeq	r0, r0, r9, lsr #11
    54c4:	000005a9 	andeq	r0, r0, r9, lsr #11
    54c8:	4506b303 	strmi	fp, [r6, #-771]	; 0xfffffcfd
    54cc:	06f70101 	ldrbteq	r0, [r7], r1, lsl #2
    54d0:	06f70000 	ldrbteq	r0, [r7], r0
    54d4:	c0030000 	andgt	r0, r3, r0
    54d8:	01014505 	tsteq	r1, r5, lsl #10
    54dc:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    54e0:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    54e4:	00062903 	andeq	r2, r6, r3, lsl #18
    54e8:	0000095d 	andeq	r0, r0, sp, asr r9
    54ec:	11ef0002 	mvnne	r0, r2
    54f0:	01040000 	mrseq	r0, (UNDEF: 4)
    54f4:	00000355 	andeq	r0, r0, r5, asr r3
    54f8:	00138a0c 	andseq	r8, r3, ip, lsl #20
    54fc:	0000ca00 	andeq	ip, r0, r0, lsl #20
    5500:	00147800 	andseq	r7, r4, r0, lsl #16
    5504:	00167808 	andseq	r7, r6, r8, lsl #16
    5508:	001eb508 	andseq	fp, lr, r8, lsl #10
    550c:	06010200 	streq	r0, [r1], -r0, lsl #4
    5510:	00000298 	muleq	r0, r8, r2
    5514:	b1050202 	tstlt	r5, r2, lsl #4
    5518:	02000002 	andeq	r0, r0, #2
    551c:	00930504 	addseq	r0, r3, r4, lsl #10
    5520:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5524:	00008e05 	andeq	r8, r0, r5, lsl #28
    5528:	07300300 	ldreq	r0, [r0, -r0, lsl #6]!
    552c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    5530:	00005218 	andeq	r5, r0, r8, lsl r2
    5534:	00410400 	subeq	r0, r1, r0, lsl #8
    5538:	01020000 	mrseq	r0, (UNDEF: 2)
    553c:	00029608 	andeq	r9, r2, r8, lsl #12
    5540:	01440300 	mrseq	r0, SPSR_abt
    5544:	31030000 	mrscc	r0, (UNDEF: 3)
    5548:	00006f19 	andeq	r6, r0, r9, lsl pc
    554c:	00590400 	subseq	r0, r9, r0, lsl #8
    5550:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
    5554:	02000000 	andeq	r0, r0, #0
    5558:	01be0702 			; <UNDEFINED> instruction: 0x01be0702
    555c:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    5560:	03000002 	movweq	r0, #2
    5564:	00821934 	addeq	r1, r2, r4, lsr r9
    5568:	04020000 	streq	r0, [r2], #-0
    556c:	00005e07 	andeq	r5, r0, r7, lsl #28
    5570:	07080200 	streq	r0, [r8, -r0, lsl #4]
    5574:	00000059 	andeq	r0, r0, r9, asr r0
    5578:	69050406 	stmdbvs	r5, {r1, r2, sl}
    557c:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    5580:	00000090 	muleq	r0, r0, r0
    5584:	63070402 	movwvs	r0, #29698	; 0x7402
    5588:	07000000 	streq	r0, [r0, -r0]
    558c:	091e0208 	ldmdbeq	lr, {r3, r9}
    5590:	000000f8 	strdeq	r0, [r0], -r8
    5594:	0004ad08 	andeq	sl, r4, r8, lsl #26
    5598:	0b1f0200 	bleq	7c5da0 <_Min_Stack_Size+0x7c59a0>
    559c:	00000041 	andeq	r0, r0, r1, asr #32
    55a0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    55a4:	000008fc 	strdeq	r0, [r0], -ip
    55a8:	410b2002 	tstmi	fp, r2
    55ac:	02000000 	andeq	r0, r0, #0
    55b0:	2a080123 	bcs	205a44 <_Min_Stack_Size+0x205644>
    55b4:	02000005 	andeq	r0, r0, #5
    55b8:	00590c21 	subseq	r0, r9, r1, lsr #24
    55bc:	23020000 	movwcs	r0, #8192	; 0x2000
    55c0:	04350802 	ldrteq	r0, [r5], #-2050	; 0xfffff7fe
    55c4:	22020000 	andcs	r0, r2, #0
    55c8:	0000590c 	andeq	r5, r0, ip, lsl #18
    55cc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    55d0:	0008df08 	andeq	sp, r8, r8, lsl #30
    55d4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    55d8:	00000059 	andeq	r0, r0, r9, asr r0
    55dc:	00062302 	andeq	r2, r6, r2, lsl #6
    55e0:	00096803 	andeq	r6, r9, r3, lsl #16
    55e4:	02240200 	eoreq	r0, r4, #0, 4
    55e8:	000000a3 	andeq	r0, r0, r3, lsr #1
    55ec:	0002a409 	andeq	sl, r2, r9, lsl #8
    55f0:	06ce0400 	strbeq	r0, [lr], r0, lsl #8
    55f4:	00009715 	andeq	r9, r0, r5, lsl r7
    55f8:	0a010100 	beq	45a00 <_Min_Stack_Size+0x45600>
    55fc:	0000017a 	andeq	r0, r0, sl, ror r1
    5600:	76114c05 	ldrvc	r4, [r1], -r5, lsl #24
    5604:	01000000 	mrseq	r0, (UNDEF: 0)
    5608:	06540b01 	ldrbeq	r0, [r4], -r1, lsl #22
    560c:	cc090237 	sfmgt	f0, 4, [r9], {55}	; 0x37
    5610:	0c000002 	stceq	0, cr0, [r0], {2}
    5614:	00000656 	andeq	r0, r0, r6, asr r6
    5618:	11023906 	tstne	r2, r6, lsl #18
    561c:	00000065 	andeq	r0, r0, r5, rrx
    5620:	0c002302 	stceq	3, cr2, [r0], {2}
    5624:	00000848 	andeq	r0, r0, r8, asr #16
    5628:	11023a06 	tstne	r2, r6, lsl #20
    562c:	00000065 	andeq	r0, r0, r5, rrx
    5630:	0c022302 	stceq	3, cr2, [r2], {2}
    5634:	000006a7 	andeq	r0, r0, r7, lsr #13
    5638:	11023b06 	tstne	r2, r6, lsl #22
    563c:	00000065 	andeq	r0, r0, r5, rrx
    5640:	0c042302 	stceq	3, cr2, [r4], {2}
    5644:	00000852 	andeq	r0, r0, r2, asr r8
    5648:	11023c06 	tstne	r2, r6, lsl #24
    564c:	00000065 	andeq	r0, r0, r5, rrx
    5650:	0c062302 	stceq	3, cr2, [r6], {2}
    5654:	0000073f 	andeq	r0, r0, pc, lsr r7
    5658:	11023d06 	tstne	r2, r6, lsl #26
    565c:	00000065 	andeq	r0, r0, r5, rrx
    5660:	0c082302 	stceq	3, cr2, [r8], {2}
    5664:	0000085c 	andeq	r0, r0, ip, asr r8
    5668:	11023e06 	tstne	r2, r6, lsl #28
    566c:	00000065 	andeq	r0, r0, r5, rrx
    5670:	0c0a2302 	stceq	3, cr2, [sl], {2}
    5674:	0000076e 	andeq	r0, r0, lr, ror #14
    5678:	11023f06 	tstne	r2, r6, lsl #30
    567c:	00000065 	andeq	r0, r0, r5, rrx
    5680:	0c0c2302 	stceq	3, cr2, [ip], {2}
    5684:	00000866 	andeq	r0, r0, r6, ror #16
    5688:	11024006 	tstne	r2, r6
    568c:	00000065 	andeq	r0, r0, r5, rrx
    5690:	0c0e2302 	stceq	3, cr2, [lr], {2}
    5694:	000009f5 	strdeq	r0, [r0], -r5
    5698:	11024106 	tstne	r2, r6, lsl #2
    569c:	00000065 	andeq	r0, r0, r5, rrx
    56a0:	0c102302 	ldceq	3, cr2, [r0], {2}
    56a4:	00000870 	andeq	r0, r0, r0, ror r8
    56a8:	11024206 	tstne	r2, r6, lsl #4
    56ac:	00000065 	andeq	r0, r0, r5, rrx
    56b0:	0c122302 	ldceq	3, cr2, [r2], {2}
    56b4:	00000843 	andeq	r0, r0, r3, asr #16
    56b8:	11024306 	tstne	r2, r6, lsl #6
    56bc:	00000065 	andeq	r0, r0, r5, rrx
    56c0:	0c142302 	ldceq	3, cr2, [r4], {2}
    56c4:	0000087a 	andeq	r0, r0, sl, ror r8
    56c8:	11024406 	tstne	r2, r6, lsl #8
    56cc:	00000065 	andeq	r0, r0, r5, rrx
    56d0:	0c162302 	ldceq	3, cr2, [r6], {2}
    56d4:	000008e7 	andeq	r0, r0, r7, ror #17
    56d8:	11024506 	tstne	r2, r6, lsl #10
    56dc:	00000065 	andeq	r0, r0, r5, rrx
    56e0:	0c182302 	ldceq	3, cr2, [r8], {2}
    56e4:	00000884 	andeq	r0, r0, r4, lsl #17
    56e8:	11024606 	tstne	r2, r6, lsl #12
    56ec:	00000065 	andeq	r0, r0, r5, rrx
    56f0:	0c1a2302 	ldceq	3, cr2, [sl], {2}
    56f4:	00000963 	andeq	r0, r0, r3, ror #18
    56f8:	11024706 	tstne	r2, r6, lsl #14
    56fc:	00000065 	andeq	r0, r0, r5, rrx
    5700:	0c1c2302 	ldceq	3, cr2, [ip], {2}
    5704:	0000027a 	andeq	r0, r0, sl, ror r2
    5708:	11024806 	tstne	r2, r6, lsl #16
    570c:	000002dc 	ldrdeq	r0, [r0], -ip
    5710:	0c1e2302 	ldceq	3, cr2, [lr], {2}
    5714:	0000090f 	andeq	r0, r0, pc, lsl #18
    5718:	11024906 	tstne	r2, r6, lsl #18
    571c:	00000065 	andeq	r0, r0, r5, rrx
    5720:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    5724:	00000a9a 	muleq	r0, sl, sl
    5728:	11024a06 	tstne	r2, r6, lsl #20
    572c:	00000065 	andeq	r0, r0, r5, rrx
    5730:	0c422302 	mcrreq	3, 0, r2, r2, cr2
    5734:	00000551 	andeq	r0, r0, r1, asr r5
    5738:	11024b06 	tstne	r2, r6, lsl #22
    573c:	00000065 	andeq	r0, r0, r5, rrx
    5740:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    5744:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    5748:	11024c06 	tstne	r2, r6, lsl #24
    574c:	00000065 	andeq	r0, r0, r5, rrx
    5750:	0d462302 	stcleq	3, cr2, [r6, #-8]
    5754:	00524e46 	subseq	r4, r2, r6, asr #28
    5758:	11024d06 	tstne	r2, r6, lsl #26
    575c:	00000065 	andeq	r0, r0, r5, rrx
    5760:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    5764:	000008a9 	andeq	r0, r0, r9, lsr #17
    5768:	11024e06 	tstne	r2, r6, lsl #28
    576c:	00000065 	andeq	r0, r0, r5, rrx
    5770:	0c4a2302 	mcrreq	3, 0, r2, sl, cr2
    5774:	000005f9 	strdeq	r0, [r0], -r9
    5778:	11024f06 	tstne	r2, r6, lsl #30
    577c:	00000065 	andeq	r0, r0, r5, rrx
    5780:	0c4c2302 	mcrreq	3, 0, r2, ip, cr2
    5784:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    5788:	11025006 	tstne	r2, r6
    578c:	00000065 	andeq	r0, r0, r5, rrx
    5790:	0c4e2302 	mcrreq	3, 0, r2, lr, cr2
    5794:	00000a2b 	andeq	r0, r0, fp, lsr #20
    5798:	11025106 	tstne	r2, r6, lsl #2
    579c:	00000065 	andeq	r0, r0, r5, rrx
    57a0:	0c502302 	mrrceq	3, 0, r2, r0, cr2
    57a4:	00000aba 			; <UNDEFINED> instruction: 0x00000aba
    57a8:	11025206 	tstne	r2, r6, lsl #4
    57ac:	00000065 	andeq	r0, r0, r5, rrx
    57b0:	00522302 	subseq	r2, r2, r2, lsl #6
    57b4:	0000650e 	andeq	r6, r0, lr, lsl #10
    57b8:	0002dc00 	andeq	sp, r2, r0, lsl #24
    57bc:	009c0f00 	addseq	r0, ip, r0, lsl #30
    57c0:	00100000 	andseq	r0, r0, r0
    57c4:	0002cc04 	andeq	ip, r2, r4, lsl #24
    57c8:	05ed1000 	strbeq	r1, [sp, #0]!
    57cc:	53060000 	movwpl	r0, #24576	; 0x6000
    57d0:	01210302 			; <UNDEFINED> instruction: 0x01210302
    57d4:	04110000 	ldreq	r0, [r1], #-0
    57d8:	0a050104 	beq	145bf0 <_Min_Stack_Size+0x1457f0>
    57dc:	00000324 	andeq	r0, r0, r4, lsr #6
    57e0:	00747312 	rsbseq	r7, r4, r2, lsl r3
    57e4:	65150601 	ldrvs	r0, [r5, #-1537]	; 0xfffff9ff
    57e8:	02000000 	andeq	r0, r0, #0
    57ec:	65120023 	ldrvs	r0, [r2, #-35]	; 0xffffffdd
    57f0:	0601006e 	streq	r0, [r1], -lr, rrx
    57f4:	00006518 	andeq	r6, r0, r8, lsl r5
    57f8:	02230200 	eoreq	r0, r3, #0, 4
    57fc:	72726112 	rsbsvc	r6, r2, #-2147483644	; 0x80000004
    5800:	14070100 	strne	r0, [r7], #-256	; 0xffffff00
    5804:	0000033a 	andeq	r0, r0, sl, lsr r3
    5808:	00042302 	andeq	r2, r4, r2, lsl #6
    580c:	0002ee04 	andeq	lr, r2, r4, lsl #28
    5810:	004d0e00 	subeq	r0, sp, r0, lsl #28
    5814:	033a0000 	teqeq	sl, #0
    5818:	9c130000 	ldcls	0, cr0, [r3], {-0}
    581c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    5820:	29040003 	stmdbcs	r4, {r0, r1}
    5824:	14000003 	strne	r0, [r0], #-3
    5828:	00001385 	andeq	r1, r0, r5, lsl #7
    582c:	24020801 	strcs	r0, [r2], #-2049	; 0xfffff7ff
    5830:	01000003 	tsteq	r0, r3
    5834:	02f60305 	rscseq	r0, r6, #335544320	; 0x14000000
    5838:	55152000 	ldrpl	r2, [r5, #-0]
    583c:	07000012 	smladeq	r0, r2, r0, r0
    5840:	9c083a01 			; <UNDEFINED> instruction: 0x9c083a01
    5844:	08000003 	stmdaeq	r0, {r0, r1}
    5848:	00001235 	andeq	r1, r0, r5, lsr r2
    584c:	760c3b01 	strvc	r3, [ip], -r1, lsl #22
    5850:	02000000 	andeq	r0, r0, #0
    5854:	5a080023 	bpl	2058e8 <_Min_Stack_Size+0x2054e8>
    5858:	01000013 	tsteq	r0, r3, lsl r0
    585c:	00410b3c 	subeq	r0, r1, ip, lsr fp
    5860:	23020000 	movwcs	r0, #8192	; 0x2000
    5864:	12f60804 	rscsne	r0, r6, #4, 16	; 0x40000
    5868:	3d010000 	stccc	0, cr0, [r1, #-0]
    586c:	0000410b 	andeq	r4, r0, fp, lsl #2
    5870:	05230200 	streq	r0, [r3, #-512]!	; 0xfffffe00
    5874:	00132408 	andseq	r2, r3, r8, lsl #8
    5878:	0b3e0100 	bleq	f85c80 <_Min_Stack_Size+0xf85880>
    587c:	00000041 	andeq	r0, r0, r1, asr #32
    5880:	00062302 	andeq	r2, r6, r2, lsl #6
    5884:	00035204 	andeq	r5, r3, r4, lsl #4
    5888:	13761400 	cmnne	r6, #0, 8
    588c:	41010000 	mrsmi	r0, (UNDEF: 1)
    5890:	00039c20 	andeq	r9, r3, r0, lsr #24
    5894:	03050100 	movweq	r0, #20736	; 0x5100
    5898:	2000001a 	andcs	r0, r0, sl, lsl r0
    589c:	0e450116 	mcreq	1, 2, r0, cr5, cr6, {0}
    58a0:	8c010000 	stchi	0, cr0, [r1], {-0}
    58a4:	00163806 	andseq	r3, r6, r6, lsl #16
    58a8:	00167808 	andseq	r7, r6, r8, lsl #16
    58ac:	00213208 	eoreq	r3, r1, r8, lsl #4
    58b0:	04a80100 	strteq	r0, [r8], #256	; 0x100
    58b4:	af170000 	svcge	0x00170000
    58b8:	01000013 	tsteq	r0, r3, lsl r0
    58bc:	00590c8d 	subseq	r0, r9, sp, lsl #25
    58c0:	216e0000 	cmncs	lr, r0
    58c4:	216a0000 	cmncs	sl, r0
    58c8:	62180000 	andsvs	r0, r8, #0
    58cc:	01006675 	tsteq	r0, r5, ror r6
    58d0:	04a8158e 	strteq	r1, [r8], #1422	; 0x58e
    58d4:	02020000 	andeq	r0, r2, #0
    58d8:	ad195891 	ldcge	8, cr5, [r9, #-580]	; 0xfffffdbc
    58dc:	50000008 	andpl	r0, r0, r8
    58e0:	01080016 	tsteq	r8, r6, lsl r0
    58e4:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
    58e8:	0800165a 	stmdaeq	r0, {r1, r3, r4, r6, r9, sl, ip}
    58ec:	48059101 	stmdami	r5, {r0, r8, ip, pc}
    58f0:	1a000004 	bne	5908 <_Min_Stack_Size+0x5508>
    58f4:	000008d3 	ldrdeq	r0, [r0], -r3
    58f8:	00002190 	muleq	r0, r0, r1
    58fc:	0000218c 	andeq	r2, r0, ip, lsl #3
    5900:	0008c71a 	andeq	ip, r8, sl, lsl r7
    5904:	0021b000 	eoreq	fp, r1, r0
    5908:	0021ae00 	eoreq	sl, r1, r0, lsl #28
    590c:	08bb1a00 	ldmeq	fp!, {r9, fp, ip}
    5910:	21c50000 	biccs	r0, r5, r0
    5914:	21c30000 	biccs	r0, r3, r0
    5918:	5a1b0000 	bpl	6c5920 <_Min_Stack_Size+0x6c5520>
    591c:	36080016 			; <UNDEFINED> instruction: 0x36080016
    5920:	1c000009 	stcne	0, cr0, [r0], {9}
    5924:	36015001 	strcc	r5, [r1], -r1
    5928:	0251011c 	subseq	r0, r1, #28, 2
    592c:	0000007d 	andeq	r0, r0, sp, ror r0
    5930:	00088219 	andeq	r8, r8, r9, lsl r2
    5934:	00166600 	andseq	r6, r6, r0, lsl #12
    5938:	16660108 	strbtne	r0, [r6], -r8, lsl #2
    593c:	166e0800 	strbtne	r0, [lr], -r0, lsl #16
    5940:	94010800 	strls	r0, [r1], #-2048	; 0xfffff800
    5944:	00049105 	andeq	r9, r4, r5, lsl #2
    5948:	08a01a00 	stmiaeq	r0!, {r9, fp, ip}
    594c:	21dc0000 	bicscs	r0, ip, r0
    5950:	21da0000 	bicscs	r0, sl, r0
    5954:	941a0000 	ldrls	r0, [sl], #-0
    5958:	f1000008 	cps	#8
    595c:	ef000021 	svc	0x00000021
    5960:	1b000021 	blne	59ec <_Min_Stack_Size+0x55ec>
    5964:	0800166e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9, sl, ip}
    5968:	00000944 	andeq	r0, r0, r4, asr #18
    596c:	0150011c 	cmpeq	r0, ip, lsl r1
    5970:	51011c37 	tstpl	r1, r7, lsr ip
    5974:	00007d02 	andeq	r7, r0, r2, lsl #26
    5978:	16501b00 	ldrbne	r1, [r0], -r0, lsl #22
    597c:	077f0800 	ldrbeq	r0, [pc, -r0, lsl #16]!
    5980:	011c0000 	tsteq	ip, r0
    5984:	007d0250 	rsbseq	r0, sp, r0, asr r2
    5988:	0251011c 	subseq	r0, r1, #28, 2
    598c:	00002008 	andeq	r2, r0, r8
    5990:	0000410e 	andeq	r4, r0, lr, lsl #2
    5994:	0004b800 	andeq	fp, r4, r0, lsl #16
    5998:	009c0f00 	addseq	r0, ip, r0, lsl #30
    599c:	001f0000 	andseq	r0, pc, r0
    59a0:	1398011d 	orrsne	r0, r8, #1073741831	; 0x40000007
    59a4:	6f010000 	svcvs	0x00010000
    59a8:	15980106 	ldrne	r0, [r8, #262]	; 0x106
    59ac:	16380800 	ldrtne	r0, [r8], -r0, lsl #16
    59b0:	22050800 	andcs	r0, r5, #0, 16
    59b4:	cc010000 	stcgt	0, cr0, [r1], {-0}
    59b8:	1e000005 	cdpne	0, 0, cr0, cr0, cr5, {0}
    59bc:	0000137e 	andeq	r1, r0, lr, ror r3
    59c0:	411b6f01 	tstmi	fp, r1, lsl #30
    59c4:	41000000 	mrsmi	r0, (UNDEF: 0)
    59c8:	3d000022 	stccc	0, cr0, [r0, #-136]	; 0xffffff78
    59cc:	1f000022 	svcne	0x00000022
    59d0:	00667562 	rsbeq	r7, r6, r2, ror #10
    59d4:	cc2c6f01 	stcgt	15, cr6, [ip], #-4
    59d8:	6c000005 	stcvs	0, cr0, [r0], {5}
    59dc:	62000022 	andvs	r0, r0, #34	; 0x22
    59e0:	1e000022 	cdpne	0, 0, cr0, cr0, cr2, {1}
    59e4:	000013af 	andeq	r1, r0, pc, lsr #7
    59e8:	90356f01 	eorsls	r6, r5, r1, lsl #30
    59ec:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    59f0:	ae000022 	cdpge	0, 0, cr0, cr0, cr2, {1}
    59f4:	20000022 	andcs	r0, r0, r2, lsr #32
    59f8:	000013b4 			; <UNDEFINED> instruction: 0x000013b4
    59fc:	41127001 	tstmi	r2, r1
    5a00:	05000000 	streq	r0, [r0, #-0]
    5a04:	00002103 	andeq	r2, r0, r3, lsl #2
    5a08:	76612120 	strbtvc	r2, [r1], -r0, lsr #2
    5a0c:	0c710100 	ldfeqe	f0, [r1], #-0
    5a10:	00000059 	andeq	r0, r0, r9, asr r0
    5a14:	000022fc 	strdeq	r2, [r0], -ip
    5a18:	000022fa 	strdeq	r2, [r0], -sl
    5a1c:	01006921 	tsteq	r0, r1, lsr #18
    5a20:	00590c79 	subseq	r0, r9, r9, ror ip
    5a24:	23210000 			; <UNDEFINED> instruction: 0x23210000
    5a28:	23150000 	tstcs	r5, #0
    5a2c:	70210000 	eorvc	r0, r1, r0
    5a30:	79010069 	stmdbvc	r1, {r0, r3, r5, r6}
    5a34:	0000590f 	andeq	r5, r0, pc, lsl #18
    5a38:	00237500 	eoreq	r7, r3, r0, lsl #10
    5a3c:	00236f00 	eoreq	r6, r3, r0, lsl #30
    5a40:	15a62200 	strne	r2, [r6, #512]!	; 0x200
    5a44:	08690800 	stmdaeq	r9!, {fp}^
    5a48:	c4230000 	strtgt	r0, [r3], #-0
    5a4c:	f6080015 			; <UNDEFINED> instruction: 0xf6080015
    5a50:	7e000007 	cdpvc	0, 0, cr0, cr0, cr7, {0}
    5a54:	1c000005 	stcne	0, cr0, [r0], {5}
    5a58:	03055001 	movweq	r5, #20481	; 0x5001
    5a5c:	080019bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, fp, ip}
    5a60:	0151011c 	cmpeq	r1, ip, lsl r1
    5a64:	ca230033 	bgt	8c5b38 <_Min_Stack_Size+0x8c5738>
    5a68:	d2080015 	andle	r0, r8, #21
    5a6c:	92000005 	andls	r0, r0, #5
    5a70:	1c000005 	stcne	0, cr0, [r0], {5}
    5a74:	74025001 	strvc	r5, [r2], #-1
    5a78:	ee240000 	cdp	0, 2, cr0, cr4, cr0, {0}
    5a7c:	01080015 	tsteq	r8, r5, lsl r0
    5a80:	000007f6 	strdeq	r0, [r0], -r6
    5a84:	0015fa22 	andseq	pc, r5, r2, lsr #20
    5a88:	0007f608 	andeq	pc, r7, r8, lsl #12
    5a8c:	16022200 	strne	r2, [r2], -r0, lsl #4
    5a90:	07f60800 	ldrbeq	r0, [r6, r0, lsl #16]!
    5a94:	08230000 	stmdaeq	r3!, {}	; <UNPREDICTABLE>
    5a98:	d2080016 	andle	r0, r8, #22
    5a9c:	c2000005 	andgt	r0, r0, #5
    5aa0:	1c000005 	stcne	0, cr0, [r0], {5}
    5aa4:	74025001 	strvc	r5, [r2], #-1
    5aa8:	1e220000 	cdpne	0, 2, cr0, cr2, cr0, {0}
    5aac:	f6080016 			; <UNDEFINED> instruction: 0xf6080016
    5ab0:	00000007 	andeq	r0, r0, r7
    5ab4:	00410425 	subeq	r0, r1, r5, lsr #8
    5ab8:	01260000 			; <UNDEFINED> instruction: 0x01260000
    5abc:	00001363 	andeq	r1, r0, r3, ror #6
    5ac0:	01066701 	tsteq	r6, r1, lsl #14
    5ac4:	0005ee01 	andeq	lr, r5, r1, lsl #28
    5ac8:	137e2700 	cmnne	lr, #0, 14
    5acc:	67010000 	strvs	r0, [r1, -r0]
    5ad0:	00004116 	andeq	r4, r0, r6, lsl r1
    5ad4:	01160000 	tsteq	r6, r0
    5ad8:	00000c10 	andeq	r0, r0, r0, lsl ip
    5adc:	58066101 	stmdapl	r6, {r0, r8, sp, lr}
    5ae0:	82080015 	andhi	r0, r8, #21
    5ae4:	9e080015 	mcrls	0, 0, r0, cr8, cr5, {0}
    5ae8:	01000023 	tsteq	r0, r3, lsr #32
    5aec:	00000670 	andeq	r0, r0, r0, ror r6
    5af0:	00156623 	andseq	r6, r5, r3, lsr #12
    5af4:	00095208 	andeq	r5, r9, r8, lsl #4
    5af8:	00062b00 	andeq	r2, r6, r0, lsl #22
    5afc:	50011c00 	andpl	r1, r1, r0, lsl #24
    5b00:	1c860902 			; <UNDEFINED> instruction: 0x1c860902
    5b04:	33015101 	movwcc	r5, #4353	; 0x1101
    5b08:	0152011c 	cmpeq	r2, ip, lsl r1
    5b0c:	53011c38 	movwpl	r1, #7224	; 0x1c38
    5b10:	23003001 	movwcs	r3, #1
    5b14:	08001572 	stmdaeq	r0, {r1, r4, r5, r6, r8, sl, ip}
    5b18:	00000952 	andeq	r0, r0, r2, asr r9
    5b1c:	0000064f 	andeq	r0, r0, pc, asr #12
    5b20:	0250011c 	subseq	r0, r0, #28, 2
    5b24:	011c8309 	tsteq	ip, r9, lsl #6
    5b28:	1c320151 	ldfnes	f0, [r2], #-324	; 0xfffffebc
    5b2c:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    5b30:	53011c20 	movwpl	r1, #7200	; 0x1c20
    5b34:	28003001 	stmdacs	r0, {r0, ip, sp}
    5b38:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
    5b3c:	00095201 	andeq	r5, r9, r1, lsl #4
    5b40:	50011c00 	andpl	r1, r1, r0, lsl #24
    5b44:	011c3301 	tsteq	ip, r1, lsl #6
    5b48:	1c320151 	ldfnes	f0, [r2], #-324	; 0xfffffebc
    5b4c:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    5b50:	53011c20 	movwpl	r1, #7200	; 0x1c20
    5b54:	00003001 	andeq	r3, r0, r1
    5b58:	0ecc0129 	poleqep	f0, f4, #1.0
    5b5c:	55010000 	strpl	r0, [r1, #-0]
    5b60:	07150106 	ldreq	r0, [r5, -r6, lsl #2]
    5b64:	15280000 	strne	r0, [r8, #-0]!
    5b68:	15580800 	ldrbne	r0, [r8, #-2048]	; 0xfffff800
    5b6c:	23ca0800 	biccs	r0, sl, #0, 16
    5b70:	15010000 	strne	r0, [r1, #-0]
    5b74:	1f000007 	svcne	0x00000007
    5b78:	00716572 	rsbseq	r6, r1, r2, ror r5
    5b7c:	1c255501 	cfstr32ne	mvfx5, [r5], #-4
    5b80:	f2000007 	vhadd.s8	d0, d0, d7
    5b84:	ea000023 	b	5c18 <_Min_Stack_Size+0x5818>
    5b88:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5b8c:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    5b90:	59335501 	ldmdbpl	r3!, {r0, r8, sl, ip, lr}
    5b94:	32000000 	andcc	r0, r0, #0
    5b98:	2c000024 	stccs	0, cr0, [r0], {36}	; 0x24
    5b9c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5ba0:	0000083b 	andeq	r0, r0, fp, lsr r8
    5ba4:	59445501 	stmdbpl	r4, {r0, r8, sl, ip, lr}^
    5ba8:	64000000 	strvs	r0, [r0], #-0
    5bac:	5e000024 	cdppl	0, 0, cr0, cr0, cr4, {1}
    5bb0:	2a000024 	bcs	5c48 <_Min_Stack_Size+0x5848>
    5bb4:	00000882 	andeq	r0, r0, r2, lsl #17
    5bb8:	08001542 	stmdaeq	r0, {r1, r6, r8, sl, ip}
    5bbc:	00154201 	andseq	r4, r5, r1, lsl #4
    5bc0:	00154a08 	andseq	r4, r5, r8, lsl #20
    5bc4:	095a0108 	ldmdbeq	sl, {r3, r8}^
    5bc8:	0008a01a 	andeq	sl, r8, sl, lsl r0
    5bcc:	00249200 	eoreq	r9, r4, r0, lsl #4
    5bd0:	00249000 	eoreq	r9, r4, r0
    5bd4:	08941a00 	ldmeq	r4, {r9, fp, ip}
    5bd8:	24ac0000 	strtcs	r0, [ip], #0
    5bdc:	24aa0000 	strtcs	r0, [sl], #0
    5be0:	4a1b0000 	bmi	6c5be8 <_Min_Stack_Size+0x6c57e8>
    5be4:	44080015 	strmi	r0, [r8], #-21	; 0xffffffeb
    5be8:	1c000009 	stcne	0, cr0, [r0], {9}
    5bec:	74025001 	strvc	r5, [r2], #-1
    5bf0:	51011c00 	tstpl	r1, r0, lsl #24
    5bf4:	001a0305 	andseq	r0, sl, r5, lsl #6
    5bf8:	00002000 	andeq	r2, r0, r0
    5bfc:	08010200 	stmdaeq	r1, {r9}
    5c00:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    5c04:	00f80425 	rscseq	r0, r8, r5, lsr #8
    5c08:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    5c0c:	00000d22 	andeq	r0, r0, r2, lsr #26
    5c10:	01064801 	tsteq	r6, r1, lsl #16
    5c14:	00000715 	andeq	r0, r0, r5, lsl r7
    5c18:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
    5c1c:	08001528 	stmdaeq	r0, {r3, r5, r8, sl, ip}
    5c20:	01007d02 	tsteq	r0, r2, lsl #26
    5c24:	00000771 	andeq	r0, r0, r1, ror r7
    5c28:	7165721f 	cmnvc	r5, pc, lsl r2
    5c2c:	24480100 	strbcs	r0, [r8], #-256	; 0xffffff00
    5c30:	0000071c 	andeq	r0, r0, ip, lsl r7
    5c34:	000024c8 	andeq	r2, r0, r8, asr #9
    5c38:	000024c0 	andeq	r2, r0, r0, asr #9
    5c3c:	000b022c 	andeq	r0, fp, ip, lsr #4
    5c40:	30480100 	subcc	r0, r8, r0, lsl #2
    5c44:	00000771 	andeq	r0, r0, r1, ror r7
    5c48:	af2c5101 	svcge	0x002c5101
    5c4c:	01000013 	tsteq	r0, r3, lsl r0
    5c50:	07794048 	ldrbeq	r4, [r9, -r8, asr #32]!
    5c54:	52010000 	andpl	r0, r1, #0
    5c58:	77042500 	strvc	r2, [r4, -r0, lsl #10]
    5c5c:	2d000007 	stccs	0, cr0, [r0, #-28]	; 0xffffffe4
    5c60:	59042504 	stmdbpl	r4, {r2, r8, sl, sp}
    5c64:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    5c68:	0013bd01 	andseq	fp, r3, r1, lsl #26
    5c6c:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    5c70:	00009001 	andeq	r9, r0, r1
    5c74:	0014c800 	andseq	ip, r4, r0, lsl #16
    5c78:	0014fc08 	andseq	pc, r4, r8, lsl #24
    5c7c:	00250208 	eoreq	r0, r5, r8, lsl #4
    5c80:	07f60100 	ldrbeq	r0, [r6, r0, lsl #2]!
    5c84:	621f0000 	andsvs	r0, pc, #0
    5c88:	01006675 	tsteq	r0, r5, ror r6
    5c8c:	05cc181d 	strbeq	r1, [ip, #2077]	; 0x81d
    5c90:	252a0000 	strcs	r0, [sl, #-0]!
    5c94:	25220000 	strcs	r0, [r2, #-0]!
    5c98:	af1e0000 	svcge	0x001e0000
    5c9c:	01000013 	tsteq	r0, r3, lsl r0
    5ca0:	0090211d 	addseq	r2, r0, sp, lsl r1
    5ca4:	25640000 	strbcs	r0, [r4, #-0]!
    5ca8:	25600000 	strbcs	r0, [r0, #-0]!
    5cac:	61210000 			; <UNDEFINED> instruction: 0x61210000
    5cb0:	1e010076 	mcrne	0, 0, r0, cr1, cr6, {3}
    5cb4:	0000590c 	andeq	r5, r0, ip, lsl #18
    5cb8:	00258400 	eoreq	r8, r5, r0, lsl #8
    5cbc:	00258200 	eoreq	r8, r5, r0, lsl #4
    5cc0:	74732100 	ldrbtvc	r2, [r3], #-256	; 0xffffff00
    5cc4:	0c1f0100 	ldfeqs	f0, [pc], {-0}
    5cc8:	00000059 	andeq	r0, r0, r9, asr r0
    5ccc:	0000259b 	muleq	r0, fp, r5
    5cd0:	00002597 	muleq	r0, r7, r5
    5cd4:	0014d022 	andseq	sp, r4, r2, lsr #32
    5cd8:	00086908 	andeq	r6, r8, r8, lsl #18
    5cdc:	011d0000 	tsteq	sp, r0
    5ce0:	0000136b 	andeq	r1, r0, fp, ror #6
    5ce4:	01060f01 	tsteq	r6, r1, lsl #30
    5ce8:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
    5cec:	080014c8 	stmdaeq	r0, {r3, r6, r7, sl, ip}
    5cf0:	000025b9 			; <UNDEFINED> instruction: 0x000025b9
    5cf4:	00086901 	andeq	r6, r8, r1, lsl #18
    5cf8:	75621f00 	strbvc	r1, [r2, #-3840]!	; 0xfffff100
    5cfc:	0f010066 	svceq	0x00010066
    5d00:	0005cc1a 	andeq	ip, r5, sl, lsl ip
    5d04:	0025e100 	eoreq	lr, r5, r0, lsl #2
    5d08:	0025d900 	eoreq	sp, r5, r0, lsl #18
    5d0c:	13af1e00 			; <UNDEFINED> instruction: 0x13af1e00
    5d10:	0f010000 	svceq	0x00010000
    5d14:	00009023 	andeq	r9, r0, r3, lsr #32
    5d18:	00261b00 	eoreq	r1, r6, r0, lsl #22
    5d1c:	00261700 	eoreq	r1, r6, r0, lsl #14
    5d20:	6e652100 	powvss	f2, f5, f0
    5d24:	0c100100 	ldfeqs	f0, [r0], {-0}
    5d28:	00000059 	andeq	r0, r0, r9, asr r0
    5d2c:	00002640 	andeq	r2, r0, r0, asr #12
    5d30:	0000263c 	andeq	r2, r0, ip, lsr r6
    5d34:	00766121 	rsbseq	r6, r6, r1, lsr #2
    5d38:	590c1101 	stmdbpl	ip, {r0, r8, ip}
    5d3c:	62000000 	andvs	r0, r0, #0
    5d40:	5e000026 	cdppl	0, 0, cr0, cr0, cr6, {1}
    5d44:	22000026 	andcs	r0, r0, #38	; 0x26
    5d48:	0800149a 	stmdaeq	r0, {r1, r3, r4, r7, sl, ip}
    5d4c:	00000869 	andeq	r0, r0, r9, ror #16
    5d50:	a5012e00 	strge	r2, [r1, #-3584]	; 0xfffff200
    5d54:	01000013 	tsteq	r0, r3, lsl r0
    5d58:	00590a0a 	subseq	r0, r9, sl, lsl #20
    5d5c:	14780000 	ldrbtne	r0, [r8], #-0
    5d60:	148c0800 	strne	r0, [ip], #2048	; 0x800
    5d64:	7d020800 	stcvc	8, cr0, [r2, #-0]
    5d68:	f82f0100 			; <UNDEFINED> instruction: 0xf82f0100
    5d6c:	02000006 	andeq	r0, r0, #6
    5d70:	900113c1 	andls	r1, r1, r1, asr #7
    5d74:	03000000 	movweq	r0, #0
    5d78:	000008ad 	andeq	r0, r0, sp, lsr #17
    5d7c:	00094127 	andeq	r4, r9, r7, lsr #2
    5d80:	27c10200 	strbcs	r0, [r1, r0, lsl #4]
    5d84:	00000041 	andeq	r0, r0, r1, asr #32
    5d88:	66756230 			; <UNDEFINED> instruction: 0x66756230
    5d8c:	38c10200 	stmiacc	r1, {r9}^
    5d90:	00000779 	andeq	r0, r0, r9, ror r7
    5d94:	05aa3100 	streq	r3, [sl, #256]!	; 0x100
    5d98:	b4020000 	strlt	r0, [r2], #-0
    5d9c:	e0030114 	and	r0, r3, r4, lsl r1
    5da0:	27000008 	strcs	r0, [r0, -r8]
    5da4:	00000941 	andeq	r0, r0, r1, asr #18
    5da8:	4129b402 			; <UNDEFINED> instruction: 0x4129b402
    5dac:	30000000 	andcc	r0, r0, r0
    5db0:	00667562 	rsbeq	r7, r6, r2, ror #10
    5db4:	e040b402 	sub	fp, r0, r2, lsl #8
    5db8:	27000008 	strcs	r0, [r0, -r8]
    5dbc:	000013af 	andeq	r1, r0, pc, lsr #7
    5dc0:	594eb402 	stmdbpl	lr, {r1, sl, ip, sp, pc}^
    5dc4:	00000000 	andeq	r0, r0, r0
    5dc8:	006a0425 	rsbeq	r0, sl, r5, lsr #8
    5dcc:	d2320000 	eorsle	r0, r2, #0
    5dd0:	82000005 	andhi	r0, r0, #5
    5dd4:	98080015 	stmdals	r8, {r0, r2, r4}
    5dd8:	02080015 	andeq	r0, r8, #21
    5ddc:	3601007d 			; <UNDEFINED> instruction: 0x3601007d
    5de0:	1a000009 	bne	5e0c <_Min_Stack_Size+0x5a0c>
    5de4:	000005e1 	andeq	r0, r0, r1, ror #11
    5de8:	00002688 	andeq	r2, r0, r8, lsl #13
    5dec:	00002680 	andeq	r2, r0, r0, lsl #13
    5df0:	0005d233 	andeq	sp, r5, r3, lsr r2
    5df4:	00158600 	andseq	r8, r5, r0, lsl #12
    5df8:	02d80008 	sbcseq	r0, r8, #8
    5dfc:	67010000 	strvs	r0, [r1, -r0]
    5e00:	00092b06 	andeq	r2, r9, r6, lsl #22
    5e04:	05e11a00 	strbeq	r1, [r1, #2560]!	; 0xa00
    5e08:	26c40000 	strbcs	r0, [r4], r0
    5e0c:	26c20000 	strbcs	r0, [r2], r0
    5e10:	24000000 	strcs	r0, [r0], #-0
    5e14:	0800158c 	stmdaeq	r0, {r2, r3, r7, r8, sl, ip}
    5e18:	0007f601 	andeq	pc, r7, r1, lsl #12
    5e1c:	01340000 	teqeq	r4, r0
    5e20:	0005a901 	andeq	sl, r5, r1, lsl #18
    5e24:	0005a900 	andeq	sl, r5, r0, lsl #18
    5e28:	06b30200 	ldrteq	r0, [r3], r0, lsl #4
    5e2c:	f7010134 			; <UNDEFINED> instruction: 0xf7010134
    5e30:	f7000006 			; <UNDEFINED> instruction: 0xf7000006
    5e34:	02000006 	andeq	r0, r0, #6
    5e38:	013405c0 	teqeq	r4, r0, asr #11
    5e3c:	0008bf01 	andeq	fp, r8, r1, lsl #30
    5e40:	0008bf00 	andeq	fp, r8, r0, lsl #30
    5e44:	06290200 	strteq	r0, [r9], -r0, lsl #4
    5e48:	00011600 	andeq	r1, r1, r0, lsl #12
    5e4c:	59000400 	stmdbpl	r0, {sl}
    5e50:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    5e54:	00146501 	andseq	r6, r4, r1, lsl #10
    5e58:	15170c00 	ldrne	r0, [r7, #-3072]	; 0xfffff400
    5e5c:	13f30000 	mvnsne	r0, #0
    5e60:	16780000 	ldrbtne	r0, [r8], -r0
    5e64:	00480800 	subeq	r0, r8, r0, lsl #16
    5e68:	220e0000 	andcs	r0, lr, #0
    5e6c:	01020000 	mrseq	r0, (UNDEF: 2)
    5e70:	00029806 	andeq	r9, r2, r6, lsl #16
    5e74:	08010200 	stmdaeq	r1, {r9}
    5e78:	00000296 	muleq	r0, r6, r2
    5e7c:	b1050202 	tstlt	r5, r2, lsl #4
    5e80:	02000002 	andeq	r0, r0, #2
    5e84:	01be0702 			; <UNDEFINED> instruction: 0x01be0702
    5e88:	04020000 	streq	r0, [r2], #-0
    5e8c:	00009305 	andeq	r9, r0, r5, lsl #6
    5e90:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5e94:	0000005e 	andeq	r0, r0, lr, asr r0
    5e98:	8e050802 	cdphi	8, 0, cr0, cr5, cr2, {0}
    5e9c:	02000000 	andeq	r0, r0, #0
    5ea0:	00590708 	subseq	r0, r9, r8, lsl #14
    5ea4:	04030000 	streq	r0, [r3], #-0
    5ea8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    5eac:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5eb0:	00000063 	andeq	r0, r0, r3, rrx
    5eb4:	0013da04 	andseq	sp, r3, r4, lsl #20
    5eb8:	17d80200 	ldrbne	r0, [r8, r0, lsl #4]
    5ebc:	00000064 	andeq	r0, r0, r4, rrx
    5ec0:	f1040802 			; <UNDEFINED> instruction: 0xf1040802
    5ec4:	0200000e 	andeq	r0, r0, #14
    5ec8:	029f0801 	addseq	r0, pc, #65536	; 0x10000
    5ecc:	90050000 	andls	r0, r5, r0
    5ed0:	90000000 	andls	r0, r0, r0
    5ed4:	06000000 	streq	r0, [r0], -r0
    5ed8:	96040700 	strls	r0, [r4], -r0, lsl #14
    5edc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5ee0:	00144f09 	andseq	r4, r4, r9, lsl #30
    5ee4:	0f130100 	svceq	0x00130100
    5ee8:	00000085 	andeq	r0, r0, r5, lsl #1
    5eec:	0014f209 	andseq	pc, r4, r9, lsl #4
    5ef0:	0f140100 	svceq	0x00140100
    5ef4:	00000085 	andeq	r0, r0, r5, lsl #1
    5ef8:	0013c709 	andseq	ip, r3, r9, lsl #14
    5efc:	0f150100 	svceq	0x00150100
    5f00:	00000085 	andeq	r0, r0, r5, lsl #1
    5f04:	00150609 	andseq	r0, r5, r9, lsl #12
    5f08:	0f160100 	svceq	0x00160100
    5f0c:	00000085 	andeq	r0, r0, r5, lsl #1
    5f10:	0013e10a 	andseq	lr, r3, sl, lsl #2
    5f14:	011e0100 	tsteq	lr, r0, lsl #2
    5f18:	08001678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, ip}
    5f1c:	00000048 	andeq	r0, r0, r8, asr #32
    5f20:	010d9c01 	tsteq	sp, r1, lsl #24
    5f24:	4b0b0000 	blmi	2c5f2c <_Min_Stack_Size+0x2c5b2c>
    5f28:	01000005 	tsteq	r0, r5
    5f2c:	006b0a20 	rsbeq	r0, fp, r0, lsr #20
    5f30:	26df0000 	ldrbcs	r0, [pc], r0
    5f34:	26d70000 	ldrbcs	r0, [r7], r0
    5f38:	690c0000 	stmdbvs	ip, {}	; <UNPREDICTABLE>
    5f3c:	0a210100 	beq	846344 <_Min_Stack_Size+0x845f44>
    5f40:	0000006b 	andeq	r0, r0, fp, rrx
    5f44:	0000272b 	andeq	r2, r0, fp, lsr #14
    5f48:	0000271b 	andeq	r2, r0, fp, lsl r7
    5f4c:	00169a0d 	andseq	r9, r6, sp, lsl #20
    5f50:	00010d08 	andeq	r0, r1, r8, lsl #26
    5f54:	000e0000 	andeq	r0, lr, r0
    5f58:	0000000f 	andeq	r0, r0, pc
    5f5c:	0100000f 	tsteq	r0, pc
    5f60:	Address 0x0000000000005f60 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Stack_Size+0x2ce464>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	13490035 	movtne	r0, #36917	; 0x9035
      34:	24050000 	strcs	r0, [r5], #-0
      38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      3c:	0008030b 	andeq	r0, r8, fp, lsl #6
      40:	00340600 	eorseq	r0, r4, r0, lsl #12
      44:	0b3a0e03 	bleq	e83858 <_Min_Stack_Size+0xe83458>
      48:	0b39053b 	bleq	e4153c <_Min_Stack_Size+0xe4113c>
      4c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffffff30 <BootRAM+0xef706d1>
      50:	00000c3c 	andeq	r0, r0, ip, lsr ip
      54:	03003407 	movweq	r3, #1031	; 0x407
      58:	3b0b3a0e 	blcc	2ce898 <_Min_Stack_Size+0x2ce498>
      5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      60:	3c0c3f13 	stccc	15, cr3, [ip], {19}
      64:	0800000c 	stmdaeq	r0, {r2, r3}
      68:	0b0b0113 	bleq	2c04bc <_Min_Stack_Size+0x2c00bc>
      6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      70:	13010b39 	movwne	r0, #6969	; 0x1b39
      74:	0d090000 	stceq	0, cr0, [r9, #-0]
      78:	3a080300 	bcc	200c80 <_Min_Stack_Size+0x200880>
      7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      80:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
      84:	0a00000a 	beq	b4 <_Min_Heap_Size+0xb4>
      88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      90:	13490b39 	movtne	r0, #39737	; 0x9b39
      94:	00000a38 	andeq	r0, r0, r8, lsr sl
      98:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
      9c:	00130113 	andseq	r0, r3, r3, lsl r1
      a0:	00210c00 	eoreq	r0, r1, r0, lsl #24
      a4:	0b2f1349 	bleq	bc4dd0 <_Min_Stack_Size+0xbc49d0>
      a8:	160d0000 	strne	r0, [sp], -r0
      ac:	3a0e0300 	bcc	380cb4 <_Min_Stack_Size+0x3808b4>
      b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      b4:	0013490b 	andseq	r4, r3, fp, lsl #18
      b8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
      bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
      c0:	0b3b0b3a 	bleq	ec2db0 <_Min_Stack_Size+0xec29b0>
      c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
      c8:	01111349 	tsteq	r1, r9, asr #6
      cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
      d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
      d4:	0f000013 	svceq	0x00000013
      d8:	0111010b 	tsteq	r1, fp, lsl #2
      dc:	13010112 	movwne	r0, #4370	; 0x1112
      e0:	34100000 	ldrcc	r0, [r0], #-0
      e4:	3a0e0300 	bcc	380cec <_Min_Stack_Size+0x3808ec>
      e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
      f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
      f4:	1d110000 	ldcne	0, cr0, [r1, #-0]
      f8:	52133100 	andspl	r3, r3, #0, 2
      fc:	0b42b801 	bleq	10ae108 <_Min_Stack_Size+0x10add08>
     100:	01120111 	tsteq	r2, r1, lsl r1
     104:	0b590b58 	bleq	1642e6c <_Min_Stack_Size+0x1642a6c>
     108:	00000b57 	andeq	r0, r0, r7, asr fp
     10c:	01828912 	orreq	r8, r2, r2, lsl r9
     110:	31011101 	tstcc	r1, r1, lsl #2
     114:	00130113 	andseq	r0, r3, r3, lsl r1
     118:	828a1300 	addhi	r1, sl, #0, 6
     11c:	0a020001 	beq	80128 <_Min_Stack_Size+0x7fd28>
     120:	000a4291 	muleq	sl, r1, r2
     124:	82891400 	addhi	r1, r9, #0, 8
     128:	01110001 	tsteq	r1, r1
     12c:	00001331 	andeq	r1, r0, r1, lsr r3
     130:	3f012e15 	svccc	0x00012e15
     134:	3a0e030c 	bcc	380d6c <_Min_Stack_Size+0x38096c>
     138:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     13c:	110c270b 	tstne	ip, fp, lsl #14
     140:	40011201 	andmi	r1, r1, r1, lsl #4
     144:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     148:	00001301 	andeq	r1, r0, r1, lsl #6
     14c:	03000516 	movweq	r0, #1302	; 0x516
     150:	3b0b3a0e 	blcc	2ce990 <_Min_Stack_Size+0x2ce590>
     154:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     158:	b7060213 	smladlt	r6, r3, r2, r0
     15c:	00000642 	andeq	r0, r0, r2, asr #12
     160:	3f002e17 	svccc	0x00002e17
     164:	3a0e030c 	bcc	380d9c <_Min_Stack_Size+0x38099c>
     168:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     16c:	110c270b 	tstne	ip, fp, lsl #14
     170:	40011201 	andmi	r1, r1, r1, lsl #4
     174:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     178:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     17c:	030c3f00 	movweq	r3, #52992	; 0xcf00
     180:	3b0b3a0e 	blcc	2ce9c0 <_Min_Stack_Size+0x2ce5c0>
     184:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     188:	1900000c 	stmdbne	r0, {r2, r3}
     18c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; dc <_Min_Heap_Size+0xdc>
     190:	0b3a0e03 	bleq	e839a4 <_Min_Stack_Size+0xe835a4>
     194:	0b390b3b 	bleq	e42e88 <_Min_Stack_Size+0xe42a88>
     198:	13490c27 	movtne	r0, #39975	; 0x9c27
     19c:	01120111 	tsteq	r2, r1, lsl r1
     1a0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     1a4:	0013010c 	andseq	r0, r3, ip, lsl #2
     1a8:	00341a00 	eorseq	r1, r4, r0, lsl #20
     1ac:	0b3a0803 	bleq	e821c0 <_Min_Stack_Size+0xe81dc0>
     1b0:	0b390b3b 	bleq	e42ea4 <_Min_Stack_Size+0xe42aa4>
     1b4:	06021349 	streq	r1, [r2], -r9, asr #6
     1b8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1bc:	010b1b00 	tsteq	fp, r0, lsl #22
     1c0:	01120111 	tsteq	r2, r1, lsl r1
     1c4:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     1c8:	030c3f00 	movweq	r3, #52992	; 0xcf00
     1cc:	3b0b3a0e 	blcc	2cea0c <_Min_Stack_Size+0x2ce60c>
     1d0:	110b390b 	tstne	fp, fp, lsl #18
     1d4:	40011201 	andmi	r1, r1, r1, lsl #4
     1d8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     1dc:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     1e0:	3a0e0300 	bcc	380de8 <_Min_Stack_Size+0x3809e8>
     1e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     1e8:	000b200b 	andeq	r2, fp, fp
     1ec:	002e1e00 	eoreq	r1, lr, r0, lsl #28
     1f0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     1f4:	030e4087 	movweq	r4, #57479	; 0xe087
     1f8:	3b0b3a0e 	blcc	2cea38 <_Min_Stack_Size+0x2ce638>
     1fc:	000b390b 	andeq	r3, fp, fp, lsl #18
     200:	11010000 	mrsne	r0, (UNDEF: 1)
     204:	130e2501 	movwne	r2, #58625	; 0xe501
     208:	1b0e030b 	blne	380e3c <_Min_Stack_Size+0x380a3c>
     20c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     210:	00061001 	andeq	r1, r6, r1
     214:	00240200 	eoreq	r0, r4, r0, lsl #4
     218:	0b3e0b0b 	bleq	f82e4c <_Min_Stack_Size+0xf82a4c>
     21c:	00000e03 	andeq	r0, r0, r3, lsl #28
     220:	03001603 	movweq	r1, #1539	; 0x603
     224:	3b0b3a0e 	blcc	2cea64 <_Min_Stack_Size+0x2ce664>
     228:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     22c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     230:	13490035 	movtne	r0, #36917	; 0x9035
     234:	26050000 	strcs	r0, [r5], -r0
     238:	00134900 	andseq	r4, r3, r0, lsl #18
     23c:	00240600 	eoreq	r0, r4, r0, lsl #12
     240:	0b3e0b0b 	bleq	f82e74 <_Min_Stack_Size+0xf82a74>
     244:	00000803 	andeq	r0, r0, r3, lsl #16
     248:	0b011307 	bleq	44e6c <_Min_Stack_Size+0x44a6c>
     24c:	3b0b3a0b 	blcc	2cea80 <_Min_Stack_Size+0x2ce680>
     250:	010b3905 	tsteq	fp, r5, lsl #18
     254:	08000013 	stmdaeq	r0, {r0, r1, r4}
     258:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     25c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     260:	13490b39 	movtne	r0, #39737	; 0x9b39
     264:	00000a38 	andeq	r0, r0, r8, lsr sl
     268:	03000d09 	movweq	r0, #3337	; 0xd09
     26c:	3b0b3a08 	blcc	2cea94 <_Min_Stack_Size+0x2ce694>
     270:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     274:	000a3813 	andeq	r3, sl, r3, lsl r8
     278:	00160a00 	andseq	r0, r6, r0, lsl #20
     27c:	0b3a0e03 	bleq	e83a90 <_Min_Stack_Size+0xe83690>
     280:	0b39053b 	bleq	e41774 <_Min_Stack_Size+0xe41374>
     284:	00001349 	andeq	r1, r0, r9, asr #6
     288:	0300340b 	movweq	r3, #1035	; 0x40b
     28c:	3b0b3a0e 	blcc	2ceacc <_Min_Stack_Size+0x2ce6cc>
     290:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     294:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     298:	0c00000c 	stceq	0, cr0, [r0], {12}
     29c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2a0:	0b3b0b3a 	bleq	ec2f90 <_Min_Stack_Size+0xec2b90>
     2a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     2a8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     2ac:	340d0000 	strcc	r0, [sp], #-0
     2b0:	3a134700 	bcc	4d1eb8 <_Min_Stack_Size+0x4d1ab8>
     2b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2b8:	000a020b 	andeq	r0, sl, fp, lsl #4
     2bc:	002e0e00 	eoreq	r0, lr, r0, lsl #28
     2c0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     2c4:	0b3b0b3a 	bleq	ec2fb4 <_Min_Stack_Size+0xec2bb4>
     2c8:	01110b39 	tsteq	r1, r9, lsr fp
     2cc:	0a400112 	beq	100071c <_Min_Stack_Size+0x100031c>
     2d0:	000c4297 	muleq	ip, r7, r2
     2d4:	11010000 	mrsne	r0, (UNDEF: 1)
     2d8:	130e2501 	movwne	r2, #58625	; 0xe501
     2dc:	1b0e030b 	blne	380f10 <_Min_Stack_Size+0x380b10>
     2e0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     2e4:	00061001 	andeq	r1, r6, r1
     2e8:	00240200 	eoreq	r0, r4, r0, lsl #4
     2ec:	0b3e0b0b 	bleq	f82f20 <_Min_Stack_Size+0xf82b20>
     2f0:	00000e03 	andeq	r0, r0, r3, lsl #28
     2f4:	03001603 	movweq	r1, #1539	; 0x603
     2f8:	3b0b3a0e 	blcc	2ceb38 <_Min_Stack_Size+0x2ce738>
     2fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     300:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     304:	13490035 	movtne	r0, #36917	; 0x9035
     308:	26050000 	strcs	r0, [r5], -r0
     30c:	00134900 	andseq	r4, r3, r0, lsl #18
     310:	00240600 	eoreq	r0, r4, r0, lsl #12
     314:	0b3e0b0b 	bleq	f82f48 <_Min_Stack_Size+0xf82b48>
     318:	00000803 	andeq	r0, r0, r3, lsl #16
     31c:	0b000f07 	bleq	3f40 <_Min_Stack_Size+0x3b40>
     320:	0013490b 	andseq	r4, r3, fp, lsl #18
     324:	01150800 	tsteq	r5, r0, lsl #16
     328:	13010c27 	movwne	r0, #7207	; 0x1c27
     32c:	05090000 	streq	r0, [r9, #-0]
     330:	00134900 	andseq	r4, r3, r0, lsl #18
     334:	01130a00 	tsteq	r3, r0, lsl #20
     338:	0b3a0b0b 	bleq	e82f6c <_Min_Stack_Size+0xe82b6c>
     33c:	0b390b3b 	bleq	e43030 <_Min_Stack_Size+0xe42c30>
     340:	00001301 	andeq	r1, r0, r1, lsl #6
     344:	03000d0b 	movweq	r0, #3339	; 0xd0b
     348:	3b0b3a0e 	blcc	2ceb88 <_Min_Stack_Size+0x2ce788>
     34c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     350:	000a3813 	andeq	r3, sl, r3, lsl r8
     354:	01040c00 	tsteq	r4, r0, lsl #24
     358:	0b0b0b3e 	bleq	2c3058 <_Min_Stack_Size+0x2c2c58>
     35c:	0b3a1349 	bleq	e85088 <_Min_Stack_Size+0xe84c88>
     360:	0b390b3b 	bleq	e43054 <_Min_Stack_Size+0xe42c54>
     364:	00001301 	andeq	r1, r0, r1, lsl #6
     368:	0300280d 	movweq	r2, #2061	; 0x80d
     36c:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     370:	00280e00 	eoreq	r0, r8, r0, lsl #28
     374:	0b1c0e03 	bleq	703b88 <_Min_Stack_Size+0x703788>
     378:	130f0000 	movwne	r0, #61440	; 0xf000
     37c:	3a050b01 	bcc	142f88 <_Min_Stack_Size+0x142b88>
     380:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     384:	0013010b 	andseq	r0, r3, fp, lsl #2
     388:	000d1000 	andeq	r1, sp, r0
     38c:	0b3a0803 	bleq	e823a0 <_Min_Stack_Size+0xe81fa0>
     390:	0b390b3b 	bleq	e43084 <_Min_Stack_Size+0xe42c84>
     394:	0a381349 	beq	e050c0 <_Min_Stack_Size+0xe04cc0>
     398:	01110000 	tsteq	r1, r0
     39c:	01134901 	tsteq	r3, r1, lsl #18
     3a0:	12000013 	andne	r0, r0, #19
     3a4:	13490021 	movtne	r0, #36897	; 0x9021
     3a8:	00000b2f 	andeq	r0, r0, pc, lsr #22
     3ac:	49002113 	stmdbmi	r0, {r0, r1, r4, r8, sp}
     3b0:	00052f13 	andeq	r2, r5, r3, lsl pc
     3b4:	00341400 	eorseq	r1, r4, r0, lsl #8
     3b8:	0b3a0e03 	bleq	e83bcc <_Min_Stack_Size+0xe837cc>
     3bc:	0b39053b 	bleq	e418b0 <_Min_Stack_Size+0xe414b0>
     3c0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2a4 <_Min_Heap_Size+0x2a4>
     3c4:	00000c3c 	andeq	r0, r0, ip, lsr ip
     3c8:	03003415 	movweq	r3, #1045	; 0x415
     3cc:	3b0b3a0e 	blcc	2cec0c <_Min_Stack_Size+0x2ce80c>
     3d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     3d4:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     3d8:	1600000c 	strne	r0, [r0], -ip
     3dc:	0b0b0113 	bleq	2c0830 <_Min_Stack_Size+0x2c0430>
     3e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3e4:	13010b39 	movwne	r0, #6969	; 0x1b39
     3e8:	0d170000 	ldceq	0, cr0, [r7, #-0]
     3ec:	3a0e0300 	bcc	380ff4 <_Min_Stack_Size+0x380bf4>
     3f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     3f8:	1800000a 	stmdane	r0, {r1, r3}
     3fc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     400:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     404:	13490b39 	movtne	r0, #39737	; 0x9b39
     408:	00000a38 	andeq	r0, r0, r8, lsr sl
     40c:	03001619 	movweq	r1, #1561	; 0x619
     410:	3b0b3a0e 	blcc	2cec50 <_Min_Stack_Size+0x2ce850>
     414:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     418:	1a000013 	bne	46c <_Min_Stack_Size+0x6c>
     41c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     420:	0b3b0b3a 	bleq	ec3110 <_Min_Stack_Size+0xec2d10>
     424:	13490b39 	movtne	r0, #39737	; 0x9b39
     428:	0b0d0b0b 	bleq	34305c <_Min_Stack_Size+0x342c5c>
     42c:	0a380b0c 	beq	e03064 <_Min_Stack_Size+0xe02c64>
     430:	171b0000 	ldrne	r0, [fp, -r0]
     434:	3a0b0b01 	bcc	2c3040 <_Min_Stack_Size+0x2c2c40>
     438:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     43c:	0013010b 	andseq	r0, r3, fp, lsl #2
     440:	000d1c00 	andeq	r1, sp, r0, lsl #24
     444:	0b3a0e03 	bleq	e83c58 <_Min_Stack_Size+0xe83858>
     448:	0b390b3b 	bleq	e4313c <_Min_Stack_Size+0xe42d3c>
     44c:	00001349 	andeq	r1, r0, r9, asr #6
     450:	49000d1d 	stmdbmi	r0, {r0, r2, r3, r4, r8, sl, fp}
     454:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     458:	1349000d 	movtne	r0, #36877	; 0x900d
     45c:	00000a38 	andeq	r0, r0, r8, lsr sl
     460:	0300341f 	movweq	r3, #1055	; 0x41f
     464:	3b0b3a0e 	blcc	2ceca4 <_Min_Stack_Size+0x2ce8a4>
     468:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     46c:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
     470:	2000000a 	andcs	r0, r0, sl
     474:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     478:	0b3b0b3a 	bleq	ec3168 <_Min_Stack_Size+0xec2d68>
     47c:	13490b39 	movtne	r0, #39737	; 0x9b39
     480:	00000a02 	andeq	r0, r0, r2, lsl #20
     484:	03000d21 	movweq	r0, #3361	; 0xd21
     488:	3b0b3a0e 	blcc	2cecc8 <_Min_Stack_Size+0x2ce8c8>
     48c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     490:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
     494:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
     498:	2200000a 	andcs	r0, r0, #10
     49c:	0b0b0117 	bleq	2c0900 <_Min_Stack_Size+0x2c0500>
     4a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4a4:	13010b39 	movwne	r0, #6969	; 0x1b39
     4a8:	0d230000 	stceq	0, cr0, [r3, #-0]
     4ac:	3a0e0300 	bcc	3810b4 <_Min_Stack_Size+0x380cb4>
     4b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4b4:	0013490b 	andseq	r4, r3, fp, lsl #18
     4b8:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     4bc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     4c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     4c8:	01111349 	tsteq	r1, r9, asr #6
     4cc:	06400112 			; <UNDEFINED> instruction: 0x06400112
     4d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     4d4:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     4d8:	08030005 	stmdaeq	r3, {r0, r2}
     4dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4e0:	13490b39 	movtne	r0, #39737	; 0x9b39
     4e4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     4e8:	26000006 	strcs	r0, [r0], -r6
     4ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     4f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4f4:	13490b39 	movtne	r0, #39737	; 0x9b39
     4f8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     4fc:	27000006 	strcs	r0, [r0, -r6]
     500:	08030034 	stmdaeq	r3, {r2, r4, r5}
     504:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     508:	13490b39 	movtne	r0, #39737	; 0x9b39
     50c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     510:	28000006 	stmdacs	r0, {r1, r2}
     514:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     518:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     51c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     520:	3b0b3a0e 	blcc	2ced60 <_Min_Stack_Size+0x2ce960>
     524:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     528:	1201110c 	andne	r1, r1, #12, 2
     52c:	97064001 	strls	r4, [r6, -r1]
     530:	13010c42 	movwne	r0, #7234	; 0x1c42
     534:	052a0000 	streq	r0, [sl, #-0]!
     538:	3a080300 	bcc	201140 <_Min_Stack_Size+0x200d40>
     53c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     540:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     544:	2b00000a 	blcs	574 <_Min_Stack_Size+0x174>
     548:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     54c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     550:	13490b39 	movtne	r0, #39737	; 0x9b39
     554:	00000a02 	andeq	r0, r0, r2, lsl #20
     558:	3f012e2c 	svccc	0x00012e2c
     55c:	3a0e030c 	bcc	381194 <_Min_Stack_Size+0x380d94>
     560:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     564:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     568:	97064001 	strls	r4, [r6, -r1]
     56c:	13010c42 	movwne	r0, #7234	; 0x1c42
     570:	0b2d0000 	bleq	b40578 <_Min_Stack_Size+0xb40178>
     574:	01065501 	tsteq	r6, r1, lsl #10
     578:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     57c:	01018289 	smlabbeq	r1, r9, r2, r8
     580:	13010111 	movwne	r0, #4369	; 0x1111
     584:	8a2f0000 	bhi	bc058c <_Min_Stack_Size+0xbc018c>
     588:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     58c:	0a42910a 	beq	10a49bc <_Min_Stack_Size+0x10a45bc>
     590:	89300000 	ldmdbhi	r0!, {}	; <UNPREDICTABLE>
     594:	11010182 	smlabbne	r1, r2, r1, r0
     598:	31000001 	tstcc	r0, r1
     59c:	00018289 	andeq	r8, r1, r9, lsl #5
     5a0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     5a4:	89320000 	ldmdbhi	r2!, {}	; <UNPREDICTABLE>
     5a8:	11010182 	smlabbne	r1, r2, r1, r0
     5ac:	01133101 	tsteq	r3, r1, lsl #2
     5b0:	33000013 	movwcc	r0, #19
     5b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 504 <_Min_Stack_Size+0x104>
     5b8:	0b3a0e03 	bleq	e83dcc <_Min_Stack_Size+0xe839cc>
     5bc:	0b390b3b 	bleq	e432b0 <_Min_Stack_Size+0xe42eb0>
     5c0:	01110c27 	tsteq	r1, r7, lsr #24
     5c4:	06400112 			; <UNDEFINED> instruction: 0x06400112
     5c8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     5cc:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
     5d0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     5d4:	0b3b0b3a 	bleq	ec32c4 <_Min_Stack_Size+0xec2ec4>
     5d8:	13490b39 	movtne	r0, #39737	; 0x9b39
     5dc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5e0:	35000006 	strcc	r0, [r0, #-6]
     5e4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     5e8:	0b3b0b3a 	bleq	ec32d8 <_Min_Stack_Size+0xec2ed8>
     5ec:	13490b39 	movtne	r0, #39737	; 0x9b39
     5f0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5f4:	36000006 	strcc	r0, [r0], -r6
     5f8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5fc:	0b3b0b3a 	bleq	ec32ec <_Min_Stack_Size+0xec2eec>
     600:	13490b39 	movtne	r0, #39737	; 0x9b39
     604:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     608:	37000006 	strcc	r0, [r0, -r6]
     60c:	0e03012e 	adfeqsp	f0, f3, #0.5
     610:	0b3b0b3a 	bleq	ec3300 <_Min_Stack_Size+0xec2f00>
     614:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     618:	01120111 	tsteq	r2, r1, lsl r1
     61c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     620:	0013010c 	andseq	r0, r3, ip, lsl #2
     624:	010b3800 	tsteq	fp, r0, lsl #16
     628:	01120111 	tsteq	r2, r1, lsl r1
     62c:	00001301 	andeq	r1, r0, r1, lsl #6
     630:	01828939 	orreq	r8, r2, r9, lsr r9
     634:	31011101 	tstcc	r1, r1, lsl #2
     638:	3a000013 	bcc	68c <_Min_Stack_Size+0x28c>
     63c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     640:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     644:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     648:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     64c:	010b570b 	tsteq	fp, fp, lsl #14
     650:	3b000013 	blcc	6a4 <_Min_Stack_Size+0x2a4>
     654:	13310005 	teqne	r1, #5
     658:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     65c:	3c000006 	stccc	0, cr0, [r0], {6}
     660:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     664:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     668:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     66c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     670:	0013010b 	andseq	r0, r3, fp, lsl #2
     674:	011d3d00 	tsteq	sp, r0, lsl #26
     678:	01521331 	cmpeq	r2, r1, lsr r3
     67c:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
     680:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     684:	000b570b 	andeq	r5, fp, fp, lsl #14
     688:	000f3e00 	andeq	r3, pc, r0, lsl #28
     68c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     690:	0000263f 	andeq	r2, r0, pc, lsr r6
     694:	012e4000 			; <UNDEFINED> instruction: 0x012e4000
     698:	0b3a0e03 	bleq	e83eac <_Min_Stack_Size+0xe83aac>
     69c:	0b390b3b 	bleq	e43390 <_Min_Stack_Size+0xe42f90>
     6a0:	0b200c27 	bleq	803744 <_Min_Stack_Size+0x803344>
     6a4:	00001301 	andeq	r1, r0, r1, lsl #6
     6a8:	03000541 	movweq	r0, #1345	; 0x541
     6ac:	3b0b3a08 	blcc	2ceed4 <_Min_Stack_Size+0x2cead4>
     6b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6b4:	42000013 	andmi	r0, r0, #19
     6b8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     6bc:	0b3b0b3a 	bleq	ec33ac <_Min_Stack_Size+0xec2fac>
     6c0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6c4:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
     6c8:	030c3f01 	movweq	r3, #52993	; 0xcf01
     6cc:	3b0b3a0e 	blcc	2cef0c <_Min_Stack_Size+0x2ceb0c>
     6d0:	110b390b 	tstne	fp, fp, lsl #18
     6d4:	40011201 	andmi	r1, r1, r1, lsl #4
     6d8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     6dc:	00001301 	andeq	r1, r0, r1, lsl #6
     6e0:	31011d44 	tstcc	r1, r4, asr #26
     6e4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     6e8:	01110b42 	tsteq	r1, r2, asr #22
     6ec:	0b580112 	bleq	1600b3c <_Min_Stack_Size+0x160073c>
     6f0:	0b570b59 	bleq	15c345c <_Min_Stack_Size+0x15c305c>
     6f4:	2e450000 	cdpcs	0, 4, cr0, cr5, cr0, {0}
     6f8:	3a0e0301 	bcc	381304 <_Min_Stack_Size+0x380f04>
     6fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     700:	110c270b 	tstne	ip, fp, lsl #14
     704:	40011201 	andmi	r1, r1, r1, lsl #4
     708:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     70c:	00001301 	andeq	r1, r0, r1, lsl #6
     710:	03000546 	movweq	r0, #1350	; 0x546
     714:	3b0b3a0e 	blcc	2cef54 <_Min_Stack_Size+0x2ceb54>
     718:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     71c:	000a0213 	andeq	r0, sl, r3, lsl r2
     720:	012e4700 			; <UNDEFINED> instruction: 0x012e4700
     724:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     728:	0b3b0b3a 	bleq	ec3418 <_Min_Stack_Size+0xec3018>
     72c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     730:	01111349 	tsteq	r1, r9, asr #6
     734:	0a400112 	beq	1000b84 <_Min_Stack_Size+0x1000784>
     738:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     73c:	48000013 	stmdami	r0, {r0, r1, r4}
     740:	08030005 	stmdaeq	r3, {r0, r2}
     744:	0b3b0b3a 	bleq	ec3434 <_Min_Stack_Size+0xec3034>
     748:	13490b39 	movtne	r0, #39737	; 0x9b39
     74c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     750:	49000006 	stmdbmi	r0, {r1, r2}
     754:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 6a4 <_Min_Stack_Size+0x2a4>
     758:	0b3a0e03 	bleq	e83f6c <_Min_Stack_Size+0xe83b6c>
     75c:	0b390b3b 	bleq	e43450 <_Min_Stack_Size+0xe43050>
     760:	2e4a0000 	cdpcs	0, 4, cr0, cr10, cr0, {0}
     764:	030c3f00 	movweq	r3, #52992	; 0xcf00
     768:	3b0b3a0e 	blcc	2cefa8 <_Min_Stack_Size+0x2ceba8>
     76c:	200b390b 	andcs	r3, fp, fp, lsl #18
     770:	4b00000b 	blmi	7a4 <_Min_Stack_Size+0x3a4>
     774:	0e03012e 	adfeqsp	f0, f3, #0.5
     778:	0b3b0b3a 	bleq	ec3468 <_Min_Stack_Size+0xec3068>
     77c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     780:	0b201349 	bleq	8054ac <_Min_Stack_Size+0x8050ac>
     784:	00001301 	andeq	r1, r0, r1, lsl #6
     788:	03012e4c 	movweq	r2, #7756	; 0x1e4c
     78c:	3b0b3a0e 	blcc	2cefcc <_Min_Stack_Size+0x2cebcc>
     790:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     794:	010b200c 	tsteq	fp, ip
     798:	4d000013 	stcmi	0, cr0, [r0, #-76]	; 0xffffffb4
     79c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     7a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     7a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     7a8:	2e4e0000 	cdpcs	0, 4, cr0, cr14, cr0, {0}
     7ac:	11133100 	tstne	r3, r0, lsl #2
     7b0:	40011201 	andmi	r1, r1, r1, lsl #4
     7b4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7b8:	2e4f0000 	cdpcs	0, 4, cr0, cr15, cr0, {0}
     7bc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     7c0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     7c4:	0b3a0e03 	bleq	e83fd8 <_Min_Stack_Size+0xe83bd8>
     7c8:	0b390b3b 	bleq	e434bc <_Min_Stack_Size+0xe430bc>
     7cc:	01000000 	mrseq	r0, (UNDEF: 0)
     7d0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     7d4:	0e030b13 	vmoveq.32	d3[0], r0
     7d8:	01110e1b 	tsteq	r1, fp, lsl lr
     7dc:	06100112 			; <UNDEFINED> instruction: 0x06100112
     7e0:	24020000 	strcs	r0, [r2], #-0
     7e4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7e8:	000e030b 	andeq	r0, lr, fp, lsl #6
     7ec:	00160300 	andseq	r0, r6, r0, lsl #6
     7f0:	0b3a0e03 	bleq	e84004 <_Min_Stack_Size+0xe83c04>
     7f4:	0b390b3b 	bleq	e434e8 <_Min_Stack_Size+0xe430e8>
     7f8:	00001349 	andeq	r1, r0, r9, asr #6
     7fc:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     800:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     804:	13490026 	movtne	r0, #36902	; 0x9026
     808:	24060000 	strcs	r0, [r6], #-0
     80c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     810:	0008030b 	andeq	r0, r8, fp, lsl #6
     814:	01130700 	tsteq	r3, r0, lsl #14
     818:	0b3a0b0b 	bleq	e8344c <_Min_Stack_Size+0xe8304c>
     81c:	0b390b3b 	bleq	e43510 <_Min_Stack_Size+0xe43110>
     820:	00001301 	andeq	r1, r0, r1, lsl #6
     824:	03000d08 	movweq	r0, #3336	; 0xd08
     828:	3b0b3a0e 	blcc	2cf068 <_Min_Stack_Size+0x2cec68>
     82c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     830:	000a3813 	andeq	r3, sl, r3, lsl r8
     834:	01040900 	tsteq	r4, r0, lsl #18
     838:	0b0b0b3e 	bleq	2c3538 <_Min_Stack_Size+0x2c3138>
     83c:	0b3a1349 	bleq	e85568 <_Min_Stack_Size+0xe85168>
     840:	0b390b3b 	bleq	e43534 <_Min_Stack_Size+0xe43134>
     844:	00001301 	andeq	r1, r0, r1, lsl #6
     848:	0300280a 	movweq	r2, #2058	; 0x80a
     84c:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     850:	00280b00 	eoreq	r0, r8, r0, lsl #22
     854:	0b1c0e03 	bleq	704068 <_Min_Stack_Size+0x703c68>
     858:	130c0000 	movwne	r0, #49152	; 0xc000
     85c:	3a050b01 	bcc	143468 <_Min_Stack_Size+0x143068>
     860:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     864:	0013010b 	andseq	r0, r3, fp, lsl #2
     868:	000d0d00 	andeq	r0, sp, r0, lsl #26
     86c:	0b3a0803 	bleq	e82880 <_Min_Stack_Size+0xe82480>
     870:	0b390b3b 	bleq	e43564 <_Min_Stack_Size+0xe43164>
     874:	0a381349 	beq	e055a0 <_Min_Stack_Size+0xe051a0>
     878:	010e0000 	mrseq	r0, (UNDEF: 14)
     87c:	01134901 	tsteq	r3, r1, lsl #18
     880:	0f000013 	svceq	0x00000013
     884:	13490021 	movtne	r0, #36897	; 0x9021
     888:	00000b2f 	andeq	r0, r0, pc, lsr #22
     88c:	49002110 	stmdbmi	r0, {r4, r8, sp}
     890:	00052f13 	andeq	r2, r5, r3, lsl pc
     894:	00341100 	eorseq	r1, r4, r0, lsl #2
     898:	0b3a0e03 	bleq	e840ac <_Min_Stack_Size+0xe83cac>
     89c:	0b39053b 	bleq	e41d90 <_Min_Stack_Size+0xe41990>
     8a0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 784 <_Min_Stack_Size+0x384>
     8a4:	00000c3c 	andeq	r0, r0, ip, lsr ip
     8a8:	03003412 	movweq	r3, #1042	; 0x412
     8ac:	3b0b3a0e 	blcc	2cf0ec <_Min_Stack_Size+0x2cecec>
     8b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8b4:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     8b8:	1300000c 	movwne	r0, #12
     8bc:	0b0b0113 	bleq	2c0d10 <_Min_Stack_Size+0x2c0910>
     8c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8c4:	13010b39 	movwne	r0, #6969	; 0x1b39
     8c8:	0d140000 	ldceq	0, cr0, [r4, #-0]
     8cc:	3a0e0300 	bcc	3814d4 <_Min_Stack_Size+0x3810d4>
     8d0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     8d8:	1500000a 	strne	r0, [r0, #-10]
     8dc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     8e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8e4:	13490b39 	movtne	r0, #39737	; 0x9b39
     8e8:	00000a38 	andeq	r0, r0, r8, lsr sl
     8ec:	03001616 	movweq	r1, #1558	; 0x616
     8f0:	3b0b3a0e 	blcc	2cf130 <_Min_Stack_Size+0x2ced30>
     8f4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     8f8:	17000013 	smladne	r0, r3, r0, r0
     8fc:	0b0b0117 	bleq	2c0d60 <_Min_Stack_Size+0x2c0960>
     900:	0b3b0b3a 	bleq	ec35f0 <_Min_Stack_Size+0xec31f0>
     904:	13010b39 	movwne	r0, #6969	; 0x1b39
     908:	0d180000 	ldceq	0, cr0, [r8, #-0]
     90c:	3a0e0300 	bcc	381514 <_Min_Stack_Size+0x381114>
     910:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     914:	0013490b 	andseq	r4, r3, fp, lsl #18
     918:	000f1900 	andeq	r1, pc, r0, lsl #18
     91c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     920:	0301131a 	movweq	r1, #4890	; 0x131a
     924:	3a0b0b0e 	bcc	2c3564 <_Min_Stack_Size+0x2c3164>
     928:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     92c:	0013010b 	andseq	r0, r3, fp, lsl #2
     930:	000f1b00 	andeq	r1, pc, r0, lsl #22
     934:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     938:	131c0000 	tstne	ip, #0
     93c:	0b0e0301 	bleq	381548 <_Min_Stack_Size+0x381148>
     940:	3b0b3a05 	blcc	2cf15c <_Min_Stack_Size+0x2ced5c>
     944:	010b390b 	tsteq	fp, fp, lsl #18
     948:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     94c:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
     950:	151e0000 	ldrne	r0, [lr, #-0]
     954:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
     958:	00130113 	andseq	r0, r3, r3, lsl r1
     95c:	00051f00 	andeq	r1, r5, r0, lsl #30
     960:	00001349 	andeq	r1, r0, r9, asr #6
     964:	03011320 	movweq	r1, #4896	; 0x1320
     968:	3a050b0e 	bcc	1435a8 <_Min_Stack_Size+0x1431a8>
     96c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     970:	0013010b 	andseq	r0, r3, fp, lsl #2
     974:	01132100 	tsteq	r3, r0, lsl #2
     978:	0b0b0e03 	bleq	2c418c <_Min_Stack_Size+0x2c3d8c>
     97c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     980:	13010b39 	movwne	r0, #6969	; 0x1b39
     984:	17220000 	strne	r0, [r2, -r0]!
     988:	3a0b0b01 	bcc	2c3594 <_Min_Stack_Size+0x2c3194>
     98c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     990:	0013010b 	andseq	r0, r3, fp, lsl #2
     994:	000d2300 	andeq	r2, sp, r0, lsl #6
     998:	0b3a0e03 	bleq	e841ac <_Min_Stack_Size+0xe83dac>
     99c:	0b39053b 	bleq	e41e90 <_Min_Stack_Size+0xe41a90>
     9a0:	00001349 	andeq	r1, r0, r9, asr #6
     9a4:	03001324 	movweq	r1, #804	; 0x324
     9a8:	000c3c0e 	andeq	r3, ip, lr, lsl #24
     9ac:	01152500 	tsteq	r5, r0, lsl #10
     9b0:	13010c27 	movwne	r0, #7207	; 0x1c27
     9b4:	34260000 	strtcc	r0, [r6], #-0
     9b8:	3a0e0300 	bcc	3815c0 <_Min_Stack_Size+0x3811c0>
     9bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c0:	3f13490b 	svccc	0x0013490b
     9c4:	000a020c 	andeq	r0, sl, ip, lsl #4
     9c8:	00342700 	eorseq	r2, r4, r0, lsl #14
     9cc:	0b3a0e03 	bleq	e841e0 <_Min_Stack_Size+0xe83de0>
     9d0:	0b390b3b 	bleq	e436c4 <_Min_Stack_Size+0xe432c4>
     9d4:	0a021349 	beq	85700 <_Min_Stack_Size+0x85300>
     9d8:	34280000 	strtcc	r0, [r8], #-0
     9dc:	3a0e0300 	bcc	3815e4 <_Min_Stack_Size+0x3811e4>
     9e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9e4:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
     9e8:	0a020b01 	beq	835f4 <_Min_Stack_Size+0x831f4>
     9ec:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     9f0:	030c3f01 	movweq	r3, #52993	; 0xcf01
     9f4:	3b0b3a0e 	blcc	2cf234 <_Min_Stack_Size+0x2cee34>
     9f8:	110b3905 	tstne	fp, r5, lsl #18
     9fc:	40011201 	andmi	r1, r1, r1, lsl #4
     a00:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     a04:	00001301 	andeq	r1, r0, r1, lsl #6
     a08:	0182892a 	orreq	r8, r2, sl, lsr #18
     a0c:	95011100 	strls	r1, [r1, #-256]	; 0xffffff00
     a10:	13310c42 	teqne	r1, #16896	; 0x4200
     a14:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     a18:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a1c:	3b0b3a0e 	blcc	2cf25c <_Min_Stack_Size+0x2cee5c>
     a20:	110b3905 	tstne	fp, r5, lsl #18
     a24:	40011201 	andmi	r1, r1, r1, lsl #4
     a28:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     a2c:	00001301 	andeq	r1, r0, r1, lsl #6
     a30:	0182892c 	orreq	r8, r2, ip, lsr #18
     a34:	31011100 	mrscc	r1, (UNDEF: 17)
     a38:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     a3c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     a40:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     a44:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     a48:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     a4c:	010b5705 	tsteq	fp, r5, lsl #14
     a50:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     a54:	1331010b 	teqne	r1, #-1073741822	; 0xc0000002
     a58:	01120111 	tsteq	r2, r1, lsl r1
     a5c:	00001301 	andeq	r1, r0, r1, lsl #6
     a60:	3100342f 	tstcc	r0, pc, lsr #8
     a64:	b7060213 	smladlt	r6, r3, r2, r0
     a68:	00000642 	andeq	r0, r0, r2, asr #12
     a6c:	31010b30 	tstcc	r1, r0, lsr fp
     a70:	01065513 	tsteq	r6, r3, lsl r5
     a74:	31000013 	tstcc	r0, r3, lsl r0
     a78:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     a7c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     a80:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     a84:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     a88:	0013010b 	andseq	r0, r3, fp, lsl #2
     a8c:	00053200 	andeq	r3, r5, r0, lsl #4
     a90:	06021331 			; <UNDEFINED> instruction: 0x06021331
     a94:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a98:	82893300 	addhi	r3, r9, #0, 6
     a9c:	01110101 	tsteq	r1, r1, lsl #2
     aa0:	00001331 	andeq	r1, r0, r1, lsr r3
     aa4:	01828a34 	orreq	r8, r2, r4, lsr sl
     aa8:	910a0200 	mrsls	r0, R10_fiq
     aac:	00000a42 	andeq	r0, r0, r2, asr #20
     ab0:	3f012e35 	svccc	0x00012e35
     ab4:	3a0e030c 	bcc	3816ec <_Min_Stack_Size+0x3812ec>
     ab8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     abc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     ac0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ac4:	97064001 	strls	r4, [r6, -r1]
     ac8:	13010c42 	movwne	r0, #7234	; 0x1c42
     acc:	05360000 	ldreq	r0, [r6, #-0]!
     ad0:	3a080300 	bcc	2016d8 <_Min_Stack_Size+0x2012d8>
     ad4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ad8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     adc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     ae0:	05370000 	ldreq	r0, [r7, #-0]!
     ae4:	3a0e0300 	bcc	3816ec <_Min_Stack_Size+0x3812ec>
     ae8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     aec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     af0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     af4:	89380000 	ldmdbhi	r8!, {}	; <UNPREDICTABLE>
     af8:	11010182 	smlabbne	r1, r2, r1, r0
     afc:	01133101 	tsteq	r3, r1, lsl #2
     b00:	39000013 	stmdbcc	r0, {r0, r1, r4}
     b04:	0c3f012e 	ldfeqs	f0, [pc], #-184	; a54 <_Min_Stack_Size+0x654>
     b08:	0b3a0e03 	bleq	e8431c <_Min_Stack_Size+0xe83f1c>
     b0c:	0b39053b 	bleq	e42000 <_Min_Stack_Size+0xe41c00>
     b10:	01110c27 	tsteq	r1, r7, lsr #24
     b14:	0a400112 	beq	1000f64 <_Min_Stack_Size+0x1000b64>
     b18:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     b1c:	3a000013 	bcc	b70 <_Min_Stack_Size+0x770>
     b20:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     b24:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b28:	13490b39 	movtne	r0, #39737	; 0x9b39
     b2c:	00000a02 	andeq	r0, r0, r2, lsl #20
     b30:	0000263b 	andeq	r2, r0, fp, lsr r6
     b34:	012e3c00 			; <UNDEFINED> instruction: 0x012e3c00
     b38:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     b3c:	0b3b0b3a 	bleq	ec382c <_Min_Stack_Size+0xec342c>
     b40:	01110b39 	tsteq	r1, r9, lsr fp
     b44:	0a400112 	beq	1000f94 <_Min_Stack_Size+0x1000b94>
     b48:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     b4c:	3d000013 	stccc	0, cr0, [r0, #-76]	; 0xffffffb4
     b50:	1331001d 	teqne	r1, #29
     b54:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     b58:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     b5c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     b60:	000b570b 	andeq	r5, fp, fp, lsl #14
     b64:	002e3e00 	eoreq	r3, lr, r0, lsl #28
     b68:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     b6c:	0b3b0b3a 	bleq	ec385c <_Min_Stack_Size+0xec345c>
     b70:	01110b39 	tsteq	r1, r9, lsr fp
     b74:	0a400112 	beq	1000fc4 <_Min_Stack_Size+0x1000bc4>
     b78:	000c4297 	muleq	ip, r7, r2
     b7c:	012e3f00 			; <UNDEFINED> instruction: 0x012e3f00
     b80:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     b84:	0b3b0b3a 	bleq	ec3874 <_Min_Stack_Size+0xec3474>
     b88:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     b8c:	0b201349 	bleq	8058b8 <_Min_Stack_Size+0x8054b8>
     b90:	00001301 	andeq	r1, r0, r1, lsl #6
     b94:	03000540 	movweq	r0, #1344	; 0x540
     b98:	3b0b3a08 	blcc	2cf3c0 <_Min_Stack_Size+0x2cefc0>
     b9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ba0:	41000013 	tstmi	r0, r3, lsl r0
     ba4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ba8:	0b3b0b3a 	bleq	ec3898 <_Min_Stack_Size+0xec3498>
     bac:	13490b39 	movtne	r0, #39737	; 0x9b39
     bb0:	0b420000 	bleq	1080bb8 <_Min_Stack_Size+0x10807b8>
     bb4:	43000001 	movwmi	r0, #1
     bb8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     bbc:	0b3b0b3a 	bleq	ec38ac <_Min_Stack_Size+0xec34ac>
     bc0:	13490b39 	movtne	r0, #39737	; 0x9b39
     bc4:	2e440000 	cdpcs	0, 4, cr0, cr4, cr0, {0}
     bc8:	030c3f01 	movweq	r3, #52993	; 0xcf01
     bcc:	3b0b3a0e 	blcc	2cf40c <_Min_Stack_Size+0x2cf00c>
     bd0:	110b390b 	tstne	fp, fp, lsl #18
     bd4:	40011201 	andmi	r1, r1, r1, lsl #4
     bd8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     bdc:	00001301 	andeq	r1, r0, r1, lsl #6
     be0:	03003445 	movweq	r3, #1093	; 0x445
     be4:	3b0b3a0e 	blcc	2cf424 <_Min_Stack_Size+0x2cf024>
     be8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     bec:	b7060213 	smladlt	r6, r3, r2, r0
     bf0:	00000642 	andeq	r0, r0, r2, asr #12
     bf4:	3f012e46 	svccc	0x00012e46
     bf8:	3a0e030c 	bcc	381830 <_Min_Stack_Size+0x381430>
     bfc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c00:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     c04:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     c08:	970a4001 	strls	r4, [sl, -r1]
     c0c:	13010c42 	movwne	r0, #7234	; 0x1c42
     c10:	05470000 	strbeq	r0, [r7, #-0]
     c14:	3a0e0300 	bcc	38181c <_Min_Stack_Size+0x38141c>
     c18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c1c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c20:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     c24:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
     c28:	3a0e0301 	bcc	381834 <_Min_Stack_Size+0x381434>
     c2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c30:	010b200b 	tsteq	fp, fp
     c34:	49000013 	stmdbmi	r0, {r0, r1, r4}
     c38:	1301010b 	movwne	r0, #4363	; 0x110b
     c3c:	344a0000 	strbcc	r0, [sl], #-0
     c40:	3a080300 	bcc	201848 <_Min_Stack_Size+0x201448>
     c44:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c48:	0013490b 	andseq	r4, r3, fp, lsl #18
     c4c:	012e4b00 			; <UNDEFINED> instruction: 0x012e4b00
     c50:	0b3a0e03 	bleq	e84464 <_Min_Stack_Size+0xe84064>
     c54:	0b390b3b 	bleq	e43948 <_Min_Stack_Size+0xe43548>
     c58:	01110c27 	tsteq	r1, r7, lsr #24
     c5c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     c60:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c64:	4c000013 	stcmi	0, cr0, [r0], {19}
     c68:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     c6c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     c70:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     c74:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     c78:	4d00000b 	stcmi	0, cr0, [r0, #-44]	; 0xffffffd4
     c7c:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     c80:	2e4e0000 	cdpcs	0, 4, cr0, cr14, cr0, {0}
     c84:	3a0e0300 	bcc	38188c <_Min_Stack_Size+0x38148c>
     c88:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c8c:	000b200b 	andeq	r2, fp, fp
     c90:	012e4f00 			; <UNDEFINED> instruction: 0x012e4f00
     c94:	0b3a0e03 	bleq	e844a8 <_Min_Stack_Size+0xe840a8>
     c98:	0b390b3b 	bleq	e4398c <_Min_Stack_Size+0xe4358c>
     c9c:	13490c27 	movtne	r0, #39975	; 0x9c27
     ca0:	13010b20 	movwne	r0, #6944	; 0x1b20
     ca4:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
     ca8:	030c3f00 	movweq	r3, #52992	; 0xcf00
     cac:	3b0b3a0e 	blcc	2cf4ec <_Min_Stack_Size+0x2cf0ec>
     cb0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     cb4:	000b2013 	andeq	r2, fp, r3, lsl r0
     cb8:	012e5100 			; <UNDEFINED> instruction: 0x012e5100
     cbc:	0b3a0e03 	bleq	e844d0 <_Min_Stack_Size+0xe840d0>
     cc0:	0b390b3b 	bleq	e439b4 <_Min_Stack_Size+0xe435b4>
     cc4:	0b200c27 	bleq	803d68 <_Min_Stack_Size+0x803968>
     cc8:	00001301 	andeq	r1, r0, r1, lsl #6
     ccc:	03012e52 	movweq	r2, #7762	; 0x1e52
     cd0:	3b0b3a0e 	blcc	2cf510 <_Min_Stack_Size+0x2cf110>
     cd4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     cd8:	010b200c 	tsteq	fp, ip
     cdc:	53000013 	movwpl	r0, #19
     ce0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ce4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ce8:	13490b39 	movtne	r0, #39737	; 0x9b39
     cec:	2e540000 	cdpcs	0, 5, cr0, cr4, cr0, {0}
     cf0:	11133101 	tstne	r3, r1, lsl #2
     cf4:	40011201 	andmi	r1, r1, r1, lsl #4
     cf8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     cfc:	00001301 	andeq	r1, r0, r1, lsl #6
     d00:	31000555 	tstcc	r0, r5, asr r5
     d04:	000a0213 	andeq	r0, sl, r3, lsl r2
     d08:	012e5600 			; <UNDEFINED> instruction: 0x012e5600
     d0c:	01111331 	tsteq	r1, r1, lsr r3
     d10:	06400112 			; <UNDEFINED> instruction: 0x06400112
     d14:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     d18:	57000013 	smladpl	r0, r3, r0, r0
     d1c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     d20:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     d24:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     d28:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     d2c:	000b570b 	andeq	r5, fp, fp, lsl #14
     d30:	000b5800 	andeq	r5, fp, r0, lsl #16
     d34:	01120111 	tsteq	r2, r1, lsl r1
     d38:	0b590000 	bleq	1640d40 <_Min_Stack_Size+0x1640940>
     d3c:	01065501 	tsteq	r6, r1, lsl #10
     d40:	5a000013 	bpl	d94 <_Min_Stack_Size+0x994>
     d44:	13310034 	teqne	r1, #52	; 0x34
     d48:	0b5b0000 	bleq	16c0d50 <_Min_Stack_Size+0x16c0950>
     d4c:	11133101 	tstne	r3, r1, lsl #2
     d50:	00011201 	andeq	r1, r1, r1, lsl #4
     d54:	011d5c00 	tsteq	sp, r0, lsl #24
     d58:	01521331 	cmpeq	r2, r1, lsr r3
     d5c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     d60:	58011201 	stmdapl	r1, {r0, r9, ip}
     d64:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     d68:	0013010b 	andseq	r0, r3, fp, lsl #2
     d6c:	001d5d00 	andseq	r5, sp, r0, lsl #26
     d70:	01521331 	cmpeq	r2, r1, lsr r3
     d74:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
     d78:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     d7c:	000b570b 	andeq	r5, fp, fp, lsl #14
     d80:	002e5e00 	eoreq	r5, lr, r0, lsl #28
     d84:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     d88:	030e4087 	movweq	r4, #57479	; 0xe087
     d8c:	3b0b3a0e 	blcc	2cf5cc <_Min_Stack_Size+0x2cf1cc>
     d90:	000b390b 	andeq	r3, fp, fp, lsl #18
     d94:	11010000 	mrsne	r0, (UNDEF: 1)
     d98:	130e2501 	movwne	r2, #58625	; 0xe501
     d9c:	1b0e030b 	blne	3819d0 <_Min_Stack_Size+0x3815d0>
     da0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     da4:	00061001 	andeq	r1, r6, r1
     da8:	00240200 	eoreq	r0, r4, r0, lsl #4
     dac:	0b3e0b0b 	bleq	f839e0 <_Min_Stack_Size+0xf835e0>
     db0:	00000e03 	andeq	r0, r0, r3, lsl #28
     db4:	03001603 	movweq	r1, #1539	; 0x603
     db8:	3b0b3a0e 	blcc	2cf5f8 <_Min_Stack_Size+0x2cf1f8>
     dbc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     dc0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     dc4:	13490035 	movtne	r0, #36917	; 0x9035
     dc8:	26050000 	strcs	r0, [r5], -r0
     dcc:	00134900 	andseq	r4, r3, r0, lsl #18
     dd0:	00240600 	eoreq	r0, r4, r0, lsl #12
     dd4:	0b3e0b0b 	bleq	f83a08 <_Min_Stack_Size+0xf83608>
     dd8:	00000803 	andeq	r0, r0, r3, lsl #16
     ddc:	0b011307 	bleq	45a00 <_Min_Stack_Size+0x45600>
     de0:	3b0b3a0b 	blcc	2cf614 <_Min_Stack_Size+0x2cf214>
     de4:	010b390b 	tsteq	fp, fp, lsl #18
     de8:	08000013 	stmdaeq	r0, {r0, r1, r4}
     dec:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     df0:	0b3b0b3a 	bleq	ec3ae0 <_Min_Stack_Size+0xec36e0>
     df4:	13490b39 	movtne	r0, #39737	; 0x9b39
     df8:	00000a38 	andeq	r0, r0, r8, lsr sl
     dfc:	3e010409 	cdpcc	4, 0, cr0, cr1, cr9, {0}
     e00:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     e04:	3b0b3a13 	blcc	2cf658 <_Min_Stack_Size+0x2cf258>
     e08:	010b390b 	tsteq	fp, fp, lsl #18
     e0c:	0a000013 	beq	e60 <_Min_Stack_Size+0xa60>
     e10:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     e14:	00000d1c 	andeq	r0, r0, ip, lsl sp
     e18:	0300280b 	movweq	r2, #2059	; 0x80b
     e1c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     e20:	01130c00 	tsteq	r3, r0, lsl #24
     e24:	0b3a050b 	bleq	e82258 <_Min_Stack_Size+0xe81e58>
     e28:	0b390b3b 	bleq	e43b1c <_Min_Stack_Size+0xe4371c>
     e2c:	00001301 	andeq	r1, r0, r1, lsl #6
     e30:	03000d0d 	movweq	r0, #3341	; 0xd0d
     e34:	3b0b3a08 	blcc	2cf65c <_Min_Stack_Size+0x2cf25c>
     e38:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e3c:	000a3813 	andeq	r3, sl, r3, lsl r8
     e40:	01010e00 	tsteq	r1, r0, lsl #28
     e44:	13011349 	movwne	r1, #4937	; 0x1349
     e48:	210f0000 	mrscs	r0, CPSR
     e4c:	2f134900 	svccs	0x00134900
     e50:	1000000b 	andne	r0, r0, fp
     e54:	13490021 	movtne	r0, #36897	; 0x9021
     e58:	0000052f 	andeq	r0, r0, pc, lsr #10
     e5c:	03003411 	movweq	r3, #1041	; 0x411
     e60:	3b0b3a0e 	blcc	2cf6a0 <_Min_Stack_Size+0x2cf2a0>
     e64:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e68:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     e6c:	1200000c 	andne	r0, r0, #12
     e70:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e74:	0b3b0b3a 	bleq	ec3b64 <_Min_Stack_Size+0xec3764>
     e78:	13490b39 	movtne	r0, #39737	; 0x9b39
     e7c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     e80:	13130000 	tstne	r3, #0
     e84:	3a0b0b01 	bcc	2c3a90 <_Min_Stack_Size+0x2c3690>
     e88:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e8c:	0013010b 	andseq	r0, r3, fp, lsl #2
     e90:	000d1400 	andeq	r1, sp, r0, lsl #8
     e94:	0b3a0e03 	bleq	e846a8 <_Min_Stack_Size+0xe842a8>
     e98:	0b39053b 	bleq	e4238c <_Min_Stack_Size+0xe41f8c>
     e9c:	0a381349 	beq	e05bc8 <_Min_Stack_Size+0xe057c8>
     ea0:	0d150000 	ldceq	0, cr0, [r5, #-0]
     ea4:	3a080300 	bcc	201aac <_Min_Stack_Size+0x2016ac>
     ea8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     eac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     eb0:	1600000a 	strne	r0, [r0], -sl
     eb4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     eb8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ebc:	13490b39 	movtne	r0, #39737	; 0x9b39
     ec0:	34170000 	ldrcc	r0, [r7], #-0
     ec4:	3a0e0300 	bcc	381acc <_Min_Stack_Size+0x3816cc>
     ec8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ecc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ed0:	1800000a 	stmdane	r0, {r1, r3}
     ed4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     ed8:	0b3a0b0b 	bleq	e83b0c <_Min_Stack_Size+0xe8370c>
     edc:	0b390b3b 	bleq	e43bd0 <_Min_Stack_Size+0xe437d0>
     ee0:	00001301 	andeq	r1, r0, r1, lsl #6
     ee4:	03003419 	movweq	r3, #1049	; 0x419
     ee8:	3b0b3a0e 	blcc	2cf728 <_Min_Stack_Size+0x2cf328>
     eec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ef0:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
     ef4:	1a00000a 	bne	f24 <_Min_Stack_Size+0xb24>
     ef8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e48 <_Min_Stack_Size+0xa48>
     efc:	0b3a0e03 	bleq	e84710 <_Min_Stack_Size+0xe84310>
     f00:	0b390b3b 	bleq	e43bf4 <_Min_Stack_Size+0xe437f4>
     f04:	01110c27 	tsteq	r1, r7, lsr #24
     f08:	06400112 			; <UNDEFINED> instruction: 0x06400112
     f0c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     f10:	1b000013 	blne	f64 <_Min_Stack_Size+0xb64>
     f14:	08030005 	stmdaeq	r3, {r0, r2}
     f18:	0b3b0b3a 	bleq	ec3c08 <_Min_Stack_Size+0xec3808>
     f1c:	13490b39 	movtne	r0, #39737	; 0x9b39
     f20:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     f24:	1c000006 	stcne	0, cr0, [r0], {6}
     f28:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     f2c:	0b3b0b3a 	bleq	ec3c1c <_Min_Stack_Size+0xec381c>
     f30:	13490b39 	movtne	r0, #39737	; 0x9b39
     f34:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     f38:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     f3c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     f40:	0b3b0b3a 	bleq	ec3c30 <_Min_Stack_Size+0xec3830>
     f44:	13490b39 	movtne	r0, #39737	; 0x9b39
     f48:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     f4c:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
     f50:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     f54:	341f0000 	ldrcc	r0, [pc], #-0	; f5c <_Min_Stack_Size+0xb5c>
     f58:	3a080300 	bcc	201b60 <_Min_Stack_Size+0x201760>
     f5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f60:	0013490b 	andseq	r4, r3, fp, lsl #18
     f64:	000f2000 	andeq	r2, pc, r0
     f68:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     f6c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     f70:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f74:	3b0b3a0e 	blcc	2cf7b4 <_Min_Stack_Size+0x2cf3b4>
     f78:	110b390b 	tstne	fp, fp, lsl #18
     f7c:	40011201 	andmi	r1, r1, r1, lsl #4
     f80:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     f84:	00001301 	andeq	r1, r0, r1, lsl #6
     f88:	03003422 	movweq	r3, #1058	; 0x422
     f8c:	3b0b3a08 	blcc	2cf7b4 <_Min_Stack_Size+0x2cf3b4>
     f90:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f94:	0b018813 	bleq	62fe8 <_Min_Stack_Size+0x62be8>
     f98:	00000a02 	andeq	r0, r0, r2, lsl #20
     f9c:	03003423 	movweq	r3, #1059	; 0x423
     fa0:	3b0b3a0e 	blcc	2cf7e0 <_Min_Stack_Size+0x2cf3e0>
     fa4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     fa8:	b7060213 	smladlt	r6, r3, r2, r0
     fac:	00000642 	andeq	r0, r0, r2, asr #12
     fb0:	31011d24 	tstcc	r1, r4, lsr #26
     fb4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     fb8:	01110b42 	tsteq	r1, r2, asr #22
     fbc:	0b580112 	bleq	160140c <_Min_Stack_Size+0x160100c>
     fc0:	0b570b59 	bleq	15c3d2c <_Min_Stack_Size+0x15c392c>
     fc4:	00001301 	andeq	r1, r0, r1, lsl #6
     fc8:	31000525 	tstcc	r0, r5, lsr #10
     fcc:	b7060213 	smladlt	r6, r3, r2, r0
     fd0:	00000642 	andeq	r0, r0, r2, asr #12
     fd4:	31011d26 	tstcc	r1, r6, lsr #26
     fd8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     fdc:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     fe0:	0b590b58 	bleq	1643d48 <_Min_Stack_Size+0x1643948>
     fe4:	13010b57 	movwne	r0, #6999	; 0x1b57
     fe8:	89270000 	stmdbhi	r7!, {}	; <UNPREDICTABLE>
     fec:	11000182 	smlabbne	r0, r2, r1, r0
     ff0:	00133101 	andseq	r3, r3, r1, lsl #2
     ff4:	00342800 	eorseq	r2, r4, r0, lsl #16
     ff8:	0a021331 	beq	85cc4 <_Min_Stack_Size+0x858c4>
     ffc:	34290000 	strtcc	r0, [r9], #-0
    1000:	02133100 	andseq	r3, r3, #0, 2
    1004:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1008:	892a0000 	stmdbhi	sl!, {}	; <UNPREDICTABLE>
    100c:	11010182 	smlabbne	r1, r2, r1, r0
    1010:	00133101 	andseq	r3, r3, r1, lsl #2
    1014:	828a2b00 	addhi	r2, sl, #0, 22
    1018:	0a020001 	beq	81024 <_Min_Stack_Size+0x80c24>
    101c:	000a4291 	muleq	sl, r1, r2
    1020:	001d2c00 	andseq	r2, sp, r0, lsl #24
    1024:	01521331 	cmpeq	r2, r1, lsr r3
    1028:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    102c:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    1030:	000b570b 	andeq	r5, fp, fp, lsl #14
    1034:	82892d00 	addhi	r2, r9, #0, 26
    1038:	01110101 	tsteq	r1, r1, lsl #2
    103c:	13011331 	movwne	r1, #4913	; 0x1331
    1040:	1d2e0000 	stcne	0, cr0, [lr, #-0]
    1044:	52133100 	andspl	r3, r3, #0, 2
    1048:	0b42b801 	bleq	10af054 <_Min_Stack_Size+0x10aec54>
    104c:	01120111 	tsteq	r2, r1, lsl r1
    1050:	0b590b58 	bleq	1643db8 <_Min_Stack_Size+0x16439b8>
    1054:	00000b57 	andeq	r0, r0, r7, asr fp
    1058:	55010b2f 	strpl	r0, [r1, #-2863]	; 0xfffff4d1
    105c:	00130106 	andseq	r0, r3, r6, lsl #2
    1060:	010b3000 	mrseq	r3, (UNDEF: 11)
    1064:	01120111 	tsteq	r2, r1, lsl r1
    1068:	00001301 	andeq	r1, r0, r1, lsl #6
    106c:	03012e31 	movweq	r2, #7729	; 0x1e31
    1070:	3b0b3a0e 	blcc	2cf8b0 <_Min_Stack_Size+0x2cf4b0>
    1074:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1078:	010b200c 	tsteq	fp, ip
    107c:	32000013 	andcc	r0, r0, #19
    1080:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1084:	0b3b0b3a 	bleq	ec3d74 <_Min_Stack_Size+0xec3974>
    1088:	13490b39 	movtne	r0, #39737	; 0x9b39
    108c:	34330000 	ldrtcc	r0, [r3], #-0
    1090:	3a0e0300 	bcc	381c98 <_Min_Stack_Size+0x381898>
    1094:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1098:	0013490b 	andseq	r4, r3, fp, lsl #18
    109c:	012e3400 			; <UNDEFINED> instruction: 0x012e3400
    10a0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    10a4:	0b3b0b3a 	bleq	ec3d94 <_Min_Stack_Size+0xec3994>
    10a8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    10ac:	01111349 	tsteq	r1, r9, asr #6
    10b0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    10b4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    10b8:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
    10bc:	08030034 	stmdaeq	r3, {r2, r4, r5}
    10c0:	0b3b0b3a 	bleq	ec3db0 <_Min_Stack_Size+0xec39b0>
    10c4:	13490b39 	movtne	r0, #39737	; 0x9b39
    10c8:	00000a02 	andeq	r0, r0, r2, lsl #20
    10cc:	31011d36 	tstcc	r1, r6, lsr sp
    10d0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    10d4:	01110b42 	tsteq	r1, r2, asr #22
    10d8:	0b580112 	bleq	1601528 <_Min_Stack_Size+0x1601128>
    10dc:	0b570b59 	bleq	15c3e48 <_Min_Stack_Size+0x15c3a48>
    10e0:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
    10e4:	030c3f01 	movweq	r3, #52993	; 0xcf01
    10e8:	3b0b3a0e 	blcc	2cf928 <_Min_Stack_Size+0x2cf528>
    10ec:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    10f0:	010b200c 	tsteq	fp, ip
    10f4:	38000013 	stmdacc	r0, {r0, r1, r4}
    10f8:	08030005 	stmdaeq	r3, {r0, r2}
    10fc:	0b3b0b3a 	bleq	ec3dec <_Min_Stack_Size+0xec39ec>
    1100:	13490b39 	movtne	r0, #39737	; 0x9b39
    1104:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
    1108:	030c3f01 	movweq	r3, #52993	; 0xcf01
    110c:	3b0b3a0e 	blcc	2cf94c <_Min_Stack_Size+0x2cf54c>
    1110:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1114:	1113490c 	tstne	r3, ip, lsl #18
    1118:	40011201 	andmi	r1, r1, r1, lsl #4
    111c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1120:	00001301 	andeq	r1, r0, r1, lsl #6
    1124:	0300053a 	movweq	r0, #1338	; 0x53a
    1128:	3b0b3a0e 	blcc	2cf968 <_Min_Stack_Size+0x2cf568>
    112c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1130:	000a0213 	andeq	r0, sl, r3, lsl r2
    1134:	000f3b00 	andeq	r3, pc, r0, lsl #22
    1138:	00000b0b 	andeq	r0, r0, fp, lsl #22
    113c:	3f002e3c 	svccc	0x00002e3c
    1140:	3a0e030c 	bcc	381d78 <_Min_Stack_Size+0x381978>
    1144:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1148:	2013490b 	andscs	r4, r3, fp, lsl #18
    114c:	3d00000b 	stccc	0, cr0, [r0, #-44]	; 0xffffffd4
    1150:	01018289 	smlabbeq	r1, r9, r2, r8
    1154:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    1158:	0013310c 	andseq	r3, r3, ip, lsl #2
    115c:	012e3e00 			; <UNDEFINED> instruction: 0x012e3e00
    1160:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1164:	0b3b0b3a 	bleq	ec3e54 <_Min_Stack_Size+0xec3a54>
    1168:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    116c:	0b201349 	bleq	805e98 <_Min_Stack_Size+0x805a98>
    1170:	00001301 	andeq	r1, r0, r1, lsl #6
    1174:	03012e3f 	movweq	r2, #7743	; 0x1e3f
    1178:	3b0b3a0e 	blcc	2cf9b8 <_Min_Stack_Size+0x2cf5b8>
    117c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1180:	2013490c 	andscs	r4, r3, ip, lsl #18
    1184:	0013010b 	andseq	r0, r3, fp, lsl #2
    1188:	012e4000 			; <UNDEFINED> instruction: 0x012e4000
    118c:	0b3a0e03 	bleq	e849a0 <_Min_Stack_Size+0xe845a0>
    1190:	0b39053b 	bleq	e42684 <_Min_Stack_Size+0xe42284>
    1194:	0b200c27 	bleq	804238 <_Min_Stack_Size+0x803e38>
    1198:	00001301 	andeq	r1, r0, r1, lsl #6
    119c:	03000541 	movweq	r0, #1345	; 0x541
    11a0:	3b0b3a0e 	blcc	2cf9e0 <_Min_Stack_Size+0x2cf5e0>
    11a4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    11a8:	42000013 	andmi	r0, r0, #19
    11ac:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    11b0:	01120111 	tsteq	r2, r1, lsl r1
    11b4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    11b8:	0013010c 	andseq	r0, r3, ip, lsl #2
    11bc:	00054300 	andeq	r4, r5, r0, lsl #6
    11c0:	0a021331 	beq	85e8c <_Min_Stack_Size+0x85a8c>
    11c4:	1d440000 	stclne	0, cr0, [r4, #-0]
    11c8:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    11cc:	0b42b801 	bleq	10af1d8 <_Min_Stack_Size+0x10aedd8>
    11d0:	0b580655 	bleq	1602b2c <_Min_Stack_Size+0x160272c>
    11d4:	0b570b59 	bleq	15c3f40 <_Min_Stack_Size+0x15c3b40>
    11d8:	2e450000 	cdpcs	0, 4, cr0, cr5, cr0, {0}
    11dc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    11e0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    11e4:	0b3a0e03 	bleq	e849f8 <_Min_Stack_Size+0xe845f8>
    11e8:	0b390b3b 	bleq	e43edc <_Min_Stack_Size+0xe43adc>
    11ec:	01000000 	mrseq	r0, (UNDEF: 0)
    11f0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    11f4:	0e030b13 	vmoveq.32	d3[0], r0
    11f8:	01110e1b 	tsteq	r1, fp, lsl lr
    11fc:	06100112 			; <UNDEFINED> instruction: 0x06100112
    1200:	24020000 	strcs	r0, [r2], #-0
    1204:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1208:	000e030b 	andeq	r0, lr, fp, lsl #6
    120c:	00160300 	andseq	r0, r6, r0, lsl #6
    1210:	0b3a0e03 	bleq	e84a24 <_Min_Stack_Size+0xe84624>
    1214:	0b390b3b 	bleq	e43f08 <_Min_Stack_Size+0xe43b08>
    1218:	00001349 	andeq	r1, r0, r9, asr #6
    121c:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
    1220:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    1224:	13490026 	movtne	r0, #36902	; 0x9026
    1228:	24060000 	strcs	r0, [r6], #-0
    122c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1230:	0008030b 	andeq	r0, r8, fp, lsl #6
    1234:	01130700 	tsteq	r3, r0, lsl #14
    1238:	0b3a0b0b 	bleq	e83e6c <_Min_Stack_Size+0xe83a6c>
    123c:	0b390b3b 	bleq	e43f30 <_Min_Stack_Size+0xe43b30>
    1240:	00001301 	andeq	r1, r0, r1, lsl #6
    1244:	03000d08 	movweq	r0, #3336	; 0xd08
    1248:	3b0b3a0e 	blcc	2cfa88 <_Min_Stack_Size+0x2cf688>
    124c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1250:	000a3813 	andeq	r3, sl, r3, lsl r8
    1254:	00340900 	eorseq	r0, r4, r0, lsl #18
    1258:	0b3a0e03 	bleq	e84a6c <_Min_Stack_Size+0xe8466c>
    125c:	0b39053b 	bleq	e42750 <_Min_Stack_Size+0xe42350>
    1260:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1144 <_Min_Stack_Size+0xd44>
    1264:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1268:	0300340a 	movweq	r3, #1034	; 0x40a
    126c:	3b0b3a0e 	blcc	2cfaac <_Min_Stack_Size+0x2cf6ac>
    1270:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1274:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    1278:	0b00000c 	bleq	12b0 <_Min_Stack_Size+0xeb0>
    127c:	0b0b0113 	bleq	2c16d0 <_Min_Stack_Size+0x2c12d0>
    1280:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1284:	13010b39 	movwne	r0, #6969	; 0x1b39
    1288:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    128c:	3a0e0300 	bcc	381e94 <_Min_Stack_Size+0x381a94>
    1290:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1294:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1298:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    129c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    12a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12a4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12a8:	00000a38 	andeq	r0, r0, r8, lsr sl
    12ac:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
    12b0:	00130113 	andseq	r0, r3, r3, lsl r1
    12b4:	00210f00 	eoreq	r0, r1, r0, lsl #30
    12b8:	0b2f1349 	bleq	bc5fe4 <_Min_Stack_Size+0xbc5be4>
    12bc:	16100000 	ldrne	r0, [r0], -r0
    12c0:	3a0e0300 	bcc	381ec8 <_Min_Stack_Size+0x381ac8>
    12c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    12c8:	0013490b 	andseq	r4, r3, fp, lsl #18
    12cc:	01131100 	tsteq	r3, r0, lsl #2
    12d0:	0b3a050b 	bleq	e82704 <_Min_Stack_Size+0xe82304>
    12d4:	0b390b3b 	bleq	e43fc8 <_Min_Stack_Size+0xe43bc8>
    12d8:	00001301 	andeq	r1, r0, r1, lsl #6
    12dc:	03000d12 	movweq	r0, #3346	; 0xd12
    12e0:	3b0b3a08 	blcc	2cfb08 <_Min_Stack_Size+0x2cf708>
    12e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    12e8:	000a3813 	andeq	r3, sl, r3, lsl r8
    12ec:	00211300 	eoreq	r1, r1, r0, lsl #6
    12f0:	052f1349 	streq	r1, [pc, #-841]!	; faf <_Min_Stack_Size+0xbaf>
    12f4:	34140000 	ldrcc	r0, [r4], #-0
    12f8:	3a0e0300 	bcc	381f00 <_Min_Stack_Size+0x381b00>
    12fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1300:	3f13490b 	svccc	0x0013490b
    1304:	000a020c 	andeq	r0, sl, ip, lsl #4
    1308:	01131500 	tsteq	r3, r0, lsl #10
    130c:	0b0b0e03 	bleq	2c4b20 <_Min_Stack_Size+0x2c4720>
    1310:	0b3b0b3a 	bleq	ec4000 <_Min_Stack_Size+0xec3c00>
    1314:	13010b39 	movwne	r0, #6969	; 0x1b39
    1318:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    131c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1320:	3b0b3a0e 	blcc	2cfb60 <_Min_Stack_Size+0x2cf760>
    1324:	110b390b 	tstne	fp, fp, lsl #18
    1328:	40011201 	andmi	r1, r1, r1, lsl #4
    132c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1330:	00001301 	andeq	r1, r0, r1, lsl #6
    1334:	03003417 	movweq	r3, #1047	; 0x417
    1338:	3b0b3a0e 	blcc	2cfb78 <_Min_Stack_Size+0x2cf778>
    133c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1340:	b7060213 	smladlt	r6, r3, r2, r0
    1344:	00000642 	andeq	r0, r0, r2, asr #12
    1348:	03003418 	movweq	r3, #1048	; 0x418
    134c:	3b0b3a08 	blcc	2cfb74 <_Min_Stack_Size+0x2cf774>
    1350:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1354:	0b018813 	bleq	633a8 <_Min_Stack_Size+0x62fa8>
    1358:	00000a02 	andeq	r0, r0, r2, lsl #20
    135c:	31011d19 	tstcc	r1, r9, lsl sp
    1360:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1364:	01110b42 	tsteq	r1, r2, asr #22
    1368:	0b580112 	bleq	16017b8 <_Min_Stack_Size+0x16013b8>
    136c:	0b570b59 	bleq	15c40d8 <_Min_Stack_Size+0x15c3cd8>
    1370:	00001301 	andeq	r1, r0, r1, lsl #6
    1374:	3100051a 	tstcc	r0, sl, lsl r5
    1378:	b7060213 	smladlt	r6, r3, r2, r0
    137c:	00000642 	andeq	r0, r0, r2, asr #12
    1380:	0182891b 	orreq	r8, r2, fp, lsl r9
    1384:	31011101 	tstcc	r1, r1, lsl #2
    1388:	1c000013 	stcne	0, cr0, [r0], {19}
    138c:	0001828a 	andeq	r8, r1, sl, lsl #5
    1390:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1394:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    1398:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 12e8 <_Min_Stack_Size+0xee8>
    139c:	0b3a0e03 	bleq	e84bb0 <_Min_Stack_Size+0xe847b0>
    13a0:	0b390b3b 	bleq	e44094 <_Min_Stack_Size+0xe43c94>
    13a4:	01110c27 	tsteq	r1, r7, lsr #24
    13a8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    13ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    13b0:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    13b4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    13b8:	0b3b0b3a 	bleq	ec40a8 <_Min_Stack_Size+0xec3ca8>
    13bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    13c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    13c4:	1f000006 	svcne	0x00000006
    13c8:	08030005 	stmdaeq	r3, {r0, r2}
    13cc:	0b3b0b3a 	bleq	ec40bc <_Min_Stack_Size+0xec3cbc>
    13d0:	13490b39 	movtne	r0, #39737	; 0x9b39
    13d4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    13d8:	20000006 	andcs	r0, r0, r6
    13dc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    13e0:	0b3b0b3a 	bleq	ec40d0 <_Min_Stack_Size+0xec3cd0>
    13e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    13e8:	00000a02 	andeq	r0, r0, r2, lsl #20
    13ec:	03003421 	movweq	r3, #1057	; 0x421
    13f0:	3b0b3a08 	blcc	2cfc18 <_Min_Stack_Size+0x2cf818>
    13f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13f8:	b7060213 	smladlt	r6, r3, r2, r0
    13fc:	00000642 	andeq	r0, r0, r2, asr #12
    1400:	01828922 	orreq	r8, r2, r2, lsr #18
    1404:	31011100 	mrscc	r1, (UNDEF: 17)
    1408:	23000013 	movwcs	r0, #19
    140c:	01018289 	smlabbeq	r1, r9, r2, r8
    1410:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1414:	00001301 	andeq	r1, r0, r1, lsl #6
    1418:	01828924 	orreq	r8, r2, r4, lsr #18
    141c:	95011100 	strls	r1, [r1, #-256]	; 0xffffff00
    1420:	13310c42 	teqne	r1, #16896	; 0x4200
    1424:	0f250000 	svceq	0x00250000
    1428:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    142c:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1430:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1380 <_Min_Stack_Size+0xf80>
    1434:	0b3a0e03 	bleq	e84c48 <_Min_Stack_Size+0xe84848>
    1438:	0b390b3b 	bleq	e4412c <_Min_Stack_Size+0xe43d2c>
    143c:	0b200c27 	bleq	8044e0 <_Min_Stack_Size+0x8040e0>
    1440:	00001301 	andeq	r1, r0, r1, lsl #6
    1444:	03000527 	movweq	r0, #1319	; 0x527
    1448:	3b0b3a0e 	blcc	2cfc88 <_Min_Stack_Size+0x2cf888>
    144c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1450:	28000013 	stmdacs	r0, {r0, r1, r4}
    1454:	01018289 	smlabbeq	r1, r9, r2, r8
    1458:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    145c:	0013310c 	andseq	r3, r3, ip, lsl #2
    1460:	012e2900 			; <UNDEFINED> instruction: 0x012e2900
    1464:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1468:	0b3b0b3a 	bleq	ec4158 <_Min_Stack_Size+0xec3d58>
    146c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1470:	01111349 	tsteq	r1, r9, asr #6
    1474:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1478:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    147c:	2a000013 	bcs	14d0 <_Min_Stack_Size+0x10d0>
    1480:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1484:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1488:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    148c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1490:	000b570b 	andeq	r5, fp, fp, lsl #14
    1494:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    1498:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    149c:	0b3b0b3a 	bleq	ec418c <_Min_Stack_Size+0xec3d8c>
    14a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    14a4:	01111349 	tsteq	r1, r9, asr #6
    14a8:	0a400112 	beq	10018f8 <_Min_Stack_Size+0x10014f8>
    14ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    14b0:	2c000013 	stccs	0, cr0, [r0], {19}
    14b4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    14b8:	0b3b0b3a 	bleq	ec41a8 <_Min_Stack_Size+0xec3da8>
    14bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    14c0:	00000a02 	andeq	r0, r0, r2, lsl #20
    14c4:	0b000f2d 	bleq	5180 <_Min_Stack_Size+0x4d80>
    14c8:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    14cc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 141c <_Min_Stack_Size+0x101c>
    14d0:	0b3a0e03 	bleq	e84ce4 <_Min_Stack_Size+0xe848e4>
    14d4:	0b390b3b 	bleq	e441c8 <_Min_Stack_Size+0xe43dc8>
    14d8:	01111349 	tsteq	r1, r9, asr #6
    14dc:	0a400112 	beq	100192c <_Min_Stack_Size+0x100152c>
    14e0:	000c4297 	muleq	ip, r7, r2
    14e4:	012e2f00 			; <UNDEFINED> instruction: 0x012e2f00
    14e8:	0b3a0e03 	bleq	e84cfc <_Min_Stack_Size+0xe848fc>
    14ec:	0b390b3b 	bleq	e441e0 <_Min_Stack_Size+0xe43de0>
    14f0:	13490c27 	movtne	r0, #39975	; 0x9c27
    14f4:	13010b20 	movwne	r0, #6944	; 0x1b20
    14f8:	05300000 	ldreq	r0, [r0, #-0]!
    14fc:	3a080300 	bcc	202104 <_Min_Stack_Size+0x201d04>
    1500:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1504:	0013490b 	andseq	r4, r3, fp, lsl #18
    1508:	012e3100 			; <UNDEFINED> instruction: 0x012e3100
    150c:	0b3a0e03 	bleq	e84d20 <_Min_Stack_Size+0xe84920>
    1510:	0b390b3b 	bleq	e44204 <_Min_Stack_Size+0xe43e04>
    1514:	0b200c27 	bleq	8045b8 <_Min_Stack_Size+0x8041b8>
    1518:	00001301 	andeq	r1, r0, r1, lsl #6
    151c:	31012e32 	tstcc	r1, r2, lsr lr
    1520:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1524:	970a4001 	strls	r4, [sl, -r1]
    1528:	13010c42 	movwne	r0, #7234	; 0x1c42
    152c:	1d330000 	ldcne	0, cr0, [r3, #-0]
    1530:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1534:	0b42b801 	bleq	10af540 <_Min_Stack_Size+0x10af140>
    1538:	0b580655 	bleq	1602e94 <_Min_Stack_Size+0x1602a94>
    153c:	0b570b59 	bleq	15c42a8 <_Min_Stack_Size+0x15c3ea8>
    1540:	00001301 	andeq	r1, r0, r1, lsl #6
    1544:	3f002e34 	svccc	0x00002e34
    1548:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    154c:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1550:	0b3b0b3a 	bleq	ec4240 <_Min_Stack_Size+0xec3e40>
    1554:	00000b39 	andeq	r0, r0, r9, lsr fp
    1558:	01110100 	tsteq	r1, r0, lsl #2
    155c:	0b130e25 	bleq	4c4df8 <_Min_Stack_Size+0x4c49f8>
    1560:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1564:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1568:	00001710 	andeq	r1, r0, r0, lsl r7
    156c:	0b002402 	bleq	a57c <_Min_Stack_Size+0xa17c>
    1570:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1574:	0300000e 	movweq	r0, #14
    1578:	0b0b0024 	bleq	2c1610 <_Min_Stack_Size+0x2c1210>
    157c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1580:	16040000 	strne	r0, [r4], -r0
    1584:	3a0e0300 	bcc	38218c <_Min_Stack_Size+0x381d8c>
    1588:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    158c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1590:	01010500 	tsteq	r1, r0, lsl #10
    1594:	13011349 	movwne	r1, #4937	; 0x1349
    1598:	21060000 	mrscs	r0, (UNDEF: 6)
    159c:	07000000 	streq	r0, [r0, -r0]
    15a0:	0b0b000f 	bleq	2c15e4 <_Min_Stack_Size+0x2c11e4>
    15a4:	00001349 	andeq	r1, r0, r9, asr #6
    15a8:	27001508 	strcs	r1, [r0, -r8, lsl #10]
    15ac:	09000019 	stmdbeq	r0, {r0, r3, r4}
    15b0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    15b4:	0b3b0b3a 	bleq	ec42a4 <_Min_Stack_Size+0xec3ea4>
    15b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    15bc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    15c0:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    15c4:	03193f01 	tsteq	r9, #1, 30
    15c8:	3b0b3a0e 	blcc	2cfe08 <_Min_Stack_Size+0x2cfa08>
    15cc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    15d0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    15d4:	96184006 	ldrls	r4, [r8], -r6
    15d8:	13011942 	movwne	r1, #6466	; 0x1942
    15dc:	340b0000 	strcc	r0, [fp], #-0
    15e0:	3a0e0300 	bcc	3821e8 <_Min_Stack_Size+0x381de8>
    15e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    15ec:	1742b717 	smlaldne	fp, r2, r7, r7
    15f0:	340c0000 	strcc	r0, [ip], #-0
    15f4:	3a080300 	bcc	2021fc <_Min_Stack_Size+0x201dfc>
    15f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1600:	1742b717 	smlaldne	fp, r2, r7, r7
    1604:	890d0000 	stmdbhi	sp, {}	; <UNPREDICTABLE>
    1608:	11000182 	smlabbne	r0, r2, r1, r0
    160c:	00133101 	andseq	r3, r3, r1, lsl #2
    1610:	002e0e00 	eoreq	r0, lr, r0, lsl #28
    1614:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1618:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
    161c:	0b3b0b3a 	bleq	ec430c <_Min_Stack_Size+0xec3f0c>
    1620:	00000b39 	andeq	r0, r0, r9, lsr fp
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
       4:	0800170e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, ip}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	0800170e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, ip}
      10:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00010100 	andeq	r0, r1, r0, lsl #2
      24:	00000000 	andeq	r0, r0, r0
      28:	08001726 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl, ip}
      2c:	08001732 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl, ip}
      30:	32520001 	subscc	r0, r2, #1
      34:	36080017 			; <UNDEFINED> instruction: 0x36080017
      38:	07080017 	smladeq	r8, r7, r0, r0
      3c:	0b007200 	bleq	1c844 <_Min_Stack_Size+0x1c444>
      40:	9f1af3ff 	svcls	0x001af3ff
      44:	08001736 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, sl, ip}
      48:	0800173a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, ip}
      4c:	3a520001 	bcc	1480058 <_Min_Stack_Size+0x147fc58>
      50:	44080017 	strmi	r0, [r8], #-23	; 0xffffffe9
      54:	02080017 	andeq	r0, r8, #23
      58:	00087300 	andeq	r7, r8, r0, lsl #6
	...
      64:	00000101 	andeq	r0, r0, r1, lsl #2
      68:	3a000000 	bcc	70 <_Min_Heap_Size+0x70>
      6c:	46080017 			; <UNDEFINED> instruction: 0x46080017
      70:	01080017 	tsteq	r8, r7, lsl r0
      74:	17465200 	strbne	r5, [r6, -r0, lsl #4]
      78:	174a0800 	strbne	r0, [sl, -r0, lsl #16]
      7c:	00070800 	andeq	r0, r7, r0, lsl #16
      80:	ff0b0072 			; <UNDEFINED> instruction: 0xff0b0072
      84:	4a9f1acf 	bmi	fe7c6bc8 <BootRAM+0xd737369>
      88:	4e080017 	mcrmi	0, 0, r0, cr8, cr7, {0}
      8c:	01080017 	tsteq	r8, r7, lsl r0
      90:	174e5200 	strbne	r5, [lr, -r0, lsl #4]
      94:	17580800 	ldrbne	r0, [r8, -r0, lsl #16]
      98:	00020800 	andeq	r0, r2, r0, lsl #16
      9c:	00000873 	andeq	r0, r0, r3, ror r8
      a0:	00000000 	andeq	r0, r0, r0
      a4:	01000000 	mrseq	r0, (UNDEF: 0)
      a8:	00000001 	andeq	r0, r0, r1
      ac:	174e0000 	strbne	r0, [lr, -r0]
      b0:	175a0800 	ldrbne	r0, [sl, -r0, lsl #16]
      b4:	00010800 	andeq	r0, r1, r0, lsl #16
      b8:	00175a52 	andseq	r5, r7, r2, asr sl
      bc:	00175e08 	andseq	r5, r7, r8, lsl #28
      c0:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
      c4:	fcff0b00 	ldc2l	11, cr0, [pc]	; cc <_Min_Heap_Size+0xcc>	; <UNPREDICTABLE>
      c8:	175e9f1a 	smmlane	lr, sl, pc, r9	; <UNPREDICTABLE>
      cc:	17620800 	strbne	r0, [r2, -r0, lsl #16]!
      d0:	00010800 	andeq	r0, r1, r0, lsl #16
      d4:	00176252 	andseq	r6, r7, r2, asr r2
      d8:	00176808 	andseq	r6, r7, r8, lsl #16
      dc:	73000208 	movwvc	r0, #520	; 0x208
      e0:	00000008 	andeq	r0, r0, r8
      e4:	00000000 	andeq	r0, r0, r0
      e8:	01010000 	mrseq	r0, (UNDEF: 1)
      ec:	00000000 	andeq	r0, r0, r0
      f0:	00176200 	andseq	r6, r7, r0, lsl #4
      f4:	00176208 	andseq	r6, r7, r8, lsl #4
      f8:	52000108 	andpl	r0, r0, #8, 2
      fc:	08001762 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, ip}
     100:	08001766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, ip}
     104:	00720006 	rsbseq	r0, r2, r6
     108:	9f1afc09 	svcls	0x001afc09
     10c:	08001766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, ip}
     110:	08001772 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, sl, ip}
     114:	72520001 	subsvc	r0, r2, #1
     118:	7e080017 	mcrvc	0, 0, r0, cr8, cr7, {0}
     11c:	02080017 	andeq	r0, r8, #23
     120:	00087300 	andeq	r7, r8, r0, lsl #6
	...
     12c:	00000101 	andeq	r0, r0, r1, lsl #2
     130:	74000000 	strvc	r0, [r0], #-0
     134:	80080017 	andhi	r0, r8, r7, lsl r0
     138:	01080017 	tsteq	r8, r7, lsl r0
     13c:	17805100 	strne	r5, [r0, r0, lsl #2]
     140:	17840800 	strne	r0, [r4, r0, lsl #16]
     144:	00080800 	andeq	r0, r8, r0, lsl #16
     148:	ff110071 			; <UNDEFINED> instruction: 0xff110071
     14c:	9f1a73ff 	svcls	0x001a73ff
     150:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
     154:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
     158:	88510001 	ldmdahi	r1, {r0}^
     15c:	92080017 	andls	r0, r8, #23
     160:	02080017 	andeq	r0, r8, #23
     164:	00087200 	andeq	r7, r8, r0, lsl #4
	...
     170:	00000101 	andeq	r0, r0, r1, lsl #2
     174:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     178:	94080017 	strls	r0, [r8], #-23	; 0xffffffe9
     17c:	01080017 	tsteq	r8, r7, lsl r0
     180:	17945100 	ldrne	r5, [r4, r0, lsl #2]
     184:	17980800 	ldrne	r0, [r8, r0, lsl #16]
     188:	00070800 	andeq	r0, r7, r0, lsl #16
     18c:	3f0b0071 	svccc	0x000b0071
     190:	989f1aff 	ldmls	pc, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip}	; <UNPREDICTABLE>
     194:	9c080017 	stcls	0, cr0, [r8], {23}
     198:	01080017 	tsteq	r8, r7, lsl r0
     19c:	179c5100 	ldrne	r5, [ip, r0, lsl #2]
     1a0:	179e0800 	ldrne	r0, [lr, r0, lsl #16]
     1a4:	00020800 	andeq	r0, r2, r0, lsl #16
     1a8:	00000873 	andeq	r0, r0, r3, ror r8
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	02000000 	andeq	r0, r0, #0
     1b4:	00000002 	andeq	r0, r0, r2
     1b8:	08000378 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9}
     1bc:	08000378 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9}
     1c0:	78500001 	ldmdavc	r0, {r0}^
     1c4:	7c080003 	stcvc	0, cr0, [r8], {3}
     1c8:	01080003 	tsteq	r8, r3
     1cc:	037c5000 	cmneq	ip, #0
     1d0:	03840800 	orreq	r0, r4, #0, 16
     1d4:	00030800 	andeq	r0, r3, r0, lsl #16
     1d8:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
	...
     1ec:	0001e800 	andeq	lr, r1, r0, lsl #16
     1f0:	00021808 	andeq	r1, r2, r8, lsl #16
     1f4:	50000108 	andpl	r0, r0, r8, lsl #2
     1f8:	08000218 	stmdaeq	r0, {r3, r4, r9}
     1fc:	0800021a 	stmdaeq	r0, {r1, r3, r4, r9}
     200:	01f30004 	mvnseq	r0, r4
     204:	021a9f50 	andseq	r9, sl, #80, 30	; 0x140
     208:	023e0800 	eorseq	r0, lr, #0, 16
     20c:	00010800 	andeq	r0, r1, r0, lsl #16
     210:	00023e50 	andeq	r3, r2, r0, asr lr
     214:	00031808 	andeq	r1, r3, r8, lsl #16
     218:	f3000408 	vshl.u8	d0, d8, d0
     21c:	189f5001 	ldmne	pc, {r0, ip, lr}	; <UNPREDICTABLE>
     220:	74080003 	strvc	r0, [r8], #-3
     224:	01080003 	tsteq	r8, r3
     228:	00005000 	andeq	r5, r0, r0
     22c:	00000000 	andeq	r0, r0, r0
     230:	00010000 	andeq	r0, r1, r0
	...
     23c:	00000001 	andeq	r0, r0, r1
     240:	00010000 	andeq	r0, r1, r0
	...
     250:	00010100 	andeq	r0, r1, r0, lsl #2
     254:	00010100 	andeq	r0, r1, r0, lsl #2
     258:	01f20000 	mvnseq	r0, r0
     25c:	01f60800 	mvnseq	r0, r0, lsl #16
     260:	00020800 	andeq	r0, r2, r0, lsl #16
     264:	01f69f30 	mvnseq	r9, r0, lsr pc
     268:	020c0800 	andeq	r0, ip, #0, 16
     26c:	00070800 	andeq	r0, r7, r0, lsl #16
     270:	720fff0a 	andvc	pc, pc, #10, 30	; 0x28
     274:	0c9f1c00 	ldceq	12, cr1, [pc], {0}
     278:	0e080002 	cdpeq	0, 0, cr0, cr8, cr2, {0}
     27c:	07080002 	streq	r0, [r8, -r2]
     280:	10000a00 	andne	r0, r0, r0, lsl #20
     284:	9f1c0072 	svcls	0x001c0072
     288:	0800021a 	stmdaeq	r0, {r1, r3, r4, r9}
     28c:	08000226 	stmdaeq	r0, {r1, r2, r5, r9}
     290:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     294:	1c00730f 	stcne	3, cr7, [r0], {15}
     298:	0002269f 	muleq	r2, pc, r6	; <UNPREDICTABLE>
     29c:	00022808 	andeq	r2, r2, r8, lsl #16
     2a0:	0a000708 	beq	1ec8 <_Min_Stack_Size+0x1ac8>
     2a4:	00731000 	rsbseq	r1, r3, r0
     2a8:	023a9f1c 	eorseq	r9, sl, #28, 30	; 0x70
     2ac:	023e0800 	eorseq	r0, lr, #0, 16
     2b0:	00020800 	andeq	r0, r2, r0, lsl #16
     2b4:	023e9f30 	eorseq	r9, lr, #48, 30	; 0xc0
     2b8:	02500800 	subseq	r0, r0, #0, 16
     2bc:	00070800 	andeq	r0, r7, r0, lsl #16
     2c0:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     2c4:	509f1c00 	addspl	r1, pc, r0, lsl #24
     2c8:	52080002 	andpl	r0, r8, #2
     2cc:	07080002 	streq	r0, [r8, -r2]
     2d0:	10000a00 	andne	r0, r0, r0, lsl #20
     2d4:	9f1c0073 	svcls	0x001c0073
     2d8:	080002b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9}
     2dc:	080002bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9}
     2e0:	9f300002 	svcls	0x00300002
     2e4:	080002bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9}
     2e8:	080002c2 	stmdaeq	r0, {r1, r6, r7, r9}
     2ec:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     2f0:	1c00730f 	stcne	3, cr7, [r0], {15}
     2f4:	0002c89f 	muleq	r2, pc, r8	; <UNPREDICTABLE>
     2f8:	0002d408 	andeq	sp, r2, r8, lsl #8
     2fc:	0a000708 	beq	1f24 <_Min_Stack_Size+0x1b24>
     300:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
     304:	02d49f1c 	sbcseq	r9, r4, #28, 30	; 0x70
     308:	02d60800 	sbcseq	r0, r6, #0, 16
     30c:	00070800 	andeq	r0, r7, r0, lsl #16
     310:	7310000a 	tstvc	r0, #10
     314:	e29f1c00 	adds	r1, pc, #0, 24
     318:	f2080002 	vhadd.s8	d0, d8, d2
     31c:	07080002 	streq	r0, [r8, -r2]
     320:	0fff0a00 	svceq	0x00ff0a00
     324:	9f1c0073 	svcls	0x001c0073
     328:	080002f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9}
     32c:	080002f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9}
     330:	000a0007 	andeq	r0, sl, r7
     334:	1c007310 	stcne	3, cr7, [r0], {16}
     338:	0002fa9f 	muleq	r2, pc, sl	; <UNPREDICTABLE>
     33c:	00030008 	andeq	r0, r3, r8
     340:	0a000708 	beq	1f68 <_Min_Stack_Size+0x1b68>
     344:	00730fff 	ldrshteq	r0, [r3], #-255	; 0xffffff01
     348:	03009f1c 	movweq	r9, #3868	; 0xf1c
     34c:	03120800 	tsteq	r2, #0, 16
     350:	00040800 	andeq	r0, r4, r0, lsl #16
     354:	9f1fff0a 	svcls	0x001fff0a
     358:	08000312 	stmdaeq	r0, {r1, r4, r8, r9}
     35c:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
     360:	9f300002 	svcls	0x00300002
     364:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
     368:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
     36c:	ff0a0004 			; <UNDEFINED> instruction: 0xff0a0004
     370:	03589f1f 	cmpeq	r8, #31, 30	; 0x7c
     374:	035c0800 	cmpeq	ip, #0, 16
     378:	00020800 	andeq	r0, r2, r0, lsl #16
     37c:	035c9f30 	cmpeq	ip, #48, 30	; 0xc0
     380:	03740800 	cmneq	r4, #0, 16
     384:	00070800 	andeq	r0, r7, r0, lsl #16
     388:	730fff0a 	movwvc	pc, #65290	; 0xff0a	; <UNPREDICTABLE>
     38c:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
     39c:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
     3a0:	01010000 	mrseq	r0, (UNDEF: 1)
     3a4:	00000303 	andeq	r0, r0, r3, lsl #6
     3a8:	02020000 	andeq	r0, r2, #0
     3ac:	00000000 	andeq	r0, r0, r0
     3b0:	01010000 	mrseq	r0, (UNDEF: 1)
     3b4:	00000000 	andeq	r0, r0, r0
     3b8:	ec000000 	stc	0, cr0, [r0], {-0}
     3bc:	f6080001 			; <UNDEFINED> instruction: 0xf6080001
     3c0:	01080001 	tsteq	r8, r1
     3c4:	01f65200 	mvnseq	r5, r0, lsl #4
     3c8:	021a0800 	andseq	r0, sl, #0, 16
     3cc:	00020800 	andeq	r0, r2, r0, lsl #16
     3d0:	02920873 	addseq	r0, r2, #7536640	; 0x730000
     3d4:	02a40800 	adceq	r0, r4, #0, 16
     3d8:	00010800 	andeq	r0, r1, r0, lsl #16
     3dc:	0002a452 	andeq	sl, r2, r2, asr r4
     3e0:	0002a408 	andeq	sl, r2, r8, lsl #8
     3e4:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
     3e8:	243c4000 	ldrtcs	r4, [ip], #-0
     3ec:	02a49f21 	adceq	r9, r4, #33, 30	; 0x84
     3f0:	02a80800 	adceq	r0, r8, #0, 16
     3f4:	00070800 	andeq	r0, r7, r0, lsl #16
     3f8:	40410072 	submi	r0, r1, r2, ror r0
     3fc:	a89f2124 	ldmge	pc, {r2, r5, r8, sp}	; <UNPREDICTABLE>
     400:	a8080002 	stmdage	r8, {r1}
     404:	01080002 	tsteq	r8, r2
     408:	02a85200 	adceq	r5, r8, #0, 4
     40c:	02a80800 	adceq	r0, r8, #0, 16
     410:	00070800 	andeq	r0, r7, r0, lsl #16
     414:	0f0b0072 	svceq	0x000b0072
     418:	a89f1aff 	ldmge	pc, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip}	; <UNPREDICTABLE>
     41c:	ac080002 	stcge	0, cr0, [r8], {2}
     420:	07080002 	streq	r0, [r8, -r2]
     424:	0b007200 	bleq	1cc2c <_Min_Stack_Size+0x1c82c>
     428:	9f1ac70f 	svcls	0x001ac70f
     42c:	080002ac 	stmdaeq	r0, {r2, r3, r5, r7, r9}
     430:	080002bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9}
     434:	c2510001 	subsgt	r0, r1, #1
     438:	c2080002 	andgt	r0, r8, #2
     43c:	01080002 	tsteq	r8, r2
     440:	02c25200 	sbceq	r5, r2, #0, 4
     444:	02c60800 	sbceq	r0, r6, #0, 16
     448:	00070800 	andeq	r0, r7, r0, lsl #16
     44c:	3f400072 	svccc	0x00400072
     450:	c69f2124 	ldrgt	r2, [pc], r4, lsr #2
     454:	c8080002 	stmdagt	r8, {r1}
     458:	01080002 	tsteq	r8, r2
     45c:	02e25200 	rsceq	r5, r2, #0, 4
     460:	03080800 	movweq	r0, #34816	; 0x8800
     464:	00020800 	andeq	r0, r2, r0, lsl #16
     468:	030a0871 	movweq	r0, #43121	; 0xa871
     46c:	030a0800 	movweq	r0, #43008	; 0xa800
     470:	00010800 	andeq	r0, r1, r0, lsl #16
     474:	00030a53 	andeq	r0, r3, r3, asr sl
     478:	00031008 	andeq	r1, r3, r8
     47c:	73000608 	movwvc	r0, #1544	; 0x608
     480:	1afc0900 	bne	fff02888 <BootRAM+0xee73029>
     484:	0003109f 	muleq	r3, pc, r0	; <UNPREDICTABLE>
     488:	00031608 	andeq	r1, r3, r8, lsl #12
     48c:	53000108 	movwpl	r0, #264	; 0x108
     490:	08000316 	stmdaeq	r0, {r1, r2, r4, r8, r9}
     494:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
     498:	08710002 	ldmdaeq	r1!, {r1}^
     49c:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
     4a0:	08000320 	stmdaeq	r0, {r5, r8, r9}
     4a4:	08730002 	ldmdaeq	r3!, {r1}^
	...
     4b4:	080001fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8}
     4b8:	08000200 	stmdaeq	r0, {r9}
     4bc:	7e710003 	cdpvc	0, 7, cr0, cr1, cr3, {0}
     4c0:	0002009f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     4c4:	00020408 	andeq	r0, r2, r8, lsl #8
     4c8:	71000308 	tstvc	r0, r8, lsl #6
     4cc:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
     4d8:	021a0000 	andseq	r0, sl, #0
     4dc:	021e0800 	andseq	r0, lr, #0, 16
     4e0:	00030800 	andeq	r0, r3, r0, lsl #16
     4e4:	1e9f7e72 	mrcne	14, 4, r7, cr15, cr2, {3}
     4e8:	22080002 	andcs	r0, r8, #2
     4ec:	03080002 	movweq	r0, #32770	; 0x8002
     4f0:	9f7f7200 	svcls	0x007f7200
	...
     500:	08000244 	stmdaeq	r0, {r2, r6, r9}
     504:	08000248 	stmdaeq	r0, {r3, r6, r9}
     508:	7e700003 	cdpvc	0, 7, cr0, cr0, cr3, {0}
     50c:	0002489f 	muleq	r2, pc, r8	; <UNPREDICTABLE>
     510:	00025c08 	andeq	r5, r2, r8, lsl #24
     514:	70000308 	andvc	r0, r0, r8, lsl #6
     518:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
     524:	02c80000 	sbceq	r0, r8, #0
     528:	02cc0800 	sbceq	r0, ip, #0, 16
     52c:	00030800 	andeq	r0, r3, r0, lsl #16
     530:	cc9f7e71 	ldcgt	14, cr7, [pc], {113}	; 0x71
     534:	d0080002 	andle	r0, r8, r2
     538:	03080002 	movweq	r0, #32770	; 0x8002
     53c:	9f7f7100 	svcls	0x007f7100
	...
     54c:	080002e2 	stmdaeq	r0, {r1, r5, r6, r7, r9}
     550:	080002e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9}
     554:	7e720003 	cdpvc	0, 7, cr0, cr2, cr3, {0}
     558:	0002e69f 	muleq	r2, pc, r6	; <UNPREDICTABLE>
     55c:	0002ea08 	andeq	lr, r2, r8, lsl #20
     560:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     564:	00009f7f 	andeq	r9, r0, pc, ror pc
     568:	00000000 	andeq	r0, r0, r0
     56c:	04dc0000 	ldrbeq	r0, [ip], #0
     570:	04de0000 	ldrbeq	r0, [lr], #0
     574:	00020000 	andeq	r0, r2, r0
     578:	04de007d 	ldrbeq	r0, [lr], #125	; 0x7d
     57c:	05360000 	ldreq	r0, [r6, #-0]!
     580:	00020000 	andeq	r0, r2, r0
     584:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     590:	04dc0000 	ldrbeq	r0, [ip], #0
     594:	04ec0000 	strbteq	r0, [ip], #0
     598:	00010000 	andeq	r0, r1, r0
     59c:	0004ec50 	andeq	lr, r4, r0, asr ip
     5a0:	00053600 	andeq	r3, r5, r0, lsl #12
     5a4:	f3000400 	vshl.u8	d0, d0, d0
     5a8:	009f5001 	addseq	r5, pc, r1
	...
     5b8:	0004dc00 	andeq	sp, r4, r0, lsl #24
     5bc:	00050400 	andeq	r0, r5, r0, lsl #8
     5c0:	51000100 	mrspl	r0, (UNDEF: 16)
     5c4:	00000504 	andeq	r0, r0, r4, lsl #10
     5c8:	00000508 	andeq	r0, r0, r8, lsl #10
     5cc:	02710003 	rsbseq	r0, r1, #3
     5d0:	0005089f 	muleq	r5, pc, r8	; <UNPREDICTABLE>
     5d4:	00053600 	andeq	r3, r5, r0, lsl #12
     5d8:	f3000400 	vshl.u8	d0, d0, d0
     5dc:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     5e8:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
     5ec:	f4000004 	vst4.8	{d0-d3}, [r0], r4
     5f0:	01000004 	tsteq	r0, r4
     5f4:	04f45200 	ldrbteq	r5, [r4], #512	; 0x200
     5f8:	05160000 	ldreq	r0, [r6, #-0]
     5fc:	000b0000 	andeq	r0, fp, r0
     600:	24330073 	ldrtcs	r0, [r3], #-115	; 0xffffff8d
     604:	81c08023 	bichi	r8, r0, r3, lsr #32
     608:	009f0480 	addseq	r0, pc, r0, lsl #9
	...
     614:	0004f000 	andeq	pc, r4, r0
     618:	00053600 	andeq	r3, r5, r0, lsl #12
     61c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     628:	00000001 	andeq	r0, r0, r1
     62c:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
     630:	05020000 	streq	r0, [r2, #-0]
     634:	00050000 	andeq	r0, r5, r0
     638:	26310170 			; <UNDEFINED> instruction: 0x26310170
     63c:	0005029f 	muleq	r5, pc, r2	; <UNPREDICTABLE>
     640:	00050800 	andeq	r0, r5, r0, lsl #16
     644:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     648:	00000508 	andeq	r0, r0, r8, lsl #10
     64c:	00000534 	andeq	r0, r0, r4, lsr r5
     650:	01700005 	cmneq	r0, r5
     654:	009f2631 	addseq	r2, pc, r1, lsr r6	; <UNPREDICTABLE>
	...
     664:	00050000 	andeq	r0, r5, r0
     668:	00050c00 	andeq	r0, r5, r0, lsl #24
     66c:	52000100 	andpl	r0, r0, #0, 2
     670:	0000050c 	andeq	r0, r0, ip, lsl #10
     674:	00000512 	andeq	r0, r0, r2, lsl r5
     678:	7c720003 	ldclvc	0, cr0, [r2], #-12
     67c:	0005129f 	muleq	r5, pc, r2	; <UNPREDICTABLE>
     680:	00052200 	andeq	r2, r5, r0, lsl #4
     684:	52000100 	andpl	r0, r0, #0, 2
	...
     690:	05000002 	streq	r0, [r0, #-2]
     694:	05080000 	streq	r0, [r8, #-0]
     698:	00020000 	andeq	r0, r2, r0
     69c:	00009f30 	andeq	r9, r0, r0, lsr pc
     6a0:	00000000 	andeq	r0, r0, r0
     6a4:	04540000 	ldrbeq	r0, [r4], #-0
     6a8:	04560000 	ldrbeq	r0, [r6], #-0
     6ac:	00020000 	andeq	r0, r2, r0
     6b0:	0456007d 	ldrbeq	r0, [r6], #-125	; 0xffffff83
     6b4:	04a80000 	strteq	r0, [r8], #0
     6b8:	00020000 	andeq	r0, r2, r0
     6bc:	0000147d 	andeq	r1, r0, sp, ror r4
	...
     6cc:	00000454 	andeq	r0, r0, r4, asr r4
     6d0:	0000047a 	andeq	r0, r0, sl, ror r4
     6d4:	7a500001 	bvc	14006e0 <_Min_Stack_Size+0x14002e0>
     6d8:	9c000004 	stcls	0, cr0, [r0], {4}
     6dc:	04000004 	streq	r0, [r0], #-4
     6e0:	5001f300 	andpl	pc, r1, r0, lsl #6
     6e4:	00049c9f 	muleq	r4, pc, ip	; <UNPREDICTABLE>
     6e8:	0004a800 	andeq	sl, r4, r0, lsl #16
     6ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     6f8:	04620000 	strbteq	r0, [r2], #-0
     6fc:	04a80000 	strteq	r0, [r8], #0
     700:	00010000 	andeq	r0, r1, r0
     704:	00000054 	andeq	r0, r0, r4, asr r0
     708:	00000000 	andeq	r0, r0, r0
     70c:	70000000 	andvc	r0, r0, r0
     710:	a8000004 	stmdage	r0, {r2}
     714:	01000004 	tsteq	r0, r4
     718:	00005600 	andeq	r5, r0, r0, lsl #12
     71c:	00000000 	andeq	r0, r0, r0
     720:	00010000 	andeq	r0, r1, r0
     724:	00000470 	andeq	r0, r0, r0, ror r4
     728:	000004a8 	andeq	r0, r0, r8, lsr #9
     72c:	00510001 	subseq	r0, r1, r1
	...
     738:	00000202 	andeq	r0, r0, r2, lsl #4
     73c:	00047200 	andeq	r7, r4, r0, lsl #4
     740:	00047200 	andeq	r7, r4, r0, lsl #4
     744:	53000100 	movwpl	r0, #256	; 0x100
     748:	00000472 	andeq	r0, r0, r2, ror r4
     74c:	00000488 	andeq	r0, r0, r8, lsl #9
     750:	00750008 	rsbseq	r0, r5, r8
     754:	00732432 	rsbseq	r2, r3, r2, lsr r4
     758:	049c9f22 	ldreq	r9, [ip], #3874	; 0xf22
     75c:	04a40000 	strteq	r0, [r4], #0
     760:	00080000 	andeq	r0, r8, r0
     764:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
     768:	9f220073 	svcls	0x00220073
	...
     774:	00000002 	andeq	r0, r0, r2
     778:	00000472 	andeq	r0, r0, r2, ror r4
     77c:	000004a4 	andeq	r0, r0, r4, lsr #9
     780:	a4550001 	ldrbge	r0, [r5], #-1
     784:	a6000004 	strge	r0, [r0], -r4
     788:	03000004 	movweq	r0, #4
     78c:	9f017500 	svcls	0x00017500
	...
     798:	00000304 	andeq	r0, r0, r4, lsl #6
     79c:	00000308 	andeq	r0, r0, r8, lsl #6
     7a0:	007d0002 	rsbseq	r0, sp, r2
     7a4:	00000308 	andeq	r0, r0, r8, lsl #6
     7a8:	00000454 	andeq	r0, r0, r4, asr r4
     7ac:	187d0002 	ldmdane	sp!, {r1}^
	...
     7b8:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     7bc:	03700000 	cmneq	r0, #0
     7c0:	00010000 	andeq	r0, r1, r0
     7c4:	00000056 	andeq	r0, r0, r6, asr r0
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	00000200 	andeq	r0, r0, r0, lsl #4
     7d0:	0003ac00 	andeq	sl, r3, r0, lsl #24
     7d4:	0003b200 	andeq	fp, r3, r0, lsl #4
     7d8:	30000200 	andcc	r0, r0, r0, lsl #4
     7dc:	0003b29f 	muleq	r3, pc, r2	; <UNPREDICTABLE>
     7e0:	0003b400 	andeq	fp, r3, r0, lsl #8
     7e4:	38000500 	stmdacc	r0, {r8, sl}
     7e8:	9f1c0074 	svcls	0x001c0074
	...
     7f4:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     7f8:	000001be 			; <UNDEFINED> instruction: 0x000001be
     7fc:	007d0002 	rsbseq	r0, sp, r2
     800:	000001be 			; <UNDEFINED> instruction: 0x000001be
     804:	00000304 	andeq	r0, r0, r4, lsl #6
     808:	147d0002 	ldrbtne	r0, [sp], #-2
	...
     814:	00020200 	andeq	r0, r2, r0, lsl #4
     818:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     81c:	000001d8 	ldrdeq	r0, [r0], -r8
     820:	d8500001 	ldmdale	r0, {r0}^
     824:	04000001 	streq	r0, [r0], #-1
     828:	01000003 	tsteq	r0, r3
     82c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
     844:	01bc0000 			; <UNDEFINED> instruction: 0x01bc0000
     848:	02180000 	andseq	r0, r8, #0
     84c:	00010000 	andeq	r0, r1, r0
     850:	00021851 	andeq	r1, r2, r1, asr r8
     854:	00026e00 	andeq	r6, r2, r0, lsl #28
     858:	f3000400 	vshl.u8	d0, d0, d0
     85c:	6e9f5101 	fmlvse	f5, f7, f1
     860:	72000002 	andvc	r0, r0, #2
     864:	01000002 	tsteq	r0, r2
     868:	02725100 	rsbseq	r5, r2, #0, 2
     86c:	02740000 	rsbseq	r0, r4, #0
     870:	00040000 	andeq	r0, r4, r0
     874:	9f5101f3 	svcls	0x005101f3
     878:	00000274 	andeq	r0, r0, r4, ror r2
     87c:	00000278 	andeq	r0, r0, r8, ror r2
     880:	78510001 	ldmdavc	r1, {r0}^
     884:	7a000002 	bvc	894 <_Min_Stack_Size+0x494>
     888:	04000002 	streq	r0, [r0], #-2
     88c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     890:	00027a9f 	muleq	r2, pc, sl	; <UNPREDICTABLE>
     894:	00027e00 	andeq	r7, r2, r0, lsl #28
     898:	51000100 	mrspl	r0, (UNDEF: 16)
     89c:	0000027e 	andeq	r0, r0, lr, ror r2
     8a0:	00000304 	andeq	r0, r0, r4, lsl #6
     8a4:	01f30004 	mvnseq	r0, r4
     8a8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     8b8:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     8bc:	00000260 	andeq	r0, r0, r0, ror #4
     8c0:	60520001 	subsvs	r0, r2, r1
     8c4:	6e000002 	cdpvs	0, 0, cr0, cr0, cr2, {0}
     8c8:	04000002 	streq	r0, [r0], #-2
     8cc:	5201f300 	andpl	pc, r1, #0, 6
     8d0:	00026e9f 	muleq	r2, pc, lr	; <UNPREDICTABLE>
     8d4:	00030400 	andeq	r0, r3, r0, lsl #8
     8d8:	52000100 	andpl	r0, r0, #0, 2
	...
     8e8:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     8ec:	000001d8 	ldrdeq	r0, [r0], -r8
     8f0:	d8530001 	ldmdale	r3, {r0}^
     8f4:	04000001 	streq	r0, [r0], #-1
     8f8:	01000003 	tsteq	r0, r3
     8fc:	00005300 	andeq	r5, r0, r0, lsl #6
     900:	00000000 	andeq	r0, r0, r0
     904:	00010000 	andeq	r0, r1, r0
     908:	00000000 	andeq	r0, r0, r0
     90c:	01d80000 	bicseq	r0, r8, r0
     910:	023a0000 	eorseq	r0, sl, #0
     914:	00060000 	andeq	r0, r6, r0
     918:	80090070 	andhi	r0, r9, r0, ror r0
     91c:	023a9f1a 	eorseq	r9, sl, #26, 30	; 0x68
     920:	026e0000 	rsbeq	r0, lr, #0
     924:	00070000 	andeq	r0, r7, r0
     928:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     92c:	6e9f1a80 	vfnmsvs.f32	s2, s31, s0
     930:	80000002 	andhi	r0, r0, r2
     934:	06000002 	streq	r0, [r0], -r2
     938:	09007000 	stmdbeq	r0, {ip, sp, lr}
     93c:	809f1a80 	addshi	r1, pc, r0, lsl #21
     940:	04000002 	streq	r0, [r0], #-2
     944:	07000003 	streq	r0, [r0, -r3]
     948:	5001f300 	andpl	pc, r1, r0, lsl #6
     94c:	9f1a8009 	svcls	0x001a8009
	...
     958:	02010100 	andeq	r0, r1, #0, 2
     95c:	00000002 	andeq	r0, r0, r2
	...
     968:	02040000 	andeq	r0, r4, #0
     96c:	02040000 	andeq	r0, r4, #0
     970:	00010000 	andeq	r0, r1, r0
     974:	00020454 	andeq	r0, r2, r4, asr r4
     978:	00020400 	andeq	r0, r2, r0, lsl #8
     97c:	74000b00 	strvc	r0, [r0], #-2816	; 0xfffff500
     980:	0f0f0a00 	svceq	0x000f0a00
     984:	80800b1a 	addhi	r0, r0, sl, lsl fp
     988:	02049f21 	andeq	r9, r4, #33, 30	; 0x84
     98c:	02080000 	andeq	r0, r8, #0
     990:	00110000 	andseq	r0, r1, r0
     994:	000a0074 	andeq	r0, sl, r4, ror r0
     998:	00761a0f 	rsbseq	r1, r6, pc, lsl #20
     99c:	211aff08 	tstcs	sl, r8, lsl #30	; <UNPREDICTABLE>
     9a0:	2180800b 	orrcs	r8, r0, fp
     9a4:	00020c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     9a8:	00022000 	andeq	r2, r2, r0
     9ac:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     9b0:	80800b00 	addhi	r0, r0, r0, lsl #22
     9b4:	02209f21 	eoreq	r9, r0, #33, 30	; 0x84
     9b8:	02280000 	eoreq	r0, r8, #0
     9bc:	00010000 	andeq	r0, r1, r0
     9c0:	00022851 	andeq	r2, r2, r1, asr r8
     9c4:	00024200 	andeq	r4, r2, r0, lsl #4
     9c8:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
     9cc:	00024e00 	andeq	r4, r2, r0, lsl #28
     9d0:	00025200 	andeq	r5, r2, r0, lsl #4
     9d4:	51000100 	mrspl	r0, (UNDEF: 16)
     9d8:	0000026e 	andeq	r0, r0, lr, ror #4
     9dc:	00000280 	andeq	r0, r0, r0, lsl #5
     9e0:	00740007 	rsbseq	r0, r4, r7
     9e4:	2180800b 	orrcs	r8, r0, fp
     9e8:	0002809f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
     9ec:	00028200 	andeq	r8, r2, r0, lsl #4
     9f0:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
     9fc:	0000a400 	andeq	sl, r0, r0, lsl #8
     a00:	0000a600 	andeq	sl, r0, r0, lsl #12
     a04:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     a08:	0000a600 	andeq	sl, r0, r0, lsl #12
     a0c:	0001bc00 	andeq	fp, r1, r0, lsl #24
     a10:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     a14:	00000014 	andeq	r0, r0, r4, lsl r0
     a18:	00000000 	andeq	r0, r0, r0
     a1c:	02020000 	andeq	r0, r2, #0
     a20:	0000a400 	andeq	sl, r0, r0, lsl #8
     a24:	0000b800 	andeq	fp, r0, r0, lsl #16
     a28:	50000100 	andpl	r0, r0, r0, lsl #2
     a2c:	000000b8 	strheq	r0, [r0], -r8
     a30:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     a34:	00570001 	subseq	r0, r7, r1
	...
     a44:	a4000000 	strge	r0, [r0], #-0
     a48:	32000000 	andcc	r0, r0, #0
     a4c:	01000001 	tsteq	r0, r1
     a50:	01325100 	teqeq	r2, r0, lsl #2
     a54:	01580000 	cmpeq	r8, r0
     a58:	00040000 	andeq	r0, r4, r0
     a5c:	9f5101f3 	svcls	0x005101f3
     a60:	00000158 	andeq	r0, r0, r8, asr r1
     a64:	00000168 	andeq	r0, r0, r8, ror #2
     a68:	68510001 	ldmdavs	r1, {r0}^
     a6c:	bc000001 	stclt	0, cr0, [r0], {1}
     a70:	04000001 	streq	r0, [r0], #-1
     a74:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     a78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     a84:	a4000000 	strge	r0, [r0], #-0
     a88:	52000000 	andpl	r0, r0, #0
     a8c:	01000001 	tsteq	r0, r1
     a90:	01525200 	cmpeq	r2, r0, lsl #4
     a94:	01540000 	cmpeq	r4, r0
     a98:	00040000 	andeq	r0, r4, r0
     a9c:	9f5201f3 	svcls	0x005201f3
     aa0:	00000158 	andeq	r0, r0, r8, asr r1
     aa4:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     aa8:	00520001 	subseq	r0, r2, r1
	...
     abc:	a4000000 	strge	r0, [r0], #-0
     ac0:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
     ac4:	01000000 	mrseq	r0, (UNDEF: 0)
     ac8:	00b85300 	adcseq	r5, r8, r0, lsl #6
     acc:	013a0000 	teqeq	sl, r0
     ad0:	00010000 	andeq	r0, r1, r0
     ad4:	00013a53 	andeq	r3, r1, r3, asr sl
     ad8:	00015000 	andeq	r5, r1, r0
     adc:	77000700 	strvc	r0, [r0, -r0, lsl #14]
     ae0:	74243200 	strtvc	r3, [r4], #-512	; 0xfffffe00
     ae4:	01502200 	cmpeq	r0, r0, lsl #4
     ae8:	01580000 	cmpeq	r8, r0
     aec:	00130000 	andseq	r0, r3, r0
     af0:	035301f3 	cmpeq	r3, #-1073741764	; 0xc000003c
     af4:	080003a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9}
     af8:	305301f3 	ldrshcc	r0, [r3], #-19	; 0xffffffed
     afc:	0001282e 	andeq	r2, r1, lr, lsr #16
     b00:	589f1316 	ldmpl	pc, {r1, r2, r4, r8, r9, ip}	; <UNPREDICTABLE>
     b04:	98000001 	stmdals	r0, {r0}
     b08:	01000001 	tsteq	r0, r1
     b0c:	01985300 	orrseq	r5, r8, r0, lsl #6
     b10:	01bc0000 			; <UNDEFINED> instruction: 0x01bc0000
     b14:	00070000 	andeq	r0, r7, r0
     b18:	24320077 	ldrtcs	r0, [r2], #-119	; 0xffffff89
     b1c:	00220071 	eoreq	r0, r2, r1, ror r0
     b20:	00000000 	andeq	r0, r0, r0
     b24:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     b30:	0000b800 	andeq	fp, r0, r0, lsl #16
     b34:	0000c800 	andeq	ip, r0, r0, lsl #16
     b38:	70000600 	andvc	r0, r0, r0, lsl #12
     b3c:	1a800900 	bne	fe002f44 <BootRAM+0xcf736e5>
     b40:	0000c89f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
     b44:	0000f600 	andeq	pc, r0, r0, lsl #12
     b48:	7c000600 	stcvc	6, cr0, [r0], {-0}
     b4c:	1a800900 	bne	fe002f54 <BootRAM+0xcf736f5>
     b50:	0000f69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
     b54:	00010c00 	andeq	r0, r1, r0, lsl #24
     b58:	70000600 	andvc	r0, r0, r0, lsl #12
     b5c:	1a800900 	bne	fe002f64 <BootRAM+0xcf73705>
     b60:	00010c9f 	muleq	r1, pc, ip	; <UNPREDICTABLE>
     b64:	00015000 	andeq	r5, r1, r0
     b68:	7c000600 	stcvc	6, cr0, [r0], {-0}
     b6c:	1a800900 	bne	fe002f74 <BootRAM+0xcf73715>
     b70:	0001509f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     b74:	0001bc00 	andeq	fp, r1, r0, lsl #24
     b78:	f3000700 	vabd.u8	d0, d0, d0
     b7c:	80095001 	andhi	r5, r9, r1
     b80:	00009f1a 	andeq	r9, r0, sl, lsl pc
     b84:	00000000 	andeq	r0, r0, r0
     b88:	01000000 	mrseq	r0, (UNDEF: 0)
     b8c:	00020201 	andeq	r0, r2, r1, lsl #4
	...
     b98:	000000dc 	ldrdeq	r0, [r0], -ip
     b9c:	000000dc 	ldrdeq	r0, [r0], -ip
     ba0:	dc540001 	mrrcle	0, 0, r0, r4, cr1
     ba4:	dc000000 	stcle	0, cr0, [r0], {-0}
     ba8:	0b000000 	bleq	bb0 <_Min_Stack_Size+0x7b0>
     bac:	0a007400 	beq	1dbb4 <_Min_Stack_Size+0x1d7b4>
     bb0:	0b1a0f0f 	bleq	6847f4 <_Min_Stack_Size+0x6843f4>
     bb4:	9f218080 	svcls	0x00218080
     bb8:	000000dc 	ldrdeq	r0, [r0], -ip
     bbc:	000000e2 	andeq	r0, r0, r2, ror #1
     bc0:	00740011 	rsbseq	r0, r4, r1, lsl r0
     bc4:	1a0f000a 	bne	3c0bf4 <_Min_Stack_Size+0x3c07f4>
     bc8:	ff080077 			; <UNDEFINED> instruction: 0xff080077
     bcc:	800b211a 	andhi	r2, fp, sl, lsl r1
     bd0:	e69f2180 	ldr	r2, [pc], r0, lsl #3
     bd4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
     bd8:	07000000 	streq	r0, [r0, -r0]
     bdc:	0b007400 	bleq	1dbe4 <_Min_Stack_Size+0x1d7e4>
     be0:	9f218080 	svcls	0x00218080
     be4:	0000010c 	andeq	r0, r0, ip, lsl #2
     be8:	00000110 	andeq	r0, r0, r0, lsl r1
     bec:	00740007 	rsbseq	r0, r4, r7
     bf0:	2180800b 	orrcs	r8, r0, fp
     bf4:	0001589f 	muleq	r1, pc, r8	; <UNPREDICTABLE>
     bf8:	00015c00 	andeq	r5, r1, r0, lsl #24
     bfc:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     c00:	80800b00 	addhi	r0, r0, r0, lsl #22
     c04:	015e9f21 	cmpeq	lr, r1, lsr #30
     c08:	01620000 	cmneq	r2, r0
     c0c:	00070000 	andeq	r0, r7, r0
     c10:	800b0074 	andhi	r0, fp, r4, ror r0
     c14:	009f2180 	addseq	r2, pc, r0, lsl #3
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	36000000 	strcc	r0, [r0], -r0
     c20:	38000005 	stmdacc	r0, {r0, r2}
     c24:	02000005 	andeq	r0, r0, #5
     c28:	38007d00 	stmdacc	r0, {r8, sl, fp, ip, sp, lr}
     c2c:	c4000005 	strgt	r0, [r0], #-5
     c30:	02000005 	andeq	r0, r0, #5
     c34:	c4187d00 	ldrgt	r7, [r8], #-3328	; 0xfffff300
     c38:	c6000005 	strgt	r0, [r0], -r5
     c3c:	02000005 	andeq	r0, r0, #5
     c40:	c6107d00 	ldrgt	r7, [r0], -r0, lsl #26
     c44:	6c000005 	stcvs	0, cr0, [r0], {5}
     c48:	02000006 	andeq	r0, r0, #6
     c4c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     c5c:	36000000 	strcc	r0, [r0], -r0
     c60:	5c000005 	stcpl	0, cr0, [r0], {5}
     c64:	01000005 	tsteq	r0, r5
     c68:	055c5000 	ldrbeq	r5, [ip, #-0]
     c6c:	05860000 	streq	r0, [r6]
     c70:	00040000 	andeq	r0, r4, r0
     c74:	9f5001f3 	svcls	0x005001f3
     c78:	00000586 	andeq	r0, r0, r6, lsl #11
     c7c:	00000590 	muleq	r0, r0, r5
     c80:	90500001 	subsls	r0, r0, r1
     c84:	6c000005 	stcvs	0, cr0, [r0], {5}
     c88:	04000006 	streq	r0, [r0], #-6
     c8c:	5001f300 	andpl	pc, r1, r0, lsl #6
     c90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c94:	00000000 	andeq	r0, r0, r0
     c98:	00000100 	andeq	r0, r0, r0, lsl #2
     c9c:	00030000 	andeq	r0, r3, r0
     ca0:	00056200 	andeq	r6, r5, r0, lsl #4
     ca4:	00058000 	andeq	r8, r5, r0
     ca8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     cac:	00000590 	muleq	r0, r0, r5
     cb0:	000005c2 	andeq	r0, r0, r2, asr #11
     cb4:	c6550001 	ldrbgt	r0, [r5], -r1
     cb8:	18000005 	stmdane	r0, {r0, r2}
     cbc:	01000006 	tsteq	r0, r6
     cc0:	06205500 	strteq	r5, [r0], -r0, lsl #10
     cc4:	06460000 	strbeq	r0, [r6], -r0
     cc8:	00010000 	andeq	r0, r1, r0
     ccc:	00000055 	andeq	r0, r0, r5, asr r0
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	48000100 	stmdami	r0, {r8}
     cd8:	52000005 	andpl	r0, r0, #5
     cdc:	0b000005 	bleq	cf8 <_Min_Stack_Size+0x8f8>
     ce0:	0a007300 	beq	1d8e8 <_Min_Stack_Size+0x1d4e8>
     ce4:	401a0800 	andsmi	r0, sl, r0, lsl #16
     ce8:	9f2e3024 	svcls	0x002e3024
	...
     d00:	00000300 	andeq	r0, r0, r0, lsl #6
     d04:	00000568 	andeq	r0, r0, r8, ror #10
     d08:	00000580 	andeq	r0, r0, r0, lsl #11
     d0c:	90530001 	subsls	r0, r3, r1
     d10:	a3000005 	movwge	r0, #5
     d14:	01000005 	tsteq	r0, r5
     d18:	05c65300 	strbeq	r5, [r6, #768]	; 0x300
     d1c:	05d00000 	ldrbeq	r0, [r0]
     d20:	00010000 	andeq	r0, r1, r0
     d24:	0005d053 	andeq	sp, r5, r3, asr r0
     d28:	0005e300 	andeq	lr, r5, r0, lsl #6
     d2c:	03000b00 	movweq	r0, #2816	; 0xb00
     d30:	2000002e 	andcs	r0, r0, lr, lsr #32
     d34:	7f080194 	svcvc	0x00080194
     d38:	05e69f1a 	strbeq	r9, [r6, #3866]!	; 0xf1a
     d3c:	05f90000 	ldrbeq	r0, [r9, #0]!
     d40:	00010000 	andeq	r0, r1, r0
     d44:	0005f953 	andeq	pc, r5, r3, asr r9	; <UNPREDICTABLE>
     d48:	00061000 	andeq	r1, r6, r0
     d4c:	51000100 	mrspl	r0, (UNDEF: 16)
     d50:	00000610 	andeq	r0, r0, r0, lsl r6
     d54:	00000618 	andeq	r0, r0, r8, lsl r6
     d58:	20530001 	subscs	r0, r3, r1
     d5c:	29000006 	stmdbcs	r0, {r1, r2}
     d60:	01000006 	tsteq	r0, r6
     d64:	00005300 	andeq	r5, r0, r0, lsl #6
     d68:	00000000 	andeq	r0, r0, r0
     d6c:	00010000 	andeq	r0, r1, r0
     d70:	0000057c 	andeq	r0, r0, ip, ror r5
     d74:	00000580 	andeq	r0, r0, r0, lsl #11
     d78:	9f320002 	svcls	0x00320002
	...
     d84:	057c0001 	ldrbeq	r0, [ip, #-1]!
     d88:	05800000 	streq	r0, [r0]
     d8c:	00060000 	andeq	r0, r6, r0
     d90:	0017cc03 	andseq	ip, r7, r3, lsl #24
     d94:	00009f08 	andeq	r9, r0, r8, lsl #30
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00010000 	andeq	r0, r1, r0
     da0:	0000057c 	andeq	r0, r0, ip, ror r5
     da4:	00000580 	andeq	r0, r0, r0, lsl #11
     da8:	9f300002 	svcls	0x00300002
	...
     db4:	05b40001 	ldreq	r0, [r4, #1]!
     db8:	05c10000 	strbeq	r0, [r1]
     dbc:	00020000 	andeq	r0, r2, r0
     dc0:	00006a91 	muleq	r0, r1, sl
     dc4:	00000000 	andeq	r0, r0, r0
     dc8:	00010000 	andeq	r0, r1, r0
     dcc:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
     dd0:	000005c1 	andeq	r0, r0, r1, asr #11
     dd4:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
     de0:	05c60001 	strbeq	r0, [r6, #1]
     de4:	05ce0000 	strbeq	r0, [lr]
     de8:	00020000 	andeq	r0, r2, r0
     dec:	00009f31 	andeq	r9, r0, r1, lsr pc
     df0:	00000000 	andeq	r0, r0, r0
     df4:	00010000 	andeq	r0, r1, r0
     df8:	000005c6 	andeq	r0, r0, r6, asr #11
     dfc:	000005ce 	andeq	r0, r0, lr, asr #11
     e00:	38030006 	stmdacc	r3, {r1, r2}
     e04:	9f200000 	svcls	0x00200000
	...
     e10:	05c60001 	strbeq	r0, [r6, #1]
     e14:	05ce0000 	strbeq	r0, [lr]
     e18:	00020000 	andeq	r0, r2, r0
     e1c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     e28:	000005f6 	strdeq	r0, [r0], -r6
     e2c:	0000060a 	andeq	r0, r0, sl, lsl #12
     e30:	00540001 	subseq	r0, r4, r1
     e34:	00000000 	andeq	r0, r0, r0
     e38:	01000000 	mrseq	r0, (UNDEF: 0)
     e3c:	0005f600 	andeq	pc, r5, r0, lsl #12
     e40:	00061000 	andeq	r1, r6, r0
     e44:	30000200 	andcc	r0, r0, r0, lsl #4
     e48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e4c:	00000000 	andeq	r0, r0, r0
     e50:	56000200 	strpl	r0, [r0], -r0, lsl #4
     e54:	60000005 	andvs	r0, r0, r5
     e58:	02000005 	andeq	r0, r0, #5
     e5c:	009f3000 	addseq	r3, pc, r0
     e60:	00000000 	andeq	r0, r0, r0
     e64:	02000000 	andeq	r0, r0, #0
     e68:	00055600 	andeq	r5, r5, r0, lsl #12
     e6c:	00056000 	andeq	r6, r5, r0
     e70:	03000600 	movweq	r0, #1536	; 0x600
     e74:	2000002e 	andcs	r0, r0, lr, lsr #32
     e78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	18000500 	stmdane	r0, {r8, sl}
     e84:	20000006 	andcs	r0, r0, r6
     e88:	02000006 	andeq	r0, r0, #6
     e8c:	009f3000 	addseq	r3, pc, r0
     e90:	00000000 	andeq	r0, r0, r0
     e94:	01000000 	mrseq	r0, (UNDEF: 0)
     e98:	00061803 	andeq	r1, r6, r3, lsl #16
     e9c:	00061800 	andeq	r1, r6, r0, lsl #16
     ea0:	30000200 	andcc	r0, r0, r0, lsl #4
     ea4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ea8:	00000000 	andeq	r0, r0, r0
     eac:	0004a800 	andeq	sl, r4, r0, lsl #16
     eb0:	0004aa00 	andeq	sl, r4, r0, lsl #20
     eb4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     eb8:	0004aa00 	andeq	sl, r4, r0, lsl #20
     ebc:	0004dc00 	andeq	sp, r4, r0, lsl #24
     ec0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     ec4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     ed0:	0004a800 	andeq	sl, r4, r0, lsl #16
     ed4:	0004be00 	andeq	fp, r4, r0, lsl #28
     ed8:	50000100 	andpl	r0, r0, r0, lsl #2
     edc:	000004be 			; <UNDEFINED> instruction: 0x000004be
     ee0:	000004dc 	ldrdeq	r0, [r0], -ip
     ee4:	01f30004 	mvnseq	r0, r4
     ee8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     ef4:	04b20000 	ldrteq	r0, [r2], #0
     ef8:	04bc0000 	ldrteq	r0, [ip], #0
     efc:	00010000 	andeq	r0, r1, r0
     f00:	0004bc57 	andeq	fp, r4, r7, asr ip
     f04:	0004d600 	andeq	sp, r4, r0, lsl #12
     f08:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     f14:	04bc0002 	ldrteq	r0, [ip], #2
     f18:	04c40000 	strbeq	r0, [r4], #0
     f1c:	00010000 	andeq	r0, r1, r0
     f20:	00000056 	andeq	r0, r0, r6, asr r0
     f24:	00000000 	andeq	r0, r0, r0
     f28:	bc000200 	sfmlt	f0, 4, [r0], {-0}
     f2c:	c4000004 	strgt	r0, [r0], #-4
     f30:	01000004 	tsteq	r0, r4
     f34:	00005100 	andeq	r5, r0, r0, lsl #2
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	00020000 	andeq	r0, r2, r0
     f40:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
     f44:	000004c4 	andeq	r0, r0, r4, asr #9
     f48:	9f300002 	svcls	0x00300002
	...
     f54:	00000002 	andeq	r0, r0, r2
     f58:	0000003a 	andeq	r0, r0, sl, lsr r0
     f5c:	0000003e 	andeq	r0, r0, lr, lsr r0
     f60:	9f300002 	svcls	0x00300002
     f64:	0000003e 	andeq	r0, r0, lr, lsr r0
     f68:	00000040 	andeq	r0, r0, r0, asr #32
     f6c:	73380005 	teqvc	r8, #5
     f70:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
     f80:	00005000 	andeq	r5, r0, r0
     f84:	00005200 	andeq	r5, r0, r0, lsl #4
     f88:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     f8c:	000186a0 	andeq	r8, r1, r0, lsr #13
     f90:	9f1c0073 	svcls	0x001c0073
     f94:	00000052 	andeq	r0, r0, r2, asr r0
     f98:	00000054 	andeq	r0, r0, r4, asr r0
     f9c:	a10c0009 	tstge	ip, r9
     fa0:	73000186 	movwvc	r0, #390	; 0x186
     fa4:	549f1c00 	ldrpl	r1, [pc], #3072	; fac <_Min_Stack_Size+0xbac>
     fa8:	6c000000 	stcvs	0, cr0, [r0], {-0}
     fac:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     fb0:	86a00c00 	strthi	r0, [r0], r0, lsl #24
     fb4:	00730001 	rsbseq	r0, r3, r1
     fb8:	00009f1c 	andeq	r9, r0, ip, lsl pc
     fbc:	00000000 	andeq	r0, r0, r0
     fc0:	00010000 	andeq	r0, r1, r0
     fc4:	00000070 	andeq	r0, r0, r0, ror r0
     fc8:	00000078 	andeq	r0, r0, r8, ror r0
     fcc:	9f440002 	svcls	0x00440002
	...
     fdc:	0000000e 	andeq	r0, r0, lr
     fe0:	00000010 	andeq	r0, r0, r0, lsl r0
     fe4:	10500001 	subsne	r0, r0, r1
     fe8:	12000000 	andne	r0, r0, #0
     fec:	04000000 	streq	r0, [r0], #-0
     ff0:	5001f300 	andpl	pc, r1, r0, lsl #6
     ff4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1000:	00000a00 	andeq	r0, r0, r0, lsl #20
    1004:	00000c00 	andeq	r0, r0, r0, lsl #24
    1008:	50000100 	andpl	r0, r0, r0, lsl #2
    100c:	0000000c 	andeq	r0, r0, ip
    1010:	0000000e 	andeq	r0, r0, lr
    1014:	01f30004 	mvnseq	r0, r4
    1018:	00009f50 	andeq	r9, r0, r0, asr pc
    101c:	00000000 	andeq	r0, r0, r0
    1020:	048c0000 	streq	r0, [ip], #0
    1024:	048e0000 	streq	r0, [lr], #0
    1028:	00020000 	andeq	r0, r2, r0
    102c:	048e007d 	streq	r0, [lr], #125	; 0x7d
    1030:	049a0000 	ldreq	r0, [sl], #0
    1034:	00020000 	andeq	r0, r2, r0
    1038:	049a087d 	ldreq	r0, [sl], #2173	; 0x87d
    103c:	049e0000 	ldreq	r0, [lr], #0
    1040:	00020000 	andeq	r0, r2, r0
    1044:	0000007d 	andeq	r0, r0, sp, ror r0
    1048:	00000000 	andeq	r0, r0, r0
    104c:	03700000 	cmneq	r0, #0
    1050:	03720000 	cmneq	r2, #0
    1054:	00020000 	andeq	r0, r2, r0
    1058:	0372007d 	cmneq	r2, #125	; 0x7d
    105c:	04700000 	ldrbteq	r0, [r0], #-0
    1060:	00020000 	andeq	r0, r2, r0
    1064:	0470087d 	ldrbteq	r0, [r0], #-2173	; 0xfffff783
    1068:	048c0000 	streq	r0, [ip], #0
    106c:	00020000 	andeq	r0, r2, r0
    1070:	0000007d 	andeq	r0, r0, sp, ror r0
    1074:	00000000 	andeq	r0, r0, r0
    1078:	01000000 	mrseq	r0, (UNDEF: 0)
    107c:	00000001 	andeq	r0, r0, r1
    1080:	03860000 	orreq	r0, r6, #0
    1084:	03860000 	orreq	r0, r6, #0
    1088:	00010000 	andeq	r0, r1, r0
    108c:	00038652 	andeq	r8, r3, r2, asr r6
    1090:	00038a00 	andeq	r8, r3, r0, lsl #20
    1094:	72000600 	andvc	r0, r0, #0, 12
    1098:	1afc0900 	bne	fff034a0 <BootRAM+0xee73c41>
    109c:	00038a9f 	muleq	r3, pc, sl	; <UNPREDICTABLE>
    10a0:	00039a00 	andeq	r9, r3, r0, lsl #20
    10a4:	52000100 	andpl	r0, r0, #0, 2
    10a8:	0000039a 	muleq	r0, sl, r3
    10ac:	000003a2 	andeq	r0, r0, r2, lsr #7
    10b0:	080c0005 	stmdaeq	ip, {r0, r2}
    10b4:	00400204 	subeq	r0, r0, r4, lsl #4
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	02000000 	andeq	r0, r0, #0
    10c0:	00000000 	andeq	r0, r0, r0
    10c4:	0003a200 	andeq	sl, r3, r0, lsl #4
    10c8:	0003a600 	andeq	sl, r3, r0, lsl #12
    10cc:	30000200 	andcc	r0, r0, r0, lsl #4
    10d0:	0003a69f 	muleq	r3, pc, r6	; <UNPREDICTABLE>
    10d4:	0003ac00 	andeq	sl, r3, r0, lsl #24
    10d8:	0a000700 	beq	2ce0 <_Min_Stack_Size+0x28e0>
    10dc:	00720fff 	ldrshteq	r0, [r2], #-255	; 0xffffff01
    10e0:	03ac9f1c 			; <UNDEFINED> instruction: 0x03ac9f1c
    10e4:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
    10e8:	00070000 	andeq	r0, r7, r0
    10ec:	7210000a 	andsvc	r0, r0, #10
    10f0:	009f1c00 	addseq	r1, pc, r0, lsl #24
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	01000000 	mrseq	r0, (UNDEF: 0)
    10fc:	00041200 	andeq	r1, r4, r0, lsl #4
    1100:	00041600 	andeq	r1, r4, r0, lsl #12
    1104:	42000200 	andmi	r0, r0, #0, 4
    1108:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    110c:	00000000 	andeq	r0, r0, r0
    1110:	02020000 	andeq	r0, r2, #0
    1114:	00000000 	andeq	r0, r0, r0
    1118:	00040000 	andeq	r0, r4, r0
    111c:	00040000 	andeq	r0, r4, r0
    1120:	52000100 	andpl	r0, r0, #0, 2
    1124:	00000400 	andeq	r0, r0, r0, lsl #8
    1128:	00000404 	andeq	r0, r0, r4, lsl #8
    112c:	0072000e 	rsbseq	r0, r2, lr
    1130:	ffffff11 			; <UNDEFINED> instruction: 0xffffff11
    1134:	481a7f87 	ldmdami	sl, {r0, r1, r2, r7, r8, r9, sl, fp, ip, sp, lr}
    1138:	9f212445 	svcls	0x00212445
    113c:	00000408 	andeq	r0, r0, r8, lsl #8
    1140:	0000040c 	andeq	r0, r0, ip, lsl #8
    1144:	0c520001 	mrrceq	0, 0, r0, r2, cr1
    1148:	12000004 	andne	r0, r0, #4
    114c:	02000004 	andeq	r0, r0, #4
    1150:	00087300 	andeq	r7, r8, r0, lsl #6
    1154:	00000000 	andeq	r0, r0, r0
    1158:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    115c:	40000003 	andmi	r0, r0, r3
    1160:	02000003 	andeq	r0, r0, #3
    1164:	40007d00 	andmi	r7, r0, r0, lsl #26
    1168:	70000003 	andvc	r0, r0, r3
    116c:	02000003 	andeq	r0, r0, #3
    1170:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    117c:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1180:	49000003 	stmdbmi	r0, {r0, r1}
    1184:	01000003 	tsteq	r0, r3
    1188:	03495000 	movteq	r5, #36864	; 0x9000
    118c:	03700000 	cmneq	r0, #0
    1190:	00010000 	andeq	r0, r1, r0
    1194:	00000054 	andeq	r0, r0, r4, asr r0
	...
    11a0:	00033e00 	andeq	r3, r3, r0, lsl #28
    11a4:	00034900 	andeq	r4, r3, r0, lsl #18
    11a8:	51000100 	mrspl	r0, (UNDEF: 16)
    11ac:	00000349 	andeq	r0, r0, r9, asr #6
    11b0:	00000370 	andeq	r0, r0, r0, ror r3
    11b4:	01f30004 	mvnseq	r0, r4
    11b8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    11c4:	033e0000 	teqeq	lr, #0
    11c8:	03490000 	movteq	r0, #36864	; 0x9000
    11cc:	00010000 	andeq	r0, r1, r0
    11d0:	00034952 	andeq	r4, r3, r2, asr r9
    11d4:	00037000 	andeq	r7, r3, r0
    11d8:	f3000400 	vshl.u8	d0, d0, d0
    11dc:	009f5201 	addseq	r5, pc, r1, lsl #4
    11e0:	00000000 	andeq	r0, r0, r0
    11e4:	10000000 	andne	r0, r0, r0
    11e8:	12000003 	andne	r0, r0, #3
    11ec:	02000003 	andeq	r0, r0, #3
    11f0:	12007d00 	andne	r7, r0, #0, 26
    11f4:	3e000003 	cdpcc	0, 0, cr0, cr0, cr3, {0}
    11f8:	02000003 	andeq	r0, r0, #3
    11fc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    1208:	10000000 	andne	r0, r0, r0
    120c:	1b000003 	blne	1220 <_Min_Stack_Size+0xe20>
    1210:	01000003 	tsteq	r0, r3
    1214:	031b5000 	tsteq	fp, #0
    1218:	033e0000 	teqeq	lr, #0
    121c:	00010000 	andeq	r0, r1, r0
    1220:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1230:	00031000 	andeq	r1, r3, r0
    1234:	00031e00 	andeq	r1, r3, r0, lsl #28
    1238:	51000100 	mrspl	r0, (UNDEF: 16)
    123c:	0000031e 	andeq	r0, r0, lr, lsl r3
    1240:	00000322 	andeq	r0, r0, r2, lsr #6
    1244:	22550001 	subscs	r0, r5, #1
    1248:	27000003 	strcs	r0, [r0, -r3]
    124c:	01000003 	tsteq	r0, r3
    1250:	03275100 			; <UNDEFINED> instruction: 0x03275100
    1254:	033e0000 	teqeq	lr, #0
    1258:	00010000 	andeq	r0, r1, r0
    125c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    126c:	00031000 	andeq	r1, r3, r0
    1270:	00031e00 	andeq	r1, r3, r0, lsl #28
    1274:	52000100 	andpl	r0, r0, #0, 2
    1278:	0000031e 	andeq	r0, r0, lr, lsl r3
    127c:	00000322 	andeq	r0, r0, r2, lsr #6
    1280:	22560001 	subscs	r0, r6, #1
    1284:	27000003 	strcs	r0, [r0, -r3]
    1288:	01000003 	tsteq	r0, r3
    128c:	03275200 			; <UNDEFINED> instruction: 0x03275200
    1290:	033e0000 	teqeq	lr, #0
    1294:	00010000 	andeq	r0, r1, r0
    1298:	00000056 	andeq	r0, r0, r6, asr r0
	...
    12a8:	00027400 	andeq	r7, r2, r0, lsl #8
    12ac:	00029c00 	andeq	r9, r2, r0, lsl #24
    12b0:	50000100 	andpl	r0, r0, r0, lsl #2
    12b4:	0000029c 	muleq	r0, ip, r2
    12b8:	000002a0 	andeq	r0, r0, r0, lsr #5
    12bc:	01f30004 	mvnseq	r0, r4
    12c0:	02a09f50 	adceq	r9, r0, #80, 30	; 0x140
    12c4:	02b40000 	adcseq	r0, r4, #0
    12c8:	00010000 	andeq	r0, r1, r0
    12cc:	0002b450 	andeq	fp, r2, r0, asr r4
    12d0:	00031000 	andeq	r1, r3, r0
    12d4:	f3000400 	vshl.u8	d0, d0, d0
    12d8:	009f5001 	addseq	r5, pc, r1
    12dc:	00000000 	andeq	r0, r0, r0
    12e0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    12e4:	80000000 	andhi	r0, r0, r0
    12e8:	02000000 	andeq	r0, r0, #0
    12ec:	80007d00 	andhi	r7, r0, r0, lsl #26
    12f0:	fc000000 	stc2	0, cr0, [r0], {-0}
    12f4:	02000000 	andeq	r0, r0, #0
    12f8:	00087d00 	andeq	r7, r8, r0, lsl #26
    12fc:	00000000 	andeq	r0, r0, r0
    1300:	04000000 	streq	r0, [r0], #-0
    1304:	0000aa00 	andeq	sl, r0, r0, lsl #20
    1308:	0000b800 	andeq	fp, r0, r0, lsl #16
    130c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    1318:	02010100 	andeq	r0, r1, #0, 2
    131c:	00ae0002 	adceq	r0, lr, r2
    1320:	00ae0000 	adceq	r0, lr, r0
    1324:	00070000 	andeq	r0, r7, r0
    1328:	ff0a0070 			; <UNDEFINED> instruction: 0xff0a0070
    132c:	ae9f1aff 			; <UNDEFINED> instruction: 0xae9f1aff
    1330:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    1334:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1338:	0a007400 	beq	1e340 <_Min_Stack_Size+0x1df40>
    133c:	701affff 			; <UNDEFINED> instruction: 0x701affff
    1340:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    1344:	ae9f1c1a 	mrcge	12, 4, r1, cr15, cr10, {0}
    1348:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    134c:	10000000 	andne	r0, r0, r0
    1350:	0a007400 	beq	1e358 <_Min_Stack_Size+0x1df58>
    1354:	701affff 			; <UNDEFINED> instruction: 0x701affff
    1358:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    135c:	24331c1a 	ldrtcs	r1, [r3], #-3098	; 0xfffff3e6
    1360:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    136c:	00006400 	andeq	r6, r0, r0, lsl #8
    1370:	00006e00 	andeq	r6, r0, r0, lsl #28
    1374:	50000100 	andpl	r0, r0, r0, lsl #2
    1378:	0000006e 	andeq	r0, r0, lr, rrx
    137c:	0000007c 	andeq	r0, r0, ip, ror r0
    1380:	01f30004 	mvnseq	r0, r4
    1384:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1390:	004c0000 	subeq	r0, ip, r0
    1394:	00580000 	subseq	r0, r8, r0
    1398:	00010000 	andeq	r0, r1, r0
    139c:	00005850 	andeq	r5, r0, r0, asr r8
    13a0:	00006400 	andeq	r6, r0, r0, lsl #8
    13a4:	f3000400 	vshl.u8	d0, d0, d0
    13a8:	009f5001 	addseq	r5, pc, r1
	...
    13b4:	06000000 	streq	r0, [r0], -r0
    13b8:	02000000 	andeq	r0, r0, #0
    13bc:	06007d00 	streq	r7, [r0], -r0, lsl #26
    13c0:	4c000000 	stcmi	0, cr0, [r0], {-0}
    13c4:	02000000 	andeq	r0, r0, #0
    13c8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    13d8:	04000000 	streq	r0, [r0], #-0
    13dc:	01000000 	mrseq	r0, (UNDEF: 0)
    13e0:	00045000 	andeq	r5, r4, r0
    13e4:	004c0000 	subeq	r0, ip, r0
    13e8:	00040000 	andeq	r0, r4, r0
    13ec:	9f5001f3 	svcls	0x005001f3
	...
    13f8:	00140001 	andseq	r0, r4, r1
    13fc:	003c0000 	eorseq	r0, ip, r0
    1400:	00060000 	andeq	r0, r6, r0
    1404:	00029e03 	andeq	r9, r2, r3, lsl #28
    1408:	00009f20 	andeq	r9, r0, r0, lsr #30
	...
    1414:	00000014 	andeq	r0, r0, r4, lsl r0
    1418:	0000002e 	andeq	r0, r0, lr, lsr #32
    141c:	0072000a 	rsbseq	r0, r2, sl
    1420:	231aff08 	tstcs	sl, #8, 30	; <UNPREDICTABLE>
    1424:	9f243101 	svcls	0x00243101
	...
    1430:	02000002 	andeq	r0, r0, #2
    1434:	00000002 	andeq	r0, r0, r2
    1438:	00040000 	andeq	r0, r4, r0
    143c:	00010000 	andeq	r0, r1, r0
    1440:	00000450 	andeq	r0, r0, r0, asr r4
    1444:	00001400 	andeq	r1, r0, r0, lsl #8
    1448:	f3000400 	vshl.u8	d0, d0, d0
    144c:	149f5001 	ldrne	r5, [pc], #1	; 1454 <_Min_Stack_Size+0x1054>
    1450:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    1454:	01000000 	mrseq	r0, (UNDEF: 0)
    1458:	00005000 	andeq	r5, r0, r0
    145c:	00000000 	andeq	r0, r0, r0
    1460:	01000000 	mrseq	r0, (UNDEF: 0)
    1464:	001c0001 	andseq	r0, ip, r1
    1468:	001c0000 	andseq	r0, ip, r0
    146c:	00010000 	andeq	r0, r1, r0
    1470:	00001c54 	andeq	r1, r0, r4, asr ip
    1474:	00003800 	andeq	r3, r0, r0, lsl #16
    1478:	70000800 	andvc	r0, r0, r0, lsl #16
    147c:	74243100 	strtvc	r3, [r4], #-256	; 0xffffff00
    1480:	009f2200 	addseq	r2, pc, r0, lsl #4
    1484:	00000000 	andeq	r0, r0, r0
    1488:	60000000 	andvs	r0, r0, r0
    148c:	62000001 	andvs	r0, r0, #1
    1490:	02000001 	andeq	r0, r0, #1
    1494:	62007d00 	andvs	r7, r0, #0, 26
    1498:	a8000001 	stmdage	r0, {r0}
    149c:	02000001 	andeq	r0, r0, #1
    14a0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    14b0:	60000000 	andvs	r0, r0, r0
    14b4:	7a000001 	bvc	14c0 <_Min_Stack_Size+0x10c0>
    14b8:	01000001 	tsteq	r0, r1
    14bc:	017a5000 	cmneq	sl, r0
    14c0:	01820000 	orreq	r0, r2, r0
    14c4:	00040000 	andeq	r0, r4, r0
    14c8:	9f5001f3 	svcls	0x005001f3
    14cc:	00000182 	andeq	r0, r0, r2, lsl #3
    14d0:	00000188 	andeq	r0, r0, r8, lsl #3
    14d4:	88500001 	ldmdahi	r0, {r0}^
    14d8:	a8000001 	stmdage	r0, {r0}
    14dc:	04000001 	streq	r0, [r0], #-1
    14e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    14e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    14e8:	00000000 	andeq	r0, r0, r0
    14ec:	86000000 	strhi	r0, [r0], -r0
    14f0:	9c000001 	stcls	0, cr0, [r0], {1}
    14f4:	01000001 	tsteq	r0, r1
    14f8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    1504:	00000186 	andeq	r0, r0, r6, lsl #3
    1508:	0000019c 	muleq	r0, ip, r1
    150c:	00510001 	subseq	r0, r1, r1
	...
    1518:	86000000 	strhi	r0, [r0], -r0
    151c:	88000001 	stmdahi	r0, {r0}
    1520:	01000001 	tsteq	r0, r1
    1524:	01885000 	orreq	r5, r8, r0
    1528:	019c0000 	orrseq	r0, ip, r0
    152c:	00040000 	andeq	r0, r4, r0
    1530:	9f5001f3 	svcls	0x005001f3
	...
    153c:	000001a8 	andeq	r0, r0, r8, lsr #3
    1540:	000001aa 	andeq	r0, r0, sl, lsr #3
    1544:	007d0002 	rsbseq	r0, sp, r2
    1548:	000001aa 	andeq	r0, r0, sl, lsr #3
    154c:	0000020c 	andeq	r0, r0, ip, lsl #4
    1550:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1564:	000001a8 	andeq	r0, r0, r8, lsr #3
    1568:	000001c0 	andeq	r0, r0, r0, asr #3
    156c:	c0500001 	subsgt	r0, r0, r1
    1570:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    1574:	04000001 	streq	r0, [r0], #-1
    1578:	5001f300 	andpl	pc, r1, r0, lsl #6
    157c:	0001f89f 	muleq	r1, pc, r8	; <UNPREDICTABLE>
    1580:	0001fa00 	andeq	pc, r1, r0, lsl #20
    1584:	50000100 	andpl	r0, r0, r0, lsl #2
    1588:	000001fa 	strdeq	r0, [r0], -sl
    158c:	0000020c 	andeq	r0, r0, ip, lsl #4
    1590:	01f30004 	mvnseq	r0, r4
    1594:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    15a4:	000001a8 	andeq	r0, r0, r8, lsr #3
    15a8:	000001c2 	andeq	r0, r0, r2, asr #3
    15ac:	c2510001 	subsgt	r0, r1, #1
    15b0:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    15b4:	04000001 	streq	r0, [r0], #-1
    15b8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    15bc:	0001f89f 	muleq	r1, pc, r8	; <UNPREDICTABLE>
    15c0:	00020c00 	andeq	r0, r2, r0, lsl #24
    15c4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    15d4:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    15d8:	01c50000 	biceq	r0, r5, r0
    15dc:	00010000 	andeq	r0, r1, r0
    15e0:	0001c552 	andeq	ip, r1, r2, asr r5
    15e4:	0001f800 	andeq	pc, r1, r0, lsl #16
    15e8:	f3000400 	vshl.u8	d0, d0, d0
    15ec:	f89f5201 			; <UNDEFINED> instruction: 0xf89f5201
    15f0:	0c000001 	stceq	0, cr0, [r0], {1}
    15f4:	01000002 	tsteq	r0, r2
    15f8:	00005200 	andeq	r5, r0, r0, lsl #4
    15fc:	00000000 	andeq	r0, r0, r0
    1600:	00010000 	andeq	r0, r1, r0
    1604:	01bc0100 			; <UNDEFINED> instruction: 0x01bc0100
    1608:	01c00000 	biceq	r0, r0, r0
    160c:	00010000 	andeq	r0, r1, r0
    1610:	0001c050 	andeq	ip, r1, r0, asr r0
    1614:	0001f400 	andeq	pc, r1, r0, lsl #8
    1618:	f3000400 	vshl.u8	d0, d0, d0
    161c:	009f5001 	addseq	r5, pc, r1
    1620:	00000000 	andeq	r0, r0, r0
    1624:	01000000 	mrseq	r0, (UNDEF: 0)
    1628:	0001bc01 	andeq	fp, r1, r1, lsl #24
    162c:	0001f400 	andeq	pc, r1, r0, lsl #8
    1630:	f3000400 	vshl.u8	d0, d0, d0
    1634:	009f5101 	addseq	r5, pc, r1, lsl #2
    1638:	00000000 	andeq	r0, r0, r0
    163c:	01000000 	mrseq	r0, (UNDEF: 0)
    1640:	0001bc01 	andeq	fp, r1, r1, lsl #24
    1644:	0001f400 	andeq	pc, r1, r0, lsl #8
    1648:	32000200 	andcc	r0, r0, #0, 4
    164c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    165c:	0001ca00 	andeq	ip, r1, r0, lsl #20
    1660:	0001cc00 	andeq	ip, r1, r0, lsl #24
    1664:	53000100 	movwpl	r0, #256	; 0x100
    1668:	000001cc 	andeq	r0, r0, ip, asr #3
    166c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1670:	0073000d 	rsbseq	r0, r3, sp
    1674:	1aff000b 	bne	fffc16a8 <BootRAM+0xef31e49>
    1678:	ff080072 			; <UNDEFINED> instruction: 0xff080072
    167c:	da9f211a 	ble	fe7c9aec <BootRAM+0xd73a28d>
    1680:	dc000001 	stcle	0, cr0, [r0], {1}
    1684:	01000001 	tsteq	r0, r1
    1688:	01dc5300 	bicseq	r5, ip, r0, lsl #6
    168c:	01de0000 	bicseq	r0, lr, r0
    1690:	000d0000 	andeq	r0, sp, r0
    1694:	ff080073 			; <UNDEFINED> instruction: 0xff080073
    1698:	0b00721a 	bleq	1df08 <_Min_Stack_Size+0x1db08>
    169c:	211aff00 	tstcs	sl, r0, lsl #30	; <UNPREDICTABLE>
    16a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    16a4:	00000000 	andeq	r0, r0, r0
    16a8:	bc000300 	stclt	3, cr0, [r0], {-0}
    16ac:	c6000001 	strgt	r0, [r0], -r1
    16b0:	02000001 	andeq	r0, r0, #1
    16b4:	009f3000 	addseq	r3, pc, r0
    16b8:	00000000 	andeq	r0, r0, r0
    16bc:	03000000 	movweq	r0, #0
    16c0:	0001bc00 	andeq	fp, r1, r0, lsl #24
    16c4:	0001c600 	andeq	ip, r1, r0, lsl #12
    16c8:	03000600 	movweq	r0, #1536	; 0x600
    16cc:	2000029c 	mulcs	r0, ip, r2
    16d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    16d4:	00000000 	andeq	r0, r0, r0
    16d8:	0003b000 	andeq	fp, r3, r0
    16dc:	0003b200 	andeq	fp, r3, r0, lsl #4
    16e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    16e4:	0003b200 	andeq	fp, r3, r0, lsl #4
    16e8:	00045000 	andeq	r5, r4, r0
    16ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    16f0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    16fc:	b0000000 	andlt	r0, r0, r0
    1700:	d2000003 	andle	r0, r0, #3
    1704:	01000003 	tsteq	r0, r3
    1708:	03d25000 	bicseq	r5, r2, #0
    170c:	03d60000 	bicseq	r0, r6, #0
    1710:	00030000 	andeq	r0, r3, r0
    1714:	d69f0174 			; <UNDEFINED> instruction: 0xd69f0174
    1718:	50000003 	andpl	r0, r0, r3
    171c:	04000004 	streq	r0, [r0], #-4
    1720:	5001f300 	andpl	pc, r1, r0, lsl #6
    1724:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1730:	b0000000 	andlt	r0, r0, r0
    1734:	fc000003 	stc2	0, cr0, [r0], {3}
    1738:	01000003 	tsteq	r0, r3
    173c:	03fc5100 	mvnseq	r5, #0, 2
    1740:	04120000 	ldreq	r0, [r2], #-0
    1744:	00040000 	andeq	r0, r4, r0
    1748:	9f5101f3 	svcls	0x005101f3
    174c:	00000412 	andeq	r0, r0, r2, lsl r4
    1750:	00000450 	andeq	r0, r0, r0, asr r4
    1754:	00510001 	subseq	r0, r1, r1
    1758:	00000000 	andeq	r0, r0, r0
    175c:	02000000 	andeq	r0, r0, #0
    1760:	00000000 	andeq	r0, r0, r0
    1764:	0003b000 	andeq	fp, r3, r0
    1768:	0003c400 	andeq	ip, r3, r0, lsl #8
    176c:	30000200 	andcc	r0, r0, r0, lsl #4
    1770:	0003c49f 	muleq	r3, pc, r4	; <UNPREDICTABLE>
    1774:	00040200 	andeq	r0, r4, r0, lsl #4
    1778:	53000100 	movwpl	r0, #256	; 0x100
    177c:	00000412 	andeq	r0, r0, r2, lsl r4
    1780:	00000450 	andeq	r0, r0, r0, asr r4
    1784:	00530001 	subseq	r0, r3, r1
    1788:	00000000 	andeq	r0, r0, r0
    178c:	50000000 	andpl	r0, r0, r0
    1790:	52000004 	andpl	r0, r0, #4
    1794:	02000004 	andeq	r0, r0, #4
    1798:	52007d00 	andpl	r7, r0, #0, 26
    179c:	56000004 	strpl	r0, [r0], -r4
    17a0:	02000004 	andeq	r0, r0, #4
    17a4:	56147d00 	ldrpl	r7, [r4], -r0, lsl #26
    17a8:	24000004 	strcs	r0, [r0], #-4
    17ac:	03000005 	movweq	r0, #5
    17b0:	00d87d00 	sbcseq	r7, r8, r0, lsl #26
    17b4:	00000524 	andeq	r0, r0, r4, lsr #10
    17b8:	00000526 	andeq	r0, r0, r6, lsr #10
    17bc:	147d0002 	ldrbtne	r0, [sp], #-2
    17c0:	00000526 	andeq	r0, r0, r6, lsr #10
    17c4:	000005c4 	andeq	r0, r0, r4, asr #11
    17c8:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
    17dc:	00046600 	andeq	r6, r4, r0, lsl #12
    17e0:	00046a00 	andeq	r6, r4, r0, lsl #20
    17e4:	75000600 	strvc	r0, [r0, #-1536]	; 0xfffffa00
    17e8:	1aff0800 	bne	fffc37f0 <BootRAM+0xef33f91>
    17ec:	00046a9f 	muleq	r4, pc, sl	; <UNPREDICTABLE>
    17f0:	00047800 	andeq	r7, r4, r0, lsl #16
    17f4:	03001100 	movweq	r1, #256	; 0x100
    17f8:	2000004d 	andcs	r0, r0, sp, asr #32
    17fc:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    1800:	1c00721a 	sfmne	f7, 4, [r0], {26}
    1804:	9f1aff08 	svcls	0x001aff08
    1808:	00000478 	andeq	r0, r0, r8, ror r4
    180c:	00000498 	muleq	r0, r8, r4
    1810:	26550001 	ldrbcs	r0, [r5], -r1
    1814:	52000005 	andpl	r0, r0, #5
    1818:	01000005 	tsteq	r0, r5
    181c:	00005500 	andeq	r5, r0, r0, lsl #10
    1820:	00000000 	andeq	r0, r0, r0
    1824:	05030000 	streq	r0, [r3, #-0]
    1828:	0000045e 	andeq	r0, r0, lr, asr r4
    182c:	0000045e 	andeq	r0, r0, lr, asr r4
    1830:	4c030006 	stcmi	0, cr0, [r3], {6}
    1834:	9f200000 	svcls	0x00200000
	...
    1840:	048e0001 	streq	r0, [lr], #1
    1844:	04940000 	ldreq	r0, [r4], #0
    1848:	00010000 	andeq	r0, r1, r0
    184c:	00000055 	andeq	r0, r0, r5, asr r0
    1850:	00000000 	andeq	r0, r0, r0
    1854:	8e000100 	adfhis	f0, f0, f0
    1858:	94000004 	strls	r0, [r0], #-4
    185c:	01000004 	tsteq	r0, r4
    1860:	00005d00 	andeq	r5, r0, r0, lsl #26
    1864:	00000000 	andeq	r0, r0, r0
    1868:	00010000 	andeq	r0, r1, r0
    186c:	0000048e 	andeq	r0, r0, lr, lsl #9
    1870:	00000494 	muleq	r0, r4, r4
    1874:	81090003 	tsthi	r9, r3
    1878:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    187c:	00000000 	andeq	r0, r0, r0
    1880:	40000100 	andmi	r0, r0, r0, lsl #2
    1884:	48000005 	stmdami	r0, {r0, r2}
    1888:	01000005 	tsteq	r0, r5
    188c:	00005500 	andeq	r5, r0, r0, lsl #10
    1890:	00000000 	andeq	r0, r0, r0
    1894:	00010000 	andeq	r0, r1, r0
    1898:	00000540 	andeq	r0, r0, r0, asr #10
    189c:	00000548 	andeq	r0, r0, r8, asr #10
    18a0:	005d0001 	subseq	r0, sp, r1
    18a4:	00000000 	andeq	r0, r0, r0
    18a8:	01000000 	mrseq	r0, (UNDEF: 0)
    18ac:	00054000 	andeq	r4, r5, r0
    18b0:	00054800 	andeq	r4, r5, r0, lsl #16
    18b4:	09000300 	stmdbeq	r0, {r8, r9}
    18b8:	00009f82 	andeq	r9, r0, r2, lsl #31
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	00030000 	andeq	r0, r3, r0
    18c4:	04980000 	ldreq	r0, [r8], #0
    18c8:	05220000 	streq	r0, [r2, #-0]!
    18cc:	00020000 	andeq	r0, r2, r0
    18d0:	05529f31 	ldrbeq	r9, [r2, #-3889]	; 0xfffff0cf
    18d4:	05c40000 	strbeq	r0, [r4]
    18d8:	00020000 	andeq	r0, r2, r0
    18dc:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    18ec:	000004e8 	andeq	r0, r0, r8, ror #9
    18f0:	000004ec 	andeq	r0, r0, ip, ror #9
    18f4:	8c500001 	mrrchi	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    18f8:	90000005 	andls	r0, r0, r5
    18fc:	01000005 	tsteq	r0, r5
    1900:	05905000 	ldreq	r5, [r0]
    1904:	05930000 	ldreq	r0, [r3]
    1908:	00010000 	andeq	r0, r1, r0
    190c:	00000051 	andeq	r0, r0, r1, asr r0
    1910:	00000000 	andeq	r0, r0, r0
    1914:	00000100 	andeq	r0, r0, r0, lsl #2
    1918:	ac000000 	stcge	0, cr0, [r0], {-0}
    191c:	ae000004 	cdpge	0, 0, cr0, cr0, cr4, {0}
    1920:	03000004 	movweq	r0, #4
    1924:	9f489100 	svcls	0x00489100
    1928:	000004ae 	andeq	r0, r0, lr, lsr #9
    192c:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
    1930:	b3510001 	cmplt	r1, #1
    1934:	b4000004 	strlt	r0, [r0], #-4
    1938:	03000004 	movweq	r0, #4
    193c:	9f489100 	svcls	0x00489100
	...
    1948:	04ac0001 	strteq	r0, [ip], #1
    194c:	04b40000 	ldrteq	r0, [r4], #0
    1950:	00020000 	andeq	r0, r2, r0
    1954:	00009f32 	andeq	r9, r0, r2, lsr pc
    1958:	00000000 	andeq	r0, r0, r0
    195c:	03010000 	movweq	r0, #4096	; 0x1000
    1960:	000004ca 	andeq	r0, r0, sl, asr #9
    1964:	000004ca 	andeq	r0, r0, sl, asr #9
    1968:	4e030006 	cdpmi	0, 0, cr0, cr3, cr6, {0}
    196c:	9f200001 	svcls	0x00200001
	...
    1978:	00000001 	andeq	r0, r0, r1
    197c:	04de0000 	ldrbeq	r0, [lr], #0
    1980:	04e20000 	strbteq	r0, [r2], #0
    1984:	00030000 	andeq	r0, r3, r0
    1988:	e29f4891 	adds	r4, pc, #9502720	; 0x910000
    198c:	e7000004 	str	r0, [r0, -r4]
    1990:	01000004 	tsteq	r0, r4
    1994:	04e75100 	strbteq	r5, [r7], #256	; 0x100
    1998:	04e80000 	strbteq	r0, [r8], #0
    199c:	00030000 	andeq	r0, r3, r0
    19a0:	009f4891 	umullseq	r4, pc, r1, r8	; <UNPREDICTABLE>
    19a4:	00000000 	andeq	r0, r0, r0
    19a8:	01000000 	mrseq	r0, (UNDEF: 0)
    19ac:	0004de00 	andeq	sp, r4, r0, lsl #28
    19b0:	0004e000 	andeq	lr, r4, r0
    19b4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    19c0:	00000001 	andeq	r0, r0, r1
    19c4:	055e0000 	ldrbeq	r0, [lr, #-0]
    19c8:	05600000 	strbeq	r0, [r0, #-0]!
    19cc:	00030000 	andeq	r0, r3, r0
    19d0:	609f4891 	umullsvs	r4, pc, r1, r8	; <UNPREDICTABLE>
    19d4:	65000005 	strvs	r0, [r0, #-5]
    19d8:	01000005 	tsteq	r0, r5
    19dc:	05655100 	strbeq	r5, [r5, #-256]!	; 0xffffff00
    19e0:	05660000 	strbeq	r0, [r6, #-0]!
    19e4:	00030000 	andeq	r0, r3, r0
    19e8:	009f4891 	umullseq	r4, pc, r1, r8	; <UNPREDICTABLE>
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	01000000 	mrseq	r0, (UNDEF: 0)
    19f4:	00055e00 	andeq	r5, r5, r0, lsl #28
    19f8:	00056600 	andeq	r6, r5, r0, lsl #12
    19fc:	31000200 	mrscc	r0, R8_usr
    1a00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1a04:	00000000 	andeq	r0, r0, r0
    1a08:	00000100 	andeq	r0, r0, r0, lsl #2
    1a0c:	84000000 	strhi	r0, [r0], #-0
    1a10:	86000005 	strhi	r0, [r0], -r5
    1a14:	03000005 	movweq	r0, #5
    1a18:	9f489100 	svcls	0x00489100
    1a1c:	00000586 	andeq	r0, r0, r6, lsl #11
    1a20:	0000058b 	andeq	r0, r0, fp, lsl #11
    1a24:	8b510001 	blhi	1441a30 <_Min_Stack_Size+0x1441630>
    1a28:	8c000005 	stchi	0, cr0, [r0], {5}
    1a2c:	03000005 	movweq	r0, #5
    1a30:	9f489100 	svcls	0x00489100
	...
    1a3c:	05840001 	streq	r0, [r4, #1]
    1a40:	058c0000 	streq	r0, [ip]
    1a44:	00020000 	andeq	r0, r2, r0
    1a48:	00009f32 	andeq	r9, r0, r2, lsr pc
    1a4c:	00000000 	andeq	r0, r0, r0
    1a50:	02c00000 	sbceq	r0, r0, #0
    1a54:	02c20000 	sbceq	r0, r2, #0
    1a58:	00020000 	andeq	r0, r2, r0
    1a5c:	02c2007d 	sbceq	r0, r2, #125	; 0x7d
    1a60:	03b00000 	movseq	r0, #0
    1a64:	00020000 	andeq	r0, r2, r0
    1a68:	0000107d 	andeq	r1, r0, sp, ror r0
    1a6c:	00000000 	andeq	r0, r0, r0
    1a70:	01000000 	mrseq	r0, (UNDEF: 0)
    1a74:	00000001 	andeq	r0, r0, r1
    1a78:	02ce0000 	sbceq	r0, lr, #0
    1a7c:	02dc0000 	sbcseq	r0, ip, #0
    1a80:	00010000 	andeq	r0, r1, r0
    1a84:	0002dc52 	andeq	sp, r2, r2, asr ip
    1a88:	0002e200 	andeq	lr, r2, r0, lsl #4
    1a8c:	72000900 	andvc	r0, r0, #0, 18
    1a90:	ffff1100 			; <UNDEFINED> instruction: 0xffff1100
    1a94:	9f1a7ebf 	svcls	0x001a7ebf
    1a98:	000002e2 	andeq	r0, r0, r2, ror #5
    1a9c:	000002f4 	strdeq	r0, [r0], -r4
    1aa0:	f4520001 			; <UNDEFINED> instruction: 0xf4520001
    1aa4:	fe000002 	cdp2	0, 0, cr0, cr0, cr2, {0}
    1aa8:	02000002 	andeq	r0, r0, #2
    1aac:	00247300 	eoreq	r7, r4, r0, lsl #6
	...
    1ab8:	00000101 	andeq	r0, r0, r1, lsl #2
    1abc:	00000000 	andeq	r0, r0, r0
    1ac0:	0002f400 	andeq	pc, r2, r0, lsl #8
    1ac4:	00030000 	andeq	r0, r3, r0
    1ac8:	52000100 	andpl	r0, r0, #0, 2
    1acc:	00000300 	andeq	r0, r0, r0, lsl #6
    1ad0:	00000304 	andeq	r0, r0, r4, lsl #6
    1ad4:	00720008 	rsbseq	r0, r2, r8
    1ad8:	4fffff11 	svcmi	0x00ffff11
    1adc:	03049f1a 	movweq	r9, #20250	; 0x4f1a
    1ae0:	03140000 	tsteq	r4, #0
    1ae4:	00010000 	andeq	r0, r1, r0
    1ae8:	00031452 	andeq	r1, r3, r2, asr r4
    1aec:	00031600 	andeq	r1, r3, r0, lsl #12
    1af0:	73000200 	movwvc	r0, #512	; 0x200
    1af4:	00031624 	andeq	r1, r3, r4, lsr #12
    1af8:	00031c00 	andeq	r1, r3, r0, lsl #24
    1afc:	0c000500 	cfstr32eq	mvfx0, [r0], {-0}
    1b00:	40020024 	andmi	r0, r2, r4, lsr #32
	...
    1b0c:	02c00003 	sbceq	r0, r0, #3
    1b10:	02cc0000 	sbceq	r0, ip, #0
    1b14:	00030000 	andeq	r0, r3, r0
    1b18:	009f2508 	addseq	r2, pc, r8, lsl #10
    1b1c:	00000000 	andeq	r0, r0, r0
    1b20:	01000000 	mrseq	r0, (UNDEF: 0)
    1b24:	00033c00 	andeq	r3, r3, r0, lsl #24
    1b28:	00033e00 	andeq	r3, r3, r0, lsl #28
    1b2c:	08000300 	stmdaeq	r0, {r8, r9}
    1b30:	00009f25 	andeq	r9, r0, r5, lsr #30
    1b34:	00000000 	andeq	r0, r0, r0
    1b38:	02240000 	eoreq	r0, r4, #0
    1b3c:	02260000 	eoreq	r0, r6, #0
    1b40:	00020000 	andeq	r0, r2, r0
    1b44:	0226007d 	eoreq	r0, r6, #125	; 0x7d
    1b48:	022a0000 	eoreq	r0, sl, #0
    1b4c:	00020000 	andeq	r0, r2, r0
    1b50:	022a0c7d 	eoreq	r0, sl, #32000	; 0x7d00
    1b54:	023e0000 	eorseq	r0, lr, #0
    1b58:	00030000 	andeq	r0, r3, r0
    1b5c:	3e00f87d 	mcrcc	8, 0, pc, cr0, cr13, {3}	; <UNPREDICTABLE>
    1b60:	40000002 	andmi	r0, r0, r2
    1b64:	02000002 	andeq	r0, r0, #2
    1b68:	400c7d00 	andmi	r7, ip, r0, lsl #26
    1b6c:	c0000002 	andgt	r0, r0, r2
    1b70:	03000002 	movweq	r0, #2
    1b74:	00f87d00 	rscseq	r7, r8, r0, lsl #26
	...
    1b94:	00000224 	andeq	r0, r0, r4, lsr #4
    1b98:	0000023a 	andeq	r0, r0, sl, lsr r2
    1b9c:	3a500001 	bcc	1401ba8 <_Min_Stack_Size+0x14017a8>
    1ba0:	40000002 	andmi	r0, r0, r2
    1ba4:	04000002 	streq	r0, [r0], #-2
    1ba8:	5001f300 	andpl	pc, r1, r0, lsl #6
    1bac:	0002409f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    1bb0:	00024a00 	andeq	r4, r2, r0, lsl #20
    1bb4:	50000100 	andpl	r0, r0, r0, lsl #2
    1bb8:	0000024a 	andeq	r0, r0, sl, asr #4
    1bbc:	00000260 	andeq	r0, r0, r0, ror #4
    1bc0:	01f30004 	mvnseq	r0, r4
    1bc4:	02609f50 	rsbeq	r9, r0, #80, 30	; 0x140
    1bc8:	02680000 	rsbeq	r0, r8, #0
    1bcc:	00010000 	andeq	r0, r1, r0
    1bd0:	00026850 	andeq	r6, r2, r0, asr r8
    1bd4:	0002a400 	andeq	sl, r2, r0, lsl #8
    1bd8:	f3000400 	vshl.u8	d0, d0, d0
    1bdc:	a49f5001 	ldrge	r5, [pc], #1	; 1be4 <_Min_Stack_Size+0x17e4>
    1be0:	a8000002 	stmdage	r0, {r1}
    1be4:	01000002 	tsteq	r0, r2
    1be8:	02a85000 	adceq	r5, r8, #0
    1bec:	02ae0000 	adceq	r0, lr, #0
    1bf0:	00040000 	andeq	r0, r4, r0
    1bf4:	9f5001f3 	svcls	0x005001f3
    1bf8:	000002ae 	andeq	r0, r0, lr, lsr #5
    1bfc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
    1c00:	b0500001 	subslt	r0, r0, r1
    1c04:	c0000002 	andgt	r0, r0, r2
    1c08:	04000002 	streq	r0, [r0], #-2
    1c0c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1c10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1c28:	24000000 	strcs	r0, [r0], #-0
    1c2c:	3a000002 	bcc	1c3c <_Min_Stack_Size+0x183c>
    1c30:	01000002 	tsteq	r0, r2
    1c34:	023a5100 	eorseq	r5, sl, #0, 2
    1c38:	02400000 	subeq	r0, r0, #0
    1c3c:	00040000 	andeq	r0, r4, r0
    1c40:	9f5101f3 	svcls	0x005101f3
    1c44:	00000240 	andeq	r0, r0, r0, asr #4
    1c48:	00000248 	andeq	r0, r0, r8, asr #4
    1c4c:	48510001 	ldmdami	r1, {r0}^
    1c50:	60000002 	andvs	r0, r0, r2
    1c54:	04000002 	streq	r0, [r0], #-2
    1c58:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1c5c:	0002609f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    1c60:	00026a00 	andeq	r6, r2, r0, lsl #20
    1c64:	51000100 	mrspl	r0, (UNDEF: 16)
    1c68:	0000026a 	andeq	r0, r0, sl, ror #4
    1c6c:	000002a4 	andeq	r0, r0, r4, lsr #5
    1c70:	01f30004 	mvnseq	r0, r4
    1c74:	02a49f51 	adceq	r9, r4, #324	; 0x144
    1c78:	02a60000 	adceq	r0, r6, #0
    1c7c:	00010000 	andeq	r0, r1, r0
    1c80:	0002a651 	andeq	sl, r2, r1, asr r6
    1c84:	0002ae00 	andeq	sl, r2, r0, lsl #28
    1c88:	f3000400 	vshl.u8	d0, d0, d0
    1c8c:	ae9f5101 	fmlgee	f5, f7, f1
    1c90:	c0000002 	andgt	r0, r0, r2
    1c94:	01000002 	tsteq	r0, r2
    1c98:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1cb4:	00000224 	andeq	r0, r0, r4, lsr #4
    1cb8:	0000023a 	andeq	r0, r0, sl, lsr r2
    1cbc:	3a520001 	bcc	1481cc8 <_Min_Stack_Size+0x14818c8>
    1cc0:	40000002 	andmi	r0, r0, r2
    1cc4:	04000002 	streq	r0, [r0], #-2
    1cc8:	5201f300 	andpl	pc, r1, #0, 6
    1ccc:	0002409f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    1cd0:	00024d00 	andeq	r4, r2, r0, lsl #26
    1cd4:	52000100 	andpl	r0, r0, #0, 2
    1cd8:	0000024d 	andeq	r0, r0, sp, asr #4
    1cdc:	00000260 	andeq	r0, r0, r0, ror #4
    1ce0:	01f30004 	mvnseq	r0, r4
    1ce4:	02609f52 	rsbeq	r9, r0, #328	; 0x148
    1ce8:	026d0000 	rsbeq	r0, sp, #0
    1cec:	00010000 	andeq	r0, r1, r0
    1cf0:	00026d52 	andeq	r6, r2, r2, asr sp
    1cf4:	0002a400 	andeq	sl, r2, r0, lsl #8
    1cf8:	f3000400 	vshl.u8	d0, d0, d0
    1cfc:	a49f5201 	ldrge	r5, [pc], #513	; 1d04 <_Min_Stack_Size+0x1904>
    1d00:	ab000002 	blge	1d10 <_Min_Stack_Size+0x1910>
    1d04:	01000002 	tsteq	r0, r2
    1d08:	02ab5200 	adceq	r5, fp, #0, 4
    1d0c:	02ae0000 	adceq	r0, lr, #0
    1d10:	00040000 	andeq	r0, r4, r0
    1d14:	9f5201f3 	svcls	0x005201f3
    1d18:	000002ae 	andeq	r0, r0, lr, lsr #5
    1d1c:	000002c0 	andeq	r0, r0, r0, asr #5
    1d20:	00520001 	subseq	r0, r2, r1
    1d24:	00000000 	andeq	r0, r0, r0
    1d28:	02000000 	andeq	r0, r0, #0
    1d2c:	00000000 	andeq	r0, r0, r0
    1d30:	0002a400 	andeq	sl, r2, r0, lsl #8
    1d34:	0002a600 	andeq	sl, r2, r0, lsl #12
    1d38:	91000400 	tstls	r0, r0, lsl #8
    1d3c:	a69f7f8c 	ldrge	r7, [pc], ip, lsl #31
    1d40:	ab000002 	blge	1d50 <_Min_Stack_Size+0x1950>
    1d44:	01000002 	tsteq	r0, r2
    1d48:	02ab5100 	adceq	r5, fp, #0, 2
    1d4c:	02ae0000 	adceq	r0, lr, #0
    1d50:	00040000 	andeq	r0, r4, r0
    1d54:	9f7f8c91 	svcls	0x007f8c91
	...
    1d60:	02a40002 	adceq	r0, r4, #2
    1d64:	02ae0000 	adceq	r0, lr, #0
    1d68:	00020000 	andeq	r0, r2, r0
    1d6c:	00009f30 	andeq	r9, r0, r0, lsr pc
    1d70:	00000000 	andeq	r0, r0, r0
    1d74:	00010000 	andeq	r0, r1, r0
    1d78:	00000246 	andeq	r0, r0, r6, asr #4
    1d7c:	0000024e 	andeq	r0, r0, lr, asr #4
    1d80:	0c030006 	stceq	0, cr0, [r3], {6}
    1d84:	9f200000 	svcls	0x00200000
	...
    1d90:	02460001 	subeq	r0, r6, #1
    1d94:	024e0000 	subeq	r0, lr, #0
    1d98:	00020000 	andeq	r0, r2, r0
    1d9c:	00009f30 	andeq	r9, r0, r0, lsr pc
    1da0:	00000000 	andeq	r0, r0, r0
    1da4:	00010000 	andeq	r0, r1, r0
    1da8:	00000264 	andeq	r0, r0, r4, ror #4
    1dac:	0000026e 	andeq	r0, r0, lr, ror #4
    1db0:	13030006 	movwne	r0, #12294	; 0x3006
    1db4:	9f200000 	svcls	0x00200000
	...
    1dc0:	02640001 	rsbeq	r0, r4, #1
    1dc4:	026e0000 	rsbeq	r0, lr, #0
    1dc8:	00020000 	andeq	r0, r2, r0
    1dcc:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    1ddc:	01740000 	cmneq	r4, r0
    1de0:	01860000 	orreq	r0, r6, r0
    1de4:	00010000 	andeq	r0, r1, r0
    1de8:	00018650 	andeq	r8, r1, r0, asr r6
    1dec:	0001a400 	andeq	sl, r1, r0, lsl #8
    1df0:	f3000400 	vshl.u8	d0, d0, d0
    1df4:	a49f5001 	ldrge	r5, [pc], #1	; 1dfc <_Min_Stack_Size+0x19fc>
    1df8:	a6000001 	strge	r0, [r0], -r1
    1dfc:	01000001 	tsteq	r0, r1
    1e00:	01a65000 			; <UNDEFINED> instruction: 0x01a65000
    1e04:	01b00000 	movseq	r0, r0
    1e08:	00040000 	andeq	r0, r4, r0
    1e0c:	9f5001f3 	svcls	0x005001f3
	...
    1e18:	0000011c 	andeq	r0, r0, ip, lsl r1
    1e1c:	0000011e 	andeq	r0, r0, lr, lsl r1
    1e20:	007d0002 	rsbseq	r0, sp, r2
    1e24:	0000011e 	andeq	r0, r0, lr, lsl r1
    1e28:	00000174 	andeq	r0, r0, r4, ror r1
    1e2c:	187d0002 	ldmdane	sp!, {r1}^
	...
    1e3c:	0000011c 	andeq	r0, r0, ip, lsl r1
    1e40:	00000126 	andeq	r0, r0, r6, lsr #2
    1e44:	2a500001 	bcs	1401e50 <_Min_Stack_Size+0x1401a50>
    1e48:	74000001 	strvc	r0, [r0], #-1
    1e4c:	01000001 	tsteq	r0, r1
    1e50:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    1e60:	0000011c 	andeq	r0, r0, ip, lsl r1
    1e64:	00000122 	andeq	r0, r0, r2, lsr #2
    1e68:	22510001 	subscs	r0, r1, #1
    1e6c:	26000001 	strcs	r0, [r0], -r1
    1e70:	04000001 	streq	r0, [r0], #-1
    1e74:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1e78:	00012a9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
    1e7c:	00016c00 	andeq	r6, r1, r0, lsl #24
    1e80:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    1e8c:	01480301 	cmpeq	r8, r1, lsl #6
    1e90:	01480000 	mrseq	r0, (UNDEF: 72)
    1e94:	00060000 	andeq	r0, r6, r0
    1e98:	00004c03 	andeq	r4, r0, r3, lsl #24
    1e9c:	00009f20 	andeq	r9, r0, r0, lsr #30
    1ea0:	00000000 	andeq	r0, r0, r0
    1ea4:	00f00000 	rscseq	r0, r0, r0
    1ea8:	00f20000 	rscseq	r0, r2, r0
    1eac:	00020000 	andeq	r0, r2, r0
    1eb0:	00f2007d 	rscseq	r0, r2, sp, ror r0
    1eb4:	011c0000 	tsteq	ip, r0
    1eb8:	00020000 	andeq	r0, r2, r0
    1ebc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    1ecc:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1ed0:	000000f8 	strdeq	r0, [r0], -r8
    1ed4:	f8500001 			; <UNDEFINED> instruction: 0xf8500001
    1ed8:	14000000 	strne	r0, [r0], #-0
    1edc:	01000001 	tsteq	r0, r1
    1ee0:	01145400 	tsteq	r4, r0, lsl #8
    1ee4:	011c0000 	tsteq	ip, r0
    1ee8:	00030000 	andeq	r0, r3, r0
    1eec:	009f7f74 	addseq	r7, pc, r4, ror pc	; <UNPREDICTABLE>
	...
    1ef8:	0000f000 	andeq	pc, r0, r0
    1efc:	0000f800 	andeq	pc, r0, r0, lsl #16
    1f00:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1f0c:	00fe0301 	rscseq	r0, lr, r1, lsl #6
    1f10:	00fe0000 	rscseq	r0, lr, r0
    1f14:	00060000 	andeq	r0, r6, r0
    1f18:	00004c03 	andeq	r4, r0, r3, lsl #24
    1f1c:	00009f20 	andeq	r9, r0, r0, lsr #30
    1f20:	00000000 	andeq	r0, r0, r0
    1f24:	00c80000 	sbceq	r0, r8, r0
    1f28:	00ca0000 	sbceq	r0, sl, r0
    1f2c:	00020000 	andeq	r0, r2, r0
    1f30:	00ca007d 	sbceq	r0, sl, sp, ror r0
    1f34:	00f00000 	rscseq	r0, r0, r0
    1f38:	00020000 	andeq	r0, r2, r0
    1f3c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    1f48:	02000000 	andeq	r0, r0, #0
    1f4c:	00c80002 	sbceq	r0, r8, r2
    1f50:	00d00000 	sbcseq	r0, r0, r0
    1f54:	00010000 	andeq	r0, r1, r0
    1f58:	0000d050 	andeq	sp, r0, r0, asr r0
    1f5c:	0000d400 	andeq	sp, r0, r0, lsl #8
    1f60:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    1f64:	00d49f01 	sbcseq	r9, r4, r1, lsl #30
    1f68:	00d80000 	sbcseq	r0, r8, r0
    1f6c:	00010000 	andeq	r0, r1, r0
    1f70:	0000d854 	andeq	sp, r0, r4, asr r8
    1f74:	0000f000 	andeq	pc, r0, r0
    1f78:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    1f7c:	00009f01 	andeq	r9, r0, r1, lsl #30
    1f80:	00000000 	andeq	r0, r0, r0
    1f84:	009c0000 	addseq	r0, ip, r0
    1f88:	009e0000 	addseq	r0, lr, r0
    1f8c:	00020000 	andeq	r0, r2, r0
    1f90:	009e007d 	addseq	r0, lr, sp, ror r0
    1f94:	00c80000 	sbceq	r0, r8, r0
    1f98:	00020000 	andeq	r0, r2, r0
    1f9c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    1fac:	0000009c 	muleq	r0, ip, r0
    1fb0:	000000a6 	andeq	r0, r0, r6, lsr #1
    1fb4:	a6500001 	ldrbge	r0, [r0], -r1
    1fb8:	b0000000 	andlt	r0, r0, r0
    1fbc:	01000000 	mrseq	r0, (UNDEF: 0)
    1fc0:	00b05400 	adcseq	r5, r0, r0, lsl #8
    1fc4:	00c80000 	sbceq	r0, r8, r0
    1fc8:	00030000 	andeq	r0, r3, r0
    1fcc:	009f7f74 	addseq	r7, pc, r4, ror pc	; <UNPREDICTABLE>
	...
    1fd8:	00009c00 	andeq	r9, r0, r0, lsl #24
    1fdc:	0000a600 	andeq	sl, r0, r0, lsl #12
    1fe0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1fec:	00000052 	andeq	r0, r0, r2, asr r0
    1ff0:	00000054 	andeq	r0, r0, r4, asr r0
    1ff4:	007d0002 	rsbseq	r0, sp, r2
    1ff8:	00000054 	andeq	r0, r0, r4, asr r0
    1ffc:	00000066 	andeq	r0, r0, r6, rrx
    2000:	087d0002 	ldmdaeq	sp!, {r1}^
    2004:	00000066 	andeq	r0, r0, r6, rrx
    2008:	0000006a 	andeq	r0, r0, sl, rrx
    200c:	007d0002 	rsbseq	r0, sp, r2
    2010:	0000006a 	andeq	r0, r0, sl, rrx
    2014:	0000009c 	muleq	r0, ip, r0
    2018:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2024:	005e0000 	subseq	r0, lr, r0
    2028:	006a0000 	rsbeq	r0, sl, r0
    202c:	00010000 	andeq	r0, r1, r0
    2030:	00000051 	andeq	r0, r0, r1, asr r0
    2034:	00000000 	andeq	r0, r0, r0
    2038:	70030100 	andvc	r0, r3, r0, lsl #2
    203c:	70000000 	andvc	r0, r0, r0
    2040:	06000000 	streq	r0, [r0], -r0
    2044:	014e0300 	mrseq	r0, SPSR_hyp
    2048:	009f2000 	addseq	r2, pc, r0
	...
    2058:	0a000000 	beq	2060 <_Min_Stack_Size+0x1c60>
    205c:	1a000000 	bne	2064 <_Min_Stack_Size+0x1c64>
    2060:	01000000 	mrseq	r0, (UNDEF: 0)
    2064:	001a5000 	andseq	r5, sl, r0
    2068:	002c0000 	eoreq	r0, ip, r0
    206c:	00010000 	andeq	r0, r1, r0
    2070:	00002c53 	andeq	r2, r0, r3, asr ip
    2074:	00002e00 	andeq	r2, r0, r0, lsl #28
    2078:	50000100 	andpl	r0, r0, r0, lsl #2
    207c:	0000002e 	andeq	r0, r0, lr, lsr #32
    2080:	00000030 	andeq	r0, r0, r0, lsr r0
    2084:	00530001 	subseq	r0, r3, r1
	...
    2090:	00001e00 	andeq	r1, r0, r0, lsl #28
    2094:	00002c00 	andeq	r2, r0, r0, lsl #24
    2098:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    20a4:	000a0503 	andeq	r0, sl, r3, lsl #10
    20a8:	000a0000 	andeq	r0, sl, r0
    20ac:	00010000 	andeq	r0, r1, r0
    20b0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    20c0:	00000400 	andeq	r0, r0, r0, lsl #8
    20c4:	50000100 	andpl	r0, r0, r0, lsl #2
    20c8:	00000004 	andeq	r0, r0, r4
    20cc:	0000000a 	andeq	r0, r0, sl
    20d0:	01f30004 	mvnseq	r0, r4
    20d4:	00009f50 	andeq	r9, r0, r0, asr pc
    20d8:	00000000 	andeq	r0, r0, r0
    20dc:	04020000 	streq	r0, [r2], #-0
    20e0:	00000030 	andeq	r0, r0, r0, lsr r0
    20e4:	00000030 	andeq	r0, r0, r0, lsr r0
    20e8:	00500001 	subseq	r0, r0, r1
	...
    20f4:	00003c00 	andeq	r3, r0, r0, lsl #24
    20f8:	00005000 	andeq	r5, r0, r0
    20fc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2108:	003c0000 	eorseq	r0, ip, r0
    210c:	00500000 	subseq	r0, r0, r0
    2110:	00010000 	andeq	r0, r1, r0
    2114:	00000050 	andeq	r0, r0, r0, asr r0
    2118:	00000000 	andeq	r0, r0, r0
    211c:	00000100 	andeq	r0, r0, r0, lsl #2
    2120:	24000002 	strcs	r0, [r0], #-2
    2124:	01000002 	tsteq	r0, r2
    2128:	00005000 	andeq	r5, r0, r0
    212c:	00000000 	andeq	r0, r0, r0
    2130:	01c00000 	biceq	r0, r0, r0
    2134:	01c20000 	biceq	r0, r2, r0
    2138:	00020000 	andeq	r0, r2, r0
    213c:	01c2007d 	biceq	r0, r2, sp, ror r0
    2140:	01c60000 	biceq	r0, r6, r0
    2144:	00020000 	andeq	r0, r2, r0
    2148:	01c6087d 	biceq	r0, r6, sp, ror r8
    214c:	01f80000 	mvnseq	r0, r0
    2150:	00020000 	andeq	r0, r2, r0
    2154:	01f8287d 	mvnseq	r2, sp, ror r8
    2158:	02000000 	andeq	r0, r0, #0
    215c:	00020000 	andeq	r0, r2, r0
    2160:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    216c:	01d80000 	bicseq	r0, r8, r0
    2170:	01de0000 	bicseq	r0, lr, r0
    2174:	00010000 	andeq	r0, r1, r0
    2178:	0001de50 	andeq	sp, r1, r0, asr lr
    217c:	0001e100 	andeq	lr, r1, r0, lsl #2
    2180:	52000100 	andpl	r0, r0, #0, 2
	...
    218c:	00000001 	andeq	r0, r0, r1
    2190:	000001d8 	ldrdeq	r0, [r0], -r8
    2194:	000001de 	ldrdeq	r0, [r0], -lr
    2198:	de500001 	cdple	0, 5, cr0, cr0, cr1, {0}
    219c:	e1000001 	tst	r0, r1
    21a0:	01000001 	tsteq	r0, r1
    21a4:	00005200 	andeq	r5, r0, r0, lsl #4
    21a8:	00000000 	andeq	r0, r0, r0
    21ac:	00010000 	andeq	r0, r1, r0
    21b0:	000001d8 	ldrdeq	r0, [r0], -r8
    21b4:	000001e2 	andeq	r0, r0, r2, ror #3
    21b8:	005d0001 	subseq	r0, sp, r1
    21bc:	00000000 	andeq	r0, r0, r0
    21c0:	01000000 	mrseq	r0, (UNDEF: 0)
    21c4:	0001d800 	andeq	sp, r1, r0, lsl #16
    21c8:	0001e200 	andeq	lr, r1, r0, lsl #4
    21cc:	09000300 	stmdbeq	r0, {r8, r9}
    21d0:	00009f83 	andeq	r9, r0, r3, lsl #31
    21d4:	00000000 	andeq	r0, r0, r0
    21d8:	00010000 	andeq	r0, r1, r0
    21dc:	000001ee 	andeq	r0, r0, lr, ror #3
    21e0:	000001f6 	strdeq	r0, [r0], -r6
    21e4:	005d0001 	subseq	r0, sp, r1
    21e8:	00000000 	andeq	r0, r0, r0
    21ec:	01000000 	mrseq	r0, (UNDEF: 0)
    21f0:	0001ee00 	andeq	lr, r1, r0, lsl #28
    21f4:	0001f600 	andeq	pc, r1, r0, lsl #12
    21f8:	33000200 	movwcc	r0, #512	; 0x200
    21fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2200:	00000000 	andeq	r0, r0, r0
    2204:	00012000 	andeq	r2, r1, r0
    2208:	00012400 	andeq	r2, r1, r0, lsl #8
    220c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2210:	00012400 	andeq	r2, r1, r0, lsl #8
    2214:	00017000 	andeq	r7, r1, r0
    2218:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    221c:	00017020 	andeq	r7, r1, r0, lsr #32
    2220:	00017600 	andeq	r7, r1, r0, lsl #12
    2224:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2228:	00017600 	andeq	r7, r1, r0, lsl #12
    222c:	0001c000 	andeq	ip, r1, r0
    2230:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2234:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    2240:	00012000 	andeq	r2, r1, r0
    2244:	00012d00 	andeq	r2, r1, r0, lsl #26
    2248:	50000100 	andpl	r0, r0, r0, lsl #2
    224c:	0000012d 	andeq	r0, r0, sp, lsr #2
    2250:	000001c0 	andeq	r0, r0, r0, asr #3
    2254:	01f30004 	mvnseq	r0, r4
    2258:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    226c:	00000120 	andeq	r0, r0, r0, lsr #2
    2270:	00000146 	andeq	r0, r0, r6, asr #2
    2274:	46510001 	ldrbmi	r0, [r1], -r1
    2278:	70000001 	andvc	r0, r0, r1
    227c:	01000001 	tsteq	r0, r1
    2280:	01705500 	cmneq	r0, r0, lsl #10
    2284:	01760000 	cmneq	r6, r0
    2288:	00040000 	andeq	r0, r4, r0
    228c:	9f5101f3 	svcls	0x005101f3
    2290:	00000176 	andeq	r0, r0, r6, ror r1
    2294:	000001ac 	andeq	r0, r0, ip, lsr #3
    2298:	ac550001 	mrrcge	0, 0, r0, r5, cr1
    229c:	c0000001 	andgt	r0, r0, r1
    22a0:	01000001 	tsteq	r0, r1
    22a4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    22b8:	00000120 	andeq	r0, r0, r0, lsr #2
    22bc:	0000013e 	andeq	r0, r0, lr, lsr r1
    22c0:	3e520001 	cdpcc	0, 5, cr0, cr2, cr1, {0}
    22c4:	70000001 	andvc	r0, r0, r1
    22c8:	01000001 	tsteq	r0, r1
    22cc:	01705600 	cmneq	r0, r0, lsl #12
    22d0:	01760000 	cmneq	r6, r0
    22d4:	00040000 	andeq	r0, r4, r0
    22d8:	9f5201f3 	svcls	0x005201f3
    22dc:	00000176 	andeq	r0, r0, r6, ror r1
    22e0:	000001ac 	andeq	r0, r0, ip, lsr #3
    22e4:	ac560001 	mrrcge	0, 0, r0, r6, cr1
    22e8:	c0000001 	andgt	r0, r0, r1
    22ec:	01000001 	tsteq	r0, r1
    22f0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    22fc:	0000012e 	andeq	r0, r0, lr, lsr #2
    2300:	00000132 	andeq	r0, r0, r2, lsr r1
    2304:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
    2308:	1c007003 	stcne	0, cr7, [r0], {3}
    230c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2320:	00016200 	andeq	r6, r1, r0, lsl #4
    2324:	00017000 	andeq	r7, r1, r0
    2328:	59000100 	stmdbpl	r0, {r8}
    232c:	00000170 	andeq	r0, r0, r0, ror r1
    2330:	00000172 	andeq	r0, r0, r2, ror r1
    2334:	76510001 	ldrbvc	r0, [r1], -r1
    2338:	96000001 	strls	r0, [r0], -r1
    233c:	01000001 	tsteq	r0, r1
    2340:	01965900 	orrseq	r5, r6, r0, lsl #18
    2344:	019a0000 	orrseq	r0, sl, r0
    2348:	00030000 	andeq	r0, r3, r0
    234c:	9a9f017a 	bls	fe7c293c <BootRAM+0xd7330dd>
    2350:	9c000001 	stcls	0, cr0, [r0], {1}
    2354:	03000001 	movweq	r0, #1
    2358:	9f017900 	svcls	0x00017900
    235c:	0000019c 	muleq	r0, ip, r1
    2360:	000001ac 	andeq	r0, r0, ip, lsr #3
    2364:	00590001 	subseq	r0, r9, r1
	...
    2374:	00016200 	andeq	r6, r1, r0, lsl #4
    2378:	00017500 	andeq	r7, r1, r0, lsl #10
    237c:	53000100 	movwpl	r0, #256	; 0x100
    2380:	00000176 	andeq	r0, r0, r6, ror r1
    2384:	00000181 	andeq	r0, r0, r1, lsl #3
    2388:	96530001 	ldrbls	r0, [r3], -r1
    238c:	a5000001 	strge	r0, [r0, #-1]
    2390:	01000001 	tsteq	r0, r1
    2394:	00005300 	andeq	r5, r0, r0, lsl #6
    2398:	00000000 	andeq	r0, r0, r0
    239c:	00e00000 	rsceq	r0, r0, r0
    23a0:	00e20000 	rsceq	r0, r2, r0
    23a4:	00020000 	andeq	r0, r2, r0
    23a8:	00e2007d 	rsceq	r0, r2, sp, ror r0
    23ac:	00fe0000 	rscseq	r0, lr, r0
    23b0:	00020000 	andeq	r0, r2, r0
    23b4:	00fe087d 	rscseq	r0, lr, sp, ror r8
    23b8:	010a0000 	mrseq	r0, (UNDEF: 10)
    23bc:	00020000 	andeq	r0, r2, r0
    23c0:	0000007d 	andeq	r0, r0, sp, ror r0
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	00b00000 	adcseq	r0, r0, r0
    23cc:	00b20000 	adcseq	r0, r2, r0
    23d0:	00020000 	andeq	r0, r2, r0
    23d4:	00b2007d 	adcseq	r0, r2, sp, ror r0
    23d8:	00e00000 	rsceq	r0, r0, r0
    23dc:	00020000 	andeq	r0, r2, r0
    23e0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    23f0:	00b00000 	adcseq	r0, r0, r0
    23f4:	00ce0000 	sbceq	r0, lr, r0
    23f8:	00010000 	andeq	r0, r1, r0
    23fc:	0000ce50 	andeq	ip, r0, r0, asr lr
    2400:	0000d600 	andeq	sp, r0, r0, lsl #12
    2404:	f3000400 	vshl.u8	d0, d0, d0
    2408:	d69f5001 	ldrle	r5, [pc], r1
    240c:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    2410:	01000000 	mrseq	r0, (UNDEF: 0)
    2414:	00d85000 	sbcseq	r5, r8, r0
    2418:	00e00000 	rsceq	r0, r0, r0
    241c:	00040000 	andeq	r0, r4, r0
    2420:	9f5001f3 	svcls	0x005001f3
	...
    2430:	00b00000 	adcseq	r0, r0, r0
    2434:	00cc0000 	sbceq	r0, ip, r0
    2438:	00010000 	andeq	r0, r1, r0
    243c:	0000cc51 	andeq	ip, r0, r1, asr ip
    2440:	0000d600 	andeq	sp, r0, r0, lsl #12
    2444:	f3000400 	vshl.u8	d0, d0, d0
    2448:	d69f5101 	ldrle	r5, [pc], r1, lsl #2
    244c:	e0000000 	and	r0, r0, r0
    2450:	01000000 	mrseq	r0, (UNDEF: 0)
    2454:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2464:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2468:	000000d1 	ldrdeq	r0, [r0], -r1
    246c:	d1520001 	cmple	r2, r1
    2470:	d6000000 	strle	r0, [r0], -r0
    2474:	04000000 	streq	r0, [r0], #-0
    2478:	5201f300 	andpl	pc, r1, #0, 6
    247c:	0000d69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    2480:	0000e000 	andeq	lr, r0, r0
    2484:	52000100 	andpl	r0, r0, #0, 2
	...
    2490:	00ca0001 	sbceq	r0, sl, r1
    2494:	00d20000 	sbcseq	r0, r2, r0
    2498:	00060000 	andeq	r0, r6, r0
    249c:	00001a03 	andeq	r1, r0, r3, lsl #20
    24a0:	00009f20 	andeq	r9, r0, r0, lsr #30
    24a4:	00000000 	andeq	r0, r0, r0
    24a8:	00010000 	andeq	r0, r1, r0
    24ac:	000000ca 	andeq	r0, r0, sl, asr #1
    24b0:	000000d2 	ldrdeq	r0, [r0], -r2
    24b4:	9f300002 	svcls	0x00300002
	...
    24c8:	00000084 	andeq	r0, r0, r4, lsl #1
    24cc:	0000009e 	muleq	r0, lr, r0
    24d0:	9e500001 	cdpls	0, 5, cr0, cr0, cr1, {0}
    24d4:	a6000000 	strge	r0, [r0], -r0
    24d8:	04000000 	streq	r0, [r0], #-0
    24dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    24e0:	0000a69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    24e4:	0000a800 	andeq	sl, r0, r0, lsl #16
    24e8:	50000100 	andpl	r0, r0, r0, lsl #2
    24ec:	000000a8 	andeq	r0, r0, r8, lsr #1
    24f0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    24f4:	01f30004 	mvnseq	r0, r4
    24f8:	00009f50 	andeq	r9, r0, r0, asr pc
    24fc:	00000000 	andeq	r0, r0, r0
    2500:	00500000 	subseq	r0, r0, r0
    2504:	00520000 	subseq	r0, r2, r0
    2508:	00020000 	andeq	r0, r2, r0
    250c:	0052007d 	subseq	r0, r2, sp, ror r0
    2510:	00840000 	addeq	r0, r4, r0
    2514:	00020000 	andeq	r0, r2, r0
    2518:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    2524:	01000000 	mrseq	r0, (UNDEF: 0)
    2528:	00500001 	subseq	r0, r0, r1
    252c:	00570000 	subseq	r0, r7, r0
    2530:	00010000 	andeq	r0, r1, r0
    2534:	00005750 	andeq	r5, r0, r0, asr r7
    2538:	00007800 	andeq	r7, r0, r0, lsl #16
    253c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    2540:	00000078 	andeq	r0, r0, r8, ror r0
    2544:	00000078 	andeq	r0, r0, r8, ror r0
    2548:	7f740003 	svcvc	0x00740003
    254c:	0000789f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    2550:	00008400 	andeq	r8, r0, r0, lsl #8
    2554:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2560:	00030300 	andeq	r0, r3, r0, lsl #6
    2564:	00000050 	andeq	r0, r0, r0, asr r0
    2568:	00000064 	andeq	r0, r0, r4, rrx
    256c:	64510001 	ldrbvs	r0, [r1], #-1
    2570:	84000000 	strhi	r0, [r0], #-0
    2574:	01000000 	mrseq	r0, (UNDEF: 0)
    2578:	00005000 	andeq	r5, r0, r0
    257c:	00000000 	andeq	r0, r0, r0
    2580:	00020000 	andeq	r0, r2, r0
    2584:	00000064 	andeq	r0, r0, r4, rrx
    2588:	00000066 	andeq	r0, r0, r6, rrx
    258c:	00510001 	subseq	r0, r1, r1
	...
    2598:	64000000 	strvs	r0, [r0], #-0
    259c:	74000000 	strvc	r0, [r0], #-0
    25a0:	01000000 	mrseq	r0, (UNDEF: 0)
    25a4:	007c5300 	rsbseq	r5, ip, r0, lsl #6
    25a8:	00840000 	addeq	r0, r4, r0
    25ac:	00010000 	andeq	r0, r1, r0
    25b0:	00000053 	andeq	r0, r0, r3, asr r0
    25b4:	00000000 	andeq	r0, r0, r0
    25b8:	00001400 	andeq	r1, r0, r0, lsl #8
    25bc:	00001600 	andeq	r1, r0, r0, lsl #12
    25c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    25c4:	00001600 	andeq	r1, r0, r0, lsl #12
    25c8:	00005000 	andeq	r5, r0, r0
    25cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    25d0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    25dc:	01010000 	mrseq	r0, (UNDEF: 1)
    25e0:	00001400 	andeq	r1, r0, r0, lsl #8
    25e4:	00002100 	andeq	r2, r0, r0, lsl #2
    25e8:	50000100 	andpl	r0, r0, r0, lsl #2
    25ec:	00000021 	andeq	r0, r0, r1, lsr #32
    25f0:	0000003e 	andeq	r0, r0, lr, lsr r0
    25f4:	3e550001 	cdpcc	0, 5, cr0, cr5, cr1, {0}
    25f8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    25fc:	03000000 	movweq	r0, #0
    2600:	9f7f7500 	svcls	0x007f7500
    2604:	00000048 	andeq	r0, r0, r8, asr #32
    2608:	00000050 	andeq	r0, r0, r0, asr r0
    260c:	00550001 	subseq	r0, r5, r1
	...
    2618:	14000000 	strne	r0, [r0], #-0
    261c:	32000000 	andcc	r0, r0, #0
    2620:	01000000 	mrseq	r0, (UNDEF: 0)
    2624:	00325100 	eorseq	r5, r2, r0, lsl #2
    2628:	00500000 	subseq	r0, r0, r0
    262c:	00040000 	andeq	r0, r4, r0
    2630:	9f5101f3 	svcls	0x005101f3
	...
    2640:	0000001e 	andeq	r0, r0, lr, lsl r0
    2644:	00000042 	andeq	r0, r0, r2, asr #32
    2648:	48520001 	ldmdami	r2, {r0}^
    264c:	50000000 	andpl	r0, r0, r0
    2650:	01000000 	mrseq	r0, (UNDEF: 0)
    2654:	00005200 	andeq	r5, r0, r0, lsl #4
    2658:	00000000 	andeq	r0, r0, r0
    265c:	01000000 	mrseq	r0, (UNDEF: 0)
    2660:	002a0001 	eoreq	r0, sl, r1
    2664:	002c0000 	eoreq	r0, ip, r0
    2668:	00010000 	andeq	r0, r1, r0
    266c:	00002c50 	andeq	r2, r0, r0, asr ip
    2670:	00003200 	andeq	r3, r0, r0, lsl #4
    2674:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2688:	0000010a 	andeq	r0, r0, sl, lsl #2
    268c:	00000110 	andeq	r0, r0, r0, lsl r1
    2690:	10500001 	subsne	r0, r0, r1
    2694:	14000001 	strne	r0, [r0], #-1
    2698:	04000001 	streq	r0, [r0], #-1
    269c:	5001f300 	andpl	pc, r1, r0, lsl #6
    26a0:	0001149f 	muleq	r1, pc, r4	; <UNPREDICTABLE>
    26a4:	00011600 	andeq	r1, r1, r0, lsl #12
    26a8:	50000100 	andpl	r0, r0, r0, lsl #2
    26ac:	00000116 	andeq	r0, r0, r6, lsl r1
    26b0:	00000120 	andeq	r0, r0, r0, lsr #2
    26b4:	01f30004 	mvnseq	r0, r4
    26b8:	00009f50 	andeq	r9, r0, r0, asr pc
    26bc:	00000000 	andeq	r0, r0, r0
    26c0:	00010000 	andeq	r0, r1, r0
    26c4:	0000010e 	andeq	r0, r0, lr, lsl #2
    26c8:	00000110 	andeq	r0, r0, r0, lsl r1
    26cc:	00500001 	subseq	r0, r0, r1
	...
    26dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    26e0:	0a000000 	beq	26e8 <_Min_Stack_Size+0x22e8>
    26e4:	05000000 	streq	r0, [r0, #-0]
    26e8:	32007600 	andcc	r7, r0, #0, 12
    26ec:	000a9f26 	andeq	r9, sl, r6, lsr #30
    26f0:	001c0000 	andseq	r0, ip, r0
    26f4:	00010000 	andeq	r0, r1, r0
    26f8:	00002456 	andeq	r2, r0, r6, asr r4
    26fc:	00002600 	andeq	r2, r0, r0, lsl #12
    2700:	76000500 	strvc	r0, [r0], -r0, lsl #10
    2704:	9f263200 	svcls	0x00263200
    2708:	00000026 	andeq	r0, r0, r6, lsr #32
    270c:	00000038 	andeq	r0, r0, r8, lsr r0
    2710:	00560001 	subseq	r0, r6, r1
    2714:	00000000 	andeq	r0, r0, r0
    2718:	01000000 	mrseq	r0, (UNDEF: 0)
    271c:	00000000 	andeq	r0, r0, r0
    2720:	01000000 	mrseq	r0, (UNDEF: 0)
    2724:	00000000 	andeq	r0, r0, r0
    2728:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    272c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2730:	02000000 	andeq	r0, r0, #0
    2734:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
    2738:	10000000 	andne	r0, r0, r0
    273c:	01000000 	mrseq	r0, (UNDEF: 0)
    2740:	00105400 	andseq	r5, r0, r0, lsl #8
    2744:	00160000 	andseq	r0, r6, r0
    2748:	00030000 	andeq	r0, r3, r0
    274c:	169f7f74 			; <UNDEFINED> instruction: 0x169f7f74
    2750:	1a000000 	bne	2758 <_Min_Stack_Size+0x2358>
    2754:	01000000 	mrseq	r0, (UNDEF: 0)
    2758:	00245400 	eoreq	r5, r4, r0, lsl #8
    275c:	002a0000 	eoreq	r0, sl, r0
    2760:	00020000 	andeq	r0, r2, r0
    2764:	002a9f30 	eoreq	r9, sl, r0, lsr pc
    2768:	002c0000 	eoreq	r0, ip, r0
    276c:	00010000 	andeq	r0, r1, r0
    2770:	00002c54 	andeq	r2, r0, r4, asr ip
    2774:	00003200 	andeq	r3, r0, r0, lsl #4
    2778:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    277c:	00329f7f 	eorseq	r9, r2, pc, ror pc
    2780:	00360000 	eorseq	r0, r6, r0
    2784:	00010000 	andeq	r0, r1, r0
    2788:	00000054 	andeq	r0, r0, r4, asr r0
    278c:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000234 	andeq	r0, r0, r4, lsr r2
  18:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
  1c:	000000c0 	andeq	r0, r0, r0, asr #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	09c10002 	stmibeq	r1, {r1}^
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
  3c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0b030002 	bleq	c005c <_Min_Stack_Size+0xbfc5c>
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	080003a4 	stmdaeq	r0, {r2, r5, r7, r8, r9}
  5c:	0000066c 	andeq	r0, r0, ip, ror #12
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	1dfd0002 	ldclne	0, cr0, [sp, #8]!
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000a10 	stmdaeq	r0, {r4, r9, fp}
  7c:	000004a2 	andeq	r0, r0, r2, lsr #9
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	3f8f0002 	svccc	0x008f0002
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	08000eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp}
  9c:	000005c4 	andeq	r0, r0, r4, asr #11
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	54e80002 	strbtpl	r0, [r8], #2
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
  bc:	00000200 	andeq	r0, r0, r0, lsl #4
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	5e490002 	cdppl	0, 4, cr0, cr9, cr2, {0}
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	08001678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, ip}
  dc:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000150 	stmdaeq	r0, {r4, r6, r8}
   4:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
   8:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
   c:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
	...
  18:	00000018 	andeq	r0, r0, r8, lsl r0
  1c:	0000001a 	andeq	r0, r0, sl, lsl r0
  20:	0000003a 	andeq	r0, r0, sl, lsr r0
  24:	0000003a 	andeq	r0, r0, sl, lsr r0
  28:	0000003e 	andeq	r0, r0, lr, lsr r0
  2c:	00000050 	andeq	r0, r0, r0, asr r0
	...
  38:	00000312 	andeq	r0, r0, r2, lsl r3
  3c:	00000318 	andeq	r0, r0, r8, lsl r3
  40:	00000318 	andeq	r0, r0, r8, lsl r3
  44:	00000368 	andeq	r0, r0, r8, ror #6
	...
  50:	000003ac 	andeq	r0, r0, ip, lsr #7
  54:	000003ac 	andeq	r0, r0, ip, lsr #7
  58:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
  5c:	000003c2 	andeq	r0, r0, r2, asr #7
	...
  68:	00000456 	andeq	r0, r0, r6, asr r4
  6c:	00000458 	andeq	r0, r0, r8, asr r4
  70:	00000472 	andeq	r0, r0, r2, ror r4
  74:	00000478 	andeq	r0, r0, r8, ror r4
  78:	0000049c 	muleq	r0, ip, r4
  7c:	000004a8 	andeq	r0, r0, r8, lsr #9
	...
  88:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
  8c:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
  90:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
  94:	000004c4 	andeq	r0, r0, r4, asr #9
	...
  a0:	00000500 	andeq	r0, r0, r0, lsl #10
  a4:	00000500 	andeq	r0, r0, r0, lsl #10
  a8:	00000508 	andeq	r0, r0, r8, lsl #10
  ac:	00000514 	andeq	r0, r0, r4, lsl r5
	...
  b8:	00000556 	andeq	r0, r0, r6, asr r5
  bc:	00000556 	andeq	r0, r0, r6, asr r5
  c0:	00000558 	andeq	r0, r0, r8, asr r5
  c4:	00000560 	andeq	r0, r0, r0, ror #10
	...
  d0:	0000056c 	andeq	r0, r0, ip, ror #10
  d4:	00000580 	andeq	r0, r0, r0, lsl #11
  d8:	00000590 	muleq	r0, r0, r5
  dc:	000005c2 	andeq	r0, r0, r2, asr #11
  e0:	000005c6 	andeq	r0, r0, r6, asr #11
  e4:	000005e6 	andeq	r0, r0, r6, ror #11
	...
  f0:	000005aa 	andeq	r0, r0, sl, lsr #11
  f4:	000005ac 	andeq	r0, r0, ip, lsr #11
  f8:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
  fc:	000005c2 	andeq	r0, r0, r2, asr #11
	...
 108:	00000580 	andeq	r0, r0, r0, lsl #11
 10c:	00000586 	andeq	r0, r0, r6, lsl #11
 110:	00000618 	andeq	r0, r0, r8, lsl r6
 114:	00000620 	andeq	r0, r0, r0, lsr #12
	...
 120:	000005ee 	andeq	r0, r0, lr, ror #11
 124:	000005f4 	strdeq	r0, [r0], -r4
 128:	000005f6 	strdeq	r0, [r0], -r6
 12c:	000005fa 	strdeq	r0, [r0], -sl
	...
 13c:	00000004 	andeq	r0, r0, r4
 140:	00000006 	andeq	r0, r0, r6
 144:	00000008 	andeq	r0, r0, r8
 148:	0000000a 	andeq	r0, r0, sl
 14c:	00000012 	andeq	r0, r0, r2, lsl r0
 150:	00000014 	andeq	r0, r0, r4, lsl r0
 154:	0000002c 	andeq	r0, r0, ip, lsr #32
 158:	0000002e 	andeq	r0, r0, lr, lsr #32
 15c:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
 168:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
 16c:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
 170:	000001f4 	strdeq	r0, [r0], -r4
 174:	000001f6 	strdeq	r0, [r0], -r6
	...
 180:	000001e8 	andeq	r0, r0, r8, ror #3
 184:	000001ea 	andeq	r0, r0, sl, ror #3
 188:	000001ec 	andeq	r0, r0, ip, ror #3
 18c:	000001ee 	andeq	r0, r0, lr, ror #3
	...
 198:	000003a2 	andeq	r0, r0, r2, lsr #7
 19c:	000003a2 	andeq	r0, r0, r2, lsr #7
 1a0:	000003a6 	andeq	r0, r0, r6, lsr #7
 1a4:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
	...
 1b0:	000003f2 	strdeq	r0, [r0], -r2
 1b4:	000003f6 	strdeq	r0, [r0], -r6
 1b8:	00000412 	andeq	r0, r0, r2, lsl r4
 1bc:	00000416 	andeq	r0, r0, r6, lsl r4
	...
 1c8:	0000005c 	andeq	r0, r0, ip, asr r0
 1cc:	00000062 	andeq	r0, r0, r2, rrx
 1d0:	00000066 	andeq	r0, r0, r6, rrx
 1d4:	0000006a 	andeq	r0, r0, sl, rrx
	...
 1e0:	000000f4 	strdeq	r0, [r0], -r4
 1e4:	000000f8 	strdeq	r0, [r0], -r8
 1e8:	000000fe 	strdeq	r0, [r0], -lr
 1ec:	00000102 	andeq	r0, r0, r2, lsl #2
	...
 1f8:	00000122 	andeq	r0, r0, r2, lsr #2
 1fc:	00000126 	andeq	r0, r0, r6, lsr #2
 200:	00000148 	andeq	r0, r0, r8, asr #2
 204:	0000014c 	andeq	r0, r0, ip, asr #2
	...
 210:	000001d8 	ldrdeq	r0, [r0], -r8
 214:	000001da 	ldrdeq	r0, [r0], -sl
 218:	00000200 	andeq	r0, r0, r0, lsl #4
 21c:	00000224 	andeq	r0, r0, r4, lsr #4
	...
 228:	000002c0 	andeq	r0, r0, r0, asr #5
 22c:	000002c0 	andeq	r0, r0, r0, asr #5
 230:	000002c2 	andeq	r0, r0, r2, asr #5
 234:	000002c6 	andeq	r0, r0, r6, asr #5
 238:	000002c8 	andeq	r0, r0, r8, asr #5
 23c:	000002cc 	andeq	r0, r0, ip, asr #5
	...
 248:	000002c6 	andeq	r0, r0, r6, asr #5
 24c:	000002c8 	andeq	r0, r0, r8, asr #5
 250:	000002cc 	andeq	r0, r0, ip, asr #5
 254:	000002ce 	andeq	r0, r0, lr, asr #5
 258:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 25c:	000002dc 	ldrdeq	r0, [r0], -ip
 260:	000002de 	ldrdeq	r0, [r0], -lr
 264:	000002e6 	andeq	r0, r0, r6, ror #5
 268:	000002e8 	andeq	r0, r0, r8, ror #5
 26c:	000002f2 	strdeq	r0, [r0], -r2
	...
 278:	000003cc 	andeq	r0, r0, ip, asr #7
 27c:	000003f2 	strdeq	r0, [r0], -r2
 280:	00000412 	andeq	r0, r0, r2, lsl r4
 284:	00000450 	andeq	r0, r0, r0, asr r4
	...
 290:	00000494 	muleq	r0, r4, r4
 294:	00000498 	muleq	r0, r8, r4
 298:	00000540 	andeq	r0, r0, r0, asr #10
 29c:	00000548 	andeq	r0, r0, r8, asr #10
	...
 2a8:	00000498 	muleq	r0, r8, r4
 2ac:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 2b0:	00000552 	andeq	r0, r0, r2, asr r5
 2b4:	00000596 	muleq	r0, r6, r5
	...
 2c0:	00000572 	andeq	r0, r0, r2, ror r5
 2c4:	00000574 	andeq	r0, r0, r4, ror r5
 2c8:	00000576 	andeq	r0, r0, r6, ror r5
 2cc:	00000578 	andeq	r0, r0, r8, ror r5
	...
 2d8:	0000010a 	andeq	r0, r0, sl, lsl #2
 2dc:	0000010c 	andeq	r0, r0, ip, lsl #2
 2e0:	0000010e 	andeq	r0, r0, lr, lsl #2
 2e4:	00000110 	andeq	r0, r0, r0, lsl r1
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000004a3 	andeq	r0, r0, r3, lsr #9
       4:	00bc0003 	adcseq	r0, ip, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	7878316c 	ldmdavc	r8!, {r2, r3, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
      a0:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
      a4:	00682e63 	rsbeq	r2, r8, r3, ror #28
      a8:	73000002 	movwvc	r0, #2
      ac:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
      b0:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	5f627375 	svcpl	0x00627375
      bc:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
      c0:	00010068 	andeq	r0, r1, r8, rrx
      c4:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
      c8:	50020500 	andpl	r0, r2, r0, lsl #10
      cc:	03080001 	movweq	r0, #32769	; 0x8001
      d0:	03050115 	movweq	r0, #20757	; 0x5115
      d4:	06100513 			; <UNDEFINED> instruction: 0x06100513
      d8:	210b0501 	tstcs	fp, r1, lsl #10
      dc:	051f1005 	ldreq	r1, [pc, #-5]	; df <_Min_Heap_Size+0xdf>
      e0:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
      e4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
      e8:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
      ec:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
      f0:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
      f4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
      f8:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
      fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     100:	054a061e 	strbeq	r0, [sl, #-1566]	; 0xfffff9e2
     104:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
     108:	29050102 	stmdbcs	r5, {r1, r8}
     10c:	02040200 	andeq	r0, r4, #0, 4
     110:	23050106 	movwcs	r0, #20742	; 0x5106
     114:	02040200 	andeq	r0, r4, #0, 4
     118:	06030520 	streq	r0, [r3], -r0, lsr #10
     11c:	060c0531 			; <UNDEFINED> instruction: 0x060c0531
     120:	06030501 	streq	r0, [r3], -r1, lsl #10
     124:	060c054b 	streq	r0, [ip], -fp, asr #10
     128:	06030501 	streq	r0, [r3], -r1, lsl #10
     12c:	060c054b 	streq	r0, [ip], -fp, asr #10
     130:	06030501 	streq	r0, [r3], -r1, lsl #10
     134:	060c054c 	streq	r0, [ip], -ip, asr #10
     138:	06030501 	streq	r0, [r3], -r1, lsl #10
     13c:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
     140:	06030501 	streq	r0, [r3], -r1, lsl #10
     144:	060c052f 	streq	r0, [ip], -pc, lsr #10
     148:	06030501 	streq	r0, [r3], -r1, lsl #10
     14c:	0026054b 	eoreq	r0, r6, fp, asr #10
     150:	01010402 	tsteq	r1, r2, lsl #8
     154:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     158:	01060104 	tsteq	r6, r4, lsl #2
     15c:	02000805 	andeq	r0, r0, #327680	; 0x50000
     160:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     164:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     168:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     16c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     170:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     174:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     178:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     17c:	054f0603 	strbeq	r0, [pc, #-1539]	; fffffb81 <BootRAM+0xef70322>
     180:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     184:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     188:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     18c:	1f052f01 	svcne	0x00052f01
     190:	03059406 	movweq	r9, #21510	; 0x5406
     194:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
     198:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     19c:	052f0603 	streq	r0, [pc, #-1539]!	; fffffba1 <BootRAM+0xef70342>
     1a0:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     1a4:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
     1a8:	01060d05 	tsteq	r6, r5, lsl #26
     1ac:	21060305 	tstcs	r6, r5, lsl #6
     1b0:	11060d05 	tstne	r6, r5, lsl #26
     1b4:	78031f05 	stmdavc	r3, {r0, r2, r8, r9, sl, fp, ip}
     1b8:	0005052e 	andeq	r0, r5, lr, lsr #10
     1bc:	06030402 	streq	r0, [r3], -r2, lsl #8
     1c0:	003c0a03 	eorseq	r0, ip, r3, lsl #20
     1c4:	06010402 	streq	r0, [r1], -r2, lsl #8
     1c8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     1cc:	21062001 	tstcs	r6, r1
     1d0:	01060c05 	tsteq	r6, r5, lsl #24
     1d4:	4a200705 	bmi	801df0 <_Min_Stack_Size+0x8019f0>
     1d8:	00030520 	andeq	r0, r3, r0, lsr #10
     1dc:	1e020402 	cdpne	4, 0, cr0, cr2, cr2, {0}
     1e0:	2e321905 	vaddcs.f16	s2, s4, s10	; <UNPREDICTABLE>
     1e4:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     1e8:	03060304 	movweq	r0, #25348	; 0x6304
     1ec:	0200200e 	andeq	r2, r0, #14
     1f0:	20060104 	andcs	r0, r6, r4, lsl #2
     1f4:	01040200 	mrseq	r0, R12_usr
     1f8:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
     1fc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     200:	202e2009 	eorcs	r2, lr, r9
     204:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     208:	061e0204 	ldreq	r0, [lr], -r4, lsl #4
     20c:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
     210:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     214:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
     218:	0311060d 	tsteq	r1, #13631488	; 0xd00000
     21c:	07052e76 	smlsdxeq	r5, r6, lr, r2
     220:	03040200 	movweq	r0, #16896	; 0x4200
     224:	3c0c0306 	stccc	3, cr0, [ip], {6}
     228:	01040200 	mrseq	r0, R12_usr
     22c:	02002006 	andeq	r2, r0, #6
     230:	06200104 	strteq	r0, [r0], -r4, lsl #2
     234:	060d0521 	streq	r0, [sp], -r1, lsr #10
     238:	20090501 	andcs	r0, r9, r1, lsl #10
     23c:	0505202e 	streq	r2, [r5, #-46]	; 0xffffffd2
     240:	02040200 	andeq	r0, r4, #0, 4
     244:	321b051e 	andscc	r0, fp, #125829120	; 0x7800000
     248:	0603052e 	streq	r0, [r3], -lr, lsr #10
     24c:	060e0524 	streq	r0, [lr], -r4, lsr #10
     250:	25070501 	strcs	r0, [r7, #-1281]	; 0xfffffaff
     254:	051b0e05 	ldreq	r0, [fp, #-3589]	; 0xfffff1fb
     258:	0e052410 	cfmvdlreq	mvd5, r2
     25c:	0603052a 	streq	r0, [r3], -sl, lsr #10
     260:	060e054b 	streq	r0, [lr], -fp, asr #10
     264:	06030501 	streq	r0, [r3], -r1, lsl #10
     268:	060e0567 	streq	r0, [lr], -r7, ror #10
     26c:	06030501 	streq	r0, [r3], -r1, lsl #10
     270:	06100568 	ldreq	r0, [r0], -r8, ror #10
     274:	06030501 	streq	r0, [r3], -r1, lsl #10
     278:	0607054b 	streq	r0, [r7], -fp, asr #10
     27c:	06030501 	streq	r0, [r3], -r1, lsl #10
     280:	06070521 	streq	r0, [r7], -r1, lsr #10
     284:	06030501 	streq	r0, [r3], -r1, lsl #10
     288:	0607052f 	streq	r0, [r7], -pc, lsr #10
     28c:	06030501 	streq	r0, [r3], -r1, lsl #10
     290:	060b052f 	streq	r0, [fp], -pc, lsr #10
     294:	06030501 	streq	r0, [r3], -r1, lsl #10
     298:	06070523 	streq	r0, [r7], -r3, lsr #10
     29c:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a0:	06070521 	streq	r0, [r7], -r1, lsr #10
     2a4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a8:	06050530 			; <UNDEFINED> instruction: 0x06050530
     2ac:	13210601 			; <UNDEFINED> instruction: 0x13210601
     2b0:	06090513 			; <UNDEFINED> instruction: 0x06090513
     2b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b8:	13141335 	tstne	r4, #-738197504	; 0xd4000000
     2bc:	06070514 			; <UNDEFINED> instruction: 0x06070514
     2c0:	06030501 	streq	r0, [r3], -r1, lsl #10
     2c4:	0d05142f 	cfstrseq	mvf1, [r5, #-188]	; 0xffffff44
     2c8:	03050106 	movweq	r0, #20742	; 0x5106
     2cc:	0b052206 	bleq	148aec <_Min_Stack_Size+0x1486ec>
     2d0:	03050106 	movweq	r0, #20742	; 0x5106
     2d4:	0b054b06 	bleq	152ef4 <_Min_Stack_Size+0x152af4>
     2d8:	20311106 	eorscs	r1, r1, r6, lsl #2
     2dc:	03060505 	movweq	r0, #25861	; 0x6505
     2e0:	13133c6d 	tstne	r3, #27904	; 0x6d00
     2e4:	01060905 	tsteq	r6, r5, lsl #18
     2e8:	0005052e 	andeq	r0, r5, lr, lsr #10
     2ec:	06030402 	streq	r0, [r3], -r2, lsl #8
     2f0:	00201003 	eoreq	r1, r0, r3
     2f4:	06010402 	streq	r0, [r1], -r2, lsl #8
     2f8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     2fc:	21062001 	tstcs	r6, r1
     300:	01060b05 	tsteq	r6, r5, lsl #22
     304:	2e200705 	cdpcs	7, 2, cr0, cr0, cr5, {0}
     308:	00030520 	andeq	r0, r3, r0, lsr #10
     30c:	1e020402 	cdpne	4, 0, cr0, cr2, cr2, {0}
     310:	05321905 	ldreq	r1, [r2, #-2309]!	; 0xfffff6fb
     314:	04020005 	streq	r0, [r2], #-5
     318:	00430603 	subeq	r0, r3, r3, lsl #12
     31c:	06010402 	streq	r0, [r1], -r2, lsl #8
     320:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     324:	21062001 	tstcs	r6, r1
     328:	01060c05 	tsteq	r6, r5, lsl #24
     32c:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     330:	202e2e07 	eorcs	r2, lr, r7, lsl #28
     334:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     338:	051e0204 	ldreq	r0, [lr, #-516]	; 0xfffffdfc
     33c:	2e75030b 	cdpcs	3, 7, cr0, cr5, cr11, {0}
     340:	03060305 	movweq	r0, #25349	; 0x6305
     344:	05143c0f 	ldreq	r3, [r4, #-3087]	; 0xfffff3f1
     348:	05100619 	ldreq	r0, [r0, #-1561]	; 0xfffff9e7
     34c:	03054001 	movweq	r4, #20481	; 0x5001
     350:	20720306 	rsbscs	r0, r2, r6, lsl #6
     354:	06070514 			; <UNDEFINED> instruction: 0x06070514
     358:	06030501 	streq	r0, [r3], -r1, lsl #10
     35c:	0c051321 	stceq	3, cr1, [r5], {33}	; 0x21
     360:	07051606 	streq	r1, [r5, -r6, lsl #12]
     364:	0603051c 			; <UNDEFINED> instruction: 0x0603051c
     368:	060d052f 	streq	r0, [sp], -pc, lsr #10
     36c:	06030501 	streq	r0, [r3], -r1, lsl #10
     370:	060d0521 	streq	r0, [sp], -r1, lsr #10
     374:	03052e11 	movweq	r2, #24081	; 0x5e11
     378:	7fb40306 	svcvc	0x00b40306
     37c:	0b051520 	bleq	145804 <_Min_Stack_Size+0x145404>
     380:	03050106 	movweq	r0, #20742	; 0x5106
     384:	0b054b06 	bleq	152fa4 <_Min_Stack_Size+0x152ba4>
     388:	03050106 	movweq	r0, #20742	; 0x5106
     38c:	0b054b06 	bleq	152fac <_Min_Stack_Size+0x152bac>
     390:	03050106 	movweq	r0, #20742	; 0x5106
     394:	0b054b06 	bleq	152fb4 <_Min_Stack_Size+0x152bb4>
     398:	03050106 	movweq	r0, #20742	; 0x5106
     39c:	0b054b06 	bleq	152fbc <_Min_Stack_Size+0x152bbc>
     3a0:	03050106 	movweq	r0, #20742	; 0x5106
     3a4:	0b054b06 	bleq	152fc4 <_Min_Stack_Size+0x152bc4>
     3a8:	03050106 	movweq	r0, #20742	; 0x5106
     3ac:	05054d06 	streq	r4, [r5, #-3334]	; 0xfffff2fa
     3b0:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
     3b4:	01060d05 	tsteq	r6, r5, lsl #26
     3b8:	05051d23 	streq	r1, [r5, #-3363]	; 0xfffff2dd
     3bc:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
     3c0:	6f031106 	svcvs	0x00031106
     3c4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
     3c8:	4b03062c 	blmi	c1c80 <_Min_Stack_Size+0xc1880>
     3cc:	012d05c8 	smlawteq	sp, r8, r5, r0
     3d0:	01060105 	tsteq	r6, r5, lsl #2
     3d4:	22061a05 	andcs	r1, r6, #20480	; 0x5000
     3d8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     3dc:	04020008 	streq	r0, [r2], #-8
     3e0:	00010601 	andeq	r0, r1, r1, lsl #12
     3e4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     3e8:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     3ec:	04020010 	streq	r0, [r2], #-16
     3f0:	021f0602 	andseq	r0, pc, #2097152	; 0x200000
     3f4:	01010002 	tsteq	r1, r2
     3f8:	0f050204 	svceq	0x00050204
     3fc:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
     400:	03080017 	movweq	r0, #32791	; 0x8017
     404:	0305010e 	movweq	r0, #20750	; 0x510e
     408:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     40c:	21030511 	tstcs	r3, r1, lsl r5
     410:	052f3d06 	streq	r3, [pc, #-3334]!	; fffff712 <BootRAM+0xef6feb3>
     414:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     418:	015a0603 	cmpeq	sl, r3, lsl #12
     41c:	202e2e2e 	eorcs	r2, lr, lr, lsr #28
     420:	202e0120 	eorcs	r0, lr, r0, lsr #2
     424:	01160501 	tsteq	r6, r1, lsl #10
     428:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
     42c:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
     430:	29050120 	stmdbcs	r5, {r5, r8}
     434:	2e200101 	sufcss	f0, f0, f1
     438:	0120202e 			; <UNDEFINED> instruction: 0x0120202e
     43c:	0501202e 	streq	r2, [r1, #-46]	; 0xffffffd2
     440:	20011303 	andcs	r1, r1, r3, lsl #6
     444:	20202e01 	eorcs	r2, r0, r1, lsl #28
     448:	0120012e 			; <UNDEFINED> instruction: 0x0120012e
     44c:	01011805 	tsteq	r1, r5, lsl #16
     450:	20062006 	andcs	r2, r6, r6
     454:	20202e2e 	eorcs	r2, r0, lr, lsr #28
     458:	01202e01 			; <UNDEFINED> instruction: 0x01202e01
     45c:	01012c05 	tsteq	r1, r5, lsl #24
     460:	202e2e20 	eorcs	r2, lr, r0, lsr #28
     464:	202e0120 	eorcs	r0, lr, r0, lsr #2
     468:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     46c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     470:	01200612 			; <UNDEFINED> instruction: 0x01200612
     474:	012e2105 			; <UNDEFINED> instruction: 0x012e2105
     478:	012f0305 			; <UNDEFINED> instruction: 0x012f0305
     47c:	013c1305 	teqeq	ip, r5, lsl #6
     480:	2f3e0305 	svccs	0x003e0305
     484:	16050304 	strne	r0, [r5], -r4, lsl #6
     488:	01099903 	tsteq	r9, r3, lsl #18
     48c:	04013505 	streq	r3, [r1], #-1285	; 0xfffffafb
     490:	00030502 	andeq	r0, r3, r2, lsl #10
     494:	03010402 	movweq	r0, #5122	; 0x1402
     498:	052076eb 	streq	r7, [r0, #-1771]!	; 0xfffff915
     49c:	04020005 	streq	r0, [r2], #-5
     4a0:	0a021301 	beq	850ac <_Min_Stack_Size+0x84cac>
     4a4:	ce010100 	adfgts	f0, f1, f0
     4a8:	03000000 	movweq	r0, #0
     4ac:	00009600 	andeq	r9, r0, r0, lsl #12
     4b0:	fb010200 	blx	40cba <_Min_Stack_Size+0x408ba>
     4b4:	01000d0e 	tsteq	r0, lr, lsl #26
     4b8:	00010101 	andeq	r0, r1, r1, lsl #2
     4bc:	00010000 	andeq	r0, r1, r0
     4c0:	72730100 	rsbsvc	r0, r3, #0, 2
     4c4:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     4c8:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     4cc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     4d0:	752f0065 	strvc	r0, [pc, #-101]!	; 473 <_Min_Stack_Size+0x73>
     4d4:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 310 <_Min_Heap_Size+0x310>
     4d8:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     4dc:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     4e0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4e4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     4e8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4ec:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     4f0:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     4f4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     4f8:	00006564 	andeq	r6, r0, r4, ror #10
     4fc:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     500:	2e6b6369 	cdpcs	3, 6, cr6, cr11, cr9, {3}
     504:	00010063 	andeq	r0, r1, r3, rrx
     508:	726f6300 	rsbvc	r6, pc, #0, 6
     50c:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     510:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     514:	73000002 	movwvc	r0, #2
     518:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     51c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     520:	73000003 	movwvc	r0, #3
     524:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     528:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
     52c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
     530:	2e787831 	mrccs	8, 3, r7, cr8, cr1, {1}
     534:	00020068 	andeq	r0, r2, r8, rrx
     538:	73797300 	cmnvc	r9, #0, 6
     53c:	6b636974 	blvs	18dab14 <_Min_Stack_Size+0x18da714>
     540:	0100682e 	tsteq	r0, lr, lsr #16
     544:	05000000 	streq	r0, [r0, #-0]
     548:	02050014 	andeq	r0, r5, #20
     54c:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
     550:	14030517 	strne	r0, [r3], #-1303	; 0xfffffae9
     554:	01061a05 	tsteq	r6, r5, lsl #20
     558:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
     55c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     560:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     564:	17052f01 	strne	r2, [r5, -r1, lsl #30]
     568:	03053e06 	movweq	r3, #24070	; 0x5e06
     56c:	06130513 			; <UNDEFINED> instruction: 0x06130513
     570:	4b010501 	blmi	4197c <_Min_Stack_Size+0x4157c>
     574:	01000402 	tsteq	r0, r2, lsl #8
     578:	00081501 	andeq	r1, r8, r1, lsl #10
     57c:	a7000300 	strge	r0, [r0, -r0, lsl #6]
     580:	02000000 	andeq	r0, r0, #0
     584:	0d0efb01 	vstreq	d15, [lr, #-4]
     588:	01010100 	mrseq	r0, (UNDEF: 17)
     58c:	00000001 	andeq	r0, r0, r1
     590:	01000001 	tsteq	r0, r1
     594:	00637273 	rsbeq	r7, r3, r3, ror r2
     598:	2f62696c 	svccs	0x0062696c
     59c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     5a0:	00656475 	rsbeq	r6, r5, r5, ror r4
     5a4:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
     5a8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     5ac:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     5b0:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     5b4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     5b8:	61652d65 	cmnvs	r5, r5, ror #26
     5bc:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     5c0:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     5c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     5c8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     5cc:	73750000 	cmnvc	r5, #0
     5d0:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     5d4:	00632e62 	rsbeq	r2, r3, r2, ror #28
     5d8:	63000001 	movwvs	r0, #1
     5dc:	5f65726f 	svcpl	0x0065726f
     5e0:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
     5e4:	00020068 	andeq	r0, r2, r8, rrx
     5e8:	62737500 	rsbsvs	r7, r3, #0, 10
     5ec:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     5f0:	0100682e 	tsteq	r0, lr, lsr #16
     5f4:	74730000 	ldrbtvc	r0, [r3], #-0
     5f8:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     5fc:	0300682e 	movweq	r6, #2094	; 0x82e
     600:	74730000 	ldrbtvc	r0, [r3], #-0
     604:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
     608:	78313531 	ldmdavc	r1!, {r0, r4, r5, r8, sl, ip, sp}
     60c:	00682e63 	rsbeq	r2, r8, r3, ror #28
     610:	73000002 	movwvc	r0, #2
     614:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     618:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
     61c:	6c32336d 	ldcvs	3, cr3, [r2], #-436	; 0xfffffe4c
     620:	2e787831 	mrccs	8, 3, r7, cr8, cr1, {1}
     624:	00020068 	andeq	r0, r2, r8, rrx
     628:	31050000 	mrscc	r0, (UNDEF: 5)
     62c:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
     630:	03080003 	movweq	r0, #32771	; 0x8003
     634:	32050122 	andcc	r0, r5, #-2147483640	; 0x80000008
     638:	06010501 	streq	r0, [r1], -r1, lsl #10
     63c:	062b0501 	strteq	r0, [fp], -r1, lsl #10
     640:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
     644:	0105012c 	tsteq	r5, ip, lsr #2
     648:	5c050106 	stfpls	f0, [r5], {6}
     64c:	5d054e06 	stcpl	14, cr4, [r5, #-24]	; 0xffffffe8
     650:	06010501 	streq	r0, [r1], -r1, lsl #10
     654:	63052001 	movwvs	r2, #20481	; 0x5001
     658:	64052106 	strvs	r2, [r5], #-262	; 0xfffffefa
     65c:	06010501 	streq	r0, [r1], -r1, lsl #10
     660:	11052001 	tstne	r5, r1
     664:	20200306 	eorcs	r0, r0, r6, lsl #6
     668:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     66c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     670:	3c160347 	ldccc	3, cr0, [r6], {71}	; 0x47
     674:	6a031005 	bvs	c4690 <_Min_Stack_Size+0xc4290>
     678:	06030520 	streq	r0, [r3], -r0, lsr #10
     67c:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
     680:	06030501 	streq	r0, [r3], -r1, lsl #10
     684:	060f054b 	streq	r0, [pc], -fp, asr #10
     688:	06030501 	streq	r0, [r3], -r1, lsl #10
     68c:	05581103 	ldrbeq	r1, [r8, #-259]	; 0xfffffefd
     690:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     694:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
     698:	01060107 	tsteq	r6, r7, lsl #2
     69c:	05100d05 	ldreq	r0, [r0, #-3333]	; 0xfffff2fb
     6a0:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     6a4:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     6a8:	04020003 	streq	r0, [r2], #-3
     6ac:	05200603 	streq	r0, [r0, #-1539]!	; 0xfffff9fd
     6b0:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
     6b4:	37052e03 	strcc	r2, [r5, -r3, lsl #28]
     6b8:	03040200 	movweq	r0, #16896	; 0x4200
     6bc:	0003052e 	andeq	r0, r3, lr, lsr #10
     6c0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     6c4:	03040200 	movweq	r0, #16896	; 0x4200
     6c8:	002e052e 	eoreq	r0, lr, lr, lsr #10
     6cc:	06030402 	streq	r0, [r3], -r2, lsl #8
     6d0:	00030513 	andeq	r0, r3, r3, lsl r5
     6d4:	06030402 	streq	r0, [r3], -r2, lsl #8
     6d8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     6dc:	21062003 	tstcs	r6, r3
     6e0:	01060f05 	tsteq	r6, r5, lsl #30
     6e4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     6e8:	01060f05 	tsteq	r6, r5, lsl #30
     6ec:	2f060305 	svccs	0x00060305
     6f0:	01060f05 	tsteq	r6, r5, lsl #30
     6f4:	2f060305 	svccs	0x00060305
     6f8:	01060f05 	tsteq	r6, r5, lsl #30
     6fc:	2f060305 	svccs	0x00060305
     700:	01060f05 	tsteq	r6, r5, lsl #30
     704:	0603052e 	streq	r0, [r3], -lr, lsr #10
     708:	0502042f 	streq	r0, [r2, #-1071]	; 0xfffffbd1
     70c:	0aff0316 	beq	fffc136c <BootRAM+0xef31b0d>
     710:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     714:	01062705 	tsteq	r6, r5, lsl #14
     718:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
     71c:	81030603 	tsthi	r3, r3, lsl #12
     720:	0f050175 	svceq	0x00050175
     724:	01050106 	tsteq	r5, r6, lsl #2
     728:	064f055e 			; <UNDEFINED> instruction: 0x064f055e
     72c:	0800e203 	stmdaeq	r0, {r0, r1, r9, sp, lr, pc}
     730:	13030512 	movwne	r0, #13586	; 0x3512
     734:	11064f05 	tstne	r6, r5, lsl #30
     738:	05211805 	streq	r1, [r1, #-2053]!	; 0xfffff7fb
     73c:	18052209 	stmdane	r5, {r0, r3, r9, sp}
     740:	06030556 			; <UNDEFINED> instruction: 0x06030556
     744:	0514133d 	ldreq	r1, [r4, #-829]	; 0xfffffcc3
     748:	062e0605 	strteq	r0, [lr], -r5, lsl #12
     74c:	20060159 	andcs	r0, r6, r9, asr r1
     750:	95060305 	strls	r0, [r6, #-773]	; 0xfffffcfb
     754:	01060c05 	tsteq	r6, r5, lsl #24
     758:	21060305 	tstcs	r6, r5, lsl #6
     75c:	13061413 	movwne	r1, #25619	; 0x6413
     760:	052e063c 	streq	r0, [lr, #-1596]!	; 0xfffff9c4
     764:	1d055919 	vstrne.16	s10, [r5, #-50]	; 0xffffffce	; <UNPREDICTABLE>
     768:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     76c:	77030605 	strvc	r0, [r3, -r5, lsl #12]
     770:	07050120 	streq	r0, [r5, -r0, lsr #2]
     774:	1205b306 	andne	fp, r5, #402653184	; 0x18000000
     778:	06030533 			; <UNDEFINED> instruction: 0x06030533
     77c:	06120530 			; <UNDEFINED> instruction: 0x06120530
     780:	06030501 	streq	r0, [r3], -r1, lsl #10
     784:	06050522 	streq	r0, [r5], -r2, lsr #10
     788:	0567064a 	strbeq	r0, [r7, #-1610]!	; 0xfffff9b6
     78c:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     790:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     794:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     798:	16052107 	strne	r2, [r5], -r7, lsl #2
     79c:	0605052d 	streq	r0, [r5], -sp, lsr #10
     7a0:	0607052f 	streq	r0, [r7], -pc, lsr #10
     7a4:	5806212e 	stmdapl	r6, {r1, r2, r3, r5, r8, sp}
     7a8:	05013e01 	streq	r3, [r1, #-3585]	; 0xfffff1ff
     7ac:	0f03060c 	svceq	0x0003060c
     7b0:	1e05052e 	cfsh32ne	mvfx0, mvfx5, #30
     7b4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     7b8:	01060c05 	tsteq	r6, r5, lsl #24
     7bc:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
     7c0:	65030619 	strvs	r0, [r3, #-1561]	; 0xfffff9e7
     7c4:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
     7c8:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     7cc:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     7d0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     7d4:	0d030605 	stceq	6, cr0, [r3, #-20]	; 0xffffffec
     7d8:	06230520 	strteq	r0, [r3], -r0, lsr #10
     7dc:	06050501 	streq	r0, [r5], -r1, lsl #10
     7e0:	06260521 	strteq	r0, [r6], -r1, lsr #10
     7e4:	1f070513 	svcne	0x00070513
     7e8:	26052106 	strcs	r2, [r5], -r6, lsl #2
     7ec:	31391506 	teqcc	r9, r6, lsl #10
     7f0:	0607051d 			; <UNDEFINED> instruction: 0x0607051d
     7f4:	06270521 	strteq	r0, [r7], -r1, lsr #10
     7f8:	2e330516 	mrccs	5, 1, r0, cr3, cr6, {0}
     7fc:	052a2e05 	streq	r2, [sl, #-3589]!	; 0xfffff1fb
     800:	13300607 	teqne	r0, #7340032	; 0x700000
     804:	06330513 			; <UNDEFINED> instruction: 0x06330513
     808:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
     80c:	05301705 	ldreq	r1, [r0, #-1797]!	; 0xfffff8fb
     810:	05051e27 	streq	r1, [r5, #-3623]	; 0xfffff1d9
     814:	17053006 	strne	r3, [r5, -r6]
     818:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     81c:	06012f06 	streq	r2, [r1], -r6, lsl #30
     820:	06560520 	ldrbeq	r0, [r6], -r0, lsr #10
     824:	03052508 	movweq	r2, #21768	; 0x5508
     828:	06560513 			; <UNDEFINED> instruction: 0x06560513
     82c:	25030511 	strcs	r0, [r3, #-1297]	; 0xfffffaef
     830:	052c0905 	streq	r0, [ip, #-2309]!	; 0xfffff6fb
     834:	18053003 	stmdane	r5, {r0, r1, ip, sp}
     838:	2403051c 	strcs	r0, [r3], #-1308	; 0xfffffae4
     83c:	05461805 	strbeq	r1, [r6, #-2053]	; 0xfffff7fb
     840:	133d0603 	teqne	sp, #3145728	; 0x300000
     844:	28060114 	stmdacs	r6, {r2, r4, r8}
     848:	06207803 	strteq	r7, [r0], -r3, lsl #16
     84c:	05a00191 	streq	r0, [r0, #401]!	; 0x191
     850:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     854:	13210603 			; <UNDEFINED> instruction: 0x13210603
     858:	062e0614 			; <UNDEFINED> instruction: 0x062e0614
     85c:	4b19052f 	blmi	641d20 <_Min_Stack_Size+0x641920>
     860:	01061d05 	tsteq	r6, r5, lsl #26
     864:	3112052e 	tstcc	r2, lr, lsr #10
     868:	30060305 	andcc	r0, r6, r5, lsl #6
     86c:	01061205 	tsteq	r6, r5, lsl #4
     870:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
     874:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
     878:	2106742e 	tstcs	r6, lr, lsr #8
     87c:	13062405 	movwne	r2, #25605	; 0x6405
     880:	052d2305 	streq	r2, [sp, #-773]!	; 0xfffffcfb
     884:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     888:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
     88c:	052f0605 	streq	r0, [pc, #-1541]!	; 28f <_Min_Heap_Size+0x28f>
     890:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     894:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     898:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
     89c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     8a0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     8a4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     8a8:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
     8ac:	0d030505 	cfstr32eq	mvfx0, [r3, #-20]	; 0xffffffec
     8b0:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
     8b4:	06140522 	ldreq	r0, [r4], -r2, lsr #10
     8b8:	230c0501 	movwcs	r0, #50433	; 0xc501
     8bc:	052b1405 	streq	r1, [fp, #-1029]!	; 0xfffffbfb
     8c0:	052f0603 	streq	r0, [pc, #-1539]!	; 2c5 <_Min_Heap_Size+0x2c5>
     8c4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     8c8:	1405220c 	strne	r2, [r5], #-524	; 0xfffffdf4
     8cc:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
     8d0:	06010530 			; <UNDEFINED> instruction: 0x06010530
     8d4:	06190513 			; <UNDEFINED> instruction: 0x06190513
     8d8:	05205e03 	streq	r5, [r0, #-3587]!	; 0xfffff1fd
     8dc:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     8e0:	21061905 	tstcs	r6, r5, lsl #18
     8e4:	01061d05 	tsteq	r6, r5, lsl #26
     8e8:	060e052e 	streq	r0, [lr], -lr, lsr #10
     8ec:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     8f0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     8f4:	200f0306 	andcs	r0, pc, r6, lsl #6
     8f8:	01062305 	tsteq	r6, r5, lsl #6
     8fc:	21060505 	tstcs	r6, r5, lsl #10
     900:	13060705 	movwne	r0, #26373	; 0x6705
     904:	051f2305 	ldreq	r2, [pc, #-773]	; 607 <_Min_Stack_Size+0x207>
     908:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     90c:	05130647 	ldreq	r0, [r3, #-1607]	; 0xfffff9b9
     910:	21061f07 	tstcs	r6, r7, lsl #30
     914:	01064705 	tsteq	r6, r5, lsl #14
     918:	053c2605 	ldreq	r2, [ip, #-1541]!	; 0xfffff9fb
     91c:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
     920:	05010650 	streq	r0, [r1, #-1616]	; 0xfffff9b0
     924:	27053249 	strcs	r3, [r5, -r9, asr #4]
     928:	06050566 	streq	r0, [r5], -r6, ror #10
     92c:	019f0168 	orrseq	r0, pc, r8, ror #2
     930:	05990705 	ldreq	r0, [r9, #1797]	; 0x705
     934:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
     938:	07053c26 	streq	r3, [r5, -r6, lsr #24]
     93c:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
     940:	05010655 	streq	r0, [r1, #-1621]	; 0xfffff9ab
     944:	0d030619 	stceq	6, cr0, [r3, #-100]	; 0xffffff9c
     948:	130305c8 	movwne	r0, #13768	; 0x35c8
     94c:	11061905 	tstne	r6, r5, lsl #18
     950:	052f0905 	streq	r0, [pc, #-2309]!	; 53 <_Min_Heap_Size+0x53>
     954:	13053c05 	movwne	r3, #23557	; 0x5c05
     958:	24120532 	ldrcs	r0, [r2], #-1330	; 0xffffface
     95c:	03060505 	movweq	r0, #25861	; 0x6505
     960:	07052e79 	smlsdxeq	r5, r9, lr, r2
     964:	061a0513 			; <UNDEFINED> instruction: 0x061a0513
     968:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
     96c:	2f060705 	svccs	0x00060705
     970:	01060a05 	tsteq	r6, r5, lsl #20
     974:	06660905 	strbteq	r0, [r6], -r5, lsl #18
     978:	05014b2f 	streq	r4, [r1, #-2863]	; 0xfffff4d1
     97c:	0a058407 	beq	1619a0 <_Min_Stack_Size+0x1615a0>
     980:	09050106 	stmdbeq	r5, {r1, r2, r8}
     984:	592f0620 	stmdbpl	pc!, {r5, r9, sl}	; <UNPREDICTABLE>
     988:	060f0501 	streq	r0, [pc], -r1, lsl #10
     98c:	2e050584 	cfsh32cs	mvfx0, mvfx5, #-60
     990:	27030105 	strcs	r0, [r3, -r5, lsl #2]
     994:	0603052e 	streq	r0, [r3], -lr, lsr #10
     998:	052e5d03 	streq	r5, [lr, #-3331]!	; 0xfffff2fd
     99c:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     9a0:	2f062e05 	svccs	0x00062e05
     9a4:	060f052f 	streq	r0, [pc], -pc, lsr #10
     9a8:	06050501 	streq	r0, [r5], -r1, lsl #10
     9ac:	2303054b 	movwcs	r0, #13643	; 0x354b
     9b0:	01060905 	tsteq	r6, r5, lsl #18
     9b4:	062e0505 	strteq	r0, [lr], -r5, lsl #10
     9b8:	3007052f 	andcc	r0, r7, pc, lsr #10
     9bc:	01061105 	tsteq	r6, r5, lsl #2
     9c0:	05320e05 	ldreq	r0, [r2, #-3589]!	; 0xfffff1fb
     9c4:	05051c11 	streq	r1, [r5, #-3089]	; 0xfffff3ef
     9c8:	0e053206 	cdpeq	2, 0, cr3, cr5, cr6, {0}
     9cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     9d0:	10053d06 	andne	r3, r5, r6, lsl #26
     9d4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     9d8:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     9dc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     9e0:	49051110 	stmdbmi	r5, {r4, r8, ip}
     9e4:	002c052f 	eoreq	r0, ip, pc, lsr #10
     9e8:	06030402 	streq	r0, [r3], -r2, lsl #8
     9ec:	00050520 	andeq	r0, r5, r0, lsr #10
     9f0:	06030402 	streq	r0, [r3], -r2, lsl #8
     9f4:	00490520 	subeq	r0, r9, r0, lsr #10
     9f8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     9fc:	02003905 	andeq	r3, r0, #81920	; 0x14000
     a00:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     a04:	04020005 	streq	r0, [r2], #-5
     a08:	23062e03 	movwcs	r2, #28163	; 0x6e03
     a0c:	01060f05 	tsteq	r6, r5, lsl #30
     a10:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
     a14:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     a18:	67592f06 	ldrbvs	r2, [r9, -r6, lsl #30]
     a1c:	01060d05 	tsteq	r6, r5, lsl #26
     a20:	2f060505 	svccs	0x00060505
     a24:	05310305 	ldreq	r0, [r1, #-773]!	; 0xfffffcfb
     a28:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     a2c:	2f063c05 	svccs	0x00063c05
     a30:	060f052f 	streq	r0, [pc], -pc, lsr #10
     a34:	06050501 	streq	r0, [r5], -r1, lsl #10
     a38:	060f0567 	streq	r0, [pc], -r7, ror #10
     a3c:	06030501 	streq	r0, [r3], -r1, lsl #10
     a40:	0609054d 	streq	r0, [r9], -sp, asr #10
     a44:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
     a48:	0f052f06 	svceq	0x00052f06
     a4c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     a50:	0f058306 	svceq	0x00058306
     a54:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
     a58:	08110306 	ldmdaeq	r1, {r1, r2, r8, r9}
     a5c:	13030558 	movwne	r0, #13656	; 0x3558
     a60:	11064405 	tstne	r6, r5, lsl #8
     a64:	05260305 	streq	r0, [r6, #-773]!	; 0xfffffcfb
     a68:	10051b33 	andne	r1, r5, r3, lsr fp
     a6c:	06030520 	streq	r0, [r3], -r0, lsr #10
     a70:	0651054b 	ldrbeq	r0, [r1], -fp, asr #10
     a74:	1d170515 	cfldr32ne	mvfx0, [r7, #-84]	; 0xffffffac
     a78:	05234a05 	streq	r4, [r3, #-2565]!	; 0xfffff5fb
     a7c:	0305470c 	movweq	r4, #22284	; 0x570c
     a80:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
     a84:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
     a88:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     a8c:	03050107 	movweq	r0, #20743	; 0x5107
     a90:	01040200 	mrseq	r0, R12_usr
     a94:	3f060106 	svccc	0x00060106
     a98:	05201406 	streq	r1, [r0, #-1030]!	; 0xfffffbfa
     a9c:	03053a10 	movweq	r3, #23056	; 0x5a10
     aa0:	06012206 	streq	r2, [r1], -r6, lsl #4
     aa4:	9101053c 	tstls	r1, ip, lsr r5
     aa8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     aac:	1b060304 	blne	1816c4 <_Min_Stack_Size+0x1812c4>
     ab0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
     ab4:	01060304 	tsteq	r6, r4, lsl #6
     ab8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     abc:	002e0304 	eoreq	r0, lr, r4, lsl #6
     ac0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     ac4:	03040200 	movweq	r0, #16896	; 0x4200
     ac8:	06220520 	strteq	r0, [r2], -r0, lsr #10
     acc:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
     ad0:	03080008 	movweq	r0, #32776	; 0x8008
     ad4:	05017df5 	streq	r7, [r1, #-3573]	; 0xfffff20b
     ad8:	22051303 	andcs	r1, r5, #201326592	; 0xc000000
     adc:	0e051106 	adfeqs	f1, f5, f6
     ae0:	2e050521 	cfsh32cs	mvfx0, mvfx5, #17
     ae4:	21060305 	tstcs	r6, r5, lsl #6
     ae8:	01060c05 	tsteq	r6, r5, lsl #24
     aec:	21060305 	tstcs	r6, r5, lsl #6
     af0:	03060304 	movweq	r0, #25348	; 0x6304
     af4:	580100c6 	stmdapl	r1, {r1, r2, r6, r7}
     af8:	03060104 	movweq	r0, #24836	; 0x6104
     afc:	04017fbb 	streq	r7, [r1], #-4027	; 0xfffff045
     b00:	03140503 	tsteq	r4, #12582912	; 0xc00000
     b04:	050100c4 	streq	r0, [r1, #-196]	; 0xffffff3c
     b08:	20061303 	andcs	r1, r6, r3, lsl #6
     b0c:	0601043c 			; <UNDEFINED> instruction: 0x0601043c
     b10:	017fbd03 	cmneq	pc, r3, lsl #26
     b14:	15060505 	strne	r0, [r6, #-1285]	; 0xfffffafb
     b18:	051d0d05 	ldreq	r0, [sp, #-3333]	; 0xfffff2fb
     b1c:	143d0603 	ldrtne	r0, [sp], #-1539	; 0xfffff9fd
     b20:	13060d05 	movwne	r0, #27909	; 0x6d05
     b24:	052b0b05 	streq	r0, [fp, #-2821]!	; 0xfffff4fb
     b28:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
     b2c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     b30:	2d052201 	sfmcs	f2, 4, [r5, #-4]
     b34:	02860306 	addeq	r0, r6, #402653184	; 0x18000000
     b38:	1303053c 	movwne	r0, #13628	; 0x353c
     b3c:	11062d05 	tstne	r6, r5, lsl #26
     b40:	05213305 	streq	r3, [r1, #-773]!	; 0xfffffcfb
     b44:	03052010 	movweq	r2, #20496	; 0x5010
     b48:	2d054b06 	vstrcs	d4, [r5, #-24]	; 0xffffffe8
     b4c:	11051006 	tstne	r5, r6
     b50:	03052022 	movweq	r2, #20514	; 0x5022
     b54:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
     b58:	03050106 	movweq	r0, #20742	; 0x5106
     b5c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
     b60:	05010650 	streq	r0, [r1, #-1616]	; 0xfffff9b0
     b64:	49051f0f 	stmdbmi	r5, {r0, r1, r2, r3, r8, r9, sl, fp, ip}
     b68:	06030521 	streq	r0, [r3], -r1, lsr #10
     b6c:	01070559 	tsteq	r7, r9, asr r5
     b70:	20100106 	andscs	r0, r0, r6, lsl #2
     b74:	00050520 	andeq	r0, r5, r0, lsr #10
     b78:	06030402 	streq	r0, [r3], -r2, lsl #8
     b7c:	000e0531 	andeq	r0, lr, r1, lsr r5
     b80:	06030402 	streq	r0, [r3], -r2, lsl #8
     b84:	00030501 	andeq	r0, r3, r1, lsl #10
     b88:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     b8c:	02000c05 	andeq	r0, r0, #1280	; 0x500
     b90:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
     b94:	04020003 	streq	r0, [r2], #-3
     b98:	23062d03 	movwcs	r2, #27907	; 0x6d03
     b9c:	66200601 	strtvs	r0, [r0], -r1, lsl #12
     ba0:	01059106 	tsteq	r5, r6, lsl #2
     ba4:	23051306 	movwcs	r1, #21254	; 0x5306
     ba8:	7df90306 	ldclvc	3, cr0, [r9, #24]!
     bac:	13030520 	movwne	r0, #13600	; 0x3520
     bb0:	06230513 			; <UNDEFINED> instruction: 0x06230513
     bb4:	16052210 			; <UNDEFINED> instruction: 0x16052210
     bb8:	3b23053d 	blcc	8c20b4 <_Min_Stack_Size+0x8c1cb4>
     bbc:	2f060305 	svccs	0x00060305
     bc0:	06050514 			; <UNDEFINED> instruction: 0x06050514
     bc4:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
     bc8:	2e010607 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx7
     bcc:	03042f06 	movweq	r2, #20230	; 0x4f06
     bd0:	38031305 	stmdacc	r3, {r0, r2, r8, r9, ip}
     bd4:	13030501 	movwne	r0, #13569	; 0x3501
     bd8:	11050104 	tstne	r5, r4, lsl #2
     bdc:	01480306 	cmpeq	r8, r6, lsl #6
     be0:	0a050304 	beq	1417f8 <_Min_Stack_Size+0x1413f8>
     be4:	2e203803 	cdpcs	8, 2, cr3, cr0, cr3, {0}
     be8:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
     bec:	48030607 	stmdami	r3, {r0, r1, r2, r9, sl}
     bf0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
     bf4:	06070501 	streq	r0, [r7], -r1, lsl #10
     bf8:	03030521 	movweq	r0, #13601	; 0x3521
     bfc:	1d05010a 	stfnes	f0, [r5, #-40]	; 0xffffffd8
     c00:	0b050106 	bleq	141020 <_Min_Stack_Size+0x140c20>
     c04:	06030520 	streq	r0, [r3], -r0, lsr #10
     c08:	06050530 			; <UNDEFINED> instruction: 0x06050530
     c0c:	05300601 	ldreq	r0, [r0, #-1537]!	; 0xfffff9ff
     c10:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     c14:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     c18:	06010607 	streq	r0, [r1], -r7, lsl #12
     c1c:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
     c20:	20070501 	andcs	r0, r7, r1, lsl #10
     c24:	03060b05 	movweq	r0, #27397	; 0x6b05
     c28:	0304580a 	movweq	r5, #18442	; 0x480a
     c2c:	0f031405 	svceq	0x00031405
     c30:	13030501 	movwne	r0, #13569	; 0x3501
     c34:	043c2e06 	ldrteq	r2, [ip], #-3590	; 0xfffff1fa
     c38:	06070501 	streq	r0, [r7], -r1, lsl #10
     c3c:	05015803 	streq	r5, [r1, #-2051]	; 0xfffff7fd
     c40:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     c44:	1003060b 	andne	r0, r3, fp, lsl #12
     c48:	06170558 			; <UNDEFINED> instruction: 0x06170558
     c4c:	220b0501 	andcs	r0, fp, #4194304	; 0x400000
     c50:	051e1705 	ldreq	r1, [lr, #-1797]	; 0xfffff8fb
     c54:	0621060b 	strteq	r0, [r1], -fp, lsl #12
     c58:	3b140513 	blcc	5020ac <_Min_Stack_Size+0x501cac>
     c5c:	2f060b05 	svccs	0x00060b05
     c60:	0305052f 	movweq	r0, #21807	; 0x552f
     c64:	0705010f 	streq	r0, [r5, -pc, lsl #2]
     c68:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     c6c:	0303052e 	movweq	r0, #13614	; 0x352e
     c70:	0705204e 	streq	r2, [r5, -lr, asr #32]
     c74:	05203203 	streq	r3, [r0, #-515]!	; 0xfffffdfd
     c78:	05200625 	streq	r0, [r0, #-1573]!	; 0xfffff9db
     c7c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
     c80:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     c84:	014a0314 	cmpeq	sl, r4, lsl r3
     c88:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     c8c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     c90:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     c94:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     c98:	062f0603 	strteq	r0, [pc], -r3, lsl #12
     c9c:	0301052e 	movweq	r0, #5422	; 0x152e
     ca0:	050100c9 	streq	r0, [r1, #-201]	; 0xffffff37
     ca4:	6203060b 	andvs	r0, r3, #11534336	; 0xb00000
     ca8:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
     cac:	010c0314 	tsteq	ip, r4, lsl r3
     cb0:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     cb4:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
     cb8:	77030605 	strvc	r0, [r3, -r5, lsl #12]
     cbc:	060b0501 	streq	r0, [fp], -r1, lsl #10
     cc0:	05052001 	streq	r2, [r5, #-1]
     cc4:	0e052106 	adfeqs	f2, f5, f6
     cc8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     ccc:	490e0521 	stmdbmi	lr, {r0, r5, r8, sl}
     cd0:	2f060505 	svccs	0x00060505
     cd4:	06202e06 	strteq	r2, [r0], -r6, lsl #28
     cd8:	06070517 			; <UNDEFINED> instruction: 0x06070517
     cdc:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     ce0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     ce4:	2f062009 	svccs	0x00062009
     ce8:	03050304 	movweq	r0, #21252	; 0x5304
     cec:	01040106 	tsteq	r4, r6, lsl #2
     cf0:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
     cf4:	04210609 	strteq	r0, [r1], #-1545	; 0xfffff9f7
     cf8:	10140503 	andsne	r0, r4, r3, lsl #10
     cfc:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     d00:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
     d04:	42051411 	andmi	r1, r5, #285212672	; 0x11000000
     d08:	01040200 	mrseq	r0, R12_usr
     d0c:	11052006 	tstne	r5, r6
     d10:	01040200 	mrseq	r0, R12_usr
     d14:	0e050106 	adfeqs	f0, f5, f6
     d18:	01040200 	mrseq	r0, R12_usr
     d1c:	06090520 	streq	r0, [r9], -r0, lsr #10
     d20:	0614054b 	ldreq	r0, [r4], -fp, asr #10
     d24:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
     d28:	20062f06 	andcs	r2, r6, r6, lsl #30
     d2c:	13060d05 	movwne	r0, #27909	; 0x6d05
     d30:	01060f05 	tsteq	r6, r5, lsl #30
     d34:	2f060905 	svccs	0x00060905
     d38:	01061705 	tsteq	r6, r5, lsl #14
     d3c:	2f060905 	svccs	0x00060905
     d40:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     d44:	05017803 	streq	r7, [r1, #-2051]	; 0xfffff7fd
     d48:	01061303 	tsteq	r6, r3, lsl #6
     d4c:	2c050104 	stfcss	f0, [r5], {4}
     d50:	010f0306 	tsteq	pc, r6, lsl #6
     d54:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     d58:	05017003 	streq	r7, [r1, #-3]
     d5c:	4a061303 	bmi	185970 <_Min_Stack_Size+0x185570>
     d60:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
     d64:	010b0306 	tsteq	fp, r6, lsl #6
     d68:	01060905 	tsteq	r6, r5, lsl #18
     d6c:	06580705 	ldrbeq	r0, [r8], -r5, lsl #14
     d70:	05050121 	streq	r0, [r5, #-289]	; 0xfffffedf
     d74:	060f05ae 	streq	r0, [pc], -lr, lsr #11
     d78:	2f070501 	svccs	0x00070501
     d7c:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffffe7f <BootRAM+0xef70620>
     d80:	0f052107 	svceq	0x00052107
     d84:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     d88:	06070521 	streq	r0, [r7], -r1, lsr #10
     d8c:	000f0201 	andeq	r0, pc, r1, lsl #4
     d90:	07940101 	ldreq	r0, [r4, r1, lsl #2]
     d94:	00030000 	andeq	r0, r3, r0
     d98:	00000136 	andeq	r0, r0, r6, lsr r1
     d9c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     da0:	0101000d 	tsteq	r1, sp
     da4:	00000101 	andeq	r0, r0, r1, lsl #2
     da8:	00000100 	andeq	r0, r0, r0, lsl #2
     dac:	63727301 	cmnvs	r2, #67108864	; 0x4000000
     db0:	62696c00 	rsbvs	r6, r9, #0, 24
     db4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     db8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     dbc:	73752f00 	cmnvc	r5, #0, 30
     dc0:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     dc4:	63672f62 	cmnvs	r7, #392	; 0x188
     dc8:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
     dcc:	6f6e2d6d 	svcvs	0x006e2d6d
     dd0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     dd4:	2f696261 	svccs	0x00696261
     dd8:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
     ddc:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
     de0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     de4:	752f0065 	strvc	r0, [pc, #-101]!	; d87 <_Min_Stack_Size+0x987>
     de8:	692f7273 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     dec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     df0:	6e2f6564 	cfsh64vs	mvdx6, mvdx15, #52
     df4:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     df8:	79732f62 	ldmdbvc	r3!, {r1, r5, r6, r8, r9, sl, fp, sp}^
     dfc:	63000073 	movwvs	r0, #115	; 0x73
     e00:	7373616c 	cmnvc	r3, #108, 2
     e04:	63696d5f 	cmnvs	r9, #6080	; 0x17c0
     e08:	0100682e 	tsteq	r0, lr, lsr #16
     e0c:	73750000 	cmnvc	r5, #0
     e10:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     e14:	00682e62 	rsbeq	r2, r8, r2, ror #28
     e18:	63000001 	movwvs	r0, #1
     e1c:	7373616c 	cmnvc	r3, #108, 2
     e20:	6469685f 	strbtvs	r6, [r9], #-2143	; 0xfffff7a1
     e24:	0100682e 	tsteq	r0, lr, lsr #16
     e28:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     e2c:	63697473 	cmnvs	r9, #1929379840	; 0x73000000
     e30:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     e34:	75000001 	strvc	r0, [r0, #-1]
     e38:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     e3c:	7373616c 	cmnvc	r3, #108, 2
     e40:	0100632e 	tsteq	r0, lr, lsr #6
     e44:	6f630000 	svcvs	0x00630000
     e48:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     e4c:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
     e50:	00000200 	andeq	r0, r0, r0, lsl #4
     e54:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     e58:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     e5c:	00000300 	andeq	r0, r0, r0, lsl #6
     e60:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e64:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
     e68:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     e6c:	00020068 	andeq	r0, r2, r8, rrx
     e70:	73797300 	cmnvc	r9, #0, 6
     e74:	5f6d6574 	svcpl	0x006d6574
     e78:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e7c:	78316c32 	ldmdavc	r1!, {r1, r4, r5, sl, fp, sp, lr}
     e80:	00682e78 	rsbeq	r2, r8, r8, ror lr
     e84:	73000002 	movwvc	r0, #2
     e88:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     e8c:	00682e66 	rsbeq	r2, r8, r6, ror #28
     e90:	5f000003 	svcpl	0x00000003
     e94:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     e98:	00682e73 	rsbeq	r2, r8, r3, ror lr
     e9c:	72000004 	andvc	r0, r0, #4
     ea0:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     ea4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     ea8:	6f6c0000 	svcvs	0x006c0000
     eac:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     eb0:	00000400 	andeq	r0, r0, r0, lsl #8
     eb4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     eb8:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     ebc:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
     ec0:	00000100 	andeq	r0, r0, r0, lsl #2
     ec4:	5f627375 	svcpl	0x00627375
     ec8:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
     ecc:	00010068 	andeq	r0, r1, r8, rrx
     ed0:	2b050000 	blcs	140ed8 <_Min_Stack_Size+0x140ad8>
     ed4:	10020500 	andne	r0, r2, r0, lsl #10
     ed8:	0308000a 	movweq	r0, #32778	; 0x800a
     edc:	03050111 	movweq	r0, #20753	; 0x5111
     ee0:	05020413 	streq	r0, [r2, #-1043]	; 0xfffffbed
     ee4:	a6030609 	strge	r0, [r3], -r9, lsl #12
     ee8:	042e0101 	strteq	r0, [lr], #-257	; 0xfffffeff
     eec:	032b0501 			; <UNDEFINED> instruction: 0x032b0501
     ef0:	04017ed9 	streq	r7, [r1], #-3801	; 0xfffff127
     ef4:	03150502 	tsteq	r5, #8388608	; 0x800000
     ef8:	042001a8 	strteq	r0, [r0], #-424	; 0xfffffe58
     efc:	033a0501 	teqeq	sl, #4194304	; 0x400000
     f00:	04207ed9 	strteq	r7, [r0], #-3801	; 0xfffff127
     f04:	03150502 	tsteq	r5, #8388608	; 0x800000
     f08:	042001a7 	strteq	r0, [r0], #-423	; 0xfffffe59
     f0c:	033a0501 	teqeq	sl, #4194304	; 0x400000
     f10:	044a7ed9 	strbeq	r7, [sl], #-3801	; 0xfffff127
     f14:	06140502 	ldreq	r0, [r4], -r2, lsl #10
     f18:	2001a503 	andcs	sl, r1, r3, lsl #10
     f1c:	13130305 	tstne	r3, #335544320	; 0x14000000
     f20:	01061505 	tsteq	r6, r5, lsl #10
     f24:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
     f28:	03051e0b 	movweq	r1, #24075	; 0x5e0b
     f2c:	01132f06 	tsteq	r3, r6, lsl #30
     f30:	3a050104 	bcc	141348 <_Min_Stack_Size+0x140f48>
     f34:	7ed70306 	cdpvc	3, 13, cr0, cr7, cr6, {0}
     f38:	05020482 	streq	r0, [r2, #-1154]	; 0xfffffb7e
     f3c:	01a90303 			; <UNDEFINED> instruction: 0x01a90303
     f40:	06210620 	strteq	r0, [r1], -r0, lsr #12
     f44:	01042e4a 	tsteq	r4, sl, asr #28
     f48:	7ed70306 	cdpvc	3, 13, cr0, cr7, cr6, {0}
     f4c:	060b0501 	streq	r0, [fp], -r1, lsl #10
     f50:	2f010501 	svccs	0x00010501
     f54:	03062805 	movweq	r2, #26629	; 0x6805
     f58:	0305662d 	movweq	r6, #22061	; 0x562d
     f5c:	2f051313 	svccs	0x00051313
     f60:	0a050106 	beq	141380 <_Min_Stack_Size+0x140f80>
     f64:	03054a2e 	movweq	r4, #23086	; 0x5a2e
     f68:	01052106 	tsteq	r5, r6, lsl #2
     f6c:	24051306 	strcs	r1, [r5], #-774	; 0xfffffcfa
     f70:	03055b06 	movweq	r5, #23302	; 0x5b06
     f74:	1d051313 	stcne	3, cr1, [r5, #-76]	; 0xffffffb4
     f78:	0a050106 	beq	141398 <_Min_Stack_Size+0x140f98>
     f7c:	03053c2e 	movweq	r3, #23598	; 0x5c2e
     f80:	01052106 	tsteq	r5, r6, lsl #2
     f84:	27051306 	strcs	r1, [r5, -r6, lsl #6]
     f88:	03056906 	movweq	r6, #22790	; 0x5906
     f8c:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
     f90:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
     f94:	05240617 	streq	r0, [r4, #-1559]!	; 0xfffff9e9
     f98:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
     f9c:	0d061705 	stceq	7, cr1, [r6, #-20]	; 0xffffffec
     fa0:	05251405 	streq	r1, [r5, #-1029]!	; 0xfffffbfb
     fa4:	19052e05 	stmdbne	r5, {r0, r2, r9, sl, fp, sp}
     fa8:	01040200 	mrseq	r0, R12_usr
     fac:	20052006 	andcs	r2, r5, r6
     fb0:	01040200 	mrseq	r0, R12_usr
     fb4:	03050106 	movweq	r0, #20742	; 0x5106
     fb8:	11052106 	tstne	r5, r6, lsl #2
     fbc:	10050106 	andne	r0, r5, r6, lsl #2
     fc0:	1f110521 	svcne	0x00110521
     fc4:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
     fc8:	0a052110 	beq	149410 <_Min_Stack_Size+0x149010>
     fcc:	3005051f 	andcc	r0, r5, pc, lsl r5
     fd0:	051e0a05 	ldreq	r0, [lr, #-2565]	; 0xfffff5fb
     fd4:	13210603 			; <UNDEFINED> instruction: 0x13210603
     fd8:	01060505 	tsteq	r6, r5, lsl #10
     fdc:	051f1005 	ldreq	r1, [pc, #-5]	; fdf <_Min_Stack_Size+0xbdf>
     fe0:	20180301 	andscs	r0, r8, r1, lsl #6
     fe4:	03060305 	movweq	r0, #25349	; 0x6305
     fe8:	1105206a 	tstne	r5, sl, rrx
     fec:	0a050106 	beq	14140c <_Min_Stack_Size+0x14100c>
     ff0:	23140521 	tstcs	r4, #138412032	; 0x8400000
     ff4:	051c1105 	ldreq	r1, [ip, #-261]	; 0xfffffefb
     ff8:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     ffc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1000:	03220603 			; <UNDEFINED> instruction: 0x03220603
    1004:	1313016d 	tstne	r3, #1073741851	; 0x4000001b
    1008:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    100c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1010:	142f0603 	strtne	r0, [pc], #-1539	; 1018 <_Min_Stack_Size+0xc18>
    1014:	060e0516 			; <UNDEFINED> instruction: 0x060e0516
    1018:	20050501 	andcs	r0, r5, r1, lsl #10
    101c:	0f052f06 	svceq	0x00052f06
    1020:	0a050106 	beq	141440 <_Min_Stack_Size+0x141040>
    1024:	22207903 	eorcs	r7, r0, #49152	; 0xc000
    1028:	05251905 	streq	r1, [r5, #-2309]!	; 0xfffff6fb
    102c:	1905200f 	stmdbne	r5, {r0, r1, r2, r3, sp}
    1030:	06050520 	streq	r0, [r5], -r0, lsr #10
    1034:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
    1038:	06030501 	streq	r0, [r3], -r1, lsl #10
    103c:	060f054f 	streq	r0, [pc], -pc, asr #10
    1040:	230c0501 	movwcs	r0, #50433	; 0xc501
    1044:	051d0505 	ldreq	r0, [sp, #-1285]	; 0xfffffafb
    1048:	05200614 	streq	r0, [r0, #-1556]!	; 0xfffff9ec
    104c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    1050:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
    1054:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1058:	03053c0d 	movweq	r3, #23565	; 0x5c0d
    105c:	0c053006 	stceq	0, cr3, [r5], {6}
    1060:	0f050106 	svceq	0x00050106
    1064:	02050006 	andeq	r0, r5, #6
    1068:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
    106c:	13030515 	movwne	r0, #13589	; 0x3515
    1070:	01061005 	tsteq	r6, r5
    1074:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    1078:	060c052f 	streq	r0, [ip], -pc, lsr #10
    107c:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
    1080:	0b054106 	bleq	1514a0 <_Min_Stack_Size+0x1510a0>
    1084:	10050106 	andne	r0, r5, r6, lsl #2
    1088:	09052220 	stmdbeq	r5, {r5, r9, sp}
    108c:	2e7a0306 	cdpcs	3, 7, cr0, cr10, cr6, {0}
    1090:	01061605 	tsteq	r6, r5, lsl #12
    1094:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    1098:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    109c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    10a0:	33062007 	movwcc	r2, #24583	; 0x6007
    10a4:	01060b05 	tsteq	r6, r5, lsl #22
    10a8:	05201005 	streq	r1, [r0, #-5]!
    10ac:	052b0605 	streq	r0, [fp, #-1541]!	; 0xfffff9fb
    10b0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10b4:	07052019 	smladeq	r5, r9, r0, r2
    10b8:	060b0520 	streq	r0, [fp], -r0, lsr #10
    10bc:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    10c0:	201f0501 	andscs	r0, pc, r1, lsl #10
    10c4:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    10c8:	03052e0d 	movweq	r2, #24077	; 0x5e0d
    10cc:	0d054006 	stceq	0, cr4, [r5, #-24]	; 0xffffffe8
    10d0:	03050106 	movweq	r0, #20742	; 0x5106
    10d4:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    10d8:	03050106 	movweq	r0, #20742	; 0x5106
    10dc:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    10e0:	01050106 	tsteq	r5, r6, lsl #2
    10e4:	05030421 	streq	r0, [r3, #-1057]	; 0xfffffbdf
    10e8:	95030641 	strls	r0, [r3, #-1601]	; 0xfffff9bf
    10ec:	03054a7f 	movweq	r4, #23167	; 0x5a7f
    10f0:	06410513 			; <UNDEFINED> instruction: 0x06410513
    10f4:	210a0511 	tstcs	sl, r1, lsl r5
    10f8:	06200505 	strteq	r0, [r0], -r5, lsl #10
    10fc:	0607052f 	streq	r0, [r7], -pc, lsr #10
    1100:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
    1104:	06010609 	streq	r0, [r1], -r9, lsl #12
    1108:	060f054b 	streq	r0, [pc], -fp, asr #10
    110c:	22100501 	andscs	r0, r0, #4194304	; 0x400000
    1110:	051e0f05 	ldreq	r0, [lr, #-3845]	; 0xfffff0fb
    1114:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1118:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    111c:	052f0609 	streq	r0, [pc, #-1545]!	; b1b <_Min_Stack_Size+0x71b>
    1120:	0f030601 	svceq	0x00030601
    1124:	06030501 	streq	r0, [r3], -r1, lsl #10
    1128:	13207503 			; <UNDEFINED> instruction: 0x13207503
    112c:	01060505 	tsteq	r6, r5, lsl #10
    1130:	03060605 	movweq	r0, #26117	; 0x6605
    1134:	05052e75 	streq	r2, [r5, #-3701]	; 0xfffff18b
    1138:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    113c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1140:	2f062007 	svccs	0x00062007
    1144:	01061405 	tsteq	r6, r5, lsl #8
    1148:	4c060705 	stcmi	7, cr0, [r6], {5}
    114c:	01060d05 	tsteq	r6, r5, lsl #26
    1150:	21060705 	tstcs	r6, r5, lsl #14
    1154:	01060d05 	tsteq	r6, r5, lsl #26
    1158:	2f060705 	svccs	0x00060705
    115c:	0a052006 	beq	14917c <_Min_Stack_Size+0x148d7c>
    1160:	06480515 			; <UNDEFINED> instruction: 0x06480515
    1164:	b8020500 	stmdalt	r2, {r8, sl}
    1168:	1508000b 	strne	r0, [r8, #-11]
    116c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1170:	05110648 	ldreq	r0, [r1, #-1608]	; 0xfffff9b8
    1174:	3d062105 	stfccs	f2, [r6, #-20]	; 0xffffffec
    1178:	01060705 	tsteq	r6, r5, lsl #14
    117c:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    1180:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1184:	09052206 	stmdbeq	r5, {r1, r2, r9, sp}
    1188:	06050106 	streq	r0, [r5], -r6, lsl #2
    118c:	07052906 	streq	r2, [r5, -r6, lsl #18]
    1190:	05020418 	streq	r0, [r2, #-1048]	; 0xfffffbe8
    1194:	01870313 	orreq	r0, r7, r3, lsl r3
    1198:	13030501 	movwne	r0, #13569	; 0x3501
    119c:	01060a05 	tsteq	r6, r5, lsl #20
    11a0:	042e202e 	strteq	r2, [lr], #-46	; 0xffffffd2
    11a4:	06070503 	streq	r0, [r7], -r3, lsl #10
    11a8:	017efb03 	cmneq	lr, r3, lsl #22	; <UNPREDICTABLE>
    11ac:	01061c05 	tsteq	r6, r5, lsl #24
    11b0:	2f060705 	svccs	0x00060705
    11b4:	01062905 	tsteq	r6, r5, lsl #18
    11b8:	21060705 	tstcs	r6, r5, lsl #14
    11bc:	11061e05 	tstne	r6, r5, lsl #28
    11c0:	052e2f05 	streq	r2, [lr, #-3845]!	; 0xfffff0fb
    11c4:	07052112 	smladeq	r5, r2, r1, r2
    11c8:	13053006 	movwne	r3, #20486	; 0x5006
    11cc:	07050106 	streq	r0, [r5, -r6, lsl #2]
    11d0:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    11d4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    11d8:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    11dc:	2f051106 	svccs	0x00051106
    11e0:	2f120520 	svccs	0x00120520
    11e4:	3f060705 	svccc	0x00060705
    11e8:	11050404 	tstne	r5, r4, lsl #8
    11ec:	05014003 	streq	r4, [r1, #-3]
    11f0:	2505011e 	strcs	r0, [r5, #-286]	; 0xfffffee2
    11f4:	03040106 	movweq	r0, #16646	; 0x4106
    11f8:	c0031305 	andgt	r1, r3, r5, lsl #6
    11fc:	04042000 	streq	r2, [r4], #-0
    1200:	40032505 	andmi	r2, r3, r5, lsl #10
    1204:	05030420 	streq	r0, [r3, #-1056]	; 0xfffffbe0
    1208:	00c00322 	sbceq	r0, r0, r2, lsr #6
    120c:	2e130520 	cfmul64cs	mvdx0, mvdx3, mvdx0
    1210:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    1214:	1e050106 	adfnes	f0, f5, f6
    1218:	05016f03 	streq	r6, [r1, #-3843]	; 0xfffff0fd
    121c:	20150301 	andscs	r0, r5, r1, lsl #6
    1220:	201f0a05 	andscs	r0, pc, r5, lsl #20
    1224:	00061005 	andeq	r1, r6, r5
    1228:	0c1c0205 	lfmeq	f0, 4, [ip], {5}
    122c:	05150800 	ldreq	r0, [r5, #-2048]	; 0xfffff800
    1230:	18051403 	stmdane	r5, {r0, r1, sl, ip}
    1234:	3c050106 	stfccs	f0, [r5], {6}
    1238:	1f180521 	svcne	0x00180521
    123c:	05202005 	streq	r2, [r0, #-5]!
    1240:	10052e38 	andne	r2, r5, r8, lsr lr
    1244:	0603054a 	streq	r0, [r3], -sl, asr #10
    1248:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    124c:	203c0501 	eorscs	r0, ip, r1, lsl #10
    1250:	05581205 	ldrbeq	r1, [r8, #-517]	; 0xfffffdfb
    1254:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    1258:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    125c:	39052e20 	stmdbcc	r5, {r5, r9, sl, fp, sp}
    1260:	4a100520 	bmi	4026e8 <_Min_Stack_Size+0x4022e8>
    1264:	2f060305 	svccs	0x00060305
    1268:	01061a05 	tsteq	r6, r5, lsl #20
    126c:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    1270:	1205203d 	andne	r2, r5, #61	; 0x3d
    1274:	2f010520 	svccs	0x00010520
    1278:	68061005 	stmdavs	r6, {r0, r2, ip}
    127c:	04130305 	ldreq	r0, [r3], #-773	; 0xfffffcfb
    1280:	03110504 	tsteq	r1, #4, 10	; 0x1000000
    1284:	05017fae 	streq	r7, [r1, #-4014]	; 0xfffff052
    1288:	2505011e 	strcs	r0, [r5, #-286]	; 0xfffffee2
    128c:	03040106 	movweq	r0, #16646	; 0x4106
    1290:	d2031305 	andle	r1, r3, #335544320	; 0x14000000
    1294:	05052e00 	streq	r2, [r5, #-3584]	; 0xfffff200
    1298:	0521062e 	streq	r0, [r1, #-1582]!	; 0xfffff9d2
    129c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    12a0:	05044d01 	streq	r4, [r4, #-3329]	; 0xfffff2ff
    12a4:	03065005 	movweq	r5, #24581	; 0x6005
    12a8:	0558038f 	ldrbeq	r0, [r8, #-911]	; 0xfffffc71
    12ac:	07051303 	streq	r1, [r5, -r3, lsl #6]
    12b0:	0d051408 	cfstrseq	mvf1, [r5, #-32]	; 0xffffffe0
    12b4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    12b8:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    12bc:	20050106 	andcs	r0, r5, r6, lsl #2
    12c0:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    12c4:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    12c8:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
    12cc:	5a030607 	bpl	c2af0 <_Min_Stack_Size+0xc26f0>
    12d0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    12d4:	06070501 	streq	r0, [r7], -r1, lsl #10
    12d8:	060d052f 	streq	r0, [sp], -pc, lsr #10
    12dc:	06070501 	streq	r0, [r7], -r1, lsl #10
    12e0:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
    12e4:	06070501 	streq	r0, [r7], -r1, lsl #10
    12e8:	060d052f 	streq	r0, [sp], -pc, lsr #10
    12ec:	06070501 	streq	r0, [r7], -r1, lsl #10
    12f0:	05200631 	streq	r0, [r0, #-1585]!	; 0xfffff9cf
    12f4:	0584060b 	streq	r0, [r4, #1547]	; 0x60b
    12f8:	03010611 	movweq	r0, #5649	; 0x1611
    12fc:	0b052012 	bleq	14934c <_Min_Stack_Size+0x148f4c>
    1300:	07052106 	streq	r2, [r5, -r6, lsl #2]
    1304:	06200516 			; <UNDEFINED> instruction: 0x06200516
    1308:	060b0501 	streq	r0, [fp], -r1, lsl #10
    130c:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    1310:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1314:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    1318:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    131c:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    1320:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1324:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    1328:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    132c:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    1330:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1334:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    1338:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    133c:	05000647 	streq	r0, [r0, #-1607]	; 0xfffff9b9
    1340:	000d2002 	andeq	r2, sp, r2
    1344:	010c0308 	tsteq	ip, r8, lsl #6
    1348:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    134c:	20110647 	andscs	r0, r1, r7, asr #12
    1350:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    1354:	2d052e05 	stccs	14, cr2, [r5, #-20]	; 0xffffffec
    1358:	25010520 	strcs	r0, [r1, #-1312]	; 0xfffffae0
    135c:	1c060305 	stcne	3, cr0, [r6], {5}
    1360:	49050104 	stmdbmi	r5, {r2, r8}
    1364:	017bee03 	cmneq	fp, r3, lsl #28
    1368:	03050504 	movweq	r0, #21764	; 0x5504
    136c:	01049303 	tsteq	r4, r3, lsl #6
    1370:	01060705 	tsteq	r6, r5, lsl #14
    1374:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
    1378:	052f0603 	streq	r0, [pc, #-1539]!	; d7d <_Min_Stack_Size+0x97d>
    137c:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    1380:	4e05552d 	cfsh32mi	mvfx5, mvfx5, #29
    1384:	02050006 	andeq	r0, r5, #6
    1388:	08000d4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, sl, fp}
    138c:	13030519 	movwne	r0, #13593	; 0x3519
    1390:	11064e05 	tstne	r6, r5, lsl #28
    1394:	3d070520 	cfstr32cc	mvfx0, [r7, #-128]	; 0xffffff80
    1398:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    139c:	01052033 	tsteq	r5, r3, lsr r0
    13a0:	06030525 	streq	r0, [r3], -r5, lsr #10
    13a4:	0501041c 	streq	r0, [r1, #-1052]	; 0xfffffbe4
    13a8:	7be70350 	blvc	ff9c20f0 <BootRAM+0xe932891>
    13ac:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    13b0:	049a0303 	ldreq	r0, [sl], #771	; 0x303
    13b4:	06070501 	streq	r0, [r7], -r1, lsl #10
    13b8:	58050501 	stmdapl	r5, {r0, r8, sl}
    13bc:	2f060305 	svccs	0x00060305
    13c0:	01060705 	tsteq	r6, r5, lsl #14
    13c4:	05553305 	ldrbeq	r3, [r5, #-773]	; 0xfffffcfb
    13c8:	05000616 	streq	r0, [r0, #-1558]	; 0xfffff9ea
    13cc:	000d8002 	andeq	r8, sp, r2
    13d0:	03051908 	movweq	r1, #22792	; 0x5908
    13d4:	06160513 			; <UNDEFINED> instruction: 0x06160513
    13d8:	21030511 	tstcs	r3, r1, lsl r5
    13dc:	01042f06 	tsteq	r4, r6, lsl #30
    13e0:	f1030d05 			; <UNDEFINED> instruction: 0xf1030d05
    13e4:	0305017b 	movweq	r0, #20859	; 0x517b
    13e8:	2e016713 	mcrcs	7, 0, r6, cr1, cr3, {0}
    13ec:	20202e01 	eorcs	r2, r0, r1, lsl #28
    13f0:	0120012e 			; <UNDEFINED> instruction: 0x0120012e
    13f4:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    13f8:	03053c01 	movweq	r3, #23553	; 0x5c01
    13fc:	07054b06 	streq	r4, [r5, -r6, lsl #22]
    1400:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1404:	0505110b 	streq	r1, [r5, #-267]	; 0xfffffef5
    1408:	0b053006 	bleq	14d428 <_Min_Stack_Size+0x14d028>
    140c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1410:	05202e20 	streq	r2, [r0, #-3616]!	; 0xfffff1e0
    1414:	062e1f03 	strteq	r1, [lr], -r3, lsl #30
    1418:	06100516 			; <UNDEFINED> instruction: 0x06100516
    141c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1420:	060c054b 	streq	r0, [ip], -fp, asr #10
    1424:	31030501 	tstcc	r3, r1, lsl #10
    1428:	052b0c05 	streq	r0, [fp, #-3077]!	; 0xfffff3fb
    142c:	014b0603 	cmpeq	fp, r3, lsl #12
    1430:	3e050168 	adfccsz	f0, f5, #0.0
    1434:	1303054a 	movwne	r0, #13642	; 0x354a
    1438:	01660101 	cmneq	r6, r1, lsl #2
    143c:	0604013d 			; <UNDEFINED> instruction: 0x0604013d
    1440:	03062705 	movweq	r2, #26373	; 0x6705
    1444:	04010bb4 	streq	r0, [r1], #-2996	; 0xfffff44c
    1448:	03030501 	movweq	r0, #13569	; 0x3501
    144c:	062e74cc 	strteq	r7, [lr], -ip, asr #9
    1450:	0120014b 			; <UNDEFINED> instruction: 0x0120014b
    1454:	2e060101 	adfcss	f0, f6, f1
    1458:	05212e06 	streq	r2, [r1, #-3590]!	; 0xfffff1fa
    145c:	2001060d 	andcs	r0, r1, sp, lsl #12
    1460:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1464:	16050604 	strne	r0, [r5], -r4, lsl #12
    1468:	010baf03 	tsteq	fp, r3, lsl #30
    146c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1470:	2e010627 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx7
    1474:	03050104 	movweq	r0, #20740	; 0x5104
    1478:	74d10306 	ldrbvc	r0, [r1], #774	; 0x306
    147c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1480:	06030501 	streq	r0, [r3], -r1, lsl #10
    1484:	0610054b 	ldreq	r0, [r0], -fp, asr #10
    1488:	06270501 	strteq	r0, [r7], -r1, lsl #10
    148c:	06100520 	ldreq	r0, [r0], -r0, lsr #10
    1490:	20080501 	andcs	r0, r8, r1, lsl #10
    1494:	31060305 	tstcc	r6, r5, lsl #6
    1498:	01061005 	tsteq	r6, r5
    149c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    14a0:	01060d05 	tsteq	r6, r5, lsl #26
    14a4:	4b060305 	blmi	1820c0 <_Min_Stack_Size+0x181cc0>
    14a8:	01060d05 	tsteq	r6, r5, lsl #26
    14ac:	2f060305 	svccs	0x00060305
    14b0:	01060d05 	tsteq	r6, r5, lsl #26
    14b4:	4b060305 	blmi	1820d0 <_Min_Stack_Size+0x181cd0>
    14b8:	0e056701 	cdpeq	7, 0, cr6, cr5, cr1, {0}
    14bc:	03050106 	movweq	r0, #20742	; 0x5106
    14c0:	0f052f06 	svceq	0x00052f06
    14c4:	03050106 	movweq	r0, #20742	; 0x5106
    14c8:	0e054b06 	vmlaeq.f64	d4, d5, d6
    14cc:	03050106 	movweq	r0, #20742	; 0x5106
    14d0:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    14d4:	044a0106 	strbeq	r0, [sl], #-262	; 0xfffffefa
    14d8:	06030505 	streq	r0, [r3], -r5, lsl #10
    14dc:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
    14e0:	0601052f 	streq	r0, [r1], -pc, lsr #10
    14e4:	2d030513 	cfstr32cs	mvfx0, [r3, #-76]	; 0xffffffb4
    14e8:	00061605 	andeq	r1, r6, r5, lsl #12
    14ec:	0e9c0205 	cdpeq	2, 9, cr0, cr12, cr5, {0}
    14f0:	05150800 	ldreq	r0, [r5, #-2048]	; 0xfffff800
    14f4:	16051303 	strne	r1, [r5], -r3, lsl #6
    14f8:	03051106 	movweq	r1, #20742	; 0x5106
    14fc:	042f0621 	strteq	r0, [pc], #-1569	; 1504 <_Min_Stack_Size+0x1104>
    1500:	03180501 	tsteq	r8, #4194304	; 0x400000
    1504:	04017bd9 	streq	r7, [r1], #-3033	; 0xfffff427
    1508:	03030505 	movweq	r0, #13573	; 0x3505
    150c:	2f0104a8 	svccs	0x000104a8
    1510:	13060105 	movwne	r0, #24837	; 0x6105
    1514:	052d0305 	streq	r0, [sp, #-773]!	; 0xfffffcfb
    1518:	05000615 	streq	r0, [r0, #-1557]	; 0xfffff9eb
    151c:	000eae02 	andeq	sl, lr, r2, lsl #28
    1520:	03051508 	movweq	r1, #21768	; 0x5508
    1524:	00020213 	andeq	r0, r2, r3, lsl r2
    1528:	09870101 	stmibeq	r7, {r0, r8}
    152c:	00030000 	andeq	r0, r3, r0
    1530:	000000c1 	andeq	r0, r0, r1, asr #1
    1534:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1538:	0101000d 	tsteq	r1, sp
    153c:	00000101 	andeq	r0, r0, r1, lsl #2
    1540:	00000100 	andeq	r0, r0, r0, lsl #2
    1544:	63727301 	cmnvs	r2, #67108864	; 0x4000000
    1548:	62696c00 	rsbvs	r6, r9, #0, 24
    154c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1550:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1554:	73752f00 	cmnvc	r5, #0, 30
    1558:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    155c:	63672f62 	cmnvs	r7, #392	; 0x188
    1560:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    1564:	6f6e2d6d 	svcvs	0x006e2d6d
    1568:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    156c:	2f696261 	svccs	0x00696261
    1570:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    1574:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    1578:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    157c:	75000065 	strvc	r0, [r0, #-101]	; 0xffffff9b
    1580:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    1584:	00010068 	andeq	r0, r1, r8, rrx
    1588:	6f727000 	svcvs	0x00727000
    158c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1590:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    1594:	00010063 	andeq	r0, r1, r3, rrx
    1598:	62737500 	rsbsvs	r7, r3, #0, 10
    159c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    15a0:	0100682e 	tsteq	r0, lr, lsr #16
    15a4:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    15a8:	63697473 	cmnvs	r9, #1929379840	; 0x73000000
    15ac:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    15b0:	63000001 	movwvs	r0, #1
    15b4:	5f65726f 	svcpl	0x0065726f
    15b8:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
    15bc:	00020068 	andeq	r0, r2, r8, rrx
    15c0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    15c4:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    15c8:	00030068 	andeq	r0, r3, r8, rrx
    15cc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    15d0:	316c3233 	cmncc	ip, r3, lsr r2
    15d4:	63783135 	cmnvs	r8, #1073741837	; 0x4000000d
    15d8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    15dc:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    15e0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    15e4:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    15e8:	316c3233 	cmncc	ip, r3, lsr r2
    15ec:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    15f0:	00000200 	andeq	r0, r0, r0, lsl #4
    15f4:	00280500 	eoreq	r0, r8, r0, lsl #10
    15f8:	0eb40205 	cdpeq	2, 11, cr0, cr4, cr5, {0}
    15fc:	3e030800 	cdpcc	8, 0, cr0, cr3, cr0, {0}
    1600:	13030501 	movwne	r0, #13569	; 0x3501
    1604:	01060f05 	tsteq	r6, r5, lsl #30
    1608:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    160c:	0105201f 	tsteq	r5, pc, lsl r0
    1610:	06280521 	strteq	r0, [r8], -r1, lsr #10
    1614:	13030530 	movwne	r0, #13616	; 0x3530
    1618:	03090513 	movweq	r0, #38163	; 0x9513
    161c:	0305017a 	movweq	r0, #20858	; 0x517a
    1620:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    1624:	20190501 	andscs	r0, r9, r1, lsl #10
    1628:	05232805 	streq	r2, [r3, #-2053]!	; 0xfffff7fb
    162c:	03052205 	movweq	r2, #20997	; 0x5205
    1630:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    1634:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1638:	2f060520 	svccs	0x00060520
    163c:	051f0705 	ldreq	r0, [pc, #-1797]	; f3f <_Min_Stack_Size+0xb3f>
    1640:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1644:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1648:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    164c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1650:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    1654:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1658:	01051c25 	tsteq	r5, r5, lsr #24
    165c:	06330525 	ldrteq	r0, [r3], -r5, lsr #10
    1660:	13030522 	movwne	r0, #13602	; 0x3522
    1664:	72030905 	andvc	r0, r3, #81920	; 0x14000
    1668:	13030501 	movwne	r0, #13569	; 0x3501
    166c:	01060f05 	tsteq	r6, r5, lsl #30
    1670:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    1674:	0505201f 	streq	r2, [r5, #-31]	; 0xffffffe1
    1678:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    167c:	053b0606 	ldreq	r0, [fp, #-1542]!	; 0xfffff9fa
    1680:	11051405 	tstne	r5, r5, lsl #8
    1684:	16050106 	strne	r0, [r5], -r6, lsl #2
    1688:	06050520 	streq	r0, [r5], -r0, lsr #10
    168c:	0608052f 	streq	r0, [r8], -pc, lsr #10
    1690:	200c0501 	andcs	r0, ip, r1, lsl #10
    1694:	3c061005 	stccc	0, cr1, [r6], {5}
    1698:	01061805 	tsteq	r6, r5, lsl #16
    169c:	1401053c 	strne	r0, [r1], #-1340	; 0xfffffac4
    16a0:	03061d05 	movweq	r1, #27909	; 0x6d05
    16a4:	0305203d 	movweq	r2, #20541	; 0x503d
    16a8:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    16ac:	210d0511 	tstcs	sp, r1, lsl r5
    16b0:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    16b4:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    16b8:	06050501 	streq	r0, [r5], -r1, lsl #10
    16bc:	052e0621 	streq	r0, [lr, #-1569]!	; 0xfffff9df
    16c0:	05051701 	streq	r1, [r5, #-1793]	; 0xfffff8ff
    16c4:	09052e29 	stmdbeq	r5, {r0, r3, r5, r9, sl, fp, sp}
    16c8:	13051306 	movwne	r1, #21254	; 0x5306
    16cc:	0b050106 	bleq	141aec <_Min_Stack_Size+0x1416ec>
    16d0:	06050520 	streq	r0, [r5], -r0, lsr #10
    16d4:	0309052f 	movweq	r0, #38191	; 0x952f
    16d8:	05017fac 	streq	r7, [r1, #-4012]	; 0xfffff054
    16dc:	0f051303 	svceq	0x00051303
    16e0:	19050106 	stmdbne	r5, {r1, r2, r8}
    16e4:	0307053c 	movweq	r0, #30012	; 0x753c
    16e8:	052e00d3 	streq	r0, [lr, #-211]!	; 0xffffff2d
    16ec:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    16f0:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    16f4:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    16f8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    16fc:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1700:	01054a01 	tsteq	r5, r1, lsl #20
    1704:	060c0523 	streq	r0, [ip], -r3, lsr #10
    1708:	0618051e 			; <UNDEFINED> instruction: 0x0618051e
    170c:	4c010501 	cfstr32mi	mvfx0, [r1], {1}
    1710:	00062d05 	andeq	r2, r6, r5, lsl #26
    1714:	0f500205 	svceq	0x00500205
    1718:	06140800 	ldreq	r0, [r4], -r0, lsl #16
    171c:	03052001 	movweq	r2, #20481	; 0x5001
    1720:	0f052106 	svceq	0x00052106
    1724:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1728:	01040200 	mrseq	r0, R12_usr
    172c:	2f01053c 	svccs	0x0001053c
    1730:	02000f05 	andeq	r0, r0, #5, 30
    1734:	1f060204 	svcne	0x00060204
    1738:	02040200 	andeq	r0, r4, #0, 4
    173c:	04020001 	streq	r0, [r2], #-1
    1740:	00010602 	andeq	r0, r1, r2, lsl #12
    1744:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1748:	02040200 	andeq	r0, r4, #0, 4
    174c:	1b053c06 	blne	15076c <_Min_Stack_Size+0x15036c>
    1750:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    1754:	1508000f 	strne	r0, [r8, #-15]
    1758:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    175c:	0511061b 	ldreq	r0, [r1, #-1563]	; 0xfffff9e5
    1760:	0c052115 	stfeqs	f2, [r5], {21}
    1764:	01040200 	mrseq	r0, R12_usr
    1768:	0008053c 	andeq	r0, r8, ip, lsr r5
    176c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1770:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    1774:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    1778:	001f0602 	andseq	r0, pc, r2, lsl #12
    177c:	01020402 	tsteq	r2, r2, lsl #8
    1780:	02040200 	andeq	r0, r4, #0, 4
    1784:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1788:	3c060204 	sfmcc	f0, 4, [r6], {4}
    178c:	05002c05 	streq	r2, [r0, #-3077]	; 0xfffff3fb
    1790:	000fa402 	andeq	sl, pc, r2, lsl #8
    1794:	01061508 	tsteq	r6, r8, lsl #10
    1798:	06030520 	streq	r0, [r3], -r0, lsr #10
    179c:	060f0521 	streq	r0, [pc], -r1, lsr #10
    17a0:	017f9f03 	cmneq	pc, r3, lsl #30
    17a4:	0308052e 	movweq	r0, #34094	; 0x852e
    17a8:	050100e1 	streq	r0, [r1, #-225]	; 0xffffff1f
    17ac:	22053201 	andcs	r3, r5, #268435456	; 0x10000000
    17b0:	01040200 	mrseq	r0, R12_usr
    17b4:	09051d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip}
    17b8:	01040200 	mrseq	r0, R12_usr
    17bc:	017f9d03 	cmneq	pc, r3, lsl #26
    17c0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    17c4:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    17c8:	0402000f 	streq	r0, [r2], #-15
    17cc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    17d0:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    17d4:	0b052001 	bleq	1497e0 <_Min_Stack_Size+0x1493e0>
    17d8:	01040200 	mrseq	r0, R12_usr
    17dc:	2000e203 	andcs	lr, r0, r3, lsl #4
    17e0:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    17e4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    17e8:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    17ec:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    17f0:	052e3c0f 	streq	r3, [lr, #-3087]!	; 0xfffff3f1
    17f4:	05000628 	streq	r0, [r0, #-1576]	; 0xfffff9d8
    17f8:	000fd002 	andeq	sp, pc, r2
    17fc:	03051608 	movweq	r1, #22024	; 0x5608
    1800:	06280513 			; <UNDEFINED> instruction: 0x06280513
    1804:	030f0511 	movweq	r0, #62737	; 0xf511
    1808:	2e3c7f99 	mrccs	15, 1, r7, cr12, cr9, {4}
    180c:	e8030805 	stmda	r3, {r0, r2, fp}
    1810:	052e0100 	streq	r0, [lr, #-256]!	; 0xffffff00
    1814:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    1818:	06010605 	streq	r0, [r1], -r5, lsl #12
    181c:	0607052f 	streq	r0, [r7], -pc, lsr #10
    1820:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1824:	06140520 	ldreq	r0, [r4], -r0, lsr #10
    1828:	3c230513 	cfstr32cc	mvfx0, [r3], #-76	; 0xffffffb4
    182c:	051f1705 	ldreq	r1, [pc, #-1797]	; 112f <_Min_Stack_Size+0xd2f>
    1830:	32052123 	andcc	r2, r5, #-1073741816	; 0xc0000008
    1834:	1f17052e 	svcne	0x0017052e
    1838:	21060d05 	tstcs	r6, r5, lsl #26
    183c:	05011c05 	streq	r1, [r1, #-3077]	; 0xfffff3fb
    1840:	3205012b 	andcc	r0, r5, #-1073741814	; 0xc000000a
    1844:	01050106 	tsteq	r5, r6, lsl #2
    1848:	00220522 	eoreq	r0, r2, r2, lsr #10
    184c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1850:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    1854:	04020009 	streq	r0, [r2], #-9
    1858:	7f960301 	svcvc	0x00960301
    185c:	00030501 	andeq	r0, r3, r1, lsl #10
    1860:	13010402 	movwne	r0, #5122	; 0x1402
    1864:	02000f05 	andeq	r0, r0, #5, 30
    1868:	01060104 	tsteq	r6, r4, lsl #2
    186c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1870:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1874:	0402000b 	streq	r0, [r2], #-11
    1878:	00e90301 	rsceq	r0, r9, r1, lsl #6
    187c:	000a0520 	andeq	r0, sl, r0, lsr #10
    1880:	20010402 	andcs	r0, r1, r2, lsl #8
    1884:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1888:	01060e05 	tsteq	r6, r5, lsl #28
    188c:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    1890:	052f0605 	streq	r0, [pc, #-1541]!	; 1293 <_Min_Stack_Size+0xe93>
    1894:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    1898:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    189c:	02003c01 	andeq	r3, r0, #256	; 0x100
    18a0:	044a0104 	strbeq	r0, [sl], #-260	; 0xfffffefc
    18a4:	06480502 	strbeq	r0, [r8], -r2, lsl #10
    18a8:	28020500 	stmdacs	r2, {r8, sl}
    18ac:	03080010 	movweq	r0, #32784	; 0x8010
    18b0:	05017f89 	streq	r7, [r1, #-3977]	; 0xfffff077
    18b4:	05051303 	streq	r1, [r5, #-771]	; 0xfffffcfd
    18b8:	59060106 	stmdbpl	r6, {r1, r2, r8}
    18bc:	01060705 	tsteq	r6, r5, lsl #14
    18c0:	0e053d06 	cdpeq	13, 0, cr3, cr5, cr6, {0}
    18c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    18c8:	052f0620 	streq	r0, [pc, #-1568]!	; 12b0 <_Min_Stack_Size+0xeb0>
    18cc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    18d0:	052f0609 	streq	r0, [pc, #-1545]!	; 12cf <_Min_Stack_Size+0xecf>
    18d4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    18d8:	053d060d 	ldreq	r0, [sp, #-1549]!	; 0xfffff9f3
    18dc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    18e0:	052f0609 	streq	r0, [pc, #-1545]!	; 12df <_Min_Stack_Size+0xedf>
    18e4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    18e8:	052f0609 	streq	r0, [pc, #-1545]!	; 12e7 <_Min_Stack_Size+0xee7>
    18ec:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    18f0:	0105300e 	tsteq	r5, lr
    18f4:	1f0a0524 	svcne	0x000a0524
    18f8:	06350520 	ldrteq	r0, [r5], -r0, lsr #10
    18fc:	1303055b 	movwne	r0, #13659	; 0x355b
    1900:	6a580101 	bvs	1601d0c <_Min_Stack_Size+0x160190c>
    1904:	01060905 	tsteq	r6, r5, lsl #18
    1908:	06200505 	strteq	r0, [r0], -r5, lsl #10
    190c:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1910:	06050501 	streq	r0, [r5], -r1, lsl #10
    1914:	0611054b 	ldreq	r0, [r1], -fp, asr #10
    1918:	01054401 	tsteq	r5, r1, lsl #8
    191c:	06090522 	streq	r0, [r9], -r2, lsr #10
    1920:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    1924:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1928:	0505200b 	streq	r2, [r5, #-11]
    192c:	11052f06 	tstne	r5, r6, lsl #30
    1930:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1934:	11054b06 	tstne	r5, r6, lsl #22
    1938:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    193c:	11054b06 	tstne	r5, r6, lsl #22
    1940:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1944:	0f054b06 	svceq	0x00054b06
    1948:	0b050106 	bleq	141d68 <_Min_Stack_Size+0x141968>
    194c:	06060520 	streq	r0, [r6], -r0, lsr #10
    1950:	052e7403 	streq	r7, [lr, #-1027]!	; 0xfffffbfd
    1954:	010d0305 	tsteq	sp, r5, lsl #6
    1958:	01061105 	tsteq	r6, r5, lsl #2
    195c:	4b060505 	blmi	182d78 <_Min_Stack_Size+0x182978>
    1960:	01061105 	tsteq	r6, r5, lsl #2
    1964:	4b060505 	blmi	182d80 <_Min_Stack_Size+0x182980>
    1968:	01061105 	tsteq	r6, r5, lsl #2
    196c:	00064f05 	andeq	r4, r6, r5, lsl #30
    1970:	10d80205 	sbcsne	r0, r8, r5, lsl #4
    1974:	05160800 	ldreq	r0, [r6, #-2048]	; 0xfffff800
    1978:	4f051303 	svcmi	0x00051303
    197c:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
    1980:	1f4f0521 	svcne	0x004f0521
    1984:	06210505 	strteq	r0, [r1], -r5, lsl #10
    1988:	0607054b 	streq	r0, [r7], -fp, asr #10
    198c:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
    1990:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    1994:	2014030e 	andscs	r0, r4, lr, lsl #6
    1998:	09030105 	stmdbeq	r3, {r0, r2, r8}
    199c:	06070520 	streq	r0, [r7], -r0, lsr #10
    19a0:	052e6403 	streq	r6, [lr, #-1027]!	; 0xfffffbfd
    19a4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    19a8:	2f062009 	svccs	0x00062009
    19ac:	13050304 	movwne	r0, #21252	; 0x5304
    19b0:	0100e503 	tsteq	r0, r3, lsl #10
    19b4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    19b8:	2001060a 	andcs	r0, r1, sl, lsl #12
    19bc:	02042e20 	andeq	r2, r4, #32, 28	; 0x200
    19c0:	03060905 	movweq	r0, #26885	; 0x6905
    19c4:	05017f9b 	streq	r7, [r1, #-3995]	; 0xfffff065
    19c8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    19cc:	2f063c0b 	svccs	0x00063c0b
    19d0:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    19d4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    19d8:	042f0609 	strteq	r0, [pc], #-1545	; 19e0 <_Min_Stack_Size+0x15e0>
    19dc:	03130503 	tsteq	r3, #12582912	; 0xc00000
    19e0:	050100e0 	streq	r0, [r1, #-224]	; 0xffffff20
    19e4:	0a051303 	beq	1465f8 <_Min_Stack_Size+0x1461f8>
    19e8:	202e0106 	eorcs	r0, lr, r6, lsl #2
    19ec:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    19f0:	a0030609 	andge	r0, r3, r9, lsl #12
    19f4:	1605017f 			; <UNDEFINED> instruction: 0x1605017f
    19f8:	0b050106 	bleq	141e18 <_Min_Stack_Size+0x141a18>
    19fc:	052f063c 	streq	r0, [pc, #-1596]!	; 13c8 <_Min_Stack_Size+0xfc8>
    1a00:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1a04:	013d060b 	teqeq	sp, fp, lsl #12
    1a08:	11050404 	tstne	r5, r4, lsl #8
    1a0c:	017fa203 	cmneq	pc, r3, lsl #4
    1a10:	04011e05 	streq	r1, [r1], #-3589	; 0xfffff1fb
    1a14:	030b0502 	movweq	r0, #46338	; 0xb502
    1a18:	010100e2 	smlatteq	r1, r2, r0, r0
    1a1c:	11050404 	tstne	r5, r4, lsl #8
    1a20:	017f9e03 	cmneq	pc, r3, lsl #28
    1a24:	05011e05 	streq	r1, [r1, #-3589]	; 0xfffff1fb
    1a28:	04010625 	streq	r0, [r1], #-1573	; 0xfffff9db
    1a2c:	030b0502 	movweq	r0, #46338	; 0xb502
    1a30:	052e00e2 	streq	r0, [lr, #-226]!	; 0xffffff1e
    1a34:	0563060f 	strbeq	r0, [r3, #-1551]!	; 0xfffff9f1
    1a38:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1a3c:	0b052e11 	bleq	14d288 <_Min_Stack_Size+0x14ce88>
    1a40:	13052f06 	movwne	r2, #24326	; 0x5f06
    1a44:	0b050106 	bleq	141e64 <_Min_Stack_Size+0x141a64>
    1a48:	1f130521 	svcne	0x00130521
    1a4c:	2f060b05 	svccs	0x00060b05
    1a50:	13400905 	movtne	r0, #2309	; 0x905
    1a54:	13050304 	movwne	r0, #21252	; 0x5304
    1a58:	0100d503 	tsteq	r0, r3, lsl #10
    1a5c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1a60:	2001060a 	andcs	r0, r1, sl, lsl #12
    1a64:	04202e20 	strteq	r2, [r0], #-3616	; 0xfffff1e0
    1a68:	7fb40302 	svcvc	0x00b40302
    1a6c:	17052001 	strne	r2, [r5, -r1]
    1a70:	02050006 	andeq	r0, r5, #6
    1a74:	08001174 	stmdaeq	r0, {r2, r4, r5, r6, r8, ip}
    1a78:	05011f03 	streq	r1, [r1, #-3843]	; 0xfffff0fd
    1a7c:	04011303 	streq	r1, [r1], #-771	; 0xfffffcfd
    1a80:	03160505 	tsteq	r6, #20971520	; 0x1400000
    1a84:	05010ad5 	streq	r0, [r1, #-2773]	; 0xfffff52b
    1a88:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    1a8c:	03061705 	movweq	r1, #26373	; 0x6705
    1a90:	040175a8 	streq	r7, [r1], #-1448	; 0xfffffa58
    1a94:	03270505 			; <UNDEFINED> instruction: 0x03270505
    1a98:	04200ad8 	strteq	r0, [r0], #-2776	; 0xfffff528
    1a9c:	03030502 	movweq	r0, #13570	; 0x3502
    1aa0:	042e75a9 	strteq	r7, [lr], #-1449	; 0xfffffa57
    1aa4:	03270505 			; <UNDEFINED> instruction: 0x03270505
    1aa8:	2e200ad7 			; <UNDEFINED> instruction: 0x2e200ad7
    1aac:	03050204 	movweq	r0, #20996	; 0x5204
    1ab0:	75a90306 	strvc	r0, [r9, #774]!	; 0x306
    1ab4:	3c200101 	stfccs	f0, [r0], #-4
    1ab8:	0120202e 			; <UNDEFINED> instruction: 0x0120202e
    1abc:	0101203c 	tsteq	r1, ip, lsr r0
    1ac0:	13062001 	movwne	r2, #24577	; 0x6001
    1ac4:	2e2e061f 	mcrcs	6, 1, r0, cr14, cr15, {0}
    1ac8:	2e200120 	sufcssp	f0, f0, f0
    1acc:	0120202e 			; <UNDEFINED> instruction: 0x0120202e
    1ad0:	0101202e 	tsteq	r1, lr, lsr #32
    1ad4:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    1ad8:	06010120 	streq	r0, [r1], -r0, lsr #2
    1adc:	3c062020 	stccc	0, cr2, [r6], {32}
    1ae0:	20203c4a 	eorcs	r3, r0, sl, asr #24
    1ae4:	2e202020 	cdpcs	0, 2, cr2, cr0, cr0, {1}
    1ae8:	0505042e 	streq	r0, [r5, #-1070]	; 0xfffffbd2
    1aec:	0ac80316 	beq	ff20274c <BootRAM+0xe172eed>
    1af0:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1af4:	01062705 	tsteq	r6, r5, lsl #14
    1af8:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
    1afc:	b7030603 	strlt	r0, [r3, -r3, lsl #12]
    1b00:	062f0175 			; <UNDEFINED> instruction: 0x062f0175
    1b04:	490b0513 	stmdbmi	fp, {r0, r1, r4, r8, sl}
    1b08:	2f060305 	svccs	0x00060305
    1b0c:	6768672f 	strbvs	r6, [r8, -pc, lsr #14]!
    1b10:	0c056767 	stceq	7, cr6, [r5], {103}	; 0x67
    1b14:	01050106 	tsteq	r5, r6, lsl #2
    1b18:	0628053d 			; <UNDEFINED> instruction: 0x0628053d
    1b1c:	05d63803 	ldrbeq	r3, [r6, #2051]	; 0x803
    1b20:	05131403 	ldreq	r1, [r3, #-1027]	; 0xfffffbfd
    1b24:	050f0628 	streq	r0, [pc, #-1576]	; 1504 <_Min_Stack_Size+0x1104>
    1b28:	1f212307 	svcne	0x00212307
    1b2c:	1f050521 	svcne	0x00050521
    1b30:	1e0b052f 	cfsh32ne	mvfx0, mvfx11, #31
    1b34:	30060305 	andcc	r0, r6, r5, lsl #6
    1b38:	01060505 	tsteq	r6, r5, lsl #10
    1b3c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1b40:	20060104 	andcs	r0, r6, r4, lsl #2
    1b44:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1b48:	01060104 	tsteq	r6, r4, lsl #2
    1b4c:	01040200 	mrseq	r0, R12_usr
    1b50:	0021052e 	eoreq	r0, r1, lr, lsr #10
    1b54:	25010402 	strcs	r0, [r1, #-1026]	; 0xfffffbfe
    1b58:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1b5c:	051f0104 	ldreq	r0, [pc, #-260]	; 1a60 <_Min_Stack_Size+0x1660>
    1b60:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    1b64:	05052f01 	streq	r2, [r5, #-3841]	; 0xfffff0ff
    1b68:	07052e06 	streq	r2, [r5, -r6, lsl #28]
    1b6c:	16050106 	strne	r0, [r5], -r6, lsl #2
    1b70:	21052e06 	tstcs	r5, r6, lsl #28
    1b74:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b78:	0b053d06 	bleq	150f98 <_Min_Stack_Size+0x150b98>
    1b7c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1b80:	0016052e 	andseq	r0, r6, lr, lsr #10
    1b84:	06010402 	streq	r0, [r1], -r2, lsl #8
    1b88:	001a052e 	andseq	r0, sl, lr, lsr #10
    1b8c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1b90:	00050501 	andeq	r0, r5, r1, lsl #10
    1b94:	06010402 	streq	r0, [r1], -r2, lsl #8
    1b98:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1b9c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    1ba0:	00130104 	andseq	r0, r3, r4, lsl #2
    1ba4:	13010402 	movwne	r0, #5122	; 0x1402
    1ba8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1bac:	03060104 	movweq	r0, #24836	; 0x6104
    1bb0:	0200017a 	andeq	r0, r0, #-2147483618	; 0x8000001e
    1bb4:	063c0104 	ldrteq	r0, [ip], -r4, lsl #2
    1bb8:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    1bbc:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    1bc0:	2c052e18 	stccs	14, cr2, [r5], {24}
    1bc4:	2f05053c 	svccs	0x0005053c
    1bc8:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    1bcc:	18052e2d 	stmdane	r5, {r0, r2, r3, r5, r9, sl, fp, sp}
    1bd0:	05013b06 	streq	r3, [r1, #-2822]	; 0xfffff4fa
    1bd4:	0501012c 	streq	r0, [r1, #-300]	; 0xfffffed4
    1bd8:	19052103 	stmdbne	r5, {r0, r1, r8, sp}
    1bdc:	2d050101 	stfcss	f0, [r5, #-4]
    1be0:	01050101 	tsteq	r5, r1, lsl #2
    1be4:	05052406 	streq	r2, [r5, #-1030]	; 0xfffffbfa
    1be8:	20750306 	rsbscs	r0, r5, r6, lsl #6
    1bec:	01060705 	tsteq	r6, r5, lsl #14
    1bf0:	2f060505 	svccs	0x00060505
    1bf4:	01060705 	tsteq	r6, r5, lsl #14
    1bf8:	2f060505 	svccs	0x00060505
    1bfc:	01060705 	tsteq	r6, r5, lsl #14
    1c00:	2f060505 	svccs	0x00060505
    1c04:	01060705 	tsteq	r6, r5, lsl #14
    1c08:	2f060505 	svccs	0x00060505
    1c0c:	01060705 	tsteq	r6, r5, lsl #14
    1c10:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1c14:	2e060104 	adfcss	f0, f6, f4
    1c18:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1c1c:	01060104 	tsteq	r6, r4, lsl #2
    1c20:	01040200 	mrseq	r0, R12_usr
    1c24:	0016052e 	andseq	r0, r6, lr, lsr #10
    1c28:	06010402 	streq	r0, [r1], -r2, lsl #8
    1c2c:	001a051c 	andseq	r0, sl, ip, lsl r5
    1c30:	06010402 	streq	r0, [r1], -r2, lsl #8
    1c34:	00050501 	andeq	r0, r5, r1, lsl #10
    1c38:	06010402 	streq	r0, [r1], -r2, lsl #8
    1c3c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1c40:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    1c44:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1c48:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    1c4c:	1a051e01 	bne	149458 <_Min_Stack_Size+0x149058>
    1c50:	01040200 	mrseq	r0, R12_usr
    1c54:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c58:	01040200 	mrseq	r0, R12_usr
    1c5c:	02002f06 	andeq	r2, r0, #6, 30
    1c60:	00130104 	andseq	r0, r3, r4, lsl #2
    1c64:	13010402 	movwne	r0, #5122	; 0x1402
    1c68:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1c6c:	051e0104 	ldreq	r0, [lr, #-260]	; 0xfffffefc
    1c70:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1c74:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1c78:	04020005 	streq	r0, [r2], #-5
    1c7c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1c80:	13010402 	movwne	r0, #5122	; 0x1402
    1c84:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1c88:	051f0104 	ldreq	r0, [pc, #-260]	; 1b8c <_Min_Stack_Size+0x178c>
    1c8c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1c90:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1c94:	04020005 	streq	r0, [r2], #-5
    1c98:	052f0601 	streq	r0, [pc, #-1537]!	; 169f <_Min_Stack_Size+0x129f>
    1c9c:	02050017 	andeq	r0, r5, #23
    1ca0:	08001304 	stmdaeq	r0, {r2, r8, r9, ip}
    1ca4:	017fbb03 	cmneq	pc, r3, lsl #22
    1ca8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1cac:	05110617 	ldreq	r0, [r1, #-1559]	; 0xfffff9e9
    1cb0:	17052106 	strne	r2, [r5, -r6, lsl #2]
    1cb4:	2105051f 	tstcs	r5, pc, lsl r5
    1cb8:	4b060305 	blmi	1828d4 <_Min_Stack_Size+0x1824d4>
    1cbc:	01041413 	tsteq	r4, r3, lsl r4
    1cc0:	97030905 	strls	r0, [r3, -r5, lsl #18]
    1cc4:	0305017f 	movweq	r0, #20863	; 0x517f
    1cc8:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    1ccc:	20190501 	andscs	r0, r9, r1, lsl #10
    1cd0:	0a050204 	beq	1424e8 <_Min_Stack_Size+0x1420e8>
    1cd4:	2e00e803 	cdpcs	8, 0, cr14, cr0, cr3, {0}
    1cd8:	21060305 	tstcs	r6, r5, lsl #6
    1cdc:	01060505 	tsteq	r6, r5, lsl #10
    1ce0:	052f062e 	streq	r0, [pc, #-1582]!	; 16ba <_Min_Stack_Size+0x12ba>
    1ce4:	05140611 	ldreq	r0, [r4, #-1553]	; 0xfffff9ef
    1ce8:	05580605 	ldrbeq	r0, [r8, #-1541]	; 0xfffff9fb
    1cec:	06010607 	streq	r0, [r1], -r7, lsl #12
    1cf0:	060a052f 	streq	r0, [sl], -pc, lsr #10
    1cf4:	20090501 	andcs	r0, r9, r1, lsl #10
    1cf8:	044b4b06 	strbeq	r4, [fp], #-2822	; 0xfffff4fa
    1cfc:	17140503 	ldrne	r0, [r4, -r3, lsl #10]
    1d00:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1d04:	02042e3c 	andeq	r2, r4, #60, 28	; 0x3c0
    1d08:	0d051806 	stceq	8, cr1, [r5, #-24]	; 0xffffffe8
    1d0c:	017fbe03 	cmneq	pc, r3, lsl #28
    1d10:	13130305 	tstne	r3, #335544320	; 0x14000000
    1d14:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    1d18:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    1d1c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1d20:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1d24:	25052007 	strcs	r2, [r5, #-7]
    1d28:	03045806 	movweq	r5, #18438	; 0x4806
    1d2c:	c2031305 	andgt	r1, r3, #335544320	; 0x14000000
    1d30:	03050100 	movweq	r0, #20736	; 0x5100
    1d34:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1d38:	043c2001 	ldrteq	r2, [ip], #-1
    1d3c:	06050502 	streq	r0, [r5], -r2, lsl #10
    1d40:	017fbe03 	cmneq	pc, r3, lsl #28
    1d44:	01060905 	tsteq	r6, r5, lsl #18
    1d48:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    1d4c:	0305560b 	movweq	r5, #22027	; 0x560b
    1d50:	200a0306 	andcs	r0, sl, r6, lsl #6
    1d54:	01060e05 	tsteq	r6, r5, lsl #28
    1d58:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    1d5c:	0501042f 	streq	r0, [r1, #-1071]	; 0xfffffbd1
    1d60:	7fb60309 	svcvc	0x00b60309
    1d64:	13030501 	movwne	r0, #13569	; 0x3501
    1d68:	01060f05 	tsteq	r6, r5, lsl #30
    1d6c:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    1d70:	02042e1f 	andeq	r2, r4, #496	; 0x1f0
    1d74:	c9030905 	stmdbgt	r3, {r0, r2, r8, fp}
    1d78:	07052000 	streq	r2, [r5, -r0]
    1d7c:	042f063c 	strteq	r0, [pc], #-1596	; 1d84 <_Min_Stack_Size+0x1984>
    1d80:	03130503 	tsteq	r3, #12582912	; 0xc00000
    1d84:	03050137 	movweq	r0, #20791	; 0x5137
    1d88:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1d8c:	3c202001 	stccc	0, cr2, [r0], #-4
    1d90:	07050204 	streq	r0, [r5, -r4, lsl #4]
    1d94:	01490306 	cmpeq	r9, r6, lsl #6
    1d98:	052e2e06 	streq	r2, [lr, #-3590]!	; 0xfffff1fa
    1d9c:	33030603 	movwcc	r0, #13827	; 0x3603
    1da0:	060f0501 	streq	r0, [pc], -r1, lsl #10
    1da4:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    1da8:	04042106 	streq	r2, [r4], #-262	; 0xfffffefa
    1dac:	c7031105 	strgt	r1, [r3, -r5, lsl #2]
    1db0:	1e05017e 	mcrne	1, 0, r0, cr5, cr14, {3}
    1db4:	06250501 	strteq	r0, [r5], -r1, lsl #10
    1db8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1dbc:	01b90316 			; <UNDEFINED> instruction: 0x01b90316
    1dc0:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
    1dc4:	0f052f06 	svceq	0x00052f06
    1dc8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1dcc:	1f0f0521 	svcne	0x000f0521
    1dd0:	2f060705 	svccs	0x00060705
    1dd4:	05330305 	ldreq	r0, [r3, #-773]!	; 0xfffffcfb
    1dd8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1ddc:	2f063c05 	svccs	0x00063c05
    1de0:	3c130501 	cfldr32cc	mvfx0, [r3], {1}
    1de4:	05240601 	streq	r0, [r4, #-1537]!	; 0xfffff9ff
    1de8:	0b052201 	bleq	14a5f4 <_Min_Stack_Size+0x14a1f4>
    1dec:	2e640306 	cdpcs	3, 6, cr0, cr4, cr6, {0}
    1df0:	01061705 	tsteq	r6, r5, lsl #14
    1df4:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    1df8:	052f0607 	streq	r0, [pc, #-1543]!	; 17f9 <_Min_Stack_Size+0x13f9>
    1dfc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1e00:	4b062009 	blmi	189e2c <_Min_Stack_Size+0x189a2c>
    1e04:	0503044b 	streq	r0, [r3, #-1099]	; 0xfffffbb5
    1e08:	03050114 	movweq	r0, #20756	; 0x5114
    1e0c:	044a0613 	strbeq	r0, [sl], #-1555	; 0xfffff9ed
    1e10:	06070502 	streq	r0, [r7], -r2, lsl #10
    1e14:	03050514 	movweq	r0, #21780	; 0x5514
    1e18:	0513584b 	ldreq	r5, [r3, #-2123]	; 0xfffff7b5
    1e1c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1e20:	25052007 	strcs	r2, [r5, #-7]
    1e24:	03045806 	movweq	r5, #18438	; 0x4806
    1e28:	3e031305 	cdpcc	3, 0, cr1, cr3, cr5, {0}
    1e2c:	13030501 	movwne	r0, #13569	; 0x3501
    1e30:	01060a05 	tsteq	r6, r5, lsl #20
    1e34:	02043c20 	andeq	r3, r4, #32, 24	; 0x2000
    1e38:	03060505 	movweq	r0, #25861	; 0x6505
    1e3c:	09050142 	stmdbeq	r5, {r1, r6, r8}
    1e40:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1e44:	06050520 	streq	r0, [r5], -r0, lsr #10
    1e48:	04040159 	streq	r0, [r4], #-345	; 0xfffffea7
    1e4c:	81031105 	tsthi	r3, r5, lsl #2
    1e50:	1e05017f 	mcrne	1, 0, r0, cr5, cr15, {3}
    1e54:	06250501 	strteq	r0, [r5], -r1, lsl #10
    1e58:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1e5c:	00fc030b 	rscseq	r0, ip, fp, lsl #6
    1e60:	05040420 	streq	r0, [r4, #-1056]	; 0xfffffbe0
    1e64:	7f840325 	svcvc	0x00840325
    1e68:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
    1e6c:	00ff0305 	rscseq	r0, pc, r5, lsl #6
    1e70:	09030620 	stmdbeq	r3, {r5, r9, sl}
    1e74:	05030466 	streq	r0, [r3, #-1126]	; 0xfffffb9a
    1e78:	01330313 	teqeq	r3, r3, lsl r3
    1e7c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1e80:	2001060a 	andcs	r0, r1, sl, lsl #12
    1e84:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    1e88:	4d030605 	stcmi	6, cr0, [r3, #-20]	; 0xffffffec
    1e8c:	2e2e0601 	cfmadda32cs	mvax0, mvax0, mvfx14, mvfx1
    1e90:	06090520 	streq	r0, [r9], -r0, lsr #10
    1e94:	05013903 	streq	r3, [r1, #-2307]	; 0xfffff6fd
    1e98:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    1e9c:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    1ea0:	0120063d 			; <UNDEFINED> instruction: 0x0120063d
    1ea4:	01011305 	tsteq	r1, r5, lsl #6
    1ea8:	01300505 	teqeq	r0, r5, lsl #10
    1eac:	01011305 	tsteq	r1, r5, lsl #6
    1eb0:	01000f02 	tsteq	r0, r2, lsl #30
    1eb4:	00035501 	andeq	r5, r3, r1, lsl #10
    1eb8:	a7000300 	strge	r0, [r0, -r0, lsl #6]
    1ebc:	02000000 	andeq	r0, r0, #0
    1ec0:	0d0efb01 	vstreq	d15, [lr, #-4]
    1ec4:	01010100 	mrseq	r0, (UNDEF: 17)
    1ec8:	00000001 	andeq	r0, r0, r1
    1ecc:	01000001 	tsteq	r0, r1
    1ed0:	00637273 	rsbeq	r7, r3, r3, ror r2
    1ed4:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    1ed8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1edc:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    1ee0:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1ee4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1ee8:	61652d65 	cmnvs	r5, r5, ror #26
    1eec:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    1ef0:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    1ef4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1ef8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1efc:	62696c00 	rsbvs	r6, r9, #0, 24
    1f00:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1f04:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1f08:	73750000 	cmnvc	r5, #0
    1f0c:	6f6c5f62 	svcvs	0x006c5f62
    1f10:	00632e67 	rsbeq	r2, r3, r7, ror #28
    1f14:	75000001 	strvc	r0, [r0, #-1]
    1f18:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
    1f1c:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
    1f20:	00000100 	andeq	r0, r0, r0, lsl #2
    1f24:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1f28:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1f2c:	00000200 	andeq	r0, r0, r0, lsl #4
    1f30:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    1f34:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
    1f38:	0300682e 	movweq	r6, #2094	; 0x82e
    1f3c:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    1f40:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1f44:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    1f48:	316c3233 	cmncc	ip, r3, lsr r2
    1f4c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    1f50:	00000300 	andeq	r0, r0, r0, lsl #6
    1f54:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1f58:	35316c32 	ldrcc	r6, [r1, #-3122]!	; 0xfffff3ce
    1f5c:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
    1f60:	00030068 	andeq	r0, r3, r8, rrx
    1f64:	1a050000 	bne	141f6c <_Min_Stack_Size+0x141b6c>
    1f68:	78020500 	stmdavc	r2, {r8, sl}
    1f6c:	03080014 	movweq	r0, #32788	; 0x8014
    1f70:	03050109 	movweq	r0, #20745	; 0x5109
    1f74:	06100513 			; <UNDEFINED> instruction: 0x06100513
    1f78:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    1f7c:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    1f80:	28052101 	stmdacs	r5, {r0, r8, sp}
    1f84:	03056906 	movweq	r6, #22790	; 0x5906
    1f88:	06280513 			; <UNDEFINED> instruction: 0x06280513
    1f8c:	210c0511 	tstcs	ip, r1, lsl r5
    1f90:	051f2805 	ldreq	r2, [pc, #-2053]	; 1793 <_Min_Stack_Size+0x1393>
    1f94:	0305210c 	movweq	r2, #20748	; 0x510c
    1f98:	11052f06 	tstne	r5, r6, lsl #30
    1f9c:	0c050106 	stfeqs	f0, [r5], {6}
    1fa0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1fa4:	0605054b 	streq	r0, [r5], -fp, asr #10
    1fa8:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1fac:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    1fb0:	08052e01 	stmdaeq	r5, {r0, r9, sl, fp, sp}
    1fb4:	06030521 	streq	r0, [r3], -r1, lsr #10
    1fb8:	060b0534 			; <UNDEFINED> instruction: 0x060b0534
    1fbc:	21010501 	tstcs	r1, r1, lsl #10
    1fc0:	03060505 	movweq	r0, #25861	; 0x6505
    1fc4:	1705207a 	smlsdxne	r5, sl, r0, r2
    1fc8:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    1fcc:	210e052e 	tstcs	lr, lr, lsr #10
    1fd0:	051f1205 	ldreq	r1, [pc, #-517]	; 1dd3 <_Min_Stack_Size+0x19d3>
    1fd4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1fd8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1fdc:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1fe0:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1fe4:	02050006 	andeq	r0, r5, #6
    1fe8:	080014c8 	stmdaeq	r0, {r3, r6, r7, sl, ip}
    1fec:	13030518 	movwne	r0, #13592	; 0x3518
    1ff0:	11062605 	tstne	r6, r5, lsl #12
    1ff4:	21110520 	tstcs	r1, r0, lsr #10
    1ff8:	2f060305 	svccs	0x00060305
    1ffc:	01060c05 	tsteq	r6, r5, lsl #24
    2000:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    2004:	13051f0c 	movwne	r1, #24332	; 0x5f0c
    2008:	2d0c0521 	cfstr32cs	mvfx0, [ip, #-132]	; 0xffffff7c
    200c:	21060305 	tstcs	r6, r5, lsl #6
    2010:	05011005 	streq	r1, [r1, #-5]
    2014:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    2018:	05200608 	streq	r0, [r0, #-1544]!	; 0xfffff9f8
    201c:	05340603 	ldreq	r0, [r4, #-1539]!	; 0xfffff9fd
    2020:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2024:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    2028:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    202c:	79030605 	stmdbvc	r3, {r0, r2, r9, sl}
    2030:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    2034:	300e0501 	andcc	r0, lr, r1, lsl #10
    2038:	051e0c05 	ldreq	r0, [lr, #-3077]	; 0xfffff3fb
    203c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    2040:	01060805 	tsteq	r6, r5, lsl #16
    2044:	2f060505 	svccs	0x00060505
    2048:	45050106 	strmi	r0, [r5, #-262]	; 0xfffffefa
    204c:	02050006 	andeq	r0, r5, #6
    2050:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
    2054:	05012203 	streq	r2, [r1, #-515]	; 0xfffffdfd
    2058:	05051303 	streq	r1, [r5, #-771]	; 0xfffffcfd
    205c:	59060106 	stmdbpl	r6, {r1, r2, r8}
    2060:	01060705 	tsteq	r6, r5, lsl #14
    2064:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    2068:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
    206c:	01060f05 	tsteq	r6, r5, lsl #30
    2070:	05221005 	streq	r1, [r2, #-5]!
    2074:	09051e0f 	stmdbeq	r5, {r0, r1, r2, r3, r9, sl, fp, ip}
    2078:	0f052106 	svceq	0x00052106
    207c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2080:	10052f06 	andne	r2, r5, r6, lsl #30
    2084:	0a050106 	beq	1424a4 <_Min_Stack_Size+0x1420a4>
    2088:	21010524 	tstcs	r1, r4, lsr #10
    208c:	4c064c05 	stcmi	12, cr4, [r6], {5}
    2090:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2094:	0511064c 	ldreq	r0, [r1, #-1612]	; 0xfffff9b4
    2098:	59062105 	stmdbpl	r6, {r0, r2, r8, sp}
    209c:	01060705 	tsteq	r6, r5, lsl #14
    20a0:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    20a4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    20a8:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    20ac:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
    20b0:	13050204 	movwne	r0, #20996	; 0x5204
    20b4:	0100e703 	tsteq	r0, r3, lsl #14
    20b8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    20bc:	2001060a 	andcs	r0, r1, sl, lsl #12
    20c0:	01042e20 	tsteq	r4, r0, lsr #28
    20c4:	96031e05 	strls	r1, [r3], -r5, lsl #28
    20c8:	0105017f 	tsteq	r5, pc, ror r1
    20cc:	1f0a0528 	svcne	0x000a0528
    20d0:	06140520 	ldreq	r0, [r4], -r0, lsr #10
    20d4:	58020500 	stmdapl	r2, {r8, sl}
    20d8:	14080015 	strne	r0, [r8], #-21	; 0xffffffeb
    20dc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    20e0:	05110614 	ldreq	r0, [r1, #-1556]	; 0xfffff9ec
    20e4:	67062103 	strvs	r2, [r6, -r3, lsl #2]
    20e8:	06010567 	streq	r0, [r1], -r7, ror #10
    20ec:	2d030513 	cfstr32cs	mvfx0, [r3, #-76]	; 0xffffffb4
    20f0:	00061d05 	andeq	r1, r6, r5, lsl #26
    20f4:	15820205 	strne	r0, [r2, #517]	; 0x205
    20f8:	05150800 	ldreq	r0, [r5, #-2048]	; 0xfffff800
    20fc:	05051303 	streq	r1, [r5, #-771]	; 0xfffffcfd
    2100:	051f1306 	ldreq	r1, [pc, #-774]	; 1e02 <_Min_Stack_Size+0x1a02>
    2104:	051f0606 	ldreq	r0, [pc, #-1542]	; 1b06 <_Min_Stack_Size+0x1706>
    2108:	20061405 	andcs	r1, r6, r5, lsl #8
    210c:	062e0614 			; <UNDEFINED> instruction: 0x062e0614
    2110:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    2114:	98020500 	stmdals	r2, {r8, sl}
    2118:	16080015 			; <UNDEFINED> instruction: 0x16080015
    211c:	13130305 	tstne	r3, #335544320	; 0x14000000
    2120:	10063a05 	andne	r3, r6, r5, lsl #20
    2124:	3e11052e 	cfmul64cc	mvdx0, mvdx1, mvdx14
    2128:	2f060305 	svccs	0x00060305
    212c:	11060c05 	tstne	r6, r5, lsl #24
    2130:	2105052e 	tstcs	r5, lr, lsr #10
    2134:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    2138:	01060f05 	tsteq	r6, r5, lsl #30
    213c:	20200505 	eorcs	r0, r0, r5, lsl #10
    2140:	13062f06 	movwne	r2, #28422	; 0x6f06
    2144:	052d0e05 	streq	r0, [sp, #-3589]!	; 0xfffff1fb
    2148:	2f210605 	svccs	0x00210605
    214c:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    2150:	03060104 	movweq	r0, #24836	; 0x6104
    2154:	07053c78 	smlsdxeq	r5, r8, ip, r3
    2158:	01040200 	mrseq	r0, R12_usr
    215c:	003c1203 	eorseq	r1, ip, r3, lsl #4
    2160:	1c010402 	cfstrsne	mvf0, [r1], {2}
    2164:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2168:	05470104 	strbeq	r0, [r7, #-260]	; 0xfffffefc
    216c:	0402000d 	streq	r0, [r2], #-13
    2170:	03052001 	movweq	r2, #20481	; 0x5001
    2174:	01040200 	mrseq	r0, R12_usr
    2178:	0f03063c 	svceq	0x0003063c
    217c:	06010520 	streq	r0, [r1], -r0, lsr #10
    2180:	2d030513 	cfstr32cs	mvfx0, [r3, #-76]	; 0xffffffb4
    2184:	06050520 	streq	r0, [r5], -r0, lsr #10
    2188:	052e7203 	streq	r7, [lr, #-515]!	; 0xfffffdfd
    218c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2190:	2f062007 	svccs	0x00062007
    2194:	0632063d 			; <UNDEFINED> instruction: 0x0632063d
    2198:	4105052f 	tstmi	r5, pc, lsr #10
    219c:	052e3c06 	streq	r3, [lr, #-3078]!	; 0xfffff3fa
    21a0:	7803060b 	stmdavc	r3, {r0, r1, r3, r9, sl}
    21a4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    21a8:	06070501 	streq	r0, [r7], -r1, lsl #10
    21ac:	01053d2f 	tsteq	r5, pc, lsr #26
    21b0:	3c090306 	stccc	3, cr0, [r9], {6}
    21b4:	a0061405 	andge	r1, r6, r5, lsl #8
    21b8:	13130305 	tstne	r3, #335544320	; 0x14000000
    21bc:	06140513 			; <UNDEFINED> instruction: 0x06140513
    21c0:	2306050f 	movwcs	r0, #25871	; 0x650f
    21c4:	051d1405 	ldreq	r1, [sp, #-1029]	; 0xfffffbfb
    21c8:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    21cc:	054b0620 	strbeq	r0, [fp, #-1568]	; 0xfffff9e0
    21d0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    21d4:	044b0605 	strbeq	r0, [fp], #-1541	; 0xfffff9fb
    21d8:	03140502 	tsteq	r4, #8388608	; 0x800000
    21dc:	03050123 	movweq	r0, #20771	; 0x5123
    21e0:	2e3c0613 	mrccs	6, 1, r0, cr12, cr3, {0}
    21e4:	03060104 	movweq	r0, #24836	; 0x6104
    21e8:	0605015e 			; <UNDEFINED> instruction: 0x0605015e
    21ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    21f0:	04590620 	ldrbeq	r0, [r9], #-1568	; 0xfffff9e0
    21f4:	03130502 	tsteq	r3, #8388608	; 0x800000
    21f8:	0305012d 	movweq	r0, #20781	; 0x512d
    21fc:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    2200:	01044a01 	tsteq	r4, r1, lsl #20
    2204:	54030105 	strpl	r0, [r3], #-261	; 0xfffffefb
    2208:	00050201 	andeq	r0, r5, r1, lsl #4
    220c:	01100101 	tsteq	r0, r1, lsl #2
    2210:	00030000 	andeq	r0, r3, r0
    2214:	0000007b 	andeq	r0, r0, fp, ror r0
    2218:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    221c:	0101000d 	tsteq	r1, sp
    2220:	00000101 	andeq	r0, r0, r1, lsl #2
    2224:	00000100 	andeq	r0, r0, r0, lsl #2
    2228:	2f2e2e01 	svccs	0x002e2e01
    222c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2230:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2234:	2f2e2e2f 	svccs	0x002e2e2f
    2238:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    223c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2240:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    2244:	2f62696c 	svccs	0x0062696c
    2248:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    224c:	73696d2f 	cmnvc	r9, #3008	; 0xbc0
    2250:	752f0063 	strvc	r0, [pc, #-99]!	; 21f5 <_Min_Stack_Size+0x1df5>
    2254:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 2090 <_Min_Stack_Size+0x1c90>
    2258:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    225c:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    2260:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2264:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2268:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    226c:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
    2270:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    2274:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2278:	00006564 	andeq	r6, r0, r4, ror #10
    227c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2280:	0100632e 	tsteq	r0, lr, lsr #6
    2284:	74730000 	ldrbtvc	r0, [r3], #-0
    2288:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    228c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2290:	05000000 	streq	r0, [r0, #-0]
    2294:	02050001 	andeq	r0, r5, #1
    2298:	08001678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, ip}
    229c:	05011e03 	streq	r1, [r1, #-3587]	; 0xfffff1fd
    22a0:	14131303 	ldrne	r1, [r3], #-771	; 0xfffffcfd
    22a4:	0e060105 	adfeqs	f0, f6, f5
    22a8:	05241f05 	streq	r1, [r4, #-3845]!	; 0xfffff0fb
    22ac:	063d0603 	ldrteq	r0, [sp], -r3, lsl #12
    22b0:	0a052001 	beq	14a2bc <_Min_Stack_Size+0x149ebc>
    22b4:	00050520 	andeq	r0, r5, r0, lsr #10
    22b8:	06030402 	streq	r0, [r3], -r2, lsl #8
    22bc:	001b0521 	andseq	r0, fp, r1, lsr #10
    22c0:	06030402 	streq	r0, [r3], -r2, lsl #8
    22c4:	001a0511 	andseq	r0, sl, r1, lsl r5
    22c8:	21030402 	tstcs	r3, r2, lsl #8
    22cc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    22d0:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    22d4:	04020003 	streq	r0, [r2], #-3
    22d8:	32061f03 	andcc	r1, r6, #3, 30
    22dc:	15061c05 	strne	r1, [r6, #-3077]	; 0xfffff3fb
    22e0:	1d030520 	cfstr32ne	mvfx0, [r3, #-128]	; 0xffffff80
    22e4:	1c053106 	stfnes	f3, [r5], {6}
    22e8:	03050106 	movweq	r0, #20742	; 0x5106
    22ec:	01062106 	tsteq	r6, r6, lsl #2
    22f0:	200a0520 	andcs	r0, sl, r0, lsr #10
    22f4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    22f8:	21060304 	tstcs	r6, r4, lsl #6
    22fc:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    2300:	11060304 	tstne	r6, r4, lsl #6
    2304:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    2308:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
    230c:	04020005 	streq	r0, [r2], #-5
    2310:	03052e03 	movweq	r2, #24067	; 0x5e03
    2314:	03040200 	movweq	r0, #16896	; 0x4200
    2318:	3001051f 	andcc	r0, r1, pc, lsl r5
    231c:	00080220 	andeq	r0, r8, r0, lsr #4
    2320:	Address 0x0000000000002320 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
       4:	50005242 	andpl	r5, r0, r2, asr #4
       8:	52445055 	subpl	r5, r4, #85	; 0x55
       c:	4b434c00 	blmi	10d3014 <_Min_Stack_Size+0x10d2c14>
      10:	72730052 	rsbsvc	r0, r3, #82	; 0x52
      14:	616d2f63 	cmnvs	sp, r3, ror #30
      18:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
      1c:	44535400 	ldrbmi	r5, [r3], #-1024	; 0xfffffc00
      20:	4b420052 	blmi	1080170 <_Min_Stack_Size+0x107fd70>
      24:	52363250 	eorspl	r3, r6, #80, 4
      28:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
      2c:	00524550 	subseq	r4, r2, r0, asr r5
      30:	33504b42 	cmpcc	r0, #67584	; 0x10800
      34:	73005230 	movwvc	r5, #560	; 0x230
      38:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
      3c:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
      40:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      44:	006c616e 	rsbeq	r6, ip, lr, ror #2
      48:	33504b42 	cmpcc	r0, #67584	; 0x10800
      4c:	52500052 	subspl	r0, r0, #82	; 0x52
      50:	4d005245 	sfmmi	f5, 4, [r0, #-276]	; 0xfffffeec
      54:	5245444f 	subpl	r4, r5, #1325400064	; 0x4f000000
      58:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      5c:	6f6c2067 	svcvs	0x006c2067
      60:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
      64:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      68:	2064656e 	rsbcs	r6, r4, lr, ror #10
      6c:	00746e69 	rsbseq	r6, r4, r9, ror #28
      70:	4b475250 	blmi	11d49b8 <_Min_Stack_Size+0x11d45b8>
      74:	00525945 	subseq	r5, r2, r5, asr #18
      78:	5f435452 	svcpl	0x00435452
      7c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
      80:	00666544 	rsbeq	r6, r6, r4, asr #10
      84:	5f425355 	svcpl	0x00425355
      88:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
      8c:	6f6c0070 	svcvs	0x006c0070
      90:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      94:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      98:	00746e69 	rsbseq	r6, r4, r9, ror #28
      9c:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
      a0:	414c4600 	cmpmi	ip, r0, lsl #12
      a4:	545f4853 	ldrbpl	r4, [pc], #-2131	; ac <_Min_Heap_Size+0xac>
      a8:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      ac:	50006665 	andpl	r6, r0, r5, ror #12
      b0:	00524345 	subseq	r4, r2, r5, asr #6
      b4:	636f6c63 	cmnvs	pc, #25344	; 0x6300
      b8:	53485f6b 	movtpl	r5, #36715	; 0x8f6b
      bc:	504b4200 	subpl	r4, fp, r0, lsl #4
      c0:	00523732 	subseq	r3, r2, r2, lsr r7
      c4:	53535354 	cmppl	r3, #84, 6	; 0x50000001
      c8:	6d2f0052 	stcvs	0, cr0, [pc, #-328]!	; ffffff88 <BootRAM+0xef70729>
      cc:	61696465 	cmnvs	r9, r5, ror #8
      d0:	7478652f 	ldrbtvc	r6, [r8], #-1327	; 0xfffffad1
      d4:	7665642f 	strbtvc	r6, [r5], -pc, lsr #8
      d8:	6263702f 	rsbvs	r7, r3, #47	; 0x2f
      dc:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
      e0:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
      e4:	6172676f 	cmnvs	r2, pc, ror #14
      e8:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
      ec:	7269662f 	rsbvc	r6, r9, #49283072	; 0x2f00000
      f0:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
      f4:	314c5f65 	cmpcc	ip, r5, ror #30
      f8:	6d65742f 	cfstrdvs	mvd7, [r5, #-188]!	; 0xffffff44
      fc:	4b420070 	blmi	10802c4 <_Min_Stack_Size+0x107fec4>
     100:	52313350 	eorspl	r3, r1, #80, 6	; 0x40000001
     104:	42504100 	subsmi	r4, r0, #0, 2
     108:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
     10c:	4b420052 	blmi	108025c <_Min_Stack_Size+0x107fe5c>
     110:	00523450 	subseq	r3, r2, r0, asr r4
     114:	4d524c41 	ldclmi	12, cr4, [r2, #-260]	; 0xfffffefc
     118:	52535342 	subspl	r5, r3, #134217729	; 0x8000001
     11c:	42484100 	submi	r4, r8, #0, 2
     120:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     124:	4b420052 	blmi	1080274 <_Min_Stack_Size+0x107fe74>
     128:	52363150 	eorspl	r3, r6, #80, 2
     12c:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
     130:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
     134:	62737500 	rsbsvs	r7, r3, #0, 10
     138:	616c635f 	cmnvs	ip, pc, asr r3
     13c:	705f7373 	subsvc	r7, pc, r3, ror r3	; <UNPREDICTABLE>
     140:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     144:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     148:	745f3631 	ldrbvc	r3, [pc], #-1585	; 150 <_Min_Heap_Size+0x150>
     14c:	504b4200 	subpl	r4, fp, r0, lsl #4
     150:	00523032 	subseq	r3, r2, r2, lsr r0
     154:	454b4450 	strbmi	r4, [fp, #-1104]	; 0xfffffbb0
     158:	4f005259 	svcmi	0x00005259
     15c:	45455053 	strbmi	r5, [r5, #-83]	; 0xffffffad
     160:	69005244 	stmdbvs	r0, {r2, r6, r9, ip, lr}
     164:	3374696e 	cmncc	r4, #1802240	; 0x1b8000
     168:	4b420032 	blmi	1080238 <_Min_Stack_Size+0x107fe38>
     16c:	52383250 	eorspl	r3, r8, #80, 4
     170:	524c4100 	subpl	r4, ip, #0, 2
     174:	5353414d 	cmppl	r3, #1073741843	; 0x40000013
     178:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
     17c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     180:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     184:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     188:	4b42006b 	blmi	108033c <_Min_Stack_Size+0x107ff3c>
     18c:	00523550 	subseq	r3, r2, r0, asr r5
     190:	31504b42 	cmpcc	r0, r2, asr #22
     194:	47005237 	smladxmi	r0, r7, r2, r5
     198:	5f4f4950 	svcpl	0x004f4950
     19c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     1a0:	00666544 	rsbeq	r6, r6, r4, asr #10
     1a4:	5f434352 	svcpl	0x00434352
     1a8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     1ac:	00666544 	rsbeq	r6, r6, r4, asr #10
     1b0:	31504b42 	cmpcc	r0, r2, asr #22
     1b4:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     1b8:	3132504b 	teqcc	r2, fp, asr #32
     1bc:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     1c0:	2074726f 	rsbscs	r7, r4, pc, ror #4
     1c4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     1c8:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     1cc:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     1d0:	656c7300 	strbvs	r7, [ip, #-768]!	; 0xfffffd00
     1d4:	41007065 	tstmi	r0, r5, rrx
     1d8:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
     1dc:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     1e0:	54535400 	ldrbpl	r5, [r3], #-1024	; 0xfffffc00
     1e4:	41540052 	cmpmi	r4, r2, asr r0
     1e8:	00524346 	subseq	r4, r2, r6, asr #6
     1ec:	31504b42 	cmpcc	r0, r2, asr #22
     1f0:	42005230 	andmi	r5, r0, #48, 4
     1f4:	3932504b 	ldmdbcc	r2!, {r0, r1, r3, r6, ip, lr}
     1f8:	50410052 	subpl	r0, r1, r2, asr r0
     1fc:	504c3242 	subpl	r3, ip, r2, asr #4
     200:	00524e45 	subseq	r4, r2, r5, asr #28
     204:	5f525750 	svcpl	0x00525750
     208:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     20c:	00666544 	rsbeq	r6, r6, r4, asr #10
     210:	36504b42 	ldrbcc	r4, [r0], -r2, asr #22
     214:	4b420052 	blmi	1080364 <_Min_Stack_Size+0x107ff64>
     218:	52383150 	eorspl	r3, r8, #80, 2
     21c:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
     220:	75710052 	ldrbvc	r0, [r1, #-82]!	; 0xffffffae
     224:	7a747261 	bvc	1d1cbb0 <_Min_Stack_Size+0x1d1c7b0>
     228:	504b4200 	subpl	r4, fp, r0, lsl #4
     22c:	00523232 	subseq	r3, r2, r2, lsr r2
     230:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
     234:	52570031 	subspl	r0, r7, #49	; 0x31
     238:	00325250 	eorseq	r5, r2, r0, asr r2
     23c:	31504b42 	cmpcc	r0, r2, asr #22
     240:	41005231 	tstmi	r0, r1, lsr r2
     244:	53524248 	cmppl	r2, #72, 4	; 0x80000004
     248:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     24c:	00656d69 	rsbeq	r6, r5, r9, ror #26
     250:	31425041 	cmpcc	r2, r1, asr #32
     254:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     258:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff360 <BootRAM+0xef6fb01>
     25c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     260:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     264:	4c410071 	mcrrmi	0, 7, r0, r1, cr1
     268:	52414d52 	subpl	r4, r1, #5248	; 0x1480
     26c:	504b4200 	subpl	r4, fp, r0, lsl #4
     270:	42005237 	andmi	r5, r0, #1879048195	; 0x70000003
     274:	3931504b 	ldmdbcc	r1!, {r0, r1, r3, r6, ip, lr}
     278:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     27c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     280:	00374445 	eorseq	r4, r7, r5, asr #8
     284:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     288:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     28c:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
     290:	3332504b 	teqcc	r2, #75	; 0x4b
     294:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     298:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     29c:	63206465 			; <UNDEFINED> instruction: 0x63206465
     2a0:	00726168 	rsbseq	r6, r2, r8, ror #2
     2a4:	5f4d5449 	svcpl	0x004d5449
     2a8:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
     2ac:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     2b0:	6f687300 	svcvs	0x00687300
     2b4:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     2b8:	4200746e 	andmi	r7, r0, #1845493760	; 0x6e000000
     2bc:	5230504b 	eorspl	r5, r0, #75	; 0x4b
     2c0:	53455200 	movtpl	r5, #20992	; 0x5200
     2c4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     2c8:	4b420044 	blmi	10803e0 <_Min_Stack_Size+0x107ffe0>
     2cc:	52323150 	eorspl	r3, r2, #80, 2
     2d0:	42504100 	subsmi	r4, r0, #0, 2
     2d4:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     2d8:	73797300 	cmnvc	r9, #0, 6
     2dc:	6b636974 	blvs	18da8b4 <_Min_Stack_Size+0x18da4b4>
     2e0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     2e4:	4c410074 	mcrrmi	0, 7, r0, r1, cr4
     2e8:	52424d52 	subpl	r4, r2, #5248	; 0x1480
     2ec:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
     2f0:	4b420052 	blmi	1080440 <_Min_Stack_Size+0x1080040>
     2f4:	00523850 	subseq	r3, r2, r0, asr r8
     2f8:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     2fc:	745f3233 	ldrbvc	r3, [pc], #-563	; 304 <_Min_Heap_Size+0x304>
     300:	54555700 	ldrbpl	r5, [r5], #-1792	; 0xfffff900
     304:	4b420052 	blmi	1080454 <_Min_Stack_Size+0x1080054>
     308:	52343250 	eorspl	r3, r4, #80, 4
     30c:	504b4200 	subpl	r4, fp, r0, lsl #4
     310:	41005231 	tstmi	r0, r1, lsr r2
     314:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     318:	4200524e 	andmi	r5, r0, #-536870908	; 0xe0000004
     31c:	3331504b 	teqcc	r1, #75	; 0x4b
     320:	48530052 	ldmdami	r3, {r1, r4, r6}^
     324:	52544649 	subspl	r4, r4, #76546048	; 0x4900000
     328:	53434900 	movtpl	r4, #14592	; 0x3900
     32c:	42005243 	andmi	r5, r0, #805306372	; 0x30000004
     330:	5239504b 	eorspl	r5, r9, #75	; 0x4b
     334:	4b455000 	blmi	115433c <_Min_Stack_Size+0x1153f3c>
     338:	00525945 	subseq	r5, r2, r5, asr #18
     33c:	32504b42 	subscc	r4, r0, #67584	; 0x10800
     340:	42005235 	andmi	r5, r0, #1342177283	; 0x50000003
     344:	5232504b 	eorspl	r5, r2, #75	; 0x4b
     348:	504b4200 	subpl	r4, fp, r0, lsl #4
     34c:	00523431 	subseq	r3, r2, r1, lsr r4
     350:	6e69616d 	powvsez	f6, f1, #5.0
     354:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     358:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     35c:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
     360:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
     364:	30393130 	eorscc	r3, r9, r0, lsr r1
     368:	20333037 	eorscs	r3, r3, r7, lsr r0
     36c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
     370:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
     374:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
     378:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
     37c:	6172622d 	cmnvs	r2, sp, lsr #4
     380:	2068636e 	rsbcs	r6, r8, lr, ror #6
     384:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     388:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     38c:	33373220 	teqcc	r7, #32, 4
     390:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
     394:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     398:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     39c:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     3a0:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     3a4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     3a8:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     3ac:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     3b0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     3b4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     3b8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
     3bc:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
     3c0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     3c4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     3c8:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	; 0xfffffe28
     3cc:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
     3d0:	66726177 			; <UNDEFINED> instruction: 0x66726177
     3d4:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     3d8:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
     3dc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 24c <_Min_Heap_Size+0x24c>
     3e0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     3e4:	006e6974 	rsbeq	r6, lr, r4, ror r9
     3e8:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     3ec:	7300524e 	movwvc	r5, #590	; 0x24e
     3f0:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
     3f4:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     3f8:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
     3fc:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
     400:	43004249 	movwmi	r4, #585	; 0x249
     404:	004c5254 	subeq	r5, ip, r4, asr r2
     408:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
     40c:	73795300 	cmnvc	r9, #0, 6
     410:	6b636954 	blvs	18da968 <_Min_Stack_Size+0x18da568>
     414:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     418:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     41c:	73795300 	cmnvc	r9, #0, 6
     420:	6b636954 	blvs	18da978 <_Min_Stack_Size+0x18da578>
     424:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     428:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
     42c:	5f31314d 	svcpl	0x0031314d
     430:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     434:	6e497700 	cdpvs	7, 4, cr7, cr9, cr0, {0}
     438:	00786564 	rsbseq	r6, r8, r4, ror #10
     43c:	43535953 	cmpmi	r3, #1359872	; 0x14c000
     440:	545f4746 	ldrbpl	r4, [pc], #-1862	; 448 <_Min_Stack_Size+0x48>
     444:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     448:	62006665 	andvs	r6, r0, #105906176	; 0x6500000
     44c:	36316675 			; <UNDEFINED> instruction: 0x36316675
     450:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     454:	52495f39 	subpl	r5, r9, #57, 30	; 0xe4
     458:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     45c:	5f31414d 	svcpl	0x0031414d
     460:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     464:	376c656e 	strbcc	r6, [ip, -lr, ror #10]!
     468:	5152495f 	cmppl	r2, pc, asr r9
     46c:	3249006e 	subcc	r0, r9, #110	; 0x6e
     470:	455f3243 	ldrbmi	r3, [pc, #-579]	; 235 <_Min_Heap_Size+0x235>
     474:	52495f52 	subpl	r5, r9, #328	; 0x148
     478:	53006e51 	movwpl	r6, #3665	; 0xe51
     47c:	495f4356 	ldmdbmi	pc, {r1, r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     480:	006e5152 	rsbeq	r5, lr, r2, asr r1
     484:	344d4954 	strbcc	r4, [sp], #-2388	; 0xfffff6ac
     488:	5152495f 	cmppl	r2, pc, asr r9
     48c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     490:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     494:	6e6e6168 	powvsez	f6, f6, #0.0
     498:	5f326c65 	svcpl	0x00326c65
     49c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4a0:	616d7000 	cmnvs	sp, r0
     4a4:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
     4a8:	745f7263 	ldrbvc	r7, [pc], #-611	; 4b0 <_Min_Stack_Size+0xb0>
     4ac:	526d6200 	rsbpl	r6, sp, #0, 4
     4b0:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
     4b4:	79547473 	ldmdbvc	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     4b8:	73006570 	movwvc	r6, #1392	; 0x570
     4bc:	70757465 	rsbsvc	r7, r5, r5, ror #8
     4c0:	6361705f 	cmnvs	r1, #95	; 0x5f
     4c4:	0074656b 	rsbseq	r6, r4, fp, ror #10
     4c8:	53414c46 	movtpl	r4, #7238	; 0x1c46
     4cc:	52495f48 	subpl	r5, r9, #72, 30	; 0x120
     4d0:	62006e51 	andvs	r6, r0, #1296	; 0x510
     4d4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
     4d8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     4dc:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     4e0:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
     4e4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4e8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     4ec:	315f3531 	cmpcc	pc, r1, lsr r5	; <UNPREDICTABLE>
     4f0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     4f4:	6c006e51 	stcvs	14, cr6, [r0], {81}	; 0x51
     4f8:	61747361 	cmnvs	r4, r1, ror #6
     4fc:	00726464 	rsbseq	r6, r2, r4, ror #8
     500:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     504:	495f5653 	ldmdbmi	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     508:	006e5152 	rsbeq	r5, lr, r2, asr r1
     50c:	5f627375 	svcpl	0x00627375
     510:	73616c63 	cmnvc	r1, #25344	; 0x6300
     514:	6f735f73 	svcvs	0x00735f73
     518:	454d0066 	strbmi	r0, [sp, #-102]	; 0xffffff9a
     51c:	504d524d 	subpl	r5, sp, sp, asr #4
     520:	43435200 	movtmi	r5, #12800	; 0x3200
     524:	5152495f 	cmppl	r2, pc, asr r9
     528:	5677006e 	ldrbtpl	r0, [r7], -lr, rrx
     52c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     530:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     534:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     538:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     53c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     540:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     544:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     548:	635f3070 	cmpvs	pc, #112	; 0x70
     54c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     550:	54534900 	ldrbpl	r4, [r3], #-2304	; 0xfffff700
     554:	41540052 	cmpmi	r4, r2, asr r0
     558:	5245504d 	subpl	r5, r5, #77	; 0x4d
     55c:	4154535f 	cmpmi	r4, pc, asr r3
     560:	495f504d 	ldmdbmi	pc, {r0, r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     564:	006e5152 	rsbeq	r5, lr, r2, asr r1
     568:	52455349 	subpl	r5, r5, #603979777	; 0x24000001
     56c:	646e6500 	strbtvs	r6, [lr], #-1280	; 0xfffffb00
     570:	61635f70 	smcvs	13808	; 0x35f0
     574:	61626c6c 	cmnvs	r2, ip, ror #24
     578:	645f6b63 	ldrbvs	r6, [pc], #-2915	; 580 <_Min_Stack_Size+0x180>
     57c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     580:	4400746c 	strmi	r7, [r0], #-1132	; 0xfffffb94
     584:	5f32414d 	svcpl	0x0032414d
     588:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     58c:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
     590:	5152495f 	cmppl	r2, pc, asr r9
     594:	5352006e 	cmppl	r2, #110	; 0x6e
     598:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     59c:	53003144 	movwpl	r3, #324	; 0x144
     5a0:	5f314950 	svcpl	0x00314950
     5a4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5a8:	73755f00 	cmnvc	r5, #0, 30
     5ac:	70655f62 	rsbvc	r5, r5, r2, ror #30
     5b0:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     5b4:	54006574 	strpl	r6, [r0], #-1396	; 0xfffffa8c
     5b8:	5f364d49 	svcpl	0x00364d49
     5bc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5c0:	414d4400 	cmpmi	sp, r0, lsl #8
     5c4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     5c8:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     5cc:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     5d0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     5d4:	4349564e 	movtmi	r5, #38478	; 0x964e
     5d8:	616e455f 	cmnvs	lr, pc, asr r5
     5dc:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     5e0:	43005152 	movwmi	r5, #338	; 0x152
     5e4:	5f504d4f 	svcpl	0x00504d4f
     5e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5ec:	42535500 	subsmi	r5, r3, #0, 10
     5f0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     5f4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     5f8:	44414400 	strbmi	r4, [r1], #-1024	; 0xfffffc00
     5fc:	55005244 	strpl	r5, [r0, #-580]	; 0xfffffdbc
     600:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
     604:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     608:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     60c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     610:	62737500 	rsbsvs	r7, r3, #0, 10
     614:	616c635f 	cmnvs	ip, pc, asr r3
     618:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
     61c:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
     620:	645f6474 	ldrbvs	r6, [pc], #-1140	; 628 <_Min_Stack_Size+0x228>
     624:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     628:	51524900 	cmppl	r2, r0, lsl #18
     62c:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     630:	65006570 	strvs	r6, [r0, #-1392]	; 0xfffffa90
     634:	735f3070 	cmpvc	pc, #112	; 0x70
     638:	00646e65 	rsbeq	r6, r4, r5, ror #28
     63c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     640:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     644:	006e5152 	rsbeq	r5, lr, r2, asr r1
     648:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     64c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     650:	6f697461 	svcvs	0x00697461
     654:	5045006e 	subpl	r0, r5, lr, rrx
     658:	52005230 	andpl	r5, r0, #48, 4
     65c:	575f4354 			; <UNDEFINED> instruction: 0x575f4354
     660:	5f50554b 	svcpl	0x0050554b
     664:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     668:	42535500 	subsmi	r5, r3, #0, 10
     66c:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     670:	70650072 	rsbvc	r0, r5, r2, ror r0
     674:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     678:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     67c:	30706500 	rsbscc	r6, r0, r0, lsl #10
     680:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     684:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     688:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     68c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     690:	31434441 	cmpcc	r3, r1, asr #8
     694:	5152495f 	cmppl	r2, pc, asr r9
     698:	3249006e 	subcc	r0, r9, #110	; 0x6e
     69c:	455f3243 	ldrbmi	r3, [pc, #-579]	; 461 <_Min_Stack_Size+0x61>
     6a0:	52495f56 	subpl	r5, r9, #344	; 0x158
     6a4:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     6a8:	00523150 	subseq	r3, r2, r0, asr r1
     6ac:	33495053 	movtcc	r5, #36947	; 0x9053
     6b0:	5152495f 	cmppl	r2, pc, asr r9
     6b4:	7375006e 	cmnvc	r5, #110	; 0x6e
     6b8:	70655f62 	rsbvc	r5, r5, r2, ror #30
     6bc:	61746164 	cmnvs	r4, r4, ror #2
     6c0:	4300745f 	movwmi	r7, #1119	; 0x45f
     6c4:	5f504d4f 	svcpl	0x00504d4f
     6c8:	5f514341 	svcpl	0x00514341
     6cc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6d0:	414d4400 	cmpmi	sp, r0, lsl #8
     6d4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     6d8:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     6dc:	495f366c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     6e0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6e4:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     6e8:	6168435f 	cmnvs	r8, pc, asr r3
     6ec:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     6f0:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     6f4:	5f006e51 	svcpl	0x00006e51
     6f8:	5f627375 	svcpl	0x00627375
     6fc:	725f7065 	subsvc	r7, pc, #101	; 0x65
     700:	00646165 	rsbeq	r6, r4, r5, ror #2
     704:	334d4954 	movtcc	r4, #55636	; 0xd954
     708:	5152495f 	cmppl	r2, pc, asr r9
     70c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     710:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     714:	6e6e6168 	powvsez	f6, f6, #0.0
     718:	5f316c65 	svcpl	0x00316c65
     71c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     720:	62737500 	rsbsvs	r7, r3, #0, 10
     724:	616c635f 	cmnvs	ip, pc, asr r3
     728:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     72c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     730:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     734:	00745f38 	rsbseq	r5, r4, r8, lsr pc
     738:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     73c:	45005243 	strmi	r5, [r0, #-579]	; 0xfffffdbd
     740:	00523250 	subseq	r3, r2, r0, asr r2
     744:	314d4954 	cmpcc	sp, r4, asr r9
     748:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     74c:	57006e51 	smlsdpl	r0, r1, lr, r6
     750:	5f474457 	svcpl	0x00474457
     754:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     758:	62737500 	rsbsvs	r7, r3, #0, 10
     75c:	616c635f 	cmnvs	ip, pc, asr r3
     760:	645f7373 	ldrbvs	r7, [pc], #-883	; 768 <_Min_Stack_Size+0x368>
     764:	6f637369 	svcvs	0x00637369
     768:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
     76c:	50450074 	subpl	r0, r5, r4, ror r0
     770:	42005233 	andmi	r5, r0, #805306371	; 0x30000003
     774:	61467375 	hvcvs	26421	; 0x6735
     778:	5f746c75 	svcpl	0x00746c75
     77c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     780:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     784:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     788:	006e5152 	rsbeq	r5, lr, r2, asr r1
     78c:	5f445650 	svcpl	0x00445650
     790:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     794:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
     798:	5f636e75 	svcpl	0x00636e75
     79c:	73750074 	cmnvc	r5, #116	; 0x74
     7a0:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     7a4:	756f635f 	strbvc	r6, [pc, #-863]!	; 44d <_Min_Stack_Size+0x4d>
     7a8:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     7ac:	00525043 	subseq	r5, r2, r3, asr #32
     7b0:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     7b4:	6168435f 	cmnvs	r8, pc, asr r3
     7b8:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     7bc:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     7c0:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     7c4:	5f354d49 	svcpl	0x00354d49
     7c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7cc:	414d4400 	cmpmi	sp, r0, lsl #8
     7d0:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     7d4:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     7d8:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     7dc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     7e0:	2f637273 	svccs	0x00637273
     7e4:	5f627375 	svcpl	0x00627375
     7e8:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     7ec:	32490063 	subcc	r0, r9, #99	; 0x63
     7f0:	455f3143 	ldrbmi	r3, [pc, #-323]	; 6b5 <_Min_Stack_Size+0x2b5>
     7f4:	52495f56 	subpl	r5, r9, #344	; 0x158
     7f8:	72006e51 	andvc	r6, r0, #1296	; 0x510
     7fc:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
     800:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
     804:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     808:	62737500 	rsbsvs	r7, r3, #0, 10
     80c:	616c635f 	cmnvs	ip, pc, asr r3
     810:	655f7373 	ldrbvs	r7, [pc, #-883]	; 4a5 <_Min_Stack_Size+0xa5>
     814:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     818:	7874006e 	ldmdavc	r4!, {r1, r2, r3, r5, r6}^
     81c:	6f6c625f 	svcvs	0x006c625f
     820:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     824:	5300657a 	movwpl	r6, #1402	; 0x57a
     828:	00524954 	subseq	r4, r2, r4, asr r9
     82c:	5f435452 	svcpl	0x00435452
     830:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     834:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     838:	72006e51 	andvc	r6, r0, #1296	; 0x510
     83c:	69735f78 	ldmdbvs	r3!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     840:	4500657a 	strmi	r6, [r0, #-1402]	; 0xfffffa86
     844:	00523550 	subseq	r3, r2, r0, asr r5
     848:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     84c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     850:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
     854:	56524553 			; <UNDEFINED> instruction: 0x56524553
     858:	00314445 	eorseq	r4, r1, r5, asr #8
     85c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     860:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     864:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     868:	56524553 			; <UNDEFINED> instruction: 0x56524553
     86c:	00334445 	eorseq	r4, r3, r5, asr #8
     870:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     874:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     878:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
     87c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     880:	00354445 	eorseq	r4, r5, r5, asr #8
     884:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     888:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     88c:	53550036 	cmppl	r5, #54	; 0x36
     890:	53465f42 	movtpl	r5, #28482	; 0x6f42
     894:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     898:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     89c:	52006e51 	andpl	r6, r0, #1296	; 0x510
     8a0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     8a4:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     8a8:	53455200 	movtpl	r5, #20992	; 0x5200
     8ac:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     8b0:	55004144 	strpl	r4, [r0, #-324]	; 0xfffffebc
     8b4:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     8b8:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     8bc:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     8c0:	655f6273 	ldrbvs	r6, [pc, #-627]	; 655 <_Min_Stack_Size+0x255>
     8c4:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     8c8:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
     8cc:	614d6e6f 	cmpvs	sp, pc, ror #28
     8d0:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
     8d4:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     8d8:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     8dc:	77006e51 	smlsdvc	r0, r1, lr, r6
     8e0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     8e4:	45006874 	strmi	r6, [r0, #-2164]	; 0xfffff78c
     8e8:	00523650 	subseq	r3, r2, r0, asr r6
     8ec:	7466656c 	strbtvc	r6, [r6], #-1388	; 0xfffffa94
     8f0:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     8f4:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     8f8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8fc:	71655262 	cmnvc	r5, r2, ror #4
     900:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     904:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     908:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     90c:	43006570 	movwmi	r6, #1392	; 0x570
     910:	0052544e 	subseq	r5, r2, lr, asr #8
     914:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     918:	6168435f 	cmnvs	r8, pc, asr r3
     91c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     920:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     924:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     928:	5f314332 	svcpl	0x00314332
     92c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     930:	006e5152 	rsbeq	r5, lr, r2, asr r1
     934:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     938:	5f6b6369 	svcpl	0x006b6369
     93c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     940:	6e706500 	cdpvs	5, 7, cr6, cr0, cr0, {0}
     944:	54006d75 	strpl	r6, [r0], #-3445	; 0xfffff28b
     948:	5f324d49 	svcpl	0x00324d49
     94c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     950:	62737500 	rsbsvs	r7, r3, #0, 10
     954:	616c635f 	cmnvs	ip, pc, asr r3
     958:	655f7373 	ldrbvs	r7, [pc, #-883]	; 5ed <_Min_Stack_Size+0x1ed>
     95c:	6f5f3070 	svcvs	0x005f3070
     960:	45007475 	strmi	r7, [r0, #-1141]	; 0xfffffb8b
     964:	00523750 	subseq	r3, r2, r0, asr r7
     968:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     96c:	705f6769 	subsvc	r6, pc, r9, ror #14
     970:	5f6b6361 	svcpl	0x006b6361
     974:	73750074 	cmnvc	r5, #116	; 0x74
     978:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     97c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     980:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     984:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
     988:	6f6c625f 	svcvs	0x006c625f
     98c:	00736b63 	rsbseq	r6, r3, r3, ror #22
     990:	5f425355 	svcpl	0x00425355
     994:	495f5048 	ldmdbmi	pc, {r3, r6, ip, lr}^	; <UNPREDICTABLE>
     998:	006e5152 	rsbeq	r5, lr, r2, asr r1
     99c:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     9a0:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     9a4:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     9a8:	5152495f 	cmppl	r2, pc, asr r9
     9ac:	7355006e 	cmpvc	r5, #110	; 0x6e
     9b0:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     9b4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     9b8:	5152495f 	cmppl	r2, pc, asr r9
     9bc:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     9c0:	6f6c625f 	svcvs	0x006c625f
     9c4:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     9c8:	6500657a 	strvs	r6, [r0, #-1402]	; 0xfffffa86
     9cc:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     9d0:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     9d4:	62737500 	rsbsvs	r7, r3, #0, 10
     9d8:	5f70655f 	svcpl	0x0070655f
     9dc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     9e0:	756f645f 	strbvc	r6, [pc, #-1119]!	; 589 <_Min_Stack_Size+0x189>
     9e4:	00656c62 	rsbeq	r6, r5, r2, ror #24
     9e8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     9ec:	5f355f39 	svcpl	0x00355f39
     9f0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9f4:	34504500 	ldrbcc	r4, [r0], #-1280	; 0xfffffb00
     9f8:	43490052 	movtmi	r0, #36946	; 0x9052
     9fc:	53005245 	movwpl	r5, #581	; 0x245
     a00:	5f324950 	svcpl	0x00324950
     a04:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     a08:	42414900 	submi	r4, r1, #0, 18
     a0c:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     a10:	495f374d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     a14:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a18:	31414d44 	cmpcc	r1, r4, asr #26
     a1c:	6168435f 	cmnvs	r8, pc, asr r3
     a20:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     a24:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     a28:	42006e51 	andmi	r6, r0, #1296	; 0x510
     a2c:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
     a30:	41440045 	cmpmi	r4, r5, asr #32
     a34:	52495f43 	subpl	r5, r9, #268	; 0x10c
     a38:	65006e51 	strvs	r6, [r0, #-3665]	; 0xfffff1af
     a3c:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     a40:	45006570 	strmi	r6, [r0, #-1392]	; 0xfffffa90
     a44:	33495458 	movtcc	r5, #37976	; 0x9458
     a48:	5152495f 	cmppl	r2, pc, asr r9
     a4c:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
     a50:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     a54:	62737500 	rsbsvs	r7, r3, #0, 10
     a58:	5f78745f 	svcpl	0x0078745f
     a5c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     a60:	50534900 	subspl	r4, r3, r0, lsl #18
     a64:	73750052 	cmnvc	r5, #82	; 0x52
     a68:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     a6c:	756f635f 	strbvc	r6, [pc, #-863]!	; 715 <_Min_Stack_Size+0x315>
     a70:	7200746e 	andvc	r7, r0, #1845493760	; 0x6e000000
     a74:	756f6378 	strbvc	r6, [pc, #-888]!	; 704 <_Min_Stack_Size+0x304>
     a78:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
     a7c:	5f32414d 	svcpl	0x0032414d
     a80:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     a84:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
     a88:	5152495f 	cmppl	r2, pc, asr r9
     a8c:	5355006e 	cmppl	r5, #110	; 0x6e
     a90:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     a94:	5152495f 	cmppl	r2, pc, asr r9
     a98:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
     a9c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     aa0:	00384445 	eorseq	r4, r8, r5, asr #8
     aa4:	5f425355 	svcpl	0x00425355
     aa8:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     aac:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ab0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     ab4:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     ab8:	45520042 	ldrbmi	r0, [r2, #-66]	; 0xffffffbe
     abc:	56524553 			; <UNDEFINED> instruction: 0x56524553
     ac0:	00434445 	subeq	r4, r3, r5, asr #8
     ac4:	31525153 	cmpcc	r2, r3, asr r1
     ac8:	52515300 	subspl	r5, r1, #0, 6
     acc:	51530032 	cmppl	r3, r2, lsr r0
     ad0:	53003352 	movwpl	r3, #850	; 0x352
     ad4:	00345251 	eorseq	r5, r4, r1, asr r2
     ad8:	35525153 	ldrbcc	r5, [r2, #-339]	; 0xfffffead
     adc:	63646100 	cmnvs	r4, #0, 2
     ae0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     ae4:	68004865 	stmdavs	r0, {r0, r2, r5, r6, fp, lr}
     ae8:	705f6469 	subsvc	r6, pc, r9, ror #8
     aec:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     af0:	7463775f 	strbtvc	r7, [r3], #-1887	; 0xfffff8a1
     af4:	5f626d6f 	svcpl	0x00626d6f
     af8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     afc:	69680065 	stmdbvs	r8!, {r0, r2, r5, r6}^
     b00:	61645f64 	cmnvs	r4, r4, ror #30
     b04:	55006174 	strpl	r6, [r0, #-372]	; 0xfffffe8c
     b08:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     b0c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     b10:	54545f67 	ldrbpl	r5, [r4], #-3943	; 0xfffff099
     b14:	725f0059 	subsvc	r0, pc, #89	; 0x59
     b18:	5f003834 	svcpl	0x00003834
     b1c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     b20:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     b24:	5f006675 	svcpl	0x00006675
     b28:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     b2c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     b30:	616c665f 	cmnvs	ip, pc, asr r6
     b34:	6d007367 	stcvs	3, cr7, [r0, #-412]	; 0xfffffe64
     b38:	735f6369 	cmpvc	pc, #-1543503871	; 0xa4000001
     b3c:	5f00666f 	svcpl	0x0000666f
     b40:	5f66666f 	svcpl	0x0066666f
     b44:	6e5f0074 	mrcvs	0, 2, r0, cr15, cr4, {3}
     b48:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
     b4c:	7500636f 	strvc	r6, [r0, #-879]	; 0xfffffc91
     b50:	655f6273 	ldrbvs	r6, [pc, #-627]	; 8e5 <_Min_Stack_Size+0x4e5>
     b54:	72775f70 	rsbsvc	r5, r7, #112, 30	; 0x1c0
     b58:	5f657469 	svcpl	0x00657469
     b5c:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
     b60:	7300656c 	movwvc	r6, #1388	; 0x56c
     b64:	752f6372 	strvc	r6, [pc, #-882]!	; 7fa <_Min_Stack_Size+0x3fa>
     b68:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     b6c:	7373616c 	cmnvc	r3, #108, 2
     b70:	5f00632e 	svcpl	0x0000632e
     b74:	4b434f4c 	blmi	10d48ac <_Min_Stack_Size+0x10d44ac>
     b78:	4345525f 	movtmi	r5, #21087	; 0x525f
     b7c:	49535255 	ldmdbmi	r3, {r0, r2, r4, r6, r9, ip, lr}^
     b80:	545f4556 	ldrbpl	r4, [pc], #-1366	; b88 <_Min_Stack_Size+0x788>
     b84:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     b88:	63657073 	cmnvs	r5, #115	; 0x73
     b8c:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
     b90:	6f6c5f64 	svcvs	0x006c5f64
     b94:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
     b98:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
     b9c:	6d5f006f 	ldclvs	0, cr0, [pc, #-444]	; 9e8 <_Min_Stack_Size+0x5e8>
     ba0:	656c7262 	strbvs	r7, [ip, #-610]!	; 0xfffffd9e
     ba4:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
     ba8:	00657461 	rsbeq	r7, r5, r1, ror #8
     bac:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
     bb0:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     bb4:	74756f64 	ldrbtvc	r6, [r5], #-3940	; 0xfffff09c
     bb8:	70665f00 	rsbvc	r5, r6, r0, lsl #30
     bbc:	745f736f 	ldrbvc	r7, [pc], #-879	; bc4 <_Min_Stack_Size+0x7c4>
     bc0:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
     bc4:	635f0073 	cmpvs	pc, #115	; 0x73
     bc8:	696b6f6f 	stmdbvs	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     bcc:	6d5f0065 	ldclvs	0, cr0, [pc, #-404]	; a40 <_Min_Stack_Size+0x640>
     bd0:	61747362 	cmnvs	r4, r2, ror #6
     bd4:	5f006574 	svcpl	0x00006574
     bd8:	5f6d745f 	svcpl	0x006d745f
     bdc:	79616477 	stmdbvc	r1!, {r0, r1, r2, r4, r5, r6, sl, sp, lr}^
     be0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     be4:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     be8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     bec:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
     bf0:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
     bf4:	465f5f00 	ldrbmi	r5, [pc], -r0, lsl #30
     bf8:	00454c49 	subeq	r4, r5, r9, asr #24
     bfc:	52454343 	subpl	r4, r5, #201326593	; 0xc000001
     c00:	745f5f00 	ldrbvc	r5, [pc], #-3840	; c08 <_Min_Stack_Size+0x808>
     c04:	6f685f6d 	svcvs	0x00685f6d
     c08:	5f007275 	svcpl	0x00007275
     c0c:	00646461 	rsbeq	r6, r4, r1, ror #8
     c10:	5f627375 	svcpl	0x00627375
     c14:	5f676f6c 	svcpl	0x00676f6c
     c18:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     c1c:	635f5f00 	cmpvs	pc, #0, 30
     c20:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     c24:	745f5f00 	ldrbvc	r5, [pc], #-3840	; c2c <_Min_Stack_Size+0x82c>
     c28:	696d5f6d 	stmdbvs	sp!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c2c:	4343006e 	movtmi	r0, #12398	; 0x306e
     c30:	43003152 	movwmi	r3, #338	; 0x152
     c34:	00325243 	eorseq	r5, r2, r3, asr #4
     c38:	524d4343 	subpl	r4, sp, #201326593	; 0xc000001
     c3c:	43430031 	movtmi	r0, #12337	; 0x3031
     c40:	0032524d 	eorseq	r5, r2, sp, asr #4
     c44:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     c48:	00383464 	eorseq	r3, r8, r4, ror #8
     c4c:	5f646968 	svcpl	0x00646968
     c50:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     c54:	0074756f 	rsbseq	r7, r4, pc, ror #10
     c58:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     c5c:	5f746c75 	svcpl	0x00746c75
     c60:	5355006b 	cmppl	r5, #107	; 0x6b
     c64:	6f435f42 	svcvs	0x00435f42
     c68:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     c6c:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     c70:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     c74:	5f00726f 	svcpl	0x0000726f
     c78:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
     c7c:	5f656d69 	svcpl	0x00656d69
     c80:	00667562 	rsbeq	r7, r6, r2, ror #10
     c84:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
     c88:	00454c49 	subeq	r4, r5, r9, asr #24
     c8c:	7364775f 	cmnvc	r4, #24903680	; 0x17c0000
     c90:	63696d00 	cmnvs	r9, #0, 26
     c94:	6c6f705f 	stclvs	0, cr7, [pc], #-380	; b20 <_Min_Stack_Size+0x720>
     c98:	685f006c 	ldmdavs	pc, {r2, r3, r5, r6}^	; <UNPREDICTABLE>
     c9c:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
     ca0:	5f006f6e 	svcpl	0x00006f6e
     ca4:	6b656573 	blvs	195a278 <_Min_Stack_Size+0x1959e78>
     ca8:	62755f00 	rsbsvs	r5, r5, #0, 30
     cac:	5f006675 	svcpl	0x00006675
     cb0:	72656d65 	rsbvc	r6, r5, #6464	; 0x1940
     cb4:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
     cb8:	65720079 	ldrbvs	r0, [r2, #-121]!	; 0xffffff87
     cbc:	74616473 	strbtvc	r6, [r1], #-1139	; 0xfffffb8d
     cc0:	53550061 	cmppl	r5, #97	; 0x61
     cc4:	49485f42 	stmdbmi	r8, {r1, r6, r8, r9, sl, fp, ip, lr}^
     cc8:	73654444 	cmnvc	r5, #68, 8	; 0x44000000
     ccc:	70697263 	rsbvc	r7, r9, r3, ror #4
     cd0:	00726f74 	rsbseq	r6, r2, r4, ror pc
     cd4:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     cd8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
     cdc:	745f5f00 	ldrbvc	r5, [pc], #-3840	; ce4 <_Min_Stack_Size+0x8e4>
     ce0:	64795f6d 	ldrbtvs	r5, [r9], #-3949	; 0xfffff093
     ce4:	5f007961 	svcpl	0x00007961
     ce8:	00636e69 	rsbeq	r6, r3, r9, ror #28
     cec:	5f636461 	svcpl	0x00636461
     cf0:	69666e69 	stmdbvs	r6!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     cf4:	7265746c 	rsbvc	r7, r5, #108, 8	; 0x6c000000
     cf8:	626d5f00 	rsbvs	r5, sp, #0, 30
     cfc:	6f747273 	svcvs	0x00747273
     d00:	5f736377 	svcpl	0x00736377
     d04:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     d08:	49440065 	stmdbmi	r4, {r0, r2, r5, r6}^
     d0c:	70005245 	andvc	r5, r0, r5, asr #4
     d10:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     d14:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
     d18:	70655f72 	rsbvc	r5, r5, r2, ror pc
     d1c:	756f5f30 	strbvc	r5, [pc, #-3888]!	; fffffdf4 <BootRAM+0xef70595>
     d20:	73750074 	cmnvc	r5, #116	; 0x74
     d24:	6f6c5f62 	svcvs	0x006c5f62
     d28:	70655f67 	rsbvc	r5, r5, r7, ror #30
     d2c:	6e695f30 	mcrvs	15, 3, r5, cr9, cr0, {1}
     d30:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     d34:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     d38:	504d5300 	subpl	r5, sp, r0, lsl #6
     d3c:	5f003352 	svcpl	0x00003352
     d40:	00733570 	rsbseq	r3, r3, r0, ror r5
     d44:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     d48:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     d4c:	655f7265 	ldrbvs	r7, [pc, #-613]	; aef <_Min_Stack_Size+0x6ef>
     d50:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     d54:	6d5f006e 	ldclvs	0, cr0, [pc, #-440]	; ba4 <_Min_Stack_Size+0x7a4>
     d58:	6e656c62 	cdpvs	12, 6, cr6, cr5, cr2, {3}
     d5c:	6174735f 	cmnvs	r4, pc, asr r3
     d60:	5f006574 	svcpl	0x00006574
     d64:	5f6d745f 	svcpl	0x006d745f
     d68:	7961646d 	stmdbvc	r1!, {r0, r2, r3, r5, r6, sl, sp, lr}^
     d6c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
     d70:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
     d74:	5f00636e 	svcpl	0x0000636e
     d78:	7472626d 	ldrbtvc	r6, [r2], #-621	; 0xfffffd93
     d7c:	5f63776f 	svcpl	0x0063776f
     d80:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     d84:	79730065 	ldmdbvc	r3!, {r0, r2, r5, r6}^
     d88:	63697473 	cmnvs	r9, #1929379840	; 0x73000000
     d8c:	736d5f6b 	cmnvc	sp, #428	; 0x1ac
     d90:	64696d00 	strbtvs	r6, [r9], #-3328	; 0xfffff300
     d94:	746c6966 	strbtvc	r6, [ip], #-2406	; 0xfffff69a
     d98:	5f007265 	svcpl	0x00007265
     d9c:	636f6c66 	cmnvs	pc, #26112	; 0x6600
     da0:	00745f6b 	rsbseq	r5, r4, fp, ror #30
     da4:	63775f5f 	cmnvs	r7, #380	; 0x17c
     da8:	695f0068 	ldmdbvs	pc, {r3, r5, r6}^	; <UNPREDICTABLE>
     dac:	0073626f 	rsbseq	r6, r3, pc, ror #4
     db0:	31434441 	cmpcc	r3, r1, asr #8
     db4:	5152495f 	cmppl	r2, pc, asr r9
     db8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     dbc:	0072656c 	rsbseq	r6, r2, ip, ror #10
     dc0:	6f6c635f 	svcvs	0x006c635f
     dc4:	5f006573 	svcpl	0x00006573
     dc8:	6964735f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
     dcc:	696e6964 	stmdbvs	lr!, {r2, r5, r6, r8, fp, sp, lr}^
     dd0:	696d0074 	stmdbvs	sp!, {r2, r4, r5, r6}^
     dd4:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     dd8:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
     ddc:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     de0:	735f006b 	cmpvc	pc, #107	; 0x6b
     de4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     de8:	61675f00 	cmnvs	r7, r0, lsl #30
     dec:	5f616d6d 	svcpl	0x00616d6d
     df0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     df4:	006d6167 	rsbeq	r6, sp, r7, ror #2
     df8:	5f434441 	svcpl	0x00434441
     dfc:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     e00:	00666544 	rsbeq	r6, r6, r4, asr #10
     e04:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
     e08:	61006674 	tstvs	r0, r4, ror r6
     e0c:	625f6364 	subsvs	r6, pc, #100, 6	; 0x90000001
     e10:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     e14:	53550072 	cmppl	r5, #114	; 0x72
     e18:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     e1c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     e20:	4f52505f 	svcmi	0x0052505f
     e24:	5f005247 	svcpl	0x00005247
     e28:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     e2c:	72665f00 	rsbvc	r5, r6, #0, 30
     e30:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
     e34:	5f007473 	svcpl	0x00007473
     e38:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
     e3c:	555f5f00 	ldrbpl	r5, [pc, #-3840]	; ffffff44 <BootRAM+0xef706e5>
     e40:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
     e44:	62737500 	rsbsvs	r7, r3, #0, 10
     e48:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
     e4c:	6c6f705f 	stclvs	0, cr7, [pc], #-380	; cd8 <_Min_Stack_Size+0x8d8>
     e50:	775f006c 	ldrbvc	r0, [pc, -ip, rrx]
     e54:	6f747263 	svcvs	0x00747263
     e58:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
     e5c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     e60:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
     e64:	7000656c 	andvc	r6, r0, ip, ror #10
     e68:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     e6c:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
     e70:	6f705f72 	svcvs	0x00705f72
     e74:	5f006c6c 	svcpl	0x00006c6c
     e78:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
     e7c:	70756e61 	rsbsvc	r6, r5, r1, ror #28
     e80:	626d5f00 	rsbvs	r5, sp, #0, 30
     e84:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     e88:	00745f65 	rsbseq	r5, r4, r5, ror #30
     e8c:	7664696d 	strbtvc	r6, [r4], -sp, ror #18
     e90:	5f006c61 	svcpl	0x00006c61
     e94:	5f6d745f 	svcpl	0x006d745f
     e98:	73647369 	cmnvc	r4, #-1543503871	; 0xa4000001
     e9c:	775f0074 			; <UNDEFINED> instruction: 0x775f0074
     ea0:	74727363 	ldrbtvc	r7, [r2], #-867	; 0xfffffc9d
     ea4:	73626d6f 	cmnvc	r2, #7104	; 0x1bc0
     ea8:	6174735f 	cmnvs	r4, pc, asr r3
     eac:	4a006574 	bmi	1a484 <_Min_Stack_Size+0x1a084>
     eb0:	00525153 	subseq	r5, r2, r3, asr r1
     eb4:	5f434441 	svcpl	0x00434441
     eb8:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
     ebc:	545f6e6f 	ldrbpl	r6, [pc], #-3695	; ec4 <_Min_Stack_Size+0xac4>
     ec0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     ec4:	5f006665 	svcpl	0x00006665
     ec8:	00646e69 	rsbeq	r6, r4, r9, ror #28
     ecc:	5f627375 	svcpl	0x00627375
     ed0:	5f676f6c 	svcpl	0x00676f6c
     ed4:	5f307065 	svcpl	0x00307065
     ed8:	0074756f 	rsbseq	r7, r4, pc, ror #10
     edc:	52504d53 	subspl	r4, r0, #5312	; 0x14c0
     ee0:	4d530031 	ldclmi	0, cr0, [r3, #-196]	; 0xffffff3c
     ee4:	00325250 	eorseq	r5, r2, r0, asr r2
     ee8:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     eec:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
     ef0:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     ef4:	6f642067 	svcvs	0x00642067
     ef8:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     efc:	63696d00 	cmnvs	r9, #0, 26
     f00:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     f04:	5f5f0074 	svcpl	0x005f0074
     f08:	66756273 			; <UNDEFINED> instruction: 0x66756273
     f0c:	63646100 	cmnvs	r4, #0, 2
     f10:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     f14:	5f004c65 	svcpl	0x00004c65
     f18:	5f6d745f 	svcpl	0x006d745f
     f1c:	72616579 	rsbvc	r6, r1, #507510784	; 0x1e400000
     f20:	63696d00 	cmnvs	r9, #0, 26
     f24:	3070655f 	rsbscc	r6, r0, pc, asr r5
     f28:	006e695f 	rsbeq	r6, lr, pc, asr r9
     f2c:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     f30:	00746978 	rsbseq	r6, r4, r8, ror r9
     f34:	3152444a 	cmpcc	r2, sl, asr #8
     f38:	52444a00 	subpl	r4, r4, #0, 20
     f3c:	444a0032 	strbmi	r0, [sl], #-50	; 0xffffffce
     f40:	4a003352 	bmi	dc90 <_Min_Stack_Size+0xd890>
     f44:	00345244 	eorseq	r5, r4, r4, asr #4
     f48:	52434d53 	subpl	r4, r3, #5312	; 0x14c0
     f4c:	69425f00 	stmdbvs	r2, {r8, r9, sl, fp, ip, lr}^
     f50:	746e6967 	strbtvc	r6, [lr], #-2407	; 0xfffff699
     f54:	414d4400 	cmpmi	sp, r0, lsl #8
     f58:	53620052 	cmnpl	r2, #82	; 0x52
     f5c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     f60:	75630067 	strbvc	r0, [r3, #-103]!	; 0xffffff99
     f64:	6c617672 	stclvs	6, cr7, [r1], #-456	; 0xfffffe38
     f68:	735f5f00 	cmpvc	pc, #0, 30
     f6c:	735f0066 	cmpvc	pc, #102	; 0x66
     f70:	006e6769 	rsbeq	r6, lr, r9, ror #14
     f74:	63775f5f 	cmnvs	r7, #380	; 0x17c
     f78:	5f006268 	svcpl	0x00006268
     f7c:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
     f80:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     f84:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
     f88:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
     f8c:	6f5f0072 	svcvs	0x005f0072
     f90:	78655f6e 	stmdavc	r5!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     f94:	615f7469 	cmpvs	pc, r9, ror #8
     f98:	00736772 	rsbseq	r6, r3, r2, ror r7
     f9c:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
     fa0:	00746573 	rsbseq	r6, r4, r3, ror r5
     fa4:	5f425355 	svcpl	0x00425355
     fa8:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     fac:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
     fb0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     fb4:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     fb8:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     fbc:	5f00726f 	svcpl	0x0000726f
     fc0:	61636f6c 	cmnvs	r3, ip, ror #30
     fc4:	6d69746c 	cfstrdvs	mvd7, [r9, #-432]!	; 0xfffffe50
     fc8:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
     fcc:	53550066 	cmppl	r5, #102	; 0x66
     fd0:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     fd4:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     fd8:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
     fdc:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     fe0:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     fe4:	5f00726f 	svcpl	0x0000726f
     fe8:	73756e75 	cmnvc	r5, #1872	; 0x750
     fec:	5f006465 	svcpl	0x00006465
     ff0:	6c747663 	ldclvs	6, cr7, [r4], #-396	; 0xfffffe74
     ff4:	5f006e65 	svcpl	0x00006e65
     ff8:	7778616d 	ldrbvc	r6, [r8, -sp, ror #2]!
     ffc:	5f007364 	svcpl	0x00007364
    1000:	6134366c 	teqvs	r4, ip, ror #12
    1004:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    1008:	6c625f00 	stclvs	15, cr5, [r2], #-0
    100c:	7a69736b 	bvc	1a5ddc0 <_Min_Stack_Size+0x1a5d9c0>
    1010:	5f5f0065 	svcpl	0x005f0065
    1014:	5f006d74 	svcpl	0x00006d74
    1018:	6b636f6c 	blvs	18dcdd0 <_Min_Stack_Size+0x18dc9d0>
    101c:	42535500 	subsmi	r5, r3, #0, 10
    1020:	7665445f 			; <UNDEFINED> instruction: 0x7665445f
    1024:	51656369 	cmnpl	r5, r9, ror #6
    1028:	696c6175 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r8, sp, lr}^
    102c:	72656966 	rsbvc	r6, r5, #1671168	; 0x198000
    1030:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    1034:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
    1038:	6800726f 	stmdavs	r0, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    103c:	655f6469 	ldrbvs	r6, [pc, #-1129]	; bdb <_Min_Stack_Size+0x7db>
    1040:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
    1044:	6461006e 	strbtvs	r0, [r1], #-110	; 0xffffff92
    1048:	64695f63 	strbtvs	r5, [r9], #-3939	; 0xfffff09d
    104c:	6e5f0078 	mrcvs	0, 2, r0, cr15, cr8, {3}
    1050:	73626f69 	cmnvc	r2, #420	; 0x1a4
    1054:	73645f00 	cmnvc	r4, #0, 30
    1058:	61685f6f 	cmnvs	r8, pc, ror #30
    105c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1060:	64696800 	strbtvs	r6, [r9], #-2048	; 0xfffff800
    1064:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1068:	635f0074 	cmpvs	pc, #116	; 0x74
    106c:	75627476 	strbvc	r7, [r2, #-1142]!	; 0xfffffb8a
    1070:	43430066 	movtmi	r0, #12390	; 0x3066
    1074:	43003352 	movwmi	r3, #850	; 0x352
    1078:	00345243 	eorseq	r5, r4, r3, asr #4
    107c:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    1080:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    1084:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    1088:	63696d00 	cmnvs	r9, #0, 26
    108c:	3070655f 	rsbscc	r6, r0, pc, asr r5
    1090:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
    1094:	64696800 	strbtvs	r6, [r9], #-2048	; 0xfffff800
    1098:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    109c:	00735f61 	rsbseq	r5, r3, r1, ror #30
    10a0:	5f646968 	svcpl	0x00646968
    10a4:	61746164 	cmnvs	r4, r4, ror #2
    10a8:	5500745f 	strpl	r7, [r0, #-1119]	; 0xfffffba1
    10ac:	445f4253 	ldrbmi	r4, [pc], #-595	; 10b4 <_Min_Stack_Size+0xcb4>
    10b0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    10b4:	73654465 	cmnvc	r5, #1694498816	; 0x65000000
    10b8:	70697263 	rsbvc	r7, r9, r3, ror #4
    10bc:	00726f74 	rsbseq	r6, r2, r4, ror pc
    10c0:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
    10c4:	73657079 	cmnvc	r5, #121	; 0x79
    10c8:	53455200 	movtpl	r5, #20992	; 0x5200
    10cc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
    10d0:	00323144 	eorseq	r3, r2, r4, asr #2
    10d4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    10d8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    10dc:	62003731 	andvs	r3, r0, #12845056	; 0xc40000
    10e0:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    10e4:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
    10e8:	7954726f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    10ec:	55006570 	strpl	r6, [r0, #-1392]	; 0xfffffa90
    10f0:	535f4253 	cmppl	pc, #805306373	; 0x30000005
    10f4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    10f8:	6e614d67 	cdpvs	13, 6, cr4, cr1, cr7, {3}
    10fc:	63616675 	cmnvs	r1, #122683392	; 0x7500000
    1100:	69727574 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
    1104:	6544676e 	strbvs	r6, [r4, #-1902]	; 0xfffff892
    1108:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    110c:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    1110:	6c675f00 	stclvs	15, cr5, [r7], #-0
    1114:	5f006575 	svcpl	0x00006575
    1118:	6c67735f 	stclvs	3, cr7, [r7], #-380	; 0xfffffe84
    111c:	5f006575 	svcpl	0x00006575
    1120:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
    1124:	6c5f6b6f 	mrrcvs	11, 6, r6, pc, cr15	; <UNPREDICTABLE>
    1128:	00747361 	rsbseq	r7, r4, r1, ror #6
    112c:	74626d5f 	strbtvc	r6, [r2], #-3423	; 0xfffff2a1
    1130:	5f63776f 	svcpl	0x0063776f
    1134:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    1138:	766f0065 	strbtvc	r0, [pc], -r5, rrx
    113c:	61737265 	cmnvs	r3, r5, ror #4
    1140:	5f6c706d 	svcpl	0x006c706d
    1144:	00746e63 	rsbseq	r6, r4, r3, ror #28
    1148:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    114c:	00656c61 	rsbeq	r6, r5, r1, ror #24
    1150:	616e665f 	cmnvs	lr, pc, asr r6
    1154:	00736772 	rsbseq	r6, r3, r2, ror r7
    1158:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    115c:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
    1160:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1164:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1168:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
    116c:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
    1170:	535f4253 	cmppl	pc, #805306373	; 0x30000005
    1174:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    1178:	6f725067 	svcvs	0x00725067
    117c:	73654464 	cmnvc	r5, #100, 8	; 0x64000000
    1180:	70697263 	rsbvc	r7, r9, r3, ror #4
    1184:	00726f74 	rsbseq	r6, r2, r4, ror pc
    1188:	52464f4a 	subpl	r4, r6, #296	; 0x128
    118c:	4f4a0031 	svcmi	0x004a0031
    1190:	00325246 	eorseq	r5, r2, r6, asr #4
    1194:	52464f4a 	subpl	r4, r6, #296	; 0x128
    1198:	4f4a0033 	svcmi	0x004a0033
    119c:	00345246 	eorseq	r5, r4, r6, asr #4
    11a0:	5f646968 	svcpl	0x00646968
    11a4:	5f307065 	svcpl	0x00307065
    11a8:	0074756f 	rsbseq	r7, r4, pc, ror #10
    11ac:	5f425355 	svcpl	0x00425355
    11b0:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    11b4:	4c5f676e 	mrrcmi	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
    11b8:	5f00474f 	svcpl	0x0000474f
    11bc:	6675626e 	ldrbtvs	r6, [r5], -lr, ror #4
    11c0:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
    11c4:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
    11c8:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
    11cc:	76630064 	strbtvc	r0, [r3], -r4, rrx
    11d0:	62006c61 	andvs	r6, r0, #24832	; 0x6100
    11d4:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    11d8:	5f006874 	svcpl	0x00006874
    11dc:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    11e0:	5f003273 	svcpl	0x00003273
    11e4:	635f7369 	cmpvs	pc, #-1543503871	; 0xa4000001
    11e8:	5f006178 	svcpl	0x00006178
    11ec:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
    11f0:	61725f00 	cmnvs	r2, r0, lsl #30
    11f4:	6e5f646e 	cdpvs	4, 5, cr6, cr15, cr14, {3}
    11f8:	00747865 	rsbseq	r7, r4, r5, ror #16
    11fc:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
    1200:	30746978 	rsbscc	r6, r4, r8, ror r9
    1204:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
    1208:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
    120c:	00745f65 	rsbseq	r5, r4, r5, ror #30
    1210:	5f636461 	svcpl	0x00636461
    1214:	6674756f 	ldrbtvs	r7, [r4], -pc, ror #10
    1218:	65746c69 	ldrbvs	r6, [r4, #-3177]!	; 0xfffff397
    121c:	735f0072 	cmpvc	pc, #114	; 0x72
    1220:	72656474 	rsbvc	r6, r5, #116, 8	; 0x74000000
    1224:	69770072 	ldmdbvs	r7!, {r1, r4, r5, r6}^
    1228:	745f746e 	ldrbvc	r7, [pc], #-1134	; 1230 <_Min_Stack_Size+0xe30>
    122c:	79747400 	ldmdbvc	r4!, {sl, ip, sp, lr}^
    1230:	6766635f 			; <UNDEFINED> instruction: 0x6766635f
    1234:	75616200 	strbvc	r6, [r1, #-512]!	; 0xfffffe00
    1238:	74617264 	strbtvc	r7, [r1], #-612	; 0xfffffd9c
    123c:	41550065 	cmpmi	r5, r5, rrx
    1240:	5f315452 	svcpl	0x00315452
    1244:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1248:	69740065 	ldmdbvs	r4!, {r0, r2, r5, r6}^
    124c:	756f656d 	strbvc	r6, [pc, #-1389]!	; ce7 <_Min_Stack_Size+0x8e7>
    1250:	736d5f74 	cmnvc	sp, #116, 30	; 0x1d0
    1254:	63646300 	cmnvs	r4, #0, 6
    1258:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
    125c:	646f6365 	strbtvs	r6, [pc], #-869	; 1264 <_Min_Stack_Size+0xe64>
    1260:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1264:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1268:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    126c:	6175006c 	cmnvs	r5, ip, rrx
    1270:	5f317472 	svcpl	0x00317472
    1274:	69007872 	stmdbvs	r0, {r1, r4, r5, r6, fp, ip, sp, lr}
    1278:	6674696e 	ldrbtvs	r6, [r4], -lr, ror #18
    127c:	0067616c 	rsbeq	r6, r7, ip, ror #2
    1280:	52505447 	subspl	r5, r0, #1191182336	; 0x47000000
    1284:	72617500 	rsbvc	r7, r1, #0, 10
    1288:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
    128c:	72775f66 	rsbsvc	r5, r7, #408	; 0x198
    1290:	00657469 	rsbeq	r7, r5, r9, ror #8
    1294:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    1298:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    129c:	61485152 	cmpvs	r8, r2, asr r1
    12a0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    12a4:	64630072 	strbtvs	r0, [r3], #-114	; 0xffffff8e
    12a8:	756f5f63 	strbvc	r5, [pc, #-3939]!	; 34d <_Min_Heap_Size+0x34d>
    12ac:	53550074 	cmppl	r5, #116	; 0x74
    12b0:	5f545241 	svcpl	0x00545241
    12b4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    12b8:	00666544 	rsbeq	r6, r6, r4, asr #10
    12bc:	4349564e 	movtmi	r5, #38478	; 0x964e
    12c0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    12c4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    12c8:	00515249 	subseq	r5, r1, r9, asr #4
    12cc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    12d0:	75705f31 	ldrbvc	r5, [r0, #-3889]!	; 0xfffff0cf
    12d4:	55007374 	strpl	r7, [r0, #-884]	; 0xfffffc8c
    12d8:	31545241 	cmpcc	r4, r1, asr #4
    12dc:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    12e0:	61750073 	cmnvs	r5, r3, ror r0
    12e4:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
    12e8:	55006766 	strpl	r6, [r0, #-1894]	; 0xfffff89a
    12ec:	31545241 	cmpcc	r4, r1, asr #4
    12f0:	6165725f 	cmnvs	r5, pc, asr r2
    12f4:	61700064 	cmnvs	r0, r4, rrx
    12f8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    12fc:	72617500 	rsbvc	r7, r1, #0, 10
    1300:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
    1304:	69735f66 	ldmdbvs	r3!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1308:	7400657a 	strvc	r6, [r0], #-1402	; 0xfffffa86
    130c:	6f6d7974 	svcvs	0x006d7974
    1310:	73006564 	movwvc	r6, #1380	; 0x564
    1314:	702f6372 	eorvc	r6, pc, r2, ror r3	; <UNPREDICTABLE>
    1318:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    131c:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
    1320:	00632e72 	rsbeq	r2, r3, r2, ror lr
    1324:	64726f77 	ldrbtvs	r6, [r2], #-3959	; 0xfffff089
    1328:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    132c:	72617500 	rsbvc	r7, r1, #0, 10
    1330:	745f3174 	ldrbvc	r3, [pc], #-372	; 1338 <_Min_Stack_Size+0xf38>
    1334:	61750078 	cmnvs	r5, r8, ror r0
    1338:	625f7472 	subsvs	r7, pc, #1912602624	; 0x72000000
    133c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1340:	61750072 	cmnvs	r5, r2, ror r0
    1344:	625f7472 	subsvs	r7, pc, #1912602624	; 0x72000000
    1348:	725f6675 	subsvc	r6, pc, #122683392	; 0x7500000
    134c:	00646165 	rsbeq	r6, r4, r5, ror #2
    1350:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1354:	66635f72 	uqsub16vs	r5, r3, r2
    1358:	74730067 	ldrbtvc	r0, [r3], #-103	; 0xffffff99
    135c:	6962706f 	stmdbvs	r2!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1360:	6c007374 	stcvs	3, cr7, [r0], {116}	; 0x74
    1364:	645f676f 	ldrbvs	r6, [pc], #-1903	; 136c <_Min_Stack_Size+0xf6c>
    1368:	66007269 	strvs	r7, [r0], -r9, ror #4
    136c:	5f6f6669 	svcpl	0x006f6669
    1370:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1374:	6f6c0065 	svcvs	0x006c0065
    1378:	66635f67 	strbtvs	r5, [r3], -r7, ror #30
    137c:	69640067 	stmdbvs	r4!, {r0, r1, r2, r5, r6}^
    1380:	78745f72 	ldmdavc	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1384:	66696600 	strbtvs	r6, [r9], -r0, lsl #12
    1388:	7273006f 	rsbsvc	r0, r3, #111	; 0x6f
    138c:	73752f63 	cmnvc	r5, #396	; 0x18c
    1390:	6f6c5f62 	svcvs	0x006c5f62
    1394:	00632e67 	rsbeq	r2, r3, r7, ror #28
    1398:	5f627375 	svcpl	0x00627375
    139c:	5f676f6c 	svcpl	0x00676f6c
    13a0:	62617267 	rsbvs	r7, r1, #1879048198	; 0x70000006
    13a4:	66696600 	strbtvs	r6, [r9], -r0, lsl #12
    13a8:	61645f6f 	cmnvs	r4, pc, ror #30
    13ac:	735f6174 	cmpvc	pc, #116, 2
    13b0:	00657a69 	rsbeq	r7, r5, r9, ror #20
    13b4:	5f726964 	svcpl	0x00726964
    13b8:	76657270 			; <UNDEFINED> instruction: 0x76657270
    13bc:	66696600 	strbtvs	r6, [r9], -r0, lsl #12
    13c0:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
    13c4:	5f006461 	svcpl	0x00006461
    13c8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    13cc:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    13d0:	5f796172 	svcpl	0x00796172
    13d4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    13d8:	69730074 	ldmdbvs	r3!, {r2, r4, r5, r6}^
    13dc:	745f657a 	ldrbvc	r6, [pc], #-1402	; 13e4 <_Min_Stack_Size+0xfe4>
    13e0:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
    13e4:	5f636269 	svcpl	0x00636269
    13e8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    13ec:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    13f0:	2f007961 	svccs	0x00007961
    13f4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    13f8:	656e2f64 	strbvs	r2, [lr, #-3940]!	; 0xfffff09c
    13fc:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    1400:	67476b2d 	strbvs	r6, [r7, -sp, lsr #22]
    1404:	2f457776 	svccs	0x00457776
    1408:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    140c:	332d6269 			; <UNDEFINED> instruction: 0x332d6269
    1410:	302e332e 	eorcc	r3, lr, lr, lsr #6
    1414:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    1418:	6e5f646c 	cdpvs	4, 5, cr6, cr15, cr12, {3}
    141c:	2f6f6e61 	svccs	0x006f6e61
    1420:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1424:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1428:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    142c:	68742f69 	ldmdavs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp}^
    1430:	2f626d75 	svccs	0x00626d75
    1434:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	; 0xfffffe28
    1438:	666f6e2f 	strbtvs	r6, [pc], -pc, lsr #28
    143c:	656e2f70 	strbvs	r2, [lr, #-3952]!	; 0xfffff090
    1440:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    1444:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1448:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    144c:	5f006373 	svcpl	0x00006373
    1450:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    1454:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1458:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    145c:	735f7961 	cmpvc	pc, #1589248	; 0x184000
    1460:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1464:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    1468:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
    146c:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
    1470:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
    1474:	30393130 	eorscc	r3, r9, r0, lsr r1
    1478:	20333037 	eorscs	r3, r3, r7, lsr r0
    147c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
    1480:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    1484:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
    1488:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
    148c:	6172622d 	cmnvs	r2, sp, lsr #4
    1490:	2068636e 	rsbcs	r6, r8, lr, ror #6
    1494:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1498:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    149c:	33373220 	teqcc	r7, #32, 4
    14a0:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
    14a4:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
    14a8:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    14ac:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
    14b0:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
    14b4:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
    14b8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    14bc:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
    14c0:	616f6c66 	cmnvs	pc, r6, ror #24
    14c4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    14c8:	6f733d69 	svcvs	0x00733d69
    14cc:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
    14d0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
    14d4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
    14d8:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
    14dc:	672d206d 	strvs	r2, [sp, -sp, rrx]!
    14e0:	324f2d20 	subcc	r2, pc, #32, 26	; 0x800
    14e4:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
    14e8:	75622d6f 	strbvc	r2, [r2, #-3439]!	; 0xfffff291
    14ec:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
    14f0:	5f5f006e 	svcpl	0x005f006e
    14f4:	69657270 	stmdbvs	r5!, {r4, r5, r6, r9, ip, sp, lr}^
    14f8:	5f74696e 	svcpl	0x0074696e
    14fc:	61727261 	cmnvs	r2, r1, ror #4
    1500:	6e655f79 	mcrvs	15, 3, r5, cr5, cr9, {3}
    1504:	5f5f0064 	svcpl	0x005f0064
    1508:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    150c:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    1510:	655f7961 	ldrbvs	r7, [pc, #-2401]	; bb7 <_Min_Stack_Size+0x7b7>
    1514:	2e00646e 	cdpcs	4, 0, cr6, cr0, cr14, {3}
    1518:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    151c:	2f2e2e2f 	svccs	0x002e2e2f
    1520:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1524:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1528:	2f2e2e2f 	svccs	0x002e2e2f
    152c:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
    1530:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    1534:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    1538:	6d2f6362 	stcvs	3, cr6, [pc, #-392]!	; 13b8 <_Min_Stack_Size+0xfb8>
    153c:	2f637369 	svccs	0x00637369
    1540:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1544:	Address 0x0000000000001544 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2931622b 	ldmdbcs	r1!, {r0, r1, r3, r5, r9, sp, lr}
  18:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
  1c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  20:	30393130 	eorscc	r3, r9, r0, lsr r1
  24:	20333037 	eorscs	r3, r3, r7, lsr r0
  28:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  2c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  30:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
  34:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
  38:	6172622d 	cmnvs	r2, sp, lsr #4
  3c:	2068636e 	rsbcs	r6, r8, lr, ror #6
  40:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  44:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  48:	33373220 	teqcc	r7, #32, 4
  4c:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
  50:	43434700 	movtmi	r4, #14080	; 0x3700
  54:	3128203a 			; <UNDEFINED> instruction: 0x3128203a
  58:	2d383a35 	vldmdbcs	r8!, {s6-s58}
  5c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  60:	2d33712d 	ldfcss	f7, [r3, #-180]!	; 0xffffff4c
  64:	38202931 	stmdacc	r0!, {r0, r4, r5, r8, fp, sp}
  68:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
  6c:	31303220 	teqcc	r0, r0, lsr #4
  70:	30373039 	eorscc	r3, r7, r9, lsr r0
  74:	72282033 	eorvc	r2, r8, #51	; 0x33
  78:	61656c65 	cmnvs	r5, r5, ror #24
  7c:	20296573 	eorcs	r6, r9, r3, ror r5
  80:	6363675b 	cmnvs	r3, #23855104	; 0x16c0000
  84:	622d382d 	eorvs	r3, sp, #2949120	; 0x2d0000
  88:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  8c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  90:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  94:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  98:	32303337 	eorscc	r3, r0, #-603979776	; 0xdc000000
  9c:	Address 0x000000000000009c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	0000018c 	andeq	r0, r0, ip, lsl #3
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	08000374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	08000376 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	08000378 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9}
  5c:	0000000c 	andeq	r0, r0, ip
  60:	00000014 	andeq	r0, r0, r4, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
  6c:	000000c0 	andeq	r0, r0, r0, asr #1
  70:	83080e41 	movwhi	r0, #36417	; 0x8e41
  74:	00018e02 	andeq	r8, r1, r2, lsl #28
  78:	0000000c 	andeq	r0, r0, ip
  7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  80:	7c020001 	stcvc	0, cr0, [r2], {1}
  84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  88:	0000000c 	andeq	r0, r0, ip
  8c:	00000078 	andeq	r0, r0, r8, ror r0
  90:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
  94:	00000010 	andeq	r0, r0, r0, lsl r0
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000078 	andeq	r0, r0, r8, ror r0
  a0:	08000394 	stmdaeq	r0, {r2, r4, r7, r8, r9}
  a4:	00000010 	andeq	r0, r0, r0, lsl r0
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  b0:	7c020001 	stcvc	0, cr0, [r2], {1}
  b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	000000a8 	andeq	r0, r0, r8, lsr #1
  c0:	080003a4 	stmdaeq	r0, {r2, r5, r7, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	000000a8 	andeq	r0, r0, r8, lsr #1
  d0:	080003a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9}
  d4:	00000002 	andeq	r0, r0, r2
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	000000a8 	andeq	r0, r0, r8, lsr #1
  e0:	080003a8 	stmdaeq	r0, {r3, r5, r7, r8, r9}
  e4:	00000002 	andeq	r0, r0, r2
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	000000a8 	andeq	r0, r0, r8, lsr #1
  f0:	080003aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, r9}
  f4:	00000002 	andeq	r0, r0, r2
  f8:	0000000c 	andeq	r0, r0, ip
  fc:	000000a8 	andeq	r0, r0, r8, lsr #1
 100:	080003ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9}
 104:	00000002 	andeq	r0, r0, r2
 108:	0000000c 	andeq	r0, r0, ip
 10c:	000000a8 	andeq	r0, r0, r8, lsr #1
 110:	080003ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9}
 114:	00000004 	andeq	r0, r0, r4
 118:	0000000c 	andeq	r0, r0, ip
 11c:	000000a8 	andeq	r0, r0, r8, lsr #1
 120:	080003b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, r9}
 124:	00000004 	andeq	r0, r0, r4
 128:	0000000c 	andeq	r0, r0, ip
 12c:	000000a8 	andeq	r0, r0, r8, lsr #1
 130:	080003b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9}
 134:	00000092 	muleq	r0, r2, r0
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	000000a8 	andeq	r0, r0, r8, lsr #1
 140:	08000448 	stmdaeq	r0, {r3, r6, sl}
 144:	00000118 	andeq	r0, r0, r8, lsl r1
 148:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 14c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 150:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 154:	00000001 	andeq	r0, r0, r1
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	000000a8 	andeq	r0, r0, r8, lsr #1
 160:	08000560 	stmdaeq	r0, {r5, r6, r8, sl}
 164:	00000148 	andeq	r0, r0, r8, asr #2
 168:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 16c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 170:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 174:	00000001 	andeq	r0, r0, r1
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	000000a8 	andeq	r0, r0, r8, lsr #1
 180:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
 184:	00000150 	andeq	r0, r0, r0, asr r1
 188:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 18c:	86058506 	strhi	r8, [r5], -r6, lsl #10
 190:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 194:	00018e02 	andeq	r8, r1, r2, lsl #28
 198:	0000001c 	andeq	r0, r0, ip, lsl r0
 19c:	000000a8 	andeq	r0, r0, r8, lsr #1
 1a0:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
 1a4:	00000054 	andeq	r0, r0, r4, asr r0
 1a8:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 1ac:	86048505 	strhi	r8, [r4], -r5, lsl #10
 1b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1bc:	000000a8 	andeq	r0, r0, r8, lsr #1
 1c0:	0800084c 	stmdaeq	r0, {r2, r3, r6, fp}
 1c4:	00000034 	andeq	r0, r0, r4, lsr r0
 1c8:	83180e41 	tsthi	r8, #1040	; 0x410
 1cc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 1d0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 1d4:	00018e02 	andeq	r8, r1, r2, lsl #28
 1d8:	00000018 	andeq	r0, r0, r8, lsl r0
 1dc:	000000a8 	andeq	r0, r0, r8, lsr #1
 1e0:	08000880 	stmdaeq	r0, {r7, fp}
 1e4:	0000005a 	andeq	r0, r0, sl, asr r0
 1e8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1ec:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000020 	andeq	r0, r0, r0, lsr #32
 1f8:	000000a8 	andeq	r0, r0, r8, lsr #1
 1fc:	080008da 	stmdaeq	r0, {r1, r3, r4, r6, r7, fp}
 200:	00000136 	andeq	r0, r0, r6, lsr r1
 204:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 208:	86038504 	strhi	r8, [r3], -r4, lsl #10
 20c:	02018e02 	andeq	r8, r1, #2, 28
 210:	100e0a46 	andne	r0, lr, r6, asr #20
 214:	00000b41 	andeq	r0, r0, r1, asr #22
 218:	0000000c 	andeq	r0, r0, ip
 21c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 220:	7c020001 	stcvc	0, cr0, [r2], {1}
 224:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 228:	00000018 	andeq	r0, r0, r8, lsl r0
 22c:	00000218 	andeq	r0, r0, r8, lsl r2
 230:	08000a10 	stmdaeq	r0, {r4, r9, fp}
 234:	0000004c 	andeq	r0, r0, ip, asr #32
 238:	83100e43 	tsthi	r0, #1072	; 0x430
 23c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 240:	00018e02 	andeq	r8, r1, r2, lsl #28
 244:	0000000c 	andeq	r0, r0, ip
 248:	00000218 	andeq	r0, r0, r8, lsl r2
 24c:	08000a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp}
 250:	00000018 	andeq	r0, r0, r8, lsl r0
 254:	0000000c 	andeq	r0, r0, ip
 258:	00000218 	andeq	r0, r0, r8, lsl r2
 25c:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
 260:	00000018 	andeq	r0, r0, r8, lsl r0
 264:	0000000c 	andeq	r0, r0, ip
 268:	00000218 	andeq	r0, r0, r8, lsl r2
 26c:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
 270:	00000002 	andeq	r0, r0, r2
 274:	00000014 	andeq	r0, r0, r4, lsl r0
 278:	00000218 	andeq	r0, r0, r8, lsl r2
 27c:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
 280:	0000007e 	andeq	r0, r0, lr, ror r0
 284:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 288:	00018e02 	andeq	r8, r1, r2, lsl #28
 28c:	0000000c 	andeq	r0, r0, ip
 290:	00000218 	andeq	r0, r0, r8, lsl r2
 294:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 298:	00000064 	andeq	r0, r0, r4, rrx
 29c:	00000014 	andeq	r0, r0, r4, lsl r0
 2a0:	00000218 	andeq	r0, r0, r8, lsl r2
 2a4:	08000b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp}
 2a8:	00000048 	andeq	r0, r0, r8, asr #32
 2ac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 2b0:	00018e02 	andeq	r8, r1, r2, lsl #28
 2b4:	00000014 	andeq	r0, r0, r4, lsl r0
 2b8:	00000218 	andeq	r0, r0, r8, lsl r2
 2bc:	08000bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp}
 2c0:	00000064 	andeq	r0, r0, r4, rrx
 2c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 2c8:	00018e02 	andeq	r8, r1, r2, lsl #28
 2cc:	0000000c 	andeq	r0, r0, ip
 2d0:	00000218 	andeq	r0, r0, r8, lsl r2
 2d4:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
 2d8:	0000004c 	andeq	r0, r0, ip, asr #32
 2dc:	0000000c 	andeq	r0, r0, ip
 2e0:	00000218 	andeq	r0, r0, r8, lsl r2
 2e4:	08000c68 	stmdaeq	r0, {r3, r5, r6, sl, fp}
 2e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ec:	0000000c 	andeq	r0, r0, ip
 2f0:	00000218 	andeq	r0, r0, r8, lsl r2
 2f4:	08000c84 	stmdaeq	r0, {r2, r7, sl, fp}
 2f8:	0000009c 	muleq	r0, ip, r0
 2fc:	00000018 	andeq	r0, r0, r8, lsl r0
 300:	00000218 	andeq	r0, r0, r8, lsl r2
 304:	08000d20 	stmdaeq	r0, {r5, r8, sl, fp}
 308:	0000002e 	andeq	r0, r0, lr, lsr #32
 30c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 310:	86038504 	strhi	r8, [r3], -r4, lsl #10
 314:	00018e02 	andeq	r8, r1, r2, lsl #28
 318:	00000018 	andeq	r0, r0, r8, lsl r0
 31c:	00000218 	andeq	r0, r0, r8, lsl r2
 320:	08000d4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, sl, fp}
 324:	00000032 	andeq	r0, r0, r2, lsr r0
 328:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 32c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 330:	00018e02 	andeq	r8, r1, r2, lsl #28
 334:	0000001c 	andeq	r0, r0, ip, lsl r0
 338:	00000218 	andeq	r0, r0, r8, lsl r2
 33c:	08000d80 	stmdaeq	r0, {r7, r8, sl, fp}
 340:	0000011c 	andeq	r0, r0, ip, lsl r1
 344:	83080e41 	movwhi	r0, #36417	; 0x8e41
 348:	02018e02 	andeq	r8, r1, #2, 28
 34c:	0ec3ce7f 	mcreq	14, 6, ip, cr3, cr15, {3}
 350:	00000000 	andeq	r0, r0, r0
 354:	00000018 	andeq	r0, r0, r8, lsl r0
 358:	00000218 	andeq	r0, r0, r8, lsl r2
 35c:	08000e9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, fp}
 360:	00000012 	andeq	r0, r0, r2, lsl r0
 364:	83080e41 	movwhi	r0, #36417	; 0x8e41
 368:	46018e02 	strmi	r8, [r1], -r2, lsl #28
 36c:	000ec3ce 	andeq	ip, lr, lr, asr #7
 370:	0000000c 	andeq	r0, r0, ip
 374:	00000218 	andeq	r0, r0, r8, lsl r2
 378:	08000eae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, sl, fp}
 37c:	00000004 	andeq	r0, r0, r4
 380:	0000000c 	andeq	r0, r0, ip
 384:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 388:	7c020001 	stcvc	0, cr0, [r2], {1}
 38c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 390:	0000000c 	andeq	r0, r0, ip
 394:	00000380 	andeq	r0, r0, r0, lsl #7
 398:	08000eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp}
 39c:	0000000a 	andeq	r0, r0, sl
 3a0:	0000000c 	andeq	r0, r0, ip
 3a4:	00000380 	andeq	r0, r0, r0, lsl #7
 3a8:	08000ebe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, sl, fp}
 3ac:	00000026 	andeq	r0, r0, r6, lsr #32
 3b0:	0000000c 	andeq	r0, r0, ip
 3b4:	00000380 	andeq	r0, r0, r0, lsl #7
 3b8:	08000ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp}
 3bc:	00000022 	andeq	r0, r0, r2, lsr #32
 3c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c4:	00000380 	andeq	r0, r0, r0, lsl #7
 3c8:	08000f06 	stmdaeq	r0, {r1, r2, r8, r9, sl, fp}
 3cc:	0000004a 	andeq	r0, r0, sl, asr #32
 3d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 3d4:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
 3d8:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 3dc:	000b4200 	andeq	r4, fp, r0, lsl #4
 3e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3e4:	00000380 	andeq	r0, r0, r0, lsl #7
 3e8:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
 3ec:	0000002c 	andeq	r0, r0, ip, lsr #32
 3f0:	83180e41 	tsthi	r8, #1040	; 0x410
 3f4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 3f8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 3fc:	00018e02 	andeq	r8, r1, r2, lsl #28
 400:	00000018 	andeq	r0, r0, r8, lsl r0
 404:	00000380 	andeq	r0, r0, r0, lsl #7
 408:	08000f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp}
 40c:	00000028 	andeq	r0, r0, r8, lsr #32
 410:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 414:	86038504 	strhi	r8, [r3], -r4, lsl #10
 418:	00018e02 	andeq	r8, r1, r2, lsl #28
 41c:	00000018 	andeq	r0, r0, r8, lsl r0
 420:	00000380 	andeq	r0, r0, r0, lsl #7
 424:	08000fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp}
 428:	0000002c 	andeq	r0, r0, ip, lsr #32
 42c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 430:	86038504 	strhi	r8, [r3], -r4, lsl #10
 434:	00018e02 	andeq	r8, r1, r2, lsl #28
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	00000380 	andeq	r0, r0, r0, lsl #7
 440:	08000fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp}
 444:	00000058 	andeq	r0, r0, r8, asr r0
 448:	83180e41 	tsthi	r8, #1040	; 0x410
 44c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 450:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 454:	00018e02 	andeq	r8, r1, r2, lsl #28
 458:	0000000c 	andeq	r0, r0, ip
 45c:	00000380 	andeq	r0, r0, r0, lsl #7
 460:	08001028 	stmdaeq	r0, {r3, r5, ip}
 464:	0000003c 	andeq	r0, r0, ip, lsr r0
 468:	0000000c 	andeq	r0, r0, ip
 46c:	00000380 	andeq	r0, r0, r0, lsl #7
 470:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
 474:	00000074 	andeq	r0, r0, r4, ror r0
 478:	00000020 	andeq	r0, r0, r0, lsr #32
 47c:	00000380 	andeq	r0, r0, r0, lsl #7
 480:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
 484:	0000009c 	muleq	r0, ip, r0
 488:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 48c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 490:	780e4201 	stmdavc	lr, {r0, r9, lr}
 494:	0c0e0a4a 			; <UNDEFINED> instruction: 0x0c0e0a4a
 498:	00000b41 	andeq	r0, r0, r1, asr #22
 49c:	00000018 	andeq	r0, r0, r8, lsl r0
 4a0:	00000380 	andeq	r0, r0, r0, lsl #7
 4a4:	08001174 	stmdaeq	r0, {r2, r4, r5, r6, r8, ip}
 4a8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 4ac:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 4b0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 4b4:	00018e02 	andeq	r8, r1, r2, lsl #28
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	00000380 	andeq	r0, r0, r0, lsl #7
 4c0:	08001264 	stmdaeq	r0, {r2, r5, r6, r9, ip}
 4c4:	000000a0 	andeq	r0, r0, r0, lsr #1
 4c8:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 4cc:	86048505 	strhi	r8, [r4], -r5, lsl #10
 4d0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 4d4:	00000001 	andeq	r0, r0, r1
 4d8:	00000024 	andeq	r0, r0, r4, lsr #32
 4dc:	00000380 	andeq	r0, r0, r0, lsl #7
 4e0:	08001304 	stmdaeq	r0, {r2, r8, r9, ip}
 4e4:	00000174 	andeq	r0, r0, r4, ror r1
 4e8:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 4ec:	86048505 	strhi	r8, [r4], -r5, lsl #10
 4f0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 4f4:	580e4201 	stmdapl	lr, {r0, r9, lr}
 4f8:	0e0a6702 	cdpeq	7, 0, cr6, cr10, cr2, {0}
 4fc:	000b4114 	andeq	r4, fp, r4, lsl r1
 500:	0000000c 	andeq	r0, r0, ip
 504:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 508:	7c020001 	stcvc	0, cr0, [r2], {1}
 50c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 510:	0000000c 	andeq	r0, r0, ip
 514:	00000500 	andeq	r0, r0, r0, lsl #10
 518:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
 51c:	00000014 	andeq	r0, r0, r4, lsl r0
 520:	00000018 	andeq	r0, r0, r8, lsl r0
 524:	00000500 	andeq	r0, r0, r0, lsl #10
 528:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
 52c:	0000003c 	andeq	r0, r0, ip, lsr r0
 530:	83100e41 	tsthi	r0, #1040	; 0x410
 534:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 538:	00018e02 	andeq	r8, r1, r2, lsl #28
 53c:	00000018 	andeq	r0, r0, r8, lsl r0
 540:	00000500 	andeq	r0, r0, r0, lsl #10
 544:	080014c8 	stmdaeq	r0, {r3, r6, r7, sl, ip}
 548:	00000034 	andeq	r0, r0, r4, lsr r0
 54c:	83100e41 	tsthi	r0, #1040	; 0x410
 550:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 554:	00018e02 	andeq	r8, r1, r2, lsl #28
 558:	0000000c 	andeq	r0, r0, ip
 55c:	00000500 	andeq	r0, r0, r0, lsl #10
 560:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
 564:	0000002c 	andeq	r0, r0, ip, lsr #32
 568:	00000014 	andeq	r0, r0, r4, lsl r0
 56c:	00000500 	andeq	r0, r0, r0, lsl #10
 570:	08001528 	stmdaeq	r0, {r3, r5, r8, sl, ip}
 574:	00000030 	andeq	r0, r0, r0, lsr r0
 578:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 57c:	00018e02 	andeq	r8, r1, r2, lsl #28
 580:	00000018 	andeq	r0, r0, r8, lsl r0
 584:	00000500 	andeq	r0, r0, r0, lsl #10
 588:	08001558 	stmdaeq	r0, {r3, r4, r6, r8, sl, ip}
 58c:	0000002a 	andeq	r0, r0, sl, lsr #32
 590:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 594:	4e018e02 	cdpmi	14, 0, cr8, cr1, cr2, {0}
 598:	000ec4ce 	andeq	ip, lr, lr, asr #9
 59c:	0000000c 	andeq	r0, r0, ip
 5a0:	00000500 	andeq	r0, r0, r0, lsl #10
 5a4:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
 5a8:	00000016 	andeq	r0, r0, r6, lsl r0
 5ac:	00000030 	andeq	r0, r0, r0, lsr r0
 5b0:	00000500 	andeq	r0, r0, r0, lsl #10
 5b4:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
 5b8:	000000a0 	andeq	r0, r0, r0, lsr #1
 5bc:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 5c0:	86078508 	strhi	r8, [r7], -r8, lsl #10
 5c4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 5c8:	8a038904 	bhi	e29e0 <_Min_Stack_Size+0xe25e0>
 5cc:	66018e02 	strvs	r8, [r1], -r2, lsl #28
 5d0:	c9cace0a 	stmibgt	sl, {r1, r3, r9, sl, fp, lr, pc}^
 5d4:	c5c6c7c8 	strbgt	ip, [r6, #1992]	; 0x7c8
 5d8:	43000ec4 	movwmi	r0, #3780	; 0xec4
 5dc:	0000000b 	andeq	r0, r0, fp
 5e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 5e4:	00000500 	andeq	r0, r0, r0, lsl #10
 5e8:	08001638 	stmdaeq	r0, {r3, r4, r5, r9, sl, ip}
 5ec:	00000040 	andeq	r0, r0, r0, asr #32
 5f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 5f4:	42018e02 	andmi	r8, r1, #2, 28
 5f8:	0e59280e 	cdpeq	8, 5, cr2, cr9, cr14, {0}
 5fc:	00000008 	andeq	r0, r0, r8
 600:	0000000c 	andeq	r0, r0, ip
 604:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 608:	7c020001 	stcvc	0, cr0, [r2], {1}
 60c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 610:	00000018 	andeq	r0, r0, r8, lsl r0
 614:	00000600 	andeq	r0, r0, r0, lsl #12
 618:	08001678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, ip}
 61c:	00000048 	andeq	r0, r0, r8, asr #32
 620:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 624:	86038504 	strhi	r8, [r3], -r4, lsl #10
 628:	00018e02 	andeq	r8, r1, r2, lsl #28
