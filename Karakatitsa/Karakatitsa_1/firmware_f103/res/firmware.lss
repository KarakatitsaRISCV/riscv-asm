
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	08001535 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, ip}
 8000008:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800000c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000010:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000014:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000018:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
	...
 800002c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000030:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800003c:	08000d69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp}
 8000040:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000044:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000048:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800004c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000050:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000054:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000058:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800005c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000060:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000064:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000068:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800006c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000070:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000074:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000078:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800007c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000080:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000084:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000088:	080008db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, fp}
 800008c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000090:	080004f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sl}
 8000094:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000098:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800009c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000a0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000a4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000a8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000ac:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000b0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000b4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000b8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000bc:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000c0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000c4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000c8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000cc:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000d0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000d4:	08000dcb 	stmdaeq	r0, {r0, r1, r3, r6, r7, r8, sl, fp}
 80000d8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000dc:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000e0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000e4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000e8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
	...
 8000108:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800010c <SysClockMax-0x14>:
 800010c:	08001814 	stmdaeq	r0, {r2, r4, fp, ip}
 8000110:	20000000 	andcs	r0, r0, r0
 8000114:	20000024 	andcs	r0, r0, r4, lsr #32
 8000118:	20000024 	andcs	r0, r0, r4, lsr #32
 800011c:	20000704 	andcs	r0, r0, r4, lsl #14

08000120 <SysClockMax>:
//F_HSE = 8 MHz
int8_t SysClockMax(){
  uint32_t i;
  uint32_t tmp;

  RCC->CR &=~RCC_CR_HSEON;
 8000120:	4b27      	ldr	r3, [pc, #156]	; (80001c0 <SysClockMax+0xa0>)
 8000122:	681a      	ldr	r2, [r3, #0]
 8000124:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000128:	601a      	str	r2, [r3, #0]
  RCC->CR &=~RCC_CR_HSEBYP;
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000130:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_HSEON;
 8000132:	681a      	ldr	r2, [r3, #0]
 8000134:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000138:	601a      	str	r2, [r3, #0]
 800013a:	f64f 72ff 	movw	r2, #65535	; 0xffff
  for(i=0;i<0x0FFFF;i++){
    if(RCC->CR & RCC_CR_HSERDY){i=0x1FFFF; break;}
 800013e:	6819      	ldr	r1, [r3, #0]
 8000140:	0388      	lsls	r0, r1, #14
 8000142:	d416      	bmi.n	8000172 <SysClockMax+0x52>
  for(i=0;i<0x0FFFF;i++){
 8000144:	3a01      	subs	r2, #1
 8000146:	d1fa      	bne.n	800013e <SysClockMax+0x1e>
  }
  if(i != 0x1FFFF)return SCME_HSE; //can not start HSE
 8000148:	2001      	movs	r0, #1
 800014a:	4770      	bx	lr
  for(i=0;i<0x0FFFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFFF; break;}
  }
  if(i != 0x1FFFF)return SCME_SW;

  return SCME_OK;
 800014c:	2000      	movs	r0, #0
}
 800014e:	4770      	bx	lr
  tmp = RCC->CFGR;
 8000150:	685a      	ldr	r2, [r3, #4]
  tmp &=~RCC_CFGR_SW;
 8000152:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_PLL;
 8000156:	f042 0202 	orr.w	r2, r2, #2
  RCC->CFGR = tmp;
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	f64f 72ff 	movw	r2, #65535	; 0xffff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFFF; break;}
 8000160:	6859      	ldr	r1, [r3, #4]
 8000162:	f001 010c 	and.w	r1, r1, #12
 8000166:	2908      	cmp	r1, #8
 8000168:	d0f0      	beq.n	800014c <SysClockMax+0x2c>
  for(i=0;i<0x0FFFF;i++){
 800016a:	3a01      	subs	r2, #1
 800016c:	d1f8      	bne.n	8000160 <SysClockMax+0x40>
  if(i != 0x1FFFF)return SCME_SW;
 800016e:	2003      	movs	r0, #3
 8000170:	4770      	bx	lr
  FLASH->ACR &=~FLASH_ACR_PRFTBE;
 8000172:	4a14      	ldr	r2, [pc, #80]	; (80001c4 <SysClockMax+0xa4>)
 8000174:	6811      	ldr	r1, [r2, #0]
 8000176:	f021 0110 	bic.w	r1, r1, #16
 800017a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_PRFTBE;
 800017c:	6811      	ldr	r1, [r2, #0]
 800017e:	f041 0110 	orr.w	r1, r1, #16
 8000182:	6011      	str	r1, [r2, #0]
  FLASH->ACR &=~FLASH_ACR_LATENCY;
 8000184:	6811      	ldr	r1, [r2, #0]
 8000186:	f021 0107 	bic.w	r1, r1, #7
 800018a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_2;
 800018c:	6811      	ldr	r1, [r2, #0]
 800018e:	f041 0104 	orr.w	r1, r1, #4
 8000192:	6011      	str	r1, [r2, #0]
  tmp = RCC->CFGR;
 8000194:	6859      	ldr	r1, [r3, #4]
  tmp &=~RCC_CFGR_PPRE1;
 8000196:	4a0c      	ldr	r2, [pc, #48]	; (80001c8 <SysClockMax+0xa8>)
 8000198:	400a      	ands	r2, r1
  tmp |= RCC_CFGR_PPRE1_DIV2;
 800019a:	f442 12e8 	orr.w	r2, r2, #1900544	; 0x1d0000
 800019e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  RCC->CFGR = tmp;
 80001a2:	605a      	str	r2, [r3, #4]
  RCC->CR |= RCC_CR_PLLON;
 80001a4:	681a      	ldr	r2, [r3, #0]
 80001a6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80001aa:	601a      	str	r2, [r3, #0]
 80001ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFFF; break;}
 80001b0:	6819      	ldr	r1, [r3, #0]
 80001b2:	0189      	lsls	r1, r1, #6
 80001b4:	d4cc      	bmi.n	8000150 <SysClockMax+0x30>
  for(i=0;i<0x0FFFF;i++){
 80001b6:	3a01      	subs	r2, #1
 80001b8:	d1fa      	bne.n	80001b0 <SysClockMax+0x90>
  if(i != 0x1FFFF)return SCME_PLL; //can not enable PLL
 80001ba:	2002      	movs	r0, #2
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop
 80001c0:	40021000 	andmi	r1, r2, r0
 80001c4:	40022000 	andmi	r2, r2, r0
 80001c8:	ffc2c00f 			; <UNDEFINED> instruction: 0xffc2c00f

080001cc <_init>:
 80001cc:	4770      	bx	lr

080001ce <SystemInit>:
#include "usb_lib.h"
#include "clock.h"
#include "systick.h"

void __attribute__((weak)) _init(void){}
void __attribute__((weak)) SystemInit(void){}
 80001ce:	4770      	bx	lr

080001d0 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 80001d0:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
 80001d4:	d200      	bcs.n	80001d8 <sleep+0x8>
}
 80001d6:	4770      	bx	lr
  while(time--)asm volatile("nop");
 80001d8:	bf00      	nop
 80001da:	e7f9      	b.n	80001d0 <sleep>

080001dc <endp_callback_default>:
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))void usb_class_sof(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}

static void endp_callback_default(uint8_t epnum){}
 80001dc:	4770      	bx	lr
__attribute__((weak))void usb_class_init(){}
 80001de:	4770      	bx	lr

080001e0 <usb_class_disconnect>:
 80001e0:	4770      	bx	lr
 80001e2:	4770      	bx	lr
 80001e4:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 80001e6:	2000      	movs	r0, #0
 80001e8:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 80001ea:	2000      	movs	r0, #0
 80001ec:	4770      	bx	lr

080001ee <USB_setup>:
static config_pack_t setup_packet;

//USB_PULLUP may be defined in "hardware.h"

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ee:	4a23      	ldr	r2, [pc, #140]	; (800027c <USB_setup+0x8e>)
 80001f0:	69d3      	ldr	r3, [r2, #28]
 80001f2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80001f6:	61d3      	str	r3, [r2, #28]
  GPIO_config( USB_PULLUP );
  GPO_OFF( USB_PULLUP );
#elif defined EXTEN_USBD_PU_EN //compatibilyty with CH32F1 (thx Олег Свиридов, my_xfiles@mail.ru)
  EXTEN->EXTEN_CTR &= ~EXTEN_USBD_PU_EN;
#elif defined USB_DP
  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 80001f8:	2201      	movs	r2, #1
 80001fa:	4b21      	ldr	r3, [pc, #132]	; (8000280 <USB_setup+0x92>)
 80001fc:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  USB->CNTR = USB_CNTR_PDWN;
 8000200:	2202      	movs	r2, #2
 8000202:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  GPIO_manual( USB_DP, GPIO_OD50 );
 8000206:	f503 432c 	add.w	r3, r3, #44032	; 0xac00
 800020a:	685a      	ldr	r2, [r3, #4]
 800020c:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8000210:	f442 22e0 	orr.w	r2, r2, #458752	; 0x70000
 8000214:	605a      	str	r2, [r3, #4]
  GPO_OFF(USB_DP);
 8000216:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800021a:	611a      	str	r2, [r3, #16]
 800021c:	4a19      	ldr	r2, [pc, #100]	; (8000284 <USB_setup+0x96>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 800021e:	bf00      	nop
 8000220:	3a01      	subs	r2, #1
 8000222:	d1fc      	bne.n	800021e <USB_setup+0x30>
  GPIO_manual( USB_DP, GPIO_HIZ );
 8000224:	685a      	ldr	r2, [r3, #4]
 8000226:	4818      	ldr	r0, [pc, #96]	; (8000288 <USB_setup+0x9a>)
 8000228:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800022c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000230:	605a      	str	r2, [r3, #4]
#else
  #warning USB_PULLUP undefined
#endif

  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 8000232:	2201      	movs	r2, #1
 8000234:	4b12      	ldr	r3, [pc, #72]	; (8000280 <USB_setup+0x92>)
  //Initialization of callback functions (thx Олег Свиридов, my_xfiles@mail.ru)
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000236:	4915      	ldr	r1, [pc, #84]	; (800028c <USB_setup+0x9e>)
  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 8000238:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800023c:	2308      	movs	r3, #8
 800023e:	4a14      	ldr	r2, [pc, #80]	; (8000290 <USB_setup+0xa2>)
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000240:	3b01      	subs	r3, #1
 8000242:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8000246:	f840 1b04 	str.w	r1, [r0], #4
 800024a:	f842 1b04 	str.w	r1, [r2], #4
 800024e:	d1f7      	bne.n	8000240 <USB_setup+0x52>
 8000250:	4b0c      	ldr	r3, [pc, #48]	; (8000284 <USB_setup+0x96>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000252:	bf00      	nop
 8000254:	3b01      	subs	r3, #1
 8000256:	d1fc      	bne.n	8000252 <USB_setup+0x64>
  USB->CNTR   = 0;
 8000258:	4a09      	ldr	r2, [pc, #36]	; (8000280 <USB_setup+0x92>)
 800025a:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
  USB->BTABLE = 0;
 800025e:	f8a2 3050 	strh.w	r3, [r2, #80]	; 0x50
  USB->DADDR  = 0;
 8000262:	f8a2 304c 	strh.w	r3, [r2, #76]	; 0x4c
  USB->ISTR   = 0;
 8000266:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 800026a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800026e:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8000272:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8000276:	4b07      	ldr	r3, [pc, #28]	; (8000294 <USB_setup+0xa6>)
 8000278:	601a      	str	r2, [r3, #0]
#elif defined EXTEN_USBD_PU_EN
  EXTEN->EXTEN_CTR |= EXTEN_USBD_PU_EN;
#elif defined USB_PULLUP
  GPO_ON( USB_PULLUP );
#endif
}
 800027a:	4770      	bx	lr
 800027c:	40021000 	andmi	r1, r2, r0
 8000280:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000284:	000186a0 	andeq	r8, r1, r0, lsr #13
 8000288:	20000284 	andcs	r0, r0, r4, lsl #5
 800028c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000290:	20000264 	andcs	r0, r0, r4, ror #4
 8000294:	e000e100 	and	lr, r0, r0, lsl #2

08000298 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000298:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
 800029a:	4c41      	ldr	r4, [pc, #260]	; (80003a0 <usb_ep_init+0x108>)
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 800029c:	f000 070f 	and.w	r7, r0, #15
 80002a0:	fa4f fc80 	sxtb.w	ip, r0
 80002a4:	00bd      	lsls	r5, r7, #2
  if(func == NULL)func = endp_callback_default;
 80002a6:	2b00      	cmp	r3, #0
 80002a8:	bf08      	it	eq
 80002aa:	4623      	moveq	r3, r4
  
  if(dir_in){
 80002ac:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80002b0:	f1bc 0f00 	cmp.w	ip, #0
 80002b4:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 80002b8:	da17      	bge.n	80002ea <usb_ep_init+0x52>
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80002ba:	8828      	ldrh	r0, [r5, #0]
 80002bc:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
 80002c0:	0500      	lsls	r0, r0, #20
 80002c2:	0d00      	lsrs	r0, r0, #20
 80002c4:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 80002c8:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 80002cc:	8028      	strh	r0, [r5, #0]
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
  }
  
  uint16_t buf = USB_EPx(epnum);
 80002ce:	882c      	ldrh	r4, [r5, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 80002d0:	2902      	cmp	r1, #2
 80002d2:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 80002d6:	ea44 0407 	orr.w	r4, r4, r7
 80002da:	d011      	beq.n	8000300 <usb_ep_init+0x68>
 80002dc:	2903      	cmp	r1, #3
 80002de:	d035      	beq.n	800034c <usb_ep_init+0xb4>
 80002e0:	2900      	cmp	r1, #0
 80002e2:	d136      	bne.n	8000352 <usb_ep_init+0xba>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 80002e4:	f444 4402 	orr.w	r4, r4, #33280	; 0x8200
 80002e8:	e00c      	b.n	8000304 <usb_ep_init+0x6c>
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80002ea:	882c      	ldrh	r4, [r5, #0]
 80002ec:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80002f0:	04a4      	lsls	r4, r4, #18
 80002f2:	0ca4      	lsrs	r4, r4, #18
 80002f4:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 80002f8:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80002fc:	802c      	strh	r4, [r5, #0]
 80002fe:	e7e6      	b.n	80002ce <usb_ep_init+0x36>
  buf &=~ USB_EP_T_FIELD;
 8000300:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000304:	f044 0480 	orr.w	r4, r4, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000308:	802c      	strh	r4, [r5, #0]
  
  if( dir_in ){
 800030a:	4826      	ldr	r0, [pc, #152]	; (80003a4 <usb_ep_init+0x10c>)
 800030c:	013c      	lsls	r4, r7, #4
 800030e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000312:	f1bc 0f00 	cmp.w	ip, #0
 8000316:	8806      	ldrh	r6, [r0, #0]
 8000318:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
 800031c:	da1c      	bge.n	8000358 <usb_ep_init+0xc0>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800031e:	6026      	str	r6, [r4, #0]
    epfunc_in[epnum] = func;
 8000320:	4c21      	ldr	r4, [pc, #132]	; (80003a8 <usb_ep_init+0x110>)
    if((ep_type & 0x03) == USB_ENDP_ISO){
 8000322:	f001 0103 	and.w	r1, r1, #3
    epfunc_in[epnum] = func;
 8000326:	f844 3027 	str.w	r3, [r4, r7, lsl #2]
    if((ep_type & 0x03) == USB_ENDP_ISO){
 800032a:	f640 733f 	movw	r3, #3903	; 0xf3f
 800032e:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000330:	8829      	ldrh	r1, [r5, #0]
 8000332:	ea03 0301 	and.w	r3, r3, r1
 8000336:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 800033a:	bf0c      	ite	eq
 800033c:	f083 03b0 	eoreq.w	r3, r3, #176	; 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000340:	f083 03a0 	eorne.w	r3, r3, #160	; 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000344:	4432      	add	r2, r6
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000346:	802b      	strh	r3, [r5, #0]
  lastaddr += size;
 8000348:	8002      	strh	r2, [r0, #0]
}
 800034a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800034c:	f444 4406 	orr.w	r4, r4, #34304	; 0x8600
 8000350:	e7d8      	b.n	8000304 <usb_ep_init+0x6c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000352:	f444 4404 	orr.w	r4, r4, #33792	; 0x8400
 8000356:	e7d5      	b.n	8000304 <usb_ep_init+0x6c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000358:	60a6      	str	r6, [r4, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800035a:	89a1      	ldrh	r1, [r4, #12]
    if(size < 64){
 800035c:	2a3f      	cmp	r2, #63	; 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 800035e:	bf8b      	itete	hi
 8000360:	f441 4100 	orrhi.w	r1, r1, #32768	; 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000364:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 8000368:	81a1      	strhhi	r1, [r4, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800036a:	81a1      	strhls	r1, [r4, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800036c:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
 8000370:	bf8a      	itet	hi
 8000372:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000374:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000378:	f101 31ff 	addhi.w	r1, r1, #4294967295	; 0xffffffff
 800037c:	f361 2c8e 	bfi	ip, r1, #10, #5
    epfunc_out[epnum] = func;
 8000380:	490a      	ldr	r1, [pc, #40]	; (80003ac <usb_ep_init+0x114>)
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 8000382:	f8a4 c00c 	strh.w	ip, [r4, #12]
    epfunc_out[epnum] = func;
 8000386:	f841 3027 	str.w	r3, [r1, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 800038a:	882b      	ldrh	r3, [r5, #0]
 800038c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000390:	049b      	lsls	r3, r3, #18
 8000392:	0c9b      	lsrs	r3, r3, #18
 8000394:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000398:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 800039c:	e7d2      	b.n	8000344 <usb_ep_init+0xac>
 800039e:	bf00      	nop
 80003a0:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80003a4:	20000000 	andcs	r0, r0, r0
 80003a8:	20000264 	andcs	r0, r0, r4, ror #4
 80003ac:	20000284 	andcs	r0, r0, r4, lsl #5

080003b0 <usb_ep_init_double>:

void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003b2:	f248 0780 	movw	r7, #32896	; 0x8080
  epnum &= 0x0F;
 80003b6:	f000 060f 	and.w	r6, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003ba:	00b5      	lsls	r5, r6, #2
  if(func == NULL)func = endp_callback_default;
 80003bc:	4c4a      	ldr	r4, [pc, #296]	; (80004e8 <usb_ep_init_double+0x138>)
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003be:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80003c2:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
  if(func == NULL)func = endp_callback_default;
 80003c6:	2b00      	cmp	r3, #0
 80003c8:	bf08      	it	eq
 80003ca:	4623      	moveq	r3, r4
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003cc:	882c      	ldrh	r4, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 80003ce:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003d0:	f024 04c0 	bic.w	r4, r4, #192	; 0xc0
 80003d4:	ea4f 5404 	mov.w	r4, r4, lsl #20
 80003d8:	ea4f 5414 	mov.w	r4, r4, lsr #20
 80003dc:	ea44 0407 	orr.w	r4, r4, r7
 80003e0:	802c      	strh	r4, [r5, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80003e2:	882c      	ldrh	r4, [r5, #0]
 80003e4:	f024 04f0 	bic.w	r4, r4, #240	; 0xf0
 80003e8:	ea4f 4484 	mov.w	r4, r4, lsl #18
 80003ec:	ea4f 4494 	mov.w	r4, r4, lsr #18
 80003f0:	ea47 0704 	orr.w	r7, r7, r4
 80003f4:	802f      	strh	r7, [r5, #0]
  uint16_t buf = USB_EPx(epnum);
 80003f6:	882c      	ldrh	r4, [r5, #0]
  buf &=~ USB_EP_T_FIELD;
 80003f8:	f404 6410 	and.w	r4, r4, #2304	; 0x900
 80003fc:	ea44 0406 	orr.w	r4, r4, r6
  switch(ep_type){
 8000400:	d02f      	beq.n	8000462 <usb_ep_init_double+0xb2>
 8000402:	2903      	cmp	r1, #3
 8000404:	d030      	beq.n	8000468 <usb_ep_init_double+0xb8>
 8000406:	bb91      	cbnz	r1, 800046e <usb_ep_init_double+0xbe>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000408:	f444 4102 	orr.w	r1, r4, #33280	; 0x8200
 800040c:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80004f4 <usb_ep_init_double+0x144>
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000410:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  }
  USB_EPx(epnum) = buf;
 8000414:	8029      	strh	r1, [r5, #0]
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
 8000416:	f8bc 4000 	ldrh.w	r4, [ip]
 800041a:	0131      	lsls	r1, r6, #4
 800041c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8000420:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000424:	f501 41c0 	add.w	r1, r1, #24576	; 0x6000
 8000428:	eb02 0704 	add.w	r7, r2, r4
 800042c:	4660      	mov	r0, ip
 800042e:	d021      	beq.n	8000474 <usb_ep_init_double+0xc4>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
    usb_epdata[epnum].usb_tx_count = 0;
 8000430:	f04f 0c00 	mov.w	ip, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000434:	600c      	str	r4, [r1, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 8000436:	f8c1 c004 	str.w	ip, [r1, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 800043a:	608f      	str	r7, [r1, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 800043c:	f8c1 c00c 	str.w	ip, [r1, #12]
    
    buf = USB_EPx(epnum);
 8000440:	8829      	ldrh	r1, [r5, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 8000442:	f081 0130 	eor.w	r1, r1, #48	; 0x30
 8000446:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 800044a:	b289      	uxth	r1, r1
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 800044c:	8029      	strh	r1, [r5, #0]
  }
  epfunc_in[epnum] = func;
 800044e:	4927      	ldr	r1, [pc, #156]	; (80004ec <usb_ep_init_double+0x13c>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 8000450:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  epfunc_in[epnum] = func;
 8000454:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
  epfunc_out[epnum]= func;
 8000458:	4925      	ldr	r1, [pc, #148]	; (80004f0 <usb_ep_init_double+0x140>)
  lastaddr += 2*size;
 800045a:	8002      	strh	r2, [r0, #0]
  epfunc_out[epnum]= func;
 800045c:	f841 3026 	str.w	r3, [r1, r6, lsl #2]
}
 8000460:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 8000462:	f444 4101 	orr.w	r1, r4, #33024	; 0x8100
 8000466:	e7d1      	b.n	800040c <usb_ep_init_double+0x5c>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 8000468:	f444 4106 	orr.w	r1, r4, #34304	; 0x8600
 800046c:	e7ce      	b.n	800040c <usb_ep_init_double+0x5c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 800046e:	f444 4104 	orr.w	r1, r4, #33792	; 0x8400
 8000472:	e7cb      	b.n	800040c <usb_ep_init_double+0x5c>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 8000474:	608c      	str	r4, [r1, #8]
    if(size < 64){
 8000476:	2a3f      	cmp	r2, #63	; 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 8000478:	600f      	str	r7, [r1, #0]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800047a:	888f      	ldrh	r7, [r1, #4]
    if(size < 64){
 800047c:	d828      	bhi.n	80004d0 <usb_ep_init_double+0x120>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800047e:	f36f 37cf 	bfc	r7, #15, #1
 8000482:	808f      	strh	r7, [r1, #4]
 8000484:	898f      	ldrh	r7, [r1, #12]
 8000486:	f36f 37cf 	bfc	r7, #15, #1
 800048a:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 800048c:	f3c2 0744 	ubfx	r7, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 8000490:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 8000494:	f367 2c8e 	bfi	ip, r7, #10, #5
 8000498:	f8a1 c004 	strh.w	ip, [r1, #4]
 800049c:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
 80004a0:	f367 2c8e 	bfi	ip, r7, #10, #5
 80004a4:	f8a1 c00c 	strh.w	ip, [r1, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004a8:	8829      	ldrh	r1, [r5, #0]
 80004aa:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 80004ae:	0489      	lsls	r1, r1, #18
 80004b0:	0c89      	lsrs	r1, r1, #18
 80004b2:	f481 4130 	eor.w	r1, r1, #45056	; 0xb000
 80004b6:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 80004ba:	8029      	strh	r1, [r5, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80004bc:	8829      	ldrh	r1, [r5, #0]
 80004be:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80004c2:	0509      	lsls	r1, r1, #20
 80004c4:	0d09      	lsrs	r1, r1, #20
 80004c6:	f481 4100 	eor.w	r1, r1, #32768	; 0x8000
 80004ca:	f081 01b0 	eor.w	r1, r1, #176	; 0xb0
 80004ce:	e7bd      	b.n	800044c <usb_ep_init_double+0x9c>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 80004d0:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 80004d4:	808f      	strh	r7, [r1, #4]
 80004d6:	898f      	ldrh	r7, [r1, #12]
 80004d8:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 80004dc:	818f      	strh	r7, [r1, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 80004de:	0957      	lsrs	r7, r2, #5
 80004e0:	3f01      	subs	r7, #1
 80004e2:	f007 071f 	and.w	r7, r7, #31
 80004e6:	e7d3      	b.n	8000490 <usb_ep_init_double+0xe0>
 80004e8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80004ec:	20000264 	andcs	r0, r0, r4, ror #4
 80004f0:	20000284 	andcs	r0, r0, r4, lsl #5
 80004f4:	20000000 	andcs	r0, r0, r0

080004f8 <USB_LP_CAN1_RX0_IRQHandler>:
//-----------------------------------------------------------------------
//--------- USB IRQ handler----------------------------------------------
//-----------------------------------------------------------------------
void USB_LP_IRQHandler(){
 80004f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(USB->ISTR & USB_ISTR_CTR){
 80004fc:	4c4a      	ldr	r4, [pc, #296]	; (8000628 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
 80004fe:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000502:	0419      	lsls	r1, r3, #16
 8000504:	d530      	bpl.n	8000568 <USB_LP_CAN1_RX0_IRQHandler+0x70>
    do{
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
        epfunc_out[epnum](epnum);
 8000506:	4f49      	ldr	r7, [pc, #292]	; (800062c <USB_LP_CAN1_RX0_IRQHandler+0x134>)
        ENDP_CTR_RX_CLR(epnum);
      }
      if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
        epfunc_in[epnum](epnum | 0x80);
 8000508:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8000634 <USB_LP_CAN1_RX0_IRQHandler+0x13c>
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 800050c:	f8b4 6044 	ldrh.w	r6, [r4, #68]	; 0x44
 8000510:	f006 060f 	and.w	r6, r6, #15
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 8000514:	00b5      	lsls	r5, r6, #2
 8000516:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800051a:	f505 45b8 	add.w	r5, r5, #23552	; 0x5c00
 800051e:	882b      	ldrh	r3, [r5, #0]
 8000520:	041a      	lsls	r2, r3, #16
 8000522:	d50b      	bpl.n	800053c <USB_LP_CAN1_RX0_IRQHandler+0x44>
        epfunc_out[epnum](epnum);
 8000524:	f857 3026 	ldr.w	r3, [r7, r6, lsl #2]
 8000528:	4630      	mov	r0, r6
 800052a:	4798      	blx	r3
        ENDP_CTR_RX_CLR(epnum);
 800052c:	882b      	ldrh	r3, [r5, #0]
 800052e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000532:	051b      	lsls	r3, r3, #20
 8000534:	0d1b      	lsrs	r3, r3, #20
 8000536:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800053a:	802b      	strh	r3, [r5, #0]
      if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 800053c:	882b      	ldrh	r3, [r5, #0]
 800053e:	061b      	lsls	r3, r3, #24
 8000540:	d50c      	bpl.n	800055c <USB_LP_CAN1_RX0_IRQHandler+0x64>
        epfunc_in[epnum](epnum | 0x80);
 8000542:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 8000546:	f046 0080 	orr.w	r0, r6, #128	; 0x80
 800054a:	4798      	blx	r3
        ENDP_CTR_TX_CLR(epnum);
 800054c:	882b      	ldrh	r3, [r5, #0]
 800054e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000552:	051b      	lsls	r3, r3, #20
 8000554:	0d1b      	lsrs	r3, r3, #20
 8000556:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800055a:	802b      	strh	r3, [r5, #0]
      }
    }while(USB->ISTR & USB_ISTR_CTR);
 800055c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000560:	041d      	lsls	r5, r3, #16
 8000562:	d4d3      	bmi.n	800050c <USB_LP_CAN1_RX0_IRQHandler+0x14>
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
  }
}
 8000564:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(USB->ISTR & USB_ISTR_SOF){
 8000568:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800056c:	0598      	lsls	r0, r3, #22
 800056e:	d506      	bpl.n	800057e <USB_LP_CAN1_RX0_IRQHandler+0x86>
    usb_class_sof();
 8000570:	f000 fbf0 	bl	8000d54 <usb_class_sof>
    USB->ISTR = (uint16_t)~USB_ISTR_SOF;
 8000574:	f64f 53ff 	movw	r3, #65023	; 0xfdff
 8000578:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
    return;
 800057c:	e7f2      	b.n	8000564 <USB_LP_CAN1_RX0_IRQHandler+0x6c>
  if(USB->ISTR & USB_ISTR_RESET){
 800057e:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8000582:	0559      	lsls	r1, r3, #21
 8000584:	d52c      	bpl.n	80005e0 <USB_LP_CAN1_RX0_IRQHandler+0xe8>
    usb_class_disconnect();
 8000586:	f7ff fe2b 	bl	80001e0 <usb_class_disconnect>
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 800058a:	f44f 431e 	mov.w	r3, #40448	; 0x9e00
    lastaddr = LASTADDR_DEFAULT;
 800058e:	2240      	movs	r2, #64	; 0x40
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000590:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    lastaddr = LASTADDR_DEFAULT;
 8000594:	4b26      	ldr	r3, [pc, #152]	; (8000630 <USB_LP_CAN1_RX0_IRQHandler+0x138>)
 8000596:	4925      	ldr	r1, [pc, #148]	; (800062c <USB_LP_CAN1_RX0_IRQHandler+0x134>)
 8000598:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 800059a:	2380      	movs	r3, #128	; 0x80
 800059c:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 80005a0:	2408      	movs	r4, #8
 80005a2:	4b24      	ldr	r3, [pc, #144]	; (8000634 <USB_LP_CAN1_RX0_IRQHandler+0x13c>)
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 80005a4:	4a24      	ldr	r2, [pc, #144]	; (8000638 <USB_LP_CAN1_RX0_IRQHandler+0x140>)
 80005a6:	3c01      	subs	r4, #1
 80005a8:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
 80005ac:	f841 2b04 	str.w	r2, [r1], #4
 80005b0:	f843 2b04 	str.w	r2, [r3], #4
 80005b4:	d1f7      	bne.n	80005a6 <USB_LP_CAN1_RX0_IRQHandler+0xae>
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80005b6:	f64f 32ff 	movw	r2, #64511	; 0xfbff
 80005ba:	4b1b      	ldr	r3, [pc, #108]	; (8000628 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80005bc:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80005be:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80005c2:	4620      	mov	r0, r4
 80005c4:	4b1d      	ldr	r3, [pc, #116]	; (800063c <USB_LP_CAN1_RX0_IRQHandler+0x144>)
 80005c6:	2208      	movs	r2, #8
 80005c8:	f7ff fe66 	bl	8000298 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 80005cc:	4b1c      	ldr	r3, [pc, #112]	; (8000640 <USB_LP_CAN1_RX0_IRQHandler+0x148>)
 80005ce:	2208      	movs	r2, #8
 80005d0:	4621      	mov	r1, r4
 80005d2:	2080      	movs	r0, #128	; 0x80
 80005d4:	f7ff fe60 	bl	8000298 <usb_ep_init>
    ep0_buf = NULL;
 80005d8:	4b1a      	ldr	r3, [pc, #104]	; (8000644 <USB_LP_CAN1_RX0_IRQHandler+0x14c>)
 80005da:	601c      	str	r4, [r3, #0]
    usb_class_init();
 80005dc:	f000 faf2 	bl	8000bc4 <usb_class_init>
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 80005e0:	4c11      	ldr	r4, [pc, #68]	; (8000628 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
 80005e2:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 80005e6:	051a      	lsls	r2, r3, #20
 80005e8:	d50b      	bpl.n	8000602 <USB_LP_CAN1_RX0_IRQHandler+0x10a>
    usb_class_disconnect();
 80005ea:	f7ff fdf9 	bl	80001e0 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 80005ee:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 80005f2:	f043 030c 	orr.w	r3, r3, #12
 80005f6:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 80005fa:	f24f 73ff 	movw	r3, #63487	; 0xf7ff
 80005fe:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 8000602:	4a09      	ldr	r2, [pc, #36]	; (8000628 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
 8000604:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8000608:	04db      	lsls	r3, r3, #19
 800060a:	d5ab      	bpl.n	8000564 <USB_LP_CAN1_RX0_IRQHandler+0x6c>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 800060c:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8000610:	f023 030c 	bic.w	r3, r3, #12
 8000614:	041b      	lsls	r3, r3, #16
 8000616:	0c1b      	lsrs	r3, r3, #16
 8000618:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 800061c:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8000620:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8000624:	e79e      	b.n	8000564 <USB_LP_CAN1_RX0_IRQHandler+0x6c>
 8000626:	bf00      	nop
 8000628:	40005c00 	andmi	r5, r0, r0, lsl #24
 800062c:	20000284 	andcs	r0, r0, r4, lsl #5
 8000630:	20000000 	andcs	r0, r0, r0
 8000634:	20000264 	andcs	r0, r0, r4, ror #4
 8000638:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800063c:	0800072b 	stmdaeq	r0, {r0, r1, r3, r5, r8, r9, sl}
 8000640:	0800069d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl}
 8000644:	20000024 	andcs	r0, r0, r4, lsr #32

08000648 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size){
 8000648:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 800064a:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 800064c:	00c4      	lsls	r4, r0, #3
 800064e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000652:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000656:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000658:	1c56      	adds	r6, r2, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800065a:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 800065e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
  uint16_t N2 = (size + 1) >> 1;
 8000662:	0876      	lsrs	r6, r6, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000664:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000666:	b2af      	uxth	r7, r5
 8000668:	42be      	cmp	r6, r7
 800066a:	d811      	bhi.n	8000690 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800066c:	0840      	lsrs	r0, r0, #1
 800066e:	0080      	lsls	r0, r0, #2
 8000670:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
  descr->count = size;
 8000674:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000676:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 800067a:	8803      	ldrh	r3, [r0, #0]
 800067c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000680:	051b      	lsls	r3, r3, #20
 8000682:	0d1b      	lsrs	r3, r3, #20
 8000684:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000688:	f083 03b0 	eor.w	r3, r3, #176	; 0xb0
 800068c:	8003      	strh	r3, [r0, #0]
}
 800068e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000690:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 8000694:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
 8000698:	3501      	adds	r5, #1
 800069a:	e7e4      	b.n	8000666 <_usb_ep_write+0x1e>

0800069c <ep0_in>:
static void ep0_in(uint8_t epnum){
 800069c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(ep0_buf == NULL)return;
 800069e:	4c0b      	ldr	r4, [pc, #44]	; (80006cc <ep0_in+0x30>)
 80006a0:	6825      	ldr	r5, [r4, #0]
 80006a2:	b195      	cbz	r5, 80006ca <ep0_in+0x2e>
  uint16_t left = ep0_count;
 80006a4:	88a7      	ldrh	r7, [r4, #4]

#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint16_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80006a6:	4629      	mov	r1, r5
 80006a8:	2f08      	cmp	r7, #8
 80006aa:	463e      	mov	r6, r7
 80006ac:	bf28      	it	cs
 80006ae:	2608      	movcs	r6, #8
 80006b0:	2000      	movs	r0, #0
 80006b2:	4632      	mov	r2, r6
 80006b4:	f7ff ffc8 	bl	8000648 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 80006b8:	2f07      	cmp	r7, #7
  ep0_count -= left;
 80006ba:	eba7 0306 	sub.w	r3, r7, r6
 80006be:	80a3      	strh	r3, [r4, #4]
    ep0_buf = NULL;
 80006c0:	bf93      	iteet	ls
 80006c2:	2300      	movls	r3, #0
  ep0_buf += left;
 80006c4:	19ad      	addhi	r5, r5, r6
 80006c6:	6025      	strhi	r5, [r4, #0]
    ep0_buf = NULL;
 80006c8:	6023      	strls	r3, [r4, #0]
}
 80006ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006cc:	20000024 	andcs	r0, r0, r4, lsr #32

080006d0 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 80006d0:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80006d2:	00c2      	lsls	r2, r0, #3
 80006d4:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80006d8:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 80006dc:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 80006de:	6850      	ldr	r0, [r2, #4]
 80006e0:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 80006e4:	b300      	cbz	r0, 8000728 <_usb_ep_read+0x58>
  int n = (sz + 1) >> 1;
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006e6:	6812      	ldr	r2, [r2, #0]
  int n = (sz + 1) >> 1;
 80006e8:	1c44      	adds	r4, r0, #1
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006ea:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
 80006ee:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
 80006f2:	0052      	lsls	r2, r2, #1
  int n = (sz + 1) >> 1;
 80006f4:	1064      	asrs	r4, r4, #1
 80006f6:	3902      	subs	r1, #2
 80006f8:	eb02 0484 	add.w	r4, r2, r4, lsl #2
  for(int i = 0; i < n; ++i, ++in)
    buf[i] = *(uint16_t*)in;
 80006fc:	f832 5b04 	ldrh.w	r5, [r2], #4
  for(int i = 0; i < n; ++i, ++in)
 8000700:	42a2      	cmp	r2, r4
    buf[i] = *(uint16_t*)in;
 8000702:	f821 5f02 	strh.w	r5, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 8000706:	d1f9      	bne.n	80006fc <_usb_ep_read+0x2c>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 8000708:	085b      	lsrs	r3, r3, #1
 800070a:	009b      	lsls	r3, r3, #2
 800070c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000710:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000714:	881a      	ldrh	r2, [r3, #0]
 8000716:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800071a:	0492      	lsls	r2, r2, #18
 800071c:	0c92      	lsrs	r2, r2, #18
 800071e:	f482 4230 	eor.w	r2, r2, #45056	; 0xb000
 8000722:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 8000726:	801a      	strh	r2, [r3, #0]
  return sz;
}
 8000728:	bd30      	pop	{r4, r5, pc}

0800072a <ep0_out>:
static void ep0_out(uint8_t epnum){
 800072a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 800072c:	4b46      	ldr	r3, [pc, #280]	; (8000848 <ep0_out+0x11e>)
 800072e:	4c47      	ldr	r4, [pc, #284]	; (800084c <ep0_out+0x122>)
 8000730:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 8000732:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8000736:	881b      	ldrh	r3, [r3, #0]
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000738:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 800073c:	f413 6600 	ands.w	r6, r3, #2048	; 0x800
 8000740:	d009      	beq.n	8000756 <ep0_out+0x2c>
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000742:	f994 3006 	ldrsb.w	r3, [r4, #6]
 8000746:	2b00      	cmp	r3, #0
 8000748:	da17      	bge.n	800077a <ep0_out+0x50>
      bytesread = 0;
 800074a:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800074c:	4940      	ldr	r1, [pc, #256]	; (8000850 <ep0_out+0x126>)
 800074e:	2001      	movs	r0, #1
 8000750:	f7ff ffbe 	bl	80006d0 <_usb_ep_read>
 8000754:	81e5      	strh	r5, [r4, #14]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000756:	79a2      	ldrb	r2, [r4, #6]
 8000758:	f002 037f 	and.w	r3, r2, #127	; 0x7f
  if(setup_packet.bmRequestType & 0x80){
 800075c:	0612      	lsls	r2, r2, #24
 800075e:	d53c      	bpl.n	80007da <ep0_out+0xb0>
    if( !setup )return; //какой-то костыль. Иначе вызывается два раза
 8000760:	b34e      	cbz	r6, 80007b6 <ep0_out+0x8c>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000762:	bb73      	cbnz	r3, 80007c2 <ep0_out+0x98>
      switch(setup_packet.bRequest){
 8000764:	79e0      	ldrb	r0, [r4, #7]
 8000766:	2806      	cmp	r0, #6
 8000768:	d00c      	beq.n	8000784 <ep0_out+0x5a>
 800076a:	2808      	cmp	r0, #8
 800076c:	d025      	beq.n	80007ba <ep0_out+0x90>
 800076e:	bb40      	cbnz	r0, 80007c2 <ep0_out+0x98>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000770:	2202      	movs	r2, #2
 8000772:	4938      	ldr	r1, [pc, #224]	; (8000854 <ep0_out+0x12a>)
 8000774:	f7ff ff68 	bl	8000648 <_usb_ep_write>
 8000778:	e01d      	b.n	80007b6 <ep0_out+0x8c>
      if( bytesread >= setup_packet.wLength ){
 800077a:	89a2      	ldrh	r2, [r4, #12]
 800077c:	89e3      	ldrh	r3, [r4, #14]
 800077e:	429a      	cmp	r2, r3
 8000780:	d8e9      	bhi.n	8000756 <ep0_out+0x2c>
 8000782:	e7e2      	b.n	800074a <ep0_out+0x20>
          const void *data = ZLPP;
 8000784:	2201      	movs	r2, #1
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000786:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 8000788:	9201      	str	r2, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 800078a:	8920      	ldrh	r0, [r4, #8]
 800078c:	f10d 0202 	add.w	r2, sp, #2
          uint16_t size = 0;
 8000790:	f8ad 3002 	strh.w	r3, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000794:	f000 f998 	bl	8000ac8 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000798:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800079c:	89a3      	ldrh	r3, [r4, #12]
  ep0_in(0x80);
 800079e:	2080      	movs	r0, #128	; 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80007a0:	429a      	cmp	r2, r3
 80007a2:	bf88      	it	hi
 80007a4:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 80007a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80007ac:	80a3      	strh	r3, [r4, #4]
  ep0_buf = (uint8_t*)buf;
 80007ae:	9b01      	ldr	r3, [sp, #4]
 80007b0:	6023      	str	r3, [r4, #0]
  ep0_in(0x80);
 80007b2:	f7ff ff73 	bl	800069c <ep0_in>
}
 80007b6:	b002      	add	sp, #8
 80007b8:	bd70      	pop	{r4, r5, r6, pc}
 80007ba:	2201      	movs	r2, #1
 80007bc:	4926      	ldr	r1, [pc, #152]	; (8000858 <ep0_out+0x12e>)
 80007be:	4618      	mov	r0, r3
 80007c0:	e7d8      	b.n	8000774 <ep0_out+0x4a>
    void *data = ZLPP;
 80007c2:	2301      	movs	r3, #1
 80007c4:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 80007c6:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 80007c8:	f10d 0202 	add.w	r2, sp, #2
 80007cc:	a901      	add	r1, sp, #4
 80007ce:	4820      	ldr	r0, [pc, #128]	; (8000850 <ep0_out+0x126>)
    uint16_t size = 0;
 80007d0:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 80007d4:	f000 f9c6 	bl	8000b64 <usb_class_ep0_in>
 80007d8:	e7de      	b.n	8000798 <ep0_out+0x6e>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80007da:	b9db      	cbnz	r3, 8000814 <ep0_out+0xea>
      if(setup_packet.bRequest == SET_ADDRESS){
 80007dc:	79e2      	ldrb	r2, [r4, #7]
 80007de:	2a05      	cmp	r2, #5
 80007e0:	d110      	bne.n	8000804 <ep0_out+0xda>
 80007e2:	461a      	mov	r2, r3
 80007e4:	4619      	mov	r1, r3
 80007e6:	4618      	mov	r0, r3
        uint8_t USB_Addr = setup_packet.wValue;
 80007e8:	7a24      	ldrb	r4, [r4, #8]
 80007ea:	f7ff ff2d 	bl	8000648 <_usb_ep_write>
        while( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID ){}
 80007ee:	4a1b      	ldr	r2, [pc, #108]	; (800085c <ep0_out+0x132>)
 80007f0:	8813      	ldrh	r3, [r2, #0]
 80007f2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80007f6:	2b30      	cmp	r3, #48	; 0x30
 80007f8:	d0fa      	beq.n	80007f0 <ep0_out+0xc6>
        USB->DADDR = USB_DADDR_EF | USB_Addr;
 80007fa:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80007fe:	f8a2 404c 	strh.w	r4, [r2, #76]	; 0x4c
        return;
 8000802:	e7d8      	b.n	80007b6 <ep0_out+0x8c>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 8000804:	2a09      	cmp	r2, #9
 8000806:	d105      	bne.n	8000814 <ep0_out+0xea>
        configuration = setup_packet.wValue;
 8000808:	8922      	ldrh	r2, [r4, #8]
 800080a:	7422      	strb	r2, [r4, #16]
 800080c:	2200      	movs	r2, #0
 800080e:	4611      	mov	r1, r2
 8000810:	4610      	mov	r0, r2
 8000812:	e7af      	b.n	8000774 <ep0_out+0x4a>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 8000814:	462a      	mov	r2, r5
 8000816:	89e1      	ldrh	r1, [r4, #14]
 8000818:	480d      	ldr	r0, [pc, #52]	; (8000850 <ep0_out+0x126>)
 800081a:	f000 f9ba 	bl	8000b92 <usb_class_ep0_out>
 800081e:	b950      	cbnz	r0, 8000836 <ep0_out+0x10c>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 8000820:	4a0e      	ldr	r2, [pc, #56]	; (800085c <ep0_out+0x132>)
 8000822:	8813      	ldrh	r3, [r2, #0]
 8000824:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000828:	049b      	lsls	r3, r3, #18
 800082a:	0c9b      	lsrs	r3, r3, #18
 800082c:	f483 4330 	eor.w	r3, r3, #45056	; 0xb000
 8000830:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 8000834:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 8000836:	89e3      	ldrh	r3, [r4, #14]
 8000838:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800083a:	89a3      	ldrh	r3, [r4, #12]
    bytesread += rxcount;
 800083c:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800083e:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 8000840:	81e5      	strh	r5, [r4, #14]
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000842:	d8b8      	bhi.n	80007b6 <ep0_out+0x8c>
 8000844:	e7e2      	b.n	800080c <ep0_out+0xe2>
 8000846:	bf00      	nop
 8000848:	40006000 	andmi	r6, r0, r0
 800084c:	20000024 	andcs	r0, r0, r4, lsr #32
 8000850:	2000002a 	andcs	r0, r0, sl, lsr #32
 8000854:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
 8000858:	20000034 	andcs	r0, r0, r4, lsr r0
 800085c:	40005c00 	andmi	r5, r0, r0, lsl #24

08000860 <mic_in_callback>:
  epnum &= 0x0F;
 8000860:	f000 000f 	and.w	r0, r0, #15
volatile uint16_t adc_val = 0;
volatile int16_t adc_buffer[ADC_SIZE];
volatile uint16_t adc_vref = 0;

volatile uint8_t adc_idx = 0;
static void mic_in_callback(uint8_t epnum){
 8000864:	b538      	push	{r3, r4, r5, lr}
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000866:	0083      	lsls	r3, r0, #2
  usb_ep_write_double( epnum, (void*)adc_buffer, 2*adc_idx );
 8000868:	4d0d      	ldr	r5, [pc, #52]	; (80008a0 <mic_in_callback+0x40>)
 800086a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800086e:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000872:	782a      	ldrb	r2, [r5, #0]
 8000874:	881c      	ldrh	r4, [r3, #0]
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000876:	8819      	ldrh	r1, [r3, #0]
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000878:	f3c4 3480 	ubfx	r4, r4, #14, #1
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 800087c:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
 8000880:	0509      	lsls	r1, r1, #20
 8000882:	0d09      	lsrs	r1, r1, #20
 8000884:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8000888:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800088c:	8019      	strh	r1, [r3, #0]
  _usb_ep_write(idx, buf, size);
 800088e:	0052      	lsls	r2, r2, #1
 8000890:	4904      	ldr	r1, [pc, #16]	; (80008a4 <mic_in_callback+0x44>)
 8000892:	eb04 0040 	add.w	r0, r4, r0, lsl #1
 8000896:	f7ff fed7 	bl	8000648 <_usb_ep_write>
  adc_idx = 0;
 800089a:	2300      	movs	r3, #0
 800089c:	702b      	strb	r3, [r5, #0]
};
 800089e:	bd38      	pop	{r3, r4, r5, pc}
 80008a0:	20000038 	andcs	r0, r0, r8, lsr r0
 80008a4:	200002a6 	andcs	r0, r0, r6, lsr #5

080008a8 <adc_outfilter>:

#define OFILTER_PWR	8
#define OFILTER_MLT	4
uint16_t adc_outfilter(uint16_t curval){
  static uint32_t filter = (2048<<(OFILTER_PWR+OFILTER_MLT));
  filter += (curval << OFILTER_MLT) - (filter >> OFILTER_PWR);
 80008a8:	4a04      	ldr	r2, [pc, #16]	; (80008bc <adc_outfilter+0x14>)
 80008aa:	6813      	ldr	r3, [r2, #0]
 80008ac:	eba3 2313 	sub.w	r3, r3, r3, lsr #8
 80008b0:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 80008b4:	6010      	str	r0, [r2, #0]
  return (filter>>OFILTER_PWR);
}
 80008b6:	f3c0 200f 	ubfx	r0, r0, #8, #16
 80008ba:	4770      	bx	lr
 80008bc:	20000004 	andcs	r0, r0, r4

080008c0 <midfilter>:
}

#define MIDFILTER_PWR	10
uint16_t midfilter(uint16_t curval){
  static uint32_t filter = (2048<<MIDFILTER_PWR);
  filter += curval - (filter>>MIDFILTER_PWR);
 80008c0:	4a04      	ldr	r2, [pc, #16]	; (80008d4 <midfilter+0x14>)
 80008c2:	6853      	ldr	r3, [r2, #4]
 80008c4:	eba3 2393 	sub.w	r3, r3, r3, lsr #10
 80008c8:	4418      	add	r0, r3
 80008ca:	6050      	str	r0, [r2, #4]
  return (filter >> MIDFILTER_PWR);
}
 80008cc:	f3c0 208f 	ubfx	r0, r0, #10, #16
 80008d0:	4770      	bx	lr
 80008d2:	bf00      	nop
 80008d4:	20000004 	andcs	r0, r0, r4

080008d8 <adc_infilter>:
#define INFILTER_PWR 0
uint16_t adc_infilter(uint16_t curval){
  static uint32_t filter = (2048<<INFILTER_PWR);
  filter += curval - (filter>>INFILTER_PWR);
  return (filter >> INFILTER_PWR);
}
 80008d8:	4770      	bx	lr

080008da <ADC1_2_IRQHandler>:

volatile uint8_t adc_timeH = 0;
volatile uint16_t adc_timeL = 0;
void ADC1_2_IRQHandler(){
 80008da:	b510      	push	{r4, lr}
  static uint8_t oversampl_cnt = 0;
  static uint16_t curval = 0;
  
  //Read ADC with oversampling
  if(oversampl_cnt == 0)curval = 0;
 80008dc:	4920      	ldr	r1, [pc, #128]	; (8000960 <ADC1_2_IRQHandler+0x86>)
 80008de:	784b      	ldrb	r3, [r1, #1]
 80008e0:	b903      	cbnz	r3, 80008e4 <ADC1_2_IRQHandler+0xa>
 80008e2:	804b      	strh	r3, [r1, #2]
  curval += ADC2->DR;
 80008e4:	4a1f      	ldr	r2, [pc, #124]	; (8000964 <ADC1_2_IRQHandler+0x8a>)
  oversampl_cnt++;
 80008e6:	3301      	adds	r3, #1
  curval += ADC2->DR;
 80008e8:	6cd4      	ldr	r4, [r2, #76]	; 0x4c
 80008ea:	884a      	ldrh	r2, [r1, #2]
  oversampl_cnt++;
 80008ec:	b2db      	uxtb	r3, r3
  curval += ADC2->DR;
 80008ee:	4414      	add	r4, r2
 80008f0:	b2a4      	uxth	r4, r4
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 80008f2:	2b03      	cmp	r3, #3
  curval += ADC2->DR;
 80008f4:	804c      	strh	r4, [r1, #2]
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 80008f6:	d801      	bhi.n	80008fc <ADC1_2_IRQHandler+0x22>
  oversampl_cnt++;
 80008f8:	704b      	strb	r3, [r1, #1]
  //adc_timeH - count of full conversions
  if(adc_timeH<255)adc_timeH++;
  adc_timeL = TIM2->CNT;

  ADC2->SR &=~ADC_SR_EOC;
}
 80008fa:	bd10      	pop	{r4, pc}
  oversampl_cnt = 0;
 80008fc:	2300      	movs	r3, #0
  curval /= OVERSAMPL_COUNT;
 80008fe:	08a4      	lsrs	r4, r4, #2
  uint16_t adc = adc_outfilter(curval);
 8000900:	4620      	mov	r0, r4
  oversampl_cnt = 0;
 8000902:	704b      	strb	r3, [r1, #1]
  curval /= OVERSAMPL_COUNT;
 8000904:	804c      	strh	r4, [r1, #2]
  uint16_t adc = adc_outfilter(curval);
 8000906:	f7ff ffcf 	bl	80008a8 <adc_outfilter>
  adc_val = (uint32_t)120*adc/adc_vref; //Vref=1.2V ; fixed-point 2 dec.digts frac (*100)
 800090a:	2378      	movs	r3, #120	; 0x78
 800090c:	4358      	muls	r0, r3
 800090e:	888a      	ldrh	r2, [r1, #4]
 8000910:	fbb0 f0f2 	udiv	r0, r0, r2
 8000914:	b280      	uxth	r0, r0
 8000916:	80c8      	strh	r0, [r1, #6]
  int32_t midval = midfilter(cval);
 8000918:	4620      	mov	r0, r4
 800091a:	f7ff ffd1 	bl	80008c0 <midfilter>
  if(adc_idx < ADC_SIZE){
 800091e:	780b      	ldrb	r3, [r1, #0]
 8000920:	2b2b      	cmp	r3, #43	; 0x2b
 8000922:	d80b      	bhi.n	800093c <ADC1_2_IRQHandler+0x62>
    adc_buffer[adc_idx] = midval;
 8000924:	780b      	ldrb	r3, [r1, #0]
  midval = (((int32_t)cval)) - midval;
 8000926:	1a24      	subs	r4, r4, r0
  midval <<= 3; //ADC resolution is 0-4095. midval=0-4095. Diff=-4095..+4095 (2**12); Output = -32768..+32767 (2**15) => Kampl=8
 8000928:	00e4      	lsls	r4, r4, #3
    adc_buffer[adc_idx] = midval;
 800092a:	4a0f      	ldr	r2, [pc, #60]	; (8000968 <ADC1_2_IRQHandler+0x8e>)
 800092c:	b2db      	uxtb	r3, r3
 800092e:	b224      	sxth	r4, r4
 8000930:	f822 4013 	strh.w	r4, [r2, r3, lsl #1]
    adc_idx++;
 8000934:	780b      	ldrb	r3, [r1, #0]
 8000936:	3301      	adds	r3, #1
 8000938:	b2db      	uxtb	r3, r3
 800093a:	700b      	strb	r3, [r1, #0]
  if(adc_timeH<255)adc_timeH++;
 800093c:	7a0b      	ldrb	r3, [r1, #8]
  ADC2->SR &=~ADC_SR_EOC;
 800093e:	4a09      	ldr	r2, [pc, #36]	; (8000964 <ADC1_2_IRQHandler+0x8a>)
  if(adc_timeH<255)adc_timeH++;
 8000940:	2bff      	cmp	r3, #255	; 0xff
 8000942:	bf1f      	itttt	ne
 8000944:	7a0b      	ldrbne	r3, [r1, #8]
 8000946:	3301      	addne	r3, #1
 8000948:	b2db      	uxtbne	r3, r3
 800094a:	720b      	strbne	r3, [r1, #8]
  adc_timeL = TIM2->CNT;
 800094c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000950:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000952:	b29b      	uxth	r3, r3
 8000954:	814b      	strh	r3, [r1, #10]
  ADC2->SR &=~ADC_SR_EOC;
 8000956:	6813      	ldr	r3, [r2, #0]
 8000958:	f023 0302 	bic.w	r3, r3, #2
 800095c:	6013      	str	r3, [r2, #0]
 800095e:	e7cc      	b.n	80008fa <ADC1_2_IRQHandler+0x20>
 8000960:	20000038 	andcs	r0, r0, r8, lsr r0
 8000964:	40012800 	andmi	r2, r1, r0, lsl #16
 8000968:	200002a6 	andcs	r0, r0, r6, lsr #5

0800096c <mic_sof>:

void mic_sof(){
  if(adc_timeH > ADC_SIZE){
 800096c:	4a17      	ldr	r2, [pc, #92]	; (80009cc <mic_sof+0x60>)
 800096e:	7a13      	ldrb	r3, [r2, #8]
 8000970:	2b2c      	cmp	r3, #44	; 0x2c
 8000972:	d909      	bls.n	8000988 <mic_sof+0x1c>
    if(TIM2->ARR < TIM2_ARR_MAX) TIM2->ARR++;
 8000974:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000978:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800097a:	f5b1 7f4c 	cmp.w	r1, #816	; 0x330
 800097e:	d21a      	bcs.n	80009b6 <mic_sof+0x4a>
  }else if(adc_timeH < ADC_SIZE){
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
  }else{
    if(adc_timeL > (TIM2->ARR/2)){
      TIM2->ARR++;
 8000980:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000982:	3101      	adds	r1, #1
    }else if(adc_timeL < (TIM2->ARR*3/4)){
      TIM2->ARR--;
 8000984:	62d9      	str	r1, [r3, #44]	; 0x2c
 8000986:	e016      	b.n	80009b6 <mic_sof+0x4a>
  }else if(adc_timeH < ADC_SIZE){
 8000988:	7a13      	ldrb	r3, [r2, #8]
 800098a:	2b2b      	cmp	r3, #43	; 0x2b
 800098c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000990:	d805      	bhi.n	800099e <mic_sof+0x32>
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
 8000992:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000994:	2933      	cmp	r1, #51	; 0x33
 8000996:	d90e      	bls.n	80009b6 <mic_sof+0x4a>
      TIM2->ARR--;
 8000998:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800099a:	3901      	subs	r1, #1
 800099c:	e7f2      	b.n	8000984 <mic_sof+0x18>
    if(adc_timeL > (TIM2->ARR/2)){
 800099e:	8951      	ldrh	r1, [r2, #10]
 80009a0:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80009a2:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 80009a6:	d8eb      	bhi.n	8000980 <mic_sof+0x14>
    }else if(adc_timeL < (TIM2->ARR*3/4)){
 80009a8:	8950      	ldrh	r0, [r2, #10]
 80009aa:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80009ac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80009b0:	ebb0 0f91 	cmp.w	r0, r1, lsr #2
 80009b4:	d3f0      	bcc.n	8000998 <mic_sof+0x2c>
    }
  }
  TIM2->CNT = 0;
 80009b6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80009ba:	2000      	movs	r0, #0
 80009bc:	6258      	str	r0, [r3, #36]	; 0x24
  TIM2->CR1 |= TIM_CR1_URS;
 80009be:	6819      	ldr	r1, [r3, #0]
 80009c0:	f041 0104 	orr.w	r1, r1, #4
 80009c4:	6019      	str	r1, [r3, #0]
  adc_timeH = 0;
 80009c6:	7210      	strb	r0, [r2, #8]
}
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop
 80009cc:	20000038 	andcs	r0, r0, r8, lsr r0

080009d0 <hid_ep0_in>:
    USAGE( 0 ),
    FEATURE_HID16( HID_DATA |  HID_VAR | HID_ABS | HID_BUF ),
  )
};

char hid_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 80009d0:	b510      	push	{r4, lr}
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 80009d2:	7803      	ldrb	r3, [r0, #0]
 80009d4:	2b81      	cmp	r3, #129	; 0x81
 80009d6:	d10c      	bne.n	80009f2 <hid_ep0_in+0x22>
    if( req->bRequest == GET_DESCRIPTOR ){
 80009d8:	7843      	ldrb	r3, [r0, #1]
 80009da:	2b06      	cmp	r3, #6
 80009dc:	d117      	bne.n	8000a0e <hid_ep0_in+0x3e>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 80009de:	8843      	ldrh	r3, [r0, #2]
 80009e0:	f5b3 5f08 	cmp.w	r3, #8704	; 0x2200
 80009e4:	d113      	bne.n	8000a0e <hid_ep0_in+0x3e>
        *data = (void**)&USB_HIDDescriptor;
 80009e6:	4b0b      	ldr	r3, [pc, #44]	; (8000a14 <hid_ep0_in+0x44>)
        *size = sizeof(USB_HIDDescriptor);
        return 1;
 80009e8:	2001      	movs	r0, #1
        *data = (void**)&USB_HIDDescriptor;
 80009ea:	600b      	str	r3, [r1, #0]
        *size = sizeof(USB_HIDDescriptor);
 80009ec:	2315      	movs	r3, #21
 80009ee:	8013      	strh	r3, [r2, #0]
      *size = sizeof(hid_data_t);
      return 1;
    }
  }
  return 0;
}
 80009f0:	bd10      	pop	{r4, pc}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE | 0x80) ){
 80009f2:	2ba1      	cmp	r3, #161	; 0xa1
 80009f4:	d10b      	bne.n	8000a0e <hid_ep0_in+0x3e>
    if( req->bRequest == HIDREQ_GET_REPORT ){
 80009f6:	7840      	ldrb	r0, [r0, #1]
 80009f8:	2801      	cmp	r0, #1
 80009fa:	d108      	bne.n	8000a0e <hid_ep0_in+0x3e>
      resdata.data = adc_val;
 80009fc:	4b06      	ldr	r3, [pc, #24]	; (8000a18 <hid_ep0_in+0x48>)
 80009fe:	88dc      	ldrh	r4, [r3, #6]
 8000a00:	b2a4      	uxth	r4, r4
 8000a02:	f823 4f0c 	strh.w	r4, [r3, #12]!
      *data = (void*)&resdata;
 8000a06:	600b      	str	r3, [r1, #0]
      *size = sizeof(hid_data_t);
 8000a08:	2302      	movs	r3, #2
 8000a0a:	8013      	strh	r3, [r2, #0]
      return 1;
 8000a0c:	e7f0      	b.n	80009f0 <hid_ep0_in+0x20>
  return 0;
 8000a0e:	2000      	movs	r0, #0
 8000a10:	e7ee      	b.n	80009f0 <hid_ep0_in+0x20>
 8000a12:	bf00      	nop
 8000a14:	08001626 	stmdaeq	r0, {r1, r2, r5, r9, sl, ip}
 8000a18:	20000038 	andcs	r0, r0, r8, lsr r0

08000a1c <hid_ep0_out>:

char hid_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000a1c:	b510      	push	{r4, lr}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000a1e:	7803      	ldrb	r3, [r0, #0]
 8000a20:	2b21      	cmp	r3, #33	; 0x21
 8000a22:	d126      	bne.n	8000a72 <hid_ep0_out+0x56>
    if( req->bRequest == HIDREQ_SET_REPORT ){
 8000a24:	7843      	ldrb	r3, [r0, #1]
 8000a26:	2b09      	cmp	r3, #9
 8000a28:	d123      	bne.n	8000a72 <hid_ep0_out+0x56>
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000a2a:	b302      	cbz	r2, 8000a6e <hid_ep0_out+0x52>
      //анализом запроса не заморачиваемя. Считаем, что ничего кроме нужного не придет
      if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000a2c:	2a02      	cmp	r2, #2
 8000a2e:	d120      	bne.n	8000a72 <hid_ep0_out+0x56>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000a30:	4c11      	ldr	r4, [pc, #68]	; (8000a78 <hid_ep0_out+0x5c>)
 8000a32:	2001      	movs	r0, #1
 8000a34:	4621      	mov	r1, r4
 8000a36:	f7ff fe4b 	bl	80006d0 <_usb_ep_read>
      usb_ep_read(0, (void*)&hid_data);
      
      //PA0-PA7 + PB8-PB15 = hid_data
      uint16_t temp = GPIOA->ODR;
 8000a3a:	4910      	ldr	r1, [pc, #64]	; (8000a7c <hid_ep0_out+0x60>)
 8000a3c:	68cb      	ldr	r3, [r1, #12]
      temp = (temp & 0xFF00) | (hid_data.data & 0x00FF);
 8000a3e:	8822      	ldrh	r2, [r4, #0]
 8000a40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8000a44:	b2d2      	uxtb	r2, r2
      GPIOA->ODR = temp;
 8000a46:	4313      	orrs	r3, r2
      
      temp = GPIOB->ODR;
 8000a48:	4a0d      	ldr	r2, [pc, #52]	; (8000a80 <hid_ep0_out+0x64>)
      GPIOA->ODR = temp;
 8000a4a:	60cb      	str	r3, [r1, #12]
      temp = GPIOB->ODR;
 8000a4c:	68d3      	ldr	r3, [r2, #12]
      temp = (temp & 0x00FF) | (hid_data.data & 0xFF00);
 8000a4e:	8821      	ldrh	r1, [r4, #0]
 8000a50:	b2db      	uxtb	r3, r3
 8000a52:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
      GPIOB->ODR = temp;
 8000a56:	430b      	orrs	r3, r1
 8000a58:	60d3      	str	r3, [r2, #12]
      
      GPO_T( YLED );
 8000a5a:	68d3      	ldr	r3, [r2, #12]
 8000a5c:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 8000a60:	60d3      	str	r3, [r2, #12]
#ifndef _SYSTICK_H_
#define _SYSTICK_H_

#include <inttypes.h>
extern volatile uint32_t systick_internal;
inline uint32_t systick_ms(){return systick_internal;}
 8000a62:	4b08      	ldr	r3, [pc, #32]	; (8000a84 <hid_ep0_out+0x68>)
      hid_timeout = systick_ms() + HID_TIMEOUT_MS;
 8000a64:	4a08      	ldr	r2, [pc, #32]	; (8000a88 <hid_ep0_out+0x6c>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000a6c:	6113      	str	r3, [r2, #16]
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000a6e:	2001      	movs	r0, #1
      
      return 1;
    }
  }
  return 0;
}
 8000a70:	bd10      	pop	{r4, pc}
  return 0;
 8000a72:	2000      	movs	r0, #0
 8000a74:	e7fc      	b.n	8000a70 <hid_ep0_out+0x54>
 8000a76:	bf00      	nop
 8000a78:	200002a4 	andcs	r0, r0, r4, lsr #5
 8000a7c:	40010800 	andmi	r0, r1, r0, lsl #16
 8000a80:	40010c00 	andmi	r0, r1, r0, lsl #24
 8000a84:	20000050 	andcs	r0, r0, r0, asr r0
 8000a88:	20000038 	andcs	r0, r0, r8, lsr r0

08000a8c <hid_init>:

void hid_init(){
  //PA0-PA7 = GPIO_PP50
  GPIOA->CRL = GPIO_PP50 * 0x11111111;
 8000a8c:	f04f 3333 	mov.w	r3, #858993459	; 0x33333333
 8000a90:	4a02      	ldr	r2, [pc, #8]	; (8000a9c <hid_init+0x10>)
 8000a92:	6013      	str	r3, [r2, #0]
  //PB8-PB15 = GPIO_PP50
  GPIOB->CRH = GPIO_PP50 * 0x11111111;
 8000a94:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
}
 8000a98:	4770      	bx	lr
 8000a9a:	bf00      	nop
 8000a9c:	40010800 	andmi	r0, r1, r0, lsl #16

08000aa0 <hid_poll>:
 8000aa0:	4b06      	ldr	r3, [pc, #24]	; (8000abc <hid_poll+0x1c>)
 8000aa2:	681a      	ldr	r2, [r3, #0]

void hid_poll(){
  if(systick_ms() > hid_timeout){
 8000aa4:	4b06      	ldr	r3, [pc, #24]	; (8000ac0 <hid_poll+0x20>)
 8000aa6:	6919      	ldr	r1, [r3, #16]
 8000aa8:	4291      	cmp	r1, r2
 8000aaa:	d206      	bcs.n	8000aba <hid_poll+0x1a>
    hid_timeout = 0xFFFFFFFF;
 8000aac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000ab0:	611a      	str	r2, [r3, #16]
    GPO_OFF(YLED);
 8000ab2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000ab6:	4b03      	ldr	r3, [pc, #12]	; (8000ac4 <hid_poll+0x24>)
 8000ab8:	611a      	str	r2, [r3, #16]
  }
}
 8000aba:	4770      	bx	lr
 8000abc:	20000050 	andcs	r0, r0, r0, asr r0
 8000ac0:	20000038 	andcs	r0, r0, r8, lsr r0
 8000ac4:	40010c00 	andmi	r0, r1, r0, lsl #24

08000ac8 <usb_class_get_std_descr>:
USB_STRING(USB_String_PROGR, u"STFLASH");
USB_STRING(USB_String_LOG, u"LOG");


void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000ac8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8000acc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000ad0:	d010      	beq.n	8000af4 <usb_class_get_std_descr+0x2c>
 8000ad2:	d803      	bhi.n	8000adc <usb_class_get_std_descr+0x14>
 8000ad4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000ad8:	d007      	beq.n	8000aea <usb_class_get_std_descr+0x22>
 8000ada:	4770      	bx	lr
 8000adc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000ae0:	d011      	beq.n	8000b06 <usb_class_get_std_descr+0x3e>
 8000ae2:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000ae6:	d00a      	beq.n	8000afe <usb_class_get_std_descr+0x36>
 8000ae8:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 8000aea:	4b14      	ldr	r3, [pc, #80]	; (8000b3c <usb_class_get_std_descr+0x74>)
 8000aec:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 8000aee:	2312      	movs	r3, #18
          *data = &USB_String_LOG;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000af0:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 8000af2:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000af4:	4b12      	ldr	r3, [pc, #72]	; (8000b40 <usb_class_get_std_descr+0x78>)
 8000af6:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000af8:	f44f 73a2 	mov.w	r3, #324	; 0x144
 8000afc:	e7f8      	b.n	8000af0 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000afe:	4b11      	ldr	r3, [pc, #68]	; (8000b44 <usb_class_get_std_descr+0x7c>)
 8000b00:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000b02:	230a      	movs	r3, #10
 8000b04:	e7f4      	b.n	8000af0 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000b06:	b2c0      	uxtb	r0, r0
 8000b08:	2806      	cmp	r0, #6
 8000b0a:	d8f2      	bhi.n	8000af2 <usb_class_get_std_descr+0x2a>
 8000b0c:	e8df f000 	tbb	[pc, r0]
 8000b10:	0d0b0904 	vstreq.16	s0, [fp, #-8]	; <UNPREDICTABLE>
 8000b14:	0013110f 	andseq	r1, r3, pc, lsl #2
          *data = &USB_StringLangDescriptor;
 8000b18:	4b0b      	ldr	r3, [pc, #44]	; (8000b48 <usb_class_get_std_descr+0x80>)
          *data = &USB_String_LOG;
 8000b1a:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000b1c:	680b      	ldr	r3, [r1, #0]
 8000b1e:	781b      	ldrb	r3, [r3, #0]
 8000b20:	e7e6      	b.n	8000af0 <usb_class_get_std_descr+0x28>
          *data = &USB_StringManufacturingDescriptor;
 8000b22:	4b0a      	ldr	r3, [pc, #40]	; (8000b4c <usb_class_get_std_descr+0x84>)
 8000b24:	e7f9      	b.n	8000b1a <usb_class_get_std_descr+0x52>
          *data = &USB_StringProdDescriptor;
 8000b26:	4b0a      	ldr	r3, [pc, #40]	; (8000b50 <usb_class_get_std_descr+0x88>)
 8000b28:	e7f7      	b.n	8000b1a <usb_class_get_std_descr+0x52>
          *data = &USB_StringSerialDescriptor;
 8000b2a:	4b0a      	ldr	r3, [pc, #40]	; (8000b54 <usb_class_get_std_descr+0x8c>)
 8000b2c:	e7f5      	b.n	8000b1a <usb_class_get_std_descr+0x52>
          *data = &USB_String_TTY;
 8000b2e:	4b0a      	ldr	r3, [pc, #40]	; (8000b58 <usb_class_get_std_descr+0x90>)
 8000b30:	e7f3      	b.n	8000b1a <usb_class_get_std_descr+0x52>
          *data = &USB_String_PROGR;
 8000b32:	4b0a      	ldr	r3, [pc, #40]	; (8000b5c <usb_class_get_std_descr+0x94>)
 8000b34:	e7f1      	b.n	8000b1a <usb_class_get_std_descr+0x52>
          *data = &USB_String_LOG;
 8000b36:	4b0a      	ldr	r3, [pc, #40]	; (8000b60 <usb_class_get_std_descr+0x98>)
 8000b38:	e7ef      	b.n	8000b1a <usb_class_get_std_descr+0x52>
 8000b3a:	bf00      	nop
 8000b3c:	0800163b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r9, sl, ip}
 8000b40:	0800164d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, ip}
 8000b44:	08001791 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, ip}
 8000b48:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 8000b4c:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 8000b50:	080017b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, ip}
 8000b54:	080017e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, ip}
 8000b58:	080017e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, ip}
 8000b5c:	080017ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, ip}
 8000b60:	080017fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip}

08000b64 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000b64:	b570      	push	{r4, r5, r6, lr}
 8000b66:	4604      	mov	r4, r0
 8000b68:	460d      	mov	r5, r1
 8000b6a:	4616      	mov	r6, r2
  if( hid_ep0_in( req, data, size ) )return 1;
 8000b6c:	f7ff ff30 	bl	80009d0 <hid_ep0_in>
 8000b70:	b108      	cbz	r0, 8000b76 <usb_class_ep0_in+0x12>
 8000b72:	2001      	movs	r0, #1
  if( mic_ep0_in( req, data, size ) )return 1;
  if( programmer_ep0_in( req, data, size ) )return 1;
  if( usb_log_ep0_in( req, data, size ) )return 1;
  return 0;
}
 8000b74:	bd70      	pop	{r4, r5, r6, pc}
  if( programmer_ep0_in( req, data, size ) )return 1;
 8000b76:	4620      	mov	r0, r4
 8000b78:	f000 f9b8 	bl	8000eec <programmer_ep0_in>
 8000b7c:	2800      	cmp	r0, #0
 8000b7e:	d1f8      	bne.n	8000b72 <usb_class_ep0_in+0xe>
  if( usb_log_ep0_in( req, data, size ) )return 1;
 8000b80:	4632      	mov	r2, r6
 8000b82:	4629      	mov	r1, r5
 8000b84:	4620      	mov	r0, r4
 8000b86:	f000 fc17 	bl	80013b8 <usb_log_ep0_in>
  if( hid_ep0_in( req, data, size ) )return 1;
 8000b8a:	3000      	adds	r0, #0
 8000b8c:	bf18      	it	ne
 8000b8e:	2001      	movne	r0, #1
 8000b90:	e7f0      	b.n	8000b74 <usb_class_ep0_in+0x10>

08000b92 <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000b92:	b570      	push	{r4, r5, r6, lr}
 8000b94:	4604      	mov	r4, r0
 8000b96:	460d      	mov	r5, r1
 8000b98:	4616      	mov	r6, r2
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000b9a:	f7ff ff3f 	bl	8000a1c <hid_ep0_out>
 8000b9e:	b108      	cbz	r0, 8000ba4 <usb_class_ep0_out+0x12>
 8000ba0:	2001      	movs	r0, #1
  if( mic_ep0_out( req, offset, rx_size ) )return 1;
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
  if( usb_log_ep0_out( req, offset, rx_size ) )return 1;
  return 0;
}
 8000ba2:	bd70      	pop	{r4, r5, r6, pc}
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
 8000ba4:	4632      	mov	r2, r6
 8000ba6:	4629      	mov	r1, r5
 8000ba8:	4620      	mov	r0, r4
 8000baa:	f000 f9f1 	bl	8000f90 <programmer_ep0_out>
 8000bae:	2800      	cmp	r0, #0
 8000bb0:	d1f6      	bne.n	8000ba0 <usb_class_ep0_out+0xe>
  if( usb_log_ep0_out( req, offset, rx_size ) )return 1;
 8000bb2:	4632      	mov	r2, r6
 8000bb4:	4629      	mov	r1, r5
 8000bb6:	4620      	mov	r0, r4
 8000bb8:	f000 fc14 	bl	80013e4 <usb_log_ep0_out>
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000bbc:	3000      	adds	r0, #0
 8000bbe:	bf18      	it	ne
 8000bc0:	2001      	movne	r0, #1
 8000bc2:	e7ee      	b.n	8000ba2 <usb_class_ep0_out+0x10>

08000bc4 <usb_class_init>:

void usb_class_init(){
 8000bc4:	b508      	push	{r3, lr}
  hid_init();
 8000bc6:	f7ff ff61 	bl	8000a8c <hid_init>
  usb_ep_init_double( ENDP_MIC | 0x80, USB_ENDP_ISO, ENDP_MIC_SIZE, mic_in_callback );
 8000bca:	4b49      	ldr	r3, [pc, #292]	; (8000cf0 <usb_class_init+0x12c>)
 8000bcc:	2264      	movs	r2, #100	; 0x64
 8000bce:	2101      	movs	r1, #1
 8000bd0:	2087      	movs	r0, #135	; 0x87
 8000bd2:	f7ff fbed 	bl	80003b0 <usb_ep_init_double>
  GPIO_config(ADC_IN);
 8000bd6:	4a47      	ldr	r2, [pc, #284]	; (8000cf4 <usb_class_init+0x130>)
  ADC_init( ADC_2 );
 8000bd8:	4947      	ldr	r1, [pc, #284]	; (8000cf8 <usb_class_init+0x134>)
  GPIO_config(ADC_IN);
 8000bda:	6813      	ldr	r3, [r2, #0]
 8000bdc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000be0:	6013      	str	r3, [r2, #0]
  ADC_init( ADC_2 );
 8000be2:	4b46      	ldr	r3, [pc, #280]	; (8000cfc <usb_class_init+0x138>)
 8000be4:	699a      	ldr	r2, [r3, #24]
 8000be6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000bea:	619a      	str	r2, [r3, #24]
 8000bec:	688a      	ldr	r2, [r1, #8]
 8000bee:	f042 0201 	orr.w	r2, r2, #1
 8000bf2:	608a      	str	r2, [r1, #8]
 8000bf4:	685a      	ldr	r2, [r3, #4]
 8000bf6:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8000bfa:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8000bfe:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8000c02:	605a      	str	r2, [r3, #4]
 8000c04:	2214      	movs	r2, #20
 8000c06:	bf00      	nop
 8000c08:	3a01      	subs	r2, #1
 8000c0a:	d1fc      	bne.n	8000c06 <usb_class_init+0x42>
 8000c0c:	688a      	ldr	r2, [r1, #8]
 8000c0e:	f042 0204 	orr.w	r2, r2, #4
 8000c12:	608a      	str	r2, [r1, #8]
 8000c14:	4a38      	ldr	r2, [pc, #224]	; (8000cf8 <usb_class_init+0x134>)
 8000c16:	6891      	ldr	r1, [r2, #8]
 8000c18:	0749      	lsls	r1, r1, #29
 8000c1a:	d4fc      	bmi.n	8000c16 <usb_class_init+0x52>
  ADC_SAMPLING_TIME( ADC_2, marg3(ADC_IN), ADC_SAMPL_TIME_2 );
 8000c1c:	6911      	ldr	r1, [r2, #16]
 8000c1e:	f021 5160 	bic.w	r1, r1, #939524096	; 0x38000000
 8000c22:	6111      	str	r1, [r2, #16]
  ADC_SEQ_SET( ADC_2, 1, marg3(ADC_IN) );
 8000c24:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8000c26:	f021 011f 	bic.w	r1, r1, #31
 8000c2a:	f041 0109 	orr.w	r1, r1, #9
 8000c2e:	6351      	str	r1, [r2, #52]	; 0x34
  ADC_SEQ_CNT( ADC_2, 1 );
 8000c30:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8000c32:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
 8000c36:	62d1      	str	r1, [r2, #44]	; 0x2c
  ADC_Trigger( ADC_2, ADC_TRIG_TIM2_2 );
 8000c38:	6891      	ldr	r1, [r2, #8]
 8000c3a:	f421 11f0 	bic.w	r1, r1, #1966080	; 0x1e0000
 8000c3e:	f441 11b0 	orr.w	r1, r1, #1441792	; 0x160000
 8000c42:	6091      	str	r1, [r2, #8]
  ADC2->CR1 |= ADC_CR1_EOCIE;
 8000c44:	6851      	ldr	r1, [r2, #4]
 8000c46:	f041 0120 	orr.w	r1, r1, #32
 8000c4a:	6051      	str	r1, [r2, #4]
 8000c4c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8000c50:	4a2b      	ldr	r2, [pc, #172]	; (8000d00 <usb_class_init+0x13c>)
 8000c52:	6011      	str	r1, [r2, #0]
  ADC_init( ADC_1 );
 8000c54:	699a      	ldr	r2, [r3, #24]
 8000c56:	492b      	ldr	r1, [pc, #172]	; (8000d04 <usb_class_init+0x140>)
 8000c58:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000c5c:	619a      	str	r2, [r3, #24]
 8000c5e:	688a      	ldr	r2, [r1, #8]
 8000c60:	f042 0201 	orr.w	r2, r2, #1
 8000c64:	608a      	str	r2, [r1, #8]
 8000c66:	685a      	ldr	r2, [r3, #4]
 8000c68:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8000c6c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8000c70:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8000c74:	605a      	str	r2, [r3, #4]
 8000c76:	2214      	movs	r2, #20
 8000c78:	bf00      	nop
 8000c7a:	3a01      	subs	r2, #1
 8000c7c:	d1fc      	bne.n	8000c78 <usb_class_init+0xb4>
 8000c7e:	688a      	ldr	r2, [r1, #8]
 8000c80:	f042 0204 	orr.w	r2, r2, #4
 8000c84:	608a      	str	r2, [r1, #8]
 8000c86:	4a1f      	ldr	r2, [pc, #124]	; (8000d04 <usb_class_init+0x140>)
 8000c88:	6890      	ldr	r0, [r2, #8]
 8000c8a:	f010 0004 	ands.w	r0, r0, #4
 8000c8e:	d1fb      	bne.n	8000c88 <usb_class_init+0xc4>
  ADC1->CR2 |= ADC_CR2_TSVREFE;
 8000c90:	6891      	ldr	r1, [r2, #8]
 8000c92:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000c96:	6091      	str	r1, [r2, #8]
  ADC_SAMPLING_TIME( ADC_1, ADC_CH_VREF, ADC_SAMPL_TIME_56 );
 8000c98:	68d1      	ldr	r1, [r2, #12]
 8000c9a:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
 8000c9e:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
 8000ca2:	60d1      	str	r1, [r2, #12]
  ADC_SEQ_SET( ADC_1, 1, ADC_CH_VREF );
 8000ca4:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8000ca6:	f021 011f 	bic.w	r1, r1, #31
 8000caa:	f041 0111 	orr.w	r1, r1, #17
 8000cae:	6351      	str	r1, [r2, #52]	; 0x34
  ADC_SEQ_CNT( ADC_1, 1 );
 8000cb0:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8000cb2:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
 8000cb6:	62d1      	str	r1, [r2, #44]	; 0x2c
  RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000cb8:	69da      	ldr	r2, [r3, #28]
 8000cba:	f042 0201 	orr.w	r2, r2, #1
 8000cbe:	61da      	str	r2, [r3, #28]
  TIM2->PSC = 0;
 8000cc0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  TIM2->ARR = TIM2_ARR_AVG;
 8000cc4:	22cc      	movs	r2, #204	; 0xcc
  TIM2->PSC = 0;
 8000cc6:	6298      	str	r0, [r3, #40]	; 0x28
  TIM2->ARR = TIM2_ARR_AVG;
 8000cc8:	62da      	str	r2, [r3, #44]	; 0x2c
  TIM2->CR1 |= TIM_CR1_ARPE;
 8000cca:	681a      	ldr	r2, [r3, #0]
 8000ccc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000cd0:	601a      	str	r2, [r3, #0]
  TIM2->CCMR1 = (0b011 << TIM_CCMR1_OC2M_Pos) | TIM_CCMR1_OC2PE;
 8000cd2:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8000cd6:	619a      	str	r2, [r3, #24]
  TIM2->CCER = TIM_CCER_CC2E;
 8000cd8:	2210      	movs	r2, #16
 8000cda:	621a      	str	r2, [r3, #32]
  TIM2->CR1 |= TIM_CR1_CEN;
 8000cdc:	681a      	ldr	r2, [r3, #0]
 8000cde:	f042 0201 	orr.w	r2, r2, #1
 8000ce2:	601a      	str	r2, [r3, #0]
  mic_init();
  programmer_init();
 8000ce4:	f000 f99a 	bl	800101c <programmer_init>
  usb_log_init();
}
 8000ce8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_log_init();
 8000cec:	f000 bb92 	b.w	8001414 <usb_log_init>
 8000cf0:	08000861 	stmdaeq	r0, {r0, r5, r6, fp}
 8000cf4:	40010c00 	andmi	r0, r1, r0, lsl #24
 8000cf8:	40012800 	andmi	r2, r1, r0, lsl #16
 8000cfc:	40021000 	andmi	r1, r2, r0
 8000d00:	e000e100 	and	lr, r0, r0, lsl #2
 8000d04:	40012400 	andmi	r2, r1, r0, lsl #8

08000d08 <usb_class_poll>:

void usb_class_poll(){
 8000d08:	b508      	push	{r3, lr}
  hid_poll();
 8000d0a:	f7ff fec9 	bl	8000aa0 <hid_poll>
 8000d0e:	4b0e      	ldr	r3, [pc, #56]	; (8000d48 <usb_class_poll+0x40>)
  if(systick_ms() < ntime_ms)return;
 8000d10:	490e      	ldr	r1, [pc, #56]	; (8000d4c <usb_class_poll+0x44>)
 8000d12:	6818      	ldr	r0, [r3, #0]
 8000d14:	694a      	ldr	r2, [r1, #20]
 8000d16:	4290      	cmp	r0, r2
 8000d18:	d30f      	bcc.n	8000d3a <usb_class_poll+0x32>
 8000d1a:	681b      	ldr	r3, [r3, #0]
  if(ADC1->SR & ADC_SR_EOC){
 8000d1c:	4a0c      	ldr	r2, [pc, #48]	; (8000d50 <usb_class_poll+0x48>)
  ntime_ms = systick_ms() + 1000;
 8000d1e:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000d22:	614b      	str	r3, [r1, #20]
  if(ADC1->SR & ADC_SR_EOC){
 8000d24:	6813      	ldr	r3, [r2, #0]
 8000d26:	079b      	lsls	r3, r3, #30
 8000d28:	d507      	bpl.n	8000d3a <usb_class_poll+0x32>
    adc_vref = ADC1->DR << OFILTER_MLT;
 8000d2a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8000d2c:	011b      	lsls	r3, r3, #4
 8000d2e:	b29b      	uxth	r3, r3
 8000d30:	808b      	strh	r3, [r1, #4]
    ADC1->CR2 |= ADC_CR2_ADON;
 8000d32:	6893      	ldr	r3, [r2, #8]
 8000d34:	f043 0301 	orr.w	r3, r3, #1
 8000d38:	6093      	str	r3, [r2, #8]
  mic_poll();
  programmer_poll();
 8000d3a:	f000 fa2f 	bl	800119c <programmer_poll>
  usb_log_poll();
}
 8000d3e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_log_poll();
 8000d42:	f000 bbd7 	b.w	80014f4 <usb_log_poll>
 8000d46:	bf00      	nop
 8000d48:	20000050 	andcs	r0, r0, r0, asr r0
 8000d4c:	20000038 	andcs	r0, r0, r8, lsr r0
 8000d50:	40012400 	andmi	r2, r1, r0, lsl #8

08000d54 <usb_class_sof>:

void usb_class_sof(){
  mic_sof();
 8000d54:	f7ff be0a 	b.w	800096c <mic_sof>

08000d58 <systick_init>:

volatile uint32_t systick_internal = 0;

void systick_init(){
  //SysTick->LOAD = F_AHB / 8 / 1000;
  SysTick->LOAD = SysTick->CALIB;
 8000d58:	4b02      	ldr	r3, [pc, #8]	; (8000d64 <systick_init+0xc>)
 8000d5a:	68da      	ldr	r2, [r3, #12]
 8000d5c:	605a      	str	r2, [r3, #4]
  SysTick->CTRL = SysTick_CTRL_TICKINT | SysTick_CTRL_ENABLE;
 8000d5e:	2203      	movs	r2, #3
 8000d60:	601a      	str	r2, [r3, #0]
}
 8000d62:	4770      	bx	lr
 8000d64:	e000e010 	and	lr, r0, r0, lsl r0

08000d68 <SysTick_Handler>:

void SysTick_Handler(){
  systick_internal++;
 8000d68:	4a02      	ldr	r2, [pc, #8]	; (8000d74 <SysTick_Handler+0xc>)
 8000d6a:	6813      	ldr	r3, [r2, #0]
 8000d6c:	3301      	adds	r3, #1
 8000d6e:	6013      	str	r3, [r2, #0]
}
 8000d70:	4770      	bx	lr
 8000d72:	bf00      	nop
 8000d74:	20000050 	andcs	r0, r0, r0, asr r0

08000d78 <uart_buf_size>:
  volatile uint8_t st,en;
  volatile uint8_t arr[UART_SIZE];
}uart_buffer;

uint8_t uart_buf_size(uart_buffer *buf){
  return ((buf->st - buf->en) & UART_MASK);
 8000d78:	7803      	ldrb	r3, [r0, #0]
 8000d7a:	7840      	ldrb	r0, [r0, #1]
 8000d7c:	1a18      	subs	r0, r3, r0
}
 8000d7e:	b2c0      	uxtb	r0, r0
 8000d80:	4770      	bx	lr

08000d82 <uart_buf_read>:
  return ((buf->st - buf->en) & UART_MASK);
 8000d82:	7801      	ldrb	r1, [r0, #0]
 8000d84:	7842      	ldrb	r2, [r0, #1]

uint8_t uart_buf_read(uart_buffer *buf){
 8000d86:	4603      	mov	r3, r0
  uint8_t res;
  if(uart_buf_size(buf) == 0)return 0;
 8000d88:	4291      	cmp	r1, r2
 8000d8a:	d00b      	beq.n	8000da4 <uart_buf_read+0x22>
  res = buf->arr[buf->st];
 8000d8c:	7802      	ldrb	r2, [r0, #0]
 8000d8e:	4402      	add	r2, r0
 8000d90:	7890      	ldrb	r0, [r2, #2]
  buf->st++;
 8000d92:	781a      	ldrb	r2, [r3, #0]
  res = buf->arr[buf->st];
 8000d94:	b2c0      	uxtb	r0, r0
  buf->st++;
 8000d96:	3201      	adds	r2, #1
 8000d98:	b2d2      	uxtb	r2, r2
 8000d9a:	701a      	strb	r2, [r3, #0]
  buf->st &= UART_MASK;
 8000d9c:	781a      	ldrb	r2, [r3, #0]
 8000d9e:	b2d2      	uxtb	r2, r2
 8000da0:	701a      	strb	r2, [r3, #0]
  return res;
 8000da2:	4770      	bx	lr
  if(uart_buf_size(buf) == 0)return 0;
 8000da4:	2000      	movs	r0, #0
}
 8000da6:	4770      	bx	lr

08000da8 <uart_buf_write>:
  return ((buf->st - buf->en) & UART_MASK);
 8000da8:	7803      	ldrb	r3, [r0, #0]
 8000daa:	7842      	ldrb	r2, [r0, #1]
 8000dac:	1a9b      	subs	r3, r3, r2

void uart_buf_write(uart_buffer *buf, uint8_t dat){
  if(uart_buf_size(buf)!=1){
 8000dae:	b2db      	uxtb	r3, r3
 8000db0:	2b01      	cmp	r3, #1
 8000db2:	d009      	beq.n	8000dc8 <uart_buf_write+0x20>
    buf->arr[buf->en]=dat;
 8000db4:	7843      	ldrb	r3, [r0, #1]
 8000db6:	4403      	add	r3, r0
 8000db8:	7099      	strb	r1, [r3, #2]
    buf->en++; buf->en &= UART_MASK;
 8000dba:	7843      	ldrb	r3, [r0, #1]
 8000dbc:	3301      	adds	r3, #1
 8000dbe:	b2db      	uxtb	r3, r3
 8000dc0:	7043      	strb	r3, [r0, #1]
 8000dc2:	7843      	ldrb	r3, [r0, #1]
 8000dc4:	b2db      	uxtb	r3, r3
 8000dc6:	7043      	strb	r3, [r0, #1]
  }
}
 8000dc8:	4770      	bx	lr

08000dca <USART1_IRQHandler>:
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef UART1_EN
static uart_buffer uart1_rx;
static uart_buffer uart1_tx;

void USART1_IRQHandler(void){
 8000dca:	b510      	push	{r4, lr}
  if( USART1->SR & USART_SR_RXNE ){
 8000dcc:	4c0f      	ldr	r4, [pc, #60]	; (8000e0c <USART1_IRQHandler+0x42>)
 8000dce:	6823      	ldr	r3, [r4, #0]
 8000dd0:	069a      	lsls	r2, r3, #26
 8000dd2:	d506      	bpl.n	8000de2 <USART1_IRQHandler+0x18>
    uint8_t temp = USART1->DR;
 8000dd4:	6861      	ldr	r1, [r4, #4]
    uart_buf_write(&uart1_rx, temp);
 8000dd6:	480e      	ldr	r0, [pc, #56]	; (8000e10 <USART1_IRQHandler+0x46>)
 8000dd8:	b2c9      	uxtb	r1, r1
  }else if( USART1->SR & USART_SR_TXE ){
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
      else USART1->CR1 &=~ USART_CR1_TXEIE;
  }
}
 8000dda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    uart_buf_write(&uart1_rx, temp);
 8000dde:	f7ff bfe3 	b.w	8000da8 <uart_buf_write>
  }else if( USART1->SR & USART_SR_TXE ){
 8000de2:	6823      	ldr	r3, [r4, #0]
 8000de4:	061b      	lsls	r3, r3, #24
 8000de6:	d50b      	bpl.n	8000e00 <USART1_IRQHandler+0x36>
  return ((buf->st - buf->en) & UART_MASK);
 8000de8:	4809      	ldr	r0, [pc, #36]	; (8000e10 <USART1_IRQHandler+0x46>)
 8000dea:	f890 2102 	ldrb.w	r2, [r0, #258]	; 0x102
 8000dee:	f890 3103 	ldrb.w	r3, [r0, #259]	; 0x103
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
 8000df2:	429a      	cmp	r2, r3
 8000df4:	d005      	beq.n	8000e02 <USART1_IRQHandler+0x38>
 8000df6:	f500 7081 	add.w	r0, r0, #258	; 0x102
 8000dfa:	f7ff ffc2 	bl	8000d82 <uart_buf_read>
 8000dfe:	6060      	str	r0, [r4, #4]
}
 8000e00:	bd10      	pop	{r4, pc}
      else USART1->CR1 &=~ USART_CR1_TXEIE;
 8000e02:	68e3      	ldr	r3, [r4, #12]
 8000e04:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000e08:	60e3      	str	r3, [r4, #12]
}
 8000e0a:	e7f9      	b.n	8000e00 <USART1_IRQHandler+0x36>
 8000e0c:	40013800 	andmi	r3, r1, r0, lsl #16
 8000e10:	20000054 	andcs	r0, r0, r4, asr r0

08000e14 <UART1_write>:

void UART1_write(uint8_t *data, uint8_t len){
 8000e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e16:	4604      	mov	r4, r0
  while(len--)UART_putc(1, *(data++));
 8000e18:	4f07      	ldr	r7, [pc, #28]	; (8000e38 <UART1_write+0x24>)
 8000e1a:	4d08      	ldr	r5, [pc, #32]	; (8000e3c <UART1_write+0x28>)
 8000e1c:	1846      	adds	r6, r0, r1
 8000e1e:	42b4      	cmp	r4, r6
 8000e20:	d100      	bne.n	8000e24 <UART1_write+0x10>
}
 8000e22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  while(len--)UART_putc(1, *(data++));
 8000e24:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e28:	4638      	mov	r0, r7
 8000e2a:	f7ff ffbd 	bl	8000da8 <uart_buf_write>
 8000e2e:	68eb      	ldr	r3, [r5, #12]
 8000e30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e34:	60eb      	str	r3, [r5, #12]
 8000e36:	e7f2      	b.n	8000e1e <UART1_write+0xa>
 8000e38:	20000156 	andcs	r0, r0, r6, asr r1
 8000e3c:	40013800 	andmi	r3, r1, r0, lsl #16

08000e40 <UART1_puts>:

void UART1_puts(char *str){
 8000e40:	b570      	push	{r4, r5, r6, lr}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000e42:	4e07      	ldr	r6, [pc, #28]	; (8000e60 <UART1_puts+0x20>)
 8000e44:	4d07      	ldr	r5, [pc, #28]	; (8000e64 <UART1_puts+0x24>)
 8000e46:	1e44      	subs	r4, r0, #1
 8000e48:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000e4c:	b901      	cbnz	r1, 8000e50 <UART1_puts+0x10>
}
 8000e4e:	bd70      	pop	{r4, r5, r6, pc}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000e50:	4630      	mov	r0, r6
 8000e52:	f7ff ffa9 	bl	8000da8 <uart_buf_write>
 8000e56:	68eb      	ldr	r3, [r5, #12]
 8000e58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e5c:	60eb      	str	r3, [r5, #12]
 8000e5e:	e7f3      	b.n	8000e48 <UART1_puts+0x8>
 8000e60:	20000156 	andcs	r0, r0, r6, asr r1
 8000e64:	40013800 	andmi	r3, r1, r0, lsl #16

08000e68 <UART1_read>:

void UART1_read(uint8_t *data, uint8_t len){
 8000e68:	b570      	push	{r4, r5, r6, lr}
 8000e6a:	4604      	mov	r4, r0
  return ((buf->st - buf->en) & UART_MASK);
 8000e6c:	4d08      	ldr	r5, [pc, #32]	; (8000e90 <UART1_read+0x28>)
 8000e6e:	1846      	adds	r6, r0, r1
  while(len--){
 8000e70:	42b4      	cmp	r4, r6
 8000e72:	d100      	bne.n	8000e76 <UART1_read+0xe>
    while(UART_rx_count(1) == 0){}
    *(data++) = UART_getc(1);
  }
}
 8000e74:	bd70      	pop	{r4, r5, r6, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000e76:	782a      	ldrb	r2, [r5, #0]
 8000e78:	786b      	ldrb	r3, [r5, #1]
    while(UART_rx_count(1) == 0){}
 8000e7a:	1a9b      	subs	r3, r3, r2
 8000e7c:	f013 0fff 	tst.w	r3, #255	; 0xff
 8000e80:	d0f9      	beq.n	8000e76 <UART1_read+0xe>
    *(data++) = UART_getc(1);
 8000e82:	4628      	mov	r0, r5
 8000e84:	f7ff ff7d 	bl	8000d82 <uart_buf_read>
 8000e88:	f804 0b01 	strb.w	r0, [r4], #1
 8000e8c:	e7f0      	b.n	8000e70 <UART1_read+0x8>
 8000e8e:	bf00      	nop
 8000e90:	20000054 	andcs	r0, r0, r4, asr r0

08000e94 <UART1_gets>:

void UART1_gets(char *str, uint8_t len){
 8000e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e96:	4606      	mov	r6, r0
 8000e98:	3901      	subs	r1, #1
  return ((buf->st - buf->en) & UART_MASK);
 8000e9a:	4f13      	ldr	r7, [pc, #76]	; (8000ee8 <UART1_gets+0x54>)
 8000e9c:	b2cc      	uxtb	r4, r1
  while(len--){
 8000e9e:	2cff      	cmp	r4, #255	; 0xff
 8000ea0:	4635      	mov	r5, r6
 8000ea2:	d10d      	bne.n	8000ec0 <UART1_gets+0x2c>
    while(UART_rx_count(1) == 0){}
    str[0] = UART_getc(1);
    if(str[0] == 0 || str[0] == 13)break;
    str++;
  }
  if(str[0] != 0){
 8000ea4:	782b      	ldrb	r3, [r5, #0]
 8000ea6:	b153      	cbz	r3, 8000ebe <UART1_gets+0x2a>
    if(len < 3)str[0] = 0;
 8000ea8:	2c02      	cmp	r4, #2
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000eaa:	bf83      	ittte	hi
 8000eac:	230a      	movhi	r3, #10
 8000eae:	702b      	strbhi	r3, [r5, #0]
 8000eb0:	230d      	movhi	r3, #13
    if(len < 3)str[0] = 0;
 8000eb2:	2300      	movls	r3, #0
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000eb4:	bf85      	ittet	hi
 8000eb6:	706b      	strbhi	r3, [r5, #1]
 8000eb8:	2300      	movhi	r3, #0
    if(len < 3)str[0] = 0;
 8000eba:	702b      	strbls	r3, [r5, #0]
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ebc:	70ab      	strbhi	r3, [r5, #2]
  }
}
 8000ebe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000ec0:	783a      	ldrb	r2, [r7, #0]
 8000ec2:	787b      	ldrb	r3, [r7, #1]
    while(UART_rx_count(1) == 0){}
 8000ec4:	1a9b      	subs	r3, r3, r2
 8000ec6:	f013 0fff 	tst.w	r3, #255	; 0xff
 8000eca:	d0f9      	beq.n	8000ec0 <UART1_gets+0x2c>
    str[0] = UART_getc(1);
 8000ecc:	4638      	mov	r0, r7
 8000ece:	f7ff ff58 	bl	8000d82 <uart_buf_read>
 8000ed2:	f806 0b01 	strb.w	r0, [r6], #1
    if(str[0] == 0 || str[0] == 13)break;
 8000ed6:	2800      	cmp	r0, #0
 8000ed8:	d0e4      	beq.n	8000ea4 <UART1_gets+0x10>
 8000eda:	1e63      	subs	r3, r4, #1
 8000edc:	280d      	cmp	r0, #13
 8000ede:	b2db      	uxtb	r3, r3
 8000ee0:	d0e0      	beq.n	8000ea4 <UART1_gets+0x10>
 8000ee2:	461c      	mov	r4, r3
 8000ee4:	e7db      	b.n	8000e9e <UART1_gets+0xa>
 8000ee6:	bf00      	nop
 8000ee8:	20000054 	andcs	r0, r0, r4, asr r0

08000eec <programmer_ep0_in>:
#define timeout_reset() do{timeout_ms = systick_ms() + TIMEOUT_MS;}while(0)

void uart_ctrl( uint8_t *buf, int size);

char programmer_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000eec:	7803      	ldrb	r3, [r0, #0]
 8000eee:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000ef2:	2b21      	cmp	r3, #33	; 0x21
 8000ef4:	d112      	bne.n	8000f1c <programmer_ep0_in+0x30>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 8000ef6:	7843      	ldrb	r3, [r0, #1]
 8000ef8:	2b21      	cmp	r3, #33	; 0x21
 8000efa:	d10f      	bne.n	8000f1c <programmer_ep0_in+0x30>
      if( req->wIndex == ifnum(interface_tty) ){
 8000efc:	8880      	ldrh	r0, [r0, #4]
 8000efe:	2801      	cmp	r0, #1
 8000f00:	d104      	bne.n	8000f0c <programmer_ep0_in+0x20>
        *data = (void*)&tty_cfg;
 8000f02:	4b07      	ldr	r3, [pc, #28]	; (8000f20 <programmer_ep0_in+0x34>)
 8000f04:	600b      	str	r3, [r1, #0]
        *size = sizeof(tty_cfg);
 8000f06:	2307      	movs	r3, #7
 8000f08:	8013      	strh	r3, [r2, #0]
        return 1;
 8000f0a:	4770      	bx	lr
      }else if( req->wIndex == ifnum(interface_progr) ){
 8000f0c:	2803      	cmp	r0, #3
 8000f0e:	d105      	bne.n	8000f1c <programmer_ep0_in+0x30>
        *data = (void*)&progr_cfg;
 8000f10:	4b04      	ldr	r3, [pc, #16]	; (8000f24 <programmer_ep0_in+0x38>)
        *size = sizeof(progr_cfg);
        return 1;
 8000f12:	2001      	movs	r0, #1
        *data = (void*)&progr_cfg;
 8000f14:	600b      	str	r3, [r1, #0]
        *size = sizeof(progr_cfg);
 8000f16:	2307      	movs	r3, #7
 8000f18:	8013      	strh	r3, [r2, #0]
        return 1;
 8000f1a:	4770      	bx	lr
      }
    }
  }
  return 0;
 8000f1c:	2000      	movs	r0, #0
}
 8000f1e:	4770      	bx	lr
 8000f20:	2000000c 	andcs	r0, r0, ip
 8000f24:	20000013 	andcs	r0, r0, r3, lsl r0

08000f28 <uart_cfg>:

void uart_cfg( volatile struct cdc_linecoding *cfg ){
  UART_speed( USART, cfg->baudrate );
 8000f28:	6803      	ldr	r3, [r0, #0]
 8000f2a:	4a17      	ldr	r2, [pc, #92]	; (8000f88 <uart_cfg+0x60>)
 8000f2c:	fbb2 f2f3 	udiv	r2, r2, r3
 8000f30:	4b16      	ldr	r3, [pc, #88]	; (8000f8c <uart_cfg+0x64>)
 8000f32:	609a      	str	r2, [r3, #8]
  //stopbits
  
  //parity
  if(cfg->parity == 0){ //none
 8000f34:	7942      	ldrb	r2, [r0, #5]
 8000f36:	b942      	cbnz	r2, 8000f4a <uart_cfg+0x22>
    USART1->CR1 &=~USART_CR1_PCE;
 8000f38:	68da      	ldr	r2, [r3, #12]
 8000f3a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8000f3e:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_M;
 8000f40:	68da      	ldr	r2, [r3, #12]
 8000f42:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 |= USART_CR1_PS;
  }else if(cfg->parity == 2){ //even
    USART1->CR1 |= USART_CR1_M;
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 &=~USART_CR1_PS;
 8000f46:	60da      	str	r2, [r3, #12]
  }
}
 8000f48:	4770      	bx	lr
  }else if(cfg->parity == 1){ //odd
 8000f4a:	7942      	ldrb	r2, [r0, #5]
 8000f4c:	2a01      	cmp	r2, #1
 8000f4e:	d10b      	bne.n	8000f68 <uart_cfg+0x40>
    USART1->CR1 |= USART_CR1_M;
 8000f50:	68da      	ldr	r2, [r3, #12]
 8000f52:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000f56:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 8000f58:	68da      	ldr	r2, [r3, #12]
 8000f5a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000f5e:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PS;
 8000f60:	68da      	ldr	r2, [r3, #12]
 8000f62:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000f66:	e7ee      	b.n	8000f46 <uart_cfg+0x1e>
  }else if(cfg->parity == 2){ //even
 8000f68:	7942      	ldrb	r2, [r0, #5]
 8000f6a:	2a02      	cmp	r2, #2
 8000f6c:	d1ec      	bne.n	8000f48 <uart_cfg+0x20>
    USART1->CR1 |= USART_CR1_M;
 8000f6e:	68da      	ldr	r2, [r3, #12]
 8000f70:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000f74:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 8000f76:	68da      	ldr	r2, [r3, #12]
 8000f78:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000f7c:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_PS;
 8000f7e:	68da      	ldr	r2, [r3, #12]
 8000f80:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000f84:	e7df      	b.n	8000f46 <uart_cfg+0x1e>
 8000f86:	bf00      	nop
 8000f88:	044aa200 	strbeq	sl, [sl], #-512	; 0xfffffe00
 8000f8c:	40013800 	andmi	r3, r1, r0, lsl #16

08000f90 <programmer_ep0_out>:

char programmer_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000f90:	b538      	push	{r3, r4, r5, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000f92:	7803      	ldrb	r3, [r0, #0]
 8000f94:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000f98:	2b21      	cmp	r3, #33	; 0x21
 8000f9a:	d137      	bne.n	800100c <programmer_ep0_out+0x7c>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 8000f9c:	7843      	ldrb	r3, [r0, #1]
 8000f9e:	2b20      	cmp	r3, #32
 8000fa0:	d134      	bne.n	800100c <programmer_ep0_out+0x7c>
      if(rx_size == 0)return 1;
 8000fa2:	b90a      	cbnz	r2, 8000fa8 <programmer_ep0_out+0x18>
        }else if( ttymode == TTYM_CTRL ){
          ttymode = TTYM_PROGR;
          uart_cfg( &progr_cfg );
          timeout_reset();
        }
        return 1;
 8000fa4:	2001      	movs	r0, #1
      //  1   : RTS
      //  0   : DTR
    }
  }
  return 0;
}
 8000fa6:	bd38      	pop	{r3, r4, r5, pc}
      if( req->wIndex == ifnum(interface_tty) ){
 8000fa8:	8884      	ldrh	r4, [r0, #4]
 8000faa:	2c01      	cmp	r4, #1
 8000fac:	d10c      	bne.n	8000fc8 <programmer_ep0_out+0x38>
 8000fae:	4918      	ldr	r1, [pc, #96]	; (8001010 <programmer_ep0_out+0x80>)
 8000fb0:	4620      	mov	r0, r4
 8000fb2:	f7ff fb8d 	bl	80006d0 <_usb_ep_read>
        if(ttymode == TTYM_NORMAL){
 8000fb6:	4b17      	ldr	r3, [pc, #92]	; (8001014 <programmer_ep0_out+0x84>)
 8000fb8:	f893 3204 	ldrb.w	r3, [r3, #516]	; 0x204
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	d1f1      	bne.n	8000fa4 <programmer_ep0_out+0x14>
          uart_cfg( &tty_cfg );
 8000fc0:	4813      	ldr	r0, [pc, #76]	; (8001010 <programmer_ep0_out+0x80>)
 8000fc2:	f7ff ffb1 	bl	8000f28 <uart_cfg>
 8000fc6:	e7ed      	b.n	8000fa4 <programmer_ep0_out+0x14>
      }else if( req->wIndex == ifnum(interface_progr) ){
 8000fc8:	2c03      	cmp	r4, #3
 8000fca:	d11f      	bne.n	800100c <programmer_ep0_out+0x7c>
 8000fcc:	4d10      	ldr	r5, [pc, #64]	; (8001010 <programmer_ep0_out+0x80>)
 8000fce:	2001      	movs	r0, #1
 8000fd0:	1de9      	adds	r1, r5, #7
 8000fd2:	f7ff fb7d 	bl	80006d0 <_usb_ep_read>
        if( progr_cfg.baudrate == SPEED_CTRL ){
 8000fd6:	f8d5 3007 	ldr.w	r3, [r5, #7]
 8000fda:	4c0e      	ldr	r4, [pc, #56]	; (8001014 <programmer_ep0_out+0x84>)
 8000fdc:	2b32      	cmp	r3, #50	; 0x32
 8000fde:	d10a      	bne.n	8000ff6 <programmer_ep0_out+0x66>
          ttymode = TTYM_CTRL;
 8000fe0:	2302      	movs	r3, #2
 8000fe2:	f884 3204 	strb.w	r3, [r4, #516]	; 0x204
 8000fe6:	4b0c      	ldr	r3, [pc, #48]	; (8001018 <programmer_ep0_out+0x88>)
 8000fe8:	681b      	ldr	r3, [r3, #0]
          timeout_reset();
 8000fea:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 8000fee:	3310      	adds	r3, #16
 8000ff0:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 8000ff4:	e7d6      	b.n	8000fa4 <programmer_ep0_out+0x14>
        }else if( ttymode == TTYM_CTRL ){
 8000ff6:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8000ffa:	2b02      	cmp	r3, #2
 8000ffc:	d1d2      	bne.n	8000fa4 <programmer_ep0_out+0x14>
          ttymode = TTYM_PROGR;
 8000ffe:	2101      	movs	r1, #1
          uart_cfg( &progr_cfg );
 8001000:	1de8      	adds	r0, r5, #7
          ttymode = TTYM_PROGR;
 8001002:	f884 1204 	strb.w	r1, [r4, #516]	; 0x204
          uart_cfg( &progr_cfg );
 8001006:	f7ff ff8f 	bl	8000f28 <uart_cfg>
 800100a:	e7ec      	b.n	8000fe6 <programmer_ep0_out+0x56>
  return 0;
 800100c:	2000      	movs	r0, #0
 800100e:	e7ca      	b.n	8000fa6 <programmer_ep0_out+0x16>
 8001010:	2000000c 	andcs	r0, r0, ip
 8001014:	20000054 	andcs	r0, r0, r4, asr r0
 8001018:	20000050 	andcs	r0, r0, r0, asr r0

0800101c <programmer_init>:
}

static char initflag = 0;

void programmer_init(){
  UART_init(USART, 9600);
 800101c:	4a2b      	ldr	r2, [pc, #172]	; (80010cc <programmer_init+0xb0>)
void programmer_init(){
 800101e:	b570      	push	{r4, r5, r6, lr}
  UART_init(USART, 9600);
 8001020:	6853      	ldr	r3, [r2, #4]
 8001022:	2400      	movs	r4, #0
 8001024:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001028:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800102c:	6053      	str	r3, [r2, #4]
 800102e:	6853      	ldr	r3, [r2, #4]
 8001030:	2620      	movs	r6, #32
 8001032:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001036:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 800103a:	6053      	str	r3, [r2, #4]
 800103c:	4b24      	ldr	r3, [pc, #144]	; (80010d0 <programmer_init+0xb4>)
 800103e:	4d25      	ldr	r5, [pc, #148]	; (80010d4 <programmer_init+0xb8>)
 8001040:	699a      	ldr	r2, [r3, #24]
  //UART_puts(USART, "Test\n\r");
  ttymode = TTYM_NORMAL;
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 8001042:	2103      	movs	r1, #3
  UART_init(USART, 9600);
 8001044:	f042 0201 	orr.w	r2, r2, #1
 8001048:	619a      	str	r2, [r3, #24]
 800104a:	699a      	ldr	r2, [r3, #24]
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800104c:	2084      	movs	r0, #132	; 0x84
  UART_init(USART, 9600);
 800104e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001052:	619a      	str	r2, [r3, #24]
 8001054:	f641 524c 	movw	r2, #7500	; 0x1d4c
 8001058:	f5a3 4358 	sub.w	r3, r3, #55296	; 0xd800
 800105c:	609a      	str	r2, [r3, #8]
 800105e:	f242 022c 	movw	r2, #8236	; 0x202c
 8001062:	60da      	str	r2, [r3, #12]
 8001064:	611c      	str	r4, [r3, #16]
 8001066:	615c      	str	r4, [r3, #20]
 8001068:	619c      	str	r4, [r3, #24]
 800106a:	4b1b      	ldr	r3, [pc, #108]	; (80010d8 <programmer_init+0xbc>)
 800106c:	702c      	strb	r4, [r5, #0]
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800106e:	2208      	movs	r2, #8
  UART_init(USART, 9600);
 8001070:	706c      	strb	r4, [r5, #1]
 8001072:	f885 4102 	strb.w	r4, [r5, #258]	; 0x102
 8001076:	f885 4103 	strb.w	r4, [r5, #259]	; 0x103
 800107a:	605e      	str	r6, [r3, #4]
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800107c:	4623      	mov	r3, r4
  ttymode = TTYM_NORMAL;
 800107e:	f885 4204 	strb.w	r4, [r5, #516]	; 0x204
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 8001082:	f7ff f909 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_TTY_IN   | 0x80, USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 8001086:	4623      	mov	r3, r4
 8001088:	4632      	mov	r2, r6
 800108a:	2102      	movs	r1, #2
 800108c:	2081      	movs	r0, #129	; 0x81
 800108e:	f7ff f903 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_TTY_OUT,         USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 8001092:	4623      	mov	r3, r4
 8001094:	4632      	mov	r2, r6
 8001096:	2102      	movs	r1, #2
 8001098:	2001      	movs	r0, #1
 800109a:	f7ff f8fd 	bl	8000298 <usb_ep_init>

  usb_ep_init( ENDP_PROG_CTL | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800109e:	4623      	mov	r3, r4
 80010a0:	2208      	movs	r2, #8
 80010a2:	2103      	movs	r1, #3
 80010a4:	2085      	movs	r0, #133	; 0x85
 80010a6:	f7ff f8f7 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_PROG_IN  | 0x80, USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 80010aa:	4623      	mov	r3, r4
 80010ac:	4632      	mov	r2, r6
 80010ae:	2102      	movs	r1, #2
 80010b0:	2082      	movs	r0, #130	; 0x82
 80010b2:	f7ff f8f1 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_PROG_OUT,        USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 80010b6:	2102      	movs	r1, #2
 80010b8:	4623      	mov	r3, r4
 80010ba:	4632      	mov	r2, r6
 80010bc:	4608      	mov	r0, r1
 80010be:	f7ff f8eb 	bl	8000298 <usb_ep_init>
  initflag = 1;
 80010c2:	2301      	movs	r3, #1
 80010c4:	f885 320c 	strb.w	r3, [r5, #524]	; 0x20c
}
 80010c8:	bd70      	pop	{r4, r5, r6, pc}
 80010ca:	bf00      	nop
 80010cc:	40010800 	andmi	r0, r1, r0, lsl #16
 80010d0:	40021000 	andmi	r1, r2, r0
 80010d4:	20000054 	andcs	r0, r0, r4, asr r0
 80010d8:	e000e100 	and	lr, r0, r0, lsl #2

080010dc <uart_ctrl>:
//*/
#define CTRL_RST	(1<<0)
#define CTRL_BOOT0	(1<<1)
#define CTRL_USB	(1<<2)
//control sequence
void uart_ctrl( uint8_t *buf, int size){
 80010dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  //GPO_T( GLED );
  uint8_t val = 0;
  if( GPI_ON(RESET) )val |= CTRL_RST;
 80010de:	4d2b      	ldr	r5, [pc, #172]	; (800118c <uart_ctrl+0xb0>)
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 80010e0:	4c2b      	ldr	r4, [pc, #172]	; (8001190 <uart_ctrl+0xb4>)
  if( GPI_ON(RESET) )val |= CTRL_RST;
 80010e2:	68ab      	ldr	r3, [r5, #8]
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 80010e4:	68a2      	ldr	r2, [r4, #8]
  if( GPI_ON(RESET) )val |= CTRL_RST;
 80010e6:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 80010ea:	05d7      	lsls	r7, r2, #23
  if( GPI_ON(USBR ) )val |= CTRL_USB;
 80010ec:	4a29      	ldr	r2, [pc, #164]	; (8001194 <uart_ctrl+0xb8>)
  uint8_t val = 0;
 80010ee:	f3c3 3340 	ubfx	r3, r3, #13, #1
  if( GPI_ON(USBR ) )val |= CTRL_USB;
 80010f2:	6892      	ldr	r2, [r2, #8]
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 80010f4:	bf48      	it	mi
 80010f6:	f043 0302 	orrmi.w	r3, r3, #2
  if( GPI_ON(USBR ) )val |= CTRL_USB;
 80010fa:	0756      	lsls	r6, r2, #29
 80010fc:	d401      	bmi.n	8001102 <uart_ctrl+0x26>
 80010fe:	f043 0304 	orr.w	r3, r3, #4
 8001102:	1e46      	subs	r6, r0, #1
  for(int i=0; i<size; i++){
    if(buf[i] == 'z')timeout_ms = 0;
 8001104:	4f24      	ldr	r7, [pc, #144]	; (8001198 <uart_ctrl+0xbc>)
  for(int i=0; i<size; i++){
 8001106:	f1c0 0001 	rsb	r0, r0, #1
    if(buf[i] == 'z')timeout_ms = 0;
 800110a:	f04f 0c00 	mov.w	ip, #0
 800110e:	e00a      	b.n	8001126 <uart_ctrl+0x4a>
 8001110:	7872      	ldrb	r2, [r6, #1]
 8001112:	2a7a      	cmp	r2, #122	; 0x7a
 8001114:	bf08      	it	eq
 8001116:	f8c7 c208 	streq.w	ip, [r7, #520]	; 0x208
    if(buf[i] == 'R')val |= CTRL_RST;
 800111a:	f816 2f01 	ldrb.w	r2, [r6, #1]!
 800111e:	2a52      	cmp	r2, #82	; 0x52
 8001120:	d11b      	bne.n	800115a <uart_ctrl+0x7e>
 8001122:	f043 0301 	orr.w	r3, r3, #1
  for(int i=0; i<size; i++){
 8001126:	1982      	adds	r2, r0, r6
 8001128:	428a      	cmp	r2, r1
 800112a:	dbf1      	blt.n	8001110 <uart_ctrl+0x34>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
    if(buf[i] == 'U')val |= CTRL_USB;
    if(buf[i] == 'u')val &=~CTRL_USB;
  }
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 800112c:	07d9      	lsls	r1, r3, #31
 800112e:	bf4c      	ite	mi
 8001130:	f04f 5200 	movmi.w	r2, #536870912	; 0x20000000
 8001134:	f44f 5200 	movpl.w	r2, #8192	; 0x2000
 8001138:	612a      	str	r2, [r5, #16]
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 800113a:	079a      	lsls	r2, r3, #30
 800113c:	bf4c      	ite	mi
 800113e:	f44f 7280 	movmi.w	r2, #256	; 0x100
 8001142:	f04f 7280 	movpl.w	r2, #16777216	; 0x1000000
  if( val & CTRL_USB)	GPO_ON(USBR);  else GPO_OFF(USBR);
 8001146:	f013 0f04 	tst.w	r3, #4
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 800114a:	6122      	str	r2, [r4, #16]
  if( val & CTRL_USB)	GPO_ON(USBR);  else GPO_OFF(USBR);
 800114c:	bf14      	ite	ne
 800114e:	f44f 2280 	movne.w	r2, #262144	; 0x40000
 8001152:	2204      	moveq	r2, #4
 8001154:	4b0f      	ldr	r3, [pc, #60]	; (8001194 <uart_ctrl+0xb8>)
 8001156:	611a      	str	r2, [r3, #16]
}
 8001158:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if(buf[i] == 'r')val &=~CTRL_RST;
 800115a:	2a72      	cmp	r2, #114	; 0x72
 800115c:	d00a      	beq.n	8001174 <uart_ctrl+0x98>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
 800115e:	2a42      	cmp	r2, #66	; 0x42
 8001160:	d00b      	beq.n	800117a <uart_ctrl+0x9e>
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
 8001162:	2a62      	cmp	r2, #98	; 0x62
 8001164:	d00c      	beq.n	8001180 <uart_ctrl+0xa4>
    if(buf[i] == 'U')val |= CTRL_USB;
 8001166:	2a55      	cmp	r2, #85	; 0x55
 8001168:	d00d      	beq.n	8001186 <uart_ctrl+0xaa>
    if(buf[i] == 'u')val &=~CTRL_USB;
 800116a:	2a75      	cmp	r2, #117	; 0x75
 800116c:	d1db      	bne.n	8001126 <uart_ctrl+0x4a>
 800116e:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 8001172:	e7d8      	b.n	8001126 <uart_ctrl+0x4a>
    if(buf[i] == 'r')val &=~CTRL_RST;
 8001174:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    if(buf[i] == 'U')val |= CTRL_USB;
 8001178:	e7d5      	b.n	8001126 <uart_ctrl+0x4a>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
 800117a:	f043 0302 	orr.w	r3, r3, #2
    if(buf[i] == 'u')val &=~CTRL_USB;
 800117e:	e7d2      	b.n	8001126 <uart_ctrl+0x4a>
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
 8001180:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
    if(buf[i] == 'u')val &=~CTRL_USB;
 8001184:	e7cf      	b.n	8001126 <uart_ctrl+0x4a>
    if(buf[i] == 'U')val |= CTRL_USB;
 8001186:	f043 0304 	orr.w	r3, r3, #4
    if(buf[i] == 'u')val &=~CTRL_USB;
 800118a:	e7cc      	b.n	8001126 <uart_ctrl+0x4a>
 800118c:	40011000 	andmi	r1, r1, r0
 8001190:	40010800 	andmi	r0, r1, r0, lsl #16
 8001194:	40010c00 	andmi	r0, r1, r0, lsl #24
 8001198:	20000054 	andcs	r0, r0, r4, asr r0

0800119c <programmer_poll>:
void programmer_poll(){
 800119c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(!initflag)return;
 80011a0:	4c5e      	ldr	r4, [pc, #376]	; (800131c <programmer_poll+0x180>)
void programmer_poll(){
 80011a2:	b090      	sub	sp, #64	; 0x40
  if(!initflag)return;
 80011a4:	f894 320c 	ldrb.w	r3, [r4, #524]	; 0x20c
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d071      	beq.n	8001290 <programmer_poll+0xf4>
  return ((buf->st - buf->en) & UART_MASK);
 80011ac:	7823      	ldrb	r3, [r4, #0]
 80011ae:	7865      	ldrb	r5, [r4, #1]
 80011b0:	4f5b      	ldr	r7, [pc, #364]	; (8001320 <programmer_poll+0x184>)
  size = UART_rx_count( USART );
 80011b2:	1aed      	subs	r5, r5, r3
  if(size > 0){
 80011b4:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
 80011b8:	4e5a      	ldr	r6, [pc, #360]	; (8001324 <programmer_poll+0x188>)
 80011ba:	d01b      	beq.n	80011f4 <programmer_poll+0x58>
    if( ttymode == TTYM_NORMAL ){
 80011bc:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 80011c0:	2d20      	cmp	r5, #32
 80011c2:	bfa8      	it	ge
 80011c4:	2520      	movge	r5, #32
 80011c6:	f003 08ff 	and.w	r8, r3, #255	; 0xff
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d163      	bne.n	8001296 <programmer_poll+0xfa>
      if(usb_ep_ready( ENDP_TTY_IN | 0x80 )){
 80011ce:	883b      	ldrh	r3, [r7, #0]
 80011d0:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80011d4:	2b30      	cmp	r3, #48	; 0x30
 80011d6:	d00d      	beq.n	80011f4 <programmer_poll+0x58>
        UART_read( USART, buf, size );
 80011d8:	4629      	mov	r1, r5
 80011da:	4668      	mov	r0, sp
 80011dc:	f7ff fe44 	bl	8000e68 <UART1_read>
        usb_log_grab( 0, buf, size );
 80011e0:	462a      	mov	r2, r5
 80011e2:	4669      	mov	r1, sp
 80011e4:	4640      	mov	r0, r8
 80011e6:	f000 f935 	bl	8001454 <usb_log_grab>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80011ea:	462a      	mov	r2, r5
 80011ec:	4669      	mov	r1, sp
 80011ee:	2002      	movs	r0, #2
 80011f0:	f7ff fa2a 	bl	8000648 <_usb_ep_write>
  if(ttymode == TTYM_NORMAL){
 80011f4:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d162      	bne.n	80012c2 <programmer_poll+0x126>
    if(usb_ep_ready( ENDP_PROG_OUT))usb_ep_read( ENDP_PROG_OUT, (void*)buf );
 80011fc:	8833      	ldrh	r3, [r6, #0]
 80011fe:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001202:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001206:	d103      	bne.n	8001210 <programmer_poll+0x74>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8001208:	a908      	add	r1, sp, #32
 800120a:	2005      	movs	r0, #5
 800120c:	f7ff fa60 	bl	80006d0 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_TTY_OUT ))return;
 8001210:	883b      	ldrh	r3, [r7, #0]
 8001212:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001216:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800121a:	d120      	bne.n	800125e <programmer_poll+0xc2>
    epnum = ENDP_TTY_OUT;
 800121c:	2001      	movs	r0, #1
  if(ttymode != TTYM_CTRL){
 800121e:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8001222:	2b02      	cmp	r3, #2
 8001224:	d066      	beq.n	80012f4 <programmer_poll+0x158>
 8001226:	f894 3102 	ldrb.w	r3, [r4, #258]	; 0x102
 800122a:	f894 2103 	ldrb.w	r2, [r4, #259]	; 0x103
 800122e:	1a9b      	subs	r3, r3, r2
    if( UART_tx_count( USART ) > (ENDP_TTY_SIZE + 10) ){
 8001230:	b2db      	uxtb	r3, r3
 8001232:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8001236:	2b2a      	cmp	r3, #42	; 0x2a
 8001238:	dd11      	ble.n	800125e <programmer_poll+0xc2>
 800123a:	0040      	lsls	r0, r0, #1
 800123c:	a908      	add	r1, sp, #32
 800123e:	3001      	adds	r0, #1
 8001240:	f7ff fa46 	bl	80006d0 <_usb_ep_read>
      if(ttymode == TTYM_NORMAL){
 8001244:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8001248:	4605      	mov	r5, r0
 800124a:	b923      	cbnz	r3, 8001256 <programmer_poll+0xba>
        usb_log_grab( 1, buf, size);
 800124c:	4602      	mov	r2, r0
 800124e:	a908      	add	r1, sp, #32
 8001250:	2001      	movs	r0, #1
 8001252:	f000 f8ff 	bl	8001454 <usb_log_grab>
      UART_write( USART, buf, size );
 8001256:	b2e9      	uxtb	r1, r5
 8001258:	a808      	add	r0, sp, #32
 800125a:	f7ff fddb 	bl	8000e14 <UART1_write>
  if( ttymode != TTYM_NORMAL ){
 800125e:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 8001262:	b15b      	cbz	r3, 800127c <programmer_poll+0xe0>
 8001264:	4b30      	ldr	r3, [pc, #192]	; (8001328 <programmer_poll+0x18c>)
 8001266:	681b      	ldr	r3, [r3, #0]
    if( systick_ms() > timeout_ms ){
 8001268:	f8d4 2208 	ldr.w	r2, [r4, #520]	; 0x208
 800126c:	429a      	cmp	r2, r3
 800126e:	d205      	bcs.n	800127c <programmer_poll+0xe0>
      ttymode = TTYM_NORMAL;
 8001270:	2300      	movs	r3, #0
      uart_cfg( &tty_cfg );
 8001272:	482e      	ldr	r0, [pc, #184]	; (800132c <programmer_poll+0x190>)
      ttymode = TTYM_NORMAL;
 8001274:	f884 3204 	strb.w	r3, [r4, #516]	; 0x204
      uart_cfg( &tty_cfg );
 8001278:	f7ff fe56 	bl	8000f28 <uart_cfg>
  if( ttymode == TTYM_NORMAL ){		//green
 800127c:	f894 2204 	ldrb.w	r2, [r4, #516]	; 0x204
 8001280:	4b2b      	ldr	r3, [pc, #172]	; (8001330 <programmer_poll+0x194>)
 8001282:	2a00      	cmp	r2, #0
 8001284:	d13f      	bne.n	8001306 <programmer_poll+0x16a>
    GPO_ON(GLED); GPO_OFF(RLED);
 8001286:	2280      	movs	r2, #128	; 0x80
 8001288:	611a      	str	r2, [r3, #16]
 800128a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
    GPO_ON(RLED); GPO_ON(GLED);
 800128e:	611a      	str	r2, [r3, #16]
}
 8001290:	b010      	add	sp, #64	; 0x40
 8001292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    }else if( ttymode == TTYM_PROGR ){
 8001296:	f894 3204 	ldrb.w	r3, [r4, #516]	; 0x204
 800129a:	2b01      	cmp	r3, #1
 800129c:	d10c      	bne.n	80012b8 <programmer_poll+0x11c>
      if(usb_ep_ready( ENDP_PROG_IN | 0x80 )){
 800129e:	8833      	ldrh	r3, [r6, #0]
 80012a0:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80012a4:	2b30      	cmp	r3, #48	; 0x30
 80012a6:	d0a5      	beq.n	80011f4 <programmer_poll+0x58>
        UART_read( USART, buf, size);
 80012a8:	4629      	mov	r1, r5
 80012aa:	4668      	mov	r0, sp
 80012ac:	f7ff fddc 	bl	8000e68 <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80012b0:	462a      	mov	r2, r5
 80012b2:	4669      	mov	r1, sp
 80012b4:	2004      	movs	r0, #4
 80012b6:	e79b      	b.n	80011f0 <programmer_poll+0x54>
      UART_read( USART, buf, size );
 80012b8:	4629      	mov	r1, r5
 80012ba:	4668      	mov	r0, sp
 80012bc:	f7ff fdd4 	bl	8000e68 <UART1_read>
 80012c0:	e798      	b.n	80011f4 <programmer_poll+0x58>
    if(usb_ep_ready( ENDP_TTY_OUT ))usb_ep_read( ENDP_TTY_OUT, (void*)buf );
 80012c2:	883b      	ldrh	r3, [r7, #0]
 80012c4:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80012c8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80012cc:	d103      	bne.n	80012d6 <programmer_poll+0x13a>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80012ce:	a908      	add	r1, sp, #32
 80012d0:	2003      	movs	r0, #3
 80012d2:	f7ff f9fd 	bl	80006d0 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_PROG_OUT))return;
 80012d6:	8833      	ldrh	r3, [r6, #0]
 80012d8:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80012dc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80012e0:	d1bd      	bne.n	800125e <programmer_poll+0xc2>
 80012e2:	4b11      	ldr	r3, [pc, #68]	; (8001328 <programmer_poll+0x18c>)
    epnum = ENDP_PROG_OUT;
 80012e4:	2002      	movs	r0, #2
 80012e6:	681b      	ldr	r3, [r3, #0]
    timeout_reset();
 80012e8:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 80012ec:	3310      	adds	r3, #16
 80012ee:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 80012f2:	e794      	b.n	800121e <programmer_poll+0x82>
 80012f4:	a908      	add	r1, sp, #32
 80012f6:	2005      	movs	r0, #5
 80012f8:	f7ff f9ea 	bl	80006d0 <_usb_ep_read>
    uart_ctrl( buf, size );
 80012fc:	4601      	mov	r1, r0
 80012fe:	a808      	add	r0, sp, #32
 8001300:	f7ff feec 	bl	80010dc <uart_ctrl>
 8001304:	e7ab      	b.n	800125e <programmer_poll+0xc2>
  }else if( ttymode == TTYM_PROGR ){//red
 8001306:	f894 2204 	ldrb.w	r2, [r4, #516]	; 0x204
 800130a:	2a01      	cmp	r2, #1
 800130c:	f04f 0220 	mov.w	r2, #32
    GPO_ON(RLED); GPO_OFF(GLED);
 8001310:	611a      	str	r2, [r3, #16]
 8001312:	bf0c      	ite	eq
 8001314:	f44f 0200 	moveq.w	r2, #8388608	; 0x800000
    GPO_ON(RLED); GPO_ON(GLED);
 8001318:	2280      	movne	r2, #128	; 0x80
 800131a:	e7b8      	b.n	800128e <programmer_poll+0xf2>
 800131c:	20000054 	andcs	r0, r0, r4, asr r0
 8001320:	40005c04 	andmi	r5, r0, r4, lsl #24
 8001324:	40005c08 	andmi	r5, r0, r8, lsl #24
 8001328:	20000050 	andcs	r0, r0, r0, asr r0
 800132c:	2000000c 	andcs	r0, r0, ip
 8001330:	40010c00 	andmi	r0, r1, r0, lsl #24

08001334 <fifo_data_size>:
  volatile uint16_t st,en;
  volatile uint8_t arr[USB_LOG_SIZE];
}fifo;

uint16_t fifo_data_size(){
  return ((fifo.en - fifo.st) & USB_LOG_MASK);
 8001334:	4b03      	ldr	r3, [pc, #12]	; (8001344 <fifo_data_size+0x10>)
 8001336:	8858      	ldrh	r0, [r3, #2]
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	1ac0      	subs	r0, r0, r3
}
 800133c:	f3c0 0009 	ubfx	r0, r0, #0, #10
 8001340:	4770      	bx	lr
 8001342:	bf00      	nop
 8001344:	200002fe 	strdcs	r0, [r0], -lr

08001348 <fifo_write>:
#define fifo_free_size() (USB_LOG_MASK - fifo_data_size())

void fifo_write(uint8_t *buf, int size){
 8001348:	b538      	push	{r3, r4, r5, lr}
  uint16_t en = fifo.en;
 800134a:	4c0d      	ldr	r4, [pc, #52]	; (8001380 <fifo_write+0x38>)
void fifo_write(uint8_t *buf, int size){
 800134c:	4605      	mov	r5, r0
  uint16_t en = fifo.en;
 800134e:	8862      	ldrh	r2, [r4, #2]
 8001350:	b292      	uxth	r2, r2
  uint16_t av = fifo_free_size();
 8001352:	f7ff ffef 	bl	8001334 <fifo_data_size>
 8001356:	f5c0 707f 	rsb	r0, r0, #1020	; 0x3fc
 800135a:	3003      	adds	r0, #3
 800135c:	b280      	uxth	r0, r0
  if(av > size)av = size;
 800135e:	4288      	cmp	r0, r1
 8001360:	bfc8      	it	gt
 8001362:	b288      	uxthgt	r0, r1
 8001364:	4428      	add	r0, r5
  while( av > 0 ){
 8001366:	4285      	cmp	r5, r0
 8001368:	d101      	bne.n	800136e <fifo_write+0x26>
    fifo.arr[en] = buf[0];
    en = (en + 1) & USB_LOG_MASK;
    buf++;
    av--;
  }
  fifo.en = en;
 800136a:	8062      	strh	r2, [r4, #2]
}
 800136c:	bd38      	pop	{r3, r4, r5, pc}
    fifo.arr[en] = buf[0];
 800136e:	f815 1b01 	ldrb.w	r1, [r5], #1
 8001372:	18a3      	adds	r3, r4, r2
    en = (en + 1) & USB_LOG_MASK;
 8001374:	3201      	adds	r2, #1
    fifo.arr[en] = buf[0];
 8001376:	7119      	strb	r1, [r3, #4]
    en = (en + 1) & USB_LOG_MASK;
 8001378:	f3c2 0209 	ubfx	r2, r2, #0, #10
    av--;
 800137c:	e7f3      	b.n	8001366 <fifo_write+0x1e>
 800137e:	bf00      	nop
 8001380:	200002fe 	strdcs	r0, [r0], -lr

08001384 <fifo_read>:
#define fifo_str(str) fifo_write((uint8_t*)str, sizeof(str))

int fifo_read(uint8_t *buf, int size){
 8001384:	b538      	push	{r3, r4, r5, lr}
 8001386:	4604      	mov	r4, r0
  uint16_t av = fifo_data_size();
 8001388:	f7ff ffd4 	bl	8001334 <fifo_data_size>
  uint16_t st = fifo.st;
 800138c:	4a09      	ldr	r2, [pc, #36]	; (80013b4 <fifo_read+0x30>)
  if(av > size)av = size;
 800138e:	4288      	cmp	r0, r1
  uint16_t st = fifo.st;
 8001390:	8813      	ldrh	r3, [r2, #0]
  if(av > size)av = size;
 8001392:	bfc8      	it	gt
 8001394:	b288      	uxthgt	r0, r1
  uint16_t st = fifo.st;
 8001396:	b29b      	uxth	r3, r3
  size = av;
  while( av > 0 ){
 8001398:	1821      	adds	r1, r4, r0
 800139a:	428c      	cmp	r4, r1
 800139c:	d101      	bne.n	80013a2 <fifo_read+0x1e>
    buf[0] = fifo.arr[st];
    buf++;
    st = (st + 1) & USB_LOG_MASK;
    av--;
  }
  fifo.st = st;
 800139e:	8013      	strh	r3, [r2, #0]
  return size;
}
 80013a0:	bd38      	pop	{r3, r4, r5, pc}
    buf[0] = fifo.arr[st];
 80013a2:	18d5      	adds	r5, r2, r3
 80013a4:	792d      	ldrb	r5, [r5, #4]
    st = (st + 1) & USB_LOG_MASK;
 80013a6:	3301      	adds	r3, #1
    buf[0] = fifo.arr[st];
 80013a8:	f804 5b01 	strb.w	r5, [r4], #1
    st = (st + 1) & USB_LOG_MASK;
 80013ac:	f3c3 0309 	ubfx	r3, r3, #0, #10
    av--;
 80013b0:	e7f3      	b.n	800139a <fifo_read+0x16>
 80013b2:	bf00      	nop
 80013b4:	200002fe 	strdcs	r0, [r0], -lr

080013b8 <usb_log_ep0_in>:
  .parity = 0,
  .wordsize = 8,
};

char usb_log_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80013b8:	7803      	ldrb	r3, [r0, #0]
 80013ba:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80013be:	2b21      	cmp	r3, #33	; 0x21
 80013c0:	d10b      	bne.n	80013da <usb_log_ep0_in+0x22>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 80013c2:	7843      	ldrb	r3, [r0, #1]
 80013c4:	2b21      	cmp	r3, #33	; 0x21
 80013c6:	d108      	bne.n	80013da <usb_log_ep0_in+0x22>
      if( req->wIndex == ifnum(interface_log) ){
 80013c8:	8883      	ldrh	r3, [r0, #4]
 80013ca:	2b05      	cmp	r3, #5
 80013cc:	d105      	bne.n	80013da <usb_log_ep0_in+0x22>
        *data = (void*)&log_cfg;
 80013ce:	4b04      	ldr	r3, [pc, #16]	; (80013e0 <usb_log_ep0_in+0x28>)
        *size = sizeof(log_cfg);
        return 1;
 80013d0:	2001      	movs	r0, #1
        *data = (void*)&log_cfg;
 80013d2:	600b      	str	r3, [r1, #0]
        *size = sizeof(log_cfg);
 80013d4:	2307      	movs	r3, #7
 80013d6:	8013      	strh	r3, [r2, #0]
        return 1;
 80013d8:	4770      	bx	lr
      }
    }
  }
  return 0;
 80013da:	2000      	movs	r0, #0
}
 80013dc:	4770      	bx	lr
 80013de:	bf00      	nop
 80013e0:	2000001a 	andcs	r0, r0, sl, lsl r0

080013e4 <usb_log_ep0_out>:

char usb_log_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80013e4:	b510      	push	{r4, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80013e6:	7803      	ldrb	r3, [r0, #0]
 80013e8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80013ec:	2b21      	cmp	r3, #33	; 0x21
 80013ee:	d10c      	bne.n	800140a <usb_log_ep0_out+0x26>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 80013f0:	7843      	ldrb	r3, [r0, #1]
 80013f2:	2b20      	cmp	r3, #32
 80013f4:	d109      	bne.n	800140a <usb_log_ep0_out+0x26>
      if(rx_size == 0)return 1;
 80013f6:	b132      	cbz	r2, 8001406 <usb_log_ep0_out+0x22>
      if( req->wIndex == ifnum(interface_tty) ){
 80013f8:	8884      	ldrh	r4, [r0, #4]
 80013fa:	2c01      	cmp	r4, #1
 80013fc:	d105      	bne.n	800140a <usb_log_ep0_out+0x26>
 80013fe:	4904      	ldr	r1, [pc, #16]	; (8001410 <usb_log_ep0_out+0x2c>)
 8001400:	4620      	mov	r0, r4
 8001402:	f7ff f965 	bl	80006d0 <_usb_ep_read>
      if(rx_size == 0)return 1;
 8001406:	2001      	movs	r0, #1
        return 1;
      }
    }
  }
  return 0;
}
 8001408:	bd10      	pop	{r4, pc}
  return 0;
 800140a:	2000      	movs	r0, #0
 800140c:	e7fc      	b.n	8001408 <usb_log_ep0_out+0x24>
 800140e:	bf00      	nop
 8001410:	2000001a 	andcs	r0, r0, sl, lsl r0

08001414 <usb_log_init>:
void usb_log_init(){
 8001414:	b510      	push	{r4, lr}
  usb_ep_init( ENDP_LOG_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 8001416:	2300      	movs	r3, #0
 8001418:	2208      	movs	r2, #8
 800141a:	2103      	movs	r1, #3
 800141c:	2086      	movs	r0, #134	; 0x86
 800141e:	f7fe ff3b 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_LOG_IN   | 0x80, USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
 8001422:	2300      	movs	r3, #0
 8001424:	2220      	movs	r2, #32
 8001426:	2102      	movs	r1, #2
 8001428:	2083      	movs	r0, #131	; 0x83
 800142a:	f7fe ff35 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_LOG_OUT,         USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
}
 800142e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_ep_init( ENDP_LOG_OUT,         USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
 8001432:	2300      	movs	r3, #0
 8001434:	2220      	movs	r2, #32
 8001436:	2102      	movs	r1, #2
 8001438:	2003      	movs	r0, #3
 800143a:	f7fe bf2d 	b.w	8000298 <usb_ep_init>

0800143e <log_dir>:

void log_dir(uint8_t dir_tx){
  if(dir_tx){
    fifo_str("⍄");
 800143e:	2104      	movs	r1, #4
  if(dir_tx){
 8001440:	b110      	cbz	r0, 8001448 <log_dir+0xa>
    fifo_str("⍄");
 8001442:	4802      	ldr	r0, [pc, #8]	; (800144c <log_dir+0xe>)
  }else{
    fifo_str("⍃");
 8001444:	f7ff bf80 	b.w	8001348 <fifo_write>
 8001448:	4801      	ldr	r0, [pc, #4]	; (8001450 <log_dir+0x12>)
 800144a:	e7fb      	b.n	8001444 <log_dir+0x6>
 800144c:	08001804 	stmdaeq	r0, {r2, fp, ip}
 8001450:	08001808 	stmdaeq	r0, {r3, fp, ip}

08001454 <usb_log_grab>:
  }
}

void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 8001454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001458:	4604      	mov	r4, r0
 800145a:	460d      	mov	r5, r1
 800145c:	4616      	mov	r6, r2
  static uint8_t dir_prev = 0xFF;
  uint16_t av = fifo_free_size();
 800145e:	f7ff ff69 	bl	8001334 <fifo_data_size>
 8001462:	f5c0 707f 	rsb	r0, r0, #1020	; 0x3fc
 8001466:	3003      	adds	r0, #3
  if(av < 10)return;
 8001468:	b280      	uxth	r0, r0
 800146a:	2809      	cmp	r0, #9
 800146c:	d938      	bls.n	80014e0 <usb_log_grab+0x8c>
  
  if(dir_prev != dir_tx){
 800146e:	4b1d      	ldr	r3, [pc, #116]	; (80014e4 <usb_log_grab+0x90>)
 8001470:	79da      	ldrb	r2, [r3, #7]
 8001472:	42a2      	cmp	r2, r4
 8001474:	d007      	beq.n	8001486 <usb_log_grab+0x32>
    dir_prev = dir_tx;
    fifo_str("\r\n");
 8001476:	481c      	ldr	r0, [pc, #112]	; (80014e8 <usb_log_grab+0x94>)
 8001478:	2103      	movs	r1, #3
    dir_prev = dir_tx;
 800147a:	71dc      	strb	r4, [r3, #7]
    fifo_str("\r\n");
 800147c:	f7ff ff64 	bl	8001348 <fifo_write>
    log_dir(dir_tx);
 8001480:	4620      	mov	r0, r4
 8001482:	f7ff ffdc 	bl	800143e <log_dir>
void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 8001486:	f04f 0a00 	mov.w	sl, #0
 800148a:	4653      	mov	r3, sl
      fifo_write(&buf[pi], i-pi);
      fifo_str("\r");
      log_dir(dir_tx);
    }else if(buf[i] == '\n'){
      fifo_write(&buf[pi], i-pi);
      fifo_str("\n\r");
 800148c:	4f17      	ldr	r7, [pc, #92]	; (80014ec <usb_log_grab+0x98>)
      fifo_str("\r");
 800148e:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80014f0 <usb_log_grab+0x9c>
 8001492:	fa1f f98a 	uxth.w	r9, sl
  for(i=0; i<size; i++){
 8001496:	45b1      	cmp	r9, r6
 8001498:	4649      	mov	r1, r9
 800149a:	eb05 0003 	add.w	r0, r5, r3
 800149e:	db04      	blt.n	80014aa <usb_log_grab+0x56>
    }
    
    pi = i+1;
  }
  fifo_write(&buf[pi], i-pi);
}
 80014a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  fifo_write(&buf[pi], i-pi);
 80014a4:	1ac9      	subs	r1, r1, r3
 80014a6:	f7ff bf4f 	b.w	8001348 <fifo_write>
    if(buf[i] == '\r'){
 80014aa:	5c6a      	ldrb	r2, [r5, r1]
 80014ac:	2a0d      	cmp	r2, #13
 80014ae:	d10f      	bne.n	80014d0 <usb_log_grab+0x7c>
      fifo_write(&buf[pi], i-pi);
 80014b0:	1ac9      	subs	r1, r1, r3
 80014b2:	f7ff ff49 	bl	8001348 <fifo_write>
      fifo_str("\r");
 80014b6:	2102      	movs	r1, #2
 80014b8:	4640      	mov	r0, r8
      fifo_str("\n\r");
 80014ba:	f7ff ff45 	bl	8001348 <fifo_write>
      log_dir(dir_tx);
 80014be:	4620      	mov	r0, r4
 80014c0:	f7ff ffbd 	bl	800143e <log_dir>
    pi = i+1;
 80014c4:	f109 0301 	add.w	r3, r9, #1
 80014c8:	b29b      	uxth	r3, r3
 80014ca:	f10a 0a01 	add.w	sl, sl, #1
 80014ce:	e7e0      	b.n	8001492 <usb_log_grab+0x3e>
    }else if(buf[i] == '\n'){
 80014d0:	2a0a      	cmp	r2, #10
 80014d2:	d1fa      	bne.n	80014ca <usb_log_grab+0x76>
      fifo_write(&buf[pi], i-pi);
 80014d4:	1ac9      	subs	r1, r1, r3
 80014d6:	f7ff ff37 	bl	8001348 <fifo_write>
      fifo_str("\n\r");
 80014da:	2103      	movs	r1, #3
 80014dc:	4638      	mov	r0, r7
 80014de:	e7ec      	b.n	80014ba <usb_log_grab+0x66>
}
 80014e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014e4:	2000001a 	andcs	r0, r0, sl, lsl r0
 80014e8:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 80014ec:	0800180f 	stmdaeq	r0, {r0, r1, r2, r3, fp, ip}
 80014f0:	08001810 	stmdaeq	r0, {r4, fp, ip}

080014f4 <usb_log_poll>:

void usb_log_poll(){
 80014f4:	b510      	push	{r4, lr}
  uint16_t size;
  USB_ALIGN uint8_t buf[ENDP_LOG_SIZE];
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 80014f6:	4c0e      	ldr	r4, [pc, #56]	; (8001530 <usb_log_poll+0x3c>)
void usb_log_poll(){
 80014f8:	b088      	sub	sp, #32
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 80014fa:	8822      	ldrh	r2, [r4, #0]
 80014fc:	f002 0230 	and.w	r2, r2, #48	; 0x30
 8001500:	2a30      	cmp	r2, #48	; 0x30
 8001502:	d008      	beq.n	8001516 <usb_log_poll+0x22>
    size = fifo_read(buf, sizeof(buf));
 8001504:	2120      	movs	r1, #32
 8001506:	4668      	mov	r0, sp
 8001508:	f7ff ff3c 	bl	8001384 <fifo_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 800150c:	4669      	mov	r1, sp
 800150e:	b282      	uxth	r2, r0
 8001510:	2006      	movs	r0, #6
 8001512:	f7ff f899 	bl	8000648 <_usb_ep_write>
    usb_ep_write( ENDP_LOG_IN | 0x80, (uint16_t*)buf, size );
  }
  if(usb_ep_ready( ENDP_LOG_OUT ) ){
 8001516:	8823      	ldrh	r3, [r4, #0]
 8001518:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800151c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001520:	d103      	bne.n	800152a <usb_log_poll+0x36>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8001522:	4669      	mov	r1, sp
 8001524:	2007      	movs	r0, #7
 8001526:	f7ff f8d3 	bl	80006d0 <_usb_ep_read>
    usb_ep_read( ENDP_LOG_OUT, (uint16_t*)buf);
  }
 800152a:	b008      	add	sp, #32
 800152c:	bd10      	pop	{r4, pc}
 800152e:	bf00      	nop
 8001530:	40005c0c 	andmi	r5, r0, ip, lsl #24

08001534 <Reset_Handler>:
 8001534:	2100      	movs	r1, #0
 8001536:	e003      	b.n	8001540 <LoopCopyDataInit>

08001538 <CopyDataInit>:
 8001538:	4b0a      	ldr	r3, [pc, #40]	; (8001564 <LoopFillZerobss+0x10>)
 800153a:	585b      	ldr	r3, [r3, r1]
 800153c:	5043      	str	r3, [r0, r1]
 800153e:	3104      	adds	r1, #4

08001540 <LoopCopyDataInit>:
 8001540:	4809      	ldr	r0, [pc, #36]	; (8001568 <LoopFillZerobss+0x14>)
 8001542:	4b0a      	ldr	r3, [pc, #40]	; (800156c <LoopFillZerobss+0x18>)
 8001544:	1842      	adds	r2, r0, r1
 8001546:	429a      	cmp	r2, r3
 8001548:	d3f6      	bcc.n	8001538 <CopyDataInit>
 800154a:	4a09      	ldr	r2, [pc, #36]	; (8001570 <LoopFillZerobss+0x1c>)
 800154c:	e002      	b.n	8001554 <LoopFillZerobss>

0800154e <FillZerobss>:
 800154e:	2300      	movs	r3, #0
 8001550:	f842 3b04 	str.w	r3, [r2], #4

08001554 <LoopFillZerobss>:
 8001554:	4b07      	ldr	r3, [pc, #28]	; (8001574 <LoopFillZerobss+0x20>)
 8001556:	429a      	cmp	r2, r3
 8001558:	d3f9      	bcc.n	800154e <FillZerobss>
 800155a:	f7fe fe38 	bl	80001ce <SystemInit>
 800155e:	f000 f80d 	bl	800157c <main>
 8001562:	4770      	bx	lr
 8001564:	08001814 	stmdaeq	r0, {r2, r4, fp, ip}
 8001568:	20000000 	andcs	r0, r0, r0
 800156c:	20000024 	andcs	r0, r0, r4, lsr #32
 8001570:	20000024 	andcs	r0, r0, r4, lsr #32
 8001574:	20000704 	andcs	r0, r0, r4, lsl #14

08001578 <BusFault_Handler>:
 8001578:	e7fe      	b.n	8001578 <BusFault_Handler>
	...

0800157c <main>:

int main(void){
 800157c:	b508      	push	{r3, lr}
  SysClockMax();
 800157e:	f7fe fdcf 	bl	8000120 <SysClockMax>
  systick_init();
 8001582:	f7ff fbe9 	bl	8000d58 <systick_init>
  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN;
 8001586:	4a23      	ldr	r2, [pc, #140]	; (8001614 <main+0x98>)

  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
  GPIO_config(USBR); GPIO_config(ADC_IN); GPIO_config(RESET); GPIO_config(BOOT0);
 8001588:	4823      	ldr	r0, [pc, #140]	; (8001618 <main+0x9c>)
  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN;
 800158a:	6993      	ldr	r3, [r2, #24]
  GPIO_config(USBR); GPIO_config(ADC_IN); GPIO_config(RESET); GPIO_config(BOOT0);
 800158c:	4923      	ldr	r1, [pc, #140]	; (800161c <main+0xa0>)
  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN;
 800158e:	f043 031c 	orr.w	r3, r3, #28
 8001592:	6193      	str	r3, [r2, #24]
  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(YLED);
 8001594:	4b22      	ldr	r3, [pc, #136]	; (8001620 <main+0xa4>)
 8001596:	681a      	ldr	r2, [r3, #0]
 8001598:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800159c:	f442 1240 	orr.w	r2, r2, #3145728	; 0x300000
 80015a0:	601a      	str	r2, [r3, #0]
 80015a2:	681a      	ldr	r2, [r3, #0]
 80015a4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80015a8:	f042 5240 	orr.w	r2, r2, #805306368	; 0x30000000
 80015ac:	601a      	str	r2, [r3, #0]
 80015ae:	681a      	ldr	r2, [r3, #0]
 80015b0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80015b4:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 80015b8:	601a      	str	r2, [r3, #0]
  GPIO_config(USBR); GPIO_config(ADC_IN); GPIO_config(RESET); GPIO_config(BOOT0);
 80015ba:	681a      	ldr	r2, [r3, #0]
 80015bc:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 80015c0:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 80015c4:	601a      	str	r2, [r3, #0]
 80015c6:	681a      	ldr	r2, [r3, #0]
 80015c8:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80015cc:	601a      	str	r2, [r3, #0]
 80015ce:	6842      	ldr	r2, [r0, #4]
 80015d0:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80015d4:	f442 1240 	orr.w	r2, r2, #3145728	; 0x300000
 80015d8:	6042      	str	r2, [r0, #4]
 80015da:	684a      	ldr	r2, [r1, #4]
 80015dc:	f022 020f 	bic.w	r2, r2, #15
 80015e0:	f042 0203 	orr.w	r2, r2, #3
 80015e4:	604a      	str	r2, [r1, #4]
  
  GPO_OFF(RLED); GPO_OFF(GLED); GPO_OFF(YLED);
 80015e6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 80015ea:	611a      	str	r2, [r3, #16]
 80015ec:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80015f0:	611a      	str	r2, [r3, #16]
 80015f2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80015f6:	611a      	str	r2, [r3, #16]
  GPO_OFF(RESET); GPO_OFF(BOOT0); GPO_OFF(USBR);
 80015f8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80015fc:	6102      	str	r2, [r0, #16]
 80015fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001602:	610a      	str	r2, [r1, #16]
 8001604:	2204      	movs	r2, #4
 8001606:	611a      	str	r2, [r3, #16]
  
  USB_setup();
 8001608:	f7fe fdf1 	bl	80001ee <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 800160c:	b662      	cpsie	i
  __enable_irq();
  
  //uint32_t ntime_ms = 0;

  while(1){
    usb_class_poll();
 800160e:	f7ff fb7b 	bl	8000d08 <usb_class_poll>
 8001612:	e7fc      	b.n	800160e <main+0x92>
 8001614:	40021000 	andmi	r1, r2, r0
 8001618:	40011000 	andmi	r1, r1, r0
 800161c:	40010800 	andmi	r0, r1, r0, lsl #16
 8001620:	40010c00 	andmi	r0, r1, r0, lsl #24
	...

08001626 <USB_HIDDescriptor>:
 8001626:	09ff0006 	ldmibeq	pc!, {r1, r2}^	; <UNPREDICTABLE>
 800162a:	1501a101 	strne	sl, [r1, #-257]	; 0xfffffeff
 800162e:	75ff2500 	ldrbvc	r2, [pc, #1280]!	; 8001b36 <_etext+0x322>
 8001632:	09029508 	stmdbeq	r2, {r3, r8, sl, ip, pc}
 8001636:	0102b200 	mrseq	fp, R10_usr
 800163a:	 	andne	r1, r1, r0, asr #5

0800163b <USB_DeviceDescriptor>:
 800163b:	01100112 	tsteq	r0, r2, lsl r1
 800163f:	080102ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9}
 8001643:	05df16c0 	ldrbeq	r1, [pc, #1728]	; 8001d0b <_etext+0x4f7>
 8001647:	02010001 	andeq	r0, r1, #1
 800164b:	 	andeq	r0, r9, #-1073741824	; 0xc0000000

0800164d <USB_ConfigDescriptor>:
 800164d:	01440209 	cmpeq	r4, r9, lsl #4
 8001651:	80000109 	andhi	r0, r0, r9, lsl #2
 8001655:	00040932 	andeq	r0, r4, r2, lsr r9
 8001659:	00030000 	andeq	r0, r3, r0
 800165d:	21090000 	mrscs	r0, (UNDEF: 9)
 8001661:	01000101 	tsteq	r0, r1, lsl #2
 8001665:	08001522 	stmdaeq	r0, {r1, r5, r8, sl, ip}
 8001669:	0202010b 	andeq	r0, r2, #-1073741822	; 0xc0000002
 800166d:	09040002 	stmdbeq	r4, {r1}
 8001671:	01000104 	tsteq	r0, r4, lsl #2
 8001675:	04000202 	streq	r0, [r0], #-514	; 0xfffffdfe
 8001679:	10002405 	andne	r2, r0, r5, lsl #8
 800167d:	01240501 			; <UNDEFINED> instruction: 0x01240501
 8001681:	24040200 	strcs	r0, [r4], #-512	; 0xfffffe00
 8001685:	24050202 	strcs	r0, [r5], #-514	; 0xfffffdfe
 8001689:	07020106 	streq	r0, [r2, -r6, lsl #2]
 800168d:	08038405 	stmdaeq	r3, {r0, r2, sl, pc}
 8001691:	04096400 	streq	r6, [r9], #-1024	; 0xfffffc00
 8001695:	0a020002 	beq	80816a5 <_etext+0x7fe91>
 8001699:	07000000 	streq	r0, [r0, -r0]
 800169d:	20020105 	andcs	r0, r2, r5, lsl #2
 80016a1:	05070000 	streq	r0, [r7, #-0]
 80016a5:	00200281 	eoreq	r0, r0, r1, lsl #5
 80016a9:	030b0800 	movweq	r0, #47104	; 0xb800
 80016ad:	00020202 	andeq	r0, r2, r2, lsl #4
 80016b1:	03040905 	movweq	r0, #18693	; 0x4905
 80016b5:	02020100 	andeq	r0, r2, #0, 2
 80016b9:	24050500 	strcs	r0, [r5], #-1280	; 0xfffffb00
 80016bd:	05011000 	streq	r1, [r1, #-0]
 80016c1:	04000124 	streq	r0, [r0], #-292	; 0xfffffedc
 80016c5:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 80016c9:	03062405 	movweq	r2, #25605	; 0x6405
 80016cd:	85050704 	strhi	r0, [r5, #-1796]	; 0xfffff8fc
 80016d1:	64000803 	strvs	r0, [r0], #-2051	; 0xfffff7fd
 80016d5:	00040409 	andeq	r0, r4, r9, lsl #8
 80016d9:	00000a02 	andeq	r0, r0, r2, lsl #20
 80016dd:	02050700 	andeq	r0, r5, #0, 14
 80016e1:	00002002 	andeq	r2, r0, r2
 80016e5:	02820507 	addeq	r0, r2, #29360128	; 0x1c00000
 80016e9:	08000020 	stmdaeq	r0, {r5}
 80016ed:	0203050b 	andeq	r0, r3, #46137344	; 0x2c00000
 80016f1:	09060002 	stmdbeq	r6, {r1}
 80016f5:	01000504 	tsteq	r0, r4, lsl #10
 80016f9:	06000202 	streq	r0, [r0], -r2, lsl #4
 80016fd:	10002405 	andne	r2, r0, r5, lsl #8
 8001701:	01240501 			; <UNDEFINED> instruction: 0x01240501
 8001705:	24040600 	strcs	r0, [r4], #-1536	; 0xfffffa00
 8001709:	24050202 	strcs	r0, [r5], #-514	; 0xfffffdfe
 800170d:	07060506 	streq	r0, [r6, -r6, lsl #10]
 8001711:	08038605 	stmdaeq	r3, {r0, r2, r9, sl, pc}
 8001715:	04096400 	streq	r6, [r9], #-1024	; 0xfffffc00
 8001719:	0a020006 	beq	8081739 <_etext+0x7ff25>
 800171d:	07000000 	streq	r0, [r0, -r0]
 8001721:	20020305 	andcs	r0, r2, r5, lsl #6
 8001725:	05070000 	streq	r0, [r7, #-0]
 8001729:	00200283 	eoreq	r0, r0, r3, lsl #5
 800172d:	070b0800 	streq	r0, [fp, -r0, lsl #16]
 8001731:	00010102 	andeq	r0, r1, r2, lsl #2
 8001735:	07040900 	streq	r0, [r4, -r0, lsl #18]
 8001739:	01010000 	mrseq	r0, (UNDEF: 1)
 800173d:	24090000 	strcs	r0, [r9], #-0
 8001741:	1e010001 	cdpne	0, 0, cr0, cr1, cr1, {0}
 8001745:	0c080100 	stfeqs	f0, [r8], {-0}
 8001749:	01010224 	tsteq	r1, r4, lsr #4
 800174d:	00010002 	andeq	r0, r1, r2
 8001751:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 8001755:	01020324 	tsteq	r2, r4, lsr #6
 8001759:	00010001 	andeq	r0, r1, r1
 800175d:	00080409 	andeq	r0, r8, r9, lsl #8
 8001761:	00020100 	andeq	r0, r2, r0, lsl #2
 8001765:	08040900 	stmdaeq	r4, {r8, fp}
 8001769:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 800176d:	24070000 	strcs	r0, [r7], #-0
 8001771:	01010201 	tsteq	r1, r1, lsl #4
 8001775:	02240b00 	eoreq	r0, r4, #0, 22
 8001779:	10020101 	andne	r0, r2, r1, lsl #2
 800177d:	00abe001 	adceq	lr, fp, r1
 8001781:	01870509 	orreq	r0, r7, r9, lsl #10
 8001785:	00010064 	andeq	r0, r1, r4, rrx
 8001789:	01250700 			; <UNDEFINED> instruction: 0x01250700
 800178d:	00000000 	andeq	r0, r0, r0

08001791 <USB_DeviceQualifierDescriptor>:
 8001791:	0200060a 	andeq	r0, r0, #10485760	; 0xa00000
 8001795:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 8001799:	 	streq	r0, [r0], #-1

0800179c <USB_StringLangDescriptor>:
 800179c:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

080017a0 <USB_StringManufacturingDescriptor>:
 80017a0:	00430316 	subeq	r0, r3, r6, lsl r3
 80017a4:	004b004f 	subeq	r0, fp, pc, asr #32
 80017a8:	004f0050 	subeq	r0, pc, r0, asr r0	; <UNPREDICTABLE>
 80017ac:	00450057 	subeq	r0, r5, r7, asr r0
 80017b0:	00450048 	subeq	r0, r5, r8, asr #32
 80017b4:	 			; <UNDEFINED> instruction: 0x032a0055

080017b6 <USB_StringProdDescriptor>:
 80017b6:	0055032a 	subseq	r0, r5, sl, lsr #6
 80017ba:	00420053 	subeq	r0, r2, r3, asr r0
 80017be:	00520020 	subseq	r0, r2, r0, lsr #32
 80017c2:	00530049 	subseq	r0, r3, r9, asr #32
 80017c6:	00560043 	subseq	r0, r6, r3, asr #32
 80017ca:	00700020 	rsbseq	r0, r0, r0, lsr #32
 80017ce:	006f0072 	rsbeq	r0, pc, r2, ror r0	; <UNPREDICTABLE>
 80017d2:	00720067 	rsbseq	r0, r2, r7, rrx
 80017d6:	006d0061 	rsbeq	r0, sp, r1, rrx
 80017da:	0065006d 	rsbeq	r0, r5, sp, rrx
 80017de:	 	movweq	r0, #16498	; 0x4072

080017e0 <USB_StringSerialDescriptor>:
 80017e0:	00310304 	eorseq	r0, r1, r4, lsl #6

080017e4 <USB_String_TTY>:
 80017e4:	00440308 	subeq	r0, r4, r8, lsl #6
 80017e8:	00470042 	subeq	r0, r7, r2, asr #32

080017ec <USB_String_PROGR>:
 80017ec:	00530310 	subseq	r0, r3, r0, lsl r3
 80017f0:	00460054 	subeq	r0, r6, r4, asr r0
 80017f4:	0041004c 	subeq	r0, r1, ip, asr #32
 80017f8:	00480053 	subeq	r0, r8, r3, asr r0

080017fc <USB_String_LOG>:
 80017fc:	004c0308 	subeq	r0, ip, r8, lsl #6
 8001800:	0047004f 	subeq	r0, r7, pc, asr #32
 8001804:	00848de2 	addeq	r8, r4, r2, ror #27
 8001808:	00838de2 	addeq	r8, r3, r2, ror #27
 800180c:	0a000a0d 	beq	8004048 <_etext+0x2834>
 8001810:	0000000d 	andeq	r0, r0, sp

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

20000004 <filter.5057>:
20000004:	00800000 	addeq	r0, r0, r0

20000008 <filter.5133>:
20000008:	00200000 	eoreq	r0, r0, r0

2000000c <tty_cfg>:
volatile struct cdc_linecoding tty_cfg = {
2000000c:	00002580 	andeq	r2, r0, r0, lsl #11
20000010:	 	andhi	r0, r8, r1

20000013 <progr_cfg>:
volatile struct cdc_linecoding progr_cfg = {
20000013:	00002580 	andeq	r2, r0, r0, lsl #11
20000017:	 	andhi	r0, r8, r1

2000001a <log_cfg>:
volatile struct cdc_linecoding log_cfg = {
2000001a:	00002580 	andeq	r2, r0, r0, lsl #11
2000001e:	 			; <UNDEFINED> instruction: 0xff080001

20000021 <dir_prev.4426>:
20000021:	Address 0x0000000020000021 is out of bounds.


Disassembly of section .bss:

20000024 <ep0_buf>:
20000024:	00000000 	andeq	r0, r0, r0

20000028 <ep0_count>:
	...

2000002a <setup_packet>:
	...

20000032 <bytesread.4439>:
	...

20000034 <configuration>:
static uint8_t configuration = 0;
20000034:	00000000 	andeq	r0, r0, r0

20000038 <adc_idx>:
	...

20000039 <oversampl_cnt.5142>:
	...

2000003a <curval.5143>:
	...

2000003c <adc_vref>:
	...

2000003e <adc_val>:
	...

20000040 <adc_timeH>:
	...

20000042 <adc_timeL>:
	...

20000044 <resdata.5160>:
20000044:	00000000 	andeq	r0, r0, r0

20000048 <hid_timeout>:
static volatile uint32_t hid_timeout = 0;
20000048:	00000000 	andeq	r0, r0, r0

2000004c <ntime_ms.5129>:
2000004c:	00000000 	andeq	r0, r0, r0

20000050 <systick_internal>:
volatile uint32_t systick_internal = 0;
20000050:	00000000 	andeq	r0, r0, r0

20000054 <uart1_rx>:
	...

20000156 <uart1_tx>:
	...

20000258 <ttymode>:
volatile char ttymode = TTYM_NORMAL;
20000258:	00000000 	andeq	r0, r0, r0

2000025c <timeout_ms>:
volatile uint32_t timeout_ms = 0;
2000025c:	00000000 	andeq	r0, r0, r0

20000260 <initflag>:
static char initflag = 0;
20000260:	00000000 	andeq	r0, r0, r0

20000264 <epfunc_in>:
	...

20000284 <epfunc_out>:
	...

200002a4 <hid_data>:
	...

200002a6 <adc_buffer>:
	...

200002fe <fifo>:
	...

Disassembly of section ._usrstack:

20000704 <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10cfd24>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2931622b 	ldmdbcs	r1!, {r0, r1, r3, r5, r9, sp, lr}
  18:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
  1c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  20:	30393130 	eorscc	r3, r9, r0, lsr r1
  24:	20333037 	eorscs	r3, r3, r7, lsr r0
  28:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  2c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  30:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
  34:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
  38:	6172622d 	cmnvs	r2, sp, lsr #4
  3c:	2068636e 	rsbcs	r6, r8, lr, ror #6
  40:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  44:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  48:	33373220 	teqcc	r7, #32, 4
  4c:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__Stack_Size+0x4503c>
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000120 	stmdaeq	r0, {r5, r8}
  14:	000000bc 	strheq	r0, [r0], -ip
  18:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
  1c:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	05bb0002 	ldreq	r0, [fp, #2]!
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  3c:	00000684 	andeq	r0, r0, r4, lsl #13
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	193c0002 	ldmdbne	ip!, {r1}
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000860 	stmdaeq	r0, {r5, r6, fp}
  5c:	000004f8 	strdeq	r0, [r0], -r8
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	3aab0002 	bcc	feac007c <BootRAM+0xda3081d>
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	3c440002 	mcrrcc	0, 0, r0, r4, cr2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
  9c:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	50d90002 	sbcspl	r0, r9, r2
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
  bc:	00000200 	andeq	r0, r0, r0, lsl #4
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000005b7 			; <UNDEFINED> instruction: 0x000005b7
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000012 	andeq	r0, r0, r2, lsl r0
      10:	00021b0c 	andeq	r1, r2, ip, lsl #22
      14:	0000f800 	andeq	pc, r0, r0, lsl #16
      18:	00005000 	andeq	r5, r0, r0
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000188 	andeq	r0, r0, r8, lsl #3
      30:	0001e603 	andeq	lr, r1, r3, lsl #12
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	34050202 	strcc	r0, [r5], #-514	; 0xfffffdfe
      40:	02000002 	andeq	r0, r0, #2
      44:	02020504 	andeq	r0, r2, #4, 10	; 0x1000000
      48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      4c:	0001fd05 	andeq	pc, r1, r5, lsl #26
      50:	01e50300 	mvneq	r0, r0, lsl #6
      54:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
      58:	00006218 	andeq	r6, r0, r8, lsl r2
      5c:	00510400 	subseq	r0, r1, r0, lsl #8
      60:	01020000 	mrseq	r0, (UNDEF: 2)
      64:	00018608 	andeq	r8, r1, r8, lsl #12
      68:	07020200 	streq	r0, [r2, -r0, lsl #4]
      6c:	0000015e 	andeq	r0, r0, lr, asr r1
      70:	00024a03 	andeq	r4, r2, r3, lsl #20
      74:	19340400 	ldmdbne	r4!, {sl}
      78:	00000081 	andeq	r0, r0, r1, lsl #1
      7c:	00007005 	andeq	r7, r0, r5
      80:	07040200 	streq	r0, [r4, -r0, lsl #4]
      84:	000001d3 	ldrdeq	r0, [r0], -r3
      88:	ce070802 	cdpgt	8, 0, cr0, cr7, cr2, {0}
      8c:	06000001 	streq	r0, [r0], -r1
      90:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
      94:	8f050074 	svchi	0x00050074
      98:	02000000 	andeq	r0, r0, #0
      9c:	01d80704 	bicseq	r0, r8, r4, lsl #14
      a0:	53070000 	movwpl	r0, #28672	; 0x7000
      a4:	03000002 	movweq	r0, #2
      a8:	961506ce 	ldrls	r0, [r5], -lr, asr #13
      ac:	01000000 	mrseq	r0, (UNDEF: 0)
      b0:	020b0801 	andeq	r0, fp, #65536	; 0x10000
      b4:	45050000 	strmi	r0, [r5, #-0]
      b8:	00007011 	andeq	r7, r0, r1, lsl r0
      bc:	09010100 	stmdbeq	r1, {r8}
      c0:	0000005d 	andeq	r0, r0, sp, asr r0
      c4:	000000cf 	andeq	r0, r0, pc, asr #1
      c8:	00009b0a 	andeq	r9, r0, sl, lsl #22
      cc:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
      d0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d4:	00015008 	andeq	r5, r1, r8
      d8:	17460500 	strbne	r0, [r6, -r0, lsl #10]
      dc:	000000cf 	andeq	r0, r0, pc, asr #1
      e0:	5d090101 	stfpls	f0, [r9, #-4]
      e4:	f2000000 	vhadd.s8	d0, d0, d0
      e8:	0a000000 	beq	f0 <_Minimum_Stack_Size-0x10>
      ec:	0000009b 	muleq	r0, fp, r0
      f0:	e2040007 	and	r0, r4, #7
      f4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      f8:	00000226 	andeq	r0, r0, r6, lsr #4
      fc:	f2174705 	vabd.s16	d4, d7, d5
     100:	01000000 	mrseq	r0, (UNDEF: 0)
     104:	06240b01 	strteq	r0, [r4], -r1, lsl #22
     108:	9d090158 	stflss	f0, [r9, #-352]	; 0xfffffea0
     10c:	0c000001 	stceq	0, cr0, [r0], {1}
     110:	00524341 	subseq	r4, r2, r1, asr #6
     114:	11015a06 	tstne	r1, r6, lsl #20
     118:	0000007c 	andeq	r0, r0, ip, ror r0
     11c:	0d002302 	stceq	3, cr2, [r0, #-8]
     120:	00000181 	andeq	r0, r0, r1, lsl #3
     124:	11015b06 	tstne	r1, r6, lsl #22
     128:	0000007c 	andeq	r0, r0, ip, ror r0
     12c:	0d042302 	stceq	3, cr2, [r4, #-8]
     130:	0000017e 	andeq	r0, r0, lr, ror r1
     134:	11015c06 	tstne	r1, r6, lsl #24
     138:	0000007c 	andeq	r0, r0, ip, ror r0
     13c:	0c082302 	stceq	3, cr2, [r8], {2}
     140:	06005253 			; <UNDEFINED> instruction: 0x06005253
     144:	7c11015d 	ldfvcs	f0, [r1], {93}	; 0x5d
     148:	02000000 	andeq	r0, r0, #0
     14c:	430c0c23 	movwmi	r0, #52259	; 0xcc23
     150:	5e060052 	mcrpl	0, 0, r0, cr6, cr2, {2}
     154:	007c1101 	rsbseq	r1, ip, r1, lsl #2
     158:	23020000 	movwcs	r0, #8192	; 0x2000
     15c:	52410c10 	subpl	r0, r1, #16, 24	; 0x1000
     160:	015f0600 	cmpeq	pc, r0, lsl #12
     164:	00007c11 	andeq	r7, r0, r1, lsl ip
     168:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     16c:	0001940d 	andeq	r9, r1, sp, lsl #8
     170:	01600600 	cmneq	r0, r0, lsl #12
     174:	00007c11 	andeq	r7, r0, r1, lsl ip
     178:	18230200 	stmdane	r3!, {r9}
     17c:	52424f0c 	subpl	r4, r2, #12, 30	; 0x30
     180:	01610600 	cmneq	r1, r0, lsl #12
     184:	00007c11 	andeq	r7, r0, r1, lsl ip
     188:	1c230200 	sfmne	f0, 4, [r3], #-0
     18c:	0000c90d 	andeq	ip, r0, sp, lsl #18
     190:	01620600 	cmneq	r2, r0, lsl #12
     194:	00007c11 	andeq	r7, r0, r1, lsl ip
     198:	20230200 	eorcs	r0, r3, r0, lsl #4
     19c:	00a50e00 	adceq	r0, r5, r0, lsl #28
     1a0:	63060000 	movwvs	r0, #24576	; 0x6000
     1a4:	01050301 	tsteq	r5, r1, lsl #6
     1a8:	1c0b0000 	stcne	0, cr0, [fp], {-0}
     1ac:	09017906 	stmdbeq	r1, {r1, r2, r8, fp, ip, sp, lr}
     1b0:	00000225 	andeq	r0, r0, r5, lsr #4
     1b4:	4c52430c 	mrrcmi	3, 0, r4, r2, cr12
     1b8:	017b0600 	cmneq	fp, r0, lsl #12
     1bc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1c0:	00230200 	eoreq	r0, r3, r0, lsl #4
     1c4:	4852430c 	ldmdami	r2, {r2, r3, r8, r9, lr}^
     1c8:	017c0600 	cmneq	ip, r0, lsl #12
     1cc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     1d4:	5244490c 	subpl	r4, r4, #12, 18	; 0x30000
     1d8:	017d0600 	cmneq	sp, r0, lsl #12
     1dc:	00007c11 	andeq	r7, r0, r1, lsl ip
     1e0:	08230200 	stmdaeq	r3!, {r9}
     1e4:	52444f0c 	subpl	r4, r4, #12, 30	; 0x30
     1e8:	017e0600 	cmneq	lr, r0, lsl #12
     1ec:	00007c11 	andeq	r7, r0, r1, lsl ip
     1f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     1f4:	0000b30d 	andeq	fp, r0, sp, lsl #6
     1f8:	017f0600 	cmneq	pc, r0, lsl #12
     1fc:	00007c11 	andeq	r7, r0, r1, lsl ip
     200:	10230200 	eorne	r0, r3, r0, lsl #4
     204:	5252420c 	subspl	r4, r2, #12, 4	; 0xc0000000
     208:	01800600 	orreq	r0, r0, r0, lsl #12
     20c:	00007c11 	andeq	r7, r0, r1, lsl ip
     210:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     214:	0002660d 	andeq	r6, r2, sp, lsl #12
     218:	01810600 	orreq	r0, r1, r0, lsl #12
     21c:	00007c11 	andeq	r7, r0, r1, lsl ip
     220:	18230200 	stmdane	r3!, {r9}
     224:	00da0e00 	sbcseq	r0, sl, r0, lsl #28
     228:	82060000 	andhi	r0, r6, #0
     22c:	01aa0301 			; <UNDEFINED> instruction: 0x01aa0301
     230:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
     234:	0901bb06 	stmdbeq	r1, {r1, r2, r8, r9, fp, ip, sp, pc}
     238:	000002dc 	ldrdeq	r0, [r0], -ip
     23c:	0052430c 	subseq	r4, r2, ip, lsl #6
     240:	1101bd06 	tstne	r1, r6, lsl #26
     244:	0000007c 	andeq	r0, r0, ip, ror r0
     248:	0d002302 	stceq	3, cr2, [r0, #-8]
     24c:	0000000d 	andeq	r0, r0, sp
     250:	1101be06 	tstne	r1, r6, lsl #28
     254:	0000007c 	andeq	r0, r0, ip, ror r0
     258:	0c042302 	stceq	3, cr2, [r4], {2}
     25c:	00524943 	subseq	r4, r2, r3, asr #18
     260:	1101bf06 	tstne	r1, r6, lsl #30
     264:	0000007c 	andeq	r0, r0, ip, ror r0
     268:	0d082302 	stceq	3, cr2, [r8, #-8]
     26c:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
     270:	1101c006 	tstne	r1, r6
     274:	0000007c 	andeq	r0, r0, ip, ror r0
     278:	0d0c2302 	stceq	3, cr2, [ip, #-8]
     27c:	0000019d 	muleq	r0, sp, r1
     280:	1101c106 	tstne	r1, r6, lsl #2
     284:	0000007c 	andeq	r0, r0, ip, ror r0
     288:	0d102302 	ldceq	3, cr2, [r0, #-8]
     28c:	000000b8 	strheq	r0, [r0], -r8
     290:	1101c206 	tstne	r1, r6, lsl #4
     294:	0000007c 	andeq	r0, r0, ip, ror r0
     298:	0d142302 	ldceq	3, cr2, [r4, #-8]
     29c:	00000000 	andeq	r0, r0, r0
     2a0:	1101c306 	tstne	r1, r6, lsl #6
     2a4:	0000007c 	andeq	r0, r0, ip, ror r0
     2a8:	0d182302 	ldceq	3, cr2, [r8, #-8]
     2ac:	000001ab 	andeq	r0, r0, fp, lsr #3
     2b0:	1101c406 	tstne	r1, r6, lsl #8
     2b4:	0000007c 	andeq	r0, r0, ip, ror r0
     2b8:	0d1c2302 	ldceq	3, cr2, [ip, #-8]
     2bc:	00000008 	andeq	r0, r0, r8
     2c0:	1101c506 	tstne	r1, r6, lsl #10
     2c4:	0000007c 	andeq	r0, r0, ip, ror r0
     2c8:	0c202302 	stceq	3, cr2, [r0], #-8
     2cc:	00525343 	subseq	r5, r2, r3, asr #6
     2d0:	1101c606 	tstne	r1, r6, lsl #12
     2d4:	0000007c 	andeq	r0, r0, ip, ror r0
     2d8:	00242302 	eoreq	r2, r4, r2, lsl #6
     2dc:	00023e0e 	andeq	r3, r2, lr, lsl #28
     2e0:	01c90600 	biceq	r0, r9, r0, lsl #12
     2e4:	00023203 	andeq	r3, r2, r3, lsl #4
     2e8:	00e70800 	rsceq	r0, r7, r0, lsl #16
     2ec:	05070000 	streq	r0, [r7, #-0]
     2f0:	00007c1a 	andeq	r7, r0, sl, lsl ip
     2f4:	0f010100 	svceq	0x00010100
     2f8:	0001a601 	andeq	sl, r1, r1, lsl #12
     2fc:	050f0200 	streq	r0, [pc, #-512]	; 104 <_Minimum_Stack_Size+0x4>
     300:	00008f01 	andeq	r8, r0, r1, lsl #30
     304:	00157c00 	andseq	r7, r5, r0, lsl #24
     308:	00162408 	andseq	r2, r6, r8, lsl #8
     30c:	00000008 	andeq	r0, r0, r8
     310:	04b40100 	ldrteq	r0, [r4], #256	; 0x100
     314:	94100000 	ldrls	r0, [r0], #-0
     318:	a2080015 	andge	r0, r8, #21
     31c:	38080015 	stmdacc	r8, {r0, r2, r4}
     320:	11000003 	tstne	r0, r3
     324:	000001c9 	andeq	r0, r0, r9, asr #3
     328:	70031402 	andvc	r1, r3, r2, lsl #8
     32c:	24000000 	strcs	r0, [r0], #-0
     330:	20000000 	andcs	r0, r0, r0
     334:	00000000 	andeq	r0, r0, r0
     338:	00034a12 	andeq	r4, r3, r2, lsl sl
     33c:	01c91300 	biceq	r1, r9, r0, lsl #6
     340:	14020000 	strne	r0, [r2], #-0
     344:	00007003 	andeq	r7, r0, r3
     348:	a2100000 	andsge	r0, r0, #0
     34c:	ae080015 	mcrge	0, 0, r0, cr8, cr5, {0}
     350:	6c080015 	stcvs	0, cr0, [r8], {21}
     354:	11000003 	tstne	r0, r3
     358:	000001c9 	andeq	r0, r0, r9, asr #3
     35c:	70161402 	andsvc	r1, r6, r2, lsl #8
     360:	47000000 	strmi	r0, [r0, -r0]
     364:	43000000 	movwmi	r0, #0
     368:	00000000 	andeq	r0, r0, r0
     36c:	00037e12 	andeq	r7, r3, r2, lsl lr
     370:	01c91300 	biceq	r1, r9, r0, lsl #6
     374:	14020000 	strne	r0, [r2], #-0
     378:	00007016 	andeq	r7, r0, r6, lsl r0
     37c:	ae100000 	cdpge	0, 1, cr0, cr0, cr0, {0}
     380:	ba080015 	blt	2003dc <__Stack_Size+0x1ff3dc>
     384:	a0080015 	andge	r0, r8, r5, lsl r0
     388:	11000003 	tstne	r0, r3
     38c:	000001c9 	andeq	r0, r0, r9, asr #3
     390:	70291402 	eorvc	r1, r9, r2, lsl #8
     394:	6a000000 	bvs	39c <_Minimum_Stack_Size+0x29c>
     398:	66000000 	strvs	r0, [r0], -r0
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	0003b212 	andeq	fp, r3, r2, lsl r2
     3a4:	01c91300 	biceq	r1, r9, r0, lsl #6
     3a8:	14020000 	strne	r0, [r2], #-0
     3ac:	00007029 	andeq	r7, r0, r9, lsr #32
     3b0:	ba100000 	blt	4003b8 <__Stack_Size+0x3ff3b8>
     3b4:	c6080015 			; <UNDEFINED> instruction: 0xc6080015
     3b8:	d4080015 	strle	r0, [r8], #-21	; 0xffffffeb
     3bc:	11000003 	tstne	r0, r3
     3c0:	000001c9 	andeq	r0, r0, r9, asr #3
     3c4:	70031502 	andvc	r1, r3, r2, lsl #10
     3c8:	8d000000 	stchi	0, cr0, [r0, #-0]
     3cc:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
     3d0:	00000000 	andeq	r0, r0, r0
     3d4:	0003e612 	andeq	lr, r3, r2, lsl r6
     3d8:	01c91300 	biceq	r1, r9, r0, lsl #6
     3dc:	15020000 	strne	r0, [r2, #-0]
     3e0:	00007003 	andeq	r7, r0, r3
     3e4:	c6100000 	ldrgt	r0, [r0], -r0
     3e8:	ce080015 	mcrgt	0, 0, r0, cr8, cr5, {0}
     3ec:	08080015 	stmdaeq	r8, {r0, r2, r4}
     3f0:	11000004 	tstne	r0, r4
     3f4:	000001c9 	andeq	r0, r0, r9, asr #3
     3f8:	70161502 	andsvc	r1, r6, r2, lsl #10
     3fc:	b0000000 	andlt	r0, r0, r0
     400:	ac000000 	stcge	0, cr0, [r0], {-0}
     404:	00000000 	andeq	r0, r0, r0
     408:	00041a12 	andeq	r1, r4, r2, lsl sl
     40c:	01c91300 	biceq	r1, r9, r0, lsl #6
     410:	15020000 	strne	r0, [r2, #-0]
     414:	00007016 	andeq	r7, r0, r6, lsl r0
     418:	2c120000 	ldccs	0, cr0, [r2], {-0}
     41c:	13000004 	movwne	r0, #4
     420:	000001c9 	andeq	r0, r0, r9, asr #3
     424:	702b1502 	eorvc	r1, fp, r2, lsl #10
     428:	00000000 	andeq	r0, r0, r0
     42c:	00002014 	andeq	r2, r0, r4, lsl r0
     430:	00044a00 	andeq	r4, r4, r0, lsl #20
     434:	01c91100 	biceq	r1, r9, r0, lsl #2
     438:	15020000 	strne	r0, [r2, #-0]
     43c:	0000702b 	andeq	r7, r0, fp, lsr #32
     440:	0000d300 	andeq	sp, r0, r0, lsl #6
     444:	0000cf00 	andeq	ip, r0, r0, lsl #30
     448:	5c120000 	ldcpl	0, cr0, [r2], {-0}
     44c:	13000004 	movwne	r0, #4
     450:	000001c9 	andeq	r0, r0, r9, asr #3
     454:	703f1502 	eorsvc	r1, pc, r2, lsl #10
     458:	00000000 	andeq	r0, r0, r0
     45c:	00003814 	andeq	r3, r0, r4, lsl r8
     460:	00047a00 	andeq	r7, r4, r0, lsl #20
     464:	01c91100 	biceq	r1, r9, r0, lsl #2
     468:	15020000 	strne	r0, [r2, #-0]
     46c:	0000703f 	andeq	r7, r0, pc, lsr r0
     470:	0000f600 	andeq	pc, r0, r0, lsl #12
     474:	0000f200 	andeq	pc, r0, r0, lsl #4
     478:	2c150000 	ldccs	0, cr0, [r5], {-0}
     47c:	0c000005 	stceq	0, cr0, [r0], {5}
     480:	01080016 	tsteq	r8, r6, lsl r0
     484:	0800160c 	stmdaeq	r0, {r2, r3, r9, sl, ip}
     488:	0800160e 	stmdaeq	r0, {r1, r2, r3, r9, sl, ip}
     48c:	16031b02 	strne	r1, [r3], -r2, lsl #22
     490:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
     494:	00000503 	andeq	r0, r0, r3, lsl #10
     498:	00158616 	andseq	r8, r5, r6, lsl r6
     49c:	00059008 	andeq	r9, r5, r8
     4a0:	160c1600 	strne	r1, [ip], -r0, lsl #12
     4a4:	059e0800 	ldreq	r0, [lr, #2048]	; 0x800
     4a8:	12160000 	andsne	r0, r6, #0
     4ac:	ac080016 	stcge	0, cr0, [r8], {22}
     4b0:	00000005 	andeq	r0, r0, r5
     4b4:	02600117 	rsbeq	r0, r0, #-1073741819	; 0xc0000005
     4b8:	0b020000 	bleq	804c0 <__Stack_Size+0x7f4c0>
     4bc:	01d00106 	bicseq	r0, r0, r6, lsl #2
     4c0:	01dc0800 	bicseq	r0, ip, r0, lsl #16
     4c4:	7d020800 	stcvc	8, cr0, [r2, #-0]
     4c8:	04e30100 	strbteq	r0, [r3], #256	; 0x100
     4cc:	ed180000 	ldc	0, cr0, [r8, #-0]
     4d0:	02000001 	andeq	r0, r0, #1
     4d4:	0070150b 	rsbseq	r1, r0, fp, lsl #10
     4d8:	011b0000 	tsteq	fp, r0
     4dc:	01150000 	tsteq	r5, r0
     4e0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     4e4:	0001f201 	andeq	pc, r1, r1, lsl #4
     4e8:	1c090200 	sfmne	f0, 4, [r9], {-0}
     4ec:	0001ce01 	andeq	ip, r1, r1, lsl #28
     4f0:	0001d008 	andeq	sp, r1, r8
     4f4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     4f8:	ec011a01 			; <UNDEFINED> instruction: 0xec011a01
     4fc:	0200000c 	andeq	r0, r0, #12
     500:	1b011c08 	blne	47528 <__Stack_Size+0x46528>
     504:	0000ce01 	andeq	ip, r0, r1, lsl #28
     508:	080e0100 	stmdaeq	lr, {r8}
     50c:	00000030 	andeq	r0, r0, r0, lsr r0
     510:	00052c01 	andeq	r2, r5, r1, lsl #24
     514:	00691c00 	rsbeq	r1, r9, r0, lsl #24
     518:	700c0f01 	andvc	r0, ip, r1, lsl #30
     51c:	1c000000 	stcne	0, cr0, [r0], {-0}
     520:	00706d74 	rsbseq	r6, r0, r4, ror sp
     524:	700c1001 	andvc	r1, ip, r1
     528:	00000000 	andeq	r0, r0, r0
     52c:	0001bc1d 	andeq	fp, r1, sp, lsl ip
     530:	04b40300 	ldrteq	r0, [r4], #768	; 0x300
     534:	031e0316 	tsteq	lr, #1476395008	; 0x58000000
     538:	20000005 	andcs	r0, r0, r5
     53c:	cc080001 	stcgt	0, cr0, [r8], {1}
     540:	02080001 	andeq	r0, r8, #1
     544:	9001007d 	andls	r0, r1, sp, ror r0
     548:	1f000005 	svcne	0x00000005
     54c:	00000515 	andeq	r0, r0, r5, lsl r5
     550:	00000150 	andeq	r0, r0, r0, asr r1
     554:	00000146 	andeq	r0, r0, r6, asr #2
     558:	00051f20 	andeq	r1, r5, r0, lsr #30
     55c:	05032100 	streq	r2, [r3, #-256]	; 0xffffff00
     560:	01720000 	cmneq	r2, r0
     564:	00020800 	andeq	r0, r2, r0, lsl #16
     568:	01000000 	mrseq	r0, (UNDEF: 0)
     56c:	0022080e 	eoreq	r0, r2, lr, lsl #16
     570:	1f000000 	svcne	0x00000000
     574:	00000515 	andeq	r0, r0, r5, lsl r5
     578:	000001bb 			; <UNDEFINED> instruction: 0x000001bb
     57c:	000001a7 	andeq	r0, r0, r7, lsr #3
     580:	00051f1f 	andeq	r1, r5, pc, lsl pc
     584:	00027a00 	andeq	r7, r2, r0, lsl #20
     588:	00026200 	andeq	r6, r2, r0, lsl #4
     58c:	00000000 	andeq	r0, r0, r0
     590:	71010123 	tstvc	r1, r3, lsr #2
     594:	71000001 	tstvc	r0, r1
     598:	07000001 	streq	r0, [r0, -r1]
     59c:	01230608 			; <UNDEFINED> instruction: 0x01230608
     5a0:	0000bf01 	andeq	fp, r0, r1, lsl #30
     5a4:	0000bf00 	andeq	fp, r0, r0, lsl #30
     5a8:	06280800 	strteq	r0, [r8], -r0, lsl #16
     5ac:	41010123 	tstmi	r1, r3, lsr #2
     5b0:	41000001 	tstmi	r0, r1
     5b4:	08000001 	stmdaeq	r0, {r0}
     5b8:	7d000646 	stcvc	6, cr0, [r0, #-280]	; 0xfffffee8
     5bc:	02000013 	andeq	r0, r0, #19
     5c0:	00022000 	andeq	r2, r2, r0
     5c4:	12010400 	andne	r0, r1, #0, 8
     5c8:	0c000000 	stceq	0, cr0, [r0], {-0}
     5cc:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
     5d0:	000000f8 	strdeq	r0, [r0], -r8
     5d4:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
     5d8:	08000860 	stmdaeq	r0, {r5, r6, fp}
     5dc:	000002cc 	andeq	r0, r0, ip, asr #5
     5e0:	88060102 	stmdahi	r6, {r1, r8}
     5e4:	02000001 	andeq	r0, r0, #1
     5e8:	02340502 	eorseq	r0, r4, #8388608	; 0x800000
     5ec:	04020000 	streq	r0, [r2], #-0
     5f0:	00020205 	andeq	r0, r2, r5, lsl #4
     5f4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     5f8:	000001fd 	strdeq	r0, [r0], -sp
     5fc:	0001e503 	andeq	lr, r1, r3, lsl #10
     600:	182e0400 	stmdane	lr!, {sl}
     604:	00000057 	andeq	r0, r0, r7, asr r0
     608:	00004104 	andeq	r4, r0, r4, lsl #2
     60c:	00410500 	subeq	r0, r1, r0, lsl #10
     610:	01020000 	mrseq	r0, (UNDEF: 2)
     614:	00018608 	andeq	r8, r1, r8, lsl #12
     618:	05ee0300 	strbeq	r0, [lr, #768]!	; 0x300
     61c:	31040000 	mrscc	r0, (UNDEF: 4)
     620:	00007419 	andeq	r7, r0, r9, lsl r4
     624:	005e0400 	subseq	r0, lr, r0, lsl #8
     628:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     62c:	02000000 	andeq	r0, r0, #0
     630:	015e0702 	cmpeq	lr, r2, lsl #14
     634:	4a030000 	bmi	c063c <__Stack_Size+0xbf63c>
     638:	04000002 	streq	r0, [r0], #-2
     63c:	008c1934 	addeq	r1, ip, r4, lsr r9
     640:	7b040000 	blvc	100648 <__Stack_Size+0xff648>
     644:	02000000 	andeq	r0, r0, #0
     648:	01d30704 	bicseq	r0, r3, r4, lsl #14
     64c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     650:	0001ce07 	andeq	ip, r1, r7, lsl #28
     654:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     658:	00746e69 	rsbseq	r6, r4, r9, ror #28
     65c:	00009a04 	andeq	r9, r0, r4, lsl #20
     660:	07040200 	streq	r0, [r4, -r0, lsl #4]
     664:	000001d8 	ldrdeq	r0, [r0], -r8
     668:	00058103 	andeq	r8, r5, r3, lsl #2
     66c:	0f1d0300 	svceq	0x001d0300
     670:	000000b9 	strheq	r0, [r0], -r9
     674:	00bf0407 	adcseq	r0, pc, r7, lsl #8
     678:	01080000 	mrseq	r0, (UNDEF: 8)
     67c:	000000cb 	andeq	r0, r0, fp, asr #1
     680:	00004109 	andeq	r4, r0, r9, lsl #2
     684:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     688:	20091e03 	andcs	r1, r9, r3, lsl #28
     68c:	0b000001 	bleq	698 <_Minimum_Stack_Size+0x598>
     690:	000002e4 	andeq	r0, r0, r4, ror #5
     694:	410b1f03 	tstmi	fp, r3, lsl #30
     698:	02000000 	andeq	r0, r0, #0
     69c:	ed0b0023 	stc	0, cr0, [fp, #-140]	; 0xffffff74
     6a0:	03000006 	movweq	r0, #6
     6a4:	00410b20 	subeq	r0, r1, r0, lsr #22
     6a8:	23020000 	movwcs	r0, #8192	; 0x2000
     6ac:	03750b01 	cmneq	r5, #1024	; 0x400
     6b0:	21030000 	mrscs	r0, (UNDEF: 3)
     6b4:	00005e0c 	andeq	r5, r0, ip, lsl #28
     6b8:	02230200 	eoreq	r0, r3, #0, 4
     6bc:	0002800b 	andeq	r8, r2, fp
     6c0:	0c220300 	stceq	3, cr0, [r2], #-0
     6c4:	0000005e 	andeq	r0, r0, lr, asr r0
     6c8:	0b042302 	bleq	1092d8 <__Stack_Size+0x1082d8>
     6cc:	000006c3 	andeq	r0, r0, r3, asr #13
     6d0:	5e0c2303 	cdppl	3, 0, cr2, cr12, cr3, {0}
     6d4:	02000000 	andeq	r0, r0, #0
     6d8:	03000623 	movweq	r0, #1571	; 0x623
     6dc:	00000760 	andeq	r0, r0, r0, ror #14
     6e0:	cb022403 	blgt	896f4 <__Stack_Size+0x886f4>
     6e4:	0c000000 	stceq	0, cr0, [r0], {-0}
     6e8:	00250105 	eoreq	r0, r5, r5, lsl #2
     6ec:	58050000 	stmdapl	r5, {}	; <UNPREDICTABLE>
     6f0:	00027301 	andeq	r7, r2, r1, lsl #6
     6f4:	06af0d00 	strteq	r0, [pc], r0, lsl #26
     6f8:	0d720000 	ldcleq	0, cr0, [r2, #-0]
     6fc:	00000841 	andeq	r0, r0, r1, asr #16
     700:	037c0d73 	cmneq	ip, #7360	; 0x1cc0
     704:	0d740000 	ldcleq	0, cr0, [r4, #-0]
     708:	00000550 	andeq	r0, r0, r0, asr r5
     70c:	079a0d75 			; <UNDEFINED> instruction: 0x079a0d75
     710:	0d760000 	ldcleq	0, cr0, [r6, #-0]
     714:	000007e1 	andeq	r0, r0, r1, ror #15
     718:	07880d7b 			; <UNDEFINED> instruction: 0x07880d7b
     71c:	0d7c0000 	ldcleq	0, cr0, [ip, #-0]
     720:	00000352 	andeq	r0, r0, r2, asr r3
     724:	07240d7e 			; <UNDEFINED> instruction: 0x07240d7e
     728:	0e7f0000 	cdpeq	0, 7, cr0, cr15, cr0, {0}
     72c:	0000052c 	andeq	r0, r0, ip, lsr #10
     730:	05780e00 	ldrbeq	r0, [r8, #-3584]!	; 0xfffff200
     734:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     738:	0000088c 	andeq	r0, r0, ip, lsl #17
     73c:	06250e02 	strteq	r0, [r5], -r2, lsl #28
     740:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     744:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     748:	036c0e04 	cmneq	ip, #4, 28	; 0x40
     74c:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
     750:	00000314 	andeq	r0, r0, r4, lsl r3
     754:	06e20e06 	strbteq	r0, [r2], r6, lsl #28
     758:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
     75c:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
     760:	082f0e08 	stmdaeq	pc!, {r3, r9, sl, fp}	; <UNPREDICTABLE>
     764:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
     768:	0000055e 	andeq	r0, r0, lr, asr r5
     76c:	05050e0a 	streq	r0, [r5, #-3594]	; 0xfffff1f6
     770:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
     774:	000002c5 	andeq	r0, r0, r5, asr #5
     778:	05a10e0c 	streq	r0, [r1, #3596]!	; 0xe0c
     77c:	0e0d0000 	cdpeq	0, 0, cr0, cr13, cr0, {0}
     780:	000003eb 	andeq	r0, r0, fp, ror #7
     784:	080d0e0e 	stmdaeq	sp, {r1, r2, r3, r9, sl, fp}
     788:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
     78c:	000004db 	ldrdeq	r0, [r0], -fp
     790:	029b0e10 	addseq	r0, fp, #16, 28	; 0x100
     794:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
     798:	0000086a 	andeq	r0, r0, sl, ror #16
     79c:	044f0e12 	strbeq	r0, [pc], #-3602	; 7a4 <_Minimum_Stack_Size+0x6a4>
     7a0:	0e130000 	cdpeq	0, 1, cr0, cr3, cr0, {0}
     7a4:	0000026b 	andeq	r0, r0, fp, ror #4
     7a8:	041f0e14 	ldreq	r0, [pc], #-3604	; 7b0 <_Minimum_Stack_Size+0x6b0>
     7ac:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
     7b0:	0000028d 	andeq	r0, r0, sp, lsl #5
     7b4:	07d40e16 	bfieq	r0, r6, (invalid: 28:20)
     7b8:	0e170000 	cdpeq	0, 1, cr0, cr7, cr0, {0}
     7bc:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
     7c0:	06040e18 			; <UNDEFINED> instruction: 0x06040e18
     7c4:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
     7c8:	00000705 	andeq	r0, r0, r5, lsl #14
     7cc:	06cb0e1a 			; <UNDEFINED> instruction: 0x06cb0e1a
     7d0:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
     7d4:	0000073f 	andeq	r0, r0, pc, lsr r7
     7d8:	04fb0e1c 	ldrbteq	r0, [fp], #3612	; 0xe1c
     7dc:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
     7e0:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
     7e4:	05c20e1e 	strbeq	r0, [r2, #3614]	; 0xe1e
     7e8:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
     7ec:	00000717 	andeq	r0, r0, r7, lsl r7
     7f0:	04bc0e20 	ldrteq	r0, [ip], #3616	; 0xe20
     7f4:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     7f8:	000002ae 	andeq	r0, r0, lr, lsr #5
     7fc:	03d30e22 	bicseq	r0, r3, #544	; 0x220
     800:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     804:	000007f2 	strdeq	r0, [r0], -r2
     808:	06970e24 	ldreq	r0, [r7], r4, lsr #28
     80c:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
     810:	00000476 	andeq	r0, r0, r6, ror r4
     814:	08800e26 	stmeq	r0, {r1, r2, r5, r9, sl, fp}
     818:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
     81c:	0000033a 	andeq	r0, r0, sl, lsr r3
     820:	06160e28 	ldreq	r0, [r6], -r8, lsr #28
     824:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
     828:	0000051d 	andeq	r0, r0, sp, lsl r5
     82c:	6303002a 	movwvs	r0, #12330	; 0x302a
     830:	05000004 	streq	r0, [r0, #-4]
     834:	012c0390 			; <UNDEFINED> instruction: 0x012c0390
     838:	040f0000 	streq	r0, [pc], #-0	; 840 <_Minimum_Stack_Size+0x740>
     83c:	0984020e 	stmibeq	r4, {r1, r2, r3, r9}
     840:	00000357 	andeq	r0, r0, r7, asr r3
     844:	0003a10b 	andeq	sl, r3, fp, lsl #2
     848:	11860200 	orrne	r0, r6, r0, lsl #4
     84c:	00000367 	andeq	r0, r0, r7, ror #6
     850:	0b002302 	bleq	9460 <__Stack_Size+0x8460>
     854:	00000633 	andeq	r0, r0, r3, lsr r6
     858:	6c118702 	ldcvs	7, cr8, [r1], {2}
     85c:	02000003 	andeq	r0, r0, #3
     860:	ed0b2023 	stc	0, cr2, [fp, #-140]	; 0xffffff74
     864:	02000007 	andeq	r0, r0, #7
     868:	03671188 	cmneq	r7, #136, 2	; 0x22
     86c:	23030000 	movwcs	r0, #12288	; 0x3000
     870:	ca0b0180 	bgt	2c0e78 <__Stack_Size+0x2bfe78>
     874:	02000003 	andeq	r0, r0, #3
     878:	036c1189 	cmneq	ip, #1073741858	; 0x40000022
     87c:	23030000 	movwcs	r0, #12288	; 0x3000
     880:	500b01a0 	andpl	r0, fp, r0, lsr #3
     884:	02000008 	andeq	r0, r0, #8
     888:	0367118a 	cmneq	r7, #-2147483614	; 0x80000022
     88c:	23030000 	movwcs	r0, #12288	; 0x3000
     890:	470b0280 	strmi	r0, [fp, -r0, lsl #5]
     894:	02000006 	andeq	r0, r0, #6
     898:	036c118b 	cmneq	ip, #-1073741790	; 0xc0000022
     89c:	23030000 	movwcs	r0, #12288	; 0x3000
     8a0:	970b02a0 	strls	r0, [fp, -r0, lsr #5]
     8a4:	02000005 	andeq	r0, r0, #5
     8a8:	0367118c 	cmneq	r7, #140, 2	; 0x23
     8ac:	23030000 	movwcs	r0, #12288	; 0x3000
     8b0:	510b0380 	smlabbpl	fp, r0, r3, r0
     8b4:	02000006 	andeq	r0, r0, #6
     8b8:	036c118d 	cmneq	ip, #1073741859	; 0x40000023
     8bc:	23030000 	movwcs	r0, #12288	; 0x3000
     8c0:	fc0b03a0 	stc2	3, cr0, [fp], {160}	; 0xa0
     8c4:	02000007 	andeq	r0, r0, #7
     8c8:	0367118e 	cmneq	r7, #-2147483613	; 0x80000023
     8cc:	23030000 	movwcs	r0, #12288	; 0x3000
     8d0:	5b0b0480 	blpl	2c1ad8 <__Stack_Size+0x2c0ad8>
     8d4:	02000006 	andeq	r0, r0, #6
     8d8:	037c118f 	cmneq	ip, #-1073741789	; 0xc0000023
     8dc:	23030000 	movwcs	r0, #12288	; 0x3000
     8e0:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
     8e4:	90020050 	andls	r0, r2, r0, asr r0
     8e8:	00039c11 	andeq	r9, r3, r1, lsl ip
     8ec:	80230300 	eorhi	r0, r3, r0, lsl #6
     8f0:	06650b06 	strbteq	r0, [r5], -r6, lsl #22
     8f4:	91020000 	mrsls	r0, (UNDEF: 2)
     8f8:	0003a111 	andeq	sl, r3, r1, lsl r1
     8fc:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     900:	06110b07 	ldreq	r0, [r1], -r7, lsl #22
     904:	92020000 	andls	r0, r2, #0
     908:	00008711 	andeq	r8, r0, r1, lsl r7
     90c:	80230300 	eorhi	r0, r3, r0, lsl #6
     910:	8711001c 			; <UNDEFINED> instruction: 0x8711001c
     914:	67000000 	strvs	r0, [r0, -r0]
     918:	12000003 	andne	r0, r0, #3
     91c:	000000a6 	andeq	r0, r0, r6, lsr #1
     920:	57040007 	strpl	r0, [r4, -r7]
     924:	11000003 	tstne	r0, r3
     928:	0000007b 	andeq	r0, r0, fp, ror r0
     92c:	0000037c 	andeq	r0, r0, ip, ror r3
     930:	0000a612 	andeq	sl, r0, r2, lsl r6
     934:	11001700 	tstne	r0, r0, lsl #14
     938:	0000007b 	andeq	r0, r0, fp, ror r0
     93c:	0000038c 	andeq	r0, r0, ip, lsl #7
     940:	0000a612 	andeq	sl, r0, r2, lsl r6
     944:	11003700 	tstne	r0, r0, lsl #14
     948:	0000004d 	andeq	r0, r0, sp, asr #32
     94c:	0000039c 	muleq	r0, ip, r3
     950:	0000a612 	andeq	sl, r0, r2, lsl r6
     954:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
     958:	0000038c 	andeq	r0, r0, ip, lsl #7
     95c:	00007b11 	andeq	r7, r0, r1, lsl fp
     960:	0003b200 	andeq	fp, r3, r0, lsl #4
     964:	00a61300 	adceq	r1, r6, r0, lsl #6
     968:	02830000 	addeq	r0, r3, #0
     96c:	06f60300 	ldrbteq	r0, [r6], r0, lsl #6
     970:	93020000 	movwls	r0, #8192	; 0x2000
     974:	00027f04 	andeq	r7, r2, r4, lsl #30
     978:	02531400 	subseq	r1, r3, #0, 8
     97c:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
     980:	00a11506 	adceq	r1, r1, r6, lsl #10
     984:	01010000 	mrseq	r0, (UNDEF: 1)
     988:	00020b15 	andeq	r0, r2, r5, lsl fp
     98c:	11450600 	cmpne	r5, r0, lsl #12
     990:	0000007b 	andeq	r0, r0, fp, ror r0
     994:	52110101 	andspl	r0, r1, #1073741824	; 0x40000000
     998:	eb000000 	bl	9a0 <_Minimum_Stack_Size+0x8a0>
     99c:	12000003 	andne	r0, r0, #3
     9a0:	000000a6 	andeq	r0, r0, r6, lsr #1
     9a4:	db05000f 	blle	1409e8 <__Stack_Size+0x13f9e8>
     9a8:	15000003 	strne	r0, [r0, #-3]
     9ac:	00000150 	andeq	r0, r0, r0, asr r1
     9b0:	eb174606 	bl	5d21d0 <__Stack_Size+0x5d11d0>
     9b4:	01000003 	tsteq	r0, r3
     9b8:	00521101 	subseq	r1, r2, r1, lsl #2
     9bc:	040e0000 	streq	r0, [lr], #-0
     9c0:	a6120000 	ldrge	r0, [r2], -r0
     9c4:	07000000 	streq	r0, [r0, -r0]
     9c8:	03fe0500 	mvnseq	r0, #0, 10
     9cc:	26150000 	ldrcs	r0, [r5], -r0
     9d0:	06000002 	streq	r0, [r0], -r2
     9d4:	040e1747 	streq	r1, [lr], #-1863	; 0xfffff8b9
     9d8:	01010000 	mrseq	r0, (UNDEF: 1)
     9dc:	79051c16 	stmdbvc	r5, {r1, r2, r4, sl, fp, ip}
     9e0:	049c0901 	ldreq	r0, [ip], #2305	; 0x901
     9e4:	43170000 	tstmi	r7, #0
     9e8:	05004c52 	streq	r4, [r0, #-3154]	; 0xfffff3ae
     9ec:	8711017b 			; <UNDEFINED> instruction: 0x8711017b
     9f0:	02000000 	andeq	r0, r0, #0
     9f4:	43170023 	tstmi	r7, #35	; 0x23
     9f8:	05004852 	streq	r4, [r0, #-2130]	; 0xfffff7ae
     9fc:	8711017c 			; <UNDEFINED> instruction: 0x8711017c
     a00:	02000000 	andeq	r0, r0, #0
     a04:	49170423 	ldmdbmi	r7, {r0, r1, r5, sl}
     a08:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
     a0c:	8711017d 			; <UNDEFINED> instruction: 0x8711017d
     a10:	02000000 	andeq	r0, r0, #0
     a14:	4f170823 	svcmi	0x00170823
     a18:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
     a1c:	8711017e 			; <UNDEFINED> instruction: 0x8711017e
     a20:	02000000 	andeq	r0, r0, #0
     a24:	b3180c23 	tstlt	r8, #8960	; 0x2300
     a28:	05000000 	streq	r0, [r0, #-0]
     a2c:	8711017f 			; <UNDEFINED> instruction: 0x8711017f
     a30:	02000000 	andeq	r0, r0, #0
     a34:	42171023 	andsmi	r1, r7, #35	; 0x23
     a38:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
     a3c:	87110180 	ldrhi	r0, [r1, -r0, lsl #3]
     a40:	02000000 	andeq	r0, r0, #0
     a44:	66181423 	ldrvs	r1, [r8], -r3, lsr #8
     a48:	05000002 	streq	r0, [r0, #-2]
     a4c:	87110181 	ldrhi	r0, [r1, -r1, lsl #3]
     a50:	02000000 	andeq	r0, r0, #0
     a54:	19001823 	stmdbne	r0, {r0, r1, r5, fp, ip}
     a58:	000000da 	ldrdeq	r0, [r0], -sl
     a5c:	03018205 	movweq	r8, #4613	; 0x1205
     a60:	00000421 	andeq	r0, r0, r1, lsr #8
     a64:	bb052816 	bllt	14aac4 <__Stack_Size+0x149ac4>
     a68:	05530901 	ldrbeq	r0, [r3, #-2305]	; 0xfffff6ff
     a6c:	43170000 	tstmi	r7, #0
     a70:	bd050052 	stclt	0, cr0, [r5, #-328]	; 0xfffffeb8
     a74:	00871101 	addeq	r1, r7, r1, lsl #2
     a78:	23020000 	movwcs	r0, #8192	; 0x2000
     a7c:	000d1800 	andeq	r1, sp, r0, lsl #16
     a80:	be050000 	cdplt	0, 0, cr0, cr5, cr0, {0}
     a84:	00871101 	addeq	r1, r7, r1, lsl #2
     a88:	23020000 	movwcs	r0, #8192	; 0x2000
     a8c:	49431704 	stmdbmi	r3, {r2, r8, r9, sl, ip}^
     a90:	bf050052 	svclt	0x00050052
     a94:	00871101 	addeq	r1, r7, r1, lsl #2
     a98:	23020000 	movwcs	r0, #8192	; 0x2000
     a9c:	01b31808 			; <UNDEFINED> instruction: 0x01b31808
     aa0:	c0050000 	andgt	r0, r5, r0
     aa4:	00871101 	addeq	r1, r7, r1, lsl #2
     aa8:	23020000 	movwcs	r0, #8192	; 0x2000
     aac:	019d180c 	orrseq	r1, sp, ip, lsl #16
     ab0:	c1050000 	mrsgt	r0, (UNDEF: 5)
     ab4:	00871101 	addeq	r1, r7, r1, lsl #2
     ab8:	23020000 	movwcs	r0, #8192	; 0x2000
     abc:	00b81810 	adcseq	r1, r8, r0, lsl r8
     ac0:	c2050000 	andgt	r0, r5, #0
     ac4:	00871101 	addeq	r1, r7, r1, lsl #2
     ac8:	23020000 	movwcs	r0, #8192	; 0x2000
     acc:	00001814 	andeq	r1, r0, r4, lsl r8
     ad0:	c3050000 	movwgt	r0, #20480	; 0x5000
     ad4:	00871101 	addeq	r1, r7, r1, lsl #2
     ad8:	23020000 	movwcs	r0, #8192	; 0x2000
     adc:	01ab1818 			; <UNDEFINED> instruction: 0x01ab1818
     ae0:	c4050000 	strgt	r0, [r5], #-0
     ae4:	00871101 	addeq	r1, r7, r1, lsl #2
     ae8:	23020000 	movwcs	r0, #8192	; 0x2000
     aec:	0008181c 	andeq	r1, r8, ip, lsl r8
     af0:	c5050000 	strgt	r0, [r5, #-0]
     af4:	00871101 	addeq	r1, r7, r1, lsl #2
     af8:	23020000 	movwcs	r0, #8192	; 0x2000
     afc:	53431720 	movtpl	r1, #14112	; 0x3720
     b00:	c6050052 			; <UNDEFINED> instruction: 0xc6050052
     b04:	00871101 	addeq	r1, r7, r1, lsl #2
     b08:	23020000 	movwcs	r0, #8192	; 0x2000
     b0c:	3e190024 	cdpcc	0, 1, cr0, cr9, cr4, {1}
     b10:	05000002 	streq	r0, [r0, #-2]
     b14:	a90301c9 	stmdbge	r3, {r0, r3, r6, r7, r8}
     b18:	16000004 	strne	r0, [r0], -r4
     b1c:	02390554 	eorseq	r0, r9, #84, 10	; 0x15000000
     b20:	00070b09 	andeq	r0, r7, r9, lsl #22
     b24:	04901800 	ldreq	r1, [r0], #2048	; 0x800
     b28:	3b050000 	blcc	140b30 <__Stack_Size+0x13fb30>
     b2c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b30:	23020000 	movwcs	r0, #8192	; 0x2000
     b34:	06331800 	ldrteq	r1, [r3], -r0, lsl #16
     b38:	3c050000 	stccc	0, cr0, [r5], {-0}
     b3c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b40:	23020000 	movwcs	r0, #8192	; 0x2000
     b44:	04c91802 	strbeq	r1, [r9], #2050	; 0x802
     b48:	3d050000 	stccc	0, cr0, [r5, #-0]
     b4c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b50:	23020000 	movwcs	r0, #8192	; 0x2000
     b54:	063d1804 	ldrteq	r1, [sp], -r4, lsl #16
     b58:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
     b5c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b60:	23020000 	movwcs	r0, #8192	; 0x2000
     b64:	05181806 	ldreq	r1, [r8, #-2054]	; 0xfffff7fa
     b68:	3f050000 	svccc	0x00050000
     b6c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b70:	23020000 	movwcs	r0, #8192	; 0x2000
     b74:	06471808 	strbeq	r1, [r7], -r8, lsl #16
     b78:	40050000 	andmi	r0, r5, r0
     b7c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b80:	23020000 	movwcs	r0, #8192	; 0x2000
     b84:	054b180a 	strbeq	r1, [fp, #-2058]	; 0xfffff7f6
     b88:	41050000 	mrsmi	r0, (UNDEF: 5)
     b8c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     b90:	23020000 	movwcs	r0, #8192	; 0x2000
     b94:	0651180c 	ldrbeq	r1, [r1], -ip, lsl #16
     b98:	42050000 	andmi	r0, r5, #0
     b9c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     ba0:	23020000 	movwcs	r0, #8192	; 0x2000
     ba4:	059c180e 	ldreq	r1, [ip, #2062]	; 0x80e
     ba8:	43050000 	movwmi	r0, #20480	; 0x5000
     bac:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     bb0:	23020000 	movwcs	r0, #8192	; 0x2000
     bb4:	065b1810 			; <UNDEFINED> instruction: 0x065b1810
     bb8:	44050000 	strmi	r0, [r5], #-0
     bbc:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     bc0:	23020000 	movwcs	r0, #8192	; 0x2000
     bc4:	062e1812 			; <UNDEFINED> instruction: 0x062e1812
     bc8:	45050000 	strmi	r0, [r5, #-0]
     bcc:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     bd0:	23020000 	movwcs	r0, #8192	; 0x2000
     bd4:	06651814 			; <UNDEFINED> instruction: 0x06651814
     bd8:	46050000 	strmi	r0, [r5], -r0
     bdc:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     be0:	23020000 	movwcs	r0, #8192	; 0x2000
     be4:	06d81816 			; <UNDEFINED> instruction: 0x06d81816
     be8:	47050000 	strmi	r0, [r5, -r0]
     bec:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     bf0:	23020000 	movwcs	r0, #8192	; 0x2000
     bf4:	066f1818 			; <UNDEFINED> instruction: 0x066f1818
     bf8:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
     bfc:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c00:	23020000 	movwcs	r0, #8192	; 0x2000
     c04:	075b181a 	smmlaeq	fp, sl, r8, r1
     c08:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
     c0c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c10:	23020000 	movwcs	r0, #8192	; 0x2000
     c14:	0876181c 	ldmdaeq	r6!, {r2, r3, r4, fp, ip}^
     c18:	4a050000 	bmi	140c20 <__Stack_Size+0x13fc20>
     c1c:	071b1102 	ldreq	r1, [fp, -r2, lsl #2]
     c20:	23020000 	movwcs	r0, #8192	; 0x2000
     c24:	0700181e 	smladeq	r0, lr, r8, r1
     c28:	4b050000 	blmi	140c30 <__Stack_Size+0x13fc30>
     c2c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c30:	23020000 	movwcs	r0, #8192	; 0x2000
     c34:	06791840 	ldrbteq	r1, [r9], -r0, asr #16
     c38:	4c050000 	stcmi	0, cr0, [r5], {-0}
     c3c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c40:	23020000 	movwcs	r0, #8192	; 0x2000
     c44:	039c1842 	orrseq	r1, ip, #4325376	; 0x420000
     c48:	4d050000 	stcmi	0, cr0, [r5, #-0]
     c4c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c50:	23020000 	movwcs	r0, #8192	; 0x2000
     c54:	06831844 	streq	r1, [r3], r4, asr #16
     c58:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
     c5c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c60:	23020000 	movwcs	r0, #8192	; 0x2000
     c64:	4e461746 	cdpmi	7, 4, cr1, cr6, cr6, {2}
     c68:	4f050052 	svcmi	0x00050052
     c6c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c70:	23020000 	movwcs	r0, #8192	; 0x2000
     c74:	068d1848 	streq	r1, [sp], r8, asr #16
     c78:	50050000 	andpl	r0, r5, r0
     c7c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c80:	23020000 	movwcs	r0, #8192	; 0x2000
     c84:	0419184a 	ldreq	r1, [r9], #-2122	; 0xfffff7b6
     c88:	51050000 	mrspl	r0, (UNDEF: 5)
     c8c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     c90:	23020000 	movwcs	r0, #8192	; 0x2000
     c94:	042d184c 	strteq	r1, [sp], #-2124	; 0xfffff7b4
     c98:	52050000 	andpl	r0, r5, #0
     c9c:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     ca0:	23020000 	movwcs	r0, #8192	; 0x2000
     ca4:	0820184e 	stmdaeq	r0!, {r1, r2, r3, r6, fp, ip}
     ca8:	53050000 	movwpl	r0, #20480	; 0x5000
     cac:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     cb0:	23020000 	movwcs	r0, #8192	; 0x2000
     cb4:	08981850 	ldmeq	r8, {r4, r6, fp, ip}
     cb8:	54050000 	strpl	r0, [r5], #-0
     cbc:	006a1102 	rsbeq	r1, sl, r2, lsl #2
     cc0:	23020000 	movwcs	r0, #8192	; 0x2000
     cc4:	6a110052 	bvs	440e14 <__Stack_Size+0x43fe14>
     cc8:	1b000000 	blne	cd0 <_Minimum_Stack_Size+0xbd0>
     ccc:	12000007 	andne	r0, r0, #7
     cd0:	000000a6 	andeq	r0, r0, r6, lsr #1
     cd4:	0b040010 	bleq	100d1c <__Stack_Size+0xffd1c>
     cd8:	19000007 	stmdbne	r0, {r0, r1, r2}
     cdc:	0000040d 	andeq	r0, r0, sp, lsl #8
     ce0:	03025505 	movweq	r5, #9477	; 0x2505
     ce4:	00000560 	andeq	r0, r0, r0, ror #10
     ce8:	2901040a 	stmdbcs	r1, {r1, r3, sl}
     cec:	00076d07 	andeq	r6, r7, r7, lsl #26
     cf0:	058e1a00 	streq	r1, [lr, #2560]	; 0xa00
     cf4:	2a010000 	bcs	40cfc <__Stack_Size+0x3fcfc>
     cf8:	00007b12 	andeq	r7, r0, r2, lsl fp
     cfc:	160a0400 	strne	r0, [sl], -r0, lsl #8
     d00:	1a002302 	bne	9910 <__Stack_Size+0x8910>
     d04:	0000077a 	andeq	r0, r0, sl, ror r7
     d08:	7b122b01 	blvc	48b914 <__Stack_Size+0x48a914>
     d0c:	04000000 	streq	r0, [r0], #-0
     d10:	23021105 	movwcs	r1, #8453	; 0x2105
     d14:	05f71a00 	ldrbeq	r1, [r7, #2560]!	; 0xa00
     d18:	2c010000 	stccs	0, cr0, [r1], {-0}
     d1c:	00007b12 	andeq	r7, r0, r2, lsl fp
     d20:	10010400 	andne	r0, r1, r0, lsl #8
     d24:	00002302 	andeq	r2, r0, r2, lsl #6
     d28:	2701041b 	smladcs	r1, fp, r4, r0
     d2c:	0007880e 	andeq	r8, r7, lr, lsl #16
     d30:	058a1c00 	streq	r1, [sl, #3072]	; 0xc00
     d34:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
     d38:	00007b10 	andeq	r7, r0, r0, lsl fp
     d3c:	072d1d00 	streq	r1, [sp, -r0, lsl #26]!
     d40:	04000000 	streq	r0, [r0], #-0
     d44:	0000076d 	andeq	r0, r0, sp, ror #14
     d48:	3201040a 	andcc	r0, r1, #167772160	; 0xa000000
     d4c:	0007cd07 	andeq	ip, r7, r7, lsl #26
     d50:	08591a00 	ldmdaeq	r9, {r9, fp, ip}^
     d54:	33010000 	movwcc	r0, #4096	; 0x1000
     d58:	00007b12 	andeq	r7, r0, r2, lsl fp
     d5c:	160a0400 	strne	r0, [sl], -r0, lsl #8
     d60:	1a002302 	bne	9970 <__Stack_Size+0x8970>
     d64:	000005cf 	andeq	r0, r0, pc, asr #11
     d68:	7b123401 	blvc	48dd74 <__Stack_Size+0x48cd74>
     d6c:	04000000 	streq	r0, [r0], #-0
     d70:	23021105 	movwcs	r1, #8453	; 0x2105
     d74:	07aa1a00 	streq	r1, [sl, r0, lsl #20]!
     d78:	35010000 	strcc	r0, [r1, #-0]
     d7c:	00007b12 	andeq	r7, r0, r2, lsl fp
     d80:	10010400 	andne	r0, r1, r0, lsl #8
     d84:	00002302 	andeq	r2, r0, r2, lsl #6
     d88:	3001041b 	andcc	r0, r1, fp, lsl r4
     d8c:	0007e80e 	andeq	lr, r7, lr, lsl #16
     d90:	08551c00 	ldmdaeq	r5, {sl, fp, ip}^
     d94:	31010000 	mrscc	r0, (UNDEF: 1)
     d98:	00007b10 	andeq	r7, r0, r0, lsl fp
     d9c:	078d1d00 	streq	r1, [sp, r0, lsl #26]
     da0:	04000000 	streq	r0, [r0], #-0
     da4:	000007cd 	andeq	r0, r0, sp, asr #15
     da8:	2501100a 	strcs	r1, [r1, #-10]
     dac:	00082509 	andeq	r2, r8, r9, lsl #10
     db0:	08010b00 	stmdaeq	r1, {r8, r9, fp}
     db4:	26010000 	strcs	r0, [r1], -r0
     db8:	00008717 	andeq	r8, r0, r7, lsl r7
     dbc:	00230200 	eoreq	r0, r3, r0, lsl #4
     dc0:	0007881e 	andeq	r8, r7, lr, lsl r8
     dc4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     dc8:	00076e0b 	andeq	r6, r7, fp, lsl #28
     dcc:	172f0100 	strne	r0, [pc, -r0, lsl #2]!
     dd0:	00000087 	andeq	r0, r0, r7, lsl #1
     dd4:	1e082302 	cdpne	3, 0, cr2, cr8, cr2, {0}
     dd8:	000007e8 	andeq	r0, r0, r8, ror #15
     ddc:	000c2302 	andeq	r2, ip, r2, lsl #6
     de0:	0004ce03 	andeq	ip, r4, r3, lsl #28
     de4:	02380100 	eorseq	r0, r8, #0, 2
     de8:	000007ed 	andeq	r0, r0, sp, ror #15
     dec:	0000ad11 	andeq	sl, r0, r1, lsl sp
     df0:	00084100 	andeq	r4, r8, r0, lsl #2
     df4:	00a61200 	adceq	r1, r6, r0, lsl #4
     df8:	00070000 	andeq	r0, r7, r0
     dfc:	0007b71f 	andeq	fp, r7, pc, lsl r7
     e00:	0a3a0100 	beq	e81208 <__Stack_Size+0xe80208>
     e04:	00000831 	andeq	r0, r0, r1, lsr r8
     e08:	64030501 	strvs	r0, [r3], #-1281	; 0xfffffaff
     e0c:	1f200002 	svcne	0x00200002
     e10:	0000049e 	muleq	r0, lr, r4
     e14:	310a3b01 	tstcc	sl, r1, lsl #22
     e18:	01000008 	tsteq	r0, r8
     e1c:	02840305 	addeq	r0, r4, #335544320	; 0x14000000
     e20:	f2202000 	vhadd.s32	d2, d0, d0
     e24:	01000002 	tsteq	r0, r2
     e28:	0120163d 			; <UNDEFINED> instruction: 0x0120163d
     e2c:	03050000 	movweq	r0, #20480	; 0x5000
     e30:	2000002a 	andcs	r0, r0, sl, lsr #32
     e34:	0004a920 	andeq	sl, r4, r0, lsr #18
     e38:	17690100 	strbne	r0, [r9, -r0, lsl #2]!
     e3c:	0000088b 	andeq	r0, r0, fp, lsl #17
     e40:	00240305 	eoreq	r0, r4, r5, lsl #6
     e44:	04072000 	streq	r2, [r7], #-0
     e48:	00000052 	andeq	r0, r0, r2, asr r0
     e4c:	00039220 	andeq	r9, r3, r0, lsr #4
     e50:	116a0100 	cmnne	sl, r0, lsl #2
     e54:	0000005e 	andeq	r0, r0, lr, asr r0
     e58:	00280305 	eoreq	r0, r8, r5, lsl #6
     e5c:	82202000 	eorhi	r2, r0, #0
     e60:	01000004 	tsteq	r0, r4
     e64:	00411080 	subeq	r1, r1, r0, lsl #1
     e68:	03050000 	movweq	r0, #20480	; 0x5000
     e6c:	20000034 	andcs	r0, r0, r4, lsr r0
     e70:	00034920 	andeq	r4, r3, r0, lsr #18
     e74:	11c80100 	bicne	r0, r8, r0, lsl #2
     e78:	0000005e 	andeq	r0, r0, lr, asr r0
     e7c:	00000305 	andeq	r0, r0, r5, lsl #6
     e80:	04162000 	ldreq	r2, [r6], #-0
     e84:	05016801 	streq	r6, [r1, #-2049]	; 0xfffff7ff
     e88:	0000090b 	andeq	r0, r0, fp, lsl #18
     e8c:	00085921 	andeq	r5, r8, r1, lsr #18
     e90:	01690100 	cmneq	r9, r0, lsl #2
     e94:	00007b10 	andeq	r7, r0, r0, lsl fp
     e98:	160a0400 	strne	r0, [sl], -r0, lsl #8
     e9c:	21002302 	tstcs	r0, r2, lsl #6
     ea0:	000005cf 	andeq	r0, r0, pc, asr #11
     ea4:	10016a01 	andne	r6, r1, r1, lsl #20
     ea8:	0000007b 	andeq	r0, r0, fp, ror r0
     eac:	02110504 	andseq	r0, r1, #4, 10	; 0x1000000
     eb0:	aa210023 	bge	840f44 <__Stack_Size+0x83ff44>
     eb4:	01000007 	tsteq	r0, r7
     eb8:	7b10016b 	blvc	40146c <__Stack_Size+0x40046c>
     ebc:	04000000 	streq	r0, [r0], #-0
     ec0:	23021001 	movwcs	r1, #8193	; 0x2001
     ec4:	04220000 	strteq	r0, [r2], #-0
     ec8:	0c016601 	stceq	6, cr6, [r1], {1}
     ecc:	00000928 	andeq	r0, r0, r8, lsr #18
     ed0:	00039623 	andeq	r9, r3, r3, lsr #12
     ed4:	01670100 	cmneq	r7, r0, lsl #2
     ed8:	00007b0e 	andeq	r7, r0, lr, lsl #22
     edc:	08c71d00 	stmiaeq	r7, {r8, sl, fp, ip}^
     ee0:	04000000 	streq	r0, [r0], #-0
     ee4:	0000090b 	andeq	r0, r0, fp, lsl #18
     ee8:	64010816 	strvs	r0, [r1], #-2070	; 0xfffff7ea
     eec:	09500901 	ldmdbeq	r0, {r0, r8, fp}^
     ef0:	75180000 	ldrvc	r0, [r8, #-0]
     ef4:	01000007 	tsteq	r0, r7
     ef8:	87150165 	ldrhi	r0, [r5, -r5, ror #2]
     efc:	02000000 	andeq	r0, r0, #0
     f00:	281e0023 	ldmdacs	lr, {r0, r1, r5}
     f04:	02000009 	andeq	r0, r0, #9
     f08:	19000423 	stmdbne	r0, {r0, r1, r5, sl}
     f0c:	000002d8 	ldrdeq	r0, [r0], -r8
     f10:	02016e01 	andeq	r6, r1, #1, 28
     f14:	0000092d 	andeq	r0, r0, sp, lsr #18
     f18:	04ee0124 	strbteq	r0, [lr], #292	; 0x124
     f1c:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
     f20:	9a010501 	bls	4232c <__Stack_Size+0x4132c>
     f24:	d0000000 	andle	r0, r0, r0
     f28:	2a080006 	bcs	200f48 <__Stack_Size+0x1fff48>
     f2c:	49080007 	stmdbmi	r8, {r0, r1, r2}
     f30:	01000003 	tsteq	r0, r3
     f34:	00000a11 	andeq	r0, r0, r1, lsl sl
     f38:	78646925 	stmdavc	r4!, {r0, r2, r5, r8, fp, sp, lr}^
     f3c:	017e0100 	cmneq	lr, r0, lsl #2
     f40:	0000411a 	andeq	r4, r0, sl, lsl r1
     f44:	00036d00 	andeq	r6, r3, r0, lsl #26
     f48:	00036900 	andeq	r6, r3, r0, lsl #18
     f4c:	75622500 	strbvc	r2, [r2, #-1280]!	; 0xfffffb00
     f50:	7e010066 	cdpvc	0, 0, cr0, cr1, cr6, {3}
     f54:	0a112901 	beq	44b360 <__Stack_Size+0x44a360>
     f58:	03940000 	orrseq	r0, r4, #0
     f5c:	038e0000 	orreq	r0, lr, #0
     f60:	49260000 	stmdbmi	r6!, {}	; <UNPREDICTABLE>
     f64:	01000004 	tsteq	r0, r4
     f68:	1710017f 			; <UNDEFINED> instruction: 0x1710017f
     f6c:	c600000a 	strgt	r0, [r0], -sl
     f70:	c2000003 	andgt	r0, r0, #3
     f74:	27000003 	strcs	r0, [r0, -r3]
     f78:	01007a73 	tsteq	r0, r3, ror sl
     f7c:	9a070180 	bls	1c1584 <__Stack_Size+0x1c0584>
     f80:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
     f84:	ee000003 	cdp	0, 0, cr0, cr0, cr3, {0}
     f88:	27000003 	strcs	r0, [r0, -r3]
     f8c:	8201006e 	andhi	r0, r1, #110	; 0x6e
     f90:	009a0701 	addseq	r0, sl, r1, lsl #14
     f94:	04090000 	streq	r0, [r9], #-0
     f98:	04030000 	streq	r0, [r3], #-0
     f9c:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
     fa0:	8301006e 	movwhi	r0, #4206	; 0x106e
     fa4:	0a1d1601 	beq	7467b0 <__Stack_Size+0x7457b0>
     fa8:	04400000 	strbeq	r0, [r0], #-0
     fac:	043a0000 	ldrteq	r0, [sl], #-0
     fb0:	08280000 	stmdaeq	r8!, {}	; <UNPREDICTABLE>
     fb4:	27000001 	strcs	r0, [r0, -r1]
     fb8:	84010069 	strhi	r0, [r1], #-105	; 0xffffff97
     fbc:	009a0b01 	addseq	r0, sl, r1, lsl #22
     fc0:	046d0000 	strbteq	r0, [sp], #-0
     fc4:	046b0000 	strbteq	r0, [fp], #-0
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	005e0407 	subseq	r0, lr, r7, lsl #8
     fd0:	04070000 	streq	r0, [r7], #-0
     fd4:	00000950 	andeq	r0, r0, r0, asr r9
     fd8:	00870407 	addeq	r0, r7, r7, lsl #8
     fdc:	01290000 			; <UNDEFINED> instruction: 0x01290000
     fe0:	000003dd 	ldrdeq	r0, [r0], -sp
     fe4:	06017001 	streq	r7, [r1], -r1
     fe8:	00064801 	andeq	r4, r6, r1, lsl #16
     fec:	00069c08 	andeq	r9, r6, r8, lsl #24
     ff0:	00048108 	andeq	r8, r4, r8, lsl #2
     ff4:	0adf0100 	beq	ff7c13fc <BootRAM+0xe731b9d>
     ff8:	69250000 	stmdbvs	r5!, {}	; <UNPREDICTABLE>
     ffc:	01007864 	tsteq	r0, r4, ror #16
    1000:	411c0170 	tstmi	ip, r0, ror r1
    1004:	a7000000 	strge	r0, [r0, -r0]
    1008:	a1000004 	tstge	r0, r4
    100c:	2a000004 	bcs	1024 <__Stack_Size+0x24>
    1010:	00667562 	rsbeq	r7, r6, r2, ror #10
    1014:	31017001 	tstcc	r1, r1
    1018:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    101c:	d12b5101 			; <UNDEFINED> instruction: 0xd12b5101
    1020:	01000011 	tsteq	r0, r1, lsl r0
    1024:	5e3f0170 	mrcpl	1, 1, r0, cr15, cr0, {3}
    1028:	01000000 	mrseq	r0, (UNDEF: 0)
    102c:	04492652 	strbeq	r2, [r9], #-1618	; 0xfffff9ae
    1030:	71010000 	mrsvc	r0, (UNDEF: 1)
    1034:	0a171001 	beq	5c5040 <__Stack_Size+0x5c4040>
    1038:	04d50000 	ldrbeq	r0, [r5], #0
    103c:	04d30000 	ldrbeq	r0, [r3], #0
    1040:	4e270000 	cdpmi	0, 2, cr0, cr7, cr0, {0}
    1044:	72010032 	andvc	r0, r1, #50	; 0x32
    1048:	005e0c01 	subseq	r0, lr, r1, lsl #24
    104c:	04ea0000 	strbteq	r0, [sl], #0
    1050:	04e80000 	strbteq	r0, [r8], #0
    1054:	87260000 	strhi	r0, [r6, -r0]!
    1058:	01000002 	tsteq	r0, r2
    105c:	110d0174 	tstne	sp, r4, ror r1
    1060:	ff00000a 			; <UNDEFINED> instruction: 0xff00000a
    1064:	fd000004 	stc2	0, cr0, [r0, #-16]
    1068:	27000004 	strcs	r0, [r0, -r4]
    106c:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1070:	16017501 	strne	r7, [r1], -r1, lsl #10
    1074:	00000a1d 	andeq	r0, r0, sp, lsl sl
    1078:	00000518 	andeq	r0, r0, r8, lsl r5
    107c:	00000512 	andeq	r0, r0, r2, lsl r5
    1080:	0000d028 	andeq	sp, r0, r8, lsr #32
    1084:	00692700 	rsbeq	r2, r9, r0, lsl #14
    1088:	10017601 	andne	r7, r1, r1, lsl #12
    108c:	0000005e 	andeq	r0, r0, lr, asr r0
    1090:	00000553 	andeq	r0, r0, r3, asr r5
    1094:	0000054f 	andeq	r0, r0, pc, asr #10
    1098:	04070000 	streq	r0, [r7], #-0
    109c:	0000006f 	andeq	r0, r0, pc, rrx
    10a0:	031f012c 	tsteq	pc, #44, 2
    10a4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    10a8:	04f80601 	ldrbteq	r0, [r8], #1537	; 0x601
    10ac:	06480800 	strbeq	r0, [r8], -r0, lsl #16
    10b0:	05730800 	ldrbeq	r0, [r3, #-2048]!	; 0xfffff800
    10b4:	d0010000 	andle	r0, r1, r0
    10b8:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
    10bc:	000000a0 	andeq	r0, r0, r0, lsr #1
    10c0:	00000b3e 	andeq	r0, r0, lr, lsr fp
    10c4:	00073126 	andeq	r3, r7, r6, lsr #2
    10c8:	01310100 	teqeq	r1, r0, lsl #2
    10cc:	0000410f 	andeq	r4, r0, pc, lsl #2
    10d0:	00059500 	andeq	r9, r5, r0, lsl #10
    10d4:	00059300 	andeq	r9, r5, r0, lsl #6
    10d8:	052c2e00 	streq	r2, [ip, #-3584]!	; 0xfffff200
    10dc:	0b2e0800 	bleq	b830e4 <__Stack_Size+0xb820e4>
    10e0:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    10e4:	00760250 	rsbseq	r0, r6, r0, asr r2
    10e8:	054c3000 	strbeq	r3, [ip, #-0]
    10ec:	012f0800 			; <UNDEFINED> instruction: 0x012f0800
    10f0:	00760550 	rsbseq	r0, r6, r0, asr r5
    10f4:	00218008 	eoreq	r8, r1, r8
    10f8:	00b82d00 	adcseq	r2, r8, r0, lsl #26
    10fc:	0b5b0000 	bleq	16c1104 <__Stack_Size+0x16c0104>
    1100:	69270000 	stmdbvs	r7!, {}	; <UNPREDICTABLE>
    1104:	014d0100 	mrseq	r0, (UNDEF: 93)
    1108:	00004111 	andeq	r4, r0, r1, lsl r1
    110c:	0005ac00 	andeq	sl, r5, r0, lsl #24
    1110:	0005a800 	andeq	sl, r5, r0, lsl #16
    1114:	74310000 	ldrtvc	r0, [r1], #-0
    1118:	c1080005 	tstgt	r8, r5
    111c:	31000012 	tstcc	r0, r2, lsl r0
    1120:	0800058a 	stmdaeq	r0, {r1, r3, r7, r8, sl}
    1124:	000012d3 	ldrdeq	r1, [r0], -r3
    1128:	0005cc32 	andeq	ip, r5, r2, lsr ip
    112c:	000c6508 	andeq	r6, ip, r8, lsl #10
    1130:	000b9500 	andeq	r9, fp, r0, lsl #10
    1134:	50012f00 	andpl	r2, r1, r0, lsl #30
    1138:	2f007402 	svccs	0x00007402
    113c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1140:	52012f00 	andpl	r2, r1, #0, 30
    1144:	012f3801 			; <UNDEFINED> instruction: 0x012f3801
    1148:	2b030553 	blcs	c269c <__Stack_Size+0xc169c>
    114c:	00080007 	andeq	r0, r8, r7
    1150:	0005d832 	andeq	sp, r5, r2, lsr r8
    1154:	000c6508 	andeq	r6, ip, r8, lsl #10
    1158:	000bbd00 	andeq	fp, fp, r0, lsl #26
    115c:	50012f00 	andpl	r2, r1, r0, lsl #30
    1160:	2f800902 	svccs	0x00800902
    1164:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1168:	52012f00 	andpl	r2, r1, #0, 30
    116c:	012f3801 			; <UNDEFINED> instruction: 0x012f3801
    1170:	9d030553 	cfstr32ls	mvfx0, [r3, #-332]	; 0xfffffeb4
    1174:	00080006 	andeq	r0, r8, r6
    1178:	0005e031 	andeq	lr, r5, r1, lsr r0
    117c:	0012dc08 	andseq	sp, r2, r8, lsl #24
    1180:	05ee3100 	strbeq	r3, [lr, #256]!	; 0x100
    1184:	12d30800 	sbcsne	r0, r3, #0, 16
    1188:	33000000 	movwcc	r0, #0
    118c:	0007c101 	andeq	ip, r7, r1, lsl #2
    1190:	06f90100 	ldrbteq	r0, [r9], r0, lsl #2
    1194:	0003b001 	andeq	fp, r3, r1
    1198:	0004f808 	andeq	pc, r4, r8, lsl #16
    119c:	0005cf08 	andeq	ip, r5, r8, lsl #30
    11a0:	0c650100 	stfeqe	f0, [r5], #-0
    11a4:	31340000 	teqcc	r4, r0
    11a8:	01000007 	tsteq	r0, r7
    11ac:	004121f9 	strdeq	r2, [r1], #-25	; 0xffffffe7
    11b0:	05f30000 	ldrbeq	r0, [r3, #0]!
    11b4:	05ef0000 	strbeq	r0, [pc, #0]!	; 11bc <__Stack_Size+0x1bc>
    11b8:	27340000 	ldrcs	r0, [r4, -r0]!
    11bc:	01000008 	tsteq	r0, r8
    11c0:	004130f9 	strdeq	r3, [r1], #-9
    11c4:	06210000 	strteq	r0, [r1], -r0
    11c8:	06110000 	ldreq	r0, [r1], -r0
    11cc:	d1340000 	teqle	r4, r0
    11d0:	01000011 	tsteq	r0, r1, lsl r0
    11d4:	005e42f9 	ldrsheq	r4, [lr], #-41	; 0xffffffd7
    11d8:	06930000 	ldreq	r0, [r3], r0
    11dc:	068d0000 	streq	r0, [sp], r0
    11e0:	5f340000 	svcpl	0x00340000
    11e4:	0100000b 	tsteq	r0, fp
    11e8:	00ad51f9 	strdeq	r5, [sp], r9	; <UNPREDICTABLE>
    11ec:	06c30000 	strbeq	r0, [r3], r0
    11f0:	06bf0000 	ldrteq	r0, [pc], r0
    11f4:	3a350000 	bcc	d411fc <__Stack_Size+0xd401fc>
    11f8:	01000008 	tsteq	r0, r8
    11fc:	00410bfb 	strdeq	r0, [r1], #-187	; 0xffffff45
    1200:	06e90000 	strbteq	r0, [r9], r0
    1204:	06e10000 	strbteq	r0, [r1], r0
    1208:	62270000 	eorvs	r0, r7, #0
    120c:	01006675 	tsteq	r0, r5, ror r6
    1210:	5e0c0101 	adfple	f0, f4, f1
    1214:	45000000 	strmi	r0, [r0, #-0]
    1218:	33000007 	movwcc	r0, #7
    121c:	00000007 	andeq	r0, r0, r7
    1220:	06a30133 			; <UNDEFINED> instruction: 0x06a30133
    1224:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    1228:	02980106 	addseq	r0, r8, #-2147483647	; 0x80000001
    122c:	03b00800 	movseq	r0, #0, 16
    1230:	07d80800 	ldrbeq	r0, [r8, r0, lsl #16]
    1234:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    1238:	3400000c 	strcc	r0, [r0], #-12
    123c:	00000731 	andeq	r0, r0, r1, lsr r7
    1240:	411ac901 	tstmi	sl, r1, lsl #18
    1244:	fc000000 	stc2	0, cr0, [r0], {-0}
    1248:	f8000007 			; <UNDEFINED> instruction: 0xf8000007
    124c:	34000007 	strcc	r0, [r0], #-7
    1250:	00000827 	andeq	r0, r0, r7, lsr #16
    1254:	4129c901 			; <UNDEFINED> instruction: 0x4129c901
    1258:	22000000 	andcs	r0, r0, #0
    125c:	1a000008 	bne	1284 <__Stack_Size+0x284>
    1260:	34000008 	strcc	r0, [r0], #-8
    1264:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    1268:	5e3bc901 	vaddpl.f16	s24, s22, s2	; <UNPREDICTABLE>
    126c:	62000000 	andvs	r0, r0, #0
    1270:	5c000008 	stcpl	0, cr0, [r0], {8}
    1274:	34000008 	strcc	r0, [r0], #-8
    1278:	00000b5f 	andeq	r0, r0, pc, asr fp
    127c:	ad4ac901 	vstrge.16	s25, [sl, #-2]	; <UNPREDICTABLE>
    1280:	9a000000 	bls	1288 <__Stack_Size+0x288>
    1284:	8e000008 	cdphi	0, 0, cr0, cr0, cr8, {0}
    1288:	35000008 	strcc	r0, [r0, #-8]
    128c:	0000083a 	andeq	r0, r0, sl, lsr r8
    1290:	410bcb01 	tstmi	fp, r1, lsl #22
    1294:	0c000000 	stceq	0, cr0, [r0], {-0}
    1298:	02000009 	andeq	r0, r0, #9
    129c:	36000009 	strcc	r0, [r0], -r9
    12a0:	00667562 	rsbeq	r7, r6, r2, ror #10
    12a4:	5e0cd401 	cdppl	4, 0, cr13, cr12, cr1, {0}
    12a8:	73000000 	movwvc	r0, #0
    12ac:	65000009 	strvs	r0, [r0, #-9]
    12b0:	00000009 	andeq	r0, r0, r9
    12b4:	000e6d37 	andeq	r6, lr, r7, lsr sp
    12b8:	0d820100 	stfeqs	f0, [r2]
    12bc:	00072a01 	andeq	r2, r7, r1, lsl #20
    12c0:	00086008 	andeq	r6, r8, r8
    12c4:	0009fa08 	andeq	pc, r9, r8, lsl #20
    12c8:	10200100 	eorne	r0, r0, r0, lsl #2
    12cc:	31340000 	teqcc	r4, r0
    12d0:	01000007 	tsteq	r0, r7
    12d4:	00411d82 	subeq	r1, r1, r2, lsl #27
    12d8:	0a3a0000 	beq	e812e0 <__Stack_Size+0xe802e0>
    12dc:	0a320000 	beq	c812e4 <__Stack_Size+0xc802e4>
    12e0:	0a200000 	beq	8012e8 <__Stack_Size+0x8002e8>
    12e4:	01000003 	tsteq	r0, r3
    12e8:	005e1383 	subseq	r1, lr, r3, lsl #7
    12ec:	03050000 	movweq	r0, #20480	; 0x5000
    12f0:	20000032 	andcs	r0, r0, r2, lsr r0
    12f4:	00086235 	andeq	r6, r8, r5, lsr r2
    12f8:	0c840100 	stfeqs	f0, [r4], {0}
    12fc:	0000005e 	andeq	r0, r0, lr, asr r0
    1300:	00000a7c 	andeq	r0, r0, ip, ror sl
    1304:	00000a74 	andeq	r0, r0, r4, ror sl
    1308:	0000c335 	andeq	ip, r0, r5, lsr r3
    130c:	0b850100 	bleq	fe141714 <BootRAM+0xd0b1eb5>
    1310:	00000041 	andeq	r0, r0, r1, asr #32
    1314:	00000ab2 			; <UNDEFINED> instruction: 0x00000ab2
    1318:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    131c:	71657236 	cmnvc	r5, r6, lsr r2
    1320:	0b950100 	bleq	fe541728 <BootRAM+0xd4b1ec9>
    1324:	00000041 	andeq	r0, r0, r1, asr #32
    1328:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    132c:	00000acf 	andeq	r0, r0, pc, asr #21
    1330:	0001382d 	andeq	r3, r1, sp, lsr #16
    1334:	000ec000 	andeq	ip, lr, r0
    1338:	08f62000 	ldmeq	r6!, {sp}^
    133c:	ac010000 	stcge	0, cr0, [r1], {-0}
    1340:	0010200b 	andseq	r2, r0, fp
    1344:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1348:	0011d120 	andseq	sp, r1, r0, lsr #2
    134c:	0ead0100 	fdveqe	f0, f5, f0
    1350:	0000005e 	andeq	r0, r0, lr, asr r0
    1354:	386a9102 	stmdacc	sl!, {r1, r8, ip, pc}^
    1358:	08000784 	stmdaeq	r0, {r2, r7, r8, r9, sl}
    135c:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
    1360:	00000dde 	ldrdeq	r0, [r0], -lr
    1364:	0008f620 	andeq	pc, r8, r0, lsr #12
    1368:	179d0100 	ldrne	r0, [sp, r0, lsl #2]
    136c:	00001022 	andeq	r1, r0, r2, lsr #32
    1370:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    1374:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    1378:	5e149e01 	cdppl	14, 1, cr9, cr4, cr1, {0}
    137c:	02000000 	andeq	r0, r0, #0
    1380:	98396a91 	ldmdals	r9!, {r0, r4, r7, r9, fp, sp, lr}
    1384:	72080007 	andvc	r0, r8, #7
    1388:	2f000013 	svccs	0x00000013
    138c:	91025101 	tstls	r2, r1, lsl #2
    1390:	52012f6c 	andpl	r2, r1, #108, 30	; 0x1b0
    1394:	006a9102 	rsbeq	r9, sl, r2, lsl #2
    1398:	13113a00 	tstne	r1, #0, 20
    139c:	07700000 	ldrbeq	r0, [r0, -r0]!
    13a0:	70010800 	andvc	r0, r1, r0, lsl #16
    13a4:	74080007 	strvc	r0, [r8], #-7
    13a8:	01080007 	tsteq	r8, r7
    13ac:	0e1f0ba5 	vnmlseq.f64	d0, d31, d21
    13b0:	373b0000 	ldrcc	r0, [fp, -r0]!
    13b4:	4b000013 	blmi	1408 <__Stack_Size+0x408>
    13b8:	4900000b 	stmdbmi	r0, {r0, r1, r3}
    13bc:	3b00000b 	blcc	13f0 <__Stack_Size+0x3f0>
    13c0:	0000132b 	andeq	r1, r0, fp, lsr #6
    13c4:	00000b61 	andeq	r0, r0, r1, ror #22
    13c8:	00000b5f 	andeq	r0, r0, pc, asr fp
    13cc:	00131f3b 	andseq	r1, r3, fp, lsr pc
    13d0:	000b7b00 	andeq	r7, fp, r0, lsl #22
    13d4:	000b7900 	andeq	r7, fp, r0, lsl #18
    13d8:	293c0000 	ldmdbcs	ip!, {}	; <UNPREDICTABLE>
    13dc:	a8000010 	stmdage	r0, {r4}
    13e0:	01080007 	tsteq	r8, r7
    13e4:	00000158 	andeq	r0, r0, r8, asr r1
    13e8:	5f05b001 	svcpl	0x0005b001
    13ec:	3b00000e 	blcc	142c <__Stack_Size+0x42c>
    13f0:	00001043 	andeq	r1, r0, r3, asr #32
    13f4:	00000b91 	muleq	r0, r1, fp
    13f8:	00000b8f 	andeq	r0, r0, pc, lsl #23
    13fc:	0010373b 	andseq	r3, r0, fp, lsr r7
    1400:	000ba700 	andeq	sl, fp, r0, lsl #14
    1404:	000ba500 	andeq	sl, fp, r0, lsl #10
    1408:	07b63900 	ldreq	r3, [r6, r0, lsl #18]!
    140c:	10500800 	subsne	r0, r0, r0, lsl #16
    1410:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    1414:	80090250 	andhi	r0, r9, r0, asr r2
    1418:	113a0000 	teqne	sl, r0
    141c:	ba000013 	blt	1470 <__Stack_Size+0x470>
    1420:	01080007 	tsteq	r8, r7
    1424:	080007ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl}
    1428:	080007c2 	stmdaeq	r0, {r1, r6, r7, r8, r9, sl}
    142c:	a00ba801 	andge	sl, fp, r1, lsl #16
    1430:	3b00000e 	blcc	1470 <__Stack_Size+0x470>
    1434:	00001337 	andeq	r1, r0, r7, lsr r3
    1438:	00000bbd 			; <UNDEFINED> instruction: 0x00000bbd
    143c:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
    1440:	00132b3b 	andseq	r2, r3, fp, lsr fp
    1444:	000bd300 	andeq	sp, fp, r0, lsl #6
    1448:	000bd100 	andeq	sp, fp, r0, lsl #2
    144c:	131f3b00 	tstne	pc, #0, 22
    1450:	0bed0000 	bleq	ffb41458 <BootRAM+0xeab1bf9>
    1454:	0beb0000 	bleq	ffac145c <BootRAM+0xea31bfd>
    1458:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    145c:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
    1460:	0000126c 	andeq	r1, r0, ip, ror #4
    1464:	0550012f 	ldrbeq	r0, [r0, #-303]	; 0xfffffed1
    1468:	00002a03 	andeq	r2, r0, r3, lsl #20
    146c:	51012f20 	tstpl	r1, r0, lsr #30
    1470:	2f6c9102 	svccs	0x006c9102
    1474:	91025201 	tstls	r2, r1, lsl #4
    1478:	3800006a 	stmdacc	r0, {r1, r3, r5, r6}
    147c:	080007e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, sl}
    1480:	08000804 	stmdaeq	r0, {r2, fp}
    1484:	00000f37 	andeq	r0, r0, r7, lsr pc
    1488:	00049535 	andeq	r9, r4, r5, lsr r5
    148c:	11b50100 			; <UNDEFINED> instruction: 0x11b50100
    1490:	00000041 	andeq	r0, r0, r1, asr #32
    1494:	00000c03 	andeq	r0, r0, r3, lsl #24
    1498:	00000c01 	andeq	r0, r0, r1, lsl #24
    149c:	0013113d 	andseq	r1, r3, sp, lsr r1
    14a0:	0007ea00 	andeq	lr, r7, r0, lsl #20
    14a4:	01880108 	orreq	r0, r8, r8, lsl #2
    14a8:	b6010000 	strlt	r0, [r1], -r0
    14ac:	13373b09 	teqne	r7, #9216	; 0x2400
    14b0:	0c180000 	ldceq	0, cr0, [r8], {-0}
    14b4:	0c160000 	ldceq	0, cr0, [r6], {-0}
    14b8:	2b3b0000 	blcs	ec14c0 <__Stack_Size+0xec04c0>
    14bc:	18000013 	stmdane	r0, {r0, r1, r4}
    14c0:	1600000c 	strne	r0, [r0], -ip
    14c4:	3b00000c 	blcc	14fc <__Stack_Size+0x4fc>
    14c8:	0000131f 	andeq	r1, r0, pc, lsl r3
    14cc:	00000c18 	andeq	r0, r0, r8, lsl ip
    14d0:	00000c16 	andeq	r0, r0, r6, lsl ip
    14d4:	0007ee39 	andeq	lr, r7, r9, lsr lr
    14d8:	000a2308 	andeq	r2, sl, r8, lsl #6
    14dc:	50012f00 	andpl	r2, r1, r0, lsl #30
    14e0:	2f007102 	svccs	0x00007102
    14e4:	71025101 	tstvc	r2, r1, lsl #2
    14e8:	52012f00 	andpl	r2, r1, #0, 30
    14ec:	00007102 	andeq	r7, r0, r2, lsl #2
    14f0:	e63c0000 	ldrt	r0, [ip], -r0
    14f4:	4a000012 	bmi	1544 <__Stack_Size+0x544>
    14f8:	01080007 	tsteq	r8, r7
    14fc:	00000120 	andeq	r0, r0, r0, lsr #2
    1500:	7f078901 	svcvc	0x00078901
    1504:	3b00000f 	blcc	1548 <__Stack_Size+0x548>
    1508:	000012f8 	strdeq	r1, [r0], -r8
    150c:	00000c2e 	andeq	r0, r0, lr, lsr #24
    1510:	00000c2c 	andeq	r0, r0, ip, lsr #24
    1514:	0013043b 	andseq	r0, r3, fp, lsr r4
    1518:	000c4400 	andeq	r4, ip, r0, lsl #8
    151c:	000c4200 	andeq	r4, ip, r0, lsl #4
    1520:	07543900 	ldrbeq	r3, [r4, -r0, lsl #18]
    1524:	095d0800 	ldmdbeq	sp, {fp}^
    1528:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    152c:	2f310150 	svccs	0x00310150
    1530:	03055101 	movweq	r5, #20737	; 0x5101
    1534:	2000002a 	andcs	r0, r0, sl, lsr #32
    1538:	113c0000 	teqne	ip, r0
    153c:	0c000013 	stceq	0, cr0, [r0], {19}
    1540:	05080008 	streq	r0, [r8, #-8]
    1544:	00000170 	andeq	r0, r0, r0, ror r1
    1548:	c52cc401 	strgt	ip, [ip, #-1025]!	; 0xfffffbff
    154c:	3b00000f 	blcc	1590 <__Stack_Size+0x590>
    1550:	00001337 	andeq	r1, r0, r7, lsr r3
    1554:	00000c5e 	andeq	r0, r0, lr, asr ip
    1558:	00000c5c 	andeq	r0, r0, ip, asr ip
    155c:	00132b3b 	andseq	r2, r3, fp, lsr fp
    1560:	000c5e00 	andeq	r5, ip, r0, lsl #28
    1564:	000c5c00 	andeq	r5, ip, r0, lsl #24
    1568:	131f3b00 	tstne	pc, #0, 22
    156c:	0c5e0000 	mraeq	r0, lr, acc0
    1570:	0c5c0000 	mraeq	r0, ip, acc0
    1574:	78310000 	ldmdavc	r1!, {}	; <UNPREDICTABLE>
    1578:	23080007 	movwcs	r0, #32775	; 0x8007
    157c:	0000000a 	andeq	r0, r0, sl
    1580:	0013113a 	andseq	r1, r3, sl, lsr r1
    1584:	00080c00 	andeq	r0, r8, r0, lsl #24
    1588:	080c0108 	stmdaeq	ip, {r3, r8}
    158c:	080c0800 	stmdaeq	ip, {fp}
    1590:	bc010800 	stclt	8, cr0, [r1], {-0}
    1594:	00100609 	andseq	r0, r0, r9, lsl #12
    1598:	13373b00 	teqne	r7, #0, 22
    159c:	0c740000 	ldcleq	0, cr0, [r4], #-0
    15a0:	0c720000 	ldcleq	0, cr0, [r2], #-0
    15a4:	2b3b0000 	blcs	ec15ac <__Stack_Size+0xec05ac>
    15a8:	74000013 	strvc	r0, [r0], #-19	; 0xffffffed
    15ac:	7200000c 	andvc	r0, r0, #12
    15b0:	3b00000c 	blcc	15e8 <__Stack_Size+0x5e8>
    15b4:	0000131f 	andeq	r1, r0, pc, lsl r3
    15b8:	00000c74 	andeq	r0, r0, r4, ror ip
    15bc:	00000c72 	andeq	r0, r0, r2, ror ip
    15c0:	081e3900 	ldmdaeq	lr, {r8, fp, ip, sp}
    15c4:	12100800 	andsne	r0, r0, #0, 16
    15c8:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    15cc:	2a030550 	bcs	c2b14 <__Stack_Size+0xc1b14>
    15d0:	2f200000 	svccs	0x00200000
    15d4:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    15d8:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    15dc:	28040704 	stmdacs	r4, {r2, r8, r9, sl}
    15e0:	3f000010 	svccc	0x00000010
    15e4:	00046d40 	andeq	r6, r4, r0, asr #26
    15e8:	147a0100 	ldrbtne	r0, [sl], #-256	; 0xffffff00
    15ec:	10500301 	subsne	r0, r0, r1, lsl #6
    15f0:	62410000 	subvs	r0, r1, #0
    15f4:	01006675 	tsteq	r0, r5, ror r6
    15f8:	0adf2d7a 	beq	ff7ccbe8 <BootRAM+0xe73d389>
    15fc:	d1420000 	mrsle	r0, (UNDEF: 66)
    1600:	01000011 	tsteq	r0, r1, lsl r0
    1604:	005e3b7a 	subseq	r3, lr, sl, ror fp
    1608:	37000000 	strcc	r0, [r0, -r0]
    160c:	00000d11 	andeq	r0, r0, r1, lsl sp
    1610:	010d6c01 	tsteq	sp, r1, lsl #24
    1614:	0800069c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl}
    1618:	080006d0 	stmdaeq	r0, {r4, r6, r7, r9, sl}
    161c:	00000c88 	andeq	r0, r0, r8, lsl #25
    1620:	0010e701 	andseq	lr, r0, r1, lsl #14
    1624:	07313400 	ldreq	r3, [r1, -r0, lsl #8]!
    1628:	6c010000 	stcvs	0, cr0, [r1], {-0}
    162c:	0000411c 	andeq	r4, r0, ip, lsl r1
    1630:	000cac00 	andeq	sl, ip, r0, lsl #24
    1634:	000ca800 	andeq	sl, ip, r0, lsl #16
    1638:	06dd3500 	ldrbeq	r3, [sp], r0, lsl #10
    163c:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    1640:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1644:	000cd100 	andeq	sp, ip, r0, lsl #2
    1648:	000ccd00 	andeq	ip, ip, r0, lsl #26
    164c:	13113d00 	tstne	r1, #0, 26
    1650:	06b00000 	ldrteq	r0, [r0], r0
    1654:	f0020800 			; <UNDEFINED> instruction: 0xf0020800
    1658:	01000000 	mrseq	r0, (UNDEF: 0)
    165c:	373b0370 			; <UNDEFINED> instruction: 0x373b0370
    1660:	f1000013 	cps	#19
    1664:	ef00000c 	svc	0x0000000c
    1668:	3b00000c 	blcc	16a0 <__Stack_Size+0x6a0>
    166c:	0000132b 	andeq	r1, r0, fp, lsr #6
    1670:	00000d06 	andeq	r0, r0, r6, lsl #26
    1674:	00000d04 	andeq	r0, r0, r4, lsl #26
    1678:	00131f3b 	andseq	r1, r3, fp, lsr pc
    167c:	000d1b00 	andeq	r1, sp, r0, lsl #22
    1680:	000d1900 	andeq	r1, sp, r0, lsl #18
    1684:	06b83900 	ldrteq	r3, [r8], r0, lsl #18
    1688:	0a230800 	beq	8c3690 <__Stack_Size+0x8c2690>
    168c:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    1690:	2f300150 	svccs	0x00300150
    1694:	71025101 	tstvc	r2, r1, lsl #2
    1698:	52012f00 	andpl	r2, r1, #0, 30
    169c:	00007202 	andeq	r7, r0, r2, lsl #4
    16a0:	01430000 	mrseq	r0, (UNDEF: 67)
    16a4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    16a8:	ee064101 	adfs	f4, f6, f1
    16ac:	98080001 	stmdals	r8, {r0}
    16b0:	02080002 	andeq	r0, r8, #2
    16b4:	e801007d 	stmda	r1, {r0, r2, r3, r4, r5, r6}
    16b8:	44000011 	strmi	r0, [r0], #-17	; 0xffffffef
    16bc:	00001112 	andeq	r1, r0, r2, lsl r1
    16c0:	0001c945 	andeq	ip, r1, r5, asr #18
    16c4:	034e0100 	movteq	r0, #57600	; 0xe100
    16c8:	0000007b 	andeq	r0, r0, fp, ror r0
    16cc:	02063800 	andeq	r3, r6, #0, 16
    16d0:	02160800 	andseq	r0, r6, #0, 16
    16d4:	11340800 	teqne	r4, r0, lsl #16
    16d8:	c9350000 	ldmdbgt	r5!, {}	; <UNPREDICTABLE>
    16dc:	01000001 	tsteq	r0, r1
    16e0:	007b034e 	rsbseq	r0, fp, lr, asr #6
    16e4:	0d330000 	ldceq	0, cr0, [r3, #-0]
    16e8:	0d2f0000 	stceq	0, cr0, [pc, #-0]	; 16f0 <__Stack_Size+0x6f0>
    16ec:	2d000000 	stccs	0, cr0, [r0, #-0]
    16f0:	00000068 	andeq	r0, r0, r8, rrx
    16f4:	00001152 	andeq	r1, r0, r2, asr r1
    16f8:	72746336 	rsbsvc	r6, r4, #-671088640	; 0xd8000000
    16fc:	10500100 	subsne	r0, r0, r0, lsl #2
    1700:	0000007b 	andeq	r0, r0, fp, ror r0
    1704:	00000d5a 	andeq	r0, r0, sl, asr sp
    1708:	00000d52 	andeq	r0, r0, r2, asr sp
    170c:	11644400 	cmnne	r4, r0, lsl #8
    1710:	c9450000 	stmdbgt	r5, {}^	; <UNPREDICTABLE>
    1714:	01000001 	tsteq	r0, r1
    1718:	007b0351 	rsbseq	r0, fp, r1, asr r3
    171c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    1720:	08000224 	stmdaeq	r0, {r2, r5, r9}
    1724:	08000232 	stmdaeq	r0, {r1, r4, r5, r9}
    1728:	00001186 	andeq	r1, r0, r6, lsl #3
    172c:	0001c935 	andeq	ip, r1, r5, lsr r9
    1730:	03510100 	cmpeq	r1, #0, 2
    1734:	0000007b 	andeq	r0, r0, fp, ror r0
    1738:	00000dad 	andeq	r0, r0, sp, lsr #27
    173c:	00000da7 	andeq	r0, r0, r7, lsr #27
    1740:	00802d00 	addeq	r2, r0, r0, lsl #26
    1744:	11a20000 			; <UNDEFINED> instruction: 0x11a20000
    1748:	69360000 	ldmdbvs	r6!, {}	; <UNPREDICTABLE>
    174c:	0f580100 	svceq	0x00580100
    1750:	00000041 	andeq	r0, r0, r1, asr #32
    1754:	00000dde 	ldrdeq	r0, [r0], -lr
    1758:	00000dda 	ldrdeq	r0, [r0], -sl
    175c:	02523800 	subseq	r3, r2, #0, 16
    1760:	02580800 	subseq	r0, r8, #0, 16
    1764:	11c40800 	bicne	r0, r4, r0, lsl #16
    1768:	63360000 	teqvs	r6, #0
    176c:	01007274 	tsteq	r0, r4, ror r2
    1770:	007b1059 	rsbseq	r1, fp, r9, asr r0
    1774:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
    1778:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    177c:	46000000 	strmi	r0, [r0], -r0
    1780:	00001344 	andeq	r1, r0, r4, asr #6
    1784:	08000272 	stmdaeq	r0, {r1, r4, r5, r6, r9}
    1788:	00027201 	andeq	r7, r2, r1, lsl #4
    178c:	00027a08 	andeq	r7, r2, r8, lsl #20
    1790:	035f0108 	cmpeq	pc, #8, 2
    1794:	0013533b 	andseq	r5, r3, fp, lsr r3
    1798:	000e4a00 	andeq	r4, lr, r0, lsl #20
    179c:	000e4800 	andeq	r4, lr, r0, lsl #16
    17a0:	47000000 	strmi	r0, [r0, -r0]
    17a4:	000003a6 	andeq	r0, r0, r6, lsr #7
    17a8:	010d2301 	tsteq	sp, r1, lsl #6
    17ac:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
    17b0:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
    17b4:	01007d02 	tsteq	r0, r2, lsl #26
    17b8:	00001210 	andeq	r1, r0, r0, lsl r2
    17bc:	00073148 	andeq	r3, r7, r8, asr #2
    17c0:	2b230100 	blcs	8c1bc8 <__Stack_Size+0x8c0bc8>
    17c4:	00000041 	andeq	r0, r0, r1, asr #32
    17c8:	49005001 	stmdbmi	r0, {r0, ip, lr}
    17cc:	00074901 	andeq	r4, r7, r1, lsl #18
    17d0:	1b210100 	blne	841bd8 <__Stack_Size+0x840bd8>
    17d4:	00125f01 	andseq	r5, r2, r1, lsl #30
    17d8:	0001ea00 	andeq	lr, r1, r0, lsl #20
    17dc:	0001ee08 	andeq	lr, r1, r8, lsl #28
    17e0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    17e4:	00125f01 	andseq	r5, r2, r1, lsl #30
    17e8:	65724a00 	ldrbvs	r4, [r2, #-2560]!	; 0xfffff600
    17ec:	21010071 	tstcs	r1, r1, ror r0
    17f0:	0012663c 	andseq	r6, r2, ip, lsr r6
    17f4:	000e6200 	andeq	r6, lr, r0, lsl #4
    17f8:	000e5e00 	andeq	r5, lr, r0, lsl #28
    17fc:	0d7f4800 	ldcleq	8, cr4, [pc, #-0]	; 1804 <__Stack_Size+0x804>
    1800:	21010000 	mrscs	r0, (UNDEF: 1)
    1804:	00005e4a 	andeq	r5, r0, sl, asr #28
    1808:	48510100 	ldmdami	r1, {r8}^
    180c:	00000737 	andeq	r0, r0, r7, lsr r7
    1810:	5e5b2101 	rdfple	f2, f3, f1
    1814:	01000000 	mrseq	r0, (UNDEF: 0)
    1818:	01020052 	qaddeq	r0, r2, r2
    181c:	00018f08 	andeq	r8, r1, r8, lsl #30
    1820:	20040700 	andcs	r0, r4, r0, lsl #14
    1824:	49000001 	stmdbmi	r0, {r0}
    1828:	0005dd01 	andeq	sp, r5, r1, lsl #26
    182c:	1b200100 	blne	801c34 <__Stack_Size+0x800c34>
    1830:	00125f01 	andseq	r5, r2, r1, lsl #30
    1834:	0001e600 	andeq	lr, r1, r0, lsl #12
    1838:	0001ea08 	andeq	lr, r1, r8, lsl #20
    183c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1840:	0012bb01 	andseq	fp, r2, r1, lsl #22
    1844:	65724a00 	ldrbvs	r4, [r2, #-2560]!	; 0xfffff600
    1848:	20010071 	andcs	r0, r1, r1, ror r0
    184c:	0012663b 	andseq	r6, r2, fp, lsr r6
    1850:	000e8700 	andeq	r8, lr, r0, lsl #14
    1854:	000e8300 	andeq	r8, lr, r0, lsl #6
    1858:	08f64800 	ldmeq	r6!, {fp, lr}^
    185c:	20010000 	andcs	r0, r1, r0
    1860:	0012bb47 	andseq	fp, r2, r7, asr #22
    1864:	48510100 	ldmdami	r1, {r8}^
    1868:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    186c:	11572001 	cmpne	r7, r1
    1870:	0100000a 	tsteq	r0, sl
    1874:	04070052 	streq	r0, [r7], #-82	; 0xffffffae
    1878:	00001020 	andeq	r1, r0, r0, lsr #32
    187c:	035e014b 	cmpeq	lr, #-1073741806	; 0xc0000012
    1880:	1f010000 	svcne	0x00010000
    1884:	41014b1b 	tstmi	r1, fp, lsl fp
    1888:	01000001 	tsteq	r0, r1
    188c:	014b1b1e 	cmpeq	fp, lr, lsl fp
    1890:	00000536 	andeq	r0, r0, r6, lsr r5
    1894:	4c1b1d01 	ldcmi	13, cr1, [fp], {1}
    1898:	00056901 	andeq	r6, r5, r1, lsl #18
    189c:	1b1c0100 	blne	701ca4 <__Stack_Size+0x700ca4>
    18a0:	04ef4d01 	strbteq	r4, [pc], #3329	; 18a8 <__Stack_Size+0x8a8>
    18a4:	c1030000 	mrsgt	r0, (UNDEF: 3)
    18a8:	009a0113 	addseq	r0, sl, r3, lsl r1
    18ac:	11030000 	mrsne	r0, (UNDEF: 3)
    18b0:	42000013 	andmi	r0, r0, #19
    18b4:	00000731 	andeq	r0, r0, r1, lsr r7
    18b8:	4127c103 			; <UNDEFINED> instruction: 0x4127c103
    18bc:	41000000 	mrsmi	r0, (UNDEF: 0)
    18c0:	00667562 	rsbeq	r7, r6, r2, ror #10
    18c4:	1138c103 	teqne	r8, r3, lsl #2
    18c8:	0000000a 	andeq	r0, r0, sl
    18cc:	0003de40 	andeq	sp, r3, r0, asr #28
    18d0:	14b40300 	ldrtne	r0, [r4], #768	; 0x300
    18d4:	13440301 	movtne	r0, #17153	; 0x4301
    18d8:	31420000 	mrscc	r0, (UNDEF: 66)
    18dc:	03000007 	movweq	r0, #7
    18e0:	004129b4 	strheq	r2, [r1], #-148	; 0xffffff6c
    18e4:	62410000 	subvs	r0, r1, #0
    18e8:	03006675 	movweq	r6, #1653	; 0x675
    18ec:	0adf40b4 	beq	ff7d1bc4 <BootRAM+0xe742365>
    18f0:	d1420000 	mrsle	r0, (UNDEF: 66)
    18f4:	03000011 	movweq	r0, #17
    18f8:	005e4eb4 	ldrheq	r4, [lr], #-228	; 0xffffff1c
    18fc:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    1900:	000003fe 	strdeq	r0, [r0], -lr
    1904:	1605de02 	strne	sp, [r5], -r2, lsl #28
    1908:	13610301 	cmnne	r1, #67108864	; 0x4000000
    190c:	444f0000 	strbmi	r0, [pc], #-0	; 1914 <__Stack_Size+0x914>
    1910:	02000003 	andeq	r0, r0, #3
    1914:	732f05de 			; <UNDEFINED> instruction: 0x732f05de
    1918:	00000002 	andeq	r0, r0, r2
    191c:	0012dc50 	andseq	sp, r2, r0, asr ip
    1920:	0001de00 	andeq	sp, r1, r0, lsl #28
    1924:	0001e008 	andeq	lr, r1, r8
    1928:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    192c:	01015101 	tsteq	r1, r1, lsl #2
    1930:	00000437 	andeq	r0, r0, r7, lsr r4
    1934:	00000437 	andeq	r0, r0, r7, lsr r4
    1938:	00063d03 	andeq	r3, r6, r3, lsl #26
    193c:	0000216b 	andeq	r2, r0, fp, ror #2
    1940:	072f0002 	streq	r0, [pc, -r2]!
    1944:	01040000 	mrseq	r0, (UNDEF: 4)
    1948:	00000012 	andeq	r0, r0, r2, lsl r0
    194c:	0009480c 	andeq	r4, r9, ip, lsl #16
    1950:	0000f800 	andeq	pc, r0, r0, lsl #16
    1954:	00086000 	andeq	r6, r8, r0
    1958:	000d5808 	andeq	r5, sp, r8, lsl #16
    195c:	000b5708 	andeq	r5, fp, r8, lsl #14
    1960:	06010200 	streq	r0, [r1], -r0, lsl #4
    1964:	00000188 	andeq	r0, r0, r8, lsl #3
    1968:	0005ef03 	andeq	lr, r5, r3, lsl #30
    196c:	18250700 	stmdane	r5!, {r8, r9, sl}
    1970:	0000003d 	andeq	r0, r0, sp, lsr r0
    1974:	00002c04 	andeq	r2, r0, r4, lsl #24
    1978:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    197c:	00000234 	andeq	r0, r0, r4, lsr r2
    1980:	00024b03 	andeq	r4, r2, r3, lsl #22
    1984:	18280700 	stmdane	r8!, {r8, r9, sl}
    1988:	00000050 	andeq	r0, r0, r0, asr r0
    198c:	02050402 	andeq	r0, r5, #33554432	; 0x2000000
    1990:	02000002 	andeq	r0, r0, #2
    1994:	01fd0508 	mvnseq	r0, r8, lsl #10
    1998:	e5030000 	str	r0, [r3, #-0]
    199c:	07000001 	streq	r0, [r0, -r1]
    19a0:	0074182e 	rsbseq	r1, r4, lr, lsr #16
    19a4:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
    19a8:	05000000 	streq	r0, [r0, #-0]
    19ac:	0000005e 	andeq	r0, r0, lr, asr r0
    19b0:	86080102 	strhi	r0, [r8], -r2, lsl #2
    19b4:	03000001 	movweq	r0, #1
    19b8:	000005ee 	andeq	r0, r0, lr, ror #11
    19bc:	91193107 	tstls	r9, r7, lsl #2
    19c0:	04000000 	streq	r0, [r0], #-0
    19c4:	0000007b 	andeq	r0, r0, fp, ror r0
    19c8:	00007b05 	andeq	r7, r0, r5, lsl #22
    19cc:	07020200 	streq	r0, [r2, -r0, lsl #4]
    19d0:	0000015e 	andeq	r0, r0, lr, asr r1
    19d4:	00024a03 	andeq	r4, r2, r3, lsl #20
    19d8:	19340700 	ldmdbne	r4!, {r8, r9, sl}
    19dc:	000000a9 	andeq	r0, r0, r9, lsr #1
    19e0:	00009804 	andeq	r9, r0, r4, lsl #16
    19e4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    19e8:	000001d3 	ldrdeq	r0, [r0], -r3
    19ec:	ce070802 	cdpgt	8, 0, cr0, cr7, cr2, {0}
    19f0:	06000001 	streq	r0, [r0], -r1
    19f4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    19f8:	b7040074 	smlsdxlt	r4, r4, r0, r0
    19fc:	02000000 	andeq	r0, r0, #0
    1a00:	01d80704 	bicseq	r0, r8, r4, lsl #14
    1a04:	08070000 	stmdaeq	r7, {}	; <UNPREDICTABLE>
    1a08:	1f091e02 	svcne	0x00091e02
    1a0c:	08000001 	stmdaeq	r0, {r0}
    1a10:	000002e4 	andeq	r0, r0, r4, ror #5
    1a14:	5e0b1f02 	cdppl	15, 0, cr1, cr11, cr2, {0}
    1a18:	02000000 	andeq	r0, r0, #0
    1a1c:	ed080023 	stc	0, cr0, [r8, #-140]	; 0xffffff74
    1a20:	02000006 	andeq	r0, r0, #6
    1a24:	005e0b20 	subseq	r0, lr, r0, lsr #22
    1a28:	23020000 	movwcs	r0, #8192	; 0x2000
    1a2c:	03750801 	cmneq	r5, #65536	; 0x10000
    1a30:	21020000 	mrscs	r0, (UNDEF: 2)
    1a34:	00007b0c 	andeq	r7, r0, ip, lsl #22
    1a38:	02230200 	eoreq	r0, r3, #0, 4
    1a3c:	00028008 	andeq	r8, r2, r8
    1a40:	0c220200 	sfmeq	f0, 4, [r2], #-0
    1a44:	0000007b 	andeq	r0, r0, fp, ror r0
    1a48:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    1a4c:	000006c3 	andeq	r0, r0, r3, asr #13
    1a50:	7b0c2302 	blvc	30a660 <__Stack_Size+0x309660>
    1a54:	02000000 	andeq	r0, r0, #0
    1a58:	03000623 	movweq	r0, #1571	; 0x623
    1a5c:	00000760 	andeq	r0, r0, r0, ror #14
    1a60:	ca022402 	bgt	8aa70 <__Stack_Size+0x89a70>
    1a64:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1a68:	00250105 	eoreq	r0, r5, r5, lsl #2
    1a6c:	58080000 	stmdapl	r8, {}	; <UNPREDICTABLE>
    1a70:	00027201 	andeq	r7, r2, r1, lsl #4
    1a74:	06af0a00 	strteq	r0, [pc], r0, lsl #20
    1a78:	0a720000 	beq	1c81a80 <__Stack_Size+0x1c80a80>
    1a7c:	00000841 	andeq	r0, r0, r1, asr #16
    1a80:	037c0a73 	cmneq	ip, #471040	; 0x73000
    1a84:	0a740000 	beq	1d01a8c <__Stack_Size+0x1d00a8c>
    1a88:	00000550 	andeq	r0, r0, r0, asr r5
    1a8c:	079a0a75 			; <UNDEFINED> instruction: 0x079a0a75
    1a90:	0a760000 	beq	1d81a98 <__Stack_Size+0x1d80a98>
    1a94:	000007e1 	andeq	r0, r0, r1, ror #15
    1a98:	07880a7b 			; <UNDEFINED> instruction: 0x07880a7b
    1a9c:	0a7c0000 	beq	1f01aa4 <__Stack_Size+0x1f00aa4>
    1aa0:	00000352 	andeq	r0, r0, r2, asr r3
    1aa4:	07240a7e 			; <UNDEFINED> instruction: 0x07240a7e
    1aa8:	0b7f0000 	bleq	1fc1ab0 <__Stack_Size+0x1fc0ab0>
    1aac:	0000052c 	andeq	r0, r0, ip, lsr #10
    1ab0:	05780b00 	ldrbeq	r0, [r8, #-2816]!	; 0xfffff500
    1ab4:	0b010000 	bleq	41abc <__Stack_Size+0x40abc>
    1ab8:	0000088c 	andeq	r0, r0, ip, lsl #17
    1abc:	06250b02 	strteq	r0, [r5], -r2, lsl #22
    1ac0:	0b030000 	bleq	c1ac8 <__Stack_Size+0xc0ac8>
    1ac4:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1ac8:	036c0b04 	cmneq	ip, #4, 22	; 0x1000
    1acc:	0b050000 	bleq	141ad4 <__Stack_Size+0x140ad4>
    1ad0:	00000314 	andeq	r0, r0, r4, lsl r3
    1ad4:	06e20b06 	strbteq	r0, [r2], r6, lsl #22
    1ad8:	0b070000 	bleq	1c1ae0 <__Stack_Size+0x1c0ae0>
    1adc:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
    1ae0:	082f0b08 	stmdaeq	pc!, {r3, r8, r9, fp}	; <UNPREDICTABLE>
    1ae4:	0b090000 	bleq	241aec <__Stack_Size+0x240aec>
    1ae8:	0000055e 	andeq	r0, r0, lr, asr r5
    1aec:	05050b0a 	streq	r0, [r5, #-2826]	; 0xfffff4f6
    1af0:	0b0b0000 	bleq	2c1af8 <__Stack_Size+0x2c0af8>
    1af4:	000002c5 	andeq	r0, r0, r5, asr #5
    1af8:	05a10b0c 	streq	r0, [r1, #2828]!	; 0xb0c
    1afc:	0b0d0000 	bleq	341b04 <__Stack_Size+0x340b04>
    1b00:	000003eb 	andeq	r0, r0, fp, ror #7
    1b04:	080d0b0e 	stmdaeq	sp, {r1, r2, r3, r8, r9, fp}
    1b08:	0b0f0000 	bleq	3c1b10 <__Stack_Size+0x3c0b10>
    1b0c:	000004db 	ldrdeq	r0, [r0], -fp
    1b10:	029b0b10 	addseq	r0, fp, #16, 22	; 0x4000
    1b14:	0b110000 	bleq	441b1c <__Stack_Size+0x440b1c>
    1b18:	0000086a 	andeq	r0, r0, sl, ror #16
    1b1c:	044f0b12 	strbeq	r0, [pc], #-2834	; 1b24 <__Stack_Size+0xb24>
    1b20:	0b130000 	bleq	4c1b28 <__Stack_Size+0x4c0b28>
    1b24:	0000026b 	andeq	r0, r0, fp, ror #4
    1b28:	041f0b14 	ldreq	r0, [pc], #-2836	; 1b30 <__Stack_Size+0xb30>
    1b2c:	0b150000 	bleq	541b34 <__Stack_Size+0x540b34>
    1b30:	0000028d 	andeq	r0, r0, sp, lsl #5
    1b34:	07d40b16 	bfieq	r0, r6, (invalid: 22:20)
    1b38:	0b170000 	bleq	5c1b40 <__Stack_Size+0x5c0b40>
    1b3c:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    1b40:	06040b18 			; <UNDEFINED> instruction: 0x06040b18
    1b44:	0b190000 	bleq	641b4c <__Stack_Size+0x640b4c>
    1b48:	00000705 	andeq	r0, r0, r5, lsl #14
    1b4c:	06cb0b1a 			; <UNDEFINED> instruction: 0x06cb0b1a
    1b50:	0b1b0000 	bleq	6c1b58 <__Stack_Size+0x6c0b58>
    1b54:	0000073f 	andeq	r0, r0, pc, lsr r7
    1b58:	04fb0b1c 	ldrbteq	r0, [fp], #2844	; 0xb1c
    1b5c:	0b1d0000 	bleq	741b64 <__Stack_Size+0x740b64>
    1b60:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    1b64:	05c20b1e 	strbeq	r0, [r2, #2846]	; 0xb1e
    1b68:	0b1f0000 	bleq	7c1b70 <__Stack_Size+0x7c0b70>
    1b6c:	00000717 	andeq	r0, r0, r7, lsl r7
    1b70:	04bc0b20 	ldrteq	r0, [ip], #2848	; 0xb20
    1b74:	0b210000 	bleq	841b7c <__Stack_Size+0x840b7c>
    1b78:	000002ae 	andeq	r0, r0, lr, lsr #5
    1b7c:	03d30b22 	bicseq	r0, r3, #34816	; 0x8800
    1b80:	0b230000 	bleq	8c1b88 <__Stack_Size+0x8c0b88>
    1b84:	000007f2 	strdeq	r0, [r0], -r2
    1b88:	06970b24 	ldreq	r0, [r7], r4, lsr #22
    1b8c:	0b250000 	bleq	941b94 <__Stack_Size+0x940b94>
    1b90:	00000476 	andeq	r0, r0, r6, ror r4
    1b94:	08800b26 	stmeq	r0, {r1, r2, r5, r8, r9, fp}
    1b98:	0b270000 	bleq	9c1ba0 <__Stack_Size+0x9c0ba0>
    1b9c:	0000033a 	andeq	r0, r0, sl, lsr r3
    1ba0:	06160b28 	ldreq	r0, [r6], -r8, lsr #22
    1ba4:	0b290000 	bleq	a41bac <__Stack_Size+0xa40bac>
    1ba8:	0000051d 	andeq	r0, r0, sp, lsl r5
    1bac:	6303002a 	movwvs	r0, #12330	; 0x302a
    1bb0:	08000004 	stmdaeq	r0, {r2}
    1bb4:	012b0390 			; <UNDEFINED> instruction: 0x012b0390
    1bb8:	040c0000 	streq	r0, [ip], #-0
    1bbc:	0984060e 	stmibeq	r4, {r1, r2, r3, r9, sl}
    1bc0:	00000356 	andeq	r0, r0, r6, asr r3
    1bc4:	0003a108 	andeq	sl, r3, r8, lsl #2
    1bc8:	11860600 	orrne	r0, r6, r0, lsl #12
    1bcc:	00000366 	andeq	r0, r0, r6, ror #6
    1bd0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1bd4:	00000633 	andeq	r0, r0, r3, lsr r6
    1bd8:	6b118706 	blvs	4637f8 <__Stack_Size+0x4627f8>
    1bdc:	02000003 	andeq	r0, r0, #3
    1be0:	ed082023 	stc	0, cr2, [r8, #-140]	; 0xffffff74
    1be4:	06000007 	streq	r0, [r0], -r7
    1be8:	03661188 	cmneq	r6, #136, 2	; 0x22
    1bec:	23030000 	movwcs	r0, #12288	; 0x3000
    1bf0:	ca080180 	bgt	2021f8 <__Stack_Size+0x2011f8>
    1bf4:	06000003 	streq	r0, [r0], -r3
    1bf8:	036b1189 	cmneq	fp, #1073741858	; 0x40000022
    1bfc:	23030000 	movwcs	r0, #12288	; 0x3000
    1c00:	500801a0 	andpl	r0, r8, r0, lsr #3
    1c04:	06000008 	streq	r0, [r0], -r8
    1c08:	0366118a 	cmneq	r6, #-2147483614	; 0x80000022
    1c0c:	23030000 	movwcs	r0, #12288	; 0x3000
    1c10:	47080280 	strmi	r0, [r8, -r0, lsl #5]
    1c14:	06000006 	streq	r0, [r0], -r6
    1c18:	036b118b 	cmneq	fp, #-1073741790	; 0xc0000022
    1c1c:	23030000 	movwcs	r0, #12288	; 0x3000
    1c20:	970802a0 	strls	r0, [r8, -r0, lsr #5]
    1c24:	06000005 	streq	r0, [r0], -r5
    1c28:	0366118c 	cmneq	r6, #140, 2	; 0x23
    1c2c:	23030000 	movwcs	r0, #12288	; 0x3000
    1c30:	51080380 	smlabbpl	r8, r0, r3, r0
    1c34:	06000006 	streq	r0, [r0], -r6
    1c38:	036b118d 	cmneq	fp, #1073741859	; 0x40000023
    1c3c:	23030000 	movwcs	r0, #12288	; 0x3000
    1c40:	fc0803a0 	stc2	3, cr0, [r8], {160}	; 0xa0
    1c44:	06000007 	streq	r0, [r0], -r7
    1c48:	0366118e 	cmneq	r6, #-2147483613	; 0x80000023
    1c4c:	23030000 	movwcs	r0, #12288	; 0x3000
    1c50:	5b080480 	blpl	202e58 <__Stack_Size+0x201e58>
    1c54:	06000006 	streq	r0, [r0], -r6
    1c58:	037b118f 	cmneq	fp, #-1073741789	; 0xc0000023
    1c5c:	23030000 	movwcs	r0, #12288	; 0x3000
    1c60:	490d04a0 	stmdbmi	sp, {r5, r7, sl}
    1c64:	90060050 	andls	r0, r6, r0, asr r0
    1c68:	00039b11 	andeq	r9, r3, r1, lsl fp
    1c6c:	80230300 	eorhi	r0, r3, r0, lsl #6
    1c70:	06650806 	strbteq	r0, [r5], -r6, lsl #16
    1c74:	91060000 	mrsls	r0, (UNDEF: 6)
    1c78:	0003a011 	andeq	sl, r3, r1, lsl r0
    1c7c:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
    1c80:	06110807 	ldreq	r0, [r1], -r7, lsl #16
    1c84:	92060000 	andls	r0, r6, #0
    1c88:	0000a411 	andeq	sl, r0, r1, lsl r4
    1c8c:	80230300 	eorhi	r0, r3, r0, lsl #6
    1c90:	a40e001c 	strge	r0, [lr], #-28	; 0xffffffe4
    1c94:	66000000 	strvs	r0, [r0], -r0
    1c98:	0f000003 	svceq	0x00000003
    1c9c:	000000c3 	andeq	r0, r0, r3, asr #1
    1ca0:	56040007 	strpl	r0, [r4], -r7
    1ca4:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1ca8:	00000098 	muleq	r0, r8, r0
    1cac:	0000037b 	andeq	r0, r0, fp, ror r3
    1cb0:	0000c30f 	andeq	ip, r0, pc, lsl #6
    1cb4:	0e001700 	cdpeq	7, 0, cr1, cr0, cr0, {0}
    1cb8:	00000098 	muleq	r0, r8, r0
    1cbc:	0000038b 	andeq	r0, r0, fp, lsl #7
    1cc0:	0000c30f 	andeq	ip, r0, pc, lsl #6
    1cc4:	0e003700 	cdpeq	7, 0, cr3, cr0, cr0, {0}
    1cc8:	0000006a 	andeq	r0, r0, sl, rrx
    1ccc:	0000039b 	muleq	r0, fp, r3
    1cd0:	0000c30f 	andeq	ip, r0, pc, lsl #6
    1cd4:	0400ef00 	streq	lr, [r0], #-3840	; 0xfffff100
    1cd8:	0000038b 	andeq	r0, r0, fp, lsl #7
    1cdc:	0000980e 	andeq	r9, r0, lr, lsl #16
    1ce0:	0003b100 	andeq	fp, r3, r0, lsl #2
    1ce4:	00c31000 	sbceq	r1, r3, r0
    1ce8:	02830000 	addeq	r0, r3, #0
    1cec:	06f60300 	ldrbteq	r0, [r6], r0, lsl #6
    1cf0:	93060000 	movwls	r0, #24576	; 0x6000
    1cf4:	00027e04 	andeq	r7, r2, r4, lsl #28
    1cf8:	02531100 	subseq	r1, r3, #0, 2
    1cfc:	ce060000 	cdpgt	0, 0, cr0, cr6, cr0, {0}
    1d00:	00be1506 	adcseq	r1, lr, r6, lsl #10
    1d04:	01010000 	mrseq	r0, (UNDEF: 1)
    1d08:	00020b12 	andeq	r0, r2, r2, lsl fp
    1d0c:	11450900 	cmpne	r5, r0, lsl #18
    1d10:	00000098 	muleq	r0, r8, r0
    1d14:	6f0e0101 	svcvs	0x000e0101
    1d18:	ea000000 	b	1d20 <__Stack_Size+0xd20>
    1d1c:	0f000003 	svceq	0x00000003
    1d20:	000000c3 	andeq	r0, r0, r3, asr #1
    1d24:	da05000f 	ble	141d68 <__Stack_Size+0x140d68>
    1d28:	12000003 	andne	r0, r0, #3
    1d2c:	00000150 	andeq	r0, r0, r0, asr r1
    1d30:	ea174609 	b	5d355c <__Stack_Size+0x5d255c>
    1d34:	01000003 	tsteq	r0, r3
    1d38:	006f0e01 	rsbeq	r0, pc, r1, lsl #28
    1d3c:	040d0000 	streq	r0, [sp], #-0
    1d40:	c30f0000 	movwgt	r0, #61440	; 0xf000
    1d44:	07000000 	streq	r0, [r0, -r0]
    1d48:	03fd0500 	mvnseq	r0, #0, 10
    1d4c:	26120000 	ldrcs	r0, [r2], -r0
    1d50:	09000002 	stmdbeq	r0, {r1}
    1d54:	040d1747 	streq	r1, [sp], #-1863	; 0xfffff8b9
    1d58:	01010000 	mrseq	r0, (UNDEF: 1)
    1d5c:	a3085007 	movwge	r5, #32775	; 0x8007
    1d60:	00055409 	andeq	r5, r5, r9, lsl #8
    1d64:	52530d00 	subspl	r0, r3, #0, 26
    1d68:	11a50800 			; <UNDEFINED> instruction: 0x11a50800
    1d6c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d70:	0d002302 	stceq	3, cr2, [r0, #-8]
    1d74:	00315243 	eorseq	r5, r1, r3, asr #4
    1d78:	a411a608 	ldrge	sl, [r1], #-1544	; 0xfffff9f8
    1d7c:	02000000 	andeq	r0, r0, #0
    1d80:	430d0423 	movwmi	r0, #54307	; 0xd423
    1d84:	08003252 	stmdaeq	r0, {r1, r4, r6, r9, ip, sp}
    1d88:	00a411a7 	adceq	r1, r4, r7, lsr #3
    1d8c:	23020000 	movwcs	r0, #8192	; 0x2000
    1d90:	0cd40808 	ldcleq	8, cr0, [r4], {8}
    1d94:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    1d98:	0000a411 	andeq	sl, r0, r1, lsl r4
    1d9c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1da0:	000cda08 	andeq	sp, ip, r8, lsl #20
    1da4:	11a90800 			; <UNDEFINED> instruction: 0x11a90800
    1da8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1dac:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    1db0:	00000f5f 	andeq	r0, r0, pc, asr pc
    1db4:	a411aa08 	ldrge	sl, [r1], #-2568	; 0xfffff5f8
    1db8:	02000000 	andeq	r0, r0, #0
    1dbc:	65081423 	strvs	r1, [r8, #-1059]	; 0xfffffbdd
    1dc0:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    1dc4:	00a411ab 	adceq	r1, r4, fp, lsr #3
    1dc8:	23020000 	movwcs	r0, #8192	; 0x2000
    1dcc:	0f6b0818 	svceq	0x006b0818
    1dd0:	ac080000 	stcge	0, cr0, [r8], {-0}
    1dd4:	0000a411 	andeq	sl, r0, r1, lsl r4
    1dd8:	1c230200 	sfmne	f0, 4, [r3], #-0
    1ddc:	000f7108 	andeq	r7, pc, r8, lsl #2
    1de0:	11ad0800 			; <UNDEFINED> instruction: 0x11ad0800
    1de4:	000000a4 	andeq	r0, r0, r4, lsr #1
    1de8:	0d202302 	stceq	3, cr2, [r0, #-8]!
    1dec:	00525448 	subseq	r5, r2, r8, asr #8
    1df0:	a411ae08 	ldrge	sl, [r1], #-3592	; 0xfffff1f8
    1df4:	02000000 	andeq	r0, r0, #0
    1df8:	4c0d2423 	cfstrsmi	mvf2, [sp], {35}	; 0x23
    1dfc:	08005254 	stmdaeq	r0, {r2, r4, r6, r9, ip, lr}
    1e00:	00a411af 	adceq	r1, r4, pc, lsr #3
    1e04:	23020000 	movwcs	r0, #8192	; 0x2000
    1e08:	08b40828 	ldmeq	r4!, {r3, r5, fp}
    1e0c:	b0080000 	andlt	r0, r8, r0
    1e10:	0000a411 	andeq	sl, r0, r1, lsl r4
    1e14:	2c230200 	sfmcs	f0, 4, [r3], #-0
    1e18:	0008b908 	andeq	fp, r8, r8, lsl #18
    1e1c:	11b10800 			; <UNDEFINED> instruction: 0x11b10800
    1e20:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e24:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    1e28:	000008be 			; <UNDEFINED> instruction: 0x000008be
    1e2c:	a411b208 	ldrge	fp, [r1], #-520	; 0xfffffdf8
    1e30:	02000000 	andeq	r0, r0, #0
    1e34:	ba083423 	blt	20eec8 <__Stack_Size+0x20dec8>
    1e38:	0800000c 	stmdaeq	r0, {r2, r3}
    1e3c:	00a411b3 	strhteq	r1, [r4], r3
    1e40:	23020000 	movwcs	r0, #8192	; 0x2000
    1e44:	0d200838 	stceq	8, cr0, [r0, #-224]!	; 0xffffff20
    1e48:	b4080000 	strlt	r0, [r8], #-0
    1e4c:	0000a411 	andeq	sl, r0, r1, lsl r4
    1e50:	3c230200 	sfmcc	f0, 4, [r3], #-0
    1e54:	000d2508 	andeq	r2, sp, r8, lsl #10
    1e58:	11b50800 			; <UNDEFINED> instruction: 0x11b50800
    1e5c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e60:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    1e64:	00000d2a 	andeq	r0, r0, sl, lsr #26
    1e68:	a411b608 	ldrge	fp, [r1], #-1544	; 0xfffff9f8
    1e6c:	02000000 	andeq	r0, r0, #0
    1e70:	2f084423 	svccs	0x00084423
    1e74:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    1e78:	00a411b7 	strhteq	r1, [r4], r7
    1e7c:	23020000 	movwcs	r0, #8192	; 0x2000
    1e80:	52440d48 	subpl	r0, r4, #72, 26	; 0x1200
    1e84:	11b80800 			; <UNDEFINED> instruction: 0x11b80800
    1e88:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e8c:	004c2302 	subeq	r2, ip, r2, lsl #6
    1e90:	000be803 	andeq	lr, fp, r3, lsl #16
    1e94:	03b90800 			; <UNDEFINED> instruction: 0x03b90800
    1e98:	00000420 	andeq	r0, r0, r0, lsr #8
    1e9c:	79081c13 	stmdbvc	r8, {r0, r1, r4, sl, fp, ip}
    1ea0:	05db0901 	ldrbeq	r0, [fp, #2305]	; 0x901
    1ea4:	43140000 	tstmi	r4, #0
    1ea8:	08004c52 	stmdaeq	r0, {r1, r4, r6, sl, fp, lr}
    1eac:	a411017b 	ldrge	r0, [r1], #-379	; 0xfffffe85
    1eb0:	02000000 	andeq	r0, r0, #0
    1eb4:	43140023 	tstmi	r4, #35	; 0x23
    1eb8:	08004852 	stmdaeq	r0, {r1, r4, r6, fp, lr}
    1ebc:	a411017c 	ldrge	r0, [r1], #-380	; 0xfffffe84
    1ec0:	02000000 	andeq	r0, r0, #0
    1ec4:	49140423 	ldmdbmi	r4, {r0, r1, r5, sl}
    1ec8:	08005244 	stmdaeq	r0, {r2, r6, r9, ip, lr}
    1ecc:	a411017d 	ldrge	r0, [r1], #-381	; 0xfffffe83
    1ed0:	02000000 	andeq	r0, r0, #0
    1ed4:	4f140823 	svcmi	0x00140823
    1ed8:	08005244 	stmdaeq	r0, {r2, r6, r9, ip, lr}
    1edc:	a411017e 	ldrge	r0, [r1], #-382	; 0xfffffe82
    1ee0:	02000000 	andeq	r0, r0, #0
    1ee4:	b3150c23 	tstlt	r5, #8960	; 0x2300
    1ee8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1eec:	a411017f 	ldrge	r0, [r1], #-383	; 0xfffffe81
    1ef0:	02000000 	andeq	r0, r0, #0
    1ef4:	42141023 	andsmi	r1, r4, #35	; 0x23
    1ef8:	08005252 	stmdaeq	r0, {r1, r4, r6, r9, ip, lr}
    1efc:	a4110180 	ldrge	r0, [r1], #-384	; 0xfffffe80
    1f00:	02000000 	andeq	r0, r0, #0
    1f04:	66151423 	ldrvs	r1, [r5], -r3, lsr #8
    1f08:	08000002 	stmdaeq	r0, {r1}
    1f0c:	a4110181 	ldrge	r0, [r1], #-385	; 0xfffffe7f
    1f10:	02000000 	andeq	r0, r0, #0
    1f14:	16001823 	strne	r1, [r0], -r3, lsr #16
    1f18:	000000da 	ldrdeq	r0, [r0], -sl
    1f1c:	03018208 	movweq	r8, #4616	; 0x1208
    1f20:	00000560 	andeq	r0, r0, r0, ror #10
    1f24:	bb082813 	bllt	20bf78 <__Stack_Size+0x20af78>
    1f28:	06920901 	ldreq	r0, [r2], r1, lsl #18
    1f2c:	43140000 	tstmi	r4, #0
    1f30:	bd080052 	stclt	0, cr0, [r8, #-328]	; 0xfffffeb8
    1f34:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f38:	23020000 	movwcs	r0, #8192	; 0x2000
    1f3c:	000d1500 	andeq	r1, sp, r0, lsl #10
    1f40:	be080000 	cdplt	0, 0, cr0, cr8, cr0, {0}
    1f44:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f48:	23020000 	movwcs	r0, #8192	; 0x2000
    1f4c:	49431404 	stmdbmi	r3, {r2, sl, ip}^
    1f50:	bf080052 	svclt	0x00080052
    1f54:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f58:	23020000 	movwcs	r0, #8192	; 0x2000
    1f5c:	01b31508 			; <UNDEFINED> instruction: 0x01b31508
    1f60:	c0080000 	andgt	r0, r8, r0
    1f64:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f68:	23020000 	movwcs	r0, #8192	; 0x2000
    1f6c:	019d150c 	orrseq	r1, sp, ip, lsl #10
    1f70:	c1080000 	mrsgt	r0, (UNDEF: 8)
    1f74:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f78:	23020000 	movwcs	r0, #8192	; 0x2000
    1f7c:	00b81510 	adcseq	r1, r8, r0, lsl r5
    1f80:	c2080000 	andgt	r0, r8, #0
    1f84:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f88:	23020000 	movwcs	r0, #8192	; 0x2000
    1f8c:	00001514 	andeq	r1, r0, r4, lsl r5
    1f90:	c3080000 	movwgt	r0, #32768	; 0x8000
    1f94:	00a41101 	adceq	r1, r4, r1, lsl #2
    1f98:	23020000 	movwcs	r0, #8192	; 0x2000
    1f9c:	01ab1518 			; <UNDEFINED> instruction: 0x01ab1518
    1fa0:	c4080000 	strgt	r0, [r8], #-0
    1fa4:	00a41101 	adceq	r1, r4, r1, lsl #2
    1fa8:	23020000 	movwcs	r0, #8192	; 0x2000
    1fac:	0008151c 	andeq	r1, r8, ip, lsl r5
    1fb0:	c5080000 	strgt	r0, [r8, #-0]
    1fb4:	00a41101 	adceq	r1, r4, r1, lsl #2
    1fb8:	23020000 	movwcs	r0, #8192	; 0x2000
    1fbc:	53431420 	movtpl	r1, #13344	; 0x3420
    1fc0:	c6080052 			; <UNDEFINED> instruction: 0xc6080052
    1fc4:	00a41101 	adceq	r1, r4, r1, lsl #2
    1fc8:	23020000 	movwcs	r0, #8192	; 0x2000
    1fcc:	3e160024 	cdpcc	0, 1, cr0, cr6, cr4, {1}
    1fd0:	08000002 	stmdaeq	r0, {r1}
    1fd4:	e80301c9 	stmda	r3, {r0, r3, r6, r7, r8}
    1fd8:	13000005 	movwne	r0, #5
    1fdc:	020c0854 	andeq	r0, ip, #84, 16	; 0x540000
    1fe0:	0007f809 	andeq	pc, r7, r9, lsl #16
    1fe4:	52431400 	subpl	r1, r3, #0, 8
    1fe8:	0e080031 	mcreq	0, 0, r0, cr8, cr1, {1}
    1fec:	00a41102 	adceq	r1, r4, r2, lsl #2
    1ff0:	23020000 	movwcs	r0, #8192	; 0x2000
    1ff4:	52431400 	subpl	r1, r3, #0, 8
    1ff8:	0f080032 	svceq	0x00080032
    1ffc:	00a41102 	adceq	r1, r4, r2, lsl #2
    2000:	23020000 	movwcs	r0, #8192	; 0x2000
    2004:	0bbd1504 	bleq	fef4741c <BootRAM+0xdeb7bbd>
    2008:	10080000 	andne	r0, r8, r0
    200c:	00a41102 	adceq	r1, r4, r2, lsl #2
    2010:	23020000 	movwcs	r0, #8192	; 0x2000
    2014:	0aef1508 	beq	ffbc743c <BootRAM+0xeb37bdd>
    2018:	11080000 	mrsne	r0, (UNDEF: 8)
    201c:	00a41102 	adceq	r1, r4, r2, lsl #2
    2020:	23020000 	movwcs	r0, #8192	; 0x2000
    2024:	5253140c 	subspl	r1, r3, #12, 8	; 0xc000000
    2028:	02120800 	andseq	r0, r2, #0, 16
    202c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2030:	10230200 	eorne	r0, r3, r0, lsl #4
    2034:	52474514 	subpl	r4, r7, #20, 10	; 0x5000000
    2038:	02130800 	andseq	r0, r3, #0, 16
    203c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2040:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2044:	000a2f15 	andeq	r2, sl, r5, lsl pc
    2048:	02140800 	andseq	r0, r4, #0, 16
    204c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2050:	18230200 	stmdane	r3!, {r9}
    2054:	000a3515 	andeq	r3, sl, r5, lsl r5
    2058:	02150800 	andseq	r0, r5, #0, 16
    205c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2060:	1c230200 	sfmne	f0, 4, [r3], #-0
    2064:	000b4b15 	andeq	r4, fp, r5, lsl fp
    2068:	02160800 	andseq	r0, r6, #0, 16
    206c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2070:	20230200 	eorcs	r0, r3, r0, lsl #4
    2074:	544e4314 	strbpl	r4, [lr], #-788	; 0xfffffcec
    2078:	02170800 	andseq	r0, r7, #0, 16
    207c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2080:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    2084:	43535014 	cmpmi	r3, #20
    2088:	02180800 	andseq	r0, r8, #0, 16
    208c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2090:	28230200 	stmdacs	r3!, {r9}
    2094:	52524114 	subspl	r4, r2, #20, 2
    2098:	02190800 	andseq	r0, r9, #0, 16
    209c:	0000a411 	andeq	sl, r0, r1, lsl r4
    20a0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    20a4:	52435214 	subpl	r5, r3, #20, 4	; 0x40000001
    20a8:	021a0800 	andseq	r0, sl, #0, 16
    20ac:	0000a411 	andeq	sl, r0, r1, lsl r4
    20b0:	30230200 	eorcc	r0, r3, r0, lsl #4
    20b4:	000a2015 	andeq	r2, sl, r5, lsl r0
    20b8:	021b0800 	andseq	r0, fp, #0, 16
    20bc:	0000a411 	andeq	sl, r0, r1, lsl r4
    20c0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    20c4:	000a2515 	andeq	r2, sl, r5, lsl r5
    20c8:	021c0800 	andseq	r0, ip, #0, 16
    20cc:	0000a411 	andeq	sl, r0, r1, lsl r4
    20d0:	38230200 	stmdacc	r3!, {r9}
    20d4:	000a2a15 	andeq	r2, sl, r5, lsl sl
    20d8:	021d0800 	andseq	r0, sp, #0, 16
    20dc:	0000a411 	andeq	sl, r0, r1, lsl r4
    20e0:	3c230200 	sfmcc	f0, 4, [r3], #-0
    20e4:	000ba615 	andeq	sl, fp, r5, lsl r6
    20e8:	021e0800 	andseq	r0, lr, #0, 16
    20ec:	0000a411 	andeq	sl, r0, r1, lsl r4
    20f0:	40230200 	eormi	r0, r3, r0, lsl #4
    20f4:	000a0a15 	andeq	r0, sl, r5, lsl sl
    20f8:	021f0800 	andseq	r0, pc, #0, 16
    20fc:	0000a411 	andeq	sl, r0, r1, lsl r4
    2100:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    2104:	52434414 	subpl	r4, r3, #20, 8	; 0x14000000
    2108:	02200800 	eoreq	r0, r0, #0, 16
    210c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2110:	48230200 	stmdami	r3!, {r9}
    2114:	000d3c15 	andeq	r3, sp, r5, lsl ip
    2118:	02210800 	eoreq	r0, r1, #0, 16
    211c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2120:	4c230200 	sfmmi	f0, 4, [r3], #-0
    2124:	00524f14 	subseq	r4, r2, r4, lsl pc
    2128:	11022208 	tstne	r2, r8, lsl #4
    212c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2130:	00502302 	subseq	r2, r0, r2, lsl #6
    2134:	0009d816 	andeq	sp, r9, r6, lsl r8
    2138:	02230800 	eoreq	r0, r3, #0, 16
    213c:	00069f02 	andeq	r9, r6, r2, lsl #30
    2140:	08541300 	ldmdaeq	r4, {r8, r9, ip}^
    2144:	b0090239 	andlt	r0, r9, r9, lsr r2
    2148:	15000009 	strne	r0, [r0, #-9]
    214c:	00000490 	muleq	r0, r0, r4
    2150:	11023b08 	tstne	r2, r8, lsl #22
    2154:	00000087 	andeq	r0, r0, r7, lsl #1
    2158:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    215c:	00000633 	andeq	r0, r0, r3, lsr r6
    2160:	11023c08 	tstne	r2, r8, lsl #24
    2164:	00000087 	andeq	r0, r0, r7, lsl #1
    2168:	15022302 	strne	r2, [r2, #-770]	; 0xfffffcfe
    216c:	000004c9 	andeq	r0, r0, r9, asr #9
    2170:	11023d08 	tstne	r2, r8, lsl #26
    2174:	00000087 	andeq	r0, r0, r7, lsl #1
    2178:	15042302 	strne	r2, [r4, #-770]	; 0xfffffcfe
    217c:	0000063d 	andeq	r0, r0, sp, lsr r6
    2180:	11023e08 	tstne	r2, r8, lsl #28
    2184:	00000087 	andeq	r0, r0, r7, lsl #1
    2188:	15062302 	strne	r2, [r6, #-770]	; 0xfffffcfe
    218c:	00000518 	andeq	r0, r0, r8, lsl r5
    2190:	11023f08 	tstne	r2, r8, lsl #30
    2194:	00000087 	andeq	r0, r0, r7, lsl #1
    2198:	15082302 	strne	r2, [r8, #-770]	; 0xfffffcfe
    219c:	00000647 	andeq	r0, r0, r7, asr #12
    21a0:	11024008 	tstne	r2, r8
    21a4:	00000087 	andeq	r0, r0, r7, lsl #1
    21a8:	150a2302 	strne	r2, [sl, #-770]	; 0xfffffcfe
    21ac:	0000054b 	andeq	r0, r0, fp, asr #10
    21b0:	11024108 	tstne	r2, r8, lsl #2
    21b4:	00000087 	andeq	r0, r0, r7, lsl #1
    21b8:	150c2302 	strne	r2, [ip, #-770]	; 0xfffffcfe
    21bc:	00000651 	andeq	r0, r0, r1, asr r6
    21c0:	11024208 	tstne	r2, r8, lsl #4
    21c4:	00000087 	andeq	r0, r0, r7, lsl #1
    21c8:	150e2302 	strne	r2, [lr, #-770]	; 0xfffffcfe
    21cc:	0000059c 	muleq	r0, ip, r5
    21d0:	11024308 	tstne	r2, r8, lsl #6
    21d4:	00000087 	andeq	r0, r0, r7, lsl #1
    21d8:	15102302 	ldrne	r2, [r0, #-770]	; 0xfffffcfe
    21dc:	0000065b 	andeq	r0, r0, fp, asr r6
    21e0:	11024408 	tstne	r2, r8, lsl #8
    21e4:	00000087 	andeq	r0, r0, r7, lsl #1
    21e8:	15122302 	ldrne	r2, [r2, #-770]	; 0xfffffcfe
    21ec:	0000062e 	andeq	r0, r0, lr, lsr #12
    21f0:	11024508 	tstne	r2, r8, lsl #10
    21f4:	00000087 	andeq	r0, r0, r7, lsl #1
    21f8:	15142302 	ldrne	r2, [r4, #-770]	; 0xfffffcfe
    21fc:	00000665 	andeq	r0, r0, r5, ror #12
    2200:	11024608 	tstne	r2, r8, lsl #12
    2204:	00000087 	andeq	r0, r0, r7, lsl #1
    2208:	15162302 	ldrne	r2, [r6, #-770]	; 0xfffffcfe
    220c:	000006d8 	ldrdeq	r0, [r0], -r8
    2210:	11024708 	tstne	r2, r8, lsl #14
    2214:	00000087 	andeq	r0, r0, r7, lsl #1
    2218:	15182302 	ldrne	r2, [r8, #-770]	; 0xfffffcfe
    221c:	0000066f 	andeq	r0, r0, pc, ror #12
    2220:	11024808 	tstne	r2, r8, lsl #16
    2224:	00000087 	andeq	r0, r0, r7, lsl #1
    2228:	151a2302 	ldrne	r2, [sl, #-770]	; 0xfffffcfe
    222c:	0000075b 	andeq	r0, r0, fp, asr r7
    2230:	11024908 	tstne	r2, r8, lsl #18
    2234:	00000087 	andeq	r0, r0, r7, lsl #1
    2238:	151c2302 	ldrne	r2, [ip, #-770]	; 0xfffffcfe
    223c:	00000876 	andeq	r0, r0, r6, ror r8
    2240:	11024a08 	tstne	r2, r8, lsl #20
    2244:	000009c0 	andeq	r0, r0, r0, asr #19
    2248:	151e2302 	ldrne	r2, [lr, #-770]	; 0xfffffcfe
    224c:	00000700 	andeq	r0, r0, r0, lsl #14
    2250:	11024b08 	tstne	r2, r8, lsl #22
    2254:	00000087 	andeq	r0, r0, r7, lsl #1
    2258:	15402302 	strbne	r2, [r0, #-770]	; 0xfffffcfe
    225c:	00000679 	andeq	r0, r0, r9, ror r6
    2260:	11024c08 	tstne	r2, r8, lsl #24
    2264:	00000087 	andeq	r0, r0, r7, lsl #1
    2268:	15422302 	strbne	r2, [r2, #-770]	; 0xfffffcfe
    226c:	0000039c 	muleq	r0, ip, r3
    2270:	11024d08 	tstne	r2, r8, lsl #26
    2274:	00000087 	andeq	r0, r0, r7, lsl #1
    2278:	15442302 	strbne	r2, [r4, #-770]	; 0xfffffcfe
    227c:	00000683 	andeq	r0, r0, r3, lsl #13
    2280:	11024e08 	tstne	r2, r8, lsl #28
    2284:	00000087 	andeq	r0, r0, r7, lsl #1
    2288:	14462302 	strbne	r2, [r6], #-770	; 0xfffffcfe
    228c:	00524e46 	subseq	r4, r2, r6, asr #28
    2290:	11024f08 	tstne	r2, r8, lsl #30
    2294:	00000087 	andeq	r0, r0, r7, lsl #1
    2298:	15482302 	strbne	r2, [r8, #-770]	; 0xfffffcfe
    229c:	0000068d 	andeq	r0, r0, sp, lsl #13
    22a0:	11025008 	tstne	r2, r8
    22a4:	00000087 	andeq	r0, r0, r7, lsl #1
    22a8:	154a2302 	strbne	r2, [sl, #-770]	; 0xfffffcfe
    22ac:	00000419 	andeq	r0, r0, r9, lsl r4
    22b0:	11025108 	tstne	r2, r8, lsl #2
    22b4:	00000087 	andeq	r0, r0, r7, lsl #1
    22b8:	154c2302 	strbne	r2, [ip, #-770]	; 0xfffffcfe
    22bc:	0000042d 	andeq	r0, r0, sp, lsr #8
    22c0:	11025208 	tstne	r2, r8, lsl #4
    22c4:	00000087 	andeq	r0, r0, r7, lsl #1
    22c8:	154e2302 	strbne	r2, [lr, #-770]	; 0xfffffcfe
    22cc:	00000820 	andeq	r0, r0, r0, lsr #16
    22d0:	11025308 	tstne	r2, r8, lsl #6
    22d4:	00000087 	andeq	r0, r0, r7, lsl #1
    22d8:	15502302 	ldrbne	r2, [r0, #-770]	; 0xfffffcfe
    22dc:	00000898 	muleq	r0, r8, r8
    22e0:	11025408 	tstne	r2, r8, lsl #8
    22e4:	00000087 	andeq	r0, r0, r7, lsl #1
    22e8:	00522302 	subseq	r2, r2, r2, lsl #6
    22ec:	0000870e 	andeq	r8, r0, lr, lsl #14
    22f0:	0009c000 	andeq	ip, r9, r0
    22f4:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    22f8:	00100000 	andseq	r0, r0, r0
    22fc:	0009b004 	andeq	fp, r9, r4
    2300:	040d1600 	streq	r1, [sp], #-1536	; 0xfffffa00
    2304:	55080000 	strpl	r0, [r8, #-0]
    2308:	08050302 	stmdaeq	r5, {r1, r8, r9}
    230c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2310:	000c9204 	andeq	r9, ip, r4, lsl #4
    2314:	0fec1600 	svceq	0x00ec1600
    2318:	650a0000 	strvs	r0, [sl, #-0]
    231c:	00c31701 	sbceq	r1, r3, r1, lsl #14
    2320:	83030000 	movwhi	r0, #12288	; 0x3000
    2324:	0b00000f 	bleq	2368 <__Stack_Size+0x1368>
    2328:	00500e2e 	subseq	r0, r0, lr, lsr #28
    232c:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    2330:	0b000009 	bleq	235c <__Stack_Size+0x135c>
    2334:	00500e74 	subseq	r0, r0, r4, ror lr
    2338:	04170000 	ldreq	r0, [r7], #-0
    233c:	2003a50b 	andcs	sl, r3, fp, lsl #10
    2340:	1800000a 	stmdane	r0, {r1, r3}
    2344:	00000b9a 	muleq	r0, sl, fp
    2348:	d90ca70b 	stmdble	ip, {r0, r1, r3, r8, r9, sl, sp, pc}
    234c:	18000009 	stmdane	r0, {r0, r3}
    2350:	00000d64 	andeq	r0, r0, r4, ror #26
    2354:	2013a80b 	andscs	sl, r3, fp, lsl #16
    2358:	0000000a 	andeq	r0, r0, sl
    235c:	0000740e 	andeq	r7, r0, lr, lsl #8
    2360:	000a3000 	andeq	r3, sl, r0
    2364:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2368:	00030000 	andeq	r0, r3, r0
    236c:	a20b0807 	andge	r0, fp, #458752	; 0x70000
    2370:	000a5809 	andeq	r5, sl, r9, lsl #16
    2374:	0a0f0800 	beq	3c437c <__Stack_Size+0x3c337c>
    2378:	a40b0000 	strge	r0, [fp], #-0
    237c:	0000b707 	andeq	fp, r0, r7, lsl #14
    2380:	00230200 	eoreq	r0, r3, r0, lsl #4
    2384:	000b1608 	andeq	r1, fp, r8, lsl #12
    2388:	05a90b00 	streq	r0, [r9, #2816]!	; 0xb00
    238c:	000009fe 	strdeq	r0, [r0], -lr
    2390:	00042302 	andeq	r2, r4, r2, lsl #6
    2394:	000c8003 	andeq	r8, ip, r3
    2398:	03aa0b00 			; <UNDEFINED> instruction: 0x03aa0b00
    239c:	00000a30 	andeq	r0, r0, r0, lsr sl
    23a0:	2d030419 	cfstrscs	mvf0, [r3, #-100]	; 0xffffff9c
    23a4:	0c00000c 	stceq	0, cr0, [r0], {12}
    23a8:	00a91916 	adceq	r1, r9, r6, lsl r9
    23ac:	58030000 	stmdapl	r3, {}	; <UNPREDICTABLE>
    23b0:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    23b4:	00b70d0c 	adcseq	r0, r7, ip, lsl #26
    23b8:	91030000 	mrsls	r0, (UNDEF: 3)
    23bc:	0c00000b 	stceq	0, cr0, [r0], {11}
    23c0:	0a721b23 	beq	1c89054 <__Stack_Size+0x1c88054>
    23c4:	341a0000 	ldrcc	r0, [sl], #-0
    23c8:	1800000d 	stmdane	r0, {r0, r2, r3}
    23cc:	f008340c 			; <UNDEFINED> instruction: 0xf008340c
    23d0:	0800000a 	stmdaeq	r0, {r1, r3}
    23d4:	00000fc5 	andeq	r0, r0, r5, asr #31
    23d8:	f013360c 			; <UNDEFINED> instruction: 0xf013360c
    23dc:	0200000a 	andeq	r0, r0, #10
    23e0:	5f0d0023 	svcpl	0x000d0023
    23e4:	370c006b 	strcc	r0, [ip, -fp, rrx]
    23e8:	0000b707 	andeq	fp, r0, r7, lsl #14
    23ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    23f0:	000de108 	andeq	lr, sp, r8, lsl #2
    23f4:	0b370c00 	bleq	dc53fc <__Stack_Size+0xdc43fc>
    23f8:	000000b7 	strheq	r0, [r0], -r7
    23fc:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    2400:	00000d5e 	andeq	r0, r0, lr, asr sp
    2404:	b714370c 	ldrlt	r3, [r4, -ip, lsl #14]
    2408:	02000000 	andeq	r0, r0, #0
    240c:	83080c23 	movwhi	r0, #35875	; 0x8c23
    2410:	0c00000a 	stceq	0, cr0, [r0], {10}
    2414:	00b71b37 	adcseq	r1, r7, r7, lsr fp
    2418:	23020000 	movwcs	r0, #8192	; 0x2000
    241c:	785f0d10 	ldmdavc	pc, {r4, r8, sl, fp}^	; <UNPREDICTABLE>
    2420:	0b380c00 	bleq	e05428 <__Stack_Size+0xe04428>
    2424:	00000af6 	strdeq	r0, [r0], -r6
    2428:	00142302 	andseq	r2, r4, r2, lsl #6
    242c:	0a8a041b 	beq	fe2834a0 <BootRAM+0xd1f3c41>
    2430:	660e0000 	strvs	r0, [lr], -r0
    2434:	0600000a 	streq	r0, [r0], -sl
    2438:	0f00000b 	svceq	0x0000000b
    243c:	000000c3 	andeq	r0, r0, r3, asr #1
    2440:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    2444:	2400000d 	strcs	r0, [r0], #-13
    2448:	9b083c0c 	blls	211480 <__Stack_Size+0x210480>
    244c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2450:	00000ab9 			; <UNDEFINED> instruction: 0x00000ab9
    2454:	b7093e0c 	strlt	r3, [r9, -ip, lsl #28]
    2458:	02000000 	andeq	r0, r0, #0
    245c:	17080023 	strne	r0, [r8, -r3, lsr #32]
    2460:	0c00000a 	stceq	0, cr0, [r0], {10}
    2464:	00b7093f 	adcseq	r0, r7, pc, lsr r9
    2468:	23020000 	movwcs	r0, #8192	; 0x2000
    246c:	09f30804 	ldmibeq	r3!, {r2, fp}^
    2470:	400c0000 	andmi	r0, ip, r0
    2474:	0000b709 	andeq	fp, r0, r9, lsl #14
    2478:	08230200 	stmdaeq	r3!, {r9}
    247c:	000b5008 	andeq	r5, fp, r8
    2480:	09410c00 	stmdbeq	r1, {sl, fp}^
    2484:	000000b7 	strheq	r0, [r0], -r7
    2488:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    248c:	00000ce0 	andeq	r0, r0, r0, ror #25
    2490:	b709420c 	strlt	r4, [r9, -ip, lsl #4]
    2494:	02000000 	andeq	r0, r0, #0
    2498:	03081023 	movweq	r1, #32803	; 0x8023
    249c:	0c00000d 	stceq	0, cr0, [r0], {13}
    24a0:	00b70943 	adcseq	r0, r7, r3, asr #18
    24a4:	23020000 	movwcs	r0, #8192	; 0x2000
    24a8:	09ce0814 	stmibeq	lr, {r2, r4, fp}^
    24ac:	440c0000 	strmi	r0, [ip], #-0
    24b0:	0000b709 	andeq	fp, r0, r9, lsl #14
    24b4:	18230200 	stmdane	r3!, {r9}
    24b8:	000ac208 	andeq	ip, sl, r8, lsl #4
    24bc:	09450c00 	stmdbeq	r5, {sl, fp}^
    24c0:	000000b7 	strheq	r0, [r0], -r7
    24c4:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    24c8:	00000c9e 	muleq	r0, lr, ip
    24cc:	b709460c 	strlt	r4, [r9, -ip, lsl #12]
    24d0:	02000000 	andeq	r0, r0, #0
    24d4:	1c002023 	stcne	0, cr2, [r0], {35}	; 0x23
    24d8:	000008d6 	ldrdeq	r0, [r0], -r6
    24dc:	4f0c0108 	svcmi	0x000c0108
    24e0:	000be908 	andeq	lr, fp, r8, lsl #18
    24e4:	0f1f0800 	svceq	0x001f0800
    24e8:	500c0000 	andpl	r0, ip, r0
    24ec:	000be90a 	andeq	lr, fp, sl, lsl #18
    24f0:	00230200 	eoreq	r0, r3, r0, lsl #4
    24f4:	000e3708 	andeq	r3, lr, r8, lsl #14
    24f8:	09510c00 	ldmdbeq	r1, {sl, fp}^
    24fc:	00000be9 	andeq	r0, r0, r9, ror #23
    2500:	01802303 	orreq	r2, r0, r3, lsl #6
    2504:	000ea008 	andeq	sl, lr, r8
    2508:	0a530c00 	beq	14c5510 <__Stack_Size+0x14c4510>
    250c:	00000a66 	andeq	r0, r0, r6, ror #20
    2510:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
    2514:	000fb208 	andeq	fp, pc, r8, lsl #4
    2518:	0a560c00 	beq	1585520 <__Stack_Size+0x1584520>
    251c:	00000a66 	andeq	r0, r0, r6, ror #20
    2520:	02842303 	addeq	r2, r4, #201326592	; 0xc000000
    2524:	0a640e00 	beq	1905d2c <__Stack_Size+0x1904d2c>
    2528:	0bf90000 	bleq	ffe42530 <BootRAM+0xedb2cd1>
    252c:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2530:	1f000000 	svcne	0x00000000
    2534:	0d181c00 	ldceq	12, cr1, [r8, #-0]
    2538:	01900000 	orrseq	r0, r0, r0
    253c:	4508620c 	strmi	r6, [r8, #-524]	; 0xfffffdf4
    2540:	0800000c 	stmdaeq	r0, {r2, r3}
    2544:	00000fc5 	andeq	r0, r0, r5, asr #31
    2548:	4512630c 	ldrmi	r6, [r2, #-780]	; 0xfffffcf4
    254c:	0200000c 	andeq	r0, r0, #12
    2550:	bf080023 	svclt	0x00080023
    2554:	0c00000c 	stceq	0, cr0, [r0], {12}
    2558:	00b70664 	adcseq	r0, r7, r4, ror #12
    255c:	23020000 	movwcs	r0, #8192	; 0x2000
    2560:	09a60804 	stmibeq	r6!, {r2, fp}
    2564:	660c0000 	strvs	r0, [ip], -r0
    2568:	000c4b09 	andeq	r4, ip, r9, lsl #22
    256c:	08230200 	stmdaeq	r3!, {r9}
    2570:	0008d608 	andeq	sp, r8, r8, lsl #12
    2574:	1e670c00 	cdpne	12, 6, cr0, cr7, cr0, {0}
    2578:	00000b9b 	muleq	r0, fp, fp
    257c:	01882303 	orreq	r2, r8, r3, lsl #6
    2580:	f9041b00 			; <UNDEFINED> instruction: 0xf9041b00
    2584:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    2588:	00000c5b 	andeq	r0, r0, fp, asr ip
    258c:	00000c5b 	andeq	r0, r0, fp, asr ip
    2590:	0000c30f 	andeq	ip, r0, pc, lsl #6
    2594:	1b001f00 	blne	a19c <__Stack_Size+0x919c>
    2598:	000c6104 	andeq	r6, ip, r4, lsl #2
    259c:	1a011d00 	bne	499a4 <__Stack_Size+0x489a4>
    25a0:	00000cf2 	strdeq	r0, [r0], -r2
    25a4:	087a0c08 	ldmdaeq	sl!, {r3, sl, fp}^
    25a8:	00000c8f 	andeq	r0, r0, pc, lsl #25
    25ac:	000c1708 	andeq	r1, ip, r8, lsl #14
    25b0:	117b0c00 	cmnne	fp, r0, lsl #24
    25b4:	00000c8f 	andeq	r0, r0, pc, lsl #25
    25b8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    25bc:	000011d0 	ldrdeq	r1, [r0], -r0
    25c0:	b7067c0c 	strlt	r7, [r6, -ip, lsl #24]
    25c4:	02000000 	andeq	r0, r0, #0
    25c8:	1b000423 	blne	365c <__Stack_Size+0x265c>
    25cc:	00007404 	andeq	r7, r0, r4, lsl #8
    25d0:	0a7b1a00 	beq	1ec8dd8 <__Stack_Size+0x1ec7dd8>
    25d4:	0c680000 	stcleq	0, cr0, [r8], #-0
    25d8:	0e0808ba 	mcreq	8, 0, r0, cr8, cr10, {5}
    25dc:	5f0d0000 	svcpl	0x000d0000
    25e0:	bb0c0070 	bllt	3027a8 <__Stack_Size+0x3017a8>
    25e4:	000c8f12 	andeq	r8, ip, r2, lsl pc
    25e8:	00230200 	eoreq	r0, r3, r0, lsl #4
    25ec:	00725f0d 	rsbseq	r5, r2, sp, lsl #30
    25f0:	b707bc0c 	strlt	fp, [r7, -ip, lsl #24]
    25f4:	02000000 	andeq	r0, r0, #0
    25f8:	5f0d0423 	svcpl	0x000d0423
    25fc:	bd0c0077 	stclt	0, cr0, [ip, #-476]	; 0xfffffe24
    2600:	0000b707 	andeq	fp, r0, r7, lsl #14
    2604:	08230200 	stmdaeq	r3!, {r9}
    2608:	00092408 	andeq	r2, r9, r8, lsl #8
    260c:	09be0c00 	ldmibeq	lr!, {sl, fp}
    2610:	0000003d 	andeq	r0, r0, sp, lsr r0
    2614:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    2618:	00000c51 	andeq	r0, r0, r1, asr ip
    261c:	3d09bf0c 	stccc	15, cr11, [r9, #-48]	; 0xffffffd0
    2620:	02000000 	andeq	r0, r0, #0
    2624:	5f0d0e23 	svcpl	0x000d0e23
    2628:	0c006662 	stceq	6, cr6, [r0], {98}	; 0x62
    262c:	0c6311c0 	stfeqe	f1, [r3], #-768	; 0xfffffd00
    2630:	23020000 	movwcs	r0, #8192	; 0x2000
    2634:	091b0810 	ldmdbeq	fp, {r4, fp}
    2638:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    263c:	0000b707 	andeq	fp, r0, r7, lsl #14
    2640:	18230200 	stmdane	r3!, {r9}
    2644:	0009ab08 	andeq	sl, r9, r8, lsl #22
    2648:	0ac80c00 	beq	ff205650 <BootRAM+0xe175df1>
    264c:	00000a64 	andeq	r0, r0, r4, ror #20
    2650:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    2654:	0000111f 	andeq	r1, r0, pc, lsl r1
    2658:	b91dca0c 	ldmdblt	sp, {r2, r3, r9, fp, lr, pc}
    265c:	0200000f 	andeq	r0, r0, #15
    2660:	75082023 	strvc	r2, [r8, #-35]	; 0xffffffdd
    2664:	0c000010 	stceq	0, cr0, [r0], {16}
    2668:	0fe41dcc 	svceq	0x00e41dcc
    266c:	23020000 	movwcs	r0, #8192	; 0x2000
    2670:	0a9a0824 	beq	fe684708 <BootRAM+0xd5f4ea9>
    2674:	cf0c0000 	svcgt	0x000c0000
    2678:	0010090d 	andseq	r0, r0, sp, lsl #18
    267c:	28230200 	stmdacs	r3!, {r9}
    2680:	000bab08 	andeq	sl, fp, r8, lsl #22
    2684:	09d00c00 	ldmibeq	r0, {sl, fp}^
    2688:	00001024 	andeq	r1, r0, r4, lsr #32
    268c:	0d2c2302 	stceq	3, cr2, [ip, #-8]!
    2690:	0062755f 	rsbeq	r7, r2, pc, asr r5
    2694:	6311d30c 	tstvs	r1, #12, 6	; 0x30000000
    2698:	0200000c 	andeq	r0, r0, #12
    269c:	5f0d3023 	svcpl	0x000d3023
    26a0:	0c007075 	stceq	0, cr7, [r0], {117}	; 0x75
    26a4:	0c8f12d4 	sfmeq	f1, 4, [pc], {212}	; 0xd4
    26a8:	23020000 	movwcs	r0, #8192	; 0x2000
    26ac:	755f0d38 	ldrbvc	r0, [pc, #-3384]	; 197c <__Stack_Size+0x97c>
    26b0:	d50c0072 	strle	r0, [ip, #-114]	; 0xffffff8e
    26b4:	0000b707 	andeq	fp, r0, r7, lsl #14
    26b8:	3c230200 	sfmcc	f0, 4, [r3], #-0
    26bc:	000aa008 	andeq	sl, sl, r8
    26c0:	11d80c00 	bicsne	r0, r8, r0, lsl #24
    26c4:	0000102a 	andeq	r1, r0, sl, lsr #32
    26c8:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    26cc:	00000f8a 	andeq	r0, r0, sl, lsl #31
    26d0:	3a11d90c 	bcc	478b08 <__Stack_Size+0x477b08>
    26d4:	02000010 	andeq	r0, r0, #16
    26d8:	5f0d4323 	svcpl	0x000d4323
    26dc:	0c00626c 	sfmeq	f6, 4, [r0], {108}	; 0x6c
    26e0:	0c6311dc 	stfeqe	f1, [r3], #-880	; 0xfffffc90
    26e4:	23020000 	movwcs	r0, #8192	; 0x2000
    26e8:	0df30844 	ldcleq	8, cr0, [r3, #272]!	; 0x110
    26ec:	df0c0000 	svcle	0x000c0000
    26f0:	0000b707 	andeq	fp, r0, r7, lsl #14
    26f4:	4c230200 	sfmmi	f0, 4, [r3], #-0
    26f8:	000d7e08 	andeq	r7, sp, r8, lsl #28
    26fc:	0ae00c00 	beq	ff805704 <BootRAM+0xe775ea5>
    2700:	000009e6 	andeq	r0, r0, r6, ror #19
    2704:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    2708:	000008f5 	strdeq	r0, [r0], -r5
    270c:	2712e30c 	ldrcs	lr, [r2, -ip, lsl #6]
    2710:	0200000e 	andeq	r0, r0, #14
    2714:	01085423 	tsteq	r8, r3, lsr #8
    2718:	0c00000e 	stceq	0, cr0, [r0], {14}
    271c:	0a7e0ce7 	beq	1f85ac0 <__Stack_Size+0x1f84ac0>
    2720:	23020000 	movwcs	r0, #8192	; 0x2000
    2724:	09c50858 	stmibeq	r5, {r3, r4, r6, fp}^
    2728:	e90c0000 	stmdb	ip, {}	; <UNPREDICTABLE>
    272c:	000a580e 	andeq	r5, sl, lr, lsl #16
    2730:	5c230200 	sfmpl	f0, 4, [r3], #-0
    2734:	000faa08 	andeq	sl, pc, r8, lsl #20
    2738:	09ea0c00 	stmibeq	sl!, {sl, fp}^
    273c:	000000b7 	strheq	r0, [r0], -r7
    2740:	00642302 	rsbeq	r2, r4, r2, lsl #6
    2744:	00b7011e 	adcseq	r0, r7, lr, lsl r1
    2748:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
    274c:	271f0000 	ldrcs	r0, [pc, -r0]
    2750:	1f00000e 	svcne	0x0000000e
    2754:	00000a64 	andeq	r0, r0, r4, ror #20
    2758:	000fa71f 	andeq	sl, pc, pc, lsl r7	; <UNPREDICTABLE>
    275c:	00b71f00 	adcseq	r1, r7, r0, lsl #30
    2760:	1b000000 	blne	2768 <__Stack_Size+0x1768>
    2764:	000e3204 	andeq	r3, lr, r4, lsl #4
    2768:	0e270500 	cfsh64eq	mvdx0, mvdx7, #0
    276c:	37200000 	strcc	r0, [r0, -r0]!
    2770:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    2774:	02650c04 	rsbeq	r0, r5, #4, 24	; 0x400
    2778:	000fa708 	andeq	sl, pc, r8, lsl #14
    277c:	0a931500 	beq	fe4c7b84 <BootRAM+0xd438325>
    2780:	670c0000 	strvs	r0, [ip, -r0]
    2784:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2788:	23020000 	movwcs	r0, #8192	; 0x2000
    278c:	0bd21500 	bleq	ff487b94 <BootRAM+0xe3f8335>
    2790:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    2794:	109c0b02 	addsne	r0, ip, r2, lsl #22
    2798:	23020000 	movwcs	r0, #8192	; 0x2000
    279c:	09961504 	ldmibeq	r6, {r2, r8, sl, ip}
    27a0:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    27a4:	109c1402 	addsne	r1, ip, r2, lsl #8
    27a8:	23020000 	movwcs	r0, #8192	; 0x2000
    27ac:	0fe41508 	svceq	0x00e41508
    27b0:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
    27b4:	109c1e02 	addsne	r1, ip, r2, lsl #28
    27b8:	23020000 	movwcs	r0, #8192	; 0x2000
    27bc:	0acc150c 	beq	ff307bf4 <BootRAM+0xe278395>
    27c0:	6e0c0000 	cdpvs	0, 0, cr0, cr12, cr0, {0}
    27c4:	00b70802 	adcseq	r0, r7, r2, lsl #16
    27c8:	23020000 	movwcs	r0, #8192	; 0x2000
    27cc:	0aa61510 	beq	fe987c14 <BootRAM+0xd8f83b5>
    27d0:	6f0c0000 	svcvs	0x000c0000
    27d4:	12d50802 	sbcsne	r0, r5, #131072	; 0x20000
    27d8:	23020000 	movwcs	r0, #8192	; 0x2000
    27dc:	096a1514 	stmdbeq	sl!, {r2, r4, r8, sl, ip}^
    27e0:	720c0000 	andvc	r0, ip, #0
    27e4:	00b70702 	adcseq	r0, r7, r2, lsl #14
    27e8:	23020000 	movwcs	r0, #8192	; 0x2000
    27ec:	0f171530 	svceq	0x00171530
    27f0:	730c0000 	movwvc	r0, #49152	; 0xc000
    27f4:	12eb1602 	rscne	r1, fp, #2097152	; 0x200000
    27f8:	23020000 	movwcs	r0, #8192	; 0x2000
    27fc:	0bb21534 	bleq	fec87cd4 <BootRAM+0xdbf8475>
    2800:	750c0000 	strvc	r0, [ip, #-0]
    2804:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2808:	23020000 	movwcs	r0, #8192	; 0x2000
    280c:	0c761538 	cfldr64eq	mvdx1, [r6], #-224	; 0xffffff20
    2810:	770c0000 	strvc	r0, [ip, -r0]
    2814:	12fd0a02 	rscsne	r0, sp, #8192	; 0x2000
    2818:	23020000 	movwcs	r0, #8192	; 0x2000
    281c:	09e4153c 	stmibeq	r4!, {r2, r3, r4, r5, r8, sl, ip}^
    2820:	7a0c0000 	bvc	302828 <__Stack_Size+0x301828>
    2824:	0af01302 	beq	ffc07434 <BootRAM+0xeb77bd5>
    2828:	23020000 	movwcs	r0, #8192	; 0x2000
    282c:	0a4f1540 	beq	13c7d34 <__Stack_Size+0x13c6d34>
    2830:	7b0c0000 	blvc	302838 <__Stack_Size+0x301838>
    2834:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2838:	23020000 	movwcs	r0, #8192	; 0x2000
    283c:	0b1e1544 	bleq	787d54 <__Stack_Size+0x786d54>
    2840:	7c0c0000 	stcvc	0, cr0, [ip], {-0}
    2844:	0af01302 	beq	ffc07454 <BootRAM+0xeb77bf5>
    2848:	23020000 	movwcs	r0, #8192	; 0x2000
    284c:	0c1d1548 	cfldr32eq	mvfx1, [sp], {72}	; 0x48
    2850:	7d0c0000 	stcvc	0, cr0, [ip, #-0]
    2854:	13031402 	movwne	r1, #13314	; 0x3402
    2858:	23020000 	movwcs	r0, #8192	; 0x2000
    285c:	0dd9154c 	cfldr64eq	mvdx1, [r9, #304]	; 0x130
    2860:	800c0000 	andhi	r0, ip, r0
    2864:	00b70702 	adcseq	r0, r7, r2, lsl #14
    2868:	23020000 	movwcs	r0, #8192	; 0x2000
    286c:	0e4b1550 	mcreq	5, 2, r1, cr11, cr0, {2}
    2870:	810c0000 	mrshi	r0, (UNDEF: 12)
    2874:	0fa70902 	svceq	0x00a70902
    2878:	23020000 	movwcs	r0, #8192	; 0x2000
    287c:	09911554 	ldmibeq	r1, {r2, r4, r6, r8, sl, ip}
    2880:	a40c0000 	strge	r0, [ip], #-0
    2884:	12b00702 	adcsne	r0, r0, #524288	; 0x80000
    2888:	23020000 	movwcs	r0, #8192	; 0x2000
    288c:	0d181558 	cfldr32eq	mvfx1, [r8, #-352]	; 0xfffffea0
    2890:	a80c0000 	stmdage	ip, {}	; <UNPREDICTABLE>
    2894:	0c451302 	mcrreq	3, 0, r1, r5, cr2
    2898:	23030000 	movwcs	r0, #12288	; 0x3000
    289c:	731502c8 	tstvc	r5, #200, 4	; 0x8000000c
    28a0:	0c00000b 	stceq	0, cr0, [r0], {11}
    28a4:	f91202a9 			; <UNDEFINED> instruction: 0xf91202a9
    28a8:	0300000b 	movweq	r0, #11
    28ac:	1502cc23 	strne	ip, [r2, #-3107]	; 0xfffff3dd
    28b0:	00000b5a 	andeq	r0, r0, sl, asr fp
    28b4:	0c02ad0c 	stceq	13, cr10, [r2], {12}
    28b8:	00001315 	andeq	r1, r0, r5, lsl r3
    28bc:	05dc2303 	ldrbeq	r2, [ip, #771]	; 0x303
    28c0:	000ee615 	andeq	lr, lr, r5, lsl r6
    28c4:	02b20c00 	adcseq	r0, r2, #0, 24
    28c8:	00105710 	andseq	r5, r0, r0, lsl r7
    28cc:	e0230300 	eor	r0, r3, r0, lsl #6
    28d0:	0d591505 	cfldr64eq	mvdx1, [r9, #-20]	; 0xffffffec
    28d4:	b40c0000 	strlt	r0, [ip], #-0
    28d8:	13210a02 			; <UNDEFINED> instruction: 0x13210a02
    28dc:	23030000 	movwcs	r0, #12288	; 0x3000
    28e0:	1b0005ec 	blne	4098 <__Stack_Size+0x3098>
    28e4:	000fad04 	andeq	sl, pc, r4, lsl #26
    28e8:	08010200 	stmdaeq	r1, {r9}
    28ec:	0000018f 	andeq	r0, r0, pc, lsl #3
    28f0:	000fad05 	andeq	sl, pc, r5, lsl #26
    28f4:	08041b00 	stmdaeq	r4, {r8, r9, fp, ip}
    28f8:	1e00000e 	cdpne	0, 0, cr0, cr0, cr14, {0}
    28fc:	0000b701 	andeq	fp, r0, r1, lsl #14
    2900:	000fde00 	andeq	sp, pc, r0, lsl #28
    2904:	0e271f00 	cdpeq	15, 2, cr1, cr7, cr0, {0}
    2908:	641f0000 	ldrvs	r0, [pc], #-0	; 2910 <__Stack_Size+0x1910>
    290c:	1f00000a 	svcne	0x0000000a
    2910:	00000fde 	ldrdeq	r0, [r0], -lr
    2914:	0000b71f 	andeq	fp, r0, pc, lsl r7
    2918:	041b0000 	ldreq	r0, [fp], #-0
    291c:	00000fb4 			; <UNDEFINED> instruction: 0x00000fb4
    2920:	0fbf041b 	svceq	0x00bf041b
    2924:	011e0000 	tsteq	lr, r0
    2928:	000009f2 	strdeq	r0, [r0], -r2
    292c:	00001009 	andeq	r1, r0, r9
    2930:	000e271f 	andeq	r2, lr, pc, lsl r7
    2934:	0a641f00 	beq	190a53c <__Stack_Size+0x190953c>
    2938:	f21f0000 	vhadd.s16	d0, d15, d0
    293c:	1f000009 	svcne	0x00000009
    2940:	000000b7 	strheq	r0, [r0], -r7
    2944:	ea041b00 	b	10954c <__Stack_Size+0x10854c>
    2948:	1e00000f 	cdpne	0, 0, cr0, cr0, cr15, {0}
    294c:	0000b701 	andeq	fp, r0, r1, lsl #14
    2950:	00102400 	andseq	r2, r0, r0, lsl #8
    2954:	0e271f00 	cdpeq	15, 2, cr1, cr7, cr0, {0}
    2958:	641f0000 	ldrvs	r0, [pc], #-0	; 2960 <__Stack_Size+0x1960>
    295c:	0000000a 	andeq	r0, r0, sl
    2960:	100f041b 	andne	r0, pc, fp, lsl r4	; <UNPREDICTABLE>
    2964:	740e0000 	strvc	r0, [lr], #-0
    2968:	3a000000 	bcc	2970 <__Stack_Size+0x1970>
    296c:	0f000010 	svceq	0x00000010
    2970:	000000c3 	andeq	r0, r0, r3, asr #1
    2974:	740e0002 	strvc	r0, [lr], #-2
    2978:	4a000000 	bmi	2980 <__Stack_Size+0x1980>
    297c:	0f000010 	svceq	0x00000010
    2980:	000000c3 	andeq	r0, r0, r3, asr #1
    2984:	ec160000 	ldc	0, cr0, [r6], {-0}
    2988:	0c000009 	stceq	0, cr0, [r0], {9}
    298c:	951a0124 	ldrls	r0, [sl, #-292]	; 0xfffffedc
    2990:	2100000c 	tstcs	r0, ip
    2994:	00000ee0 	andeq	r0, r0, r0, ror #29
    2998:	01280c0c 			; <UNDEFINED> instruction: 0x01280c0c
    299c:	00109608 	andseq	r9, r0, r8, lsl #12
    29a0:	0fc51500 	svceq	0x00c51500
    29a4:	2a0c0000 	bcs	3029ac <__Stack_Size+0x3019ac>
    29a8:	10961101 	addsne	r1, r6, r1, lsl #2
    29ac:	23020000 	movwcs	r0, #8192	; 0x2000
    29b0:	0e301500 	cfabs32eq	mvfx1, mvfx0
    29b4:	2b0c0000 	blcs	3029bc <__Stack_Size+0x3019bc>
    29b8:	00b70701 	adcseq	r0, r7, r1, lsl #14
    29bc:	23020000 	movwcs	r0, #8192	; 0x2000
    29c0:	0ba01504 	bleq	fe807dd8 <BootRAM+0xd778579>
    29c4:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    29c8:	109c0b01 	addsne	r0, ip, r1, lsl #22
    29cc:	23020000 	movwcs	r0, #8192	; 0x2000
    29d0:	041b0008 	ldreq	r0, [fp], #-8
    29d4:	00001057 	andeq	r1, r0, r7, asr r0
    29d8:	104a041b 	subne	r0, sl, fp, lsl r4
    29dc:	3b210000 	blcc	8429e4 <__Stack_Size+0x8419e4>
    29e0:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    29e4:	0801440c 	stmdaeq	r1, {r2, r3, sl, lr}
    29e8:	000010e1 	andeq	r1, r0, r1, ror #1
    29ec:	000fba15 	andeq	fp, pc, r5, lsl sl	; <UNPREDICTABLE>
    29f0:	01450c00 	cmpeq	r5, r0, lsl #24
    29f4:	0010e112 	andseq	lr, r0, r2, lsl r1
    29f8:	00230200 	eoreq	r0, r3, r0, lsl #4
    29fc:	000c2715 	andeq	r2, ip, r5, lsl r7
    2a00:	01460c00 	cmpeq	r6, r0, lsl #24
    2a04:	0010e112 	andseq	lr, r0, r2, lsl r1
    2a08:	06230200 	strteq	r0, [r3], -r0, lsl #4
    2a0c:	000ea915 	andeq	sl, lr, r5, lsl r9
    2a10:	01470c00 	cmpeq	r7, r0, lsl #24
    2a14:	00009112 	andeq	r9, r0, r2, lsl r1
    2a18:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2a1c:	00910e00 	addseq	r0, r1, r0, lsl #28
    2a20:	10f10000 	rscsne	r0, r1, r0
    2a24:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2a28:	02000000 	andeq	r0, r0, #0
    2a2c:	0cd01300 	ldcleq	3, cr1, [r0], {0}
    2a30:	35070285 	strcc	r0, [r7, #-645]	; 0xfffffd7b
    2a34:	15000012 	strne	r0, [r0, #-18]	; 0xffffffee
    2a38:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    2a3c:	1802870c 	stmdane	r2, {r2, r3, r8, r9, sl, pc}
    2a40:	000000c3 	andeq	r0, r0, r3, asr #1
    2a44:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    2a48:	00000eee 	andeq	r0, r0, lr, ror #29
    2a4c:	1202880c 	andne	r8, r2, #12, 16	; 0xc0000
    2a50:	00000fa7 	andeq	r0, r0, r7, lsr #31
    2a54:	15042302 	strne	r2, [r4, #-770]	; 0xfffffcfe
    2a58:	00000a6e 	andeq	r0, r0, lr, ror #20
    2a5c:	1002890c 	andne	r8, r2, ip, lsl #18
    2a60:	00001235 	andeq	r1, r0, r5, lsr r2
    2a64:	15082302 	strne	r2, [r8, #-770]	; 0xfffffcfe
    2a68:	00000da9 	andeq	r0, r0, r9, lsr #27
    2a6c:	17028a0c 	strne	r8, [r2, -ip, lsl #20]
    2a70:	00000b06 	andeq	r0, r0, r6, lsl #22
    2a74:	15242302 	strne	r2, [r4, #-770]!	; 0xfffffcfe
    2a78:	00000bd9 	ldrdeq	r0, [r0], -r9
    2a7c:	0f028b0c 	svceq	0x00028b0c
    2a80:	000000b7 	strheq	r0, [r0], -r7
    2a84:	15482302 	strbne	r2, [r8, #-770]	; 0xfffffcfe
    2a88:	00000fc0 	andeq	r0, r0, r0, asr #31
    2a8c:	2c028c0c 	stccs	12, cr8, [r2], {12}
    2a90:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2a94:	15502302 	ldrbne	r2, [r0, #-770]	; 0xfffffcfe
    2a98:	0000090a 	andeq	r0, r0, sl, lsl #18
    2a9c:	1a028d0c 	bne	a5ed4 <__Stack_Size+0xa4ed4>
    2aa0:	000010a2 	andeq	r1, r0, r2, lsr #1
    2aa4:	15582302 	ldrbne	r2, [r8, #-770]	; 0xfffffcfe
    2aa8:	00000b3e 	andeq	r0, r0, lr, lsr fp
    2aac:	16028e0c 	strne	r8, [r2], -ip, lsl #28
    2ab0:	00000a58 	andeq	r0, r0, r8, asr sl
    2ab4:	15682302 	strbne	r2, [r8, #-770]!	; 0xfffffcfe
    2ab8:	00000efb 	strdeq	r0, [r0], -fp
    2abc:	16028f0c 	strne	r8, [r2], -ip, lsl #30
    2ac0:	00000a58 	andeq	r0, r0, r8, asr sl
    2ac4:	15702302 	ldrbne	r2, [r0, #-770]!	; 0xfffffcfe
    2ac8:	000008e4 	andeq	r0, r0, r4, ror #17
    2acc:	1602900c 	strne	r9, [r2], -ip
    2ad0:	00000a58 	andeq	r0, r0, r8, asr sl
    2ad4:	15782302 	ldrbne	r2, [r8, #-770]!	; 0xfffffcfe
    2ad8:	00000de9 	andeq	r0, r0, r9, ror #27
    2adc:	1002910c 	andne	r9, r2, ip, lsl #2
    2ae0:	00001245 	andeq	r1, r0, r5, asr #4
    2ae4:	01802303 	orreq	r2, r0, r3, lsl #6
    2ae8:	00090f15 	andeq	r0, r9, r5, lsl pc
    2aec:	02920c00 	addseq	r0, r2, #0, 24
    2af0:	00125510 	andseq	r5, r2, r0, lsl r5
    2af4:	88230300 	stmdahi	r3!, {r8, r9}
    2af8:	0e531501 	cdpeq	5, 5, cr1, cr3, cr1, {0}
    2afc:	930c0000 	movwls	r0, #49152	; 0xc000
    2b00:	00b70f02 	adcseq	r0, r7, r2, lsl #30
    2b04:	23030000 	movwcs	r0, #12288	; 0x3000
    2b08:	831501a0 	tsthi	r5, #160, 2	; 0x28
    2b0c:	0c000009 	stceq	0, cr0, [r0], {9}
    2b10:	58160294 	ldmdapl	r6, {r2, r4, r7, r9}
    2b14:	0300000a 	movweq	r0, #10
    2b18:	1501a423 	strne	sl, [r1, #-1059]	; 0xfffffbdd
    2b1c:	00000b64 	andeq	r0, r0, r4, ror #22
    2b20:	1602950c 	strne	r9, [r2], -ip, lsl #10
    2b24:	00000a58 	andeq	r0, r0, r8, asr sl
    2b28:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    2b2c:	000ade15 	andeq	sp, sl, r5, lsl lr
    2b30:	02960c00 	addseq	r0, r6, #0, 24
    2b34:	000a5816 	andeq	r5, sl, r6, lsl r8
    2b38:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    2b3c:	0c421501 	cfstr64eq	mvdx1, [r2], {1}
    2b40:	970c0000 	strls	r0, [ip, -r0]
    2b44:	0a581602 	beq	1608354 <__Stack_Size+0x1607354>
    2b48:	23030000 	movwcs	r0, #12288	; 0x3000
    2b4c:	a91501bc 	ldmdbge	r5, {r2, r3, r4, r5, r7, r8}
    2b50:	0c00000c 	stceq	0, cr0, [r0], {12}
    2b54:	58160298 	ldmdapl	r6, {r3, r4, r7, r9}
    2b58:	0300000a 	movweq	r0, #10
    2b5c:	1501c423 	strne	ip, [r1, #-1059]	; 0xfffffbdd
    2b60:	00000a91 	muleq	r0, r1, sl
    2b64:	0802990c 	stmdaeq	r2, {r2, r3, r8, fp, ip, pc}
    2b68:	000000b7 	strheq	r0, [r0], -r7
    2b6c:	01cc2303 	biceq	r2, ip, r3, lsl #6
    2b70:	0fad0e00 	svceq	0x00ad0e00
    2b74:	12450000 	subne	r0, r5, #0
    2b78:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2b7c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    2b80:	0fad0e00 	svceq	0x00ad0e00
    2b84:	12550000 	subsne	r0, r5, #0
    2b88:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2b8c:	07000000 	streq	r0, [r0, -r0]
    2b90:	0fad0e00 	svceq	0x00ad0e00
    2b94:	12650000 	rsbne	r0, r5, #0
    2b98:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2b9c:	17000000 	strne	r0, [r0, -r0]
    2ba0:	0cf01300 	ldcleq	3, cr1, [r0]
    2ba4:	9007029e 	mulls	r7, lr, r2
    2ba8:	15000012 	strne	r0, [r0, #-18]	; 0xffffffee
    2bac:	00000bf4 	strdeq	r0, [r0], -r4
    2bb0:	1b02a10c 	blne	aafe8 <__Stack_Size+0xa9fe8>
    2bb4:	00001290 	muleq	r0, r0, r2
    2bb8:	15002302 	strne	r2, [r0, #-770]	; 0xfffffcfe
    2bbc:	0000092b 	andeq	r0, r0, fp, lsr #18
    2bc0:	1802a20c 	stmdane	r2, {r2, r3, r9, sp, pc}
    2bc4:	000012a0 	andeq	r1, r0, r0, lsr #5
    2bc8:	00782302 	rsbseq	r2, r8, r2, lsl #6
    2bcc:	000c8f0e 	andeq	r8, ip, lr, lsl #30
    2bd0:	0012a000 	andseq	sl, r2, r0
    2bd4:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2bd8:	001d0000 	andseq	r0, sp, r0
    2bdc:	0000c30e 	andeq	ip, r0, lr, lsl #6
    2be0:	0012b000 	andseq	fp, r2, r0
    2be4:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2be8:	001d0000 	andseq	r0, sp, r0
    2bec:	830cf022 	movwhi	pc, #49186	; 0xc022	; <UNPREDICTABLE>
    2bf0:	12d50302 	sbcsne	r0, r5, #134217728	; 0x8000000
    2bf4:	37230000 	strcc	r0, [r3, -r0]!
    2bf8:	0c00000f 	stceq	0, cr0, [r0], {15}
    2bfc:	f10b029a 			; <UNDEFINED> instruction: 0xf10b029a
    2c00:	23000010 	movwcs	r0, #16
    2c04:	00000dd1 	ldrdeq	r0, [r0], -r1
    2c08:	0b02a30c 	bleq	ab840 <__Stack_Size+0xaa840>
    2c0c:	00001265 	andeq	r1, r0, r5, ror #4
    2c10:	0fad0e00 	svceq	0x00ad0e00
    2c14:	12e50000 	rscne	r0, r5, #0
    2c18:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2c1c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2c20:	0fcb2400 	svceq	0x00cb2400
    2c24:	1b010000 	blne	42c2c <__Stack_Size+0x41c2c>
    2c28:	0012e504 	andseq	lr, r2, r4, lsl #10
    2c2c:	fd012500 	stc2	5, cr2, [r1, #-0]
    2c30:	1f000012 	svcne	0x00000012
    2c34:	00000e27 	andeq	r0, r0, r7, lsr #28
    2c38:	f1041b00 			; <UNDEFINED> instruction: 0xf1041b00
    2c3c:	1b000012 	blne	2c8c <__Stack_Size+0x1c8c>
    2c40:	000af004 	andeq	pc, sl, r4
    2c44:	15012500 	strne	r2, [r1, #-1280]	; 0xfffffb00
    2c48:	1f000013 	svcne	0x00000013
    2c4c:	000000b7 	strheq	r0, [r0], -r7
    2c50:	1b041b00 	blne	109858 <__Stack_Size+0x108858>
    2c54:	1b000013 	blne	2ca8 <__Stack_Size+0x1ca8>
    2c58:	00130904 	andseq	r0, r3, r4, lsl #18
    2c5c:	104a0e00 	subne	r0, sl, r0, lsl #28
    2c60:	13310000 	teqne	r1, #0
    2c64:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2c68:	02000000 	andeq	r0, r0, #0
    2c6c:	0d721100 	ldfeqe	f1, [r2, #-0]
    2c70:	330c0000 	movwcc	r0, #49152	; 0xc000
    2c74:	0e271703 	cdpeq	7, 2, cr1, cr7, cr3, {0}
    2c78:	01010000 	mrseq	r0, (UNDEF: 1)
    2c7c:	000d6b11 	andeq	r6, sp, r1, lsl fp
    2c80:	03340c00 	teqeq	r4, #0, 24
    2c84:	000e2d1d 	andeq	r2, lr, sp, lsl sp
    2c88:	26010100 	strcs	r0, [r1], -r0, lsl #2
    2c8c:	00000d86 	andeq	r0, r0, r6, lsl #27
    2c90:	87130c01 	ldrhi	r0, [r3, -r1, lsl #24]
    2c94:	01000000 	mrseq	r0, (UNDEF: 0)
    2c98:	003e0305 	eorseq	r0, lr, r5, lsl #6
    2c9c:	380e2000 	stmdacc	lr, {sp}
    2ca0:	72000000 	andvc	r0, r0, #0
    2ca4:	0f000013 	svceq	0x00000013
    2ca8:	000000c3 	andeq	r0, r0, r3, asr #1
    2cac:	6204002b 	andvs	r0, r4, #43	; 0x2b
    2cb0:	26000013 			; <UNDEFINED> instruction: 0x26000013
    2cb4:	00000bfb 	strdeq	r0, [r0], -fp
    2cb8:	72120d01 	andsvc	r0, r2, #1, 26	; 0x40
    2cbc:	01000013 	tsteq	r0, r3, lsl r0
    2cc0:	02a60305 	adceq	r0, r6, #335544320	; 0x14000000
    2cc4:	49262000 	stmdbmi	r6!, {sp}
    2cc8:	0100000d 	tsteq	r0, sp
    2ccc:	0087130e 	addeq	r1, r7, lr, lsl #6
    2cd0:	05010000 	streq	r0, [r1, #-0]
    2cd4:	00003c03 	andeq	r3, r0, r3, lsl #24
    2cd8:	0e432620 	cdpeq	6, 4, cr2, cr3, cr0, {1}
    2cdc:	10010000 	andne	r0, r1, r0
    2ce0:	00006a12 	andeq	r6, r0, r2, lsl sl
    2ce4:	03050100 	movweq	r0, #20736	; 0x5100
    2ce8:	20000038 	andcs	r0, r0, r8, lsr r0
    2cec:	0000e712 	andeq	lr, r0, r2, lsl r7
    2cf0:	1a050400 	bne	143cf8 <__Stack_Size+0x142cf8>
    2cf4:	000000a4 	andeq	r0, r0, r4, lsr #1
    2cf8:	c3260101 			; <UNDEFINED> instruction: 0xc3260101
    2cfc:	01000008 	tsteq	r0, r8
    2d00:	006a125d 	rsbeq	r1, sl, sp, asr r2
    2d04:	05010000 	streq	r0, [r1, #-0]
    2d08:	00004003 	andeq	r4, r0, r3
    2d0c:	0cf92620 	ldcleq	6, cr2, [r9], #128	; 0x80
    2d10:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    2d14:	00008713 	andeq	r8, r0, r3, lsl r7
    2d18:	03050100 	movweq	r0, #20736	; 0x5100
    2d1c:	20000042 	andcs	r0, r0, r2, asr #32
    2d20:	000e751a 	andeq	r7, lr, sl, lsl r5
    2d24:	09030200 	stmdbeq	r3, {r9}
    2d28:	00140119 	andseq	r0, r4, r9, lsl r1
    2d2c:	08f60800 	ldmeq	r6!, {fp}^
    2d30:	0a030000 	beq	c2d38 <__Stack_Size+0xc1d38>
    2d34:	00007b0c 	andeq	r7, r0, ip, lsl #22
    2d38:	00230200 	eoreq	r0, r3, r0, lsl #4
    2d3c:	13e40400 	mvnne	r0, #0, 8
    2d40:	80030000 	andhi	r0, r3, r0
    2d44:	0300000e 	movweq	r0, #14
    2d48:	1401020b 	strne	r0, [r1], #-523	; 0xfffffdf5
    2d4c:	f2260000 	vhadd.s32	d0, d6, d0
    2d50:	03000008 	movweq	r0, #8
    2d54:	14060c0c 	strne	r0, [r6], #-3084	; 0xfffff3f4
    2d58:	05010000 	streq	r0, [r1, #-0]
    2d5c:	0002a403 	andeq	sl, r2, r3, lsl #8
    2d60:	0a432720 	beq	10cc9e8 <__Stack_Size+0x10cb9e8>
    2d64:	0f030000 	svceq	0x00030000
    2d68:	0000a41a 	andeq	sl, r0, sl, lsl r4
    2d6c:	48030500 	stmdami	r3, {r8, sl}
    2d70:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
    2d74:	0000006f 	andeq	r0, r0, pc, rrx
    2d78:	00001447 	andeq	r1, r0, r7, asr #8
    2d7c:	0000c30f 	andeq	ip, r0, pc, lsl #6
    2d80:	05001400 	streq	r1, [r0, #-1024]	; 0xfffffc00
    2d84:	00001437 	andeq	r1, r0, r7, lsr r4
    2d88:	0008a227 	andeq	sl, r8, r7, lsr #4
    2d8c:	16110300 	ldrne	r0, [r1], -r0, lsl #6
    2d90:	00001447 	andeq	r1, r0, r7, asr #8
    2d94:	16260305 	strtne	r0, [r6], -r5, lsl #6
    2d98:	6f0e0800 	svcvs	0x000e0800
    2d9c:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    2da0:	0f000014 	svceq	0x00000014
    2da4:	000000c3 	andeq	r0, r0, r3, asr #1
    2da8:	5e050011 	mcrpl	0, 0, r0, cr5, cr1, {0}
    2dac:	27000014 	smladcs	r0, r4, r0, r0
    2db0:	00000e8b 	andeq	r0, r0, fp, lsl #29
    2db4:	6e161e05 	cdpvs	14, 1, cr1, cr6, cr5, {0}
    2db8:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    2dbc:	00163b03 	andseq	r3, r6, r3, lsl #22
    2dc0:	006f0e08 	rsbeq	r0, pc, r8, lsl #28
    2dc4:	14950000 	ldrne	r0, [r5], #0
    2dc8:	c30f0000 	movwgt	r0, #61440	; 0xf000
    2dcc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2dd0:	14850500 	strne	r0, [r5], #1280	; 0x500
    2dd4:	07270000 	streq	r0, [r7, -r0]!
    2dd8:	0500000e 	streq	r0, [r0, #-14]
    2ddc:	14951631 	ldrne	r1, [r5], #1585	; 0x631
    2de0:	03050000 	movweq	r0, #20480	; 0x5000
    2de4:	08001791 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, ip}
    2de8:	00006f0e 	andeq	r6, r0, lr, lsl #30
    2dec:	0014bd00 	andseq	fp, r4, r0, lsl #26
    2df0:	00c31000 	sbceq	r1, r3, r0
    2df4:	01430000 	mrseq	r0, (UNDEF: 67)
    2df8:	14ac0500 	strtne	r0, [ip], #1280	; 0x500
    2dfc:	59270000 	stmdbpl	r7!, {}	; <UNPREDICTABLE>
    2e00:	0500000a 	streq	r0, [r0, #-10]
    2e04:	14bd163f 	ldrtne	r1, [sp], #1599	; 0x63f
    2e08:	03050000 	movweq	r0, #20480	; 0x5000
    2e0c:	0800164d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, ip}
    2e10:	000db821 	andeq	fp, sp, r1, lsr #16
    2e14:	e2050400 	and	r0, r5, #0, 8
    2e18:	15130101 	ldrne	r0, [r3, #-257]	; 0xfffffeff
    2e1c:	a2150000 	andsge	r0, r5, #0
    2e20:	0500000f 	streq	r0, [r0, #-15]
    2e24:	5e0101e2 	adfpldz	f0, f1, f2
    2e28:	02000000 	andeq	r0, r0, #0
    2e2c:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    2e30:	0500000e 	streq	r0, [r0, #-14]
    2e34:	5e0101e2 	adfpldz	f0, f1, f2
    2e38:	02000000 	andeq	r0, r0, #0
    2e3c:	41150123 	tstmi	r5, r3, lsr #2
    2e40:	0500000d 	streq	r0, [r0, #-13]
    2e44:	180101e2 	stmdane	r1, {r1, r5, r6, r7, r8}
    2e48:	02000015 	andeq	r0, r0, #21
    2e4c:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2e50:	000014d4 	ldrdeq	r1, [r0], -r4
    2e54:	00007b0e 	andeq	r7, r0, lr, lsl #22
    2e58:	00152800 	andseq	r2, r5, r0, lsl #16
    2e5c:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2e60:	00000000 	andeq	r0, r0, r0
    2e64:	000db828 	andeq	fp, sp, r8, lsr #16
    2e68:	01e20500 	mvneq	r0, r0, lsl #10
    2e6c:	00151301 	andseq	r1, r5, r1, lsl #6
    2e70:	03050200 	movweq	r0, #20992	; 0x5200
    2e74:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
    2e78:	000ebe21 	andeq	fp, lr, r1, lsr #28
    2e7c:	e3051600 	movw	r1, #22016	; 0x5600
    2e80:	157b0101 	ldrbne	r0, [fp, #-257]!	; 0xfffffeff
    2e84:	a2150000 	andsge	r0, r5, #0
    2e88:	0500000f 	streq	r0, [r0, #-15]
    2e8c:	5e0101e3 	adfpldz	f0, f1, f3
    2e90:	02000000 	andeq	r0, r0, #0
    2e94:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    2e98:	0500000e 	streq	r0, [r0, #-14]
    2e9c:	5e0101e3 	adfpldz	f0, f1, f3
    2ea0:	02000000 	andeq	r0, r0, #0
    2ea4:	41150123 	tstmi	r5, r3, lsr #2
    2ea8:	0500000d 	streq	r0, [r0, #-13]
    2eac:	800101e3 	andhi	r0, r1, r3, ror #3
    2eb0:	02000015 	andeq	r0, r0, #21
    2eb4:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2eb8:	0000153c 	andeq	r1, r0, ip, lsr r5
    2ebc:	00007b0e 	andeq	r7, r0, lr, lsl #22
    2ec0:	00159000 	andseq	r9, r5, r0
    2ec4:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2ec8:	00090000 	andeq	r0, r9, r0
    2ecc:	000ebe28 	andeq	fp, lr, r8, lsr #28
    2ed0:	01e30500 	mvneq	r0, r0, lsl #10
    2ed4:	00157b01 	andseq	r7, r5, r1, lsl #22
    2ed8:	03050200 	movweq	r0, #20992	; 0x5200
    2edc:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    2ee0:	000f3e21 	andeq	r3, pc, r1, lsr #28
    2ee4:	e4052a00 	str	r2, [r5], #-2560	; 0xfffff600
    2ee8:	15e30101 	strbne	r0, [r3, #257]!	; 0x101
    2eec:	a2150000 	andsge	r0, r5, #0
    2ef0:	0500000f 	streq	r0, [r0, #-15]
    2ef4:	5e0101e4 	adfpldz	f0, f1, f4
    2ef8:	02000000 	andeq	r0, r0, #0
    2efc:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    2f00:	0500000e 	streq	r0, [r0, #-14]
    2f04:	5e0101e4 	adfpldz	f0, f1, f4
    2f08:	02000000 	andeq	r0, r0, #0
    2f0c:	41150123 	tstmi	r5, r3, lsr #2
    2f10:	0500000d 	streq	r0, [r0, #-13]
    2f14:	e80101e4 	stmda	r1, {r2, r5, r6, r7, r8}
    2f18:	02000015 	andeq	r0, r0, #21
    2f1c:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2f20:	000015a4 	andeq	r1, r0, r4, lsr #11
    2f24:	00007b0e 	andeq	r7, r0, lr, lsl #22
    2f28:	0015f800 	andseq	pc, r5, r0, lsl #16
    2f2c:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2f30:	00130000 	andseq	r0, r3, r0
    2f34:	000f3e28 	andeq	r3, pc, r8, lsr #28
    2f38:	01e40500 	mvneq	r0, r0, lsl #10
    2f3c:	0015e301 	andseq	lr, r5, r1, lsl #6
    2f40:	03050200 	movweq	r0, #20992	; 0x5200
    2f44:	080017b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, ip}
    2f48:	000d8e21 	andeq	r8, sp, r1, lsr #28
    2f4c:	e5050400 	str	r0, [r5, #-1024]	; 0xfffffc00
    2f50:	164b0101 	strbne	r0, [fp], -r1, lsl #2
    2f54:	a2150000 	andsge	r0, r5, #0
    2f58:	0500000f 	streq	r0, [r0, #-15]
    2f5c:	5e0101e5 	adfpldz	f0, f1, f5
    2f60:	02000000 	andeq	r0, r0, #0
    2f64:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    2f68:	0500000e 	streq	r0, [r0, #-14]
    2f6c:	5e0101e5 	adfpldz	f0, f1, f5
    2f70:	02000000 	andeq	r0, r0, #0
    2f74:	41150123 	tstmi	r5, r3, lsr #2
    2f78:	0500000d 	streq	r0, [r0, #-13]
    2f7c:	180101e5 	stmdane	r1, {r0, r2, r5, r6, r7, r8}
    2f80:	02000015 	andeq	r0, r0, #21
    2f84:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2f88:	0000160c 	andeq	r1, r0, ip, lsl #12
    2f8c:	000d8e28 	andeq	r8, sp, r8, lsr #28
    2f90:	01e50500 	mvneq	r0, r0, lsl #10
    2f94:	00164b01 	andseq	r4, r6, r1, lsl #22
    2f98:	03050200 	movweq	r0, #20992	; 0x5200
    2f9c:	080017e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, ip}
    2fa0:	0008fb21 	andeq	pc, r8, r1, lsr #22
    2fa4:	e6050800 	str	r0, [r5], -r0, lsl #16
    2fa8:	16a30101 	strtne	r0, [r3], r1, lsl #2
    2fac:	a2150000 	andsge	r0, r5, #0
    2fb0:	0500000f 	streq	r0, [r0, #-15]
    2fb4:	5e0101e6 	adfpldz	f0, f1, f6
    2fb8:	02000000 	andeq	r0, r0, #0
    2fbc:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    2fc0:	0500000e 	streq	r0, [r0, #-14]
    2fc4:	5e0101e6 	adfpldz	f0, f1, f6
    2fc8:	02000000 	andeq	r0, r0, #0
    2fcc:	41150123 	tstmi	r5, r3, lsr #2
    2fd0:	0500000d 	streq	r0, [r0, #-13]
    2fd4:	a80101e6 	stmdage	r1, {r1, r2, r5, r6, r7, r8}
    2fd8:	02000016 	andeq	r0, r0, #22
    2fdc:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    2fe0:	00001664 	andeq	r1, r0, r4, ror #12
    2fe4:	00007b0e 	andeq	r7, r0, lr, lsl #22
    2fe8:	0016b800 	andseq	fp, r6, r0, lsl #16
    2fec:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    2ff0:	00020000 	andeq	r0, r2, r0
    2ff4:	0008fb28 	andeq	pc, r8, r8, lsr #22
    2ff8:	01e60500 	mvneq	r0, r0, lsl #10
    2ffc:	0016a301 	andseq	sl, r6, r1, lsl #6
    3000:	03050200 	movweq	r0, #20992	; 0x5200
    3004:	080017e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, ip}
    3008:	000c0621 	andeq	r0, ip, r1, lsr #12
    300c:	e7051000 	str	r1, [r5, -r0]
    3010:	170b0101 	strne	r0, [fp, -r1, lsl #2]
    3014:	a2150000 	andsge	r0, r5, #0
    3018:	0500000f 	streq	r0, [r0, #-15]
    301c:	5e0101e7 	adfpldz	f0, f1, f7
    3020:	02000000 	andeq	r0, r0, #0
    3024:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    3028:	0500000e 	streq	r0, [r0, #-14]
    302c:	5e0101e7 	adfpldz	f0, f1, f7
    3030:	02000000 	andeq	r0, r0, #0
    3034:	41150123 	tstmi	r5, r3, lsr #2
    3038:	0500000d 	streq	r0, [r0, #-13]
    303c:	100101e7 	andne	r0, r1, r7, ror #3
    3040:	02000017 	andeq	r0, r0, #23
    3044:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    3048:	000016cc 	andeq	r1, r0, ip, asr #13
    304c:	00007b0e 	andeq	r7, r0, lr, lsl #22
    3050:	00172000 	andseq	r2, r7, r0
    3054:	00c30f00 	sbceq	r0, r3, r0, lsl #30
    3058:	00060000 	andeq	r0, r6, r0
    305c:	000c0628 	andeq	r0, ip, r8, lsr #12
    3060:	01e70500 	mvneq	r0, r0, lsl #10
    3064:	00170b01 	andseq	r0, r7, r1, lsl #22
    3068:	03050200 	movweq	r0, #20992	; 0x5200
    306c:	080017ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, ip}
    3070:	000c6721 	andeq	r6, ip, r1, lsr #14
    3074:	e8050800 	stmda	r5, {fp}
    3078:	17730101 	ldrbne	r0, [r3, -r1, lsl #2]!
    307c:	a2150000 	andsge	r0, r5, #0
    3080:	0500000f 	streq	r0, [r0, #-15]
    3084:	5e0101e8 	adfpldz	f0, f1, #0.0
    3088:	02000000 	andeq	r0, r0, #0
    308c:	ae150023 	cdpge	0, 1, cr0, cr5, cr3, {1}
    3090:	0500000e 	streq	r0, [r0, #-14]
    3094:	5e0101e8 	adfpldz	f0, f1, #0.0
    3098:	02000000 	andeq	r0, r0, #0
    309c:	41150123 	tstmi	r5, r3, lsr #2
    30a0:	0500000d 	streq	r0, [r0, #-13]
    30a4:	a80101e8 	stmdage	r1, {r3, r5, r6, r7, r8}
    30a8:	02000016 	andeq	r0, r0, #22
    30ac:	05000223 	streq	r0, [r0, #-547]	; 0xfffffddd
    30b0:	00001734 	andeq	r1, r0, r4, lsr r7
    30b4:	000c6728 	andeq	r6, ip, r8, lsr #14
    30b8:	01e80500 	mvneq	r0, r0, lsl #10
    30bc:	00177301 	andseq	r7, r7, r1, lsl #6
    30c0:	03050200 	movweq	r0, #20992	; 0x5200
    30c4:	080017fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip}
    30c8:	035e0129 	cmpeq	lr, #1073741834	; 0x4000000a
    30cc:	38050000 	stmdacc	r5, {}	; <UNPREDICTABLE>
    30d0:	0d540602 	ldcleq	6, cr0, [r4, #-8]
    30d4:	0d580800 	ldcleq	8, cr0, [r8, #-0]
    30d8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    30dc:	17b10100 	ldrne	r0, [r1, r0, lsl #2]!
    30e0:	582a0000 	stmdapl	sl!, {}	; <UNPREDICTABLE>
    30e4:	0108000d 	tsteq	r8, sp
    30e8:	00001bd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    30ec:	41012b00 	tstmi	r1, r0, lsl #22
    30f0:	05000001 	streq	r0, [r0, #-1]
    30f4:	08060231 	stmdaeq	r6, {r0, r4, r5, r9}
    30f8:	5408000d 	strpl	r0, [r8], #-13
    30fc:	a808000d 	stmdage	r8, {r0, r2, r3}
    3100:	0100000e 	tsteq	r0, lr
    3104:	00001834 	andeq	r1, r0, r4, lsr r8
    3108:	001cf62c 	andseq	pc, ip, ip, lsr #12
    310c:	000d0e00 	andeq	r0, sp, r0, lsl #28
    3110:	0d0e0108 	stfeqs	f0, [lr, #-32]	; 0xffffffe0
    3114:	0d3a0800 	ldceq	8, cr0, [sl, #-0]
    3118:	33050800 	movwcc	r0, #22528	; 0x5800
    311c:	18170302 	ldmdane	r7, {r1, r8, r9}
    3120:	0e2d0000 	cdpeq	0, 2, cr0, cr13, cr0, {0}
    3124:	3a08000d 	bcc	203160 <__Stack_Size+0x202160>
    3128:	2e08000d 	cdpcs	0, 0, cr0, cr8, cr13, {0}
    312c:	00001d16 	andeq	r1, r0, r6, lsl sp
    3130:	08000d0e 	stmdaeq	r0, {r1, r2, r3, r8, sl, fp}
    3134:	00024004 	andeq	r4, r2, r4
    3138:	06460100 	strbeq	r0, [r6], -r0, lsl #2
    313c:	001d162f 	andseq	r1, sp, pc, lsr #12
    3140:	000d1a00 	andeq	r1, sp, r0, lsl #20
    3144:	0d1a0108 	ldfeqs	f0, [sl, #-32]	; 0xffffffe0
    3148:	0d1c0800 	ldceq	8, cr0, [ip, #-0]
    314c:	47010800 	strmi	r0, [r1, -r0, lsl #16]
    3150:	3000000e 	andcc	r0, r0, lr
    3154:	08000d0e 	stmdaeq	r0, {r1, r2, r3, r8, sl, fp}
    3158:	00001afd 	strdeq	r1, [r0], -sp
    315c:	000d3e30 	andeq	r3, sp, r0, lsr lr
    3160:	0020d408 	eoreq	sp, r0, r8, lsl #8
    3164:	0d462a00 	vstreq	s5, [r6, #-0]
    3168:	e2010800 	and	r0, r1, #0, 16
    316c:	00000020 	andeq	r0, r0, r0, lsr #32
    3170:	0569012b 	strbeq	r0, [r9, #-299]!	; 0xfffffed5
    3174:	2a050000 	bcs	14317c <__Stack_Size+0x14217c>
    3178:	0bc40602 	bleq	ff104988 <BootRAM+0xe075129>
    317c:	0d080800 	stceq	8, cr0, [r8, #-0]
    3180:	0ed40800 	cdpeq	8, 13, cr0, cr4, cr0, {0}
    3184:	23010000 	movwcs	r0, #4096	; 0x1000
    3188:	2c000019 	stccs	0, cr0, [r0], {25}
    318c:	00001d69 	andeq	r1, r0, r9, ror #26
    3190:	08000bca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, fp}
    3194:	000bca01 	andeq	ip, fp, r1, lsl #20
    3198:	000ce408 	andeq	lr, ip, r8, lsl #8
    319c:	022c0508 	eoreq	r0, ip, #8, 10	; 0x2000000
    31a0:	00190603 	andseq	r0, r9, r3, lsl #12
    31a4:	1d763100 	ldfnee	f3, [r6, #-0]
    31a8:	01f80000 	mvnseq	r0, r0
    31ac:	18840000 	stmne	r4, {}	; <UNPREDICTABLE>
    31b0:	7b320000 	blvc	c831b8 <__Stack_Size+0xc821b8>
    31b4:	0600001d 			; <UNDEFINED> instruction: 0x0600001d
    31b8:	0000000f 	andeq	r0, r0, pc
    31bc:	0000000f 	andeq	r0, r0, pc
    31c0:	001d9a31 	andseq	r9, sp, r1, lsr sl
    31c4:	00021000 	andeq	r1, r2, r0
    31c8:	00189f00 	andseq	r9, r8, r0, lsl #30
    31cc:	1d9f3200 	lfmne	f3, 4, [pc]	; 31d4 <__Stack_Size+0x21d4>
    31d0:	0f3c0000 	svceq	0x003c0000
    31d4:	0f340000 	svceq	0x00340000
    31d8:	33000000 	movwcc	r0, #0
    31dc:	00001f23 	andeq	r1, r0, r3, lsr #30
    31e0:	08000c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp}
    31e4:	000c4c01 	andeq	r4, ip, r1, lsl #24
    31e8:	000c5408 	andeq	r5, ip, r8, lsl #8
    31ec:	03270108 			; <UNDEFINED> instruction: 0x03270108
    31f0:	000018c6 	andeq	r1, r0, r6, asr #17
    31f4:	001f3234 	andseq	r3, pc, r4, lsr r2	; <UNPREDICTABLE>
    31f8:	000f7f00 	andeq	r7, pc, r0, lsl #30
    31fc:	000f7d00 	andeq	r7, pc, r0, lsl #26
    3200:	aa310000 	bge	c43208 <__Stack_Size+0xc42208>
    3204:	2800001d 	stmdacs	r0, {r0, r2, r3, r4}
    3208:	e1000002 	tst	r0, r2
    320c:	32000018 	andcc	r0, r0, #24
    3210:	00001dab 	andeq	r1, r0, fp, lsr #27
    3214:	00000f9b 	muleq	r0, fp, pc	; <UNPREDICTABLE>
    3218:	00000f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    321c:	0bd63500 	bleq	ff590624 <BootRAM+0xe500dc5>
    3220:	20f00800 	rscscs	r0, r0, r0, lsl #16
    3224:	01360000 	teqeq	r6, r0
    3228:	87090250 	smlsdhi	r9, r0, r2, r0
    322c:	01510136 	cmpeq	r1, r6, lsr r1
    3230:	52013631 	andpl	r3, r1, #51380224	; 0x3100000
    3234:	36640802 	strbtcc	r0, [r4], -r2, lsl #16
    3238:	03055301 	movweq	r5, #21249	; 0x5301
    323c:	08000861 	stmdaeq	r0, {r0, r5, r6, fp}
    3240:	ca300000 	bgt	c03248 <__Stack_Size+0xc02248>
    3244:	2c08000b 	stccs	0, cr0, [r8], {11}
    3248:	3000001b 	andcc	r0, r0, fp, lsl r0
    324c:	08000ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp}
    3250:	000020fe 	strdeq	r2, [r0], -lr
    3254:	000cf02a 	andeq	pc, ip, sl, lsr #32
    3258:	210c0108 	tstcs	ip, r8, lsl #2
    325c:	37000000 	strcc	r0, [r0, -r0]
    3260:	00074901 	andeq	r4, r7, r1, lsl #18
    3264:	02220500 	eoreq	r0, r2, #0, 10
    3268:	0fad0106 	svceq	0x00ad0106
    326c:	0b920000 	bleq	fe483274 <BootRAM+0xd3f3a15>
    3270:	0bc40800 	bleq	ff105278 <BootRAM+0xe075a19>
    3274:	0fdc0800 	svceq	0x00dc0800
    3278:	df010000 	svcle	0x00010000
    327c:	38000019 	stmdacc	r0, {r0, r3, r4}
    3280:	00716572 	rsbseq	r6, r1, r2, ror r5
    3284:	27022205 	strcs	r2, [r2, -r5, lsl #4]
    3288:	000019df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    328c:	00001000 	andeq	r1, r0, r0
    3290:	00000ffc 	strdeq	r0, [r0], -ip
    3294:	000d7f39 	andeq	r7, sp, r9, lsr pc
    3298:	02220500 	eoreq	r0, r2, #0, 10
    329c:	00007b35 	andeq	r7, r0, r5, lsr fp
    32a0:	00102200 	andseq	r2, r0, r0, lsl #4
    32a4:	00101e00 	andseq	r1, r0, r0, lsl #28
    32a8:	07373900 	ldreq	r3, [r7, -r0, lsl #18]!
    32ac:	22050000 	andcs	r0, r5, #0
    32b0:	007b4602 	rsbseq	r4, fp, r2, lsl #12
    32b4:	10470000 	subne	r0, r7, r0
    32b8:	10430000 	subne	r0, r3, r0
    32bc:	9e3a0000 	cdpls	0, 3, cr0, cr10, cr0, {0}
    32c0:	4108000b 	tstmi	r8, fp
    32c4:	a200001b 	andge	r0, r0, #27
    32c8:	36000019 			; <UNDEFINED> instruction: 0x36000019
    32cc:	74025001 	strvc	r5, [r2], #-1
    32d0:	51013600 	tstpl	r1, r0, lsl #12
    32d4:	36007502 	strcc	r7, [r0], -r2, lsl #10
    32d8:	76025201 	strvc	r5, [r2], -r1, lsl #4
    32dc:	ae3a0000 	cdpge	0, 3, cr0, cr10, cr0, {0}
    32e0:	1a08000b 	bne	203314 <__Stack_Size+0x202314>
    32e4:	c2000021 	andgt	r0, r0, #33	; 0x21
    32e8:	36000019 			; <UNDEFINED> instruction: 0x36000019
    32ec:	74025001 	strvc	r5, [r2], #-1
    32f0:	51013600 	tstpl	r1, r0, lsl #12
    32f4:	36007502 	strcc	r7, [r0], -r2, lsl #10
    32f8:	76025201 	strvc	r5, [r2], -r1, lsl #4
    32fc:	bc350000 	ldclt	0, cr0, [r5], #-0
    3300:	2808000b 	stmdacs	r8, {r0, r1, r3}
    3304:	36000021 	strcc	r0, [r0], -r1, lsr #32
    3308:	74025001 	strvc	r5, [r2], #-1
    330c:	51013600 	tstpl	r1, r0, lsl #12
    3310:	36007502 	strcc	r7, [r0], -r2, lsl #10
    3314:	76025201 	strvc	r5, [r2], -r1, lsl #4
    3318:	1b000000 	blne	3320 <__Stack_Size+0x2320>
    331c:	00011f04 	andeq	r1, r1, r4, lsl #30
    3320:	dd013700 	stcle	7, cr3, [r1, #-0]
    3324:	05000005 	streq	r0, [r0, #-5]
    3328:	0106021a 	tsteq	r6, sl, lsl r2
    332c:	00000fad 	andeq	r0, r0, sp, lsr #31
    3330:	08000b64 	stmdaeq	r0, {r2, r5, r6, r8, r9, fp}
    3334:	08000b92 	stmdaeq	r0, {r1, r4, r7, r8, r9, fp}
    3338:	00001068 	andeq	r1, r0, r8, rrx
    333c:	001a9501 	andseq	r9, sl, r1, lsl #10
    3340:	65723800 	ldrbvs	r3, [r2, #-2048]!	; 0xfffff800
    3344:	1a050071 	bne	143510 <__Stack_Size+0x142510>
    3348:	19df2602 	ldmibne	pc, {r1, r9, sl, sp}^	; <UNPREDICTABLE>
    334c:	108c0000 	addne	r0, ip, r0
    3350:	10880000 	addne	r0, r8, r0
    3354:	f6390000 			; <UNDEFINED> instruction: 0xf6390000
    3358:	05000008 	streq	r0, [r0, #-8]
    335c:	9532021a 	ldrls	r0, [r2, #-538]!	; 0xfffffde6
    3360:	b200001a 	andlt	r0, r0, #26
    3364:	aa000010 	bge	33ac <__Stack_Size+0x23ac>
    3368:	39000010 	stmdbcc	r0, {r4}
    336c:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    3370:	42021a05 	andmi	r1, r2, #20480	; 0x5000
    3374:	00001a9b 	muleq	r0, fp, sl
    3378:	000010ee 	andeq	r1, r0, lr, ror #1
    337c:	000010e6 	andeq	r1, r0, r6, ror #1
    3380:	000b703a 	andeq	r7, fp, sl, lsr r0
    3384:	001b8708 	andseq	r8, fp, r8, lsl #14
    3388:	001a6400 	andseq	r6, sl, r0, lsl #8
    338c:	50013600 	andpl	r3, r1, r0, lsl #12
    3390:	36007402 	strcc	r7, [r0], -r2, lsl #8
    3394:	71025101 	tstvc	r2, r1, lsl #2
    3398:	52013600 	andpl	r3, r1, #0, 12
    339c:	00007202 	andeq	r7, r0, r2, lsl #4
    33a0:	000b7c3a 	andeq	r7, fp, sl, lsr ip
    33a4:	00213608 	eoreq	r3, r1, r8, lsl #12
    33a8:	001a7800 	andseq	r7, sl, r0, lsl #16
    33ac:	50013600 	andpl	r3, r1, r0, lsl #12
    33b0:	00007402 	andeq	r7, r0, r2, lsl #8
    33b4:	000b8a35 	andeq	r8, fp, r5, lsr sl
    33b8:	00214408 	eoreq	r4, r1, r8, lsl #8
    33bc:	50013600 	andpl	r3, r1, r0, lsl #12
    33c0:	36007402 	strcc	r7, [r0], -r2, lsl #8
    33c4:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    33c8:	52013600 	andpl	r3, r1, #0, 12
    33cc:	00007602 	andeq	r7, r0, r2, lsl #12
    33d0:	64041b00 	strvs	r1, [r4], #-2816	; 0xfffff500
    33d4:	1b00000a 	blne	3404 <__Stack_Size+0x2404>
    33d8:	00007b04 	andeq	r7, r0, r4, lsl #22
    33dc:	37013b00 	strcc	r3, [r1, -r0, lsl #22]
    33e0:	05000004 	streq	r0, [r0, #-4]
    33e4:	010601eb 	smlatteq	r6, fp, r1, r0
    33e8:	08000ac8 	stmdaeq	r0, {r3, r6, r7, r9, fp}
    33ec:	08000b64 	stmdaeq	r0, {r2, r5, r6, r8, r9, fp}
    33f0:	01007d02 	tsteq	r0, r2, lsl #26
    33f4:	00001af0 	strdeq	r1, [r0], -r0
    33f8:	00044939 	andeq	r4, r4, r9, lsr r9
    33fc:	01eb0500 	mvneq	r0, r0, lsl #10
    3400:	00007b27 	andeq	r7, r0, r7, lsr #22
    3404:	00112a00 	andseq	r2, r1, r0, lsl #20
    3408:	00112200 	andseq	r2, r1, r0, lsl #4
    340c:	08f63c00 	ldmeq	r6!, {sl, fp, ip, sp}^
    3410:	eb050000 	bl	143418 <__Stack_Size+0x142418>
    3414:	1af03b01 	bne	ffc12020 <BootRAM+0xeb827c1>
    3418:	51010000 	mrspl	r0, (UNDEF: 1)
    341c:	0011d13c 	andseq	sp, r1, ip, lsr r1
    3420:	01eb0500 	mvneq	r0, r0, lsl #10
    3424:	001a9b4b 	andseq	r9, sl, fp, asr #22
    3428:	00520100 	subseq	r0, r2, r0, lsl #2
    342c:	1af6041b 	bne	ffd844a0 <BootRAM+0xecf4c41>
    3430:	041b0000 	ldreq	r0, [fp], #-0
    3434:	00001afc 	strdeq	r1, [r0], -ip
    3438:	cd013e3d 	stcgt	14, cr3, [r1, #-244]	; 0xffffff0c
    343c:	03000008 	movweq	r0, #8
    3440:	0aa00654 	beq	fe804d98 <BootRAM+0xd775539>
    3444:	0ac80800 	beq	ff20544c <BootRAM+0xe175bed>
    3448:	7d020800 	stcvc	8, cr0, [r2, #-0]
    344c:	1b2c0100 	blne	b03854 <__Stack_Size+0xb02854>
    3450:	162f0000 	strtne	r0, [pc], -r0
    3454:	a000001d 	andge	r0, r0, sp, lsl r0
    3458:	0208000a 	andeq	r0, r8, #10
    345c:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
    3460:	08000aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp}
    3464:	00065503 	andeq	r5, r6, r3, lsl #10
    3468:	0b23013f 	bleq	8c396c <__Stack_Size+0x8c296c>
    346c:	4d030000 	stcmi	0, cr0, [r3, #-0]
    3470:	000a8c06 	andeq	r8, sl, r6, lsl #24
    3474:	000aa008 	andeq	sl, sl, r8
    3478:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    347c:	77014001 	strvc	r4, [r1, -r1]
    3480:	0300000f 	movweq	r0, #15
    3484:	ad010633 	stcge	6, cr0, [r1, #-204]	; 0xffffff34
    3488:	0100000f 	tsteq	r0, pc
    348c:	00001b87 	andeq	r1, r0, r7, lsl #23
    3490:	71657241 	cmnvc	r5, r1, asr #4
    3494:	21330300 	teqcs	r3, r0, lsl #6
    3498:	000019df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    349c:	000d7f42 	andeq	r7, sp, r2, asr #30
    34a0:	2f330300 	svccs	0x00330300
    34a4:	0000007b 	andeq	r0, r0, fp, ror r0
    34a8:	00073742 	andeq	r3, r7, r2, asr #14
    34ac:	40330300 	eorsmi	r0, r3, r0, lsl #6
    34b0:	0000007b 	andeq	r0, r0, fp, ror r0
    34b4:	01c94443 	biceq	r4, r9, r3, asr #8
    34b8:	3c030000 	stccc	0, cr0, [r3], {-0}
    34bc:	00007b10 	andeq	r7, r0, r0, lsl fp
    34c0:	40000000 	andmi	r0, r0, r0
    34c4:	000e2501 	andeq	r2, lr, r1, lsl #10
    34c8:	061d0300 	ldreq	r0, [sp], -r0, lsl #6
    34cc:	000fad01 	andeq	sl, pc, r1, lsl #26
    34d0:	1bd10100 	blne	ff4438d8 <BootRAM+0xe3b4079>
    34d4:	72410000 	subvc	r0, r1, #0
    34d8:	03007165 	movweq	r7, #357	; 0x165
    34dc:	19df201d 	ldmibne	pc, {r0, r2, r3, r4, sp}^	; <UNPREDICTABLE>
    34e0:	f6420000 			; <UNDEFINED> instruction: 0xf6420000
    34e4:	03000008 	movweq	r0, #8
    34e8:	1a952c1d 	bne	fe54e564 <BootRAM+0xd4bed05>
    34ec:	d1420000 	mrsle	r0, (UNDEF: 66)
    34f0:	03000011 	movweq	r0, #17
    34f4:	1a9b3c1d 	bne	fe6d2570 <BootRAM+0xd642d11>
    34f8:	b1270000 			; <UNDEFINED> instruction: 0xb1270000
    34fc:	0300000a 	movweq	r0, #10
    3500:	14061527 	strne	r1, [r6], #-1319	; 0xfffffad9
    3504:	03050000 	movweq	r0, #20480	; 0x5000
    3508:	20000044 	andcs	r0, r0, r4, asr #32
    350c:	57013f00 	strpl	r3, [r1, -r0, lsl #30]
    3510:	0100000f 	tsteq	r0, pc
    3514:	096c0684 	stmdbeq	ip!, {r2, r7, r9, sl}^
    3518:	09d00800 	ldmibeq	r0, {fp}^
    351c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3520:	01450100 	mrseq	r0, (UNDEF: 85)
    3524:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
    3528:	da065f01 	ble	19b134 <__Stack_Size+0x19a134>
    352c:	6c080008 	stcvs	0, cr0, [r8], {8}
    3530:	64080009 	strvs	r0, [r8], #-9
    3534:	01000011 	tsteq	r0, r1, lsl r0
    3538:	00001c85 	andeq	r1, r0, r5, lsl #25
    353c:	000f0927 	andeq	r0, pc, r7, lsr #18
    3540:	12600100 	rsbne	r0, r0, #0, 2
    3544:	0000005e 	andeq	r0, r0, lr, asr r0
    3548:	00390305 	eorseq	r0, r9, r5, lsl #6
    354c:	52272000 	eorpl	r2, r7, #0
    3550:	0100000d 	tsteq	r0, sp
    3554:	007b1361 	rsbseq	r1, fp, r1, ror #6
    3558:	03050000 	movweq	r0, #20480	; 0x5000
    355c:	2000003a 	andcs	r0, r0, sl, lsr r0
    3560:	63646146 	cmnvs	r4, #-2147483631	; 0x80000011
    3564:	0c6c0100 	stfeqe	f0, [ip], #-0
    3568:	0000007b 	andeq	r0, r0, fp, ror r0
    356c:	00001186 	andeq	r1, r0, r6, lsl #3
    3570:	00001184 	andeq	r1, r0, r4, lsl #3
    3574:	000f9d47 	andeq	r9, pc, r7, asr #26
    3578:	0c6f0100 	stfeqe	f0, [pc], #-0	; 3580 <__Stack_Size+0x2580>
    357c:	0000007b 	andeq	r0, r0, fp, ror r0
    3580:	0000119b 	muleq	r0, fp, r1
    3584:	00001199 	muleq	r0, r9, r1
    3588:	000c8b47 	andeq	r8, ip, r7, asr #22
    358c:	0b700100 	bleq	1c03994 <__Stack_Size+0x1c02994>
    3590:	00000044 	andeq	r0, r0, r4, asr #32
    3594:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    3598:	000011ae 	andeq	r1, r0, lr, lsr #3
    359c:	00090a3a 	andeq	r0, r9, sl, lsr sl
    35a0:	001d2408 	andseq	r2, sp, r8, lsl #8
    35a4:	001c7400 	andseq	r7, ip, r0, lsl #8
    35a8:	50013600 	andpl	r3, r1, r0, lsl #12
    35ac:	00007402 	andeq	r7, r0, r2, lsl #8
    35b0:	00091e35 	andeq	r1, r9, r5, lsr lr
    35b4:	001cb108 	andseq	fp, ip, r8, lsl #2
    35b8:	50013600 	andpl	r3, r1, r0, lsl #12
    35bc:	00007402 	andeq	r7, r0, r2, lsl #8
    35c0:	d1014000 	mrsle	r4, (UNDEF: 1)
    35c4:	0100000a 	tsteq	r0, sl
    35c8:	7b010a57 	blvc	45f2c <__Stack_Size+0x44f2c>
    35cc:	01000000 	mrseq	r0, (UNDEF: 0)
    35d0:	00001cb1 			; <UNDEFINED> instruction: 0x00001cb1
    35d4:	000d5242 	andeq	r5, sp, r2, asr #4
    35d8:	20570100 	subscs	r0, r7, r0, lsl #2
    35dc:	0000007b 	andeq	r0, r0, fp, ror r0
    35e0:	000b8a44 	andeq	r8, fp, r4, asr #20
    35e4:	13580100 	cmpne	r8, #0, 2
    35e8:	00000098 	muleq	r0, r8, r0
    35ec:	87014800 	strhi	r4, [r1, -r0, lsl #16]
    35f0:	0100000b 	tsteq	r0, fp
    35f4:	7b010a50 	blvc	45f3c <__Stack_Size+0x44f3c>
    35f8:	c0000000 	andgt	r0, r0, r0
    35fc:	d8080008 	stmdale	r8, {r3}
    3600:	02080008 	andeq	r0, r8, #8
    3604:	f601007d 			; <UNDEFINED> instruction: 0xf601007d
    3608:	4900001c 	stmdbmi	r0, {r2, r3, r4}
    360c:	00000d52 	andeq	r0, r0, r2, asr sp
    3610:	7b1d5001 	blvc	75761c <__Stack_Size+0x75661c>
    3614:	03000000 	movweq	r0, #0
    3618:	ff000012 			; <UNDEFINED> instruction: 0xff000012
    361c:	27000011 	smladcs	r0, r1, r0, r0
    3620:	00000b8a 	andeq	r0, r0, sl, lsl #23
    3624:	98135101 	ldmdals	r3, {r0, r8, ip, lr}
    3628:	05000000 	streq	r0, [r0, #-0]
    362c:	00000803 	andeq	r0, r0, r3, lsl #16
    3630:	884a0020 	stmdahi	sl, {r5}^
    3634:	0100000a 	tsteq	r0, sl
    3638:	16010d43 	strne	r0, [r1], -r3, asr #26
    363c:	2700001d 	smladcs	r0, sp, r0, r0
    3640:	00000e60 	andeq	r0, r0, r0, ror #28
    3644:	98134401 	ldmdals	r3, {r0, sl, lr}
    3648:	05000000 	streq	r0, [r0, #-0]
    364c:	00004c03 	andeq	r4, r0, r3, lsl #24
    3650:	014b0020 	cmpeq	fp, r0, lsr #32
    3654:	00000b7c 	andeq	r0, r0, ip, ror fp
    3658:	98110604 	ldmdals	r1, {r2, r9, sl}
    365c:	03000000 	movweq	r0, #0
    3660:	0fd60148 	svceq	0x00d60148
    3664:	3c010000 	stccc	0, cr0, [r1], {-0}
    3668:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    366c:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    3670:	08c00800 	stmiaeq	r0, {fp}^
    3674:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3678:	1d690100 	stfnee	f0, [r9, #-0]
    367c:	52490000 	subpl	r0, r9, #0
    3680:	0100000d 	tsteq	r0, sp
    3684:	007b213c 	rsbseq	r2, fp, ip, lsr r1
    3688:	12280000 	eorne	r0, r8, #0
    368c:	12240000 	eorne	r0, r4, #0
    3690:	8a270000 	bhi	9c3698 <__Stack_Size+0x9c2698>
    3694:	0100000b 	tsteq	r0, fp
    3698:	0098133d 	addseq	r1, r8, sp, lsr r3
    369c:	03050000 	movweq	r0, #20480	; 0x5000
    36a0:	20000004 	andcs	r0, r0, r4
    36a4:	0ce94a00 	vstmiaeq	r9!, {s9-s8}
    36a8:	1c010000 	stcne	0, cr0, [r1], {-0}
    36ac:	1db7010d 	ldfnes	f0, [r7, #52]!	; 0x34
    36b0:	884c0000 	stmdahi	ip, {}^	; <UNPREDICTABLE>
    36b4:	4400001d 	strmi	r0, [r0], #-29	; 0xffffffe3
    36b8:	000001c9 	andeq	r0, r0, r9, asr #3
    36bc:	98031e01 	stmdals	r3, {r0, r9, sl, fp, ip}
    36c0:	00000000 	andeq	r0, r0, r0
    36c4:	001d9a4c 	andseq	r9, sp, ip, asr #20
    36c8:	01c94400 	biceq	r4, r9, r0, lsl #8
    36cc:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    36d0:	00009803 	andeq	r9, r0, r3, lsl #16
    36d4:	aa4c0000 	bge	13036dc <__Stack_Size+0x13026dc>
    36d8:	4d00001d 	stcmi	0, cr0, [r0, #-116]	; 0xffffff8c
    36dc:	21010069 	tstcs	r1, r9, rrx
    36e0:	00009803 	andeq	r9, r0, r3, lsl #16
    36e4:	4d430000 	stclmi	0, cr0, [r3, #-0]
    36e8:	2a010069 	bcs	43894 <__Stack_Size+0x42894>
    36ec:	00009803 	andeq	r9, r0, r3, lsl #16
    36f0:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    36f4:	00000bc2 	andeq	r0, r0, r2, asr #23
    36f8:	010d1101 	tsteq	sp, r1, lsl #2
    36fc:	08000860 	stmdaeq	r0, {r5, r6, fp}
    3700:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
    3704:	00001249 	andeq	r1, r0, r9, asr #4
    3708:	001e4501 	andseq	r4, lr, r1, lsl #10
    370c:	07314900 	ldreq	r4, [r1, -r0, lsl #18]!
    3710:	11010000 	mrsne	r0, (UNDEF: 1)
    3714:	00005e25 	andeq	r5, r0, r5, lsr #28
    3718:	00126d00 	andseq	r6, r2, r0, lsl #26
    371c:	00126900 	andseq	r6, r2, r0, lsl #18
    3720:	1ede4f00 	cdpne	15, 13, cr4, cr14, cr0, {0}
    3724:	08740000 	ldmdaeq	r4!, {}^	; <UNPREDICTABLE>
    3728:	a0000800 	andge	r0, r0, r0, lsl #16
    372c:	01000001 	tsteq	r0, r1
    3730:	f8340312 			; <UNDEFINED> instruction: 0xf8340312
    3734:	9000001e 	andls	r0, r0, lr, lsl r0
    3738:	8e000012 	mcrhi	0, 0, r0, cr0, cr2, {0}
    373c:	34000012 	strcc	r0, [r0], #-18	; 0xffffffee
    3740:	00001f04 	andeq	r1, r0, r4, lsl #30
    3744:	000012aa 	andeq	r1, r0, sl, lsr #5
    3748:	000012a8 	andeq	r1, r0, r8, lsr #5
    374c:	001eec34 	andseq	lr, lr, r4, lsr ip
    3750:	0012ca00 	andseq	ip, r2, r0, lsl #20
    3754:	0012c400 	andseq	ip, r2, r0, lsl #8
    3758:	01a05000 	moveq	r5, r0
    375c:	10320000 	eorsne	r0, r2, r0
    3760:	fa00001f 	blx	37e4 <__Stack_Size+0x27e4>
    3764:	f6000012 			; <UNDEFINED> instruction: 0xf6000012
    3768:	35000012 	strcc	r0, [r0, #-18]	; 0xffffffee
    376c:	0800089a 	stmdaeq	r0, {r1, r3, r4, r7, fp}
    3770:	00002152 	andeq	r2, r0, r2, asr r1
    3774:	05510136 	ldrbeq	r0, [r1, #-310]	; 0xfffffeca
    3778:	0002a603 	andeq	sl, r2, r3, lsl #12
    377c:	00000020 	andeq	r0, r0, r0, lsr #32
    3780:	0e695100 	poweqe	f5, f1, f0
    3784:	0a010000 	beq	4378c <__Stack_Size+0x4278c>
    3788:	0fad010d 	svceq	0x00ad010d
    378c:	7c010000 	stcvc	0, cr0, [r1], {-0}
    3790:	4100001e 	tstmi	r0, lr, lsl r0
    3794:	00716572 	rsbseq	r6, r1, r2, ror r5
    3798:	df280a01 	svcle	0x00280a01
    379c:	42000019 	andmi	r0, r0, #25
    37a0:	00000d7f 	andeq	r0, r0, pc, ror sp
    37a4:	7b360a01 	blvc	d85fb0 <__Stack_Size+0xd84fb0>
    37a8:	42000000 	andmi	r0, r0, #0
    37ac:	00000737 	andeq	r0, r0, r7, lsr r7
    37b0:	7b470a01 	blvc	11c5fbc <__Stack_Size+0x11c4fbc>
    37b4:	00000000 	andeq	r0, r0, r0
    37b8:	000d0d51 	andeq	r0, sp, r1, asr sp
    37bc:	0d090100 	stfeqs	f0, [r9, #-0]
    37c0:	000fad01 	andeq	sl, pc, r1, lsl #26
    37c4:	1eb30100 	frdnes	f0, f3, f0
    37c8:	72410000 	subvc	r0, r1, #0
    37cc:	01007165 	tsteq	r0, r5, ror #2
    37d0:	19df2709 	ldmibne	pc, {r0, r3, r8, r9, sl, sp}^	; <UNPREDICTABLE>
    37d4:	f6420000 			; <UNDEFINED> instruction: 0xf6420000
    37d8:	01000008 	tsteq	r0, r8
    37dc:	1a953309 	bne	fe550408 <BootRAM+0xd4c0ba9>
    37e0:	d1420000 	mrsle	r0, (UNDEF: 66)
    37e4:	01000011 	tsteq	r0, r1, lsl r0
    37e8:	1a9b4309 	bne	fe6d4414 <BootRAM+0xd644bb5>
    37ec:	51000000 	mrspl	r0, (UNDEF: 0)
    37f0:	000004ef 	andeq	r0, r0, pc, ror #9
    37f4:	0113c102 	tsteq	r3, r2, lsl #2
    37f8:	000000b7 	strheq	r0, [r0], -r7
    37fc:	001ede03 	andseq	sp, lr, r3, lsl #28
    3800:	07314200 	ldreq	r4, [r1, -r0, lsl #4]!
    3804:	c1020000 	mrsgt	r0, (UNDEF: 2)
    3808:	00005e27 	andeq	r5, r0, r7, lsr #28
    380c:	75624100 	strbvc	r4, [r2, #-256]!	; 0xffffff00
    3810:	c1020066 	tstgt	r2, r6, rrx
    3814:	001a9b38 	andseq	r9, sl, r8, lsr fp
    3818:	34520000 	ldrbcc	r0, [r2], #-0
    381c:	02000009 	andeq	r0, r0, #9
    3820:	030114b8 	movweq	r1, #5304	; 0x14b8
    3824:	00001f1d 	andeq	r1, r0, sp, lsl pc
    3828:	00073142 	andeq	r3, r7, r2, asr #2
    382c:	30b80200 	adcscc	r0, r8, r0, lsl #4
    3830:	0000005e 	andeq	r0, r0, lr, asr r0
    3834:	66756241 	ldrbtvs	r6, [r5], -r1, asr #4
    3838:	47b80200 	ldrmi	r0, [r8, r0, lsl #4]!
    383c:	00001f1d 	andeq	r1, r0, sp, lsl pc
    3840:	0011d142 	andseq	sp, r1, r2, asr #2
    3844:	55b80200 	ldrpl	r0, [r8, #512]!	; 0x200
    3848:	0000007b 	andeq	r0, r0, fp, ror r0
    384c:	7864694d 	stmdavc	r4!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    3850:	0bba0200 	bleq	fee84058 <BootRAM+0xddf47f9>
    3854:	0000005e 	andeq	r0, r0, lr, asr r0
    3858:	8c041b00 			; <UNDEFINED> instruction: 0x8c041b00
    385c:	53000000 	movwpl	r0, #0
    3860:	000003fe 	strdeq	r0, [r0], -lr
    3864:	1605de06 	strne	sp, [r5], -r6, lsl #28
    3868:	1f400301 	svcne	0x00400301
    386c:	44540000 	ldrbmi	r0, [r4], #-0
    3870:	06000003 	streq	r0, [r0], -r3
    3874:	722f05de 	eorvc	r0, pc, #931135488	; 0x37800000
    3878:	00000002 	andeq	r0, r0, r2
    387c:	001c8555 	andseq	r8, ip, r5, asr r5
    3880:	0008d800 	andeq	sp, r8, r0, lsl #16
    3884:	0008da08 	andeq	sp, r8, r8, lsl #20
    3888:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    388c:	001f5d01 	andseq	r5, pc, r1, lsl #26
    3890:	1c985600 	ldcne	6, cr5, [r8], {0}
    3894:	50010000 	andpl	r0, r1, r0
    3898:	1b875700 	blne	fe1d94a0 <BootRAM+0xd149c41>
    389c:	09d00000 	ldmibeq	r0, {}^	; <UNPREDICTABLE>
    38a0:	0a1c0800 	beq	7058a8 <__Stack_Size+0x7048a8>
    38a4:	131f0800 	tstne	pc, #0, 16
    38a8:	d5010000 	strle	r0, [r1, #-0]
    38ac:	3400001f 	strcc	r0, [r0], #-31	; 0xffffffe1
    38b0:	00001b9a 	muleq	r0, sl, fp
    38b4:	00001347 	andeq	r1, r0, r7, asr #6
    38b8:	0000133f 	andeq	r1, r0, pc, lsr r3
    38bc:	001ba656 	andseq	sl, fp, r6, asr r6
    38c0:	56510100 	ldrbpl	r0, [r1], -r0, lsl #2
    38c4:	00001bb2 			; <UNDEFINED> instruction: 0x00001bb2
    38c8:	87585201 	ldrbhi	r5, [r8, -r1, lsl #4]
    38cc:	f600001b 			; <UNDEFINED> instruction: 0xf600001b
    38d0:	00080009 	andeq	r0, r8, r9
    38d4:	080009f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, fp}
    38d8:	08000a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp}
    38dc:	34061d03 	strcc	r1, [r6], #-3331	; 0xfffff2fd
    38e0:	00001bb2 			; <UNDEFINED> instruction: 0x00001bb2
    38e4:	00001383 	andeq	r1, r0, r3, lsl #7
    38e8:	00001381 	andeq	r1, r0, r1, lsl #7
    38ec:	001ba634 	andseq	sl, fp, r4, lsr r6
    38f0:	00139800 	andseq	r9, r3, r0, lsl #16
    38f4:	00139600 	andseq	r9, r3, r0, lsl #12
    38f8:	1b9a3400 	blne	fe690900 <BootRAM+0xd6010a1>
    38fc:	13af0000 			; <UNDEFINED> instruction: 0x13af0000
    3900:	13ab0000 			; <UNDEFINED> instruction: 0x13ab0000
    3904:	f6590000 			; <UNDEFINED> instruction: 0xf6590000
    3908:	0e080009 	cdpeq	0, 0, cr0, cr8, cr9, {0}
    390c:	0008000a 	andeq	r0, r8, sl
    3910:	1b415700 	blne	1059518 <__Stack_Size+0x1058518>
    3914:	0a1c0000 	beq	70391c <__Stack_Size+0x70291c>
    3918:	0a8c0800 	beq	fe305920 <BootRAM+0xd2760c1>
    391c:	13d00800 	bicsne	r0, r0, #0, 16
    3920:	d4010000 	strle	r0, [r1], #-0
    3924:	34000020 	strcc	r0, [r0], #-32	; 0xffffffe0
    3928:	00001b54 	andeq	r1, r0, r4, asr fp
    392c:	000013f8 	strdeq	r1, [r0], -r8
    3930:	000013f0 	strdeq	r1, [r0], -r0
    3934:	001b6034 	andseq	r6, fp, r4, lsr r0
    3938:	00143800 	andseq	r3, r4, r0, lsl #16
    393c:	00143200 	andseq	r3, r4, r0, lsl #4
    3940:	1b6c3400 	blne	1b10948 <__Stack_Size+0x1b0f948>
    3944:	146a0000 	strbtne	r0, [sl], #-0
    3948:	14640000 	strbtne	r0, [r4], #-0
    394c:	c85a0000 	ldmdagt	sl, {}^	; <UNPREDICTABLE>
    3950:	21000001 	tstcs	r0, r1
    3954:	5b000020 	blpl	39dc <__Stack_Size+0x29dc>
    3958:	00001b79 	andeq	r1, r0, r9, ror fp
    395c:	1b415800 	blne	1059964 <__Stack_Size+0x1058964>
    3960:	0a300000 	beq	c03968 <__Stack_Size+0xc02968>
    3964:	30000800 	andcc	r0, r0, r0, lsl #16
    3968:	6e08000a 	cdpvs	0, 0, cr0, cr8, cr10, {0}
    396c:	0308000a 	movweq	r0, #32778	; 0x800a
    3970:	54340633 	ldrtpl	r0, [r4], #-1587	; 0xfffff9cd
    3974:	9a00001b 	bls	39e8 <__Stack_Size+0x29e8>
    3978:	96000014 			; <UNDEFINED> instruction: 0x96000014
    397c:	34000014 	strcc	r0, [r0], #-20	; 0xffffffec
    3980:	00001b60 	andeq	r1, r0, r0, ror #22
    3984:	000014bd 			; <UNDEFINED> instruction: 0x000014bd
    3988:	000014bb 			; <UNDEFINED> instruction: 0x000014bb
    398c:	001b6c34 	andseq	r6, fp, r4, lsr ip
    3990:	0014d500 	andseq	sp, r4, r0, lsl #10
    3994:	0014d300 	andseq	sp, r4, r0, lsl #6
    3998:	20125c00 	andscs	r5, r2, r0, lsl #24
    399c:	0a300000 	beq	c039a4 <__Stack_Size+0xc029a4>
    39a0:	0a6e0800 	beq	1b859a8 <__Stack_Size+0x1b849a8>
    39a4:	79320800 	ldmdbvc	r2!, {fp}
    39a8:	f100001b 	cps	#27
    39ac:	e9000014 	stmdb	r0, {r2, r4}
    39b0:	33000014 	movwcc	r0, #20
    39b4:	00001eb3 			; <UNDEFINED> instruction: 0x00001eb3
    39b8:	08000a30 	stmdaeq	r0, {r4, r5, r9, fp}
    39bc:	000a3002 	andeq	r3, sl, r2
    39c0:	000a3a08 	andeq	r3, sl, r8, lsl #20
    39c4:	07390308 	ldreq	r0, [r9, -r8, lsl #6]!
    39c8:	000020c0 	andeq	r2, r0, r0, asr #1
    39cc:	001ec534 	andseq	ip, lr, r4, lsr r5
    39d0:	00153f00 	andseq	r3, r5, r0, lsl #30
    39d4:	00153d00 	andseq	r3, r5, r0, lsl #26
    39d8:	1ed13400 	cdpne	4, 13, cr3, cr1, cr0, {0}
    39dc:	15550000 	ldrbne	r0, [r5, #-0]
    39e0:	15530000 	ldrbne	r0, [r3, #-0]
    39e4:	3a350000 	bcc	d439ec <__Stack_Size+0xd429ec>
    39e8:	6008000a 	andvs	r0, r8, sl
    39ec:	36000021 	strcc	r0, [r0], -r1, lsr #32
    39f0:	31015001 	tstcc	r1, r1
    39f4:	02510136 	subseq	r0, r1, #-2147483635	; 0x8000000d
    39f8:	00000074 	andeq	r0, r0, r4, ror r0
    39fc:	001d162e 	andseq	r1, sp, lr, lsr #12
    3a00:	000a6200 	andeq	r6, sl, r0, lsl #4
    3a04:	01e00108 	mvneq	r0, r8, lsl #2
    3a08:	45030000 	strmi	r0, [r3, #-0]
    3a0c:	00000015 	andeq	r0, r0, r5, lsl r0
    3a10:	5701015d 	smlsdpl	r1, sp, r1, r0
    3a14:	5700000c 	strpl	r0, [r0, -ip]
    3a18:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    3a1c:	015d060a 	cmpeq	sp, sl, lsl #12
    3a20:	000c3501 	andeq	r3, ip, r1, lsl #10
    3a24:	000c3500 	andeq	r3, ip, r0, lsl #10
    3a28:	060c0f00 	streq	r0, [ip], -r0, lsl #30
    3a2c:	c101015d 	tstgt	r1, sp, asr r1
    3a30:	c1000007 	tstgt	r0, r7
    3a34:	02000007 	andeq	r0, r0, #7
    3a38:	015d062a 	cmpeq	sp, sl, lsr #12
    3a3c:	000f2701 	andeq	r2, pc, r1, lsl #14
    3a40:	000f2700 	andeq	r2, pc, r0, lsl #14
    3a44:	06090e00 	streq	r0, [r9], -r0, lsl #28
    3a48:	fd01015d 	stc2	1, cr0, [r1, #-372]	; 0xfffffe8c
    3a4c:	fd000009 	stc2	0, cr0, [r0, #-36]	; 0xffffffdc
    3a50:	0f000009 	svceq	0x00000009
    3a54:	015d060b 	cmpeq	sp, fp, lsl #12
    3a58:	000af401 	andeq	pc, sl, r1, lsl #8
    3a5c:	000af400 	andeq	pc, sl, r0, lsl #8
    3a60:	06080e00 	streq	r0, [r8], -r0, lsl #28
    3a64:	c401015d 	strgt	r0, [r1], #-349	; 0xfffffea3
    3a68:	c400000c 	strgt	r0, [r0], #-12
    3a6c:	0f00000c 	svceq	0x0000000c
    3a70:	015d060a 	cmpeq	sp, sl, lsl #12
    3a74:	000b2c01 	andeq	r2, fp, r1, lsl #24
    3a78:	000b2c00 	andeq	r2, fp, r0, lsl #24
    3a7c:	06070e00 	streq	r0, [r7], -r0, lsl #28
    3a80:	0701015d 	smlsdeq	r1, sp, r1, r0
    3a84:	0700000b 	streq	r0, [r0, -fp]
    3a88:	0f00000b 	svceq	0x0000000b
    3a8c:	015d0609 	cmpeq	sp, r9, lsl #12
    3a90:	0003dd01 	andeq	sp, r3, r1, lsl #26
    3a94:	0003dd00 	andeq	sp, r3, r0, lsl #26
    3a98:	06b30200 	ldrteq	r0, [r3], r0, lsl #4
    3a9c:	ee01015d 	mcr	1, 0, r0, cr1, cr13, {2}
    3aa0:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
    3aa4:	02000004 	andeq	r0, r0, #4
    3aa8:	950005c0 	strls	r0, [r0, #-1472]	; 0xfffffa40
    3aac:	02000001 	andeq	r0, r0, #1
    3ab0:	000ce100 	andeq	lr, ip, r0, lsl #2
    3ab4:	12010400 	andne	r0, r1, #0, 8
    3ab8:	0c000000 	stceq	0, cr0, [r0], {-0}
    3abc:	00000ff3 	strdeq	r0, [r0], -r3
    3ac0:	00001019 	andeq	r1, r0, r9, lsl r0
    3ac4:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
    3ac8:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
    3acc:	000012f5 	strdeq	r1, [r0], -r5
    3ad0:	88060102 	stmdahi	r6, {r1, r8}
    3ad4:	02000001 	andeq	r0, r0, #1
    3ad8:	02340502 	eorseq	r0, r4, #8388608	; 0x800000
    3adc:	04020000 	streq	r0, [r2], #-0
    3ae0:	00020205 	andeq	r0, r2, r5, lsl #4
    3ae4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    3ae8:	000001fd 	strdeq	r0, [r0], -sp
    3aec:	0001e503 	andeq	lr, r1, r3, lsl #10
    3af0:	182e0200 	stmdane	lr!, {r9}
    3af4:	00000052 	andeq	r0, r0, r2, asr r0
    3af8:	00004104 	andeq	r4, r0, r4, lsl #2
    3afc:	08010200 	stmdaeq	r1, {r9}
    3b00:	00000186 	andeq	r0, r0, r6, lsl #3
    3b04:	5e070202 	cdppl	2, 0, cr0, cr7, cr2, {0}
    3b08:	03000001 	movweq	r0, #1
    3b0c:	0000024a 	andeq	r0, r0, sl, asr #4
    3b10:	76193402 	ldrvc	r3, [r9], -r2, lsl #8
    3b14:	05000000 	streq	r0, [r0, #-0]
    3b18:	00000060 	andeq	r0, r0, r0, rrx
    3b1c:	00006c04 	andeq	r6, r0, r4, lsl #24
    3b20:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3b24:	000001d3 	ldrdeq	r0, [r0], -r3
    3b28:	ce070802 	cdpgt	8, 0, cr0, cr7, cr2, {0}
    3b2c:	06000001 	streq	r0, [r0], -r1
    3b30:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3b34:	84050074 	strhi	r0, [r5], #-116	; 0xffffff8c
    3b38:	02000000 	andeq	r0, r0, #0
    3b3c:	01d80704 	bicseq	r0, r8, r4, lsl #14
    3b40:	10070000 	andne	r0, r7, r0
    3b44:	09016d03 	stmdbeq	r1, {r0, r1, r8, sl, fp, sp, lr}
    3b48:	000000e2 	andeq	r0, r0, r2, ror #1
    3b4c:	00100108 	andseq	r0, r0, r8, lsl #2
    3b50:	016f0300 	cmneq	pc, r0, lsl #6
    3b54:	00006c11 	andeq	r6, r0, r1, lsl ip
    3b58:	00230200 	eoreq	r0, r3, r0, lsl #4
    3b5c:	00104a08 	andseq	r4, r0, r8, lsl #20
    3b60:	01700300 	cmneq	r0, r0, lsl #6
    3b64:	00006c11 	andeq	r6, r0, r1, lsl ip
    3b68:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3b6c:	4c415609 	mcrrmi	6, 0, r5, r1, cr9
    3b70:	01710300 	cmneq	r1, r0, lsl #6
    3b74:	00006c11 	andeq	r6, r0, r1, lsl ip
    3b78:	08230200 	stmdaeq	r3!, {r9}
    3b7c:	00101308 	andseq	r1, r0, r8, lsl #6
    3b80:	01720300 	cmneq	r2, r0, lsl #6
    3b84:	00007111 	andeq	r7, r0, r1, lsl r1
    3b88:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3b8c:	10060a00 	andne	r0, r6, r0, lsl #20
    3b90:	73030000 	movwvc	r0, #12288	; 0x3000
    3b94:	00970301 	addseq	r0, r7, r1, lsl #6
    3b98:	530b0000 	movwpl	r0, #45056	; 0xb000
    3b9c:	03000002 	movweq	r0, #2
    3ba0:	8b1506ce 	blhi	5456e0 <__Stack_Size+0x5446e0>
    3ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ba8:	020b0c01 	andeq	r0, fp, #256	; 0x100
    3bac:	45040000 	strmi	r0, [r4, #-0]
    3bb0:	00006011 	andeq	r6, r0, r1, lsl r0
    3bb4:	0d010100 	stfeqs	f0, [r1, #-0]
    3bb8:	0000004d 	andeq	r0, r0, sp, asr #32
    3bbc:	0000011c 	andeq	r0, r0, ip, lsl r1
    3bc0:	0000900e 	andeq	r9, r0, lr
    3bc4:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
    3bc8:	0000010c 	andeq	r0, r0, ip, lsl #2
    3bcc:	0001500c 	andeq	r5, r1, ip
    3bd0:	17460400 	strbne	r0, [r6, -r0, lsl #8]
    3bd4:	0000011c 	andeq	r0, r0, ip, lsl r1
    3bd8:	4d0d0101 	stfmis	f0, [sp, #-4]
    3bdc:	3f000000 	svccc	0x00000000
    3be0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    3be4:	00000090 	muleq	r0, r0, r0
    3be8:	2f040007 	svccs	0x00040007
    3bec:	0c000001 	stceq	0, cr0, [r0], {1}
    3bf0:	00000226 	andeq	r0, r0, r6, lsr #4
    3bf4:	3f174704 	svccc	0x00174704
    3bf8:	01000001 	tsteq	r0, r1
    3bfc:	00e70c01 	rsceq	r0, r7, r1, lsl #24
    3c00:	05050000 	streq	r0, [r5, #-0]
    3c04:	00006c1a 	andeq	r6, r0, sl, lsl ip
    3c08:	0f010100 	svceq	0x00010100
    3c0c:	00000152 	andeq	r0, r0, r2, asr r1
    3c10:	05130401 	ldreq	r0, [r3, #-1025]	; 0xfffffbff
    3c14:	00005003 	andeq	r5, r0, r3
    3c18:	4f011020 	svcmi	0x00011020
    3c1c:	01000010 	tsteq	r0, r0, lsl r0
    3c20:	0d68060c 	stcleq	6, cr0, [r8, #-48]!	; 0xffffffd0
    3c24:	0d780800 	ldcleq	8, cr0, [r8, #-0]
    3c28:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3c2c:	01100100 	tsteq	r0, r0, lsl #2
    3c30:	00000171 	andeq	r0, r0, r1, ror r1
    3c34:	58060601 	stmdapl	r6, {r0, r9, sl}
    3c38:	6808000d 	stmdavs	r8, {r0, r2, r3}
    3c3c:	0208000d 	andeq	r0, r8, #13
    3c40:	0001007d 	andeq	r0, r1, sp, ror r0
    3c44:	00001491 	muleq	r0, r1, r4
    3c48:	0dc70002 	stcleq	0, cr0, [r7, #8]
    3c4c:	01040000 	mrseq	r0, (UNDEF: 4)
    3c50:	00000012 	andeq	r0, r0, r2, lsl r0
    3c54:	0011420c 	andseq	r4, r1, ip, lsl #4
    3c58:	0000f800 	andeq	pc, r0, r0, lsl #16
    3c5c:	000d7800 	andeq	r7, sp, r0, lsl #16
    3c60:	00133408 	andseq	r3, r3, r8, lsl #8
    3c64:	0013c708 	andseq	ip, r3, r8, lsl #14
    3c68:	06010200 	streq	r0, [r1], -r0, lsl #4
    3c6c:	00000188 	andeq	r0, r0, r8, lsl #3
    3c70:	34050202 	strcc	r0, [r5], #-514	; 0xfffffdfe
    3c74:	02000002 	andeq	r0, r0, #2
    3c78:	02020504 	andeq	r0, r2, #4, 10	; 0x1000000
    3c7c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3c80:	0001fd05 	andeq	pc, r1, r5, lsl #26
    3c84:	01e50300 	mvneq	r0, r0, lsl #6
    3c88:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    3c8c:	00005718 	andeq	r5, r0, r8, lsl r7
    3c90:	00410400 	subeq	r0, r1, r0, lsl #8
    3c94:	41050000 	mrsmi	r0, (UNDEF: 5)
    3c98:	02000000 	andeq	r0, r0, #0
    3c9c:	01860801 	orreq	r0, r6, r1, lsl #16
    3ca0:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    3ca4:	06000005 	streq	r0, [r0], -r5
    3ca8:	00741931 	rsbseq	r1, r4, r1, lsr r9
    3cac:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
    3cb0:	05000000 	streq	r0, [r0, #-0]
    3cb4:	0000005e 	andeq	r0, r0, lr, asr r0
    3cb8:	5e070202 	cdppl	2, 0, cr0, cr7, cr2, {0}
    3cbc:	03000001 	movweq	r0, #1
    3cc0:	0000024a 	andeq	r0, r0, sl, asr #4
    3cc4:	8c193406 	cfldrshi	mvf3, [r9], {6}
    3cc8:	04000000 	streq	r0, [r0], #-0
    3ccc:	0000007b 	andeq	r0, r0, fp, ror r0
    3cd0:	d3070402 	movwle	r0, #29698	; 0x7402
    3cd4:	02000001 	andeq	r0, r0, #1
    3cd8:	01ce0708 	biceq	r0, lr, r8, lsl #14
    3cdc:	04060000 	streq	r0, [r6], #-0
    3ce0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3ce4:	009a0400 	addseq	r0, sl, r0, lsl #8
    3ce8:	04020000 	streq	r0, [r2], #-0
    3cec:	0001d807 	andeq	sp, r1, r7, lsl #16
    3cf0:	03080700 	movweq	r0, #34560	; 0x8700
    3cf4:	0102091e 	tsteq	r2, lr, lsl r9
    3cf8:	e4080000 	str	r0, [r8], #-0
    3cfc:	03000002 	movweq	r0, #2
    3d00:	00410b1f 	subeq	r0, r1, pc, lsl fp
    3d04:	23020000 	movwcs	r0, #8192	; 0x2000
    3d08:	06ed0800 	strbteq	r0, [sp], r0, lsl #16
    3d0c:	20030000 	andcs	r0, r3, r0
    3d10:	0000410b 	andeq	r4, r0, fp, lsl #2
    3d14:	01230200 			; <UNDEFINED> instruction: 0x01230200
    3d18:	00037508 	andeq	r7, r3, r8, lsl #10
    3d1c:	0c210300 	stceq	3, cr0, [r1], #-0
    3d20:	0000005e 	andeq	r0, r0, lr, asr r0
    3d24:	08022302 	stmdaeq	r2, {r1, r8, r9, sp}
    3d28:	00000280 	andeq	r0, r0, r0, lsl #5
    3d2c:	5e0c2203 	cdppl	2, 0, cr2, cr12, cr3, {0}
    3d30:	02000000 	andeq	r0, r0, #0
    3d34:	c3080423 	movwgt	r0, #33827	; 0x8423
    3d38:	03000006 	movweq	r0, #6
    3d3c:	005e0c23 	subseq	r0, lr, r3, lsr #24
    3d40:	23020000 	movwcs	r0, #8192	; 0x2000
    3d44:	60030006 	andvs	r0, r3, r6
    3d48:	03000007 	movweq	r0, #7
    3d4c:	00ad0224 	adceq	r0, sp, r4, lsr #4
    3d50:	05090000 	streq	r0, [r9, #-0]
    3d54:	00002501 	andeq	r2, r0, r1, lsl #10
    3d58:	01580700 	cmpeq	r8, r0, lsl #14
    3d5c:	00000255 	andeq	r0, r0, r5, asr r2
    3d60:	0006af0a 	andeq	sl, r6, sl, lsl #30
    3d64:	410a7200 	mrsmi	r7, R10_fiq
    3d68:	73000008 	movwvc	r0, #8
    3d6c:	00037c0a 	andeq	r7, r3, sl, lsl #24
    3d70:	500a7400 	andpl	r7, sl, r0, lsl #8
    3d74:	75000005 	strvc	r0, [r0, #-5]
    3d78:	00079a0a 	andeq	r9, r7, sl, lsl #20
    3d7c:	e10a7600 	tst	sl, r0, lsl #12
    3d80:	7b000007 	blvc	3da4 <__Stack_Size+0x2da4>
    3d84:	0007880a 	andeq	r8, r7, sl, lsl #16
    3d88:	520a7c00 	andpl	r7, sl, #0, 24
    3d8c:	7e000003 	cdpvc	0, 0, cr0, cr0, cr3, {0}
    3d90:	0007240a 	andeq	r2, r7, sl, lsl #8
    3d94:	2c0b7f00 	stccs	15, cr7, [fp], {-0}
    3d98:	00000005 	andeq	r0, r0, r5
    3d9c:	0005780b 	andeq	r7, r5, fp, lsl #16
    3da0:	8c0b0100 	stfhis	f0, [fp], {-0}
    3da4:	02000008 	andeq	r0, r0, #8
    3da8:	0006250b 	andeq	r2, r6, fp, lsl #10
    3dac:	ff0b0300 			; <UNDEFINED> instruction: 0xff0b0300
    3db0:	04000002 	streq	r0, [r0], #-2
    3db4:	00036c0b 	andeq	r6, r3, fp, lsl #24
    3db8:	140b0500 	strne	r0, [fp], #-1280	; 0xfffffb00
    3dbc:	06000003 	streq	r0, [r0], -r3
    3dc0:	0006e20b 	andeq	lr, r6, fp, lsl #4
    3dc4:	b10b0700 	tstlt	fp, r0, lsl #14
    3dc8:	08000004 	stmdaeq	r0, {r2}
    3dcc:	00082f0b 	andeq	r2, r8, fp, lsl #30
    3dd0:	5e0b0900 	vmlapl.f16	s0, s22, s0	; <UNPREDICTABLE>
    3dd4:	0a000005 	beq	3df0 <__Stack_Size+0x2df0>
    3dd8:	0005050b 	andeq	r0, r5, fp, lsl #10
    3ddc:	c50b0b00 	strgt	r0, [fp, #-2816]	; 0xfffff500
    3de0:	0c000002 	stceq	0, cr0, [r0], {2}
    3de4:	0005a10b 	andeq	sl, r5, fp, lsl #2
    3de8:	eb0b0d00 	bl	2c71f0 <__Stack_Size+0x2c61f0>
    3dec:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    3df0:	00080d0b 	andeq	r0, r8, fp, lsl #26
    3df4:	db0b0f00 	blle	2c79fc <__Stack_Size+0x2c69fc>
    3df8:	10000004 	andne	r0, r0, r4
    3dfc:	00029b0b 	andeq	r9, r2, fp, lsl #22
    3e00:	6a0b1100 	bvs	2c8208 <__Stack_Size+0x2c7208>
    3e04:	12000008 	andne	r0, r0, #8
    3e08:	00044f0b 	andeq	r4, r4, fp, lsl #30
    3e0c:	6b0b1300 	blvs	2c8a14 <__Stack_Size+0x2c7a14>
    3e10:	14000002 	strne	r0, [r0], #-2
    3e14:	00041f0b 	andeq	r1, r4, fp, lsl #30
    3e18:	8d0b1500 	cfstr32hi	mvfx1, [fp, #-0]
    3e1c:	16000002 	strne	r0, [r0], -r2
    3e20:	0007d40b 	andeq	sp, r7, fp, lsl #8
    3e24:	bc0b1700 	stclt	7, cr1, [fp], {-0}
    3e28:	18000003 	stmdane	r0, {r0, r1}
    3e2c:	0006040b 	andeq	r0, r6, fp, lsl #8
    3e30:	050b1900 	streq	r1, [fp, #-2304]	; 0xfffff700
    3e34:	1a000007 	bne	3e58 <__Stack_Size+0x2e58>
    3e38:	0006cb0b 	andeq	ip, r6, fp, lsl #22
    3e3c:	3f0b1b00 	svccc	0x000b1b00
    3e40:	1c000007 	stcne	0, cr0, [r0], {7}
    3e44:	0004fb0b 	andeq	pc, r4, fp, lsl #22
    3e48:	bb0b1d00 	bllt	2cb250 <__Stack_Size+0x2ca250>
    3e4c:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
    3e50:	0005c20b 	andeq	ip, r5, fp, lsl #4
    3e54:	170b1f00 	strne	r1, [fp, -r0, lsl #30]
    3e58:	20000007 	andcs	r0, r0, r7
    3e5c:	0004bc0b 	andeq	fp, r4, fp, lsl #24
    3e60:	ae0b2100 	adfgee	f2, f3, f0
    3e64:	22000002 	andcs	r0, r0, #2
    3e68:	0003d30b 	andeq	sp, r3, fp, lsl #6
    3e6c:	f20b2300 	vcgt.s8	d2, d11, d0
    3e70:	24000007 	strcs	r0, [r0], #-7
    3e74:	0006970b 	andeq	r9, r6, fp, lsl #14
    3e78:	760b2500 	strvc	r2, [fp], -r0, lsl #10
    3e7c:	26000004 	strcs	r0, [r0], -r4
    3e80:	0008800b 	andeq	r8, r8, fp
    3e84:	3a0b2700 	bcc	2cda8c <__Stack_Size+0x2cca8c>
    3e88:	28000003 	stmdacs	r0, {r0, r1}
    3e8c:	0006160b 	andeq	r1, r6, fp, lsl #12
    3e90:	1d0b2900 	vstrne.16	s4, [fp, #-0]	; <UNPREDICTABLE>
    3e94:	2a000005 	bcs	3eb0 <__Stack_Size+0x2eb0>
    3e98:	04630300 	strbteq	r0, [r3], #-768	; 0xfffffd00
    3e9c:	90070000 	andls	r0, r7, r0
    3ea0:	00010e03 	andeq	r0, r1, r3, lsl #28
    3ea4:	0e040c00 	cdpeq	12, 0, cr0, cr4, cr0, {0}
    3ea8:	39098405 	stmdbcc	r9, {r0, r2, sl, pc}
    3eac:	08000003 	stmdaeq	r0, {r0, r1}
    3eb0:	000003a1 	andeq	r0, r0, r1, lsr #7
    3eb4:	49118605 	ldmdbmi	r1, {r0, r2, r9, sl, pc}
    3eb8:	02000003 	andeq	r0, r0, #3
    3ebc:	33080023 	movwcc	r0, #32803	; 0x8023
    3ec0:	05000006 	streq	r0, [r0, #-6]
    3ec4:	034e1187 	movteq	r1, #57735	; 0xe187
    3ec8:	23020000 	movwcs	r0, #8192	; 0x2000
    3ecc:	07ed0820 	strbeq	r0, [sp, r0, lsr #16]!
    3ed0:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
    3ed4:	00034911 	andeq	r4, r3, r1, lsl r9
    3ed8:	80230300 	eorhi	r0, r3, r0, lsl #6
    3edc:	03ca0801 	biceq	r0, sl, #65536	; 0x10000
    3ee0:	89050000 	stmdbhi	r5, {}	; <UNPREDICTABLE>
    3ee4:	00034e11 	andeq	r4, r3, r1, lsl lr
    3ee8:	a0230300 	eorge	r0, r3, r0, lsl #6
    3eec:	08500801 	ldmdaeq	r0, {r0, fp}^
    3ef0:	8a050000 	bhi	143ef8 <__Stack_Size+0x142ef8>
    3ef4:	00034911 	andeq	r4, r3, r1, lsl r9
    3ef8:	80230300 	eorhi	r0, r3, r0, lsl #6
    3efc:	06470802 	strbeq	r0, [r7], -r2, lsl #16
    3f00:	8b050000 	blhi	143f08 <__Stack_Size+0x142f08>
    3f04:	00034e11 	andeq	r4, r3, r1, lsl lr
    3f08:	a0230300 	eorge	r0, r3, r0, lsl #6
    3f0c:	05970802 	ldreq	r0, [r7, #2050]	; 0x802
    3f10:	8c050000 	stchi	0, cr0, [r5], {-0}
    3f14:	00034911 	andeq	r4, r3, r1, lsl r9
    3f18:	80230300 	eorhi	r0, r3, r0, lsl #6
    3f1c:	06510803 	ldrbeq	r0, [r1], -r3, lsl #16
    3f20:	8d050000 	stchi	0, cr0, [r5, #-0]
    3f24:	00034e11 	andeq	r4, r3, r1, lsl lr
    3f28:	a0230300 	eorge	r0, r3, r0, lsl #6
    3f2c:	07fc0803 	ldrbeq	r0, [ip, r3, lsl #16]!
    3f30:	8e050000 	cdphi	0, 0, cr0, cr5, cr0, {0}
    3f34:	00034911 	andeq	r4, r3, r1, lsl r9
    3f38:	80230300 	eorhi	r0, r3, r0, lsl #6
    3f3c:	065b0804 	ldrbeq	r0, [fp], -r4, lsl #16
    3f40:	8f050000 	svchi	0x00050000
    3f44:	00035e11 	andeq	r5, r3, r1, lsl lr
    3f48:	a0230300 	eorge	r0, r3, r0, lsl #6
    3f4c:	50490d04 	subpl	r0, r9, r4, lsl #26
    3f50:	11900500 	orrsne	r0, r0, r0, lsl #10
    3f54:	0000037e 	andeq	r0, r0, lr, ror r3
    3f58:	06802303 	streq	r2, [r0], r3, lsl #6
    3f5c:	00066508 	andeq	r6, r6, r8, lsl #10
    3f60:	11910500 	orrsne	r0, r1, r0, lsl #10
    3f64:	00000383 	andeq	r0, r0, r3, lsl #7
    3f68:	07f02303 	ldrbeq	r2, [r0, r3, lsl #6]!
    3f6c:	00061108 	andeq	r1, r6, r8, lsl #2
    3f70:	11920500 	orrsne	r0, r2, r0, lsl #10
    3f74:	00000087 	andeq	r0, r0, r7, lsl #1
    3f78:	1c802303 	stcne	3, cr2, [r0], {3}
    3f7c:	00870e00 	addeq	r0, r7, r0, lsl #28
    3f80:	03490000 	movteq	r0, #36864	; 0x9000
    3f84:	a60f0000 	strge	r0, [pc], -r0
    3f88:	07000000 	streq	r0, [r0, -r0]
    3f8c:	03390400 	teqeq	r9, #0, 8
    3f90:	7b0e0000 	blvc	383f98 <__Stack_Size+0x382f98>
    3f94:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    3f98:	0f000003 	svceq	0x00000003
    3f9c:	000000a6 	andeq	r0, r0, r6, lsr #1
    3fa0:	7b0e0017 	blvc	384004 <__Stack_Size+0x383004>
    3fa4:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    3fa8:	0f000003 	svceq	0x00000003
    3fac:	000000a6 	andeq	r0, r0, r6, lsr #1
    3fb0:	4d0e0037 	stcmi	0, cr0, [lr, #-220]	; 0xffffff24
    3fb4:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    3fb8:	0f000003 	svceq	0x00000003
    3fbc:	000000a6 	andeq	r0, r0, r6, lsr #1
    3fc0:	6e0400ef 	cdpvs	0, 0, cr0, cr4, cr15, {7}
    3fc4:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    3fc8:	0000007b 	andeq	r0, r0, fp, ror r0
    3fcc:	00000394 	muleq	r0, r4, r3
    3fd0:	0000a610 	andeq	sl, r0, r0, lsl r6
    3fd4:	00028300 	andeq	r8, r2, r0, lsl #6
    3fd8:	0006f603 	andeq	pc, r6, r3, lsl #12
    3fdc:	04930500 	ldreq	r0, [r3], #1280	; 0x500
    3fe0:	00000261 	andeq	r0, r0, r1, ror #4
    3fe4:	00025311 	andeq	r5, r2, r1, lsl r3
    3fe8:	06ce0500 	strbeq	r0, [lr], r0, lsl #10
    3fec:	0000a115 	andeq	sl, r0, r5, lsl r1
    3ff0:	12010100 	andne	r0, r1, #0, 2
    3ff4:	0000020b 	andeq	r0, r0, fp, lsl #4
    3ff8:	7b114508 	blvc	455420 <__Stack_Size+0x454420>
    3ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    4000:	00520e01 	subseq	r0, r2, r1, lsl #28
    4004:	03cd0000 	biceq	r0, sp, #0
    4008:	a60f0000 	strge	r0, [pc], -r0
    400c:	0f000000 	svceq	0x00000000
    4010:	03bd0500 			; <UNDEFINED> instruction: 0x03bd0500
    4014:	50120000 	andspl	r0, r2, r0
    4018:	08000001 	stmdaeq	r0, {r0}
    401c:	03cd1746 	biceq	r1, sp, #18350080	; 0x1180000
    4020:	01010000 	mrseq	r0, (UNDEF: 1)
    4024:	0000520e 	andeq	r5, r0, lr, lsl #4
    4028:	0003f000 	andeq	pc, r3, r0
    402c:	00a60f00 	adceq	r0, r6, r0, lsl #30
    4030:	00070000 	andeq	r0, r7, r0
    4034:	0003e005 	andeq	lr, r3, r5
    4038:	02261200 	eoreq	r1, r6, #0, 4
    403c:	47080000 	strmi	r0, [r8, -r0]
    4040:	0003f017 	andeq	pc, r3, r7, lsl r0	; <UNPREDICTABLE>
    4044:	13010100 	movwne	r0, #4352	; 0x1100
    4048:	0179071c 	cmneq	r9, ip, lsl r7
    404c:	00047e09 	andeq	r7, r4, r9, lsl #28
    4050:	52431400 	subpl	r1, r3, #0, 8
    4054:	7b07004c 	blvc	1c418c <__Stack_Size+0x1c318c>
    4058:	00871101 	addeq	r1, r7, r1, lsl #2
    405c:	23020000 	movwcs	r0, #8192	; 0x2000
    4060:	52431400 	subpl	r1, r3, #0, 8
    4064:	7c070048 	stcvc	0, cr0, [r7], {72}	; 0x48
    4068:	00871101 	addeq	r1, r7, r1, lsl #2
    406c:	23020000 	movwcs	r0, #8192	; 0x2000
    4070:	44491404 	strbmi	r1, [r9], #-1028	; 0xfffffbfc
    4074:	7d070052 	stcvc	0, cr0, [r7, #-328]	; 0xfffffeb8
    4078:	00871101 	addeq	r1, r7, r1, lsl #2
    407c:	23020000 	movwcs	r0, #8192	; 0x2000
    4080:	444f1408 	strbmi	r1, [pc], #-1032	; 4088 <__Stack_Size+0x3088>
    4084:	7e070052 	mcrvc	0, 0, r0, cr7, cr2, {2}
    4088:	00871101 	addeq	r1, r7, r1, lsl #2
    408c:	23020000 	movwcs	r0, #8192	; 0x2000
    4090:	00b3150c 	adcseq	r1, r3, ip, lsl #10
    4094:	7f070000 	svcvc	0x00070000
    4098:	00871101 	addeq	r1, r7, r1, lsl #2
    409c:	23020000 	movwcs	r0, #8192	; 0x2000
    40a0:	52421410 	subpl	r1, r2, #16, 8	; 0x10000000
    40a4:	80070052 	andhi	r0, r7, r2, asr r0
    40a8:	00871101 	addeq	r1, r7, r1, lsl #2
    40ac:	23020000 	movwcs	r0, #8192	; 0x2000
    40b0:	02661514 	rsbeq	r1, r6, #20, 10	; 0x5000000
    40b4:	81070000 	mrshi	r0, (UNDEF: 7)
    40b8:	00871101 	addeq	r1, r7, r1, lsl #2
    40bc:	23020000 	movwcs	r0, #8192	; 0x2000
    40c0:	da160018 	ble	584128 <__Stack_Size+0x583128>
    40c4:	07000000 	streq	r0, [r0, -r0]
    40c8:	03030182 	movweq	r0, #12674	; 0x3182
    40cc:	13000004 	movwne	r0, #4
    40d0:	01bb0728 			; <UNDEFINED> instruction: 0x01bb0728
    40d4:	00053509 	andeq	r3, r5, r9, lsl #10
    40d8:	52431400 	subpl	r1, r3, #0, 8
    40dc:	01bd0700 			; <UNDEFINED> instruction: 0x01bd0700
    40e0:	00008711 	andeq	r8, r0, r1, lsl r7
    40e4:	00230200 	eoreq	r0, r3, r0, lsl #4
    40e8:	00000d15 	andeq	r0, r0, r5, lsl sp
    40ec:	01be0700 			; <UNDEFINED> instruction: 0x01be0700
    40f0:	00008711 	andeq	r8, r0, r1, lsl r7
    40f4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    40f8:	52494314 	subpl	r4, r9, #20, 6	; 0x50000000
    40fc:	01bf0700 			; <UNDEFINED> instruction: 0x01bf0700
    4100:	00008711 	andeq	r8, r0, r1, lsl r7
    4104:	08230200 	stmdaeq	r3!, {r9}
    4108:	0001b315 	andeq	fp, r1, r5, lsl r3
    410c:	01c00700 	biceq	r0, r0, r0, lsl #14
    4110:	00008711 	andeq	r8, r0, r1, lsl r7
    4114:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4118:	00019d15 	andeq	r9, r1, r5, lsl sp
    411c:	01c10700 	biceq	r0, r1, r0, lsl #14
    4120:	00008711 	andeq	r8, r0, r1, lsl r7
    4124:	10230200 	eorne	r0, r3, r0, lsl #4
    4128:	0000b815 	andeq	fp, r0, r5, lsl r8
    412c:	01c20700 	biceq	r0, r2, r0, lsl #14
    4130:	00008711 	andeq	r8, r0, r1, lsl r7
    4134:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4138:	00000015 	andeq	r0, r0, r5, lsl r0
    413c:	01c30700 	biceq	r0, r3, r0, lsl #14
    4140:	00008711 	andeq	r8, r0, r1, lsl r7
    4144:	18230200 	stmdane	r3!, {r9}
    4148:	0001ab15 	andeq	sl, r1, r5, lsl fp
    414c:	01c40700 	biceq	r0, r4, r0, lsl #14
    4150:	00008711 	andeq	r8, r0, r1, lsl r7
    4154:	1c230200 	sfmne	f0, 4, [r3], #-0
    4158:	00000815 	andeq	r0, r0, r5, lsl r8
    415c:	01c50700 	biceq	r0, r5, r0, lsl #14
    4160:	00008711 	andeq	r8, r0, r1, lsl r7
    4164:	20230200 	eorcs	r0, r3, r0, lsl #4
    4168:	52534314 	subspl	r4, r3, #20, 6	; 0x50000000
    416c:	01c60700 	biceq	r0, r6, r0, lsl #14
    4170:	00008711 	andeq	r8, r0, r1, lsl r7
    4174:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    4178:	023e1600 	eorseq	r1, lr, #0, 12
    417c:	c9070000 	stmdbgt	r7, {}	; <UNPREDICTABLE>
    4180:	048b0301 	streq	r0, [fp], #769	; 0x301
    4184:	1c130000 	ldcne	0, cr0, [r3], {-0}
    4188:	09022a07 	stmdbeq	r2, {r0, r1, r2, r9, fp, sp}
    418c:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    4190:	00525314 	subseq	r5, r2, r4, lsl r3
    4194:	11022c07 	tstne	r2, r7, lsl #24
    4198:	00000087 	andeq	r0, r0, r7, lsl #1
    419c:	14002302 	strne	r2, [r0], #-770	; 0xfffffcfe
    41a0:	07005244 	streq	r5, [r0, -r4, asr #4]
    41a4:	8711022d 	ldrhi	r0, [r1, -sp, lsr #4]
    41a8:	02000000 	andeq	r0, r0, #0
    41ac:	42140423 	andsmi	r0, r4, #587202560	; 0x23000000
    41b0:	07005252 	smlsdeq	r0, r2, r2, r5
    41b4:	8711022e 	ldrhi	r0, [r1, -lr, lsr #4]
    41b8:	02000000 	andeq	r0, r0, #0
    41bc:	43140823 	tstmi	r4, #2293760	; 0x230000
    41c0:	07003152 	smlsdeq	r0, r2, r1, r3
    41c4:	8711022f 	ldrhi	r0, [r1, -pc, lsr #4]
    41c8:	02000000 	andeq	r0, r0, #0
    41cc:	43140c23 	tstmi	r4, #8960	; 0x2300
    41d0:	07003252 	smlsdeq	r0, r2, r2, r3
    41d4:	87110230 			; <UNDEFINED> instruction: 0x87110230
    41d8:	02000000 	andeq	r0, r0, #0
    41dc:	43141023 	tstmi	r4, #35	; 0x23
    41e0:	07003352 	smlsdeq	r0, r2, r3, r3
    41e4:	87110231 			; <UNDEFINED> instruction: 0x87110231
    41e8:	02000000 	andeq	r0, r0, #0
    41ec:	b2151423 	andslt	r1, r5, #587202560	; 0x23000000
    41f0:	07000010 	smladeq	r0, r0, r0, r0
    41f4:	87110232 			; <UNDEFINED> instruction: 0x87110232
    41f8:	02000000 	andeq	r0, r0, #0
    41fc:	16001823 	strne	r1, [r0], -r3, lsr #16
    4200:	000010e5 	andeq	r1, r0, r5, ror #1
    4204:	03023307 	movweq	r3, #8967	; 0x2307
    4208:	00000542 	andeq	r0, r0, r2, asr #10
    420c:	39075413 	stmdbcc	r7, {r0, r1, r4, sl, ip, lr}
    4210:	07730902 	ldrbeq	r0, [r3, -r2, lsl #18]!
    4214:	90150000 	andsls	r0, r5, r0
    4218:	07000004 	streq	r0, [r0, -r4]
    421c:	6a11023b 	bvs	444b10 <__Stack_Size+0x443b10>
    4220:	02000000 	andeq	r0, r0, #0
    4224:	33150023 	tstcc	r5, #35	; 0x23
    4228:	07000006 	streq	r0, [r0, -r6]
    422c:	6a11023c 	bvs	444b24 <__Stack_Size+0x443b24>
    4230:	02000000 	andeq	r0, r0, #0
    4234:	c9150223 	ldmdbgt	r5, {r0, r1, r5, r9}
    4238:	07000004 	streq	r0, [r0, -r4]
    423c:	6a11023d 	bvs	444b38 <__Stack_Size+0x443b38>
    4240:	02000000 	andeq	r0, r0, #0
    4244:	3d150423 	cfldrscc	mvf0, [r5, #-140]	; 0xffffff74
    4248:	07000006 	streq	r0, [r0, -r6]
    424c:	6a11023e 	bvs	444b4c <__Stack_Size+0x443b4c>
    4250:	02000000 	andeq	r0, r0, #0
    4254:	18150623 	ldmdane	r5, {r0, r1, r5, r9, sl}
    4258:	07000005 	streq	r0, [r0, -r5]
    425c:	6a11023f 	bvs	444b60 <__Stack_Size+0x443b60>
    4260:	02000000 	andeq	r0, r0, #0
    4264:	47150823 	ldrmi	r0, [r5, -r3, lsr #16]
    4268:	07000006 	streq	r0, [r0, -r6]
    426c:	6a110240 	bvs	444b74 <__Stack_Size+0x443b74>
    4270:	02000000 	andeq	r0, r0, #0
    4274:	4b150a23 	blmi	546b08 <__Stack_Size+0x545b08>
    4278:	07000005 	streq	r0, [r0, -r5]
    427c:	6a110241 	bvs	444b88 <__Stack_Size+0x443b88>
    4280:	02000000 	andeq	r0, r0, #0
    4284:	51150c23 	tstpl	r5, r3, lsr #24
    4288:	07000006 	streq	r0, [r0, -r6]
    428c:	6a110242 	bvs	444b9c <__Stack_Size+0x443b9c>
    4290:	02000000 	andeq	r0, r0, #0
    4294:	9c150e23 	ldcls	14, cr0, [r5], {35}	; 0x23
    4298:	07000005 	streq	r0, [r0, -r5]
    429c:	6a110243 	bvs	444bb0 <__Stack_Size+0x443bb0>
    42a0:	02000000 	andeq	r0, r0, #0
    42a4:	5b151023 	blpl	548338 <__Stack_Size+0x547338>
    42a8:	07000006 	streq	r0, [r0, -r6]
    42ac:	6a110244 	bvs	444bc4 <__Stack_Size+0x443bc4>
    42b0:	02000000 	andeq	r0, r0, #0
    42b4:	2e151223 	cdpcs	2, 1, cr1, cr5, cr3, {1}
    42b8:	07000006 	streq	r0, [r0, -r6]
    42bc:	6a110245 	bvs	444bd8 <__Stack_Size+0x443bd8>
    42c0:	02000000 	andeq	r0, r0, #0
    42c4:	65151423 	ldrvs	r1, [r5, #-1059]	; 0xfffffbdd
    42c8:	07000006 	streq	r0, [r0, -r6]
    42cc:	6a110246 	bvs	444bec <__Stack_Size+0x443bec>
    42d0:	02000000 	andeq	r0, r0, #0
    42d4:	d8151623 	ldmdale	r5, {r0, r1, r5, r9, sl, ip}
    42d8:	07000006 	streq	r0, [r0, -r6]
    42dc:	6a110247 	bvs	444c00 <__Stack_Size+0x443c00>
    42e0:	02000000 	andeq	r0, r0, #0
    42e4:	6f151823 	svcvs	0x00151823
    42e8:	07000006 	streq	r0, [r0, -r6]
    42ec:	6a110248 	bvs	444c14 <__Stack_Size+0x443c14>
    42f0:	02000000 	andeq	r0, r0, #0
    42f4:	5b151a23 	blpl	54ab88 <__Stack_Size+0x549b88>
    42f8:	07000007 	streq	r0, [r0, -r7]
    42fc:	6a110249 	bvs	444c28 <__Stack_Size+0x443c28>
    4300:	02000000 	andeq	r0, r0, #0
    4304:	76151c23 	ldrvc	r1, [r5], -r3, lsr #24
    4308:	07000008 	streq	r0, [r0, -r8]
    430c:	8311024a 	tsthi	r1, #-1610612732	; 0xa0000004
    4310:	02000007 	andeq	r0, r0, #7
    4314:	00151e23 	andseq	r1, r5, r3, lsr #28
    4318:	07000007 	streq	r0, [r0, -r7]
    431c:	6a11024b 	bvs	444c50 <__Stack_Size+0x443c50>
    4320:	02000000 	andeq	r0, r0, #0
    4324:	79154023 	ldmdbvc	r5, {r0, r1, r5, lr}
    4328:	07000006 	streq	r0, [r0, -r6]
    432c:	6a11024c 	bvs	444c64 <__Stack_Size+0x443c64>
    4330:	02000000 	andeq	r0, r0, #0
    4334:	9c154223 	lfmls	f4, 4, [r5], {35}	; 0x23
    4338:	07000003 	streq	r0, [r0, -r3]
    433c:	6a11024d 	bvs	444c78 <__Stack_Size+0x443c78>
    4340:	02000000 	andeq	r0, r0, #0
    4344:	83154423 	tsthi	r5, #587202560	; 0x23000000
    4348:	07000006 	streq	r0, [r0, -r6]
    434c:	6a11024e 	bvs	444c8c <__Stack_Size+0x443c8c>
    4350:	02000000 	andeq	r0, r0, #0
    4354:	46144623 	ldrmi	r4, [r4], -r3, lsr #12
    4358:	0700524e 	streq	r5, [r0, -lr, asr #4]
    435c:	6a11024f 	bvs	444ca0 <__Stack_Size+0x443ca0>
    4360:	02000000 	andeq	r0, r0, #0
    4364:	8d154823 	ldchi	8, cr4, [r5, #-140]	; 0xffffff74
    4368:	07000006 	streq	r0, [r0, -r6]
    436c:	6a110250 	bvs	444cb4 <__Stack_Size+0x443cb4>
    4370:	02000000 	andeq	r0, r0, #0
    4374:	19154a23 	ldmdbne	r5, {r0, r1, r5, r9, fp, lr}
    4378:	07000004 	streq	r0, [r0, -r4]
    437c:	6a110251 	bvs	444cc8 <__Stack_Size+0x443cc8>
    4380:	02000000 	andeq	r0, r0, #0
    4384:	2d154c23 	ldccs	12, cr4, [r5, #-140]	; 0xffffff74
    4388:	07000004 	streq	r0, [r0, -r4]
    438c:	6a110252 	bvs	444cdc <__Stack_Size+0x443cdc>
    4390:	02000000 	andeq	r0, r0, #0
    4394:	20154e23 	andscs	r4, r5, r3, lsr #28
    4398:	07000008 	streq	r0, [r0, -r8]
    439c:	6a110253 	bvs	444cf0 <__Stack_Size+0x443cf0>
    43a0:	02000000 	andeq	r0, r0, #0
    43a4:	98155023 	ldmdals	r5, {r0, r1, r5, ip, lr}
    43a8:	07000008 	streq	r0, [r0, -r8]
    43ac:	6a110254 	bvs	444d04 <__Stack_Size+0x443d04>
    43b0:	02000000 	andeq	r0, r0, #0
    43b4:	0e005223 	cdpeq	2, 0, cr5, cr0, cr3, {1}
    43b8:	0000006a 	andeq	r0, r0, sl, rrx
    43bc:	00000783 	andeq	r0, r0, r3, lsl #15
    43c0:	0000a60f 	andeq	sl, r0, pc, lsl #12
    43c4:	04001000 	streq	r1, [r0], #-0
    43c8:	00000773 	andeq	r0, r0, r3, ror r7
    43cc:	00040d16 	andeq	r0, r4, r6, lsl sp
    43d0:	02550700 	subseq	r0, r5, #0, 14
    43d4:	0005c803 	andeq	ip, r5, r3, lsl #16
    43d8:	01020c00 	tsteq	r2, r0, lsl #24
    43dc:	cb124801 	blgt	4963e8 <__Stack_Size+0x4953e8>
    43e0:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    43e4:	01007473 	tsteq	r0, r3, ror r4
    43e8:	004d1449 	subeq	r1, sp, r9, asr #8
    43ec:	23020000 	movwcs	r0, #8192	; 0x2000
    43f0:	6e650d00 	cdpvs	13, 6, cr0, cr5, cr0, {0}
    43f4:	17490100 	strbne	r0, [r9, -r0, lsl #2]
    43f8:	0000004d 	andeq	r0, r0, sp, asr #32
    43fc:	0d012302 	stceq	3, cr2, [r1, #-8]
    4400:	00727261 	rsbseq	r7, r2, r1, ror #4
    4404:	e0144a01 	ands	r4, r4, r1, lsl #20
    4408:	02000007 	andeq	r0, r0, #7
    440c:	04000223 	streq	r0, [r0], #-547	; 0xfffffddd
    4410:	00000795 	muleq	r0, r5, r7
    4414:	00004d0e 	andeq	r4, r0, lr, lsl #26
    4418:	0007e000 	andeq	lr, r7, r0
    441c:	00a60f00 	adceq	r0, r6, r0, lsl #30
    4420:	00ff0000 	rscseq	r0, pc, r0
    4424:	0007d004 	andeq	sp, r7, r4
    4428:	11650300 	cmnne	r5, r0, lsl #6
    442c:	4b010000 	blmi	44434 <__Stack_Size+0x43434>
    4430:	0007cb02 	andeq	ip, r7, r2, lsl #22
    4434:	10a01700 	adcne	r1, r0, r0, lsl #14
    4438:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    443c:	0007e514 	andeq	lr, r7, r4, lsl r5
    4440:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    4444:	17200000 	strne	r0, [r0, -r0]!
    4448:	0000115c 	andeq	r1, r0, ip, asr r1
    444c:	e5149f01 	ldr	r9, [r4, #-3841]	; 0xfffff0ff
    4450:	05000007 	streq	r0, [r0, #-7]
    4454:	00015603 	andeq	r5, r1, r3, lsl #12
    4458:	00e71220 	rsceq	r1, r7, r0, lsr #4
    445c:	05040000 	streq	r0, [r4, #-0]
    4460:	0000871a 	andeq	r8, r0, sl, lsl r7
    4464:	18010100 	stmdane	r1, {r8}
    4468:	00001087 	andeq	r1, r0, r7, lsl #1
    446c:	081b0207 	ldmdaeq	fp, {r0, r1, r2, r9}
    4470:	0000086d 	andeq	r0, r0, sp, ror #16
    4474:	00106708 	andseq	r6, r0, r8, lsl #14
    4478:	0c1c0200 	lfmeq	f0, 4, [ip], {-0}
    447c:	0000007b 	andeq	r0, r0, fp, ror r0
    4480:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    4484:	00001189 	andeq	r1, r0, r9, lsl #3
    4488:	410b1d02 	tstmi	fp, r2, lsl #26
    448c:	02000000 	andeq	r0, r0, #0
    4490:	25080423 	strcs	r0, [r8, #-1059]	; 0xfffffbdd
    4494:	02000011 	andeq	r0, r0, #17
    4498:	00410b1e 	subeq	r0, r1, lr, lsl fp
    449c:	23020000 	movwcs	r0, #8192	; 0x2000
    44a0:	11530805 	cmpne	r3, r5, lsl #16
    44a4:	1f020000 	svcne	0x00020000
    44a8:	0000410b 	andeq	r4, r0, fp, lsl #2
    44ac:	06230200 	strteq	r0, [r3], -r0, lsl #4
    44b0:	08230400 	stmdaeq	r3!, {sl}
    44b4:	5f190000 	svcpl	0x00190000
    44b8:	02000010 	andeq	r0, r0, #16
    44bc:	086d2022 	stmdaeq	sp!, {r1, r5, sp}^
    44c0:	05010000 	streq	r0, [r1, #-0]
    44c4:	00000c03 	andeq	r0, r0, r3, lsl #24
    44c8:	117f1920 	cmnne	pc, r0, lsr #18
    44cc:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    44d0:	00086d20 	andeq	r6, r8, r0, lsr #26
    44d4:	03050100 	movweq	r0, #20736	; 0x5100
    44d8:	20000013 	andcs	r0, r0, r3, lsl r0
    44dc:	00113a19 	andseq	r3, r1, r9, lsl sl
    44e0:	0f320200 	svceq	0x00320200
    44e4:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    44e8:	58030501 	stmdapl	r3, {r0, r8, sl}
    44ec:	02200002 	eoreq	r0, r0, #2
    44f0:	018f0801 	orreq	r0, pc, r1, lsl #16
    44f4:	ab040000 	blge	1044fc <__Stack_Size+0x1034fc>
    44f8:	19000008 	stmdbne	r0, {r3}
    44fc:	0000107c 	andeq	r1, r0, ip, ror r0
    4500:	87133302 	ldrhi	r3, [r3, -r2, lsl #6]
    4504:	01000000 	mrseq	r0, (UNDEF: 0)
    4508:	025c0305 	subseq	r0, ip, #335544320	; 0x14000000
    450c:	a9172000 	ldmdbge	r7, {sp}
    4510:	02000010 	andeq	r0, r0, #16
    4514:	08ab0d9b 	stmiaeq	fp!, {r0, r1, r3, r4, r7, r8, sl, fp}
    4518:	03050000 	movweq	r0, #20480	; 0x5000
    451c:	20000260 	andcs	r0, r0, r0, ror #4
    4520:	1096011a 	addsne	r0, r6, sl, lsl r1
    4524:	e4020000 	str	r0, [r2], #-0
    4528:	10dc0106 	sbcsne	r0, ip, r6, lsl #2
    452c:	119c0800 	orrsne	r0, ip, r0, lsl #16
    4530:	156d0800 	strbne	r0, [sp, #-2048]!	; 0xfffff800
    4534:	44010000 	strmi	r0, [r1], #-0
    4538:	1b000009 	blne	4564 <__Stack_Size+0x3564>
    453c:	00667562 	rsbeq	r7, r6, r2, ror #10
    4540:	441ae402 	ldrmi	lr, [sl], #-1026	; 0xfffffbfe
    4544:	93000009 	movwls	r0, #9
    4548:	8d000015 	stchi	0, cr0, [r0, #-84]	; 0xffffffac
    454c:	1c000015 	stcne	0, cr0, [r0], {21}
    4550:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    4554:	9a23e402 	bls	8fd564 <__Stack_Size+0x8fc564>
    4558:	c7000000 	strgt	r0, [r0, -r0]
    455c:	c1000015 	tstgt	r0, r5, lsl r0
    4560:	1d000015 	stcne	0, cr0, [r0, #-84]	; 0xffffffac
    4564:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4568:	410be602 	tstmi	fp, r2, lsl #12
    456c:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    4570:	f3000015 	vqadd.u8	d0, d0, d5
    4574:	1e000015 	mcrne	0, 0, r0, cr0, cr5, {0}
    4578:	00000310 	andeq	r0, r0, r0, lsl r3
    457c:	0200691f 	andeq	r6, r0, #507904	; 0x7c000
    4580:	009a0bea 	addseq	r0, sl, sl, ror #23
    4584:	00000000 	andeq	r0, r0, r0
    4588:	00410420 	subeq	r0, r1, r0, lsr #8
    458c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4590:	00000c57 	andeq	r0, r0, r7, asr ip
    4594:	9c06ab02 			; <UNDEFINED> instruction: 0x9c06ab02
    4598:	34080011 	strcc	r0, [r8], #-17	; 0xffffffef
    459c:	23080013 	movwcs	r0, #32787	; 0x8013
    45a0:	01000016 	tsteq	r0, r6, lsl r0
    45a4:	00000ca5 	andeq	r0, r0, r5, lsr #25
    45a8:	66756222 	ldrbtvs	r6, [r5], -r2, lsr #4
    45ac:	15ad0200 	strne	r0, [sp, #512]!	; 0x200
    45b0:	00000ca5 	andeq	r0, r0, r5, lsr #25
    45b4:	a8910302 	ldmge	r1, {r1, r8, r9}
    45b8:	11d1237f 	bicsne	r2, r1, pc, ror r3
    45bc:	ae020000 	cdpge	0, 0, cr0, cr2, cr0, {0}
    45c0:	00009a07 	andeq	r9, r0, r7, lsl #20
    45c4:	00166f00 	andseq	r6, r6, r0, lsl #30
    45c8:	00166900 	andseq	r6, r6, r0, lsl #18
    45cc:	12e12400 	rscne	r2, r1, #0, 8
    45d0:	11ac0000 			; <UNDEFINED> instruction: 0x11ac0000
    45d4:	ac030800 	stcge	8, cr0, [r3], {-0}
    45d8:	b2080011 	andlt	r0, r8, #17
    45dc:	02080011 	andeq	r0, r8, #17
    45e0:	09b00ab0 	ldmibeq	r0!, {r4, r5, r7, r9, fp}
    45e4:	f4250000 	vld4.8	{d0-d3}, [r5], r0
    45e8:	9f000012 	svcls	0x00000012
    45ec:	9d000016 	stcls	0, cr0, [r0, #-88]	; 0xffffffa8
    45f0:	00000016 	andeq	r0, r0, r6, lsl r0
    45f4:	00132c24 	andseq	r2, r3, r4, lsr #24
    45f8:	0011ea00 	andseq	lr, r1, r0, lsl #20
    45fc:	11ea0108 	mvnne	r0, r8, lsl #2
    4600:	11f00800 	mvnsne	r0, r0, lsl #16
    4604:	b8020800 	stmdalt	r2, {fp}
    4608:	0009f109 	andeq	pc, r9, r9, lsl #2
    460c:	13522500 	cmpne	r2, #0, 10
    4610:	16b90000 	ldrtne	r0, [r9], r0
    4614:	16b70000 	ldrtne	r0, [r7], r0
    4618:	46250000 	strtmi	r0, [r5], -r0
    461c:	ce000013 	mcrgt	0, 0, r0, cr0, cr3, {0}
    4620:	cc000016 	stcgt	0, cr0, [r0], {22}
    4624:	25000016 	strcs	r0, [r0, #-22]	; 0xffffffea
    4628:	0000133a 	andeq	r1, r0, sl, lsr r3
    462c:	000016e3 	andeq	r1, r0, r3, ror #13
    4630:	000016e1 	andeq	r1, r0, r1, ror #13
    4634:	132c2600 			; <UNDEFINED> instruction: 0x132c2600
    4638:	12b00000 	adcsne	r0, r0, #0
    463c:	28010800 	stmdacs	r1, {fp}
    4640:	02000003 	andeq	r0, r0, #3
    4644:	0a3709bd 	beq	dc6d40 <__Stack_Size+0xdc5d40>
    4648:	52250000 	eorpl	r0, r5, #0
    464c:	fa000013 	blx	46a0 <__Stack_Size+0x36a0>
    4650:	f8000016 			; <UNDEFINED> instruction: 0xf8000016
    4654:	25000016 	strcs	r0, [r0, #-22]	; 0xffffffea
    4658:	00001346 	andeq	r1, r0, r6, asr #6
    465c:	0000170f 	andeq	r1, r0, pc, lsl #14
    4660:	0000170d 	andeq	r1, r0, sp, lsl #14
    4664:	00133a25 	andseq	r3, r3, r5, lsr #20
    4668:	00172400 	andseq	r2, r7, r0, lsl #8
    466c:	00172200 	andseq	r2, r7, r0, lsl #4
    4670:	11f42700 	mvnsne	r2, r0, lsl #14
    4674:	145c0800 	ldrbne	r0, [ip], #-2048	; 0xfffff800
    4678:	26000000 	strcs	r0, [r0], -r0
    467c:	00000e29 	andeq	r0, r0, r9, lsr #28
    4680:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
    4684:	00034002 	andeq	r4, r3, r2
    4688:	03c40200 	biceq	r0, r4, #0, 4
    468c:	00000c11 	andeq	r0, r0, r1, lsl ip
    4690:	000e3725 	andeq	r3, lr, r5, lsr #14
    4694:	00173d00 	andseq	r3, r7, r0, lsl #26
    4698:	00173900 	andseq	r3, r7, r0, lsl #18
    469c:	03401e00 	movteq	r1, #3584	; 0xe00
    46a0:	43280000 			; <UNDEFINED> instruction: 0x43280000
    46a4:	0200000e 	andeq	r0, r0, #14
    46a8:	50294891 	mlapl	r9, r1, r8, r4
    46ac:	6700000e 	strvs	r0, [r0, -lr]
    46b0:	5d000017 	stcpl	0, cr0, [r0, #-92]	; 0xffffffa4
    46b4:	24000017 	strcs	r0, [r0], #-23	; 0xffffffe9
    46b8:	00001301 	andeq	r1, r0, r1, lsl #6
    46bc:	08001208 	stmdaeq	r0, {r3, r9, ip}
    46c0:	00120801 	andseq	r0, r2, r1, lsl #16
    46c4:	00121008 	andseq	r1, r2, r8
    46c8:	25840208 	strcs	r0, [r4, #520]	; 0x208
    46cc:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
    46d0:	00131f25 	andseq	r1, r3, r5, lsr #30
    46d4:	0017ac00 	andseq	sl, r7, r0, lsl #24
    46d8:	0017a600 	andseq	sl, r7, r0, lsl #12
    46dc:	13132500 	tstne	r3, #0, 10
    46e0:	17db0000 	ldrbne	r0, [fp, r0]
    46e4:	17d90000 	ldrbne	r0, [r9, r0]
    46e8:	102a0000 	eorne	r0, sl, r0
    46ec:	6a080012 	bvs	20473c <__Stack_Size+0x20373c>
    46f0:	2b000014 	blcs	4748 <__Stack_Size+0x3748>
    46f4:	35015001 	strcc	r5, [r1, #-1]
    46f8:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    46fc:	00004891 	muleq	r0, r1, r8
    4700:	0012e124 	andseq	lr, r2, r4, lsr #2
    4704:	00122600 	andseq	r2, r2, r0, lsl #12
    4708:	12260108 	eorne	r0, r6, #8, 2
    470c:	12300800 	eorsne	r0, r0, #0, 16
    4710:	8e020800 	cdphi	8, 0, cr0, cr2, cr0, {0}
    4714:	000ae309 	andeq	lr, sl, r9, lsl #6
    4718:	12f42500 	rscsne	r2, r4, #0, 10
    471c:	17f10000 	ldrbne	r0, [r1, r0]!
    4720:	17ef0000 	strbne	r0, [pc, r0]!
    4724:	26000000 	strcs	r0, [r0], -r0
    4728:	00001301 	andeq	r1, r0, r1, lsl #6
    472c:	0800123a 	stmdaeq	r0, {r1, r3, r4, r5, r9, ip}
    4730:	00035801 	andeq	r5, r3, r1, lsl #16
    4734:	0e8f0200 	cdpeq	2, 8, cr0, cr15, cr0, {0}
    4738:	00000b23 	andeq	r0, r0, r3, lsr #22
    473c:	00131f25 	andseq	r1, r3, r5, lsr #30
    4740:	00180f00 	andseq	r0, r8, r0, lsl #30
    4744:	00180900 	andseq	r0, r8, r0, lsl #18
    4748:	13132500 	tstne	r3, #0, 10
    474c:	183e0000 	ldmdane	lr!, {}	; <UNPREDICTABLE>
    4750:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
    4754:	442a0000 	strtmi	r0, [sl], #-0
    4758:	6a080012 	bvs	2047a8 <__Stack_Size+0x2037a8>
    475c:	2b000014 	blcs	47b4 <__Stack_Size+0x37b4>
    4760:	91025101 	tstls	r2, r1, lsl #2
    4764:	24000048 	strcs	r0, [r0], #-72	; 0xffffffb8
    4768:	00001301 	andeq	r1, r0, r1, lsl #6
    476c:	080012ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, ip}
    4770:	0012ce01 	andseq	ip, r2, r1, lsl #28
    4774:	0012d608 	andseq	sp, r2, r8, lsl #12
    4778:	25880208 	strcs	r0, [r8, #520]	; 0x208
    477c:	00000b6c 	andeq	r0, r0, ip, ror #22
    4780:	00131f25 	andseq	r1, r3, r5, lsr #30
    4784:	00185700 	andseq	r5, r8, r0, lsl #14
    4788:	00185100 	andseq	r5, r8, r0, lsl #2
    478c:	13132500 	tstne	r3, #0, 10
    4790:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    4794:	18840000 	stmne	r4, {}	; <UNPREDICTABLE>
    4798:	d62a0000 	strtle	r0, [sl], -r0
    479c:	6a080012 	bvs	2047ec <__Stack_Size+0x2037ec>
    47a0:	2b000014 	blcs	47f8 <__Stack_Size+0x37f8>
    47a4:	33015001 	movwcc	r5, #4097	; 0x1001
    47a8:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    47ac:	00004891 	muleq	r0, r1, r8
    47b0:	0010222c 	andseq	r2, r0, ip, lsr #4
    47b4:	0012e200 	andseq	lr, r2, r0, lsl #4
    47b8:	03700208 	cmneq	r0, #8, 4	; 0x80000000
    47bc:	8a020000 	bhi	847c4 <__Stack_Size+0x837c4>
    47c0:	13012405 	movwne	r2, #5125	; 0x1405
    47c4:	12f40000 	rscsne	r0, r4, #0
    47c8:	f4010800 	vst2.8	{d0-d1}, [r1], r0
    47cc:	fc080012 	stc2	0, cr0, [r8], {18}
    47d0:	02080012 	andeq	r0, r8, #18
    47d4:	0bc60c96 	bleq	ff187a34 <BootRAM+0xe0f81d5>
    47d8:	1f250000 	svcne	0x00250000
    47dc:	a0000013 	andge	r0, r0, r3, lsl r0
    47e0:	9a000018 	bls	4848 <__Stack_Size+0x3848>
    47e4:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
    47e8:	00001313 	andeq	r1, r0, r3, lsl r3
    47ec:	000018cf 	andeq	r1, r0, pc, asr #17
    47f0:	000018cd 	andeq	r1, r0, sp, asr #17
    47f4:	0012fc2a 	andseq	pc, r2, sl, lsr #24
    47f8:	00146a08 	andseq	r6, r4, r8, lsl #20
    47fc:	50012b00 	andpl	r2, r1, r0, lsl #22
    4800:	012b3501 			; <UNDEFINED> instruction: 0x012b3501
    4804:	48910251 	ldmmi	r1, {r0, r4, r6, r9}
    4808:	562d0000 	strtpl	r0, [sp], -r0
    480c:	78080012 	stmdavc	r8, {r1, r4}
    4810:	e5000014 	str	r0, [r0, #-20]	; 0xffffffec
    4814:	2b00000b 	blcs	4848 <__Stack_Size+0x3848>
    4818:	31015001 	tstcc	r1, r1
    481c:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    4820:	012b4891 			; <UNDEFINED> instruction: 0x012b4891
    4824:	00750252 	rsbseq	r0, r5, r2, asr r2
    4828:	125e2d00 	subsne	r2, lr, #0, 26
    482c:	11640800 	cmnne	r4, r0, lsl #16
    4830:	0bff0000 	bleq	fffc4838 <BootRAM+0xef34fd9>
    4834:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    4838:	48910250 	ldmmi	r1, {r4, r6, r9}
    483c:	0251012b 	subseq	r0, r1, #-1073741814	; 0xc000000a
    4840:	2a000075 	bcs	4a1c <__Stack_Size+0x3a1c>
    4844:	08001304 	stmdaeq	r0, {r2, r8, r9, ip}
    4848:	000008dc 	ldrdeq	r0, [r0], -ip
    484c:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4850:	00004891 	muleq	r0, r1, r8
    4854:	10222e00 	eorne	r2, r2, r0, lsl #28
    4858:	12640000 	rsbne	r0, r4, #0
    485c:	64010800 	strvs	r0, [r1], #-2048	; 0xfffff800
    4860:	68080012 	stmdavs	r8, {r1, r4}
    4864:	02080012 	andeq	r0, r8, #18
    4868:	e02d09c8 	eor	r0, sp, r8, asr #19
    486c:	ad080011 	stcge	0, cr0, [r8, #-68]	; 0xffffffbc
    4870:	40000010 	andmi	r0, r0, r0, lsl r0
    4874:	2b00000c 	blcs	48ac <__Stack_Size+0x38ac>
    4878:	7d025001 	stcvc	0, cr5, [r2, #-4]
    487c:	51012b00 	tstpl	r1, r0, lsl #22
    4880:	00007502 	andeq	r7, r0, r2, lsl #10
    4884:	0011ea2d 	andseq	lr, r1, sp, lsr #20
    4888:	00147808 	andseq	r7, r4, r8, lsl #16
    488c:	000c6000 	andeq	r6, ip, r0
    4890:	50012b00 	andpl	r2, r1, r0, lsl #22
    4894:	2b007802 	blcs	228a4 <__Stack_Size+0x218a4>
    4898:	7d025101 	stfvcs	f5, [r2, #-4]
    489c:	52012b00 	andpl	r2, r1, #0, 22
    48a0:	00007502 	andeq	r7, r0, r2, lsl #10
    48a4:	00127c2d 	andseq	r7, r2, sp, lsr #24
    48a8:	000fa308 	andeq	sl, pc, r8, lsl #6
    48ac:	000c7400 	andeq	r7, ip, r0, lsl #8
    48b0:	50012b00 	andpl	r2, r1, r0, lsl #22
    48b4:	00007002 	andeq	r7, r0, r2
    48b8:	0012b02d 	andseq	fp, r2, sp, lsr #32
    48bc:	0010ad08 	andseq	sl, r0, r8, lsl #26
    48c0:	000c8e00 	andeq	r8, ip, r0, lsl #28
    48c4:	50012b00 	andpl	r2, r1, r0, lsl #22
    48c8:	2b007d02 	blcs	23cd8 <__Stack_Size+0x22cd8>
    48cc:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    48d0:	c02a0000 	eorgt	r0, sl, r0
    48d4:	ad080012 	stcge	0, cr0, [r8, #-72]	; 0xffffffb8
    48d8:	2b000010 	blcs	4920 <__Stack_Size+0x3920>
    48dc:	7d025001 	stcvc	0, cr5, [r2, #-4]
    48e0:	51012b00 	tstpl	r1, r0, lsl #22
    48e4:	00007502 	andeq	r7, r0, r2, lsl #10
    48e8:	00410e00 	subeq	r0, r1, r0, lsl #28
    48ec:	0cb50000 	ldceq	0, cr0, [r5]
    48f0:	a60f0000 	strge	r0, [pc], -r0
    48f4:	1f000000 	svcne	0x00000000
    48f8:	27012100 	strcs	r2, [r1, -r0, lsl #2]
    48fc:	0200000f 	andeq	r0, r0, #15
    4900:	101c069d 	mulsne	ip, sp, r6
    4904:	10dc0800 	sbcsne	r0, ip, r0, lsl #16
    4908:	18e30800 	stmiane	r3!, {fp}^
    490c:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    4910:	2f00000e 	svccs	0x0000000e
    4914:	00000ce1 	andeq	r0, r0, r1, ror #25
    4918:	0001c930 	andeq	ip, r1, r0, lsr r9
    491c:	039e0200 	orrseq	r0, lr, #0, 4
    4920:	0000007b 	andeq	r0, r0, fp, ror r0
    4924:	02b83100 	adcseq	r3, r8, #0, 2
    4928:	0cff0000 	ldcleq	0, cr0, [pc]	; 4930 <__Stack_Size+0x3930>
    492c:	c9230000 	stmdbgt	r3!, {}	; <UNPREDICTABLE>
    4930:	02000001 	andeq	r0, r0, #1
    4934:	007b039e 			; <UNDEFINED> instruction: 0x007b039e
    4938:	19070000 	stmdbne	r7, {}	; <UNPREDICTABLE>
    493c:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
    4940:	2f000000 	svccs	0x00000000
    4944:	00000d11 	andeq	r0, r0, r1, lsl sp
    4948:	0001c930 	andeq	ip, r1, r0, lsr r9
    494c:	039e0200 	orrseq	r0, lr, #0, 4
    4950:	0000007b 	andeq	r0, r0, fp, ror r0
    4954:	02d83100 	sbcseq	r3, r8, #0, 2
    4958:	0d2f0000 	stceq	0, cr0, [pc, #-0]	; 4960 <__Stack_Size+0x3960>
    495c:	c9230000 	stmdbgt	r3!, {}	; <UNPREDICTABLE>
    4960:	02000001 	andeq	r0, r0, #1
    4964:	007b039e 			; <UNDEFINED> instruction: 0x007b039e
    4968:	192c0000 	stmdbne	ip!, {}	; <UNPREDICTABLE>
    496c:	19260000 	stmdbne	r6!, {}	; <UNPREDICTABLE>
    4970:	26000000 	strcs	r0, [r0], -r0
    4974:	00001365 	andeq	r1, r0, r5, ror #6
    4978:	0800107a 	stmdaeq	r0, {r1, r3, r4, r5, r6, ip}
    497c:	0002f001 	andeq	pc, r2, r1
    4980:	039e0200 	orrseq	r0, lr, #0, 4
    4984:	00000d52 	andeq	r0, r0, r2, asr sp
    4988:	00137425 	andseq	r7, r3, r5, lsr #8
    498c:	00195c00 	andseq	r5, r9, r0, lsl #24
    4990:	00195a00 	andseq	r5, r9, r0, lsl #20
    4994:	862d0000 	strthi	r0, [sp], -r0
    4998:	86080010 			; <UNDEFINED> instruction: 0x86080010
    499c:	76000014 			; <UNDEFINED> instruction: 0x76000014
    49a0:	2b00000d 	blcs	49dc <__Stack_Size+0x39dc>
    49a4:	09025001 	stmdbeq	r2, {r0, ip, lr}
    49a8:	51012b84 	smlabbpl	r1, r4, fp, r2
    49ac:	012b3301 			; <UNDEFINED> instruction: 0x012b3301
    49b0:	2b380152 	blcs	e04f00 <__Stack_Size+0xe03f00>
    49b4:	74025301 	strvc	r5, [r2], #-769	; 0xfffffcff
    49b8:	922d0000 	eorls	r0, sp, #0
    49bc:	86080010 			; <UNDEFINED> instruction: 0x86080010
    49c0:	9b000014 	blls	4a18 <__Stack_Size+0x3a18>
    49c4:	2b00000d 	blcs	4a00 <__Stack_Size+0x3a00>
    49c8:	09025001 	stmdbeq	r2, {r0, ip, lr}
    49cc:	51012b81 	smlabbpl	r1, r1, fp, r2
    49d0:	012b3201 			; <UNDEFINED> instruction: 0x012b3201
    49d4:	00760252 	rsbseq	r0, r6, r2, asr r2
    49d8:	0253012b 	subseq	r0, r3, #-1073741814	; 0xc000000a
    49dc:	2d000074 	stccs	0, cr0, [r0, #-464]	; 0xfffffe30
    49e0:	0800109e 	stmdaeq	r0, {r1, r2, r3, r4, r7, ip}
    49e4:	00001486 	andeq	r1, r0, r6, lsl #9
    49e8:	00000dbf 			; <UNDEFINED> instruction: 0x00000dbf
    49ec:	0150012b 	cmpeq	r0, fp, lsr #2
    49f0:	51012b31 	tstpl	r1, r1, lsr fp
    49f4:	012b3201 			; <UNDEFINED> instruction: 0x012b3201
    49f8:	00760252 	rsbseq	r0, r6, r2, asr r2
    49fc:	0253012b 	subseq	r0, r3, #-1073741814	; 0xc000000a
    4a00:	2d000074 	stccs	0, cr0, [r0, #-464]	; 0xfffffe30
    4a04:	080010aa 	stmdaeq	r0, {r1, r3, r5, r7, ip}
    4a08:	00001486 	andeq	r1, r0, r6, lsl #9
    4a0c:	00000de3 	andeq	r0, r0, r3, ror #27
    4a10:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4a14:	012b8509 			; <UNDEFINED> instruction: 0x012b8509
    4a18:	2b330151 	blcs	cc4f64 <__Stack_Size+0xcc3f64>
    4a1c:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    4a20:	0253012b 	subseq	r0, r3, #-1073741814	; 0xc000000a
    4a24:	2d000074 	stccs	0, cr0, [r0, #-464]	; 0xfffffe30
    4a28:	080010b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, ip}
    4a2c:	00001486 	andeq	r1, r0, r6, lsl #9
    4a30:	00000e08 	andeq	r0, r0, r8, lsl #28
    4a34:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4a38:	012b8209 			; <UNDEFINED> instruction: 0x012b8209
    4a3c:	2b320151 	blcs	c84f88 <__Stack_Size+0xc83f88>
    4a40:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4a44:	53012b00 	movwpl	r2, #6912	; 0x1b00
    4a48:	00007402 	andeq	r7, r0, r2, lsl #8
    4a4c:	0010c22a 	andseq	ip, r0, sl, lsr #4
    4a50:	00148608 	andseq	r8, r4, r8, lsl #12
    4a54:	50012b00 	andpl	r2, r1, r0, lsl #22
    4a58:	012b3201 			; <UNDEFINED> instruction: 0x012b3201
    4a5c:	2b320151 	blcs	c84fa8 <__Stack_Size+0xc83fa8>
    4a60:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4a64:	53012b00 	movwpl	r2, #6912	; 0x1b00
    4a68:	00007402 	andeq	r7, r0, r2, lsl #8
    4a6c:	10f33200 	rscsne	r3, r3, r0, lsl #4
    4a70:	7e020000 	cdpvc	0, 0, cr0, cr2, cr0, {0}
    4a74:	5d01010d 	stfpls	f0, [r1, #-52]	; 0xffffffcc
    4a78:	3300000e 	movwcc	r0, #14
    4a7c:	00000731 	andeq	r0, r0, r1, lsr r7
    4a80:	411d7e02 	tstmi	sp, r2, lsl #28
    4a84:	34000000 	strcc	r0, [r0], #-0
    4a88:	00667562 	rsbeq	r7, r6, r2, ror #10
    4a8c:	a5157f02 	ldrge	r7, [r5, #-3842]	; 0xfffff0fe
    4a90:	0200000c 	andeq	r0, r0, #12
    4a94:	0011d130 	andseq	sp, r1, r0, lsr r1
    4a98:	07800200 	streq	r0, [r0, r0, lsl #4]
    4a9c:	0000009a 	muleq	r0, sl, r0
    4aa0:	f4013500 	vst3.8	{d3,d5,d7}, [r1], r0
    4aa4:	0200000a 	andeq	r0, r0, #10
    4aa8:	ab01065e 	blge	46428 <__Stack_Size+0x45428>
    4aac:	90000008 	andls	r0, r0, r8
    4ab0:	1c08000f 	stcne	0, cr0, [r8], {15}
    4ab4:	71080010 	tstvc	r8, r0, lsl r0
    4ab8:	01000019 	tsteq	r0, r9, lsl r0
    4abc:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    4ac0:	7165721b 	cmnvc	r5, fp, lsl r2
    4ac4:	285e0200 	ldmdacs	lr, {r9}^
    4ac8:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    4acc:	000019a1 	andeq	r1, r0, r1, lsr #19
    4ad0:	00001991 	muleq	r0, r1, r9
    4ad4:	000d7f1c 	andeq	r7, sp, ip, lsl pc
    4ad8:	365e0200 	ldrbcc	r0, [lr], -r0, lsl #4
    4adc:	0000005e 	andeq	r0, r0, lr, asr r0
    4ae0:	00001a1b 	andeq	r1, r0, fp, lsl sl
    4ae4:	00001a0d 	andeq	r1, r0, sp, lsl #20
    4ae8:	0007371c 	andeq	r3, r7, ip, lsl r7
    4aec:	475e0200 	ldrbmi	r0, [lr, -r0, lsl #4]
    4af0:	0000005e 	andeq	r0, r0, lr, asr r0
    4af4:	00001a87 	andeq	r1, r0, r7, lsl #21
    4af8:	00001a79 	andeq	r1, r0, r9, ror sl
    4afc:	00130124 	andseq	r0, r3, r4, lsr #2
    4b00:	000fae00 	andeq	sl, pc, r0, lsl #28
    4b04:	0fae0108 	svceq	0x00ae0108
    4b08:	0fb60800 	svceq	0x00b60800
    4b0c:	63020800 	movwvs	r0, #10240	; 0x2800
    4b10:	000f0509 	andeq	r0, pc, r9, lsl #10
    4b14:	131f2500 	tstne	pc, #0, 10
    4b18:	1ae70000 	bne	ff9c4b20 <BootRAM+0xe9352c1>
    4b1c:	1ae50000 	bne	ff944b24 <BootRAM+0xe8b52c5>
    4b20:	13250000 			; <UNDEFINED> instruction: 0x13250000
    4b24:	01000013 	tsteq	r0, r3, lsl r0
    4b28:	ff00001b 			; <UNDEFINED> instruction: 0xff00001b
    4b2c:	2a00001a 	bcs	4b9c <__Stack_Size+0x3b9c>
    4b30:	08000fb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, fp}
    4b34:	0000146a 	andeq	r1, r0, sl, ror #8
    4b38:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4b3c:	012b0074 			; <UNDEFINED> instruction: 0x012b0074
    4b40:	0c030551 	cfstr32eq	mvfx0, [r3], {81}	; 0x51
    4b44:	00200000 	eoreq	r0, r0, r0
    4b48:	13012400 	movwne	r2, #5120	; 0x1400
    4b4c:	0fcc0000 	svceq	0x00cc0000
    4b50:	cc010800 	stcgt	8, cr0, [r1], {-0}
    4b54:	d608000f 	strle	r0, [r8], -pc
    4b58:	0208000f 	andeq	r0, r8, #15
    4b5c:	0f4e0969 	svceq	0x004e0969
    4b60:	1f250000 	svcne	0x00250000
    4b64:	17000013 	smladne	r0, r3, r0, r0
    4b68:	1500001b 	strne	r0, [r0, #-27]	; 0xffffffe5
    4b6c:	2500001b 	strcs	r0, [r0, #-27]	; 0xffffffe5
    4b70:	00001313 	andeq	r1, r0, r3, lsl r3
    4b74:	00001b31 	andeq	r1, r0, r1, lsr fp
    4b78:	00001b2f 	andeq	r1, r0, pc, lsr #22
    4b7c:	000fd62a 	andeq	sp, pc, sl, lsr #12
    4b80:	00146a08 	andseq	r6, r4, r8, lsl #20
    4b84:	50012b00 	andpl	r2, r1, r0, lsl #22
    4b88:	012b3101 			; <UNDEFINED> instruction: 0x012b3101
    4b8c:	07750251 			; <UNDEFINED> instruction: 0x07750251
    4b90:	222e0000 	eorcs	r0, lr, #0
    4b94:	e6000010 			; <UNDEFINED> instruction: 0xe6000010
    4b98:	0208000f 	andeq	r0, r8, #15
    4b9c:	08000fe6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, sl, fp}
    4ba0:	08000fea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, sl, fp}
    4ba4:	2e0b6c02 	cdpcs	12, 0, cr6, cr11, cr2, {0}
    4ba8:	00001022 	andeq	r1, r0, r2, lsr #32
    4bac:	0800100a 	stmdaeq	r0, {r1, r3, ip}
    4bb0:	00100a02 	andseq	r0, r0, r2, lsl #20
    4bb4:	00100c08 	andseq	r0, r0, r8, lsl #24
    4bb8:	0b700208 	bleq	1c053e0 <__Stack_Size+0x1c043e0>
    4bbc:	000fc62d 	andeq	ip, pc, sp, lsr #12
    4bc0:	000fa308 	andeq	sl, pc, r8, lsl #6
    4bc4:	000f8c00 	andeq	r8, pc, r0, lsl #24
    4bc8:	50012b00 	andpl	r2, r1, r0, lsl #22
    4bcc:	00007002 	andeq	r7, r0, r2
    4bd0:	00100a2a 	andseq	r0, r0, sl, lsr #20
    4bd4:	000fa308 	andeq	sl, pc, r8, lsl #6
    4bd8:	50012b00 	andpl	r2, r1, r0, lsl #22
    4bdc:	00007002 	andeq	r7, r0, r2
    4be0:	02042000 	andeq	r2, r4, #0
    4be4:	36000001 	strcc	r0, [r0], -r1
    4be8:	00111101 	andseq	r1, r1, r1, lsl #2
    4bec:	064b0200 	strbeq	r0, [fp], -r0, lsl #4
    4bf0:	0fbf0101 	svceq	0x00bf0101
    4bf4:	63370000 	teqvs	r7, #0
    4bf8:	02006766 	andeq	r6, r0, #26738688	; 0x1980000
    4bfc:	0fbf304b 	svceq	0x00bf304b
    4c00:	20000000 	andcs	r0, r0, r0
    4c04:	00086d04 	andeq	r6, r8, r4, lsl #26
    4c08:	2c013800 	stccs	8, cr3, [r1], {-0}
    4c0c:	0200000b 	andeq	r0, r0, #11
    4c10:	ab01063a 	blge	46500 <__Stack_Size+0x45500>
    4c14:	ec000008 	stc	0, cr0, [r0], {8}
    4c18:	2808000e 	stmdacs	r8, {r1, r2, r3}
    4c1c:	0208000f 	andeq	r0, r8, #15
    4c20:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    4c24:	1b000010 	blne	4c6c <__Stack_Size+0x3c6c>
    4c28:	00716572 	rsbseq	r6, r1, r2, ror r5
    4c2c:	9d273a02 	vstmdbls	r7!, {s6-s7}
    4c30:	4900000f 	stmdbmi	r0, {r0, r1, r2, r3}
    4c34:	4500001b 	strmi	r0, [r0, #-27]	; 0xffffffe5
    4c38:	3900001b 	stmdbcc	r0, {r0, r1, r3, r4}
    4c3c:	000008f6 	strdeq	r0, [r0], -r6
    4c40:	14333a02 	ldrtne	r3, [r3], #-2562	; 0xfffff5fe
    4c44:	01000010 	tsteq	r0, r0, lsl r0
    4c48:	11d13951 	bicsne	r3, r1, r1, asr r9
    4c4c:	3a020000 	bcc	84c54 <__Stack_Size+0x83c54>
    4c50:	00101c43 	andseq	r1, r0, r3, asr #24
    4c54:	00520100 	subseq	r0, r2, r0, lsl #2
    4c58:	101a0420 	andsne	r0, sl, r0, lsr #8
    4c5c:	043a0000 	ldrteq	r0, [sl], #-0
    4c60:	005e0420 	subseq	r0, lr, r0, lsr #8
    4c64:	013b0000 	teqeq	fp, r0
    4c68:	00000b7c 	andeq	r0, r0, ip, ror fp
    4c6c:	7b110604 	blvc	446484 <__Stack_Size+0x445484>
    4c70:	03000000 	movweq	r0, #0
    4c74:	1106011a 	tstne	r6, sl, lsl r1
    4c78:	ba010000 	blt	44c80 <__Stack_Size+0x43c80>
    4c7c:	0e940106 	fmleqs	f0, f4, f6
    4c80:	0eec0800 	cdpeq	8, 14, cr0, cr12, cr0, {0}
    4c84:	1b6a0800 	blne	1a86c8c <__Stack_Size+0x1a85c8c>
    4c88:	a7010000 	strge	r0, [r1, -r0]
    4c8c:	1b000010 	blne	4cd4 <__Stack_Size+0x3cd4>
    4c90:	00727473 	rsbseq	r7, r2, r3, ror r4
    4c94:	a717ba01 	ldrge	fp, [r7, -r1, lsl #20]
    4c98:	8e000010 	mcrhi	0, 0, r0, cr0, cr0, {0}
    4c9c:	8a00001b 	bhi	4d10 <__Stack_Size+0x3d10>
    4ca0:	1b00001b 	blne	4d14 <__Stack_Size+0x3d14>
    4ca4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    4ca8:	4124ba01 			; <UNDEFINED> instruction: 0x4124ba01
    4cac:	b2000000 	andlt	r0, r0, #0
    4cb0:	ac00001b 	stcge	0, cr0, [r0], {27}
    4cb4:	2600001b 			; <UNDEFINED> instruction: 0x2600001b
    4cb8:	000012e1 	andeq	r1, r0, r1, ror #5
    4cbc:	08000ec0 	stmdaeq	r0, {r6, r7, r9, sl, fp}
    4cc0:	00028801 	andeq	r8, r2, r1, lsl #16
    4cc4:	0bbc0100 	bleq	fef050cc <BootRAM+0xde7586d>
    4cc8:	00001096 	muleq	r0, r6, r0
    4ccc:	0012f425 	andseq	pc, r2, r5, lsr #8
    4cd0:	001be000 	andseq	lr, fp, r0
    4cd4:	001bde00 	andseq	sp, fp, r0, lsl #28
    4cd8:	d22a0000 	eorle	r0, sl, #0
    4cdc:	7708000e 	strvc	r0, [r8, -lr]
    4ce0:	2b000012 	blcs	4d30 <__Stack_Size+0x3d30>
    4ce4:	77025001 	strvc	r5, [r2, -r1]
    4ce8:	20000000 	andcs	r0, r0, r0
    4cec:	0008ab04 	andeq	sl, r8, r4, lsl #22
    4cf0:	1a011a00 	bne	4b4f8 <__Stack_Size+0x4a4f8>
    4cf4:	01000011 	tsteq	r0, r1, lsl r0
    4cf8:	680106b3 	stmdavs	r1, {r0, r1, r4, r5, r7, r9, sl}
    4cfc:	9408000e 	strls	r0, [r8], #-14
    4d00:	f808000e 			; <UNDEFINED> instruction: 0xf808000e
    4d04:	0100001b 	tsteq	r0, fp, lsl r0
    4d08:	00001124 	andeq	r1, r0, r4, lsr #2
    4d0c:	0008f61c 	andeq	pc, r8, ip, lsl r6	; <UNPREDICTABLE>
    4d10:	1ab30100 	bne	fecc5118 <BootRAM+0xdc358b9>
    4d14:	00000944 	andeq	r0, r0, r4, asr #18
    4d18:	00001c1e 	andeq	r1, r0, lr, lsl ip
    4d1c:	00001c18 	andeq	r1, r0, r8, lsl ip
    4d20:	6e656c1b 	mcrvs	12, 3, r6, cr5, cr11, {0}
    4d24:	28b30100 	ldmcs	r3!, {r8}
    4d28:	00000041 	andeq	r0, r0, r1, asr #32
    4d2c:	00001c4b 	andeq	r1, r0, fp, asr #24
    4d30:	00001c49 	andeq	r1, r0, r9, asr #24
    4d34:	0012e126 	andseq	lr, r2, r6, lsr #2
    4d38:	000e7600 	andeq	r7, lr, r0, lsl #12
    4d3c:	02700108 	rsbseq	r0, r0, #8, 2
    4d40:	b5010000 	strlt	r0, [r1, #-0]
    4d44:	0011130b 	andseq	r1, r1, fp, lsl #6
    4d48:	12f42500 	rscsne	r2, r4, #0, 10
    4d4c:	1c600000 	stclne	0, cr0, [r0], #-0
    4d50:	1c5e0000 	mrane	r0, lr, acc0
    4d54:	2a000000 	bcs	4d5c <__Stack_Size+0x3d5c>
    4d58:	08000e88 	stmdaeq	r0, {r3, r7, r9, sl, fp}
    4d5c:	00001277 	andeq	r1, r0, r7, ror r2
    4d60:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4d64:	00000075 	andeq	r0, r0, r5, ror r0
    4d68:	10fb011a 	rscsne	r0, fp, sl, lsl r1
    4d6c:	af010000 	svcge	0x00010000
    4d70:	0e400106 	dvfeqs	f0, f0, f6
    4d74:	0e680800 	cdpeq	8, 6, cr0, cr8, cr0, {0}
    4d78:	1c780800 	ldclne	8, cr0, [r8], #-0
    4d7c:	64010000 	strvs	r0, [r1], #-0
    4d80:	1b000011 	blne	4dcc <__Stack_Size+0x3dcc>
    4d84:	00727473 	rsbseq	r7, r2, r3, ror r4
    4d88:	a717af01 	ldrge	sl, [r7, -r1, lsl #30]
    4d8c:	a0000010 	andge	r0, r0, r0, lsl r0
    4d90:	9800001c 	stmdals	r0, {r2, r3, r4}
    4d94:	2a00001c 	bcs	4e0c <__Stack_Size+0x3e0c>
    4d98:	08000e56 	stmdaeq	r0, {r1, r2, r4, r6, r9, sl, fp}
    4d9c:	00001249 	andeq	r1, r0, r9, asr #4
    4da0:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4da4:	00000070 	andeq	r0, r0, r0, ror r0
    4da8:	1070011a 	rsbsne	r0, r0, sl, lsl r1
    4dac:	ab010000 	blge	44db4 <__Stack_Size+0x43db4>
    4db0:	0e140106 	mufeqs	f0, f4, f6
    4db4:	0e400800 	cdpeq	8, 4, cr0, cr0, cr0, {0}
    4db8:	1cd80800 	ldclne	8, cr0, [r8], {0}
    4dbc:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    4dc0:	1c000011 	stcne	0, cr0, [r0], {17}
    4dc4:	000008f6 	strdeq	r0, [r0], -r6
    4dc8:	441bab01 	ldrmi	sl, [fp], #-2817	; 0xfffff4ff
    4dcc:	fe000009 	cdp2	0, 0, cr0, cr0, cr9, {0}
    4dd0:	f800001c 			; <UNDEFINED> instruction: 0xf800001c
    4dd4:	1b00001c 	blne	4e4c <__Stack_Size+0x3e4c>
    4dd8:	006e656c 	rsbeq	r6, lr, ip, ror #10
    4ddc:	4129ab01 			; <UNDEFINED> instruction: 0x4129ab01
    4de0:	2b000000 	blcs	4de8 <__Stack_Size+0x3de8>
    4de4:	2900001d 	stmdbcs	r0, {r0, r2, r3, r4}
    4de8:	2a00001d 	bcs	4e64 <__Stack_Size+0x3e64>
    4dec:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
    4df0:	00001249 	andeq	r1, r0, r9, asr #4
    4df4:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4df8:	012b0070 			; <UNDEFINED> instruction: 0x012b0070
    4dfc:	00710251 	rsbseq	r0, r1, r1, asr r2
    4e00:	011a0000 	tsteq	sl, r0
    4e04:	000010d3 	ldrdeq	r1, [r0], -r3
    4e08:	0106a101 	tsteq	r6, r1, lsl #2
    4e0c:	08000dca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, fp}
    4e10:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
    4e14:	00001d3e 	andeq	r1, r0, lr, lsr sp
    4e18:	00124901 	andseq	r4, r2, r1, lsl #18
    4e1c:	02583100 	subseq	r3, r8, #0, 2
    4e20:	120e0000 	andne	r0, lr, #0
    4e24:	c9230000 	stmdbgt	r3!, {}	; <UNPREDICTABLE>
    4e28:	01000001 	tsteq	r0, r1
    4e2c:	00410da3 	subeq	r0, r1, r3, lsr #27
    4e30:	1d780000 	ldclne	0, cr0, [r8, #-0]
    4e34:	1d760000 	ldclne	0, cr0, [r6, #-0]
    4e38:	e23c0000 	eors	r0, ip, #0
    4e3c:	0108000d 	tsteq	r8, sp
    4e40:	00001249 	andeq	r1, r0, r9, asr #4
    4e44:	0250012b 	subseq	r0, r0, #-1073741814	; 0xc000000a
    4e48:	012b0070 			; <UNDEFINED> instruction: 0x012b0070
    4e4c:	00710251 	rsbseq	r0, r1, r1, asr r2
    4e50:	e1240000 			; <UNDEFINED> instruction: 0xe1240000
    4e54:	e8000012 	stmda	r0, {r1, r4}
    4e58:	0108000d 	tsteq	r8, sp
    4e5c:	08000de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp}
    4e60:	08000df2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, sl, fp}
    4e64:	3508a601 	strcc	sl, [r8, #-1537]	; 0xfffff9ff
    4e68:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
    4e6c:	000012f4 	strdeq	r1, [r0], -r4
    4e70:	00001d8d 	andeq	r1, r0, sp, lsl #27
    4e74:	00001d8b 	andeq	r1, r0, fp, lsl #27
    4e78:	0dfe2a00 			; <UNDEFINED> instruction: 0x0dfe2a00
    4e7c:	12770800 	rsbsne	r0, r7, #0, 16
    4e80:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    4e84:	56030550 			; <UNDEFINED> instruction: 0x56030550
    4e88:	00200001 	eoreq	r0, r0, r1
    4e8c:	c4013600 	strgt	r3, [r1], #-1536	; 0xfffffa00
    4e90:	01000010 	tsteq	r0, r0, lsl r0
    4e94:	0101065a 	tsteq	r1, sl, asr r6
    4e98:	00001271 	andeq	r1, r0, r1, ror r2
    4e9c:	66756237 			; <UNDEFINED> instruction: 0x66756237
    4ea0:	225a0100 	subscs	r0, sl, #0, 2
    4ea4:	00001271 	andeq	r1, r0, r1, ror r2
    4ea8:	74616437 	strbtvc	r6, [r1], #-1079	; 0xfffffbc9
    4eac:	2f5a0100 	svccs	0x005a0100
    4eb0:	00000041 	andeq	r0, r0, r1, asr #32
    4eb4:	e5042000 	str	r2, [r4, #-0]
    4eb8:	38000007 	stmdacc	r0, {r0, r1, r2}
    4ebc:	00117101 	andseq	r7, r1, r1, lsl #2
    4ec0:	09510100 	ldmdbeq	r1, {r8}^
    4ec4:	00004101 	andeq	r4, r0, r1, lsl #2
    4ec8:	000d8200 	andeq	r8, sp, r0, lsl #4
    4ecc:	000da808 	andeq	sl, sp, r8, lsl #16
    4ed0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    4ed4:	0012e101 	andseq	lr, r2, r1, lsl #2
    4ed8:	75621b00 	strbvc	r1, [r2, #-2816]!	; 0xfffff500
    4edc:	51010066 	tstpl	r1, r6, rrx
    4ee0:	00127124 	andseq	r7, r2, r4, lsr #2
    4ee4:	001dad00 	andseq	sl, sp, r0, lsl #26
    4ee8:	001da500 	andseq	sl, sp, r0, lsl #10
    4eec:	65721d00 	ldrbvs	r1, [r2, #-3328]!	; 0xfffff300
    4ef0:	52010073 	andpl	r0, r1, #115	; 0x73
    4ef4:	0000410b 	andeq	r4, r0, fp, lsl #2
    4ef8:	001de300 	andseq	lr, sp, r0, lsl #6
    4efc:	001de100 	andseq	lr, sp, r0, lsl #2
    4f00:	12e13d00 	rscne	r3, r1, #0, 26
    4f04:	0d820000 	stceq	0, cr0, [r2]
    4f08:	82030800 	andhi	r0, r3, #0, 16
    4f0c:	8608000d 	strhi	r0, [r8], -sp
    4f10:	0108000d 	tsteq	r8, sp
    4f14:	f4250653 	vld1.16	{d0-d2}, [r5 :64], r3
    4f18:	f8000012 			; <UNDEFINED> instruction: 0xf8000012
    4f1c:	f600001d 			; <UNDEFINED> instruction: 0xf600001d
    4f20:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f24:	2c013e00 	stccs	14, cr3, [r1], {-0}
    4f28:	01000011 	tsteq	r0, r1, lsl r0
    4f2c:	4101094d 	tstmi	r1, sp, asr #18
    4f30:	01000000 	mrseq	r0, (UNDEF: 0)
    4f34:	00001301 	andeq	r1, r0, r1, lsl #6
    4f38:	66756237 			; <UNDEFINED> instruction: 0x66756237
    4f3c:	244d0100 	strbcs	r0, [sp], #-256	; 0xffffff00
    4f40:	00001271 	andeq	r1, r0, r1, ror r2
    4f44:	04ef3f00 	strbteq	r3, [pc], #3840	; 4f4c <__Stack_Size+0x3f4c>
    4f48:	c1030000 	mrsgt	r0, (UNDEF: 3)
    4f4c:	009a0113 	addseq	r0, sl, r3, lsl r1
    4f50:	2c030000 	stccs	0, cr0, [r3], {-0}
    4f54:	33000013 	movwcc	r0, #19
    4f58:	00000731 	andeq	r0, r0, r1, lsr r7
    4f5c:	4127c103 			; <UNDEFINED> instruction: 0x4127c103
    4f60:	37000000 	strcc	r0, [r0, -r0]
    4f64:	00667562 	rsbeq	r7, r6, r2, ror #10
    4f68:	1c38c103 	ldfned	f4, [r8], #-12
    4f6c:	00000010 	andeq	r0, r0, r0, lsl r0
    4f70:	0003de32 	andeq	sp, r3, r2, lsr lr
    4f74:	14b40300 	ldrtne	r0, [r4], #768	; 0x300
    4f78:	135f0301 	cmpne	pc, #67108864	; 0x4000000
    4f7c:	31330000 	teqcc	r3, r0
    4f80:	03000007 	movweq	r0, #7
    4f84:	004129b4 	strheq	r2, [r1], #-148	; 0xffffff6c
    4f88:	62370000 	eorsvs	r0, r7, #0
    4f8c:	03006675 	movweq	r6, #1653	; 0x675
    4f90:	135f40b4 	cmpne	pc, #180	; 0xb4
    4f94:	d1330000 	teqle	r3, r0
    4f98:	03000011 	movweq	r0, #17
    4f9c:	005e4eb4 	ldrheq	r4, [lr], #-228	; 0xffffff1c
    4fa0:	20000000 	andcs	r0, r0, r0
    4fa4:	00006f04 	andeq	r6, r0, r4, lsl #30
    4fa8:	03fe4000 	mvnseq	r4, #0
    4fac:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    4fb0:	03011605 	movweq	r1, #5637	; 0x1605
    4fb4:	00001382 	andeq	r1, r0, r2, lsl #7
    4fb8:	00034441 	andeq	r4, r3, r1, asr #8
    4fbc:	05de0500 	ldrbeq	r0, [lr, #1280]	; 0x500
    4fc0:	0002552f 	andeq	r5, r2, pc, lsr #10
    4fc4:	e1420000 	mrs	r0, (UNDEF: 66)
    4fc8:	78000012 	stmdavc	r0, {r1, r4}
    4fcc:	8208000d 	andhi	r0, r8, #13
    4fd0:	0208000d 	andeq	r0, r8, #13
    4fd4:	a501007d 	strge	r0, [r1, #-125]	; 0xffffff83
    4fd8:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    4fdc:	000012f4 	strdeq	r1, [r0], -r4
    4fe0:	00001e0f 	andeq	r1, r0, pc, lsl #28
    4fe4:	00001e0b 	andeq	r1, r0, fp, lsl #28
    4fe8:	12494200 	subne	r4, r9, #0, 4
    4fec:	0da80000 	stceq	0, cr0, [r8]
    4ff0:	0dca0800 	stcleq	8, cr0, [sl]
    4ff4:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4ff8:	14200100 	strtne	r0, [r0], #-256	; 0xffffff00
    4ffc:	58430000 	stmdapl	r3, {}^	; <UNPREDICTABLE>
    5000:	01000012 	tsteq	r0, r2, lsl r0
    5004:	12644350 	rsbne	r4, r4, #80, 6	; 0x40000001
    5008:	51010000 	mrspl	r0, (UNDEF: 1)
    500c:	0012e124 	andseq	lr, r2, r4, lsr #2
    5010:	000da800 	andeq	sl, sp, r0, lsl #16
    5014:	0da80208 	sfmeq	f0, 4, [r8, #32]!
    5018:	0dae0800 	stceq	8, cr0, [lr]
    501c:	5b010800 	blpl	47024 <__Stack_Size+0x46024>
    5020:	0013ef06 	andseq	lr, r3, r6, lsl #30
    5024:	12f42500 	rscsne	r2, r4, #0, 10
    5028:	1e320000 	cdpne	0, 3, cr0, cr2, cr0, {0}
    502c:	1e300000 	cdpne	0, 3, cr0, cr0, cr0, {0}
    5030:	3d000000 	stccc	0, cr0, [r0, #-0]
    5034:	00001249 	andeq	r1, r0, r9, asr #4
    5038:	08000db4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, fp}
    503c:	000db400 	andeq	fp, sp, r0, lsl #8
    5040:	000dc808 	andeq	ip, sp, r8, lsl #16
    5044:	065a0108 	ldrbeq	r0, [sl], -r8, lsl #2
    5048:	00126425 	andseq	r6, r2, r5, lsr #8
    504c:	001e4700 	andseq	r4, lr, r0, lsl #14
    5050:	001e4500 	andseq	r4, lr, r0, lsl #10
    5054:	12582500 	subsne	r2, r8, #0, 10
    5058:	1e5c0000 	cdpne	0, 5, cr0, cr12, cr0, {0}
    505c:	1e5a0000 	cdpne	0, 5, cr0, cr10, cr0, {0}
    5060:	00000000 	andeq	r0, r0, r0
    5064:	000fa342 	andeq	sl, pc, r2, asr #6
    5068:	000f2800 	andeq	r2, pc, r0, lsl #16
    506c:	000f9008 	andeq	r9, pc, r8
    5070:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    5074:	00145c01 	andseq	r5, r4, r1, lsl #24
    5078:	0fb24300 	svceq	0x00b24300
    507c:	50010000 	andpl	r0, r1, r0
    5080:	000fa344 	andeq	sl, pc, r4, asr #6
    5084:	000f6e00 	andeq	r6, pc, r0, lsl #28
    5088:	02a00008 	adceq	r0, r0, #8
    508c:	4b020000 	blmi	85094 <__Stack_Size+0x84094>
    5090:	0fb22506 	svceq	0x00b22506
    5094:	1e710000 	cdpne	0, 7, cr0, cr1, cr0, {0}
    5098:	1e6f0000 	cdpne	0, 6, cr0, cr15, cr0, {0}
    509c:	00000000 	andeq	r0, r0, r0
    50a0:	dd010145 	stfles	f0, [r1, #-276]	; 0xfffffeec
    50a4:	dd000003 	stcle	0, cr0, [r0, #-12]
    50a8:	03000003 	movweq	r0, #3
    50ac:	014506b3 	strheq	r0, [r5, #-99]	; 0xffffff9d
    50b0:	0004ee01 	andeq	lr, r4, r1, lsl #28
    50b4:	0004ee00 	andeq	lr, r4, r0, lsl #28
    50b8:	05c00300 	strbeq	r0, [r0, #768]	; 0x300
    50bc:	b7010145 	strlt	r0, [r1, -r5, asr #2]
    50c0:	b7000010 	smladlt	r0, r0, r0, r0
    50c4:	09000010 	stmdbeq	r0, {r4}
    50c8:	0145060e 	cmpeq	r5, lr, lsl #12
    50cc:	0006a301 	andeq	sl, r6, r1, lsl #6
    50d0:	0006a300 	andeq	sl, r6, r0, lsl #6
    50d4:	06290300 	strteq	r0, [r9], -r0, lsl #6
    50d8:	0009a800 	andeq	sl, r9, r0, lsl #16
    50dc:	1d000200 	sfmne	f0, 4, [r0, #-0]
    50e0:	04000012 	streq	r0, [r0], #-18	; 0xffffffee
    50e4:	00001201 	andeq	r1, r0, r1, lsl #4
    50e8:	11b90c00 			; <UNDEFINED> instruction: 0x11b90c00
    50ec:	00f80000 	rscseq	r0, r8, r0
    50f0:	13340000 	teqne	r4, #0
    50f4:	15340800 	ldrne	r0, [r4, #-2048]!	; 0xfffff800
    50f8:	1d840800 	stcne	8, cr0, [r4]
    50fc:	01020000 	mrseq	r0, (UNDEF: 2)
    5100:	00018806 	andeq	r8, r1, r6, lsl #16
    5104:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    5108:	00000234 	andeq	r0, r0, r4, lsr r2
    510c:	02050402 	andeq	r0, r5, #33554432	; 0x2000000
    5110:	02000002 	andeq	r0, r0, #2
    5114:	01fd0508 	mvnseq	r0, r8, lsl #10
    5118:	e5030000 	str	r0, [r3, #-0]
    511c:	03000001 	movweq	r0, #1
    5120:	0057182e 	subseq	r1, r7, lr, lsr #16
    5124:	41040000 	mrsmi	r0, (UNDEF: 4)
    5128:	05000000 	streq	r0, [r0, #-0]
    512c:	00000041 	andeq	r0, r0, r1, asr #32
    5130:	86080102 	strhi	r0, [r8], -r2, lsl #2
    5134:	03000001 	movweq	r0, #1
    5138:	000005ee 	andeq	r0, r0, lr, ror #11
    513c:	74193103 	ldrvc	r3, [r9], #-259	; 0xfffffefd
    5140:	04000000 	streq	r0, [r0], #-0
    5144:	0000005e 	andeq	r0, r0, lr, asr r0
    5148:	00005e05 	andeq	r5, r0, r5, lsl #28
    514c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    5150:	0000015e 	andeq	r0, r0, lr, asr r1
    5154:	00024a03 	andeq	r4, r2, r3, lsl #20
    5158:	19340300 	ldmdbne	r4!, {r8, r9}
    515c:	00000087 	andeq	r0, r0, r7, lsl #1
    5160:	d3070402 	movwle	r0, #29698	; 0x7402
    5164:	02000001 	andeq	r0, r0, #1
    5168:	01ce0708 	biceq	r0, lr, r8, lsl #14
    516c:	04060000 	streq	r0, [r6], #-0
    5170:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    5174:	00950400 	addseq	r0, r5, r0, lsl #8
    5178:	04020000 	streq	r0, [r2], #-0
    517c:	0001d807 	andeq	sp, r1, r7, lsl #16
    5180:	02080700 	andeq	r0, r8, #0, 14
    5184:	00fd091e 	rscseq	r0, sp, lr, lsl r9
    5188:	e4080000 	str	r0, [r8], #-0
    518c:	02000002 	andeq	r0, r0, #2
    5190:	00410b1f 	subeq	r0, r1, pc, lsl fp
    5194:	23020000 	movwcs	r0, #8192	; 0x2000
    5198:	06ed0800 	strbteq	r0, [sp], r0, lsl #16
    519c:	20020000 	andcs	r0, r2, r0
    51a0:	0000410b 	andeq	r4, r0, fp, lsl #2
    51a4:	01230200 			; <UNDEFINED> instruction: 0x01230200
    51a8:	00037508 	andeq	r7, r3, r8, lsl #10
    51ac:	0c210200 	sfmeq	f0, 4, [r1], #-0
    51b0:	0000005e 	andeq	r0, r0, lr, asr r0
    51b4:	08022302 	stmdaeq	r2, {r1, r8, r9, sp}
    51b8:	00000280 	andeq	r0, r0, r0, lsl #5
    51bc:	5e0c2202 	cdppl	2, 0, cr2, cr12, cr2, {0}
    51c0:	02000000 	andeq	r0, r0, #0
    51c4:	c3080423 	movwgt	r0, #33827	; 0x8423
    51c8:	02000006 	andeq	r0, r0, #6
    51cc:	005e0c23 	subseq	r0, lr, r3, lsr #24
    51d0:	23020000 	movwcs	r0, #8192	; 0x2000
    51d4:	60030006 	andvs	r0, r3, r6
    51d8:	02000007 	andeq	r0, r0, #7
    51dc:	00a80224 	adceq	r0, r8, r4, lsr #4
    51e0:	53090000 	movwpl	r0, #36864	; 0x9000
    51e4:	04000002 	streq	r0, [r0], #-2
    51e8:	9c1506ce 	ldcls	6, cr0, [r5], {206}	; 0xce
    51ec:	01000000 	mrseq	r0, (UNDEF: 0)
    51f0:	020b0a01 	andeq	r0, fp, #4096	; 0x1000
    51f4:	45050000 	strmi	r0, [r5, #-0]
    51f8:	00007b11 	andeq	r7, r0, r1, lsl fp
    51fc:	0b010100 	bleq	45604 <__Stack_Size+0x44604>
    5200:	00000052 	andeq	r0, r0, r2, asr r0
    5204:	00000136 	andeq	r0, r0, r6, lsr r1
    5208:	0000a10c 	andeq	sl, r0, ip, lsl #2
    520c:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
    5210:	00000126 	andeq	r0, r0, r6, lsr #2
    5214:	0001500a 	andeq	r5, r1, sl
    5218:	17460500 	strbne	r0, [r6, -r0, lsl #10]
    521c:	00000136 	andeq	r0, r0, r6, lsr r1
    5220:	520b0101 	andpl	r0, fp, #1073741824	; 0x40000000
    5224:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    5228:	0c000001 	stceq	0, cr0, [r0], {1}
    522c:	000000a1 	andeq	r0, r0, r1, lsr #1
    5230:	49050007 	stmdbmi	r5, {r0, r1, r2}
    5234:	0a000001 	beq	5240 <__Stack_Size+0x4240>
    5238:	00000226 	andeq	r0, r0, r6, lsr #4
    523c:	59174705 	ldmdbpl	r7, {r0, r2, r8, r9, sl, lr}
    5240:	01000001 	tsteq	r0, r1
    5244:	06540d01 	ldrbeq	r0, [r4], -r1, lsl #26
    5248:	17090239 	smladxne	r9, r9, r2, r0
    524c:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    5250:	00000490 	muleq	r0, r0, r4
    5254:	11023b06 	tstne	r2, r6, lsl #22
    5258:	0000006a 	andeq	r0, r0, sl, rrx
    525c:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    5260:	00000633 	andeq	r0, r0, r3, lsr r6
    5264:	11023c06 	tstne	r2, r6, lsl #24
    5268:	0000006a 	andeq	r0, r0, sl, rrx
    526c:	0e022302 	cdpeq	3, 0, cr2, cr2, cr2, {0}
    5270:	000004c9 	andeq	r0, r0, r9, asr #9
    5274:	11023d06 	tstne	r2, r6, lsl #26
    5278:	0000006a 	andeq	r0, r0, sl, rrx
    527c:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    5280:	0000063d 	andeq	r0, r0, sp, lsr r6
    5284:	11023e06 	tstne	r2, r6, lsl #28
    5288:	0000006a 	andeq	r0, r0, sl, rrx
    528c:	0e062302 	cdpeq	3, 0, cr2, cr6, cr2, {0}
    5290:	00000518 	andeq	r0, r0, r8, lsl r5
    5294:	11023f06 	tstne	r2, r6, lsl #30
    5298:	0000006a 	andeq	r0, r0, sl, rrx
    529c:	0e082302 	cdpeq	3, 0, cr2, cr8, cr2, {0}
    52a0:	00000647 	andeq	r0, r0, r7, asr #12
    52a4:	11024006 	tstne	r2, r6
    52a8:	0000006a 	andeq	r0, r0, sl, rrx
    52ac:	0e0a2302 	cdpeq	3, 0, cr2, cr10, cr2, {0}
    52b0:	0000054b 	andeq	r0, r0, fp, asr #10
    52b4:	11024106 	tstne	r2, r6, lsl #2
    52b8:	0000006a 	andeq	r0, r0, sl, rrx
    52bc:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    52c0:	00000651 	andeq	r0, r0, r1, asr r6
    52c4:	11024206 	tstne	r2, r6, lsl #4
    52c8:	0000006a 	andeq	r0, r0, sl, rrx
    52cc:	0e0e2302 	cdpeq	3, 0, cr2, cr14, cr2, {0}
    52d0:	0000059c 	muleq	r0, ip, r5
    52d4:	11024306 	tstne	r2, r6, lsl #6
    52d8:	0000006a 	andeq	r0, r0, sl, rrx
    52dc:	0e102302 	cdpeq	3, 1, cr2, cr0, cr2, {0}
    52e0:	0000065b 	andeq	r0, r0, fp, asr r6
    52e4:	11024406 	tstne	r2, r6, lsl #8
    52e8:	0000006a 	andeq	r0, r0, sl, rrx
    52ec:	0e122302 	cdpeq	3, 1, cr2, cr2, cr2, {0}
    52f0:	0000062e 	andeq	r0, r0, lr, lsr #12
    52f4:	11024506 	tstne	r2, r6, lsl #10
    52f8:	0000006a 	andeq	r0, r0, sl, rrx
    52fc:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    5300:	00000665 	andeq	r0, r0, r5, ror #12
    5304:	11024606 	tstne	r2, r6, lsl #12
    5308:	0000006a 	andeq	r0, r0, sl, rrx
    530c:	0e162302 	cdpeq	3, 1, cr2, cr6, cr2, {0}
    5310:	000006d8 	ldrdeq	r0, [r0], -r8
    5314:	11024706 	tstne	r2, r6, lsl #14
    5318:	0000006a 	andeq	r0, r0, sl, rrx
    531c:	0e182302 	cdpeq	3, 1, cr2, cr8, cr2, {0}
    5320:	0000066f 	andeq	r0, r0, pc, ror #12
    5324:	11024806 	tstne	r2, r6, lsl #16
    5328:	0000006a 	andeq	r0, r0, sl, rrx
    532c:	0e1a2302 	cdpeq	3, 1, cr2, cr10, cr2, {0}
    5330:	0000075b 	andeq	r0, r0, fp, asr r7
    5334:	11024906 	tstne	r2, r6, lsl #18
    5338:	0000006a 	andeq	r0, r0, sl, rrx
    533c:	0e1c2302 	cdpeq	3, 1, cr2, cr12, cr2, {0}
    5340:	00000876 	andeq	r0, r0, r6, ror r8
    5344:	11024a06 	tstne	r2, r6, lsl #20
    5348:	00000327 	andeq	r0, r0, r7, lsr #6
    534c:	0e1e2302 	cdpeq	3, 1, cr2, cr14, cr2, {0}
    5350:	00000700 	andeq	r0, r0, r0, lsl #14
    5354:	11024b06 	tstne	r2, r6, lsl #22
    5358:	0000006a 	andeq	r0, r0, sl, rrx
    535c:	0e402302 	cdpeq	3, 4, cr2, cr0, cr2, {0}
    5360:	00000679 	andeq	r0, r0, r9, ror r6
    5364:	11024c06 	tstne	r2, r6, lsl #24
    5368:	0000006a 	andeq	r0, r0, sl, rrx
    536c:	0e422302 	cdpeq	3, 4, cr2, cr2, cr2, {0}
    5370:	0000039c 	muleq	r0, ip, r3
    5374:	11024d06 	tstne	r2, r6, lsl #26
    5378:	0000006a 	andeq	r0, r0, sl, rrx
    537c:	0e442302 	cdpeq	3, 4, cr2, cr4, cr2, {0}
    5380:	00000683 	andeq	r0, r0, r3, lsl #13
    5384:	11024e06 	tstne	r2, r6, lsl #28
    5388:	0000006a 	andeq	r0, r0, sl, rrx
    538c:	0f462302 	svceq	0x00462302
    5390:	00524e46 	subseq	r4, r2, r6, asr #28
    5394:	11024f06 	tstne	r2, r6, lsl #30
    5398:	0000006a 	andeq	r0, r0, sl, rrx
    539c:	0e482302 	cdpeq	3, 4, cr2, cr8, cr2, {0}
    53a0:	0000068d 	andeq	r0, r0, sp, lsl #13
    53a4:	11025006 	tstne	r2, r6
    53a8:	0000006a 	andeq	r0, r0, sl, rrx
    53ac:	0e4a2302 	cdpeq	3, 4, cr2, cr10, cr2, {0}
    53b0:	00000419 	andeq	r0, r0, r9, lsl r4
    53b4:	11025106 	tstne	r2, r6, lsl #2
    53b8:	0000006a 	andeq	r0, r0, sl, rrx
    53bc:	0e4c2302 	cdpeq	3, 4, cr2, cr12, cr2, {0}
    53c0:	0000042d 	andeq	r0, r0, sp, lsr #8
    53c4:	11025206 	tstne	r2, r6, lsl #4
    53c8:	0000006a 	andeq	r0, r0, sl, rrx
    53cc:	0e4e2302 	cdpeq	3, 4, cr2, cr14, cr2, {0}
    53d0:	00000820 	andeq	r0, r0, r0, lsr #16
    53d4:	11025306 	tstne	r2, r6, lsl #6
    53d8:	0000006a 	andeq	r0, r0, sl, rrx
    53dc:	0e502302 	cdpeq	3, 5, cr2, cr0, cr2, {0}
    53e0:	00000898 	muleq	r0, r8, r8
    53e4:	11025406 	tstne	r2, r6, lsl #8
    53e8:	0000006a 	andeq	r0, r0, sl, rrx
    53ec:	00522302 	subseq	r2, r2, r2, lsl #6
    53f0:	00006a0b 	andeq	r6, r0, fp, lsl #20
    53f4:	00032700 	andeq	r2, r3, r0, lsl #14
    53f8:	00a10c00 	adceq	r0, r1, r0, lsl #24
    53fc:	00100000 	andseq	r0, r0, r0
    5400:	00031704 	andeq	r1, r3, r4, lsl #14
    5404:	040d1000 	streq	r1, [sp], #-0
    5408:	55060000 	strpl	r0, [r6, #-0]
    540c:	016c0302 	cmneq	ip, r2, lsl #6
    5410:	04110000 	ldreq	r0, [r1], #-0
    5414:	0a050104 	beq	14582c <__Stack_Size+0x14482c>
    5418:	0000036f 	andeq	r0, r0, pc, ror #6
    541c:	00747312 	rsbseq	r7, r4, r2, lsl r3
    5420:	6a150601 	bvs	546c2c <__Stack_Size+0x545c2c>
    5424:	02000000 	andeq	r0, r0, #0
    5428:	65120023 	ldrvs	r0, [r2, #-35]	; 0xffffffdd
    542c:	0601006e 	streq	r0, [r1], -lr, rrx
    5430:	00006a18 	andeq	r6, r0, r8, lsl sl
    5434:	02230200 	eoreq	r0, r3, #0, 4
    5438:	72726112 	rsbsvc	r6, r2, #-2147483644	; 0x80000004
    543c:	14070100 	strne	r0, [r7], #-256	; 0xffffff00
    5440:	00000385 	andeq	r0, r0, r5, lsl #7
    5444:	00042302 	andeq	r2, r4, r2, lsl #6
    5448:	00033904 	andeq	r3, r3, r4, lsl #18
    544c:	004d0b00 	subeq	r0, sp, r0, lsl #22
    5450:	03850000 	orreq	r0, r5, #0
    5454:	a1130000 	tstge	r3, r0
    5458:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    545c:	74040003 	strvc	r0, [r4], #-3
    5460:	14000003 	strne	r0, [r0], #-3
    5464:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    5468:	6f020801 	svcvs	0x00020801
    546c:	01000003 	tsteq	r0, r3
    5470:	02fe0305 	rscseq	r0, lr, #335544320	; 0x14000000
    5474:	87152000 	ldrhi	r2, [r5, -r0]
    5478:	07000010 	smladeq	r0, r0, r0, r0
    547c:	e7083a01 	str	r3, [r8, -r1, lsl #20]
    5480:	08000003 	stmdaeq	r0, {r0, r1}
    5484:	00001067 	andeq	r1, r0, r7, rrx
    5488:	7b0c3b01 	blvc	314094 <__Stack_Size+0x313094>
    548c:	02000000 	andeq	r0, r0, #0
    5490:	89080023 	stmdbhi	r8, {r0, r1, r5}
    5494:	01000011 	tsteq	r0, r1, lsl r0
    5498:	00410b3c 	subeq	r0, r1, ip, lsr fp
    549c:	23020000 	movwcs	r0, #8192	; 0x2000
    54a0:	11250804 			; <UNDEFINED> instruction: 0x11250804
    54a4:	3d010000 	stccc	0, cr0, [r1, #-0]
    54a8:	0000410b 	andeq	r4, r0, fp, lsl #2
    54ac:	05230200 	streq	r0, [r3, #-512]!	; 0xfffffe00
    54b0:	00115308 	andseq	r5, r1, r8, lsl #6
    54b4:	0b3e0100 	bleq	f858bc <__Stack_Size+0xf848bc>
    54b8:	00000041 	andeq	r0, r0, r1, asr #32
    54bc:	00062302 	andeq	r2, r6, r2, lsl #6
    54c0:	00039d04 	andeq	r9, r3, r4, lsl #26
    54c4:	11a51400 			; <UNDEFINED> instruction: 0x11a51400
    54c8:	41010000 	mrsmi	r0, (UNDEF: 1)
    54cc:	0003e720 	andeq	lr, r3, r0, lsr #14
    54d0:	03050100 	movweq	r0, #20736	; 0x5100
    54d4:	2000001a 	andcs	r0, r0, sl, lsl r0
    54d8:	0c350116 	ldfeqs	f0, [r5], #-88	; 0xffffffa8
    54dc:	8c010000 	stchi	0, cr0, [r1], {-0}
    54e0:	0014f406 	andseq	pc, r4, r6, lsl #8
    54e4:	00153408 	andseq	r3, r5, r8, lsl #8
    54e8:	001e8408 	andseq	r8, lr, r8, lsl #8
    54ec:	04f30100 	ldrbteq	r0, [r3], #256	; 0x100
    54f0:	d1170000 	tstle	r7, r0
    54f4:	01000011 	tsteq	r0, r1, lsl r0
    54f8:	005e0c8d 	subseq	r0, lr, sp, lsl #25
    54fc:	1ec00000 	cdpne	0, 12, cr0, cr0, cr0, {0}
    5500:	1ebc0000 	cdpne	0, 11, cr0, cr12, cr0, {0}
    5504:	62180000 	andsvs	r0, r8, #0
    5508:	01006675 	tsteq	r0, r5, ror r6
    550c:	04f3158e 	ldrbteq	r1, [r3], #1422	; 0x58e
    5510:	02020000 	andeq	r0, r2, #0
    5514:	f8195891 			; <UNDEFINED> instruction: 0xf8195891
    5518:	0c000008 	stceq	0, cr0, [r0], {8}
    551c:	01080015 	tsteq	r8, r5, lsl r0
    5520:	0800150c 	stmdaeq	r0, {r2, r3, r8, sl, ip}
    5524:	08001516 	stmdaeq	r0, {r1, r2, r4, r8, sl, ip}
    5528:	93059101 	movwls	r9, #20737	; 0x5101
    552c:	1a000004 	bne	5544 <__Stack_Size+0x4544>
    5530:	0000091e 	andeq	r0, r0, lr, lsl r9
    5534:	00001ee2 	andeq	r1, r0, r2, ror #29
    5538:	00001ede 	ldrdeq	r1, [r0], -lr
    553c:	0009121a 	andeq	r1, r9, sl, lsl r2
    5540:	001f0200 	andseq	r0, pc, r0, lsl #4
    5544:	001f0000 	andseq	r0, pc, r0
    5548:	09061a00 	stmdbeq	r6, {r9, fp, ip}
    554c:	1f170000 	svcne	0x00170000
    5550:	1f150000 	svcne	0x00150000
    5554:	161b0000 	ldrne	r0, [fp], -r0
    5558:	81080015 	tsthi	r8, r5, lsl r0
    555c:	1c000009 	stcne	0, cr0, [r0], {9}
    5560:	36015001 	strcc	r5, [r1], -r1
    5564:	0251011c 	subseq	r0, r1, #28, 2
    5568:	0000007d 	andeq	r0, r0, sp, ror r0
    556c:	0008cd19 	andeq	ip, r8, r9, lsl sp
    5570:	00152200 	andseq	r2, r5, r0, lsl #4
    5574:	15220108 	strne	r0, [r2, #-264]!	; 0xfffffef8
    5578:	152a0800 	strne	r0, [sl, #-2048]!	; 0xfffff800
    557c:	94010800 	strls	r0, [r1], #-2048	; 0xfffff800
    5580:	0004dc05 	andeq	sp, r4, r5, lsl #24
    5584:	08eb1a00 	stmiaeq	fp!, {r9, fp, ip}^
    5588:	1f2e0000 	svcne	0x002e0000
    558c:	1f2c0000 	svcne	0x002c0000
    5590:	df1a0000 	svcle	0x001a0000
    5594:	43000008 	movwmi	r0, #8
    5598:	4100001f 	tstmi	r0, pc, lsl r0
    559c:	1b00001f 	blne	5620 <__Stack_Size+0x4620>
    55a0:	0800152a 	stmdaeq	r0, {r1, r3, r5, r8, sl, ip}
    55a4:	0000098f 	andeq	r0, r0, pc, lsl #19
    55a8:	0150011c 	cmpeq	r0, ip, lsl r1
    55ac:	51011c37 	tstpl	r1, r7, lsr ip
    55b0:	00007d02 	andeq	r7, r0, r2, lsl #26
    55b4:	150c1b00 	strne	r1, [ip, #-2816]	; 0xfffff500
    55b8:	07ca0800 	strbeq	r0, [sl, r0, lsl #16]
    55bc:	011c0000 	tsteq	ip, r0
    55c0:	007d0250 	rsbseq	r0, sp, r0, asr r2
    55c4:	0251011c 	subseq	r0, r1, #28, 2
    55c8:	00002008 	andeq	r2, r0, r8
    55cc:	0000410b 	andeq	r4, r0, fp, lsl #2
    55d0:	00050300 	andeq	r0, r5, r0, lsl #6
    55d4:	00a10c00 	adceq	r0, r1, r0, lsl #24
    55d8:	001f0000 	andseq	r0, pc, r0
    55dc:	10b7011d 	adcsne	r0, r7, sp, lsl r1
    55e0:	6f010000 	svcvs	0x00010000
    55e4:	14540106 	ldrbne	r0, [r4], #-262	; 0xfffffefa
    55e8:	14f40800 	ldrbtne	r0, [r4], #2048	; 0x800
    55ec:	1f570800 	svcne	0x00570800
    55f0:	17010000 	strne	r0, [r1, -r0]
    55f4:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
    55f8:	000011ad 	andeq	r1, r0, sp, lsr #3
    55fc:	411b6f01 	tstmi	fp, r1, lsl #30
    5600:	93000000 	movwls	r0, #0
    5604:	8f00001f 	svchi	0x0000001f
    5608:	1f00001f 	svcne	0x0000001f
    560c:	00667562 	rsbeq	r7, r6, r2, ror #10
    5610:	172c6f01 	strne	r6, [ip, -r1, lsl #30]!
    5614:	be000006 	cdplt	0, 0, cr0, cr0, cr6, {0}
    5618:	b400001f 	strlt	r0, [r0], #-31	; 0xffffffe1
    561c:	1e00001f 	mcrne	0, 0, r0, cr0, cr15, {0}
    5620:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5624:	95356f01 	ldrls	r6, [r5, #-3841]!	; 0xfffff0ff
    5628:	0a000000 	beq	5630 <__Stack_Size+0x4630>
    562c:	00000020 	andeq	r0, r0, r0, lsr #32
    5630:	20000020 	andcs	r0, r0, r0, lsr #32
    5634:	000011d6 	ldrdeq	r1, [r0], -r6
    5638:	41127001 	tstmi	r2, r1
    563c:	05000000 	streq	r0, [r0, #-0]
    5640:	00002103 	andeq	r2, r0, r3, lsl #2
    5644:	76612120 	strbtvc	r2, [r1], -r0, lsr #2
    5648:	0c710100 	ldfeqe	f0, [r1], #-0
    564c:	0000005e 	andeq	r0, r0, lr, asr r0
    5650:	0000204e 	andeq	r2, r0, lr, asr #32
    5654:	0000204c 	andeq	r2, r0, ip, asr #32
    5658:	01006921 	tsteq	r0, r1, lsr #18
    565c:	005e0c79 	subseq	r0, lr, r9, ror ip
    5660:	20730000 	rsbscs	r0, r3, r0
    5664:	20670000 	rsbcs	r0, r7, r0
    5668:	70210000 	eorvc	r0, r1, r0
    566c:	79010069 	stmdbvc	r1, {r0, r3, r5, r6}
    5670:	00005e0f 	andeq	r5, r0, pc, lsl #28
    5674:	0020c700 	eoreq	ip, r0, r0, lsl #14
    5678:	0020c100 	eoreq	ip, r0, r0, lsl #2
    567c:	14622200 	strbtne	r2, [r2], #-512	; 0xfffffe00
    5680:	08b40800 	ldmeq	r4!, {fp}
    5684:	80230000 	eorhi	r0, r3, r0
    5688:	41080014 	tstmi	r8, r4, lsl r0
    568c:	c9000008 	stmdbgt	r0, {r3}
    5690:	1c000005 	stcne	0, cr0, [r0], {5}
    5694:	03055001 	movweq	r5, #20481	; 0x5001
    5698:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
    569c:	0151011c 	cmpeq	r1, ip, lsl r1
    56a0:	86230033 			; <UNDEFINED> instruction: 0x86230033
    56a4:	1d080014 	stcne	0, cr0, [r8, #-80]	; 0xffffffb0
    56a8:	dd000006 	stcle	0, cr0, [r0, #-24]	; 0xffffffe8
    56ac:	1c000005 	stcne	0, cr0, [r0], {5}
    56b0:	74025001 	strvc	r5, [r2], #-1
    56b4:	aa240000 	bge	9056bc <__Stack_Size+0x9046bc>
    56b8:	01080014 	tsteq	r8, r4, lsl r0
    56bc:	00000841 	andeq	r0, r0, r1, asr #16
    56c0:	0014b622 	andseq	fp, r4, r2, lsr #12
    56c4:	00084108 	andeq	r4, r8, r8, lsl #2
    56c8:	14be2200 	ldrtne	r2, [lr], #512	; 0x200
    56cc:	08410800 	stmdaeq	r1, {fp}^
    56d0:	c4230000 	strtgt	r0, [r3], #-0
    56d4:	1d080014 	stcne	0, cr0, [r8, #-80]	; 0xffffffb0
    56d8:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    56dc:	1c000006 	stcne	0, cr0, [r0], {6}
    56e0:	74025001 	strvc	r5, [r2], #-1
    56e4:	da220000 	ble	8856ec <__Stack_Size+0x8846ec>
    56e8:	41080014 	tstmi	r8, r4, lsl r0
    56ec:	00000008 	andeq	r0, r0, r8
    56f0:	00410425 	subeq	r0, r1, r5, lsr #8
    56f4:	01260000 			; <UNDEFINED> instruction: 0x01260000
    56f8:	00001192 	muleq	r0, r2, r1
    56fc:	01066701 	tsteq	r6, r1, lsl #14
    5700:	00063901 	andeq	r3, r6, r1, lsl #18
    5704:	11ad2700 			; <UNDEFINED> instruction: 0x11ad2700
    5708:	67010000 	strvs	r0, [r1, -r0]
    570c:	00004116 	andeq	r4, r0, r6, lsl r1
    5710:	01160000 	tsteq	r6, r0
    5714:	000009fd 	strdeq	r0, [r0], -sp
    5718:	14066101 	strne	r6, [r6], #-257	; 0xfffffeff
    571c:	3e080014 	mcrcc	0, 0, r0, cr8, cr4, {0}
    5720:	f0080014 			; <UNDEFINED> instruction: 0xf0080014
    5724:	01000020 	tsteq	r0, r0, lsr #32
    5728:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    572c:	00142223 	andseq	r2, r4, r3, lsr #4
    5730:	00099d08 	andeq	r9, r9, r8, lsl #26
    5734:	00067600 	andeq	r7, r6, r0, lsl #12
    5738:	50011c00 	andpl	r1, r1, r0, lsl #24
    573c:	1c860902 			; <UNDEFINED> instruction: 0x1c860902
    5740:	33015101 	movwcc	r5, #4353	; 0x1101
    5744:	0152011c 	cmpeq	r2, ip, lsl r1
    5748:	53011c38 	movwpl	r1, #7224	; 0x1c38
    574c:	23003001 	movwcs	r3, #1
    5750:	0800142e 	stmdaeq	r0, {r1, r2, r3, r5, sl, ip}
    5754:	0000099d 	muleq	r0, sp, r9
    5758:	0000069a 	muleq	r0, sl, r6
    575c:	0250011c 	subseq	r0, r0, #28, 2
    5760:	011c8309 	tsteq	ip, r9, lsl #6
    5764:	1c320151 	ldfnes	f0, [r2], #-324	; 0xfffffebc
    5768:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    576c:	53011c20 	movwpl	r1, #7200	; 0x1c20
    5770:	28003001 	stmdacs	r0, {r0, ip, sp}
    5774:	0800143e 	stmdaeq	r0, {r1, r2, r3, r4, r5, sl, ip}
    5778:	00099d01 	andeq	r9, r9, r1, lsl #26
    577c:	50011c00 	andpl	r1, r1, r0, lsl #24
    5780:	011c3301 	tsteq	ip, r1, lsl #6
    5784:	1c320151 	ldfnes	f0, [r2], #-324	; 0xfffffebc
    5788:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    578c:	53011c20 	movwpl	r1, #7200	; 0x1c20
    5790:	00003001 	andeq	r3, r0, r1
    5794:	0cc40129 	stfeqe	f0, [r4], {41}	; 0x29
    5798:	55010000 	strpl	r0, [r1, #-0]
    579c:	07600106 	strbeq	r0, [r0, -r6, lsl #2]!
    57a0:	13e40000 	mvnne	r0, #0
    57a4:	14140800 	ldrne	r0, [r4], #-2048	; 0xfffff800
    57a8:	211c0800 	tstcs	ip, r0, lsl #16
    57ac:	60010000 	andvs	r0, r1, r0
    57b0:	1f000007 	svcne	0x00000007
    57b4:	00716572 	rsbseq	r6, r1, r2, ror r5
    57b8:	67255501 	strvs	r5, [r5, -r1, lsl #10]!
    57bc:	44000007 	strmi	r0, [r0], #-7
    57c0:	3c000021 	stccc	0, cr0, [r0], {33}	; 0x21
    57c4:	1e000021 	cdpne	0, 0, cr0, cr0, cr1, {1}
    57c8:	00000d7f 	andeq	r0, r0, pc, ror sp
    57cc:	5e335501 	cdppl	5, 3, cr5, cr3, cr1, {0}
    57d0:	84000000 	strhi	r0, [r0], #-0
    57d4:	7e000021 	cdpvc	0, 0, cr0, cr0, cr1, {1}
    57d8:	1e000021 	cdpne	0, 0, cr0, cr0, cr1, {1}
    57dc:	00000737 	andeq	r0, r0, r7, lsr r7
    57e0:	5e445501 	cdppl	5, 4, cr5, cr4, cr1, {0}
    57e4:	b6000000 	strlt	r0, [r0], -r0
    57e8:	b0000021 	andlt	r0, r0, r1, lsr #32
    57ec:	2a000021 	bcs	5878 <__Stack_Size+0x4878>
    57f0:	000008cd 	andeq	r0, r0, sp, asr #17
    57f4:	080013fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, ip}
    57f8:	0013fe01 	andseq	pc, r3, r1, lsl #28
    57fc:	00140608 	andseq	r0, r4, r8, lsl #12
    5800:	095a0108 	ldmdbeq	sl, {r3, r8}^
    5804:	0008eb1a 	andeq	lr, r8, sl, lsl fp
    5808:	0021e400 	eoreq	lr, r1, r0, lsl #8
    580c:	0021e200 	eoreq	lr, r1, r0, lsl #4
    5810:	08df1a00 	ldmeq	pc, {r9, fp, ip}^	; <UNPREDICTABLE>
    5814:	21fe0000 	mvnscs	r0, r0
    5818:	21fc0000 	mvnscs	r0, r0
    581c:	061b0000 	ldreq	r0, [fp], -r0
    5820:	8f080014 	svchi	0x00080014
    5824:	1c000009 	stcne	0, cr0, [r0], {9}
    5828:	74025001 	strvc	r5, [r2], #-1
    582c:	51011c00 	tstpl	r1, r0, lsl #24
    5830:	001a0305 	andseq	r0, sl, r5, lsl #6
    5834:	00002000 	andeq	r2, r0, r0
    5838:	08010200 	stmdaeq	r1, {r9}
    583c:	0000018f 	andeq	r0, r0, pc, lsl #3
    5840:	00fd0425 	rscseq	r0, sp, r5, lsr #8
    5844:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    5848:	00000b07 	andeq	r0, r0, r7, lsl #22
    584c:	01064801 	tsteq	r6, r1, lsl #16
    5850:	00000760 	andeq	r0, r0, r0, ror #14
    5854:	080013b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip}
    5858:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
    585c:	01007d02 	tsteq	r0, r2, lsl #26
    5860:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
    5864:	7165721f 	cmnvc	r5, pc, lsl r2
    5868:	24480100 	strbcs	r0, [r8], #-256	; 0xffffff00
    586c:	00000767 	andeq	r0, r0, r7, ror #14
    5870:	0000221a 	andeq	r2, r0, sl, lsl r2
    5874:	00002212 	andeq	r2, r0, r2, lsl r2
    5878:	0008f62c 	andeq	pc, r8, ip, lsr #12
    587c:	30480100 	subcc	r0, r8, r0, lsl #2
    5880:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
    5884:	d12c5101 			; <UNDEFINED> instruction: 0xd12c5101
    5888:	01000011 	tsteq	r0, r1, lsl r0
    588c:	07c44048 	strbeq	r4, [r4, r8, asr #32]
    5890:	52010000 	andpl	r0, r1, #0
    5894:	c2042500 	andgt	r2, r4, #0, 10
    5898:	2d000007 	stccs	0, cr0, [r0, #-28]	; 0xffffffe4
    589c:	5e042504 	cfsh32pl	mvfx2, mvfx4, #4
    58a0:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    58a4:	0011df01 	andseq	sp, r1, r1, lsl #30
    58a8:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    58ac:	00009501 	andeq	r9, r0, r1, lsl #10
    58b0:	00138400 	andseq	r8, r3, r0, lsl #8
    58b4:	0013b808 	andseq	fp, r3, r8, lsl #16
    58b8:	00225408 	eoreq	r5, r2, r8, lsl #8
    58bc:	08410100 	stmdaeq	r1, {r8}^
    58c0:	621f0000 	andsvs	r0, pc, #0
    58c4:	01006675 	tsteq	r0, r5, ror r6
    58c8:	0617181d 			; <UNDEFINED> instruction: 0x0617181d
    58cc:	227c0000 	rsbscs	r0, ip, #0
    58d0:	22740000 	rsbscs	r0, r4, #0
    58d4:	d11e0000 	tstle	lr, r0
    58d8:	01000011 	tsteq	r0, r1, lsl r0
    58dc:	0095211d 	addseq	r2, r5, sp, lsl r1
    58e0:	22b60000 	adcscs	r0, r6, #0
    58e4:	22b20000 	adcscs	r0, r2, #0
    58e8:	61210000 			; <UNDEFINED> instruction: 0x61210000
    58ec:	1e010076 	mcrne	0, 0, r0, cr1, cr6, {3}
    58f0:	00005e0c 	andeq	r5, r0, ip, lsl #28
    58f4:	0022d600 	eoreq	sp, r2, r0, lsl #12
    58f8:	0022d400 	eoreq	sp, r2, r0, lsl #8
    58fc:	74732100 	ldrbtvc	r2, [r3], #-256	; 0xffffff00
    5900:	0c1f0100 	ldfeqs	f0, [pc], {-0}
    5904:	0000005e 	andeq	r0, r0, lr, asr r0
    5908:	000022ed 	andeq	r2, r0, sp, ror #5
    590c:	000022e9 	andeq	r2, r0, r9, ror #5
    5910:	00138c22 	andseq	r8, r3, r2, lsr #24
    5914:	0008b408 	andeq	fp, r8, r8, lsl #8
    5918:	011d0000 	tsteq	sp, r0
    591c:	0000119a 	muleq	r0, sl, r1
    5920:	01060f01 	tsteq	r6, r1, lsl #30
    5924:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
    5928:	08001384 	stmdaeq	r0, {r2, r7, r8, r9, ip}
    592c:	0000230b 	andeq	r2, r0, fp, lsl #6
    5930:	0008b401 	andeq	fp, r8, r1, lsl #8
    5934:	75621f00 	strbvc	r1, [r2, #-3840]!	; 0xfffff100
    5938:	0f010066 	svceq	0x00010066
    593c:	0006171a 	andeq	r1, r6, sl, lsl r7
    5940:	00233300 	eoreq	r3, r3, r0, lsl #6
    5944:	00232b00 	eoreq	r2, r3, r0, lsl #22
    5948:	11d11e00 	bicsne	r1, r1, r0, lsl #28
    594c:	0f010000 	svceq	0x00010000
    5950:	00009523 	andeq	r9, r0, r3, lsr #10
    5954:	00236d00 	eoreq	r6, r3, r0, lsl #26
    5958:	00236900 	eoreq	r6, r3, r0, lsl #18
    595c:	6e652100 	powvss	f2, f5, f0
    5960:	0c100100 	ldfeqs	f0, [r0], {-0}
    5964:	0000005e 	andeq	r0, r0, lr, asr r0
    5968:	00002392 	muleq	r0, r2, r3
    596c:	0000238e 	andeq	r2, r0, lr, lsl #7
    5970:	00766121 	rsbseq	r6, r6, r1, lsr #2
    5974:	5e0c1101 	adfple	f1, f4, f1
    5978:	b4000000 	strlt	r0, [r0], #-0
    597c:	b0000023 	andlt	r0, r0, r3, lsr #32
    5980:	22000023 	andcs	r0, r0, #35	; 0x23
    5984:	08001356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, ip}
    5988:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
    598c:	c7012e00 	strgt	r2, [r1, -r0, lsl #28]
    5990:	01000011 	tsteq	r0, r1, lsl r0
    5994:	005e0a0a 	subseq	r0, lr, sl, lsl #20
    5998:	13340000 	teqne	r4, #0
    599c:	13480800 	movtne	r0, #34816	; 0x8800
    59a0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    59a4:	ef2f0100 	svc	0x002f0100
    59a8:	02000004 	andeq	r0, r0, #4
    59ac:	950113c1 	strls	r1, [r1, #-961]	; 0xfffffc3f
    59b0:	03000000 	movweq	r0, #0
    59b4:	000008f8 	strdeq	r0, [r0], -r8
    59b8:	00073127 	andeq	r3, r7, r7, lsr #2
    59bc:	27c10200 	strbcs	r0, [r1, r0, lsl #4]
    59c0:	00000041 	andeq	r0, r0, r1, asr #32
    59c4:	66756230 			; <UNDEFINED> instruction: 0x66756230
    59c8:	38c10200 	stmiacc	r1, {r9}^
    59cc:	000007c4 	andeq	r0, r0, r4, asr #15
    59d0:	03de3100 	bicseq	r3, lr, #0, 2
    59d4:	b4020000 	strlt	r0, [r2], #-0
    59d8:	2b030114 	blcs	c5e30 <__Stack_Size+0xc4e30>
    59dc:	27000009 	strcs	r0, [r0, -r9]
    59e0:	00000731 	andeq	r0, r0, r1, lsr r7
    59e4:	4129b402 			; <UNDEFINED> instruction: 0x4129b402
    59e8:	30000000 	andcc	r0, r0, r0
    59ec:	00667562 	rsbeq	r7, r6, r2, ror #10
    59f0:	2b40b402 	blcs	1032a00 <__Stack_Size+0x1031a00>
    59f4:	27000009 	strcs	r0, [r0, -r9]
    59f8:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    59fc:	5e4eb402 	cdppl	4, 4, cr11, cr14, cr2, {0}
    5a00:	00000000 	andeq	r0, r0, r0
    5a04:	006f0425 	rsbeq	r0, pc, r5, lsr #8
    5a08:	1d320000 	ldcne	0, cr0, [r2, #-0]
    5a0c:	3e000006 	cdpcc	0, 0, cr0, cr0, cr6, {0}
    5a10:	54080014 	strpl	r0, [r8], #-20	; 0xffffffec
    5a14:	02080014 	andeq	r0, r8, #20
    5a18:	8101007d 	tsthi	r1, sp, ror r0
    5a1c:	1a000009 	bne	5a48 <__Stack_Size+0x4a48>
    5a20:	0000062c 	andeq	r0, r0, ip, lsr #12
    5a24:	000023da 	ldrdeq	r2, [r0], -sl
    5a28:	000023d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5a2c:	00061d33 	andeq	r1, r6, r3, lsr sp
    5a30:	00144200 	andseq	r4, r4, r0, lsl #4
    5a34:	03880008 	orreq	r0, r8, #8
    5a38:	67010000 	strvs	r0, [r1, -r0]
    5a3c:	00097606 	andeq	r7, r9, r6, lsl #12
    5a40:	062c1a00 	strteq	r1, [ip], -r0, lsl #20
    5a44:	24160000 	ldrcs	r0, [r6], #-0
    5a48:	24140000 	ldrcs	r0, [r4], #-0
    5a4c:	24000000 	strcs	r0, [r0], #-0
    5a50:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
    5a54:	00084101 	andeq	r4, r8, r1, lsl #2
    5a58:	01340000 	teqeq	r4, r0
    5a5c:	0003dd01 	andeq	sp, r3, r1, lsl #26
    5a60:	0003dd00 	andeq	sp, r3, r0, lsl #26
    5a64:	06b30200 	ldrteq	r0, [r3], r0, lsl #4
    5a68:	ee010134 	mcr	1, 0, r0, cr1, cr4, {1}
    5a6c:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
    5a70:	02000004 	andeq	r0, r0, #4
    5a74:	013405c0 	teqeq	r4, r0, asr #11
    5a78:	0006a301 	andeq	sl, r6, r1, lsl #6
    5a7c:	0006a300 	andeq	sl, r6, r0, lsl #6
    5a80:	06290200 	strteq	r0, [r9], -r0, lsl #4
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__Stack_Size+0xf81c4c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__Stack_Size+0x2cd864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	13490026 	movtne	r0, #36902	; 0x9026
      34:	35050000 	strcc	r0, [r5, #-0]
      38:	00134900 	andseq	r4, r3, r0, lsl #18
      3c:	00240600 	eoreq	r0, r4, r0, lsl #12
      40:	0b3e0b0b 	bleq	f82c74 <__Stack_Size+0xf81c74>
      44:	00000803 	andeq	r0, r0, r3, lsl #16
      48:	03003407 	movweq	r3, #1031	; 0x407
      4c:	3b0b3a0e 	blcc	2ce88c <__Stack_Size+0x2cd88c>
      50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      54:	3c0c3f13 	stccc	15, cr3, [ip], {19}
      58:	0800000c 	stmdaeq	r0, {r2, r3}
      5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
      60:	0b3b0b3a 	bleq	ec2d50 <__Stack_Size+0xec1d50>
      64:	13490b39 	movtne	r0, #39737	; 0x9b39
      68:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
      6c:	01090000 	mrseq	r0, (UNDEF: 9)
      70:	01134901 	tsteq	r3, r1, lsl #18
      74:	0a000013 	beq	c8 <_Minimum_Stack_Size-0x38>
      78:	13490021 	movtne	r0, #36897	; 0x9021
      7c:	00000b2f 	andeq	r0, r0, pc, lsr #22
      80:	0b01130b 	bleq	44cb4 <__Stack_Size+0x43cb4>
      84:	3b0b3a0b 	blcc	2ce8b8 <__Stack_Size+0x2cd8b8>
      88:	010b3905 	tsteq	fp, r5, lsl #18
      8c:	0c000013 	stceq	0, cr0, [r0], {19}
      90:	0803000d 	stmdaeq	r3, {r0, r2, r3}
      94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      98:	13490b39 	movtne	r0, #39737	; 0x9b39
      9c:	00000a38 	andeq	r0, r0, r8, lsr sl
      a0:	03000d0d 	movweq	r0, #3341	; 0xd0d
      a4:	3b0b3a0e 	blcc	2ce8e4 <__Stack_Size+0x2cd8e4>
      a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      ac:	000a3813 	andeq	r3, sl, r3, lsl r8
      b0:	00160e00 	andseq	r0, r6, r0, lsl #28
      b4:	0b3a0e03 	bleq	e838c8 <__Stack_Size+0xe828c8>
      b8:	0b39053b 	bleq	e415ac <__Stack_Size+0xe405ac>
      bc:	00001349 	andeq	r1, r0, r9, asr #6
      c0:	3f012e0f 	svccc	0x00012e0f
      c4:	3a0e030c 	bcc	380cfc <__Stack_Size+0x37fcfc>
      c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
      d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      d4:	97064001 	strls	r4, [r6, -r1]
      d8:	13010c42 	movwne	r0, #7234	; 0x1c42
      dc:	0b100000 	bleq	4000e4 <__Stack_Size+0x3ff0e4>
      e0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
      e4:	00130101 	andseq	r0, r3, r1, lsl #2
      e8:	00341100 	eorseq	r1, r4, r0, lsl #2
      ec:	0b3a0e03 	bleq	e83900 <__Stack_Size+0xe82900>
      f0:	0b390b3b 	bleq	e42de4 <__Stack_Size+0xe41de4>
      f4:	06021349 	streq	r1, [r2], -r9, asr #6
      f8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
      fc:	010b1200 	mrseq	r1, R11_fiq
     100:	00001301 	andeq	r1, r0, r1, lsl #6
     104:	03003413 	movweq	r3, #1043	; 0x413
     108:	3b0b3a0e 	blcc	2ce948 <__Stack_Size+0x2cd948>
     10c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     110:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     114:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     118:	00001301 	andeq	r1, r0, r1, lsl #6
     11c:	31001d15 	tstcc	r0, r5, lsl sp
     120:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     124:	01110b42 	tsteq	r1, r2, asr #22
     128:	0b580112 	bleq	1600578 <__Stack_Size+0x15ff578>
     12c:	0b570b59 	bleq	15c2e98 <__Stack_Size+0x15c1e98>
     130:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     134:	11000182 	smlabbne	r0, r2, r1, r0
     138:	00133101 	andseq	r3, r3, r1, lsl #2
     13c:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     140:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     144:	0b3b0b3a 	bleq	ec2e34 <__Stack_Size+0xec1e34>
     148:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     14c:	01120111 	tsteq	r2, r1, lsl r1
     150:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     154:	0013010c 	andseq	r0, r3, ip, lsl #2
     158:	00051800 	andeq	r1, r5, r0, lsl #16
     15c:	0b3a0e03 	bleq	e83970 <__Stack_Size+0xe82970>
     160:	0b390b3b 	bleq	e42e54 <__Stack_Size+0xe41e54>
     164:	06021349 	streq	r1, [r2], -r9, asr #6
     168:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     16c:	002e1900 	eoreq	r1, lr, r0, lsl #18
     170:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     174:	0b3b0b3a 	bleq	ec2e64 <__Stack_Size+0xec1e64>
     178:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     17c:	01120111 	tsteq	r2, r1, lsl r1
     180:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     184:	1a00000c 	bne	1bc <_Minimum_Stack_Size+0xbc>
     188:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; d8 <_Minimum_Stack_Size-0x28>
     18c:	0b3a0e03 	bleq	e839a0 <__Stack_Size+0xe829a0>
     190:	0b390b3b 	bleq	e42e84 <__Stack_Size+0xe41e84>
     194:	00000c27 	andeq	r0, r0, r7, lsr #24
     198:	3f012e1b 	svccc	0x00012e1b
     19c:	3a0e030c 	bcc	380dd4 <__Stack_Size+0x37fdd4>
     1a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1a4:	2013490b 	andscs	r4, r3, fp, lsl #18
     1a8:	0013010b 	andseq	r0, r3, fp, lsl #2
     1ac:	00341c00 	eorseq	r1, r4, r0, lsl #24
     1b0:	0b3a0803 	bleq	e821c4 <__Stack_Size+0xe811c4>
     1b4:	0b390b3b 	bleq	e42ea8 <__Stack_Size+0xe41ea8>
     1b8:	00001349 	andeq	r1, r0, r9, asr #6
     1bc:	03002e1d 	movweq	r2, #3613	; 0xe1d
     1c0:	3b0b3a0e 	blcc	2cea00 <__Stack_Size+0x2cda00>
     1c4:	200b3905 	andcs	r3, fp, r5, lsl #18
     1c8:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
     1cc:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     1d0:	01120111 	tsteq	r2, r1, lsl r1
     1d4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     1d8:	0013010c 	andseq	r0, r3, ip, lsl #2
     1dc:	00341f00 	eorseq	r1, r4, r0, lsl #30
     1e0:	06021331 			; <UNDEFINED> instruction: 0x06021331
     1e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1e8:	00342000 	eorseq	r2, r4, r0
     1ec:	00001331 	andeq	r1, r0, r1, lsr r3
     1f0:	31011d21 	tstcc	r1, r1, lsr #26
     1f4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     1f8:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     1fc:	0b590b58 	bleq	1642f64 <__Stack_Size+0x1641f64>
     200:	00000b57 	andeq	r0, r0, r7, asr fp
     204:	55010b22 	strpl	r0, [r1, #-2850]	; 0xfffff4de
     208:	23000006 	movwcs	r0, #6
     20c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 15c <_Minimum_Stack_Size+0x5c>
     210:	40870c3c 	addmi	r0, r7, ip, lsr ip
     214:	3a0e030e 	bcc	380e54 <__Stack_Size+0x37fe54>
     218:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     21c:	0000000b 	andeq	r0, r0, fp
     220:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     224:	030b130e 	movweq	r1, #45838	; 0xb30e
     228:	110e1b0e 	tstne	lr, lr, lsl #22
     22c:	10011201 	andne	r1, r1, r1, lsl #4
     230:	02000006 	andeq	r0, r0, #6
     234:	0b0b0024 	bleq	2c02cc <__Stack_Size+0x2bf2cc>
     238:	0e030b3e 	vmoveq.16	d3[0], r0
     23c:	16030000 	strne	r0, [r3], -r0
     240:	3a0e0300 	bcc	380e48 <__Stack_Size+0x37fe48>
     244:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     248:	0013490b 	andseq	r4, r3, fp, lsl #18
     24c:	00350400 	eorseq	r0, r5, r0, lsl #8
     250:	00001349 	andeq	r1, r0, r9, asr #6
     254:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     258:	06000013 			; <UNDEFINED> instruction: 0x06000013
     25c:	0b0b0024 	bleq	2c02f4 <__Stack_Size+0x2bf2f4>
     260:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     264:	0f070000 	svceq	0x00070000
     268:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     26c:	08000013 	stmdaeq	r0, {r0, r1, r4}
     270:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     274:	00001301 	andeq	r1, r0, r1, lsl #6
     278:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
     27c:	0a000013 	beq	2d0 <_Minimum_Stack_Size+0x1d0>
     280:	0b0b0113 	bleq	2c06d4 <__Stack_Size+0x2bf6d4>
     284:	0b3b0b3a 	bleq	ec2f74 <__Stack_Size+0xec1f74>
     288:	13010b39 	movwne	r0, #6969	; 0x1b39
     28c:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     290:	3a0e0300 	bcc	380e98 <__Stack_Size+0x37fe98>
     294:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     298:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     29c:	0c00000a 	stceq	0, cr0, [r0], {10}
     2a0:	0b3e0104 	bleq	f806b8 <__Stack_Size+0xf7f6b8>
     2a4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     2a8:	0b3b0b3a 	bleq	ec2f98 <__Stack_Size+0xec1f98>
     2ac:	13010b39 	movwne	r0, #6969	; 0x1b39
     2b0:	280d0000 	stmdacs	sp, {}	; <UNPREDICTABLE>
     2b4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     2b8:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
     2bc:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     2c0:	00000b1c 	andeq	r0, r0, ip, lsl fp
     2c4:	0b01130f 	bleq	44f08 <__Stack_Size+0x43f08>
     2c8:	3b0b3a05 	blcc	2ceae4 <__Stack_Size+0x2cdae4>
     2cc:	010b390b 	tsteq	fp, fp, lsl #18
     2d0:	10000013 	andne	r0, r0, r3, lsl r0
     2d4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     2d8:	0b3b0b3a 	bleq	ec2fc8 <__Stack_Size+0xec1fc8>
     2dc:	13490b39 	movtne	r0, #39737	; 0x9b39
     2e0:	00000a38 	andeq	r0, r0, r8, lsr sl
     2e4:	49010111 	stmdbmi	r1, {r0, r4, r8}
     2e8:	00130113 	andseq	r0, r3, r3, lsl r1
     2ec:	00211200 	eoreq	r1, r1, r0, lsl #4
     2f0:	0b2f1349 	bleq	bc501c <__Stack_Size+0xbc401c>
     2f4:	21130000 	tstcs	r3, r0
     2f8:	2f134900 	svccs	0x00134900
     2fc:	14000005 	strne	r0, [r0], #-5
     300:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     304:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     308:	13490b39 	movtne	r0, #39737	; 0x9b39
     30c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     310:	34150000 	ldrcc	r0, [r5], #-0
     314:	3a0e0300 	bcc	380f1c <__Stack_Size+0x37ff1c>
     318:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     31c:	3f13490b 	svccc	0x0013490b
     320:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     324:	01131600 	tsteq	r3, r0, lsl #12
     328:	0b3a0b0b 	bleq	e82f5c <__Stack_Size+0xe81f5c>
     32c:	0b39053b 	bleq	e41820 <__Stack_Size+0xe40820>
     330:	00001301 	andeq	r1, r0, r1, lsl #6
     334:	03000d17 	movweq	r0, #3351	; 0xd17
     338:	3b0b3a08 	blcc	2ceb60 <__Stack_Size+0x2cdb60>
     33c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     340:	000a3813 	andeq	r3, sl, r3, lsl r8
     344:	000d1800 	andeq	r1, sp, r0, lsl #16
     348:	0b3a0e03 	bleq	e83b5c <__Stack_Size+0xe82b5c>
     34c:	0b39053b 	bleq	e41840 <__Stack_Size+0xe40840>
     350:	0a381349 	beq	e0507c <__Stack_Size+0xe0407c>
     354:	16190000 	ldrne	r0, [r9], -r0
     358:	3a0e0300 	bcc	380f60 <__Stack_Size+0x37ff60>
     35c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     360:	0013490b 	andseq	r4, r3, fp, lsl #18
     364:	000d1a00 	andeq	r1, sp, r0, lsl #20
     368:	0b3a0e03 	bleq	e83b7c <__Stack_Size+0xe82b7c>
     36c:	0b390b3b 	bleq	e43060 <__Stack_Size+0xe42060>
     370:	0b0b1349 	bleq	2c509c <__Stack_Size+0x2c409c>
     374:	0b0c0b0d 	bleq	302fb0 <__Stack_Size+0x301fb0>
     378:	00000a38 	andeq	r0, r0, r8, lsr sl
     37c:	0b01171b 	bleq	45ff0 <__Stack_Size+0x44ff0>
     380:	3b0b3a0b 	blcc	2cebb4 <__Stack_Size+0x2cdbb4>
     384:	010b390b 	tsteq	fp, fp, lsl #18
     388:	1c000013 	stcne	0, cr0, [r0], {19}
     38c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     390:	0b3b0b3a 	bleq	ec3080 <__Stack_Size+0xec2080>
     394:	13490b39 	movtne	r0, #39737	; 0x9b39
     398:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
     39c:	00134900 	andseq	r4, r3, r0, lsl #18
     3a0:	000d1e00 	andeq	r1, sp, r0, lsl #28
     3a4:	0a381349 	beq	e050d0 <__Stack_Size+0xe040d0>
     3a8:	341f0000 	ldrcc	r0, [pc], #-0	; 3b0 <_Minimum_Stack_Size+0x2b0>
     3ac:	3a0e0300 	bcc	380fb4 <__Stack_Size+0x37ffb4>
     3b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3b4:	3f13490b 	svccc	0x0013490b
     3b8:	000a020c 	andeq	r0, sl, ip, lsl #4
     3bc:	00342000 	eorseq	r2, r4, r0
     3c0:	0b3a0e03 	bleq	e83bd4 <__Stack_Size+0xe82bd4>
     3c4:	0b390b3b 	bleq	e430b8 <__Stack_Size+0xe420b8>
     3c8:	0a021349 	beq	850f4 <__Stack_Size+0x840f4>
     3cc:	0d210000 	stceq	0, cr0, [r1, #-0]
     3d0:	3a0e0300 	bcc	380fd8 <__Stack_Size+0x37ffd8>
     3d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3d8:	0b13490b 	bleq	4d280c <__Stack_Size+0x4d180c>
     3dc:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
     3e0:	000a380b 	andeq	r3, sl, fp, lsl #16
     3e4:	01172200 	tsteq	r7, r0, lsl #4
     3e8:	0b3a0b0b 	bleq	e8301c <__Stack_Size+0xe8201c>
     3ec:	0b39053b 	bleq	e418e0 <__Stack_Size+0xe408e0>
     3f0:	00001301 	andeq	r1, r0, r1, lsl #6
     3f4:	03000d23 	movweq	r0, #3363	; 0xd23
     3f8:	3b0b3a0e 	blcc	2cec38 <__Stack_Size+0x2cdc38>
     3fc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     400:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     404:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 354 <_Minimum_Stack_Size+0x254>
     408:	0b3a0e03 	bleq	e83c1c <__Stack_Size+0xe82c1c>
     40c:	0b39053b 	bleq	e41900 <__Stack_Size+0xe40900>
     410:	13490c27 	movtne	r0, #39975	; 0x9c27
     414:	01120111 	tsteq	r2, r1, lsl r1
     418:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     41c:	0013010c 	andseq	r0, r3, ip, lsl #2
     420:	00052500 	andeq	r2, r5, r0, lsl #10
     424:	0b3a0803 	bleq	e82438 <__Stack_Size+0xe81438>
     428:	0b39053b 	bleq	e4191c <__Stack_Size+0xe4091c>
     42c:	06021349 	streq	r1, [r2], -r9, asr #6
     430:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     434:	00342600 	eorseq	r2, r4, r0, lsl #12
     438:	0b3a0e03 	bleq	e83c4c <__Stack_Size+0xe82c4c>
     43c:	0b39053b 	bleq	e41930 <__Stack_Size+0xe40930>
     440:	06021349 	streq	r1, [r2], -r9, asr #6
     444:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     448:	00342700 	eorseq	r2, r4, r0, lsl #14
     44c:	0b3a0803 	bleq	e82460 <__Stack_Size+0xe81460>
     450:	0b39053b 	bleq	e41944 <__Stack_Size+0xe40944>
     454:	06021349 	streq	r1, [r2], -r9, asr #6
     458:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     45c:	010b2800 	tsteq	fp, r0, lsl #16
     460:	00000655 	andeq	r0, r0, r5, asr r6
     464:	3f012e29 	svccc	0x00012e29
     468:	3a0e030c 	bcc	3810a0 <__Stack_Size+0x3800a0>
     46c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     470:	110c270b 	tstne	ip, fp, lsl #14
     474:	40011201 	andmi	r1, r1, r1, lsl #4
     478:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     47c:	00001301 	andeq	r1, r0, r1, lsl #6
     480:	0300052a 	movweq	r0, #1322	; 0x52a
     484:	3b0b3a08 	blcc	2cecac <__Stack_Size+0x2cdcac>
     488:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     48c:	000a0213 	andeq	r0, sl, r3, lsl r2
     490:	00052b00 	andeq	r2, r5, r0, lsl #22
     494:	0b3a0e03 	bleq	e83ca8 <__Stack_Size+0xe82ca8>
     498:	0b39053b 	bleq	e4198c <__Stack_Size+0xe4098c>
     49c:	0a021349 	beq	851c8 <__Stack_Size+0x841c8>
     4a0:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     4a4:	030c3f01 	movweq	r3, #52993	; 0xcf01
     4a8:	3b0b3a0e 	blcc	2cece8 <__Stack_Size+0x2cdce8>
     4ac:	110b3905 	tstne	fp, r5, lsl #18
     4b0:	40011201 	andmi	r1, r1, r1, lsl #4
     4b4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     4b8:	00001301 	andeq	r1, r0, r1, lsl #6
     4bc:	55010b2d 	strpl	r0, [r1, #-2861]	; 0xfffff4d3
     4c0:	00130106 	andseq	r0, r3, r6, lsl #2
     4c4:	82892e00 	addhi	r2, r9, #0, 28
     4c8:	01110101 	tsteq	r1, r1, lsl #2
     4cc:	00001301 	andeq	r1, r0, r1, lsl #6
     4d0:	01828a2f 	orreq	r8, r2, pc, lsr #20
     4d4:	910a0200 	mrsls	r0, R10_fiq
     4d8:	00000a42 	andeq	r0, r0, r2, asr #20
     4dc:	01828930 	orreq	r8, r2, r0, lsr r9
     4e0:	00011101 	andeq	r1, r1, r1, lsl #2
     4e4:	82893100 	addhi	r3, r9, #0, 2
     4e8:	01110001 	tsteq	r1, r1
     4ec:	00001331 	andeq	r1, r0, r1, lsr r3
     4f0:	01828932 	orreq	r8, r2, r2, lsr r9
     4f4:	31011101 	tstcc	r1, r1, lsl #2
     4f8:	00130113 	andseq	r0, r3, r3, lsl r1
     4fc:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
     500:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     504:	0b3b0b3a 	bleq	ec31f4 <__Stack_Size+0xec21f4>
     508:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     50c:	01120111 	tsteq	r2, r1, lsl r1
     510:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     514:	0013010c 	andseq	r0, r3, ip, lsl #2
     518:	00053400 	andeq	r3, r5, r0, lsl #8
     51c:	0b3a0e03 	bleq	e83d30 <__Stack_Size+0xe82d30>
     520:	0b390b3b 	bleq	e43214 <__Stack_Size+0xe42214>
     524:	06021349 	streq	r1, [r2], -r9, asr #6
     528:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     52c:	00343500 	eorseq	r3, r4, r0, lsl #10
     530:	0b3a0e03 	bleq	e83d44 <__Stack_Size+0xe82d44>
     534:	0b390b3b 	bleq	e43228 <__Stack_Size+0xe42228>
     538:	06021349 	streq	r1, [r2], -r9, asr #6
     53c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     540:	00343600 	eorseq	r3, r4, r0, lsl #12
     544:	0b3a0803 	bleq	e82558 <__Stack_Size+0xe81558>
     548:	0b390b3b 	bleq	e4323c <__Stack_Size+0xe4223c>
     54c:	06021349 	streq	r1, [r2], -r9, asr #6
     550:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     554:	012e3700 			; <UNDEFINED> instruction: 0x012e3700
     558:	0b3a0e03 	bleq	e83d6c <__Stack_Size+0xe82d6c>
     55c:	0b390b3b 	bleq	e43250 <__Stack_Size+0xe42250>
     560:	01110c27 	tsteq	r1, r7, lsr #24
     564:	06400112 			; <UNDEFINED> instruction: 0x06400112
     568:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     56c:	38000013 	stmdacc	r0, {r0, r1, r4}
     570:	0111010b 	tsteq	r1, fp, lsl #2
     574:	13010112 	movwne	r0, #4370	; 0x1112
     578:	89390000 	ldmdbhi	r9!, {}	; <UNPREDICTABLE>
     57c:	11010182 	smlabbne	r1, r2, r1, r0
     580:	00133101 	andseq	r3, r3, r1, lsl #2
     584:	011d3a00 	tsteq	sp, r0, lsl #20
     588:	01521331 	cmpeq	r2, r1, lsr r3
     58c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     590:	58011201 	stmdapl	r1, {r0, r9, ip}
     594:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     598:	0013010b 	andseq	r0, r3, fp, lsl #2
     59c:	00053b00 	andeq	r3, r5, r0, lsl #22
     5a0:	06021331 			; <UNDEFINED> instruction: 0x06021331
     5a4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     5a8:	011d3c00 	tsteq	sp, r0, lsl #24
     5ac:	01521331 	cmpeq	r2, r1, lsr r3
     5b0:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
     5b4:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     5b8:	010b570b 	tsteq	fp, fp, lsl #14
     5bc:	3d000013 	stccc	0, cr0, [r0, #-76]	; 0xffffffb4
     5c0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     5c4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     5c8:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     5cc:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     5d0:	3e00000b 	cdpcc	0, 0, cr0, cr0, cr11, {0}
     5d4:	0b0b000f 	bleq	2c0618 <__Stack_Size+0x2bf618>
     5d8:	263f0000 	ldrtcs	r0, [pc], -r0
     5dc:	40000000 	andmi	r0, r0, r0
     5e0:	0e03012e 	adfeqsp	f0, f3, #0.5
     5e4:	0b3b0b3a 	bleq	ec32d4 <__Stack_Size+0xec22d4>
     5e8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5ec:	13010b20 	movwne	r0, #6944	; 0x1b20
     5f0:	05410000 	strbeq	r0, [r1, #-0]
     5f4:	3a080300 	bcc	2011fc <__Stack_Size+0x2001fc>
     5f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5fc:	0013490b 	andseq	r4, r3, fp, lsl #18
     600:	00054200 	andeq	r4, r5, r0, lsl #4
     604:	0b3a0e03 	bleq	e83e18 <__Stack_Size+0xe82e18>
     608:	0b390b3b 	bleq	e432fc <__Stack_Size+0xe422fc>
     60c:	00001349 	andeq	r1, r0, r9, asr #6
     610:	3f012e43 	svccc	0x00012e43
     614:	3a0e030c 	bcc	38124c <__Stack_Size+0x38024c>
     618:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     61c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     620:	970a4001 	strls	r4, [sl, -r1]
     624:	13010c42 	movwne	r0, #7234	; 0x1c42
     628:	0b440000 	bleq	1100630 <__Stack_Size+0x10ff630>
     62c:	00130101 	andseq	r0, r3, r1, lsl #2
     630:	00344500 	eorseq	r4, r4, r0, lsl #10
     634:	0b3a0e03 	bleq	e83e48 <__Stack_Size+0xe82e48>
     638:	0b390b3b 	bleq	e4332c <__Stack_Size+0xe4232c>
     63c:	00001349 	andeq	r1, r0, r9, asr #6
     640:	31011d46 	tstcc	r1, r6, asr #26
     644:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     648:	01110b42 	tsteq	r1, r2, asr #22
     64c:	0b580112 	bleq	1600a9c <__Stack_Size+0x15ffa9c>
     650:	0b570b59 	bleq	15c33bc <__Stack_Size+0x15c23bc>
     654:	2e470000 	cdpcs	0, 4, cr0, cr7, cr0, {0}
     658:	3a0e0301 	bcc	381264 <__Stack_Size+0x380264>
     65c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     660:	110c270b 	tstne	ip, fp, lsl #14
     664:	40011201 	andmi	r1, r1, r1, lsl #4
     668:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     66c:	00001301 	andeq	r1, r0, r1, lsl #6
     670:	03000548 	movweq	r0, #1352	; 0x548
     674:	3b0b3a0e 	blcc	2ceeb4 <__Stack_Size+0x2cdeb4>
     678:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     67c:	000a0213 	andeq	r0, sl, r3, lsl r2
     680:	012e4900 			; <UNDEFINED> instruction: 0x012e4900
     684:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     688:	0b3b0b3a 	bleq	ec3378 <__Stack_Size+0xec2378>
     68c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     690:	01111349 	tsteq	r1, r9, asr #6
     694:	0a400112 	beq	1000ae4 <__Stack_Size+0xfffae4>
     698:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     69c:	4a000013 	bmi	6f0 <_Minimum_Stack_Size+0x5f0>
     6a0:	08030005 	stmdaeq	r3, {r0, r2}
     6a4:	0b3b0b3a 	bleq	ec3394 <__Stack_Size+0xec2394>
     6a8:	13490b39 	movtne	r0, #39737	; 0x9b39
     6ac:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     6b0:	4b000006 	blmi	6d0 <_Minimum_Stack_Size+0x5d0>
     6b4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 604 <_Minimum_Stack_Size+0x504>
     6b8:	0b3a0e03 	bleq	e83ecc <__Stack_Size+0xe82ecc>
     6bc:	0b390b3b 	bleq	e433b0 <__Stack_Size+0xe423b0>
     6c0:	2e4c0000 	cdpcs	0, 4, cr0, cr12, cr0, {0}
     6c4:	030c3f00 	movweq	r3, #52992	; 0xcf00
     6c8:	3b0b3a0e 	blcc	2cef08 <__Stack_Size+0x2cdf08>
     6cc:	200b390b 	andcs	r3, fp, fp, lsl #18
     6d0:	4d00000b 	stcmi	0, cr0, [r0, #-44]	; 0xffffffd4
     6d4:	0e03012e 	adfeqsp	f0, f3, #0.5
     6d8:	0b3b0b3a 	bleq	ec33c8 <__Stack_Size+0xec23c8>
     6dc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     6e0:	0b201349 	bleq	80540c <__Stack_Size+0x80440c>
     6e4:	00001301 	andeq	r1, r0, r1, lsl #6
     6e8:	03012e4e 	movweq	r2, #7758	; 0x1e4e
     6ec:	3b0b3a0e 	blcc	2cef2c <__Stack_Size+0x2cdf2c>
     6f0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     6f4:	010b200c 	tsteq	fp, ip
     6f8:	4f000013 	svcmi	0x00000013
     6fc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     700:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     704:	13490b39 	movtne	r0, #39737	; 0x9b39
     708:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
     70c:	11133100 	tstne	r3, r0, lsl #2
     710:	40011201 	andmi	r1, r1, r1, lsl #4
     714:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     718:	2e510000 	cdpcs	0, 5, cr0, cr1, cr0, {0}
     71c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     720:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     724:	0b3a0e03 	bleq	e83f38 <__Stack_Size+0xe82f38>
     728:	0b390b3b 	bleq	e4341c <__Stack_Size+0xe4241c>
     72c:	01000000 	mrseq	r0, (UNDEF: 0)
     730:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     734:	0e030b13 	vmoveq.32	d3[0], r0
     738:	01110e1b 	tsteq	r1, fp, lsl lr
     73c:	06100112 			; <UNDEFINED> instruction: 0x06100112
     740:	24020000 	strcs	r0, [r2], #-0
     744:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     748:	000e030b 	andeq	r0, lr, fp, lsl #6
     74c:	00160300 	andseq	r0, r6, r0, lsl #6
     750:	0b3a0e03 	bleq	e83f64 <__Stack_Size+0xe82f64>
     754:	0b390b3b 	bleq	e43448 <__Stack_Size+0xe42448>
     758:	00001349 	andeq	r1, r0, r9, asr #6
     75c:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     760:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     764:	13490026 	movtne	r0, #36902	; 0x9026
     768:	24060000 	strcs	r0, [r6], #-0
     76c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     770:	0008030b 	andeq	r0, r8, fp, lsl #6
     774:	01130700 	tsteq	r3, r0, lsl #14
     778:	0b3a0b0b 	bleq	e833ac <__Stack_Size+0xe823ac>
     77c:	0b390b3b 	bleq	e43470 <__Stack_Size+0xe42470>
     780:	00001301 	andeq	r1, r0, r1, lsl #6
     784:	03000d08 	movweq	r0, #3336	; 0xd08
     788:	3b0b3a0e 	blcc	2cefc8 <__Stack_Size+0x2cdfc8>
     78c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     790:	000a3813 	andeq	r3, sl, r3, lsl r8
     794:	01040900 	tsteq	r4, r0, lsl #18
     798:	0b0b0b3e 	bleq	2c3498 <__Stack_Size+0x2c2498>
     79c:	0b3a1349 	bleq	e854c8 <__Stack_Size+0xe844c8>
     7a0:	0b390b3b 	bleq	e43494 <__Stack_Size+0xe42494>
     7a4:	00001301 	andeq	r1, r0, r1, lsl #6
     7a8:	0300280a 	movweq	r2, #2058	; 0x80a
     7ac:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     7b0:	00280b00 	eoreq	r0, r8, r0, lsl #22
     7b4:	0b1c0e03 	bleq	703fc8 <__Stack_Size+0x702fc8>
     7b8:	130c0000 	movwne	r0, #49152	; 0xc000
     7bc:	3a050b01 	bcc	1433c8 <__Stack_Size+0x1423c8>
     7c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     7c8:	000d0d00 	andeq	r0, sp, r0, lsl #26
     7cc:	0b3a0803 	bleq	e827e0 <__Stack_Size+0xe817e0>
     7d0:	0b390b3b 	bleq	e434c4 <__Stack_Size+0xe424c4>
     7d4:	0a381349 	beq	e05500 <__Stack_Size+0xe04500>
     7d8:	010e0000 	mrseq	r0, (UNDEF: 14)
     7dc:	01134901 	tsteq	r3, r1, lsl #18
     7e0:	0f000013 	svceq	0x00000013
     7e4:	13490021 	movtne	r0, #36897	; 0x9021
     7e8:	00000b2f 	andeq	r0, r0, pc, lsr #22
     7ec:	49002110 	stmdbmi	r0, {r4, r8, sp}
     7f0:	00052f13 	andeq	r2, r5, r3, lsl pc
     7f4:	00341100 	eorseq	r1, r4, r0, lsl #2
     7f8:	0b3a0e03 	bleq	e8400c <__Stack_Size+0xe8300c>
     7fc:	0b39053b 	bleq	e41cf0 <__Stack_Size+0xe40cf0>
     800:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 6e4 <_Minimum_Stack_Size+0x5e4>
     804:	00000c3c 	andeq	r0, r0, ip, lsr ip
     808:	03003412 	movweq	r3, #1042	; 0x412
     80c:	3b0b3a0e 	blcc	2cf04c <__Stack_Size+0x2ce04c>
     810:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     814:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     818:	1300000c 	movwne	r0, #12
     81c:	0b0b0113 	bleq	2c0c70 <__Stack_Size+0x2bfc70>
     820:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     824:	13010b39 	movwne	r0, #6969	; 0x1b39
     828:	0d140000 	ldceq	0, cr0, [r4, #-0]
     82c:	3a080300 	bcc	201434 <__Stack_Size+0x200434>
     830:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     834:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     838:	1500000a 	strne	r0, [r0, #-10]
     83c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     840:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     844:	13490b39 	movtne	r0, #39737	; 0x9b39
     848:	00000a38 	andeq	r0, r0, r8, lsr sl
     84c:	03001616 	movweq	r1, #1558	; 0x616
     850:	3b0b3a0e 	blcc	2cf090 <__Stack_Size+0x2ce090>
     854:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     858:	17000013 	smladne	r0, r3, r0, r0
     85c:	0b0b0117 	bleq	2c0cc0 <__Stack_Size+0x2bfcc0>
     860:	0b3b0b3a 	bleq	ec3550 <__Stack_Size+0xec2550>
     864:	13010b39 	movwne	r0, #6969	; 0x1b39
     868:	0d180000 	ldceq	0, cr0, [r8, #-0]
     86c:	3a0e0300 	bcc	381474 <__Stack_Size+0x380474>
     870:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     874:	0013490b 	andseq	r4, r3, fp, lsl #18
     878:	000f1900 	andeq	r1, pc, r0, lsl #18
     87c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     880:	0301131a 	movweq	r1, #4890	; 0x131a
     884:	3a0b0b0e 	bcc	2c34c4 <__Stack_Size+0x2c24c4>
     888:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     88c:	0013010b 	andseq	r0, r3, fp, lsl #2
     890:	000f1b00 	andeq	r1, pc, r0, lsl #22
     894:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     898:	131c0000 	tstne	ip, #0
     89c:	0b0e0301 	bleq	3814a8 <__Stack_Size+0x3804a8>
     8a0:	3b0b3a05 	blcc	2cf0bc <__Stack_Size+0x2ce0bc>
     8a4:	010b390b 	tsteq	fp, fp, lsl #18
     8a8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     8ac:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
     8b0:	151e0000 	ldrne	r0, [lr, #-0]
     8b4:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
     8b8:	00130113 	andseq	r0, r3, r3, lsl r1
     8bc:	00051f00 	andeq	r1, r5, r0, lsl #30
     8c0:	00001349 	andeq	r1, r0, r9, asr #6
     8c4:	03011320 	movweq	r1, #4896	; 0x1320
     8c8:	3a050b0e 	bcc	143508 <__Stack_Size+0x142508>
     8cc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8d0:	0013010b 	andseq	r0, r3, fp, lsl #2
     8d4:	01132100 	tsteq	r3, r0, lsl #2
     8d8:	0b0b0e03 	bleq	2c40ec <__Stack_Size+0x2c30ec>
     8dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8e0:	13010b39 	movwne	r0, #6969	; 0x1b39
     8e4:	17220000 	strne	r0, [r2, -r0]!
     8e8:	3a0b0b01 	bcc	2c34f4 <__Stack_Size+0x2c24f4>
     8ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8f0:	0013010b 	andseq	r0, r3, fp, lsl #2
     8f4:	000d2300 	andeq	r2, sp, r0, lsl #6
     8f8:	0b3a0e03 	bleq	e8410c <__Stack_Size+0xe8310c>
     8fc:	0b39053b 	bleq	e41df0 <__Stack_Size+0xe40df0>
     900:	00001349 	andeq	r1, r0, r9, asr #6
     904:	03001324 	movweq	r1, #804	; 0x324
     908:	000c3c0e 	andeq	r3, ip, lr, lsl #24
     90c:	01152500 	tsteq	r5, r0, lsl #10
     910:	13010c27 	movwne	r0, #7207	; 0x1c27
     914:	34260000 	strtcc	r0, [r6], #-0
     918:	3a0e0300 	bcc	381520 <__Stack_Size+0x380520>
     91c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     920:	3f13490b 	svccc	0x0013490b
     924:	000a020c 	andeq	r0, sl, ip, lsl #4
     928:	00342700 	eorseq	r2, r4, r0, lsl #14
     92c:	0b3a0e03 	bleq	e84140 <__Stack_Size+0xe83140>
     930:	0b390b3b 	bleq	e43624 <__Stack_Size+0xe42624>
     934:	0a021349 	beq	85660 <__Stack_Size+0x84660>
     938:	34280000 	strtcc	r0, [r8], #-0
     93c:	3a0e0300 	bcc	381544 <__Stack_Size+0x380544>
     940:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     944:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
     948:	0a020b01 	beq	83554 <__Stack_Size+0x82554>
     94c:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     950:	030c3f01 	movweq	r3, #52993	; 0xcf01
     954:	3b0b3a0e 	blcc	2cf194 <__Stack_Size+0x2ce194>
     958:	110b3905 	tstne	fp, r5, lsl #18
     95c:	40011201 	andmi	r1, r1, r1, lsl #4
     960:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     964:	00001301 	andeq	r1, r0, r1, lsl #6
     968:	0182892a 	orreq	r8, r2, sl, lsr #18
     96c:	95011100 	strls	r1, [r1, #-256]	; 0xffffff00
     970:	13310c42 	teqne	r1, #16896	; 0x4200
     974:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     978:	030c3f01 	movweq	r3, #52993	; 0xcf01
     97c:	3b0b3a0e 	blcc	2cf1bc <__Stack_Size+0x2ce1bc>
     980:	110b3905 	tstne	fp, r5, lsl #18
     984:	40011201 	andmi	r1, r1, r1, lsl #4
     988:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     98c:	00001301 	andeq	r1, r0, r1, lsl #6
     990:	31011d2c 	tstcc	r1, ip, lsr #26
     994:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     998:	01110b42 	tsteq	r1, r2, asr #22
     99c:	0b580112 	bleq	1600dec <__Stack_Size+0x15ffdec>
     9a0:	0b570559 	bleq	15c1f0c <__Stack_Size+0x15c0f0c>
     9a4:	00001301 	andeq	r1, r0, r1, lsl #6
     9a8:	11010b2d 	tstne	r1, sp, lsr #22
     9ac:	00011201 	andeq	r1, r1, r1, lsl #4
     9b0:	001d2e00 	andseq	r2, sp, r0, lsl #28
     9b4:	01521331 	cmpeq	r2, r1, lsr r3
     9b8:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
     9bc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     9c0:	000b570b 	andeq	r5, fp, fp, lsl #14
     9c4:	001d2f00 	andseq	r2, sp, r0, lsl #30
     9c8:	01521331 	cmpeq	r2, r1, lsr r3
     9cc:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     9d0:	58011201 	stmdapl	r1, {r0, r9, ip}
     9d4:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     9d8:	3000000b 	andcc	r0, r0, fp
     9dc:	00018289 	andeq	r8, r1, r9, lsl #5
     9e0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9e4:	0b310000 	bleq	c409ec <__Stack_Size+0xc3f9ec>
     9e8:	55133101 	ldrpl	r3, [r3, #-257]	; 0xfffffeff
     9ec:	00130106 	andseq	r0, r3, r6, lsl #2
     9f0:	00343200 	eorseq	r3, r4, r0, lsl #4
     9f4:	06021331 			; <UNDEFINED> instruction: 0x06021331
     9f8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     9fc:	011d3300 	tsteq	sp, r0, lsl #6
     a00:	01521331 	cmpeq	r2, r1, lsr r3
     a04:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     a08:	58011201 	stmdapl	r1, {r0, r9, ip}
     a0c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     a10:	0013010b 	andseq	r0, r3, fp, lsl #2
     a14:	00053400 	andeq	r3, r5, r0, lsl #8
     a18:	06021331 			; <UNDEFINED> instruction: 0x06021331
     a1c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a20:	82893500 	addhi	r3, r9, #0, 10
     a24:	01110101 	tsteq	r1, r1, lsl #2
     a28:	00001331 	andeq	r1, r0, r1, lsr r3
     a2c:	01828a36 	orreq	r8, r2, r6, lsr sl
     a30:	910a0200 	mrsls	r0, R10_fiq
     a34:	00000a42 	andeq	r0, r0, r2, asr #20
     a38:	3f012e37 	svccc	0x00012e37
     a3c:	3a0e030c 	bcc	381674 <__Stack_Size+0x380674>
     a40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a44:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a48:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a4c:	97064001 	strls	r4, [r6, -r1]
     a50:	13010c42 	movwne	r0, #7234	; 0x1c42
     a54:	05380000 	ldreq	r0, [r8, #-0]!
     a58:	3a080300 	bcc	201660 <__Stack_Size+0x200660>
     a5c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a60:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a64:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a68:	05390000 	ldreq	r0, [r9, #-0]!
     a6c:	3a0e0300 	bcc	381674 <__Stack_Size+0x380674>
     a70:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a74:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a78:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a7c:	893a0000 	ldmdbhi	sl!, {}	; <UNPREDICTABLE>
     a80:	11010182 	smlabbne	r1, r2, r1, r0
     a84:	01133101 	tsteq	r3, r1, lsl #2
     a88:	3b000013 	blcc	adc <_Minimum_Stack_Size+0x9dc>
     a8c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 9dc <_Minimum_Stack_Size+0x8dc>
     a90:	0b3a0e03 	bleq	e842a4 <__Stack_Size+0xe832a4>
     a94:	0b39053b 	bleq	e41f88 <__Stack_Size+0xe40f88>
     a98:	01110c27 	tsteq	r1, r7, lsr #24
     a9c:	0a400112 	beq	1000eec <__Stack_Size+0xfffeec>
     aa0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     aa4:	3c000013 	stccc	0, cr0, [r0], {19}
     aa8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     aac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ab0:	13490b39 	movtne	r0, #39737	; 0x9b39
     ab4:	00000a02 	andeq	r0, r0, r2, lsl #20
     ab8:	0000263d 	andeq	r2, r0, sp, lsr r6
     abc:	012e3e00 			; <UNDEFINED> instruction: 0x012e3e00
     ac0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ac4:	0b3b0b3a 	bleq	ec37b4 <__Stack_Size+0xec27b4>
     ac8:	01110b39 	tsteq	r1, r9, lsr fp
     acc:	0a400112 	beq	1000f1c <__Stack_Size+0xffff1c>
     ad0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ad4:	3f000013 	svccc	0x00000013
     ad8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a28 <_Minimum_Stack_Size+0x928>
     adc:	0b3a0e03 	bleq	e842f0 <__Stack_Size+0xe832f0>
     ae0:	0b390b3b 	bleq	e437d4 <__Stack_Size+0xe427d4>
     ae4:	01120111 	tsteq	r2, r1, lsl r1
     ae8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     aec:	4000000c 	andmi	r0, r0, ip
     af0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; a40 <_Minimum_Stack_Size+0x940>
     af4:	0b3a0e03 	bleq	e84308 <__Stack_Size+0xe83308>
     af8:	0b390b3b 	bleq	e437ec <__Stack_Size+0xe427ec>
     afc:	13490c27 	movtne	r0, #39975	; 0x9c27
     b00:	13010b20 	movwne	r0, #6944	; 0x1b20
     b04:	05410000 	strbeq	r0, [r1, #-0]
     b08:	3a080300 	bcc	201710 <__Stack_Size+0x200710>
     b0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b10:	0013490b 	andseq	r4, r3, fp, lsl #18
     b14:	00054200 	andeq	r4, r5, r0, lsl #4
     b18:	0b3a0e03 	bleq	e8432c <__Stack_Size+0xe8332c>
     b1c:	0b390b3b 	bleq	e43810 <__Stack_Size+0xe42810>
     b20:	00001349 	andeq	r1, r0, r9, asr #6
     b24:	00010b43 	andeq	r0, r1, r3, asr #22
     b28:	00344400 	eorseq	r4, r4, r0, lsl #8
     b2c:	0b3a0e03 	bleq	e84340 <__Stack_Size+0xe83340>
     b30:	0b390b3b 	bleq	e43824 <__Stack_Size+0xe42824>
     b34:	00001349 	andeq	r1, r0, r9, asr #6
     b38:	3f012e45 	svccc	0x00012e45
     b3c:	3a0e030c 	bcc	381774 <__Stack_Size+0x380774>
     b40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b44:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     b48:	97064001 	strls	r4, [r6, -r1]
     b4c:	13010c42 	movwne	r0, #7234	; 0x1c42
     b50:	34460000 	strbcc	r0, [r6], #-0
     b54:	3a080300 	bcc	20175c <__Stack_Size+0x20075c>
     b58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b5c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b60:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     b64:	34470000 	strbcc	r0, [r7], #-0
     b68:	3a0e0300 	bcc	381770 <__Stack_Size+0x380770>
     b6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b74:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     b78:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
     b7c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     b80:	3b0b3a0e 	blcc	2cf3c0 <__Stack_Size+0x2ce3c0>
     b84:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     b88:	1113490c 	tstne	r3, ip, lsl #18
     b8c:	40011201 	andmi	r1, r1, r1, lsl #4
     b90:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     b94:	00001301 	andeq	r1, r0, r1, lsl #6
     b98:	03000549 	movweq	r0, #1353	; 0x549
     b9c:	3b0b3a0e 	blcc	2cf3dc <__Stack_Size+0x2ce3dc>
     ba0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ba4:	b7060213 	smladlt	r6, r3, r2, r0
     ba8:	00000642 	andeq	r0, r0, r2, asr #12
     bac:	03012e4a 	movweq	r2, #7754	; 0x1e4a
     bb0:	3b0b3a0e 	blcc	2cf3f0 <__Stack_Size+0x2ce3f0>
     bb4:	200b390b 	andcs	r3, fp, fp, lsl #18
     bb8:	0013010b 	andseq	r0, r3, fp, lsl #2
     bbc:	002e4b00 	eoreq	r4, lr, r0, lsl #22
     bc0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     bc4:	0b3b0b3a 	bleq	ec38b4 <__Stack_Size+0xec28b4>
     bc8:	13490b39 	movtne	r0, #39737	; 0x9b39
     bcc:	00000b20 	andeq	r0, r0, r0, lsr #22
     bd0:	01010b4c 	tsteq	r1, ip, asr #22
     bd4:	4d000013 	stcmi	0, cr0, [r0, #-76]	; 0xffffffb4
     bd8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     bdc:	0b3b0b3a 	bleq	ec38cc <__Stack_Size+0xec28cc>
     be0:	13490b39 	movtne	r0, #39737	; 0x9b39
     be4:	2e4e0000 	cdpcs	0, 4, cr0, cr14, cr0, {0}
     be8:	3a0e0301 	bcc	3817f4 <__Stack_Size+0x3807f4>
     bec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bf0:	110c270b 	tstne	ip, fp, lsl #14
     bf4:	40011201 	andmi	r1, r1, r1, lsl #4
     bf8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     bfc:	00001301 	andeq	r1, r0, r1, lsl #6
     c00:	31011d4f 	tstcc	r1, pc, asr #26
     c04:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     c08:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     c0c:	0b590b58 	bleq	1643974 <__Stack_Size+0x1642974>
     c10:	00000b57 	andeq	r0, r0, r7, asr fp
     c14:	55010b50 	strpl	r0, [r1, #-2896]	; 0xfffff4b0
     c18:	51000006 	tstpl	r0, r6
     c1c:	0e03012e 	adfeqsp	f0, f3, #0.5
     c20:	0b3b0b3a 	bleq	ec3910 <__Stack_Size+0xec2910>
     c24:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c28:	0b201349 	bleq	805954 <__Stack_Size+0x804954>
     c2c:	00001301 	andeq	r1, r0, r1, lsl #6
     c30:	03012e52 	movweq	r2, #7762	; 0x1e52
     c34:	3b0b3a0e 	blcc	2cf474 <__Stack_Size+0x2ce474>
     c38:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c3c:	010b200c 	tsteq	fp, ip
     c40:	53000013 	movwpl	r0, #19
     c44:	0e03012e 	adfeqsp	f0, f3, #0.5
     c48:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c4c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c50:	13010b20 	movwne	r0, #6944	; 0x1b20
     c54:	05540000 	ldrbeq	r0, [r4, #-0]
     c58:	3a0e0300 	bcc	381860 <__Stack_Size+0x380860>
     c5c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c60:	0013490b 	andseq	r4, r3, fp, lsl #18
     c64:	012e5500 			; <UNDEFINED> instruction: 0x012e5500
     c68:	01111331 	tsteq	r1, r1, lsr r3
     c6c:	0a400112 	beq	10010bc <__Stack_Size+0x10000bc>
     c70:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c74:	56000013 			; <UNDEFINED> instruction: 0x56000013
     c78:	13310005 	teqne	r1, #5
     c7c:	00000a02 	andeq	r0, r0, r2, lsl #20
     c80:	31012e57 	tstcc	r1, r7, asr lr
     c84:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     c88:	97064001 	strls	r4, [r6, -r1]
     c8c:	13010c42 	movwne	r0, #7234	; 0x1c42
     c90:	1d580000 	ldclne	0, cr0, [r8, #-0]
     c94:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     c98:	0b42b801 	bleq	10aeca4 <__Stack_Size+0x10adca4>
     c9c:	01120111 	tsteq	r2, r1, lsl r1
     ca0:	0b590b58 	bleq	1643a08 <__Stack_Size+0x1642a08>
     ca4:	00000b57 	andeq	r0, r0, r7, asr fp
     ca8:	11000b59 	tstne	r0, r9, asr fp
     cac:	00011201 	andeq	r1, r1, r1, lsl #4
     cb0:	010b5a00 	tsteq	fp, r0, lsl #20
     cb4:	13010655 	movwne	r0, #5717	; 0x1655
     cb8:	345b0000 	ldrbcc	r0, [fp], #-0
     cbc:	00133100 	andseq	r3, r3, r0, lsl #2
     cc0:	010b5c00 	tsteq	fp, r0, lsl #24
     cc4:	01111331 	tsteq	r1, r1, lsr r3
     cc8:	00000112 	andeq	r0, r0, r2, lsl r1
     ccc:	3f002e5d 	svccc	0x00002e5d
     cd0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     cd4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     cd8:	0b3b0b3a 	bleq	ec39c8 <__Stack_Size+0xec29c8>
     cdc:	00000b39 	andeq	r0, r0, r9, lsr fp
     ce0:	01110100 	tsteq	r1, r0, lsl #2
     ce4:	0b130e25 	bleq	4c4580 <__Stack_Size+0x4c3580>
     ce8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     cec:	01120111 	tsteq	r2, r1, lsl r1
     cf0:	00000610 	andeq	r0, r0, r0, lsl r6
     cf4:	0b002402 	bleq	9d04 <__Stack_Size+0x8d04>
     cf8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     cfc:	0300000e 	movweq	r0, #14
     d00:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     d04:	0b3b0b3a 	bleq	ec39f4 <__Stack_Size+0xec29f4>
     d08:	13490b39 	movtne	r0, #39737	; 0x9b39
     d0c:	26040000 	strcs	r0, [r4], -r0
     d10:	00134900 	andseq	r4, r3, r0, lsl #18
     d14:	00350500 	eorseq	r0, r5, r0, lsl #10
     d18:	00001349 	andeq	r1, r0, r9, asr #6
     d1c:	0b002406 	bleq	9d3c <__Stack_Size+0x8d3c>
     d20:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d24:	07000008 	streq	r0, [r0, -r8]
     d28:	0b0b0113 	bleq	2c117c <__Stack_Size+0x2c017c>
     d2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d30:	13010b39 	movwne	r0, #6969	; 0x1b39
     d34:	0d080000 	stceq	0, cr0, [r8, #-0]
     d38:	3a0e0300 	bcc	381940 <__Stack_Size+0x380940>
     d3c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d40:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     d44:	0900000a 	stmdbeq	r0, {r1, r3}
     d48:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d4c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d50:	13490b39 	movtne	r0, #39737	; 0x9b39
     d54:	00000a38 	andeq	r0, r0, r8, lsr sl
     d58:	0300160a 	movweq	r1, #1546	; 0x60a
     d5c:	3b0b3a0e 	blcc	2cf59c <__Stack_Size+0x2ce59c>
     d60:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d64:	0b000013 	bleq	db8 <_Minimum_Stack_Size+0xcb8>
     d68:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d70:	13490b39 	movtne	r0, #39737	; 0x9b39
     d74:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     d78:	340c0000 	strcc	r0, [ip], #-0
     d7c:	3a0e0300 	bcc	381984 <__Stack_Size+0x380984>
     d80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d84:	3f13490b 	svccc	0x0013490b
     d88:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     d8c:	01010d00 	tsteq	r1, r0, lsl #26
     d90:	13011349 	movwne	r1, #4937	; 0x1349
     d94:	210e0000 	mrscs	r0, (UNDEF: 14)
     d98:	2f134900 	svccs	0x00134900
     d9c:	0f00000b 	svceq	0x0000000b
     da0:	13470034 	movtne	r0, #28724	; 0x7034
     da4:	0b3b0b3a 	bleq	ec3a94 <__Stack_Size+0xec2a94>
     da8:	0a020b39 	beq	83a94 <__Stack_Size+0x82a94>
     dac:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     db0:	030c3f00 	movweq	r3, #52992	; 0xcf00
     db4:	3b0b3a0e 	blcc	2cf5f4 <__Stack_Size+0x2ce5f4>
     db8:	110b390b 	tstne	fp, fp, lsl #18
     dbc:	40011201 	andmi	r1, r1, r1, lsl #4
     dc0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     dc4:	01000000 	mrseq	r0, (UNDEF: 0)
     dc8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     dcc:	0e030b13 	vmoveq.32	d3[0], r0
     dd0:	01110e1b 	tsteq	r1, fp, lsl lr
     dd4:	06100112 			; <UNDEFINED> instruction: 0x06100112
     dd8:	24020000 	strcs	r0, [r2], #-0
     ddc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     de0:	000e030b 	andeq	r0, lr, fp, lsl #6
     de4:	00160300 	andseq	r0, r6, r0, lsl #6
     de8:	0b3a0e03 	bleq	e845fc <__Stack_Size+0xe835fc>
     dec:	0b390b3b 	bleq	e43ae0 <__Stack_Size+0xe42ae0>
     df0:	00001349 	andeq	r1, r0, r9, asr #6
     df4:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     df8:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     dfc:	13490026 	movtne	r0, #36902	; 0x9026
     e00:	24060000 	strcs	r0, [r6], #-0
     e04:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     e08:	0008030b 	andeq	r0, r8, fp, lsl #6
     e0c:	01130700 	tsteq	r3, r0, lsl #14
     e10:	0b3a0b0b 	bleq	e83a44 <__Stack_Size+0xe82a44>
     e14:	0b390b3b 	bleq	e43b08 <__Stack_Size+0xe42b08>
     e18:	00001301 	andeq	r1, r0, r1, lsl #6
     e1c:	03000d08 	movweq	r0, #3336	; 0xd08
     e20:	3b0b3a0e 	blcc	2cf660 <__Stack_Size+0x2ce660>
     e24:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e28:	000a3813 	andeq	r3, sl, r3, lsl r8
     e2c:	01040900 	tsteq	r4, r0, lsl #18
     e30:	0b0b0b3e 	bleq	2c3b30 <__Stack_Size+0x2c2b30>
     e34:	0b3a1349 	bleq	e85b60 <__Stack_Size+0xe84b60>
     e38:	0b390b3b 	bleq	e43b2c <__Stack_Size+0xe42b2c>
     e3c:	00001301 	andeq	r1, r0, r1, lsl #6
     e40:	0300280a 	movweq	r2, #2058	; 0x80a
     e44:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     e48:	00280b00 	eoreq	r0, r8, r0, lsl #22
     e4c:	0b1c0e03 	bleq	704660 <__Stack_Size+0x703660>
     e50:	130c0000 	movwne	r0, #49152	; 0xc000
     e54:	3a050b01 	bcc	143a60 <__Stack_Size+0x142a60>
     e58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e5c:	0013010b 	andseq	r0, r3, fp, lsl #2
     e60:	000d0d00 	andeq	r0, sp, r0, lsl #26
     e64:	0b3a0803 	bleq	e82e78 <__Stack_Size+0xe81e78>
     e68:	0b390b3b 	bleq	e43b5c <__Stack_Size+0xe42b5c>
     e6c:	0a381349 	beq	e05b98 <__Stack_Size+0xe04b98>
     e70:	010e0000 	mrseq	r0, (UNDEF: 14)
     e74:	01134901 	tsteq	r3, r1, lsl #18
     e78:	0f000013 	svceq	0x00000013
     e7c:	13490021 	movtne	r0, #36897	; 0x9021
     e80:	00000b2f 	andeq	r0, r0, pc, lsr #22
     e84:	49002110 	stmdbmi	r0, {r4, r8, sp}
     e88:	00052f13 	andeq	r2, r5, r3, lsl pc
     e8c:	00341100 	eorseq	r1, r4, r0, lsl #2
     e90:	0b3a0e03 	bleq	e846a4 <__Stack_Size+0xe836a4>
     e94:	0b39053b 	bleq	e42388 <__Stack_Size+0xe41388>
     e98:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; d7c <_Minimum_Stack_Size+0xc7c>
     e9c:	00000c3c 	andeq	r0, r0, ip, lsr ip
     ea0:	03003412 	movweq	r3, #1042	; 0x412
     ea4:	3b0b3a0e 	blcc	2cf6e4 <__Stack_Size+0x2ce6e4>
     ea8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     eac:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     eb0:	1300000c 	movwne	r0, #12
     eb4:	0b0b0113 	bleq	2c1308 <__Stack_Size+0x2c0308>
     eb8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ebc:	13010b39 	movwne	r0, #6969	; 0x1b39
     ec0:	0d140000 	ldceq	0, cr0, [r4, #-0]
     ec4:	3a080300 	bcc	201acc <__Stack_Size+0x200acc>
     ec8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ecc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ed0:	1500000a 	strne	r0, [r0, #-10]
     ed4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     ed8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     edc:	13490b39 	movtne	r0, #39737	; 0x9b39
     ee0:	00000a38 	andeq	r0, r0, r8, lsr sl
     ee4:	03001616 	movweq	r1, #1558	; 0x616
     ee8:	3b0b3a0e 	blcc	2cf728 <__Stack_Size+0x2ce728>
     eec:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     ef0:	17000013 	smladne	r0, r3, r0, r0
     ef4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     ef8:	0b3b0b3a 	bleq	ec3be8 <__Stack_Size+0xec2be8>
     efc:	13490b39 	movtne	r0, #39737	; 0x9b39
     f00:	00000a02 	andeq	r0, r0, r2, lsl #20
     f04:	03011318 	movweq	r1, #4888	; 0x1318
     f08:	3a0b0b0e 	bcc	2c3b48 <__Stack_Size+0x2c2b48>
     f0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f10:	0013010b 	andseq	r0, r3, fp, lsl #2
     f14:	00341900 	eorseq	r1, r4, r0, lsl #18
     f18:	0b3a0e03 	bleq	e8472c <__Stack_Size+0xe8372c>
     f1c:	0b390b3b 	bleq	e43c10 <__Stack_Size+0xe42c10>
     f20:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; e04 <_Minimum_Stack_Size+0xd04>
     f24:	00000a02 	andeq	r0, r0, r2, lsl #20
     f28:	3f012e1a 	svccc	0x00012e1a
     f2c:	3a0e030c 	bcc	381b64 <__Stack_Size+0x380b64>
     f30:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f34:	110c270b 	tstne	ip, fp, lsl #14
     f38:	40011201 	andmi	r1, r1, r1, lsl #4
     f3c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     f40:	00001301 	andeq	r1, r0, r1, lsl #6
     f44:	0300051b 	movweq	r0, #1307	; 0x51b
     f48:	3b0b3a08 	blcc	2cf770 <__Stack_Size+0x2ce770>
     f4c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f50:	b7060213 	smladlt	r6, r3, r2, r0
     f54:	00000642 	andeq	r0, r0, r2, asr #12
     f58:	0300051c 	movweq	r0, #1308	; 0x51c
     f5c:	3b0b3a0e 	blcc	2cf79c <__Stack_Size+0x2ce79c>
     f60:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f64:	b7060213 	smladlt	r6, r3, r2, r0
     f68:	00000642 	andeq	r0, r0, r2, asr #12
     f6c:	0300341d 	movweq	r3, #1053	; 0x41d
     f70:	3b0b3a08 	blcc	2cf798 <__Stack_Size+0x2ce798>
     f74:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f78:	b7060213 	smladlt	r6, r3, r2, r0
     f7c:	00000642 	andeq	r0, r0, r2, asr #12
     f80:	55010b1e 	strpl	r0, [r1, #-2846]	; 0xfffff4e2
     f84:	1f000006 	svcne	0x00000006
     f88:	08030034 	stmdaeq	r3, {r2, r4, r5}
     f8c:	0b3b0b3a 	bleq	ec3c7c <__Stack_Size+0xec2c7c>
     f90:	13490b39 	movtne	r0, #39737	; 0x9b39
     f94:	0f200000 	svceq	0x00200000
     f98:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     f9c:	21000013 	tstcs	r0, r3, lsl r0
     fa0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ef0 <_Minimum_Stack_Size+0xdf0>
     fa4:	0b3a0e03 	bleq	e847b8 <__Stack_Size+0xe837b8>
     fa8:	0b390b3b 	bleq	e43c9c <__Stack_Size+0xe42c9c>
     fac:	01120111 	tsteq	r2, r1, lsl r1
     fb0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     fb4:	0013010c 	andseq	r0, r3, ip, lsl #2
     fb8:	00342200 	eorseq	r2, r4, r0, lsl #4
     fbc:	0b3a0803 	bleq	e82fd0 <__Stack_Size+0xe81fd0>
     fc0:	0b390b3b 	bleq	e43cb4 <__Stack_Size+0xe42cb4>
     fc4:	01881349 	orreq	r1, r8, r9, asr #6
     fc8:	000a020b 	andeq	r0, sl, fp, lsl #4
     fcc:	00342300 	eorseq	r2, r4, r0, lsl #6
     fd0:	0b3a0e03 	bleq	e847e4 <__Stack_Size+0xe837e4>
     fd4:	0b390b3b 	bleq	e43cc8 <__Stack_Size+0xe42cc8>
     fd8:	06021349 	streq	r1, [r2], -r9, asr #6
     fdc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     fe0:	011d2400 	tsteq	sp, r0, lsl #8
     fe4:	01521331 	cmpeq	r2, r1, lsr r3
     fe8:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     fec:	58011201 	stmdapl	r1, {r0, r9, ip}
     ff0:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     ff4:	0013010b 	andseq	r0, r3, fp, lsl #2
     ff8:	00052500 	andeq	r2, r5, r0, lsl #10
     ffc:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1000:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1004:	011d2600 	tsteq	sp, r0, lsl #12
    1008:	01521331 	cmpeq	r2, r1, lsr r3
    100c:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    1010:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    1014:	010b570b 	tsteq	fp, fp, lsl #14
    1018:	27000013 	smladcs	r0, r3, r0, r0
    101c:	00018289 	andeq	r8, r1, r9, lsl #5
    1020:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1024:	34280000 	strtcc	r0, [r8], #-0
    1028:	02133100 	andseq	r3, r3, #0, 2
    102c:	2900000a 	stmdbcs	r0, {r1, r3}
    1030:	13310034 	teqne	r1, #52	; 0x34
    1034:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1038:	2a000006 	bcs	1058 <__Stack_Size+0x58>
    103c:	01018289 	smlabbeq	r1, r9, r2, r8
    1040:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1044:	8a2b0000 	bhi	ac104c <__Stack_Size+0xac004c>
    1048:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    104c:	0a42910a 	beq	10a547c <__Stack_Size+0x10a447c>
    1050:	1d2c0000 	stcne	0, cr0, [ip, #-0]
    1054:	52133100 	andspl	r3, r3, #0, 2
    1058:	0b42b801 	bleq	10af064 <__Stack_Size+0x10ae064>
    105c:	0b580655 	bleq	16029b8 <__Stack_Size+0x16019b8>
    1060:	0b570b59 	bleq	15c3dcc <__Stack_Size+0x15c2dcc>
    1064:	892d0000 	pushhi	{}	; <UNPREDICTABLE>
    1068:	11010182 	smlabbne	r1, r2, r1, r0
    106c:	01133101 	tsteq	r3, r1, lsl #2
    1070:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    1074:	1331001d 	teqne	r1, #29
    1078:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    107c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1080:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1084:	000b570b 	andeq	r5, fp, fp, lsl #14
    1088:	010b2f00 	tsteq	fp, r0, lsl #30
    108c:	00001301 	andeq	r1, r0, r1, lsl #6
    1090:	03003430 	movweq	r3, #1072	; 0x430
    1094:	3b0b3a0e 	blcc	2cf8d4 <__Stack_Size+0x2ce8d4>
    1098:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    109c:	31000013 	tstcc	r0, r3, lsl r0
    10a0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
    10a4:	00001301 	andeq	r1, r0, r1, lsl #6
    10a8:	03012e32 	movweq	r2, #7730	; 0x1e32
    10ac:	3b0b3a0e 	blcc	2cf8ec <__Stack_Size+0x2ce8ec>
    10b0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    10b4:	010b200c 	tsteq	fp, ip
    10b8:	33000013 	movwcc	r0, #19
    10bc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    10c0:	0b3b0b3a 	bleq	ec3db0 <__Stack_Size+0xec2db0>
    10c4:	13490b39 	movtne	r0, #39737	; 0x9b39
    10c8:	34340000 	ldrtcc	r0, [r4], #-0
    10cc:	3a080300 	bcc	201cd4 <__Stack_Size+0x200cd4>
    10d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10d4:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
    10d8:	00000b01 	andeq	r0, r0, r1, lsl #22
    10dc:	3f012e35 	svccc	0x00012e35
    10e0:	3a0e030c 	bcc	381d18 <__Stack_Size+0x380d18>
    10e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10e8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    10ec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    10f0:	97064001 	strls	r4, [r6, -r1]
    10f4:	13010c42 	movwne	r0, #7234	; 0x1c42
    10f8:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
    10fc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1100:	3b0b3a0e 	blcc	2cf940 <__Stack_Size+0x2ce940>
    1104:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1108:	010b200c 	tsteq	fp, ip
    110c:	37000013 	smladcc	r0, r3, r0, r0
    1110:	08030005 	stmdaeq	r3, {r0, r2}
    1114:	0b3b0b3a 	bleq	ec3e04 <__Stack_Size+0xec2e04>
    1118:	13490b39 	movtne	r0, #39737	; 0x9b39
    111c:	2e380000 	cdpcs	0, 3, cr0, cr8, cr0, {0}
    1120:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1124:	3b0b3a0e 	blcc	2cf964 <__Stack_Size+0x2ce964>
    1128:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    112c:	1113490c 	tstne	r3, ip, lsl #18
    1130:	40011201 	andmi	r1, r1, r1, lsl #4
    1134:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1138:	00001301 	andeq	r1, r0, r1, lsl #6
    113c:	03000539 	movweq	r0, #1337	; 0x539
    1140:	3b0b3a0e 	blcc	2cf980 <__Stack_Size+0x2ce980>
    1144:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1148:	000a0213 	andeq	r0, sl, r3, lsl r2
    114c:	000f3a00 	andeq	r3, pc, r0, lsl #20
    1150:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1154:	3f002e3b 	svccc	0x00002e3b
    1158:	3a0e030c 	bcc	381d90 <__Stack_Size+0x380d90>
    115c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1160:	2013490b 	andscs	r4, r3, fp, lsl #18
    1164:	3c00000b 	stccc	0, cr0, [r0], {11}
    1168:	01018289 	smlabbeq	r1, r9, r2, r8
    116c:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    1170:	0013310c 	andseq	r3, r3, ip, lsl #2
    1174:	011d3d00 	tsteq	sp, r0, lsl #26
    1178:	01521331 	cmpeq	r2, r1, lsr r3
    117c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1180:	58011201 	stmdapl	r1, {r0, r9, ip}
    1184:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1188:	3e00000b 	cdpcc	0, 0, cr0, cr0, cr11, {0}
    118c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 10dc <__Stack_Size+0xdc>
    1190:	0b3a0e03 	bleq	e849a4 <__Stack_Size+0xe839a4>
    1194:	0b390b3b 	bleq	e43e88 <__Stack_Size+0xe42e88>
    1198:	13490c27 	movtne	r0, #39975	; 0x9c27
    119c:	13010b20 	movwne	r0, #6944	; 0x1b20
    11a0:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
    11a4:	3a0e0301 	bcc	381db0 <__Stack_Size+0x380db0>
    11a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    11b0:	010b2013 	tsteq	fp, r3, lsl r0
    11b4:	40000013 	andmi	r0, r0, r3, lsl r0
    11b8:	0e03012e 	adfeqsp	f0, f3, #0.5
    11bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11c0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    11c4:	13010b20 	movwne	r0, #6944	; 0x1b20
    11c8:	05410000 	strbeq	r0, [r1, #-0]
    11cc:	3a0e0300 	bcc	381dd4 <__Stack_Size+0x380dd4>
    11d0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11d4:	0013490b 	andseq	r4, r3, fp, lsl #18
    11d8:	012e4200 			; <UNDEFINED> instruction: 0x012e4200
    11dc:	01111331 	tsteq	r1, r1, lsr r3
    11e0:	0a400112 	beq	1001630 <__Stack_Size+0x1000630>
    11e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    11e8:	43000013 	movwmi	r0, #19
    11ec:	13310005 	teqne	r1, #5
    11f0:	00000a02 	andeq	r0, r0, r2, lsl #20
    11f4:	31011d44 	tstcc	r1, r4, asr #26
    11f8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    11fc:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    1200:	0b590b58 	bleq	1643f68 <__Stack_Size+0x1642f68>
    1204:	00000b57 	andeq	r0, r0, r7, asr fp
    1208:	3f002e45 	svccc	0x00002e45
    120c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1210:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1214:	0b3b0b3a 	bleq	ec3f04 <__Stack_Size+0xec2f04>
    1218:	00000b39 	andeq	r0, r0, r9, lsr fp
    121c:	01110100 	tsteq	r1, r0, lsl #2
    1220:	0b130e25 	bleq	4c4abc <__Stack_Size+0x4c3abc>
    1224:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1228:	01120111 	tsteq	r2, r1, lsl r1
    122c:	00000610 	andeq	r0, r0, r0, lsl r6
    1230:	0b002402 	bleq	a240 <__Stack_Size+0x9240>
    1234:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1238:	0300000e 	movweq	r0, #14
    123c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1240:	0b3b0b3a 	bleq	ec3f30 <__Stack_Size+0xec2f30>
    1244:	13490b39 	movtne	r0, #39737	; 0x9b39
    1248:	35040000 	strcc	r0, [r4, #-0]
    124c:	00134900 	andseq	r4, r3, r0, lsl #18
    1250:	00260500 	eoreq	r0, r6, r0, lsl #10
    1254:	00001349 	andeq	r1, r0, r9, asr #6
    1258:	0b002406 	bleq	a278 <__Stack_Size+0x9278>
    125c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1260:	07000008 	streq	r0, [r0, -r8]
    1264:	0b0b0113 	bleq	2c16b8 <__Stack_Size+0x2c06b8>
    1268:	0b3b0b3a 	bleq	ec3f58 <__Stack_Size+0xec2f58>
    126c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1270:	0d080000 	stceq	0, cr0, [r8, #-0]
    1274:	3a0e0300 	bcc	381e7c <__Stack_Size+0x380e7c>
    1278:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    127c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1280:	0900000a 	stmdbeq	r0, {r1, r3}
    1284:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1288:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    128c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1290:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1294:	340a0000 	strcc	r0, [sl], #-0
    1298:	3a0e0300 	bcc	381ea0 <__Stack_Size+0x380ea0>
    129c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12a0:	3f13490b 	svccc	0x0013490b
    12a4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    12a8:	01010b00 	tsteq	r1, r0, lsl #22
    12ac:	13011349 	movwne	r1, #4937	; 0x1349
    12b0:	210c0000 	mrscs	r0, (UNDEF: 12)
    12b4:	2f134900 	svccs	0x00134900
    12b8:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    12bc:	0b0b0113 	bleq	2c1710 <__Stack_Size+0x2c0710>
    12c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12c4:	13010b39 	movwne	r0, #6969	; 0x1b39
    12c8:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    12cc:	3a0e0300 	bcc	381ed4 <__Stack_Size+0x380ed4>
    12d0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    12d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    12d8:	0f00000a 	svceq	0x0000000a
    12dc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    12e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12e8:	00000a38 	andeq	r0, r0, r8, lsr sl
    12ec:	03001610 	movweq	r1, #1552	; 0x610
    12f0:	3b0b3a0e 	blcc	2cfb30 <__Stack_Size+0x2ceb30>
    12f4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    12f8:	11000013 	tstne	r0, r3, lsl r0
    12fc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
    1300:	0b3b0b3a 	bleq	ec3ff0 <__Stack_Size+0xec2ff0>
    1304:	13010b39 	movwne	r0, #6969	; 0x1b39
    1308:	0d120000 	ldceq	0, cr0, [r2, #-0]
    130c:	3a080300 	bcc	201f14 <__Stack_Size+0x200f14>
    1310:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1314:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1318:	1300000a 	movwne	r0, #10
    131c:	13490021 	movtne	r0, #36897	; 0x9021
    1320:	0000052f 	andeq	r0, r0, pc, lsr #10
    1324:	03003414 	movweq	r3, #1044	; 0x414
    1328:	3b0b3a0e 	blcc	2cfb68 <__Stack_Size+0x2ceb68>
    132c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1330:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
    1334:	1500000a 	strne	r0, [r0, #-10]
    1338:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    133c:	0b3a0b0b 	bleq	e83f70 <__Stack_Size+0xe82f70>
    1340:	0b390b3b 	bleq	e44034 <__Stack_Size+0xe43034>
    1344:	00001301 	andeq	r1, r0, r1, lsl #6
    1348:	3f012e16 	svccc	0x00012e16
    134c:	3a0e030c 	bcc	381f84 <__Stack_Size+0x380f84>
    1350:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1354:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1358:	97064001 	strls	r4, [r6, -r1]
    135c:	13010c42 	movwne	r0, #7234	; 0x1c42
    1360:	34170000 	ldrcc	r0, [r7], #-0
    1364:	3a0e0300 	bcc	381f6c <__Stack_Size+0x380f6c>
    1368:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    136c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1370:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1374:	34180000 	ldrcc	r0, [r8], #-0
    1378:	3a080300 	bcc	201f80 <__Stack_Size+0x200f80>
    137c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1380:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
    1384:	0a020b01 	beq	83f90 <__Stack_Size+0x82f90>
    1388:	1d190000 	ldcne	0, cr0, [r9, #-0]
    138c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1390:	0b42b801 	bleq	10af39c <__Stack_Size+0x10ae39c>
    1394:	01120111 	tsteq	r2, r1, lsl r1
    1398:	0b590b58 	bleq	1644100 <__Stack_Size+0x1643100>
    139c:	13010b57 	movwne	r0, #6999	; 0x1b57
    13a0:	051a0000 	ldreq	r0, [sl, #-0]
    13a4:	02133100 	andseq	r3, r3, #0, 2
    13a8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    13ac:	891b0000 	ldmdbhi	fp, {}	; <UNPREDICTABLE>
    13b0:	11010182 	smlabbne	r1, r2, r1, r0
    13b4:	00133101 	andseq	r3, r3, r1, lsl #2
    13b8:	828a1c00 	addhi	r1, sl, #0, 24
    13bc:	0a020001 	beq	813c8 <__Stack_Size+0x803c8>
    13c0:	000a4291 	muleq	sl, r1, r2
    13c4:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    13c8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    13cc:	0b3b0b3a 	bleq	ec40bc <__Stack_Size+0xec30bc>
    13d0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    13d4:	01120111 	tsteq	r2, r1, lsl r1
    13d8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    13dc:	0013010c 	andseq	r0, r3, ip, lsl #2
    13e0:	00051e00 	andeq	r1, r5, r0, lsl #28
    13e4:	0b3a0e03 	bleq	e84bf8 <__Stack_Size+0xe83bf8>
    13e8:	0b390b3b 	bleq	e440dc <__Stack_Size+0xe430dc>
    13ec:	06021349 	streq	r1, [r2], -r9, asr #6
    13f0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    13f4:	00051f00 	andeq	r1, r5, r0, lsl #30
    13f8:	0b3a0803 	bleq	e8340c <__Stack_Size+0xe8240c>
    13fc:	0b390b3b 	bleq	e440f0 <__Stack_Size+0xe430f0>
    1400:	06021349 	streq	r1, [r2], -r9, asr #6
    1404:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1408:	00342000 	eorseq	r2, r4, r0
    140c:	0b3a0e03 	bleq	e84c20 <__Stack_Size+0xe83c20>
    1410:	0b390b3b 	bleq	e44104 <__Stack_Size+0xe43104>
    1414:	0a021349 	beq	86140 <__Stack_Size+0x85140>
    1418:	34210000 	strtcc	r0, [r1], #-0
    141c:	3a080300 	bcc	202024 <__Stack_Size+0x201024>
    1420:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1424:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1428:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    142c:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
    1430:	11000182 	smlabbne	r0, r2, r1, r0
    1434:	00133101 	andseq	r3, r3, r1, lsl #2
    1438:	82892300 	addhi	r2, r9, #0, 6
    143c:	01110101 	tsteq	r1, r1, lsl #2
    1440:	13011331 	movwne	r1, #4913	; 0x1331
    1444:	89240000 	stmdbhi	r4!, {}	; <UNPREDICTABLE>
    1448:	11000182 	smlabbne	r0, r2, r1, r0
    144c:	0c429501 	cfstr64eq	mvdx9, [r2], {1}
    1450:	00001331 	andeq	r1, r0, r1, lsr r3
    1454:	0b000f25 	bleq	50f0 <__Stack_Size+0x40f0>
    1458:	0013490b 	andseq	r4, r3, fp, lsl #18
    145c:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    1460:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1464:	0b3b0b3a 	bleq	ec4154 <__Stack_Size+0xec3154>
    1468:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    146c:	13010b20 	movwne	r0, #6944	; 0x1b20
    1470:	05270000 	streq	r0, [r7, #-0]!
    1474:	3a0e0300 	bcc	38207c <__Stack_Size+0x38107c>
    1478:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    147c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1480:	82892800 	addhi	r2, r9, #0, 16
    1484:	01110101 	tsteq	r1, r1, lsl #2
    1488:	310c4295 			; <UNDEFINED> instruction: 0x310c4295
    148c:	29000013 	stmdbcs	r0, {r0, r1, r4}
    1490:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 13e0 <__Stack_Size+0x3e0>
    1494:	0b3a0e03 	bleq	e84ca8 <__Stack_Size+0xe83ca8>
    1498:	0b390b3b 	bleq	e4418c <__Stack_Size+0xe4318c>
    149c:	13490c27 	movtne	r0, #39975	; 0x9c27
    14a0:	01120111 	tsteq	r2, r1, lsl r1
    14a4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    14a8:	0013010c 	andseq	r0, r3, ip, lsl #2
    14ac:	011d2a00 	tsteq	sp, r0, lsl #20
    14b0:	01521331 	cmpeq	r2, r1, lsr r3
    14b4:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    14b8:	58011201 	stmdapl	r1, {r0, r9, ip}
    14bc:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    14c0:	2b00000b 	blcs	14f4 <__Stack_Size+0x4f4>
    14c4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1414 <__Stack_Size+0x414>
    14c8:	0b3a0e03 	bleq	e84cdc <__Stack_Size+0xe83cdc>
    14cc:	0b390b3b 	bleq	e441c0 <__Stack_Size+0xe431c0>
    14d0:	13490c27 	movtne	r0, #39975	; 0x9c27
    14d4:	01120111 	tsteq	r2, r1, lsl r1
    14d8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    14dc:	0013010c 	andseq	r0, r3, ip, lsl #2
    14e0:	00052c00 	andeq	r2, r5, r0, lsl #24
    14e4:	0b3a0e03 	bleq	e84cf8 <__Stack_Size+0xe83cf8>
    14e8:	0b390b3b 	bleq	e441dc <__Stack_Size+0xe431dc>
    14ec:	0a021349 	beq	86218 <__Stack_Size+0x85218>
    14f0:	0f2d0000 	svceq	0x002d0000
    14f4:	000b0b00 	andeq	r0, fp, r0, lsl #22
    14f8:	002e2e00 	eoreq	r2, lr, r0, lsl #28
    14fc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1500:	0b3b0b3a 	bleq	ec41f0 <__Stack_Size+0xec31f0>
    1504:	13490b39 	movtne	r0, #39737	; 0x9b39
    1508:	01120111 	tsteq	r2, r1, lsl r1
    150c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1510:	2f00000c 	svccs	0x0000000c
    1514:	0e03012e 	adfeqsp	f0, f3, #0.5
    1518:	0b3b0b3a 	bleq	ec4208 <__Stack_Size+0xec3208>
    151c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1520:	0b201349 	bleq	80624c <__Stack_Size+0x80524c>
    1524:	00001301 	andeq	r1, r0, r1, lsl #6
    1528:	03000530 	movweq	r0, #1328	; 0x530
    152c:	3b0b3a08 	blcc	2cfd54 <__Stack_Size+0x2ced54>
    1530:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1534:	31000013 	tstcc	r0, r3, lsl r0
    1538:	0e03012e 	adfeqsp	f0, f3, #0.5
    153c:	0b3b0b3a 	bleq	ec422c <__Stack_Size+0xec322c>
    1540:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1544:	13010b20 	movwne	r0, #6944	; 0x1b20
    1548:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
    154c:	11133101 	tstne	r3, r1, lsl #2
    1550:	40011201 	andmi	r1, r1, r1, lsl #4
    1554:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1558:	00001301 	andeq	r1, r0, r1, lsl #6
    155c:	31011d33 	tstcc	r1, r3, lsr sp
    1560:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1564:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    1568:	0b590b58 	bleq	16442d0 <__Stack_Size+0x16432d0>
    156c:	13010b57 	movwne	r0, #6999	; 0x1b57
    1570:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
    1574:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1578:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    157c:	0b3a0e03 	bleq	e84d90 <__Stack_Size+0xe83d90>
    1580:	0b390b3b 	bleq	e44274 <__Stack_Size+0xe43274>
    1584:	Address 0x0000000000001584 is out of bounds.


Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000002c8 	andeq	r0, r0, r8, asr #5
       4:	00bc0003 	adcseq	r0, ip, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	; 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      44:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      48:	2f312e33 	svccs	0x00312e33
      4c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      50:	00656475 	rsbeq	r6, r5, r5, ror r4
      54:	6f6c6300 	svcvs	0x006c6300
      58:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	6e69616d 	powvsez	f6, f1, #5.0
      64:	0100632e 	tsteq	r0, lr, lsr #6
      68:	6f630000 	svcvs	0x00630000
      6c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
      70:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
      74:	00000200 	andeq	r0, r0, r0, lsl #4
      78:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
      7c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
      80:	00000300 	andeq	r0, r0, r0, lsl #6
      84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
      88:	735f6d65 	cmpvc	pc, #6464	; 0x1940
      8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
      90:	78783166 	ldmdavc	r8!, {r1, r2, r5, r6, r8, ip, sp}^
      94:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
      98:	74730000 	ldrbtvc	r0, [r3], #-0
      9c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      a0:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
      a4:	00682e62 	rsbeq	r2, r8, r2, ror #28
      a8:	73000002 	movwvc	r0, #2
      ac:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
      b0:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      b4:	00000100 	andeq	r0, r0, r0, lsl #2
      b8:	5f627375 	svcpl	0x00627375
      bc:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
      c0:	00010068 	andeq	r0, r1, r8, rrx
      c4:	15050000 	strne	r0, [r5, #-0]
      c8:	20020500 	andcs	r0, r2, r0, lsl #10
      cc:	03080001 	movweq	r0, #32769	; 0x8001
      d0:	0305010d 	movweq	r0, #20749	; 0x510d
      d4:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
      d8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
      dc:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
      e0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
      e4:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
      e8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
      ec:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
      f0:	0511060b 	ldreq	r0, [r1, #-1547]	; 0xfffff9f5
      f4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
      f8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
      fc:	03052007 	movweq	r2, #20487	; 0x5007
     100:	02040200 	andeq	r0, r4, #0, 4
     104:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
     108:	1a052002 	bne	148118 <__Stack_Size+0x147118>
     10c:	030a0523 	movweq	r0, #42275	; 0xa523
     110:	01052e25 	tsteq	r5, r5, lsr #28
     114:	06030521 	streq	r0, [r3], -r1, lsr #10
     118:	13207503 			; <UNDEFINED> instruction: 0x13207503
     11c:	01060705 	tsteq	r6, r5, lsl #14
     120:	21060305 	tstcs	r6, r5, lsl #6
     124:	01060705 	tsteq	r6, r5, lsl #14
     128:	2f060305 	svccs	0x00060305
     12c:	01060705 	tsteq	r6, r5, lsl #14
     130:	2f060305 	svccs	0x00060305
     134:	01060d05 	tsteq	r6, r5, lsl #26
     138:	21060305 	tstcs	r6, r5, lsl #6
     13c:	11060d05 	tstne	r6, r5, lsl #26
     140:	30060505 	andcc	r0, r6, r5, lsl #10
     144:	01060c05 	tsteq	r6, r5, lsl #24
     148:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
     14c:	03052e07 	movweq	r2, #24071	; 0x5e07
     150:	1a05202d 	bne	14820c <__Stack_Size+0x14720c>
     154:	03052e23 	movweq	r2, #24099	; 0x5e23
     158:	015d0306 	cmpeq	sp, r6, lsl #6
     15c:	76030805 	strvc	r0, [r3], -r5, lsl #16
     160:	03030501 	movweq	r0, #13569	; 0x3501
     164:	0e05010b 	adfeqs	f0, f5, #3.0
     168:	03050106 	movweq	r0, #20742	; 0x5106
     16c:	0e055906 	vmlaeq.f16	s10, s10, s12	; <UNPREDICTABLE>
     170:	03050106 	movweq	r0, #20742	; 0x5106
     174:	0e054c06 	cdpeq	12, 0, cr4, cr5, cr6, {0}
     178:	03050106 	movweq	r0, #20742	; 0x5106
     17c:	0e054b06 	vmlaeq.f64	d4, d5, d6
     180:	03050106 	movweq	r0, #20742	; 0x5106
     184:	07054c06 	streq	r4, [r5, -r6, lsl #24]
     188:	03050106 	movweq	r0, #20742	; 0x5106
     18c:	15132106 	ldrne	r2, [r3, #-262]	; 0xfffffefa
     190:	14131413 	ldrne	r1, [r3], #-1043	; 0xfffffbed
     194:	0607052f 	streq	r0, [r7], -pc, lsr #10
     198:	03052e01 	movweq	r2, #24065	; 0x5e01
     19c:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     1a0:	03050106 	movweq	r0, #20742	; 0x5106
     1a4:	0b052206 	bleq	1489c4 <__Stack_Size+0x1479c4>
     1a8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     1ac:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     1b0:	0511060b 	ldreq	r0, [r1, #-1547]	; 0xfffff9f5
     1b4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     1b8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     1bc:	03052007 	movweq	r2, #20487	; 0x5007
     1c0:	1a05202d 	bne	14827c <__Stack_Size+0x14727c>
     1c4:	05020423 	streq	r0, [r2, #-1059]	; 0xfffffbdd
     1c8:	0500062c 	streq	r0, [r0, #-1580]	; 0xfffff9d4
     1cc:	0001ce02 	andeq	ip, r1, r2, lsl #28
     1d0:	01560308 	cmpeq	r6, r8, lsl #6
     1d4:	05012d05 	streq	r2, [r1, #-3333]	; 0xfffff2fb
     1d8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     1dc:	0522061a 	streq	r0, [r2, #-1562]!	; 0xfffff9e6
     1e0:	08051303 	stmdaeq	r5, {r0, r1, r8, r9, ip}
     1e4:	01040200 	mrseq	r0, R12_usr
     1e8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     1ec:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     1f0:	10052101 	andne	r2, r5, r1, lsl #2
     1f4:	02040200 	andeq	r0, r4, #0, 4
     1f8:	02021f06 	andeq	r1, r2, #6, 30
     1fc:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
     200:	000f0502 	andeq	r0, pc, r2, lsl #10
     204:	157c0205 	ldrbne	r0, [ip, #-517]!	; 0xfffffdfb
     208:	0e030800 	cdpeq	8, 0, cr0, cr3, cr0, {0}
     20c:	13030501 	movwne	r0, #13569	; 0x3501
     210:	11060f05 	tstne	r6, r5, lsl #30
     214:	06210305 	strteq	r0, [r1], -r5, lsl #6
     218:	10052f2f 	andne	r2, r5, pc, lsr #30
     21c:	2b050106 	blcs	14063c <__Stack_Size+0x13f63c>
     220:	1d100523 	cfldr32ne	mvfx0, [r0, #-140]	; 0xffffff74
     224:	05233f05 	streq	r3, [r3, #-3845]!	; 0xfffff0fb
     228:	03051d10 	movweq	r1, #23824	; 0x5d10
     22c:	01013e06 	tsteq	r1, r6, lsl #28
     230:	2e2e0101 	sufcse	f0, f6, f1
     234:	1605202e 	strne	r2, [r5], -lr, lsr #32
     238:	01010101 	tsteq	r1, r1, lsl #2
     23c:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
     240:	01062006 	tsteq	r6, r6
     244:	01012905 	tsteq	r1, r5, lsl #18
     248:	20010101 	andcs	r0, r1, r1, lsl #2
     24c:	20062e2e 	andcs	r2, r6, lr, lsr #28
     250:	03050106 	movweq	r0, #20742	; 0x5106
     254:	01010113 	tsteq	r1, r3, lsl r1
     258:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
     25c:	01062006 	tsteq	r6, r6
     260:	01011605 	tsteq	r1, r5, lsl #12
     264:	20010101 	andcs	r0, r1, r1, lsl #2
     268:	2006012e 	andcs	r0, r6, lr, lsr #2
     26c:	2b050106 	blcs	14068c <__Stack_Size+0x13f68c>
     270:	01010101 	tsteq	r1, r1, lsl #2
     274:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
     278:	01062006 	tsteq	r6, r6
     27c:	01013f05 	tsteq	r1, r5, lsl #30
     280:	20010101 	andcs	r0, r1, r1, lsl #2
     284:	20062e2e 	andcs	r2, r6, lr, lsr #28
     288:	03050106 	movweq	r0, #20742	; 0x5106
     28c:	2e060114 	mcrcs	1, 0, r0, cr6, cr4, {0}
     290:	20061205 	andcs	r1, r6, r5, lsl #4
     294:	3c210501 	cfstr32cc	mvfx0, [r1], #-4
     298:	3d030501 	cfstr32cc	mvfx0, [r3, #-4]
     29c:	3c130501 	cfldr32cc	mvfx0, [r3], {1}
     2a0:	3c230501 	cfstr32cc	mvfx0, [r3], #-4
     2a4:	30030501 	andcc	r0, r3, r1, lsl #10
     2a8:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
     2ac:	09990316 	ldmibeq	r9, {r1, r2, r4, r8, r9}
     2b0:	01350501 	teqeq	r5, r1, lsl #10
     2b4:	03050204 	movweq	r0, #20996	; 0x5204
     2b8:	01040200 	mrseq	r0, R12_usr
     2bc:	2076eb03 	rsbscs	lr, r6, r3, lsl #22
     2c0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     2c4:	02130104 	andseq	r0, r3, #4, 2
     2c8:	0101000b 	tsteq	r1, fp
     2cc:	00000887 	andeq	r0, r0, r7, lsl #17
     2d0:	00a70003 	adceq	r0, r7, r3
     2d4:	01020000 	mrseq	r0, (UNDEF: 2)
     2d8:	000d0efb 	strdeq	r0, [sp], -fp
     2dc:	01010101 	tsteq	r1, r1, lsl #2
     2e0:	01000000 	mrseq	r0, (UNDEF: 0)
     2e4:	73010000 	movwvc	r0, #4096	; 0x1000
     2e8:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
     2ec:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
     2f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     2f4:	2f006564 	svccs	0x00006564
     2f8:	2f727375 	svccs	0x00727375
     2fc:	2f62696c 	svccs	0x0062696c
     300:	2f636367 	svccs	0x00636367
     304:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     308:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     30c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     310:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
     314:	2f312e33 	svccs	0x00312e33
     318:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     31c:	00656475 	rsbeq	r6, r5, r5, ror r4
     320:	62737500 	rsbsvs	r7, r3, #0, 10
     324:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     328:	0100632e 	tsteq	r0, lr, lsr #6
     32c:	6f630000 	svcvs	0x00630000
     330:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     334:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
     338:	00000200 	andeq	r0, r0, r0, lsl #4
     33c:	5f627375 	svcpl	0x00627375
     340:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     344:	00010068 	andeq	r0, r1, r8, rrx
     348:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     34c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     350:	00030068 	andeq	r0, r3, r8, rrx
     354:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     358:	31663233 	cmncc	r6, r3, lsr r2
     35c:	62783330 	rsbsvs	r3, r8, #48, 6	; 0xc0000000
     360:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     364:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     368:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     36c:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     370:	31663233 	cmncc	r6, r3, lsr r2
     374:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     378:	00000200 	andeq	r0, r0, r0, lsl #4
     37c:	00310500 	eorseq	r0, r1, r0, lsl #10
     380:	01dc0205 	bicseq	r0, ip, r5, lsl #4
     384:	22030800 	andcs	r0, r3, #0, 16
     388:	01320501 	teqeq	r2, r1, lsl #10
     38c:	01060105 	tsteq	r6, r5, lsl #2
     390:	03062b05 	movweq	r2, #27397	; 0x6b05
     394:	2c052079 	stccs	0, cr2, [r5], {121}	; 0x79
     398:	06010501 	streq	r0, [r1], -r1, lsl #10
     39c:	065c0501 	ldrbeq	r0, [ip], -r1, lsl #10
     3a0:	015d054e 	cmpeq	sp, lr, asr #10
     3a4:	01060105 	tsteq	r6, r5, lsl #2
     3a8:	06630520 	strbteq	r0, [r3], -r0, lsr #10
     3ac:	01640521 	cmneq	r4, r1, lsr #10
     3b0:	01060105 	tsteq	r6, r5, lsl #2
     3b4:	06110520 	ldreq	r0, [r1], -r0, lsr #10
     3b8:	05202003 	streq	r2, [r0, #-3]!
     3bc:	10051303 	andne	r1, r5, r3, lsl #6
     3c0:	03050106 	movweq	r0, #20742	; 0x5106
     3c4:	580a0306 	stmdapl	sl, {r1, r2, r8, r9}
     3c8:	01060d05 	tsteq	r6, r5, lsl #26
     3cc:	4b060305 	blmi	180fe8 <__Stack_Size+0x17ffe8>
     3d0:	01060d05 	tsteq	r6, r5, lsl #26
     3d4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     3d8:	01010101 	tsteq	r1, r1, lsl #2
     3dc:	202e2e3c 	eorcs	r2, lr, ip, lsr lr
     3e0:	2e060113 	mcrcs	1, 0, r0, cr6, cr3, {0}
     3e4:	07052106 	streq	r2, [r5, -r6, lsl #2]
     3e8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     3ec:	2e051103 	adfcss	f1, f5, f3
     3f0:	03040200 	movweq	r0, #16896	; 0x4200
     3f4:	03052106 	movweq	r2, #20742	; 0x5106
     3f8:	03040200 	movweq	r0, #16896	; 0x4200
     3fc:	02002006 	andeq	r2, r0, #6
     400:	00200304 	eoreq	r0, r0, r4, lsl #6
     404:	06020402 	streq	r0, [r2], -r2, lsl #8
     408:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     40c:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
     410:	00010204 	andeq	r0, r1, r4, lsl #4
     414:	01020402 	tsteq	r2, r2, lsl #8
     418:	02040200 	andeq	r0, r4, #0, 4
     41c:	04020001 	streq	r0, [r2], #-1
     420:	02002002 	andeq	r2, r0, #2
     424:	003c0204 	eorseq	r0, ip, r4, lsl #4
     428:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     42c:	02040200 	andeq	r0, r4, #0, 4
     430:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     434:	0d051702 	stceq	7, cr1, [r5, #-8]
     438:	02040200 	andeq	r0, r4, #0, 4
     43c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     440:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
     444:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
     448:	0d052202 	sfmeq	f2, 4, [r5, #-8]
     44c:	02040200 	andeq	r0, r4, #0, 4
     450:	0003051e 	andeq	r0, r3, lr, lsl r5
     454:	06020402 	streq	r0, [r2], -r2, lsl #8
     458:	00070530 	andeq	r0, r7, r0, lsr r5
     45c:	01020402 	tsteq	r2, r2, lsl #8
     460:	02040200 	andeq	r0, r4, #0, 4
     464:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     468:	02040200 	andeq	r0, r4, #0, 4
     46c:	002a0510 	eoreq	r0, sl, r0, lsl r5
     470:	06030402 	streq	r0, [r3], -r2, lsl #8
     474:	00030530 	andeq	r0, r3, r0, lsr r5
     478:	06030402 	streq	r0, [r3], -r2, lsl #8
     47c:	00470520 	subeq	r0, r7, r0, lsr #10
     480:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     484:	02003705 	andeq	r3, r0, #1310720	; 0x140000
     488:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     48c:	04020003 	streq	r0, [r2], #-3
     490:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
     494:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     498:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     49c:	05130603 	ldreq	r0, [r3, #-1539]	; 0xfffff9fd
     4a0:	04020003 	streq	r0, [r2], #-3
     4a4:	00200603 	eoreq	r0, r0, r3, lsl #12
     4a8:	20030402 	andcs	r0, r3, r2, lsl #8
     4ac:	0f052106 	svceq	0x00052106
     4b0:	03050106 	movweq	r0, #20742	; 0x5106
     4b4:	0f053d06 	svceq	0x00053d06
     4b8:	03050106 	movweq	r0, #20742	; 0x5106
     4bc:	0f052f06 	svceq	0x00052f06
     4c0:	03050106 	movweq	r0, #20742	; 0x5106
     4c4:	0f052f06 	svceq	0x00052f06
     4c8:	03050106 	movweq	r0, #20742	; 0x5106
     4cc:	0f052f06 	svceq	0x00052f06
     4d0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     4d4:	042f0603 	strteq	r0, [pc], #-1539	; 4dc <_Minimum_Stack_Size+0x3dc>
     4d8:	03160502 	tsteq	r6, #8388608	; 0x800000
     4dc:	05010aff 	streq	r0, [r1, #-2815]	; 0xfffff501
     4e0:	27051403 	strcs	r1, [r5, -r3, lsl #8]
     4e4:	044a0106 	strbeq	r0, [sl], #-262	; 0xfffffefa
     4e8:	03010501 	movweq	r0, #5377	; 0x1501
     4ec:	05017587 	streq	r7, [r1, #-1415]	; 0xfffffa79
     4f0:	e203064f 	and	r0, r3, #82837504	; 0x4f00000
     4f4:	0305e400 	movweq	lr, #21504	; 0x5400
     4f8:	064f0513 			; <UNDEFINED> instruction: 0x064f0513
     4fc:	21180511 	tstcs	r8, r1, lsl r5
     500:	05220905 	streq	r0, [r2, #-2309]!	; 0xfffff6fb
     504:	03055618 	movweq	r5, #22040	; 0x5618
     508:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
     50c:	2e060505 	cfsh32cs	mvfx0, mvfx6, #5
     510:	06015906 	streq	r5, [r1], -r6, lsl #18
     514:	06030520 	streq	r0, [r3], -r0, lsr #10
     518:	060c0595 			; <UNDEFINED> instruction: 0x060c0595
     51c:	06030501 	streq	r0, [r3], -r1, lsl #10
     520:	06141321 	ldreq	r1, [r4], -r1, lsr #6
     524:	2e063c13 	mcrcs	12, 0, r3, cr6, cr3, {0}
     528:	05591905 	ldrbeq	r1, [r9, #-2309]	; 0xfffff6fb
     52c:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     530:	03060505 	movweq	r0, #25861	; 0x6505
     534:	05012077 	streq	r2, [r1, #-119]	; 0xffffff89
     538:	05b30607 	ldreq	r0, [r3, #1543]!	; 0x607
     53c:	03053312 	movweq	r3, #21266	; 0x5312
     540:	12053006 	andne	r3, r5, #6
     544:	03050106 	movweq	r0, #20742	; 0x5106
     548:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
     54c:	67064a06 	strvs	r4, [r6, -r6, lsl #20]
     550:	01062305 	tsteq	r6, r5, lsl #6
     554:	21060505 	tstcs	r6, r5, lsl #10
     558:	01061605 	tsteq	r6, r5, lsl #12
     55c:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
     560:	05052d16 	streq	r2, [r5, #-3350]	; 0xfffff2ea
     564:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     568:	06212e06 	strteq	r2, [r1], -r6, lsl #28
     56c:	013e0158 	teqeq	lr, r8, asr r1
     570:	03060c05 	movweq	r0, #27653	; 0x6c05
     574:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
     578:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
     57c:	060c0522 	streq	r0, [ip], -r2, lsr #10
     580:	21010501 	tstcs	r1, r1, lsl #10
     584:	03061905 	movweq	r1, #26885	; 0x6905
     588:	1d052065 	stcne	0, cr2, [r5, #-404]	; 0xfffffe6c
     58c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     590:	0521060e 	streq	r0, [r1, #-1550]!	; 0xfffff9f2
     594:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
     598:	03060505 	movweq	r0, #25861	; 0x6505
     59c:	2305200d 	movwcs	r2, #20493	; 0x500d
     5a0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     5a4:	26052106 	strcs	r2, [r5], -r6, lsl #2
     5a8:	07051306 	streq	r1, [r5, -r6, lsl #6]
     5ac:	0521061f 	streq	r0, [r1, #-1567]!	; 0xfffff9e1
     5b0:	39150626 	ldmdbcc	r5, {r1, r2, r5, r9, sl}
     5b4:	07051d31 	smladxeq	r5, r1, sp, r1
     5b8:	27052106 	strcs	r2, [r5, -r6, lsl #2]
     5bc:	33051606 	movwcc	r1, #22022	; 0x5606
     5c0:	2a2e052e 	bcs	b81a80 <__Stack_Size+0xb80a80>
     5c4:	30060705 	andcc	r0, r6, r5, lsl #14
     5c8:	33051313 	movwcc	r1, #21267	; 0x5313
     5cc:	27050106 	strcs	r0, [r5, -r6, lsl #2]
     5d0:	3017052e 	andscc	r0, r7, lr, lsr #10
     5d4:	051e2705 	ldreq	r2, [lr, #-1797]	; 0xfffff8fb
     5d8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     5dc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     5e0:	012f0605 			; <UNDEFINED> instruction: 0x012f0605
     5e4:	56052006 	strpl	r2, [r5], -r6
     5e8:	05250806 	streq	r0, [r5, #-2054]!	; 0xfffff7fa
     5ec:	56051303 	strpl	r1, [r5], -r3, lsl #6
     5f0:	03051106 	movweq	r1, #20742	; 0x5106
     5f4:	2c090525 	cfstr32cs	mvfx0, [r9], {37}	; 0x25
     5f8:	05300305 	ldreq	r0, [r0, #-773]!	; 0xfffffcfb
     5fc:	03051c18 	movweq	r1, #23576	; 0x5c18
     600:	46180524 	ldrmi	r0, [r8], -r4, lsr #10
     604:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     608:	06011413 			; <UNDEFINED> instruction: 0x06011413
     60c:	20780328 	rsbscs	r0, r8, r8, lsr #6
     610:	a0019106 	andge	r9, r1, r6, lsl #2
     614:	01060c05 	tsteq	r6, r5, lsl #24
     618:	21060305 	tstcs	r6, r5, lsl #6
     61c:	2e061413 	cfmvdlrcs	mvd6, r1
     620:	19052f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, sp}
     624:	061d054b 	ldreq	r0, [sp], -fp, asr #10
     628:	12052e01 	andne	r2, r5, #1, 28
     62c:	06030531 			; <UNDEFINED> instruction: 0x06030531
     630:	06120530 			; <UNDEFINED> instruction: 0x06120530
     634:	06030501 	streq	r0, [r3], -r1, lsl #10
     638:	053c0624 	ldreq	r0, [ip, #-1572]!	; 0xfffff9dc
     63c:	06742e05 	ldrbteq	r2, [r4], -r5, lsl #28
     640:	06240521 	strteq	r0, [r4], -r1, lsr #10
     644:	2d230513 	cfstr32cs	mvfx0, [r3, #-76]!	; 0xffffffb4
     648:	21060505 	tstcs	r6, r5, lsl #10
     64c:	01062405 	tsteq	r6, r5, lsl #8
     650:	2f060505 	svccs	0x00060505
     654:	01062305 	tsteq	r6, r5, lsl #6
     658:	21060505 	tstcs	r6, r5, lsl #10
     65c:	01062405 	tsteq	r6, r5, lsl #8
     660:	30060505 	andcc	r0, r6, r5, lsl #10
     664:	01060905 	tsteq	r6, r5, lsl #18
     668:	21060505 	tstcs	r6, r5, lsl #10
     66c:	01062e05 	tsteq	r6, r5, lsl #28
     670:	0305052e 	movweq	r0, #21806	; 0x552e
     674:	03053c0d 	movweq	r3, #23565	; 0x5c0d
     678:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
     67c:	0c050106 	stfeqs	f0, [r5], {6}
     680:	2b140523 	blcs	501b14 <__Stack_Size+0x500b14>
     684:	2f060305 	svccs	0x00060305
     688:	01061405 	tsteq	r6, r5, lsl #8
     68c:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
     690:	03051e14 	movweq	r1, #24084	; 0x5e14
     694:	01053006 	tsteq	r5, r6
     698:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
     69c:	205e0306 	subscs	r0, lr, r6, lsl #6
     6a0:	01061d05 	tsteq	r6, r5, lsl #26
     6a4:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
     6a8:	061d0521 	ldreq	r0, [sp], -r1, lsr #10
     6ac:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     6b0:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     6b4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     6b8:	0f030605 	svceq	0x00030605
     6bc:	06230520 	strteq	r0, [r3], -r0, lsr #10
     6c0:	06050501 	streq	r0, [r5], -r1, lsl #10
     6c4:	06070521 	streq	r0, [r7], -r1, lsr #10
     6c8:	1f230513 	svcne	0x00230513
     6cc:	21060505 	tstcs	r6, r5, lsl #10
     6d0:	13064705 	movwne	r4, #26373	; 0x6705
     6d4:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     6d8:	06470521 	strbeq	r0, [r7], -r1, lsr #10
     6dc:	3c260501 	cfstr32cc	mvfx0, [r6], #-4
     6e0:	4b060705 	blmi	1822fc <__Stack_Size+0x1812fc>
     6e4:	01065005 	tsteq	r6, r5
     6e8:	05324905 	ldreq	r4, [r2, #-2309]!	; 0xfffff6fb
     6ec:	05056627 	streq	r6, [r5, #-1575]	; 0xfffff9d9
     6f0:	9f016806 	svcls	0x00016806
     6f4:	99070501 	stmdbls	r7, {r0, r8, sl}
     6f8:	01064705 	tsteq	r6, r5, lsl #14
     6fc:	053c2605 	ldreq	r2, [ip, #-1541]!	; 0xfffff9fb
     700:	134b0607 	movtne	r0, #46599	; 0xb607
     704:	01065505 	tsteq	r6, r5, lsl #10
     708:	03061905 	movweq	r1, #26885	; 0x6905
     70c:	0305c80d 	movweq	ip, #22541	; 0x580d
     710:	06190513 			; <UNDEFINED> instruction: 0x06190513
     714:	2f090511 	svccs	0x00090511
     718:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
     71c:	12053213 	andne	r3, r5, #805306369	; 0x30000001
     720:	06050524 	streq	r0, [r5], -r4, lsr #10
     724:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
     728:	1a051307 	bne	14534c <__Stack_Size+0x14434c>
     72c:	0f050106 	svceq	0x00050106
     730:	0607052e 	streq	r0, [r7], -lr, lsr #10
     734:	060a052f 	streq	r0, [sl], -pc, lsr #10
     738:	66090501 	strvs	r0, [r9], -r1, lsl #10
     73c:	014b2f06 	cmpeq	fp, r6, lsl #30
     740:	05840705 	streq	r0, [r4, #1797]	; 0x705
     744:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     748:	2f062009 	svccs	0x00062009
     74c:	0f050159 	svceq	0x00050159
     750:	05058406 	streq	r8, [r5, #-1030]	; 0xfffffbfa
     754:	0301052e 	movweq	r0, #5422	; 0x152e
     758:	03052e27 	movweq	r2, #24103	; 0x5e27
     75c:	2e5d0306 	cdpcs	3, 5, cr0, cr13, cr6, {0}
     760:	01060905 	tsteq	r6, r5, lsl #18
     764:	062e0505 	strteq	r0, [lr], -r5, lsl #10
     768:	0f052f2f 	svceq	0x00052f2f
     76c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     770:	03054b06 	movweq	r4, #23302	; 0x5b06
     774:	06090523 	streq	r0, [r9], -r3, lsr #10
     778:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
     77c:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     780:	06110530 			; <UNDEFINED> instruction: 0x06110530
     784:	320e0501 	andcc	r0, lr, #4194304	; 0x400000
     788:	051c1105 	ldreq	r1, [ip, #-261]	; 0xfffffefb
     78c:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
     790:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     794:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     798:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     79c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     7a0:	01060109 	tsteq	r6, r9, lsl #2
     7a4:	05111005 	ldreq	r1, [r1, #-5]
     7a8:	2c052f49 	stccs	15, cr2, [r5], {73}	; 0x49
     7ac:	03040200 	movweq	r0, #16896	; 0x4200
     7b0:	05052006 	streq	r2, [r5, #-6]
     7b4:	03040200 	movweq	r0, #16896	; 0x4200
     7b8:	49052006 	stmdbmi	r5, {r1, r2, sp}
     7bc:	03040200 	movweq	r0, #16896	; 0x4200
     7c0:	0039052e 	eorseq	r0, r9, lr, lsr #10
     7c4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     7c8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     7cc:	062e0304 	strteq	r0, [lr], -r4, lsl #6
     7d0:	060f0523 	streq	r0, [pc], -r3, lsr #10
     7d4:	3d050501 	cfstr32cc	mvfx0, [r5, #-4]
     7d8:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffff8db <BootRAM+0xef7007c>
     7dc:	592f0605 	stmdbpl	pc!, {r0, r2, r9, sl}	; <UNPREDICTABLE>
     7e0:	060d0567 	streq	r0, [sp], -r7, ror #10
     7e4:	06050501 	streq	r0, [r5], -r1, lsl #10
     7e8:	3103052f 	tstcc	r3, pc, lsr #10
     7ec:	01060905 	tsteq	r6, r5, lsl #18
     7f0:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     7f4:	0f052f2f 	svceq	0x00052f2f
     7f8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     7fc:	0f056706 	svceq	0x00056706
     800:	03050106 	movweq	r0, #20742	; 0x5106
     804:	09054d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, lr}
     808:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     80c:	052f063c 	streq	r0, [pc, #-1596]!	; 1d8 <_Minimum_Stack_Size+0xd8>
     810:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     814:	05830605 	streq	r0, [r3, #1541]	; 0x605
     818:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     81c:	11030644 	tstne	r3, r4, asr #12
     820:	03055808 	movweq	r5, #22536	; 0x5808
     824:	06440513 			; <UNDEFINED> instruction: 0x06440513
     828:	26030511 			; <UNDEFINED> instruction: 0x26030511
     82c:	051b3305 	ldreq	r3, [fp, #-773]	; 0xfffffcfb
     830:	03052010 	movweq	r2, #20496	; 0x5010
     834:	51054b06 	tstpl	r5, r6, lsl #22
     838:	17051506 	strne	r1, [r5, -r6, lsl #10]
     83c:	234a051d 	movtcs	r0, #42269	; 0xa51d
     840:	05470c05 	strbeq	r0, [r7, #-3077]	; 0xfffff3fb
     844:	13220603 			; <UNDEFINED> instruction: 0x13220603
     848:	01064a05 	tsteq	r6, r5, lsl #20
     84c:	21060305 	tstcs	r6, r5, lsl #6
     850:	05010705 	streq	r0, [r1, #-1797]	; 0xfffff8fb
     854:	04020003 	streq	r0, [r2], #-3
     858:	06010601 	streq	r0, [r1], -r1, lsl #12
     85c:	2014063f 	andscs	r0, r4, pc, lsr r6
     860:	053a1005 	ldreq	r1, [sl, #-5]!
     864:	01220603 			; <UNDEFINED> instruction: 0x01220603
     868:	01053c06 	tsteq	r5, r6, lsl #24
     86c:	00050591 	muleq	r5, r1, r5
     870:	06030402 	streq	r0, [r3], -r2, lsl #8
     874:	0011051b 	andseq	r0, r1, fp, lsl r5
     878:	06030402 	streq	r0, [r3], -r2, lsl #8
     87c:	000a0501 	andeq	r0, sl, r1, lsl #10
     880:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     884:	03040200 	movweq	r0, #16896	; 0x4200
     888:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     88c:	22052003 	andcs	r2, r5, #3
     890:	02050006 	andeq	r0, r5, #6
     894:	0800069c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl}
     898:	017df503 	cmneq	sp, r3, lsl #10	; <UNPREDICTABLE>
     89c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     8a0:	05110622 	ldreq	r0, [r1, #-1570]	; 0xfffff9de
     8a4:	0505210e 	streq	r2, [r5, #-270]	; 0xfffffef2
     8a8:	0603052e 	streq	r0, [r3], -lr, lsr #10
     8ac:	060c0521 	streq	r0, [ip], -r1, lsr #10
     8b0:	06030501 	streq	r0, [r3], -r1, lsl #10
     8b4:	06030421 	streq	r0, [r3], -r1, lsr #8
     8b8:	0100c603 	tsteq	r0, r3, lsl #12
     8bc:	06010458 			; <UNDEFINED> instruction: 0x06010458
     8c0:	017fbb03 	cmneq	pc, r3, lsl #22
     8c4:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     8c8:	0100c403 	tsteq	r0, r3, lsl #8
     8cc:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     8d0:	01043c20 	tsteq	r4, r0, lsr #24
     8d4:	7fbd0306 	svcvc	0x00bd0306
     8d8:	06050501 	streq	r0, [r5], -r1, lsl #10
     8dc:	1d0d0515 	cfstr32ne	mvfx0, [sp, #-84]	; 0xffffffac
     8e0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     8e4:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
     8e8:	2b0b0513 	blcs	2c1d3c <__Stack_Size+0x2c0d3c>
     8ec:	31060505 	tstcc	r6, r5, lsl #10
     8f0:	01060d05 	tsteq	r6, r5, lsl #26
     8f4:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
     8f8:	8603062d 	strhi	r0, [r3], -sp, lsr #12
     8fc:	03053c02 	movweq	r3, #23554	; 0x5c02
     900:	062d0513 			; <UNDEFINED> instruction: 0x062d0513
     904:	21330511 	teqcs	r3, r1, lsl r5
     908:	05201005 	streq	r1, [r0, #-5]!
     90c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
     910:	0510062d 	ldreq	r0, [r0, #-1581]	; 0xfffff9d3
     914:	05202211 	streq	r2, [r0, #-529]!	; 0xfffffdef
     918:	052f0603 	streq	r0, [pc, #-1539]!	; 31d <_Minimum_Stack_Size+0x21d>
     91c:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
     920:	13210603 			; <UNDEFINED> instruction: 0x13210603
     924:	01065005 	tsteq	r6, r5
     928:	051f0f05 	ldreq	r0, [pc, #-3845]	; fffffa2b <BootRAM+0xef701cc>
     92c:	03052149 	movweq	r2, #20809	; 0x5149
     930:	07055906 	streq	r5, [r5, -r6, lsl #18]
     934:	10010601 	andne	r0, r1, r1, lsl #12
     938:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
     93c:	03040200 	movweq	r0, #16896	; 0x4200
     940:	0e053106 	adfeqs	f3, f5, f6
     944:	03040200 	movweq	r0, #16896	; 0x4200
     948:	03050106 	movweq	r0, #20742	; 0x5106
     94c:	03040200 	movweq	r0, #16896	; 0x4200
     950:	000c052d 	andeq	r0, ip, sp, lsr #10
     954:	21030402 	tstcs	r3, r2, lsl #8
     958:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     95c:	062d0304 	strteq	r0, [sp], -r4, lsl #6
     960:	20060123 	andcs	r0, r6, r3, lsr #2
     964:	05910666 	ldreq	r0, [r1, #1638]	; 0x666
     968:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
     96c:	f9030623 			; <UNDEFINED> instruction: 0xf9030623
     970:	0305207d 	movweq	r2, #20605	; 0x507d
     974:	23051313 	movwcs	r1, #21267	; 0x5313
     978:	05221006 	streq	r1, [r2, #-6]!
     97c:	23053d16 	movwcs	r3, #23830	; 0x5d16
     980:	0603053b 			; <UNDEFINED> instruction: 0x0603053b
     984:	0505142f 	streq	r1, [r5, #-1071]	; 0xfffffbd1
     988:	3d060106 	stfccs	f0, [r6, #-24]	; 0xffffffe8
     98c:	01060705 	tsteq	r6, r5, lsl #14
     990:	042f062e 	strteq	r0, [pc], #-1582	; 998 <_Minimum_Stack_Size+0x898>
     994:	03130503 	tsteq	r3, #12582912	; 0xc00000
     998:	03050138 	movweq	r0, #20792	; 0x5138
     99c:	05010413 	streq	r0, [r1, #-1043]	; 0xfffffbed
     9a0:	48030611 	stmdami	r3, {r0, r4, r9, sl}
     9a4:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
     9a8:	2038030a 	eorscs	r0, r8, sl, lsl #6
     9ac:	01042e2e 	tsteq	r4, lr, lsr #28
     9b0:	03060705 	movweq	r0, #26373	; 0x6705
     9b4:	11050148 	tstne	r5, r8, asr #2
     9b8:	07050106 	streq	r0, [r5, -r6, lsl #2]
     9bc:	03052106 	movweq	r2, #20742	; 0x5106
     9c0:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
     9c4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
     9c8:	0305200b 	movweq	r2, #20491	; 0x500b
     9cc:	05053006 	streq	r3, [r5, #-6]
     9d0:	30060106 	andcc	r0, r6, r6, lsl #2
     9d4:	01060705 	tsteq	r6, r5, lsl #14
     9d8:	21060505 	tstcs	r6, r5, lsl #10
     9dc:	01060705 	tsteq	r6, r5, lsl #14
     9e0:	1a052106 	bne	148e00 <__Stack_Size+0x147e00>
     9e4:	07050106 	streq	r0, [r5, -r6, lsl #2]
     9e8:	060b0520 	streq	r0, [fp], -r0, lsr #10
     9ec:	04580a03 	ldrbeq	r0, [r8], #-2563	; 0xfffff5fd
     9f0:	03140503 	tsteq	r4, #12582912	; 0xc00000
     9f4:	0305010f 	movweq	r0, #20751	; 0x510f
     9f8:	3c2e0613 	stccc	6, cr0, [lr], #-76	; 0xffffffb4
     9fc:	07050104 	streq	r0, [r5, -r4, lsl #2]
     a00:	01580306 	cmpeq	r8, r6, lsl #6
     a04:	01060905 	tsteq	r6, r5, lsl #18
     a08:	03060b05 	movweq	r0, #27397	; 0x6b05
     a0c:	17055810 	smladne	r5, r0, r8, r5
     a10:	0b050106 	bleq	140e30 <__Stack_Size+0x13fe30>
     a14:	1e170522 	cfmul64ne	mvdx0, mvdx7, mvdx2
     a18:	21060b05 	tstcs	r6, r5, lsl #22
     a1c:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
     a20:	060b053b 			; <UNDEFINED> instruction: 0x060b053b
     a24:	05052f2f 	streq	r2, [r5, #-3887]	; 0xfffff0d1
     a28:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
     a2c:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     a30:	03052e14 	movweq	r2, #24084	; 0x5e14
     a34:	05204e03 	streq	r4, [r0, #-3587]!	; 0xfffff1fd
     a38:	20320307 	eorscs	r0, r2, r7, lsl #6
     a3c:	20062505 	andcs	r2, r6, r5, lsl #10
     a40:	01062a05 	tsteq	r6, r5, lsl #20
     a44:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     a48:	4a031405 	bmi	c5a64 <__Stack_Size+0xc4a64>
     a4c:	13030501 	movwne	r0, #13569	; 0x3501
     a50:	01060d05 	tsteq	r6, r5, lsl #26
     a54:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     a58:	01060b05 	tsteq	r6, r5, lsl #22
     a5c:	2f060305 	svccs	0x00060305
     a60:	01052e06 	tsteq	r5, r6, lsl #28
     a64:	0100c903 	tsteq	r0, r3, lsl #18
     a68:	03060b05 	movweq	r0, #27397	; 0x6b05
     a6c:	03042e62 	movweq	r2, #20066	; 0x4e62
     a70:	0c031405 	cfstrseq	mvf1, [r3], {5}
     a74:	13030501 	movwne	r0, #13569	; 0x3501
     a78:	01044a06 	tsteq	r4, r6, lsl #20
     a7c:	03060505 	movweq	r0, #25861	; 0x6505
     a80:	0b050177 	bleq	141064 <__Stack_Size+0x140064>
     a84:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     a88:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     a8c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     a90:	0e052105 	adfeqs	f2, f5, f5
     a94:	06050549 	streq	r0, [r5], -r9, asr #10
     a98:	202e062f 	eorcs	r0, lr, pc, lsr #12
     a9c:	07051706 	streq	r1, [r5, -r6, lsl #14]
     aa0:	21060106 	tstcs	r6, r6, lsl #2
     aa4:	01061605 	tsteq	r6, r5, lsl #12
     aa8:	06200905 	strteq	r0, [r0], -r5, lsl #18
     aac:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
     ab0:	04010603 	streq	r0, [r1], #-1539	; 0xfffff9fd
     ab4:	3c110501 	cfldr32cc	mvfx0, [r1], {1}
     ab8:	21060905 	tstcs	r6, r5, lsl #18
     abc:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
     ac0:	13030510 	movwne	r0, #13584	; 0x3510
     ac4:	01042e06 	tsteq	r4, r6, lsl #28
     ac8:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
     acc:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
     ad0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     ad4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
     ad8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     adc:	0402000e 	streq	r0, [r2], #-14
     ae0:	09052001 	stmdbeq	r5, {r0, sp}
     ae4:	14054b06 	strne	r4, [r5], #-2822	; 0xfffff4fa
     ae8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     aec:	062f0609 	strteq	r0, [pc], -r9, lsl #12
     af0:	060d0520 	streq	r0, [sp], -r0, lsr #10
     af4:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     af8:	06090501 	streq	r0, [r9], -r1, lsl #10
     afc:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
     b00:	06090501 	streq	r0, [r9], -r1, lsl #10
     b04:	0503042f 	streq	r0, [r3, #-1071]	; 0xfffffbd1
     b08:	01780314 	cmneq	r8, r4, lsl r3
     b0c:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     b10:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
     b14:	0f03062c 	svceq	0x0003062c
     b18:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
     b1c:	01700314 	cmneq	r0, r4, lsl r3
     b20:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     b24:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
     b28:	0b030605 	bleq	c2344 <__Stack_Size+0xc1344>
     b2c:	06090501 	streq	r0, [r9], -r1, lsl #10
     b30:	58070501 	stmdapl	r7, {r0, r8, sl}
     b34:	05012106 	streq	r2, [r1, #-262]	; 0xfffffefa
     b38:	0f05ae05 	svceq	0x0005ae05
     b3c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b40:	1f0f052f 	svcne	0x000f052f
     b44:	05210705 	streq	r0, [r1, #-1797]!	; 0xfffff8fb
     b48:	05051f0f 	streq	r1, [r5, #-3855]	; 0xfffff0f1
     b4c:	07052106 	streq	r2, [r5, -r6, lsl #2]
     b50:	0f020106 	svceq	0x00020106
     b54:	9a010100 	bls	40f5c <__Stack_Size+0x3ff5c>
     b58:	03000007 	movweq	r0, #7
     b5c:	00013600 	andeq	r3, r1, r0, lsl #12
     b60:	fb010200 	blx	4136a <__Stack_Size+0x4036a>
     b64:	01000d0e 	tsteq	r0, lr, lsl #26
     b68:	00010101 	andeq	r0, r1, r1, lsl #2
     b6c:	00010000 	andeq	r0, r1, r0
     b70:	72730100 	rsbsvc	r0, r3, #0, 2
     b74:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     b78:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     b7c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     b80:	752f0065 	strvc	r0, [pc, #-101]!	; b23 <_Minimum_Stack_Size+0xa23>
     b84:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 9c0 <_Minimum_Stack_Size+0x8c0>
     b88:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     b8c:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     b90:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     b94:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     b98:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     b9c:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     ba0:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     ba4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     ba8:	2f006564 	svccs	0x00006564
     bac:	2f727375 	svccs	0x00727375
     bb0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     bb4:	2f656475 	svccs	0x00656475
     bb8:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
     bbc:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
     bc0:	00007379 	andeq	r7, r0, r9, ror r3
     bc4:	73616c63 	cmnvc	r1, #25344	; 0x6300
     bc8:	696d5f73 	stmdbvs	sp!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     bcc:	00682e63 	rsbeq	r2, r8, r3, ror #28
     bd0:	75000001 	strvc	r0, [r0, #-1]
     bd4:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     bd8:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     bdc:	00000100 	andeq	r0, r0, r0, lsl #2
     be0:	73616c63 	cmnvc	r1, #25344	; 0x6300
     be4:	69685f73 	stmdbvs	r8!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     be8:	00682e64 	rsbeq	r2, r8, r4, ror #28
     bec:	73000001 	movwvc	r0, #1
     bf0:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     bf4:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     bf8:	00000100 	andeq	r0, r0, r0, lsl #2
     bfc:	5f627375 	svcpl	0x00627375
     c00:	73616c63 	cmnvc	r1, #25344	; 0x6300
     c04:	00632e73 	rsbeq	r2, r3, r3, ror lr
     c08:	63000001 	movwvs	r0, #1
     c0c:	5f65726f 	svcpl	0x0065726f
     c10:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
     c14:	00020068 	andeq	r0, r2, r8, rrx
     c18:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     c1c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     c20:	00030068 	andeq	r0, r3, r8, rrx
     c24:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     c28:	31663233 	cmncc	r6, r3, lsr r2
     c2c:	62783330 	rsbsvs	r3, r8, #48, 6	; 0xc0000000
     c30:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     c34:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     c38:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     c3c:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     c40:	31663233 	cmncc	r6, r3, lsr r2
     c44:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     c48:	00000200 	andeq	r0, r0, r0, lsl #4
     c4c:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
     c50:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     c54:	00000300 	andeq	r0, r0, r0, lsl #6
     c58:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     c5c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     c60:	00000400 	andeq	r0, r0, r0, lsl #8
     c64:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
     c68:	00682e74 	rsbeq	r2, r8, r4, ror lr
     c6c:	6c000004 	stcvs	0, cr0, [r0], {4}
     c70:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
     c74:	00040068 	andeq	r0, r4, r8, rrx
     c78:	6f727000 	svcvs	0x00727000
     c7c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     c80:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
     c84:	00010068 	andeq	r0, r1, r8, rrx
     c88:	62737500 	rsbsvs	r7, r3, #0, 10
     c8c:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
     c90:	0100682e 	tsteq	r0, lr, lsr #16
     c94:	05000000 	streq	r0, [r0, #-0]
     c98:	0205002b 	andeq	r0, r5, #43	; 0x2b
     c9c:	08000860 	stmdaeq	r0, {r5, r6, fp}
     ca0:	05011003 	streq	r1, [r1, #-3]
     ca4:	02041303 	andeq	r1, r4, #201326592	; 0xc000000
     ca8:	03060905 	movweq	r0, #26885	; 0x6905
     cac:	2e0101a7 	adfcsdp	f0, f1, f7
     cb0:	2b050104 	blcs	1410c8 <__Stack_Size+0x1400c8>
     cb4:	017ed803 	cmneq	lr, r3, lsl #16
     cb8:	15050204 	strne	r0, [r5, #-516]	; 0xfffffdfc
     cbc:	2001a903 	andcs	sl, r1, r3, lsl #18
     cc0:	03050104 	movweq	r0, #20740	; 0x5104
     cc4:	207ed803 	rsbscs	sp, lr, r3, lsl #16
     cc8:	15050204 	strne	r0, [r5, #-516]	; 0xfffffdfc
     ccc:	2001a803 	andcs	sl, r1, r3, lsl #16
     cd0:	03050104 	movweq	r0, #20740	; 0x5104
     cd4:	4a7ed803 	bmi	1fb6ce8 <__Stack_Size+0x1fb5ce8>
     cd8:	14050204 	strne	r0, [r5], #-516	; 0xfffffdfc
     cdc:	01a60306 			; <UNDEFINED> instruction: 0x01a60306
     ce0:	13030520 	movwne	r0, #13600	; 0x3520
     ce4:	06150513 			; <UNDEFINED> instruction: 0x06150513
     ce8:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     cec:	051e0b05 	ldreq	r0, [lr, #-2821]	; 0xfffff4fb
     cf0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
     cf4:	20069101 	andcs	r9, r6, r1, lsl #2
     cf8:	01042e3c 	tsteq	r4, ip, lsr lr
     cfc:	7ed60306 	cdpvc	3, 13, cr0, cr6, cr6, {0}
     d00:	060b0501 	streq	r0, [fp], -r1, lsl #10
     d04:	2f010501 	svccs	0x00010501
     d08:	03062805 	movweq	r2, #26629	; 0x6805
     d0c:	03055828 	movweq	r5, #22568	; 0x5828
     d10:	2f051313 	svccs	0x00051313
     d14:	0a050106 	beq	141134 <__Stack_Size+0x140134>
     d18:	03054a2e 	movweq	r4, #23086	; 0x5a2e
     d1c:	01052106 	tsteq	r5, r6, lsl #2
     d20:	24051306 	strcs	r1, [r5], #-774	; 0xfffffcfa
     d24:	58100306 	ldmdapl	r0, {r1, r2, r8, r9}
     d28:	13130305 	tstne	r3, #335544320	; 0x14000000
     d2c:	01061d05 	tsteq	r6, r5, lsl #26
     d30:	3c2e0a05 			; <UNDEFINED> instruction: 0x3c2e0a05
     d34:	21060305 	tstcs	r6, r5, lsl #6
     d38:	13060105 	movwne	r0, #24837	; 0x6105
     d3c:	69062705 	stmdbvs	r6, {r0, r2, r8, r9, sl, sp}
     d40:	13130305 	tstne	r3, #335544320	; 0x14000000
     d44:	06010513 			; <UNDEFINED> instruction: 0x06010513
     d48:	06190513 			; <UNDEFINED> instruction: 0x06190513
     d4c:	13030524 	movwne	r0, #13604	; 0x3524
     d50:	19051513 	stmdbne	r5, {r0, r1, r4, r8, sl, ip}
     d54:	14050d06 	strne	r0, [r5], #-3334	; 0xfffff2fa
     d58:	2e050525 	cfsh32cs	mvfx0, mvfx5, #21
     d5c:	02001905 	andeq	r1, r0, #81920	; 0x14000
     d60:	20060104 	andcs	r0, r6, r4, lsl #2
     d64:	02002005 	andeq	r2, r0, #5
     d68:	01060104 	tsteq	r6, r4, lsl #2
     d6c:	21060305 	tstcs	r6, r5, lsl #6
     d70:	01061105 	tsteq	r6, r5, lsl #2
     d74:	05211005 	streq	r1, [r1, #-5]!
     d78:	0a051f11 	beq	1489c4 <__Stack_Size+0x1479c4>
     d7c:	21100520 	tstcs	r0, r0, lsr #10
     d80:	051f0a05 	ldreq	r0, [pc, #-2565]	; 383 <_Minimum_Stack_Size+0x283>
     d84:	0a053005 	beq	14cda0 <__Stack_Size+0x14bda0>
     d88:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
     d8c:	05051321 	streq	r1, [r5, #-801]	; 0xfffffcdf
     d90:	10050106 	andne	r0, r5, r6, lsl #2
     d94:	0301051f 	movweq	r0, #5407	; 0x151f
     d98:	0305201c 	movweq	r2, #20508	; 0x501c
     d9c:	20660306 	rsbcs	r0, r6, r6, lsl #6
     da0:	01061105 	tsteq	r6, r5, lsl #2
     da4:	05210a05 	streq	r0, [r1, #-2565]!	; 0xfffff5fb
     da8:	11052312 	tstne	r5, r2, lsl r3
     dac:	0603051c 			; <UNDEFINED> instruction: 0x0603051c
     db0:	060a0521 	streq	r0, [sl], -r1, lsr #10
     db4:	06030501 	streq	r0, [r3], -r1, lsl #10
     db8:	06120523 	ldreq	r0, [r2], -r3, lsr #10
     dbc:	06030501 	streq	r0, [r3], -r1, lsl #10
     dc0:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
     dc4:	2e1e0501 	cfmul32cs	mvfx0, mvfx14, mvfx1
     dc8:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
     dcc:	03300603 	teqeq	r0, #3145728	; 0x300000
     dd0:	13130169 	tstne	r3, #1073741850	; 0x4000001a
     dd4:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
     dd8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     ddc:	143d0603 	ldrtne	r0, [sp], #-1539	; 0xfffff9fd
     de0:	060e0516 			; <UNDEFINED> instruction: 0x060e0516
     de4:	20050501 	andcs	r0, r5, r1, lsl #10
     de8:	0f052f06 	svceq	0x00052f06
     dec:	0a050106 	beq	14120c <__Stack_Size+0x14020c>
     df0:	22207903 	eorcs	r7, r0, #49152	; 0xc000
     df4:	05251905 	streq	r1, [r5, #-2309]!	; 0xfffff6fb
     df8:	1905200f 	stmdbne	r5, {r0, r1, r2, r3, sp}
     dfc:	06050520 	streq	r0, [r5], -r0, lsr #10
     e00:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
     e04:	06030501 	streq	r0, [r3], -r1, lsl #10
     e08:	060f054f 	streq	r0, [pc], -pc, asr #10
     e0c:	230c0501 	movwcs	r0, #50433	; 0xc501
     e10:	051d0505 	ldreq	r0, [sp, #-1285]	; 0xfffffafb
     e14:	05200614 	streq	r0, [r0, #-1556]!	; 0xfffff9ec
     e18:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
     e1c:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     e20:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     e24:	03053c0d 	movweq	r3, #23565	; 0x5c0d
     e28:	0c053006 	stceq	0, cr3, [r5], {6}
     e2c:	0f050106 	svceq	0x00050106
     e30:	02050006 	andeq	r0, r5, #6
     e34:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
     e38:	13030515 	movwne	r0, #13589	; 0x3515
     e3c:	01061005 	tsteq	r6, r5
     e40:	062e0505 	strteq	r0, [lr], -r5, lsl #10
     e44:	060c052f 	streq	r0, [ip], -pc, lsr #10
     e48:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
     e4c:	0b054106 	bleq	15126c <__Stack_Size+0x15026c>
     e50:	10050106 	andne	r0, r5, r6, lsl #2
     e54:	09052220 	stmdbeq	r5, {r5, r9, sp}
     e58:	2e7a0306 	cdpcs	3, 7, cr0, cr10, cr6, {0}
     e5c:	01061605 	tsteq	r6, r5, lsl #12
     e60:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     e64:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
     e68:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     e6c:	33062007 	movwcc	r2, #24583	; 0x6007
     e70:	01060b05 	tsteq	r6, r5, lsl #22
     e74:	05201005 	streq	r1, [r0, #-5]!
     e78:	052b0605 	streq	r0, [fp, #-1541]!	; 0xfffff9fb
     e7c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     e80:	07052019 	smladeq	r5, r9, r0, r2
     e84:	060b0520 	streq	r0, [fp], -r0, lsr #10
     e88:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
     e8c:	201f0501 	andscs	r0, pc, r1, lsl #10
     e90:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
     e94:	03052e0d 	movweq	r2, #24077	; 0x5e0d
     e98:	0d054006 	stceq	0, cr4, [r5, #-24]	; 0xffffffe8
     e9c:	03050106 	movweq	r0, #20742	; 0x5106
     ea0:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     ea4:	03050106 	movweq	r0, #20742	; 0x5106
     ea8:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     eac:	01050106 	tsteq	r5, r6, lsl #2
     eb0:	05030421 	streq	r0, [r3, #-1057]	; 0xfffffbdf
     eb4:	8a030641 	bhi	c27c0 <__Stack_Size+0xc17c0>
     eb8:	03054a7f 	movweq	r4, #23167	; 0x5a7f
     ebc:	06410513 			; <UNDEFINED> instruction: 0x06410513
     ec0:	210a0511 	tstcs	sl, r1, lsl r5
     ec4:	06200505 	strteq	r0, [r0], -r5, lsl #10
     ec8:	0607052f 	streq	r0, [r7], -pc, lsr #10
     ecc:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
     ed0:	06010609 	streq	r0, [r1], -r9, lsl #12
     ed4:	060f054b 	streq	r0, [pc], -fp, asr #10
     ed8:	22100501 	andscs	r0, r0, #4194304	; 0x400000
     edc:	051e0f05 	ldreq	r0, [lr, #-3845]	; 0xfffff0fb
     ee0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
     ee4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     ee8:	052f0609 	streq	r0, [pc, #-1545]!	; 8e7 <_Minimum_Stack_Size+0x7e7>
     eec:	0e030601 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx1
     ef0:	06030501 	streq	r0, [r3], -r1, lsl #10
     ef4:	13207603 			; <UNDEFINED> instruction: 0x13207603
     ef8:	01060505 	tsteq	r6, r5, lsl #10
     efc:	03060605 	movweq	r0, #26117	; 0x6605
     f00:	05052e75 	streq	r2, [r5, #-3701]	; 0xfffff18b
     f04:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
     f08:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     f0c:	2f062007 	svccs	0x00062007
     f10:	01061405 	tsteq	r6, r5, lsl #8
     f14:	59060705 	stmdbpl	r6, {r0, r2, r8, r9, sl}
     f18:	01060d05 	tsteq	r6, r5, lsl #26
     f1c:	21060705 	tstcs	r6, r5, lsl #14
     f20:	01060d05 	tsteq	r6, r5, lsl #26
     f24:	2f060705 	svccs	0x00060705
     f28:	0a052006 	beq	148f48 <__Stack_Size+0x147f48>
     f2c:	06480515 			; <UNDEFINED> instruction: 0x06480515
     f30:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
     f34:	1508000a 	strne	r0, [r8, #-10]
     f38:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     f3c:	05110648 	ldreq	r0, [r1, #-1608]	; 0xfffff9b8
     f40:	3d062105 	stfccs	f2, [r6, #-20]	; 0xffffffec
     f44:	01060705 	tsteq	r6, r5, lsl #14
     f48:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     f4c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f50:	09052206 	stmdbeq	r5, {r1, r2, r9, sp}
     f54:	06050106 	streq	r0, [r5], -r6, lsl #2
     f58:	07052906 	streq	r2, [r5, -r6, lsl #18]
     f5c:	05020418 	streq	r0, [r2, #-1048]	; 0xfffffbe8
     f60:	01880313 	orreq	r0, r8, r3, lsl r3
     f64:	13030501 	movwne	r0, #13569	; 0x3501
     f68:	01060a05 	tsteq	r6, r5, lsl #20
     f6c:	042e202e 	strteq	r2, [lr], #-46	; 0xffffffd2
     f70:	06070503 	streq	r0, [r7], -r3, lsl #10
     f74:	017efa03 	cmneq	lr, r3, lsl #20	; <UNPREDICTABLE>
     f78:	01061c05 	tsteq	r6, r5, lsl #24
     f7c:	2f060705 	svccs	0x00060705
     f80:	01062905 	tsteq	r6, r5, lsl #18
     f84:	21060705 	tstcs	r6, r5, lsl #14
     f88:	11061e05 	tstne	r6, r5, lsl #28
     f8c:	052e2f05 	streq	r2, [lr, #-3845]!	; 0xfffff0fb
     f90:	13052112 	movwne	r2, #20754	; 0x5112
     f94:	1e120522 	cfmul64ne	mvdx0, mvdx2, mvdx2
     f98:	22060705 	andcs	r0, r6, #1310720	; 0x140000
     f9c:	01061305 	tsteq	r6, r5, lsl #6
     fa0:	21060705 	tstcs	r6, r5, lsl #14
     fa4:	01062905 	tsteq	r6, r5, lsl #18
     fa8:	21060705 	tstcs	r6, r5, lsl #14
     fac:	11061405 	tstne	r6, r5, lsl #8
     fb0:	05202f05 	streq	r2, [r0, #-3845]!	; 0xfffff0fb
     fb4:	07052f12 	smladeq	r5, r2, pc, r2	; <UNPREDICTABLE>
     fb8:	4b013006 	blmi	4cfd8 <__Stack_Size+0x4bfd8>
     fbc:	11050404 	tstne	r5, r4, lsl #8
     fc0:	05014103 	streq	r4, [r1, #-259]	; 0xfffffefd
     fc4:	2505011e 	strcs	r0, [r5, #-286]	; 0xfffffee2
     fc8:	03040106 	movweq	r0, #16646	; 0x4106
     fcc:	3f031305 	svccc	0x00031305
     fd0:	05040420 	streq	r0, [r4, #-1056]	; 0xfffffbe0
     fd4:	20410325 	subcs	r0, r1, r5, lsr #6
     fd8:	22050304 	andcs	r0, r5, #4, 6	; 0x10000000
     fdc:	05203f03 	streq	r3, [r0, #-3843]!	; 0xfffff0fd
     fe0:	07052e13 	smladeq	r5, r3, lr, r2
     fe4:	01062206 	tsteq	r6, r6, lsl #4
     fe8:	6f031e05 	svcvs	0x00031e05
     fec:	03010501 	movweq	r0, #5377	; 0x1501
     ff0:	0a052015 	beq	14904c <__Stack_Size+0x14804c>
     ff4:	1005201f 	andne	r2, r5, pc, lsl r0
     ff8:	02050006 	andeq	r0, r5, #6
     ffc:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    1000:	14030515 	strne	r0, [r3], #-1301	; 0xfffffaeb
    1004:	01060e05 	tsteq	r6, r5, lsl #28
    1008:	4c060305 	stcmi	3, cr0, [r6], {5}
    100c:	01060e05 	tsteq	r6, r5, lsl #28
    1010:	052f0105 	streq	r0, [pc, #-261]!	; f13 <_Minimum_Stack_Size+0xe13>
    1014:	054c0610 	strbeq	r0, [ip, #-1552]	; 0xfffff9f0
    1018:	04041303 	streq	r1, [r4], #-771	; 0xfffffcfd
    101c:	b1031105 	tstlt	r3, r5, lsl #2
    1020:	1e05017f 	mcrne	1, 0, r0, cr5, cr15, {3}
    1024:	06250501 	strteq	r0, [r5], -r1, lsl #10
    1028:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    102c:	00cf0313 	sbceq	r0, pc, r3, lsl r3	; <UNPREDICTABLE>
    1030:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    1034:	11052f06 	tstne	r5, r6, lsl #30
    1038:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    103c:	05013d06 	streq	r3, [r1, #-3334]	; 0xfffff2fa
    1040:	044c0601 	strbeq	r0, [ip], #-1537	; 0xfffff9ff
    1044:	06500505 	ldrbeq	r0, [r0], -r5, lsl #10
    1048:	74039203 	strvc	r9, [r3], #-515	; 0xfffffdfd
    104c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1050:	05140807 	ldreq	r0, [r4, #-2055]	; 0xfffff7f9
    1054:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1058:	052f0607 	streq	r0, [pc, #-1543]!	; a59 <_Minimum_Stack_Size+0x959>
    105c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1060:	20240320 	eorcs	r0, r4, r0, lsr #6
    1064:	21060705 	tstcs	r6, r5, lsl #14
    1068:	16060105 	strne	r0, [r6], -r5, lsl #2
    106c:	03060705 	movweq	r0, #26373	; 0x6705
    1070:	0d05205a 	stceq	0, cr2, [r5, #-360]	; 0xfffffe98
    1074:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1078:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    107c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1080:	0d053f06 	stceq	15, cr3, [r5, #-24]	; 0xffffffe8
    1084:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1088:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    108c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1090:	20063106 	andcs	r3, r6, r6, lsl #2
    1094:	84060b05 	strhi	r0, [r6], #-2821	; 0xfffff4fb
    1098:	01061105 	tsteq	r6, r5, lsl #2
    109c:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    10a0:	0521060b 	streq	r0, [r1, #-1547]!	; 0xfffff9f5
    10a4:	20051607 	andcs	r1, r5, r7, lsl #12
    10a8:	0b050106 	bleq	1414c8 <__Stack_Size+0x1404c8>
    10ac:	3c6c0306 	stclcc	3, cr0, [ip], #-24	; 0xffffffe8
    10b0:	01061105 	tsteq	r6, r5, lsl #2
    10b4:	31060b05 	tstcc	r6, r5, lsl #22
    10b8:	01061105 	tsteq	r6, r5, lsl #2
    10bc:	31060b05 	tstcc	r6, r5, lsl #22
    10c0:	01061105 	tsteq	r6, r5, lsl #2
    10c4:	31060b05 	tstcc	r6, r5, lsl #22
    10c8:	01061105 	tsteq	r6, r5, lsl #2
    10cc:	31060b05 	tstcc	r6, r5, lsl #22
    10d0:	01061105 	tsteq	r6, r5, lsl #2
    10d4:	31060b05 	tstcc	r6, r5, lsl #22
    10d8:	01061105 	tsteq	r6, r5, lsl #2
    10dc:	00064705 	andeq	r4, r6, r5, lsl #14
    10e0:	0b640205 	bleq	19018fc <__Stack_Size+0x19008fc>
    10e4:	0c030800 	stceq	8, cr0, [r3], {-0}
    10e8:	13030501 	movwne	r0, #13569	; 0x3501
    10ec:	11064705 	tstne	r6, r5, lsl #14
    10f0:	3d070520 	cfstr32cc	mvfx0, [r7, #-128]	; 0xffffff80
    10f4:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    10f8:	0105202d 	tsteq	r5, sp, lsr #32
    10fc:	06030525 	streq	r0, [r3], -r5, lsr #10
    1100:	0501041c 	streq	r0, [r1, #-1052]	; 0xfffffbe4
    1104:	7bed0349 	blvc	ffb41e30 <BootRAM+0xeab25d1>
    1108:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    110c:	04940303 	ldreq	r0, [r4], #771	; 0x303
    1110:	06070501 	streq	r0, [r7], -r1, lsl #10
    1114:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    1118:	2f060305 	svccs	0x00060305
    111c:	01060705 	tsteq	r6, r5, lsl #14
    1120:	05552d05 	ldrbeq	r2, [r5, #-3333]	; 0xfffff2fb
    1124:	0500064e 	streq	r0, [r0, #-1614]	; 0xfffff9b2
    1128:	000b9202 	andeq	r9, fp, r2, lsl #4
    112c:	03051908 	movweq	r1, #22792	; 0x5908
    1130:	064e0513 			; <UNDEFINED> instruction: 0x064e0513
    1134:	07052011 	smladeq	r5, r1, r0, r2
    1138:	2e05053d 	mcrcs	5, 0, r0, cr5, cr13, {1}
    113c:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    1140:	03052501 	movweq	r2, #21761	; 0x5501
    1144:	01041c06 	tsteq	r4, r6, lsl #24
    1148:	e6035005 	str	r5, [r3], -r5
    114c:	0504017b 	streq	r0, [r4, #-379]	; 0xfffffe85
    1150:	9b030305 	blls	c1d6c <__Stack_Size+0xc0d6c>
    1154:	07050104 	streq	r0, [r5, -r4, lsl #2]
    1158:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    115c:	06030558 			; <UNDEFINED> instruction: 0x06030558
    1160:	0607052f 	streq	r0, [r7], -pc, lsr #10
    1164:	55330501 	ldrpl	r0, [r3, #-1281]!	; 0xfffffaff
    1168:	00061605 	andeq	r1, r6, r5, lsl #12
    116c:	0bc40205 	bleq	ff101988 <BootRAM+0xe072129>
    1170:	05190800 	ldreq	r0, [r9, #-2048]	; 0xfffff800
    1174:	16051303 	strne	r1, [r5], -r3, lsl #6
    1178:	03051106 	movweq	r1, #20742	; 0x5106
    117c:	042f0621 	strteq	r0, [pc], #-1569	; 1184 <__Stack_Size+0x184>
    1180:	030d0501 	movweq	r0, #54529	; 0xd501
    1184:	05017bf0 	streq	r7, [r1, #-3056]	; 0xfffff410
    1188:	01671303 	cmneq	r7, r3, lsl #6
    118c:	06010101 	streq	r0, [r1], -r1, lsl #2
    1190:	20061d23 	andcs	r1, r6, r3, lsr #26
    1194:	1520012e 	strne	r0, [r0, #-302]!	; 0xfffffed2
    1198:	20200601 	eorcs	r0, r0, r1, lsl #12
    119c:	014a3c06 	cmpeq	sl, r6, lsl #24
    11a0:	06010182 	streq	r0, [r1], -r2, lsl #3
    11a4:	06200601 	strteq	r0, [r0], -r1, lsl #12
    11a8:	20062020 	andcs	r2, r6, r0, lsr #32
    11ac:	3c062006 	stccc	0, cr2, [r6], {6}
    11b0:	4b013d20 	blmi	50638 <__Stack_Size+0x4f638>
    11b4:	01670101 	cmneq	r7, r1, lsl #2
    11b8:	0567014b 	strbeq	r0, [r7, #-331]!	; 0xfffffeb5
    11bc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    11c0:	044b0603 	strbeq	r0, [fp], #-1539	; 0xfffff9fd
    11c4:	03160506 	tsteq	r6, #25165824	; 0x1800000
    11c8:	05010bb7 	streq	r0, [r1, #-2999]	; 0xfffff449
    11cc:	27051403 	strcs	r1, [r5, -r3, lsl #8]
    11d0:	044a0106 	strbeq	r0, [sl], #-262	; 0xfffffefa
    11d4:	06030501 	streq	r0, [r3], -r1, lsl #10
    11d8:	0174ca03 	cmneq	r4, r3, lsl #20
    11dc:	014a5801 	cmpeq	sl, r1, lsl #16
    11e0:	06010182 	streq	r0, [r1], -r2, lsl #3
    11e4:	06200601 	strteq	r0, [r0], -r1, lsl #12
    11e8:	20062020 	andcs	r2, r6, r0, lsr #32
    11ec:	3c062006 	stccc	0, cr2, [r6], {6}
    11f0:	0d054b20 	vstreq	d4, [r5, #-128]	; 0xffffff80
    11f4:	03050106 	movweq	r0, #20742	; 0x5106
    11f8:	67014b06 	strvs	r4, [r1, -r6, lsl #22]
    11fc:	01670101 	cmneq	r7, r1, lsl #2
    1200:	0610054d 	ldreq	r0, [r0], -sp, asr #10
    1204:	06030501 	streq	r0, [r3], -r1, lsl #10
    1208:	060d054b 	streq	r0, [sp], -fp, asr #10
    120c:	051f2f01 	ldreq	r2, [pc, #-3841]	; 313 <_Minimum_Stack_Size+0x213>
    1210:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1214:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1218:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    121c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1220:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
    1224:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1228:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    122c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1230:	052f0603 	streq	r0, [pc, #-1539]!	; c35 <_Minimum_Stack_Size+0xb35>
    1234:	4a01060d 	bmi	42a70 <__Stack_Size+0x41a70>
    1238:	03050504 	movweq	r0, #21764	; 0x5504
    123c:	03f60306 	mvnseq	r0, #402653184	; 0x18000000
    1240:	01052f01 	tsteq	r5, r1, lsl #30
    1244:	03051306 	movweq	r1, #21254	; 0x5306
    1248:	0616052d 	ldreq	r0, [r6], -sp, lsr #10
    124c:	08020500 	stmdaeq	r2, {r8, sl}
    1250:	1508000d 	strne	r0, [r8, #-13]
    1254:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1258:	05110616 	ldreq	r0, [r1, #-1558]	; 0xfffff9ea
    125c:	2f062103 	svccs	0x00062103
    1260:	0d050104 	stfeqs	f0, [r5, #-16]
    1264:	017c9003 	cmneq	ip, r3
    1268:	14130305 	ldrne	r0, [r3], #-773	; 0xfffffcfb
    126c:	11050404 	tstne	r5, r4, lsl #8
    1270:	05014003 	streq	r4, [r1, #-3]
    1274:	2505011e 	strcs	r0, [r5, #-286]	; 0xfffffee2
    1278:	01040106 	tsteq	r4, r6, lsl #2
    127c:	c0031305 	andgt	r1, r3, r5, lsl #6
    1280:	04042000 	streq	r2, [r4], #-0
    1284:	40032505 	andmi	r2, r3, r5, lsl #10
    1288:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    128c:	00c00305 	sbceq	r0, r0, r5, lsl #6
    1290:	06030520 	streq	r0, [r3], -r0, lsr #10
    1294:	0504043d 	streq	r0, [r4, #-1085]	; 0xfffffbc3
    1298:	7fbf0311 	svcvc	0x00bf0311
    129c:	011e0501 	tsteq	lr, r1, lsl #10
    12a0:	01062505 	tsteq	r6, r5, lsl #10
    12a4:	0a050104 	beq	1416bc <__Stack_Size+0x1406bc>
    12a8:	2000c303 	andcs	ip, r0, r3, lsl #6
    12ac:	051e1b05 	ldreq	r1, [lr, #-2821]	; 0xfffff4fb
    12b0:	03052e0c 	movweq	r2, #24076	; 0x5e0c
    12b4:	0a052206 	beq	149ad4 <__Stack_Size+0x148ad4>
    12b8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    12bc:	052f0620 	streq	r0, [pc, #-1568]!	; ca4 <_Minimum_Stack_Size+0xba4>
    12c0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    12c4:	0e052019 	mcreq	0, 0, r2, cr5, cr9, {0}
    12c8:	0605052e 	streq	r0, [r5], -lr, lsr #10
    12cc:	060f0521 	streq	r0, [pc], -r1, lsr #10
    12d0:	05050401 	streq	r0, [r5, #-1025]	; 0xfffffbff
    12d4:	e9030603 	stmdb	r3, {r0, r1, r9, sl}
    12d8:	052f4a03 	streq	r4, [pc, #-2563]!	; 8dd <_Minimum_Stack_Size+0x7dd>
    12dc:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    12e0:	15052d03 	strne	r2, [r5, #-3331]	; 0xfffff2fd
    12e4:	02050006 	andeq	r0, r5, #6
    12e8:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
    12ec:	13030515 	movwne	r0, #13589	; 0x3515
    12f0:	01000202 	tsteq	r0, r2, lsl #4
    12f4:	0000ce01 	andeq	ip, r0, r1, lsl #28
    12f8:	96000300 	strls	r0, [r0], -r0, lsl #6
    12fc:	02000000 	andeq	r0, r0, #0
    1300:	0d0efb01 	vstreq	d15, [lr, #-4]
    1304:	01010100 	mrseq	r0, (UNDEF: 17)
    1308:	00000001 	andeq	r0, r0, r1
    130c:	01000001 	tsteq	r0, r1
    1310:	00637273 	rsbeq	r7, r3, r3, ror r2
    1314:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    1318:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    131c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    1320:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1324:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1328:	61652d65 	cmnvs	r5, r5, ror #26
    132c:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    1330:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    1334:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1338:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    133c:	62696c00 	rsbvs	r6, r9, #0, 24
    1340:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1344:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1348:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    134c:	63697473 	cmnvs	r9, #1929379840	; 0x73000000
    1350:	00632e6b 	rsbeq	r2, r3, fp, ror #28
    1354:	73000001 	movwvc	r0, #1
    1358:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    135c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1360:	63000002 	movwvs	r0, #2
    1364:	5f65726f 	svcpl	0x0065726f
    1368:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
    136c:	00030068 	andeq	r0, r3, r8, rrx
    1370:	73797300 	cmnvc	r9, #0, 6
    1374:	5f6d6574 	svcpl	0x006d6574
    1378:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    137c:	78316632 	ldmdavc	r1!, {r1, r4, r5, r9, sl, sp, lr}
    1380:	00682e78 	rsbeq	r2, r8, r8, ror lr
    1384:	73000003 	movwvc	r0, #3
    1388:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    138c:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1390:	00000100 	andeq	r0, r0, r0, lsl #2
    1394:	00140500 	andseq	r0, r4, r0, lsl #10
    1398:	0d580205 	lfmeq	f0, 2, [r8, #-20]	; 0xffffffec
    139c:	05170800 	ldreq	r0, [r7, #-2048]	; 0xfffff800
    13a0:	1a051403 	bne	1463b4 <__Stack_Size+0x1453b4>
    13a4:	11050106 	tstne	r5, r6, lsl #2
    13a8:	0603052e 	streq	r0, [r3], -lr, lsr #10
    13ac:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    13b0:	2f010501 	svccs	0x00010501
    13b4:	3e061705 	cdpcc	7, 0, cr1, cr6, cr5, {0}
    13b8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    13bc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    13c0:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    13c4:	b9010100 	stmdblt	r1, {r8}
    13c8:	03000009 	movweq	r0, #9
    13cc:	0000ce00 	andeq	ip, r0, r0, lsl #28
    13d0:	fb010200 	blx	41bda <__Stack_Size+0x40bda>
    13d4:	01000d0e 	tsteq	r0, lr, lsl #26
    13d8:	00010101 	andeq	r0, r1, r1, lsl #2
    13dc:	00010000 	andeq	r0, r1, r0
    13e0:	72730100 	rsbsvc	r0, r3, #0, 2
    13e4:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    13e8:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    13ec:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    13f0:	752f0065 	strvc	r0, [pc, #-101]!	; 1393 <__Stack_Size+0x393>
    13f4:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 1230 <__Stack_Size+0x230>
    13f8:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    13fc:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    1400:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1404:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1408:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    140c:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
    1410:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    1414:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1418:	00006564 	andeq	r6, r0, r4, ror #10
    141c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1420:	0100682e 	tsteq	r0, lr, lsr #16
    1424:	72700000 	rsbsvc	r0, r0, #0
    1428:	6172676f 	cmnvs	r2, pc, ror #14
    142c:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
    1430:	0100632e 	tsteq	r0, lr, lsr #6
    1434:	73750000 	cmnvc	r5, #0
    1438:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    143c:	00682e62 	rsbeq	r2, r8, r2, ror #28
    1440:	73000001 	movwvc	r0, #1
    1444:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    1448:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    144c:	00000100 	andeq	r0, r0, r0, lsl #2
    1450:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    1454:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
    1458:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    145c:	74730000 	ldrbtvc	r0, [r3], #-0
    1460:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    1464:	0300682e 	movweq	r6, #2094	; 0x82e
    1468:	74730000 	ldrbtvc	r0, [r3], #-0
    146c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1470:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
    1474:	00682e62 	rsbeq	r2, r8, r2, ror #28
    1478:	73000002 	movwvc	r0, #2
    147c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1480:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    1484:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1488:	2e787831 	mrccs	8, 3, r7, cr8, cr1, {1}
    148c:	00020068 	andeq	r0, r2, r8, rrx
    1490:	62737500 	rsbsvs	r7, r3, #0, 10
    1494:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    1498:	0100682e 	tsteq	r0, lr, lsr #16
    149c:	05000000 	streq	r0, [r0, #-0]
    14a0:	02050028 	andeq	r0, r5, #40	; 0x28
    14a4:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
    14a8:	0100cc03 	tsteq	r0, r3, lsl #24
    14ac:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    14b0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    14b4:	1f052019 	svcne	0x00052019
    14b8:	21010520 	tstcs	r1, r0, lsr #10
    14bc:	30062805 	andcc	r2, r6, r5, lsl #16
    14c0:	13130305 	tstne	r3, #335544320	; 0x14000000
    14c4:	7a030905 	bvc	c38e0 <__Stack_Size+0xc28e0>
    14c8:	13030501 	movwne	r0, #13569	; 0x3501
    14cc:	01060f05 	tsteq	r6, r5, lsl #30
    14d0:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    14d4:	05052328 	streq	r2, [r5, #-808]	; 0xfffffcd8
    14d8:	06030522 	streq	r0, [r3], -r2, lsr #10
    14dc:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    14e0:	20070501 	andcs	r0, r7, r1, lsl #10
    14e4:	052f0605 	streq	r0, [pc, #-1541]!	; ee7 <_Minimum_Stack_Size+0xde7>
    14e8:	03051f07 	movweq	r1, #24327	; 0x5f07
    14ec:	0a052106 	beq	14990c <__Stack_Size+0x14890c>
    14f0:	03050106 	movweq	r0, #20742	; 0x5106
    14f4:	0b053d06 	bleq	150914 <__Stack_Size+0x14f914>
    14f8:	03050106 	movweq	r0, #20742	; 0x5106
    14fc:	0a053d06 	beq	15091c <__Stack_Size+0x14f91c>
    1500:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    1504:	2501051c 	strcs	r0, [r1, #-1308]	; 0xfffffae4
    1508:	22063305 	andcs	r3, r6, #335544320	; 0x14000000
    150c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1510:	01720309 	cmneq	r2, r9, lsl #6
    1514:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1518:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    151c:	1f052019 	svcne	0x00052019
    1520:	03050520 	movweq	r0, #21792	; 0x5520
    1524:	0605200d 	streq	r2, [r5], -sp
    1528:	05053b06 	streq	r3, [r5, #-2822]	; 0xfffff4fa
    152c:	06110514 			; <UNDEFINED> instruction: 0x06110514
    1530:	20160501 	andscs	r0, r6, r1, lsl #10
    1534:	2f060505 	svccs	0x00060505
    1538:	01060805 	tsteq	r6, r5, lsl #16
    153c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1540:	053c0610 	ldreq	r0, [ip, #-1552]!	; 0xfffff9f0
    1544:	3c010618 	stccc	6, cr0, [r1], {24}
    1548:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    154c:	c203061d 	andgt	r0, r3, #30408704	; 0x1d00000
    1550:	03052000 	movweq	r2, #20480	; 0x5000
    1554:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    1558:	210d0511 	tstcs	sp, r1, lsl r5
    155c:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    1560:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    1564:	06050501 	streq	r0, [r5], -r1, lsl #10
    1568:	052e0621 	streq	r0, [lr, #-1569]!	; 0xfffff9df
    156c:	05051701 	streq	r1, [r5, #-1793]	; 0xfffff8ff
    1570:	09052e29 	stmdbeq	r5, {r0, r3, r5, r9, sl, fp, sp}
    1574:	13051306 	movwne	r1, #21254	; 0x5306
    1578:	0b050106 	bleq	141998 <__Stack_Size+0x140998>
    157c:	06050520 	streq	r0, [r5], -r0, lsr #10
    1580:	0309052f 	movweq	r0, #38191	; 0x952f
    1584:	05017fa7 	streq	r7, [r1, #-4007]	; 0xfffff059
    1588:	0f051303 	svceq	0x00051303
    158c:	19050106 	stmdbne	r5, {r1, r2, r8}
    1590:	0307053c 	movweq	r0, #30012	; 0x753c
    1594:	052e00d8 	streq	r0, [lr, #-216]!	; 0xffffff28
    1598:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    159c:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    15a0:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    15a4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    15a8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    15ac:	01054a01 	tsteq	r5, r1, lsl #20
    15b0:	060c0523 	streq	r0, [ip], -r3, lsr #10
    15b4:	0618051e 			; <UNDEFINED> instruction: 0x0618051e
    15b8:	4c010501 	cfstr32mi	mvfx0, [r1], {1}
    15bc:	00062d05 	andeq	r2, r6, r5, lsl #26
    15c0:	0e140205 	cdpeq	2, 1, cr0, cr4, cr5, {0}
    15c4:	06140800 	ldreq	r0, [r4], -r0, lsl #16
    15c8:	03052001 	movweq	r2, #20481	; 0x5001
    15cc:	0f052106 	svceq	0x00052106
    15d0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    15d4:	01040200 	mrseq	r0, R12_usr
    15d8:	2f01053c 	svccs	0x0001053c
    15dc:	02000f05 	andeq	r0, r0, #5, 30
    15e0:	1f060204 	svcne	0x00060204
    15e4:	02040200 	andeq	r0, r4, #0, 4
    15e8:	04020001 	streq	r0, [r2], #-1
    15ec:	00010602 	andeq	r0, r1, r2, lsl #12
    15f0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    15f4:	02040200 	andeq	r0, r4, #0, 4
    15f8:	1b053c06 	blne	150618 <__Stack_Size+0x14f618>
    15fc:	40020500 	andmi	r0, r2, r0, lsl #10
    1600:	1508000e 	strne	r0, [r8, #-14]
    1604:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1608:	0511061b 	ldreq	r0, [r1, #-1563]	; 0xfffff9e5
    160c:	0c052115 	stfeqs	f2, [r5], {21}
    1610:	01040200 	mrseq	r0, R12_usr
    1614:	0008053c 	andeq	r0, r8, ip, lsr r5
    1618:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    161c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    1620:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    1624:	001f0602 	andseq	r0, pc, r2, lsl #12
    1628:	01020402 	tsteq	r2, r2, lsl #8
    162c:	02040200 	andeq	r0, r4, #0, 4
    1630:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1634:	3c060204 	sfmcc	f0, 4, [r6], {4}
    1638:	05002c05 	streq	r2, [r0, #-3077]	; 0xfffff3fb
    163c:	000e6802 	andeq	r6, lr, r2, lsl #16
    1640:	01061508 	tsteq	r6, r8, lsl #10
    1644:	06030520 	streq	r0, [r3], -r0, lsr #10
    1648:	060f0521 	streq	r0, [pc], -r1, lsr #10
    164c:	017f9a03 	cmneq	pc, r3, lsl #20
    1650:	0308052e 	movweq	r0, #34094	; 0x852e
    1654:	050100e6 	streq	r0, [r1, #-230]	; 0xffffff1a
    1658:	22053201 	andcs	r3, r5, #268435456	; 0x10000000
    165c:	01040200 	mrseq	r0, R12_usr
    1660:	09051d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip}
    1664:	01040200 	mrseq	r0, R12_usr
    1668:	017f9803 	cmneq	pc, r3, lsl #16
    166c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1670:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1674:	0402000f 	streq	r0, [r2], #-15
    1678:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    167c:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1680:	0b052001 	bleq	14968c <__Stack_Size+0x14868c>
    1684:	01040200 	mrseq	r0, R12_usr
    1688:	2000e703 	andcs	lr, r0, r3, lsl #14
    168c:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    1690:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1694:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1698:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    169c:	052e3c0f 	streq	r3, [lr, #-3087]!	; 0xfffff3f1
    16a0:	05000628 	streq	r0, [r0, #-1576]	; 0xfffff9d8
    16a4:	000e9402 	andeq	r9, lr, r2, lsl #8
    16a8:	03051608 	movweq	r1, #22024	; 0x5608
    16ac:	06280513 			; <UNDEFINED> instruction: 0x06280513
    16b0:	030f0511 	movweq	r0, #62737	; 0xf511
    16b4:	2e3c7f94 	mrccs	15, 1, r7, cr12, cr4, {4}
    16b8:	ed030805 	stc	8, cr0, [r3, #-20]	; 0xffffffec
    16bc:	052e0100 	streq	r0, [lr, #-256]!	; 0xffffff00
    16c0:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    16c4:	06010605 	streq	r0, [r1], -r5, lsl #12
    16c8:	0607052f 	streq	r0, [r7], -pc, lsr #10
    16cc:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    16d0:	06140520 	ldreq	r0, [r4], -r0, lsr #10
    16d4:	3c230513 	cfstr32cc	mvfx0, [r3], #-76	; 0xffffffb4
    16d8:	051f1705 	ldreq	r1, [pc, #-1797]	; fdb <_Minimum_Stack_Size+0xedb>
    16dc:	32052123 	andcc	r2, r5, #-1073741816	; 0xc0000008
    16e0:	1f17052e 	svcne	0x0017052e
    16e4:	21060d05 	tstcs	r6, r5, lsl #26
    16e8:	05011c05 	streq	r1, [r1, #-3077]	; 0xfffff3fb
    16ec:	3205012b 	andcc	r0, r5, #-1073741814	; 0xc000000a
    16f0:	01050106 	tsteq	r5, r6, lsl #2
    16f4:	00220522 	eoreq	r0, r2, r2, lsr #10
    16f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    16fc:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    1700:	04020009 	streq	r0, [r2], #-9
    1704:	7f910301 	svcvc	0x00910301
    1708:	00030501 	andeq	r0, r3, r1, lsl #10
    170c:	13010402 	movwne	r0, #5122	; 0x1402
    1710:	02000f05 	andeq	r0, r0, #5, 30
    1714:	01060104 	tsteq	r6, r4, lsl #2
    1718:	02001905 	andeq	r1, r0, #81920	; 0x14000
    171c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1720:	0402000b 	streq	r0, [r2], #-11
    1724:	00ee0301 	rsceq	r0, lr, r1, lsl #6
    1728:	000a0520 	andeq	r0, sl, r0, lsr #10
    172c:	20010402 	andcs	r0, r1, r2, lsl #8
    1730:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1734:	01060e05 	tsteq	r6, r5, lsl #28
    1738:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    173c:	052f0605 	streq	r0, [pc, #-1541]!	; 113f <__Stack_Size+0x13f>
    1740:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    1744:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1748:	02003c01 	andeq	r3, r0, #256	; 0x100
    174c:	044a0104 	strbeq	r0, [sl], #-260	; 0xfffffefc
    1750:	06480502 	strbeq	r0, [r8], -r2, lsl #10
    1754:	ec020500 	cfstr32	mvfx0, [r2], {-0}
    1758:	0308000e 	movweq	r0, #32782	; 0x800e
    175c:	05017efc 	streq	r7, [r1, #-3836]	; 0xfffff104
    1760:	05051303 	streq	r1, [r5, #-771]	; 0xfffffcfd
    1764:	59060106 	stmdbpl	r6, {r1, r2, r8}
    1768:	01060705 	tsteq	r6, r5, lsl #14
    176c:	0e053d06 	cdpeq	13, 0, cr3, cr5, cr6, {0}
    1770:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1774:	052f0620 	streq	r0, [pc, #-1568]!	; 115c <__Stack_Size+0x15c>
    1778:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    177c:	052f0609 	streq	r0, [pc, #-1545]!	; 117b <__Stack_Size+0x17b>
    1780:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1784:	052f0609 	streq	r0, [pc, #-1545]!	; 1183 <__Stack_Size+0x183>
    1788:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    178c:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    1790:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1794:	052f0609 	streq	r0, [pc, #-1545]!	; 1193 <__Stack_Size+0x193>
    1798:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    179c:	0f052210 	svceq	0x00052210
    17a0:	0609051e 			; <UNDEFINED> instruction: 0x0609051e
    17a4:	060f0521 	streq	r0, [pc], -r1, lsr #10
    17a8:	06090501 	streq	r0, [r9], -r1, lsl #10
    17ac:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    17b0:	240a0501 	strcs	r0, [sl], #-1281	; 0xfffffaff
    17b4:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    17b8:	055a0635 	ldrbeq	r0, [sl, #-1589]	; 0xfffff9cb
    17bc:	01011303 	tsteq	r1, r3, lsl #6
    17c0:	0609056a 	streq	r0, [r9], -sl, ror #10
    17c4:	20050501 	andcs	r0, r5, r1, lsl #10
    17c8:	11052106 	tstne	r5, r6, lsl #2
    17cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    17d0:	11054b06 	tstne	r5, r6, lsl #22
    17d4:	05440106 	strbeq	r0, [r4, #-262]	; 0xfffffefa
    17d8:	09052201 	stmdbeq	r5, {r0, r9, sp}
    17dc:	20770306 	rsbscs	r0, r7, r6, lsl #6
    17e0:	01060f05 	tsteq	r6, r5, lsl #30
    17e4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    17e8:	052f0605 	streq	r0, [pc, #-1541]!	; 11eb <__Stack_Size+0x1eb>
    17ec:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    17f0:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    17f4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    17f8:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    17fc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1800:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    1804:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1808:	0605200b 	streq	r2, [r5], -fp
    180c:	2e740306 	cdpcs	3, 7, cr0, cr4, cr6, {0}
    1810:	0d030505 	cfstr32eq	mvfx0, [r3, #-20]	; 0xffffffec
    1814:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1818:	06050501 	streq	r0, [r5], -r1, lsl #10
    181c:	0611054b 	ldreq	r0, [r1], -fp, asr #10
    1820:	06050501 	streq	r0, [r5], -r1, lsl #10
    1824:	0611054b 	ldreq	r0, [r1], -fp, asr #10
    1828:	064f0501 	strbeq	r0, [pc], -r1, lsl #10
    182c:	90020500 	andls	r0, r2, r0, lsl #10
    1830:	1608000f 	strne	r0, [r8], -pc
    1834:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1838:	0511064f 	ldreq	r0, [r1, #-1615]	; 0xfffff9b1
    183c:	59062105 	stmdbpl	r6, {r0, r2, r8, sp}
    1840:	01060705 	tsteq	r6, r5, lsl #14
    1844:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    1848:	10050106 	andne	r0, r5, r6, lsl #2
    184c:	05201103 	streq	r1, [r0, #-259]!	; 0xfffffefd
    1850:	200a0301 	andcs	r0, sl, r1, lsl #6
    1854:	03060705 	movweq	r0, #26373	; 0x6705
    1858:	0e052066 	cdpeq	0, 0, cr2, cr5, cr6, {3}
    185c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1860:	042f0620 	strteq	r0, [pc], #-1568	; 1868 <__Stack_Size+0x868>
    1864:	03130503 	tsteq	r3, #12582912	; 0xc00000
    1868:	050100de 	streq	r0, [r1, #-222]	; 0xffffff22
    186c:	0a051303 	beq	146480 <__Stack_Size+0x145480>
    1870:	20200106 	eorcs	r0, r0, r6, lsl #2
    1874:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1878:	a2030609 	andge	r0, r3, #9437184	; 0x900000
    187c:	1405017f 	strne	r0, [r5], #-383	; 0xfffffe81
    1880:	0b050106 	bleq	141ca0 <__Stack_Size+0x140ca0>
    1884:	052f063c 	streq	r0, [pc, #-1596]!	; 1250 <__Stack_Size+0x250>
    1888:	0f054d0d 	svceq	0x00054d0d
    188c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1890:	03042f06 	movweq	r2, #20230	; 0x4f06
    1894:	d8031305 	stmdale	r3, {r0, r2, r8, r9, ip}
    1898:	03050100 	movweq	r0, #20736	; 0x5100
    189c:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    18a0:	2e202e01 	cdpcs	14, 2, cr2, cr0, cr1, {0}
    18a4:	09050204 	stmdbeq	r5, {r2, r9}
    18a8:	7fa80306 	svcvc	0x00a80306
    18ac:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    18b0:	3c0b0501 	cfstr32cc	mvfx0, [fp], {1}
    18b4:	13052f06 	movwne	r2, #24326	; 0x5f06
    18b8:	0b050106 	bleq	141cd8 <__Stack_Size+0x140cd8>
    18bc:	04013d06 	streq	r3, [r1], #-3334	; 0xfffff2fa
    18c0:	03110504 	tsteq	r1, #4, 10	; 0x1000000
    18c4:	05017f9a 	streq	r7, [r1, #-3994]	; 0xfffff066
    18c8:	2505011e 	strcs	r0, [r5, #-286]	; 0xfffffee2
    18cc:	02040106 	andeq	r0, r4, #-2147483647	; 0x80000001
    18d0:	e6030b05 	str	r0, [r3], -r5, lsl #22
    18d4:	0f052e00 	svceq	0x00052e00
    18d8:	1b056706 	blne	15b4f8 <__Stack_Size+0x15a4f8>
    18dc:	11050106 	tstne	r5, r6, lsl #2
    18e0:	060b052e 	streq	r0, [fp], -lr, lsr #10
    18e4:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    18e8:	210b0501 	tstcs	fp, r1, lsl #10
    18ec:	051f1305 	ldreq	r1, [pc, #-773]	; 15ef <__Stack_Size+0x5ef>
    18f0:	2f2f060b 	svccs	0x002f060b
    18f4:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    18f8:	7f960311 	svcvc	0x00960311
    18fc:	011e0501 	tsteq	lr, r1, lsl #10
    1900:	02042006 	andeq	r2, r4, #6
    1904:	f5030a05 			; <UNDEFINED> instruction: 0xf5030a05
    1908:	05200100 	streq	r0, [r0, #-256]!	; 0xffffff00
    190c:	05000617 	streq	r0, [r0, #-1559]	; 0xfffff9e9
    1910:	00101c02 	andseq	r1, r0, r2, lsl #24
    1914:	01220308 			; <UNDEFINED> instruction: 0x01220308
    1918:	01130305 	tsteq	r3, r5, lsl #6
    191c:	01010101 	tsteq	r1, r1, lsl #2
    1920:	1f061705 	svcne	0x00061705
    1924:	06210305 	strteq	r0, [r1], -r5, lsl #6
    1928:	202e3c20 	eorcs	r3, lr, r0, lsr #24
    192c:	01010101 	tsteq	r1, r1, lsl #2
    1930:	05042001 	streq	r2, [r4, #-1]
    1934:	03062705 	movweq	r2, #26373	; 0x6705
    1938:	04010ac2 	streq	r0, [r1], #-2754	; 0xfffff53e
    193c:	03030502 	movweq	r0, #13570	; 0x3502
    1940:	062075be 			; <UNDEFINED> instruction: 0x062075be
    1944:	20062e2e 	andcs	r2, r6, lr, lsr #28
    1948:	06010106 	streq	r0, [r1], -r6, lsl #2
    194c:	061d3120 	ldreq	r3, [sp], -r0, lsr #2
    1950:	2306013c 	movwcs	r0, #24892	; 0x613c
    1954:	013c061d 	teqeq	ip, sp, lsl r6
    1958:	203c5801 	eorscs	r5, ip, r1, lsl #16
    195c:	05042020 	streq	r2, [r4, #-32]	; 0xffffffe0
    1960:	03062705 	movweq	r2, #26373	; 0x6705
    1964:	04010ac2 	streq	r0, [r1], #-2754	; 0xfffff53e
    1968:	03030502 	movweq	r0, #13570	; 0x3502
    196c:	062075be 			; <UNDEFINED> instruction: 0x062075be
    1970:	1d150620 	ldcne	6, cr0, [r5, #-128]	; 0xffffff80
    1974:	2e2e2006 	cdpcs	0, 2, cr2, cr14, cr6, {0}
    1978:	16050504 	strne	r0, [r5], -r4, lsl #10
    197c:	010ac003 	tsteq	sl, r3
    1980:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1984:	20010627 	andcs	r0, r1, r7, lsr #12
    1988:	03050204 	movweq	r0, #20996	; 0x5204
    198c:	75c00306 	strbvc	r0, [r0, #774]	; 0x306
    1990:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1994:	03051f0b 	movweq	r1, #24331	; 0x5f0b
    1998:	672f2f06 	strvs	r2, [pc, -r6, lsl #30]!
    199c:	67676768 	strbvs	r6, [r7, -r8, ror #14]!
    19a0:	01060c05 	tsteq	r6, r5, lsl #24
    19a4:	053d0105 	ldreq	r0, [sp, #-261]!	; 0xfffffefb
    19a8:	3b030628 	blcc	c3250 <__Stack_Size+0xc2250>
    19ac:	1403059e 	strne	r0, [r3], #-1438	; 0xfffffa62
    19b0:	06280513 			; <UNDEFINED> instruction: 0x06280513
    19b4:	2307050f 	movwcs	r0, #29967	; 0x750f
    19b8:	05211f21 	streq	r1, [r1, #-3873]!	; 0xfffff0df
    19bc:	052f1f05 	streq	r1, [pc, #-3845]!	; abf <_Minimum_Stack_Size+0x9bf>
    19c0:	0b052107 	bleq	149de4 <__Stack_Size+0x148de4>
    19c4:	0603051d 			; <UNDEFINED> instruction: 0x0603051d
    19c8:	01160530 	tsteq	r6, r0, lsr r5
    19cc:	13060705 	movwne	r0, #26373	; 0x6705
    19d0:	051f1a05 	ldreq	r1, [pc, #-2565]	; fd3 <_Minimum_Stack_Size+0xed3>
    19d4:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    19d8:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    19dc:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    19e0:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    19e4:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    19e8:	00010601 	andeq	r0, r1, r1, lsl #12
    19ec:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    19f0:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    19f4:	05220104 	streq	r0, [r2, #-260]!	; 0xfffffefc
    19f8:	04020003 	streq	r0, [r2], #-3
    19fc:	21051f01 	tstcs	r5, r1, lsl #30
    1a00:	01040200 	mrseq	r0, R12_usr
    1a04:	0605052f 	streq	r0, [r5], -pc, lsr #10
    1a08:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    1a0c:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    1a10:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    1a14:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a18:	060b053d 			; <UNDEFINED> instruction: 0x060b053d
    1a1c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    1a20:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1a24:	2e060104 	adfcss	f0, f6, f4
    1a28:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1a2c:	01060104 	tsteq	r6, r4, lsl #2
    1a30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1a34:	2f060104 	svccs	0x00060104
    1a38:	01040200 	mrseq	r0, R12_usr
    1a3c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1a40:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    1a44:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1a48:	04020003 	streq	r0, [r2], #-3
    1a4c:	7a030601 	bvc	c3258 <__Stack_Size+0xc2258>
    1a50:	04020001 	streq	r0, [r2], #-1
    1a54:	03063c01 	movweq	r3, #27649	; 0x6c01
    1a58:	05050109 	streq	r0, [r5, #-265]	; 0xfffffef7
    1a5c:	18050106 	stmdane	r5, {r1, r2, r8}
    1a60:	05012006 	streq	r2, [r1, #-6]
    1a64:	05013c2c 	streq	r3, [r1, #-3116]	; 0xfffff3d4
    1a68:	05053d03 	streq	r3, [r5, #-3331]	; 0xfffff2fd
    1a6c:	19050106 	stmdbne	r5, {r1, r2, r8}
    1a70:	05012006 	streq	r2, [r1, #-6]
    1a74:	05013c2d 	streq	r3, [r1, #-3117]	; 0xfffff3d3
    1a78:	052f0605 	streq	r0, [pc, #-1541]!	; 147b <__Stack_Size+0x47b>
    1a7c:	03052d2d 	movweq	r2, #23853	; 0x5d2d
    1a80:	17052106 	strne	r2, [r5, -r6, lsl #2]
    1a84:	2b050106 	blcs	141ea4 <__Stack_Size+0x140ea4>
    1a88:	0617053c 			; <UNDEFINED> instruction: 0x0617053c
    1a8c:	2b05012e 	blcs	141f4c <__Stack_Size+0x140f4c>
    1a90:	01050101 	tsteq	r5, r1, lsl #2
    1a94:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    1a98:	20770306 	rsbscs	r0, r7, r6, lsl #6
    1a9c:	01060705 	tsteq	r6, r5, lsl #14
    1aa0:	2f060505 	svccs	0x00060505
    1aa4:	01060705 	tsteq	r6, r5, lsl #14
    1aa8:	2f060505 	svccs	0x00060505
    1aac:	01060705 	tsteq	r6, r5, lsl #14
    1ab0:	2f060505 	svccs	0x00060505
    1ab4:	01060705 	tsteq	r6, r5, lsl #14
    1ab8:	2f060505 	svccs	0x00060505
    1abc:	01060705 	tsteq	r6, r5, lsl #14
    1ac0:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1ac4:	2e060104 	adfcss	f0, f6, f4
    1ac8:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1acc:	01060104 	tsteq	r6, r4, lsl #2
    1ad0:	01040200 	mrseq	r0, R12_usr
    1ad4:	0016052e 	andseq	r0, r6, lr, lsr #10
    1ad8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1adc:	001a051c 	andseq	r0, sl, ip, lsl r5
    1ae0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ae4:	00050501 	andeq	r0, r5, r1, lsl #10
    1ae8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1aec:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1af0:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    1af4:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1af8:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    1afc:	1a051e01 	bne	149308 <__Stack_Size+0x148308>
    1b00:	01040200 	mrseq	r0, R12_usr
    1b04:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b08:	01040200 	mrseq	r0, R12_usr
    1b0c:	02002f06 	andeq	r2, r0, #6, 30
    1b10:	00130104 	andseq	r0, r3, r4, lsl #2
    1b14:	13010402 	movwne	r0, #5122	; 0x1402
    1b18:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1b1c:	051e0104 	ldreq	r0, [lr, #-260]	; 0xfffffefc
    1b20:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1b24:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1b28:	04020005 	streq	r0, [r2], #-5
    1b2c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1b30:	13010402 	movwne	r0, #5122	; 0x1402
    1b34:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    1b38:	051f0104 	ldreq	r0, [pc, #-260]	; 1a3c <__Stack_Size+0xa3c>
    1b3c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1b40:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1b44:	04020005 	streq	r0, [r2], #-5
    1b48:	052f0601 	streq	r0, [pc, #-1537]!	; 154f <__Stack_Size+0x54f>
    1b4c:	02050017 	andeq	r0, r5, #23
    1b50:	0800119c 	stmdaeq	r0, {r2, r3, r4, r7, r8, ip}
    1b54:	017fba03 	cmneq	pc, r3, lsl #20
    1b58:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1b5c:	05110617 	ldreq	r0, [r1, #-1559]	; 0xfffff9e9
    1b60:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    1b64:	2105051f 	tstcs	r5, pc, lsl r5
    1b68:	4b060305 	blmi	182784 <__Stack_Size+0x181784>
    1b6c:	01041413 	tsteq	r4, r3, lsl r4
    1b70:	9d030905 	vstrls.16	s0, [r3, #-10]	; <UNPREDICTABLE>
    1b74:	0305017f 	movweq	r0, #20863	; 0x517f
    1b78:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    1b7c:	20190501 	andscs	r0, r9, r1, lsl #10
    1b80:	0a050204 	beq	142398 <__Stack_Size+0x141398>
    1b84:	2e00e203 	cdpcs	2, 0, cr14, cr0, cr3, {0}
    1b88:	21060305 	tstcs	r6, r5, lsl #6
    1b8c:	01060505 	tsteq	r6, r5, lsl #10
    1b90:	052f062e 	streq	r0, [pc, #-1582]!	; 156a <__Stack_Size+0x56a>
    1b94:	05140611 	ldreq	r0, [r4, #-1553]	; 0xfffff9ef
    1b98:	05580605 	ldrbeq	r0, [r8, #-1541]	; 0xfffff9fb
    1b9c:	06010607 	streq	r0, [r1], -r7, lsl #12
    1ba0:	060a054b 	streq	r0, [sl], -fp, asr #10
    1ba4:	20090501 	andcs	r0, r9, r1, lsl #10
    1ba8:	594b4b06 	stmdbpl	fp, {r1, r2, r8, r9, fp, lr}^
    1bac:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
    1bb0:	1303050e 	movwne	r0, #13582	; 0x350e
    1bb4:	042e3c06 	strteq	r3, [lr], #-3078	; 0xfffff3fa
    1bb8:	0f030602 	svceq	0x00030602
    1bbc:	030d0501 	movweq	r0, #54529	; 0xd501
    1bc0:	05017fba 	streq	r7, [r1, #-4026]	; 0xfffff046
    1bc4:	14131303 	ldrne	r1, [r3], #-771	; 0xfffffcfd
    1bc8:	01060e05 	tsteq	r6, r5, lsl #28
    1bcc:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    1bd0:	0805132f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    1bd4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1bd8:	06250520 	strteq	r0, [r5], -r0, lsr #10
    1bdc:	05030458 	streq	r0, [r3, #-1112]	; 0xfffffba8
    1be0:	013d0313 	teqeq	sp, r3, lsl r3
    1be4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1be8:	2001060a 	andcs	r0, r1, sl, lsl #12
    1bec:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    1bf0:	43030605 	movwmi	r0, #13829	; 0x3605
    1bf4:	06090501 	streq	r0, [r9], -r1, lsl #10
    1bf8:	20070501 	andcs	r0, r7, r1, lsl #10
    1bfc:	05560b05 	ldrbeq	r0, [r6, #-2821]	; 0xfffff4fb
    1c00:	0a030603 	beq	c3414 <__Stack_Size+0xc2414>
    1c04:	060e0520 	streq	r0, [lr], -r0, lsr #10
    1c08:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    1c0c:	01042f06 	tsteq	r4, r6, lsl #30
    1c10:	bf030905 	svclt	0x00030905
    1c14:	0305017f 	movweq	r0, #20863	; 0x517f
    1c18:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    1c1c:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    1c20:	042e1f05 	strteq	r1, [lr], #-3845	; 0xfffff0fb
    1c24:	03090502 	movweq	r0, #38146	; 0x9502
    1c28:	052000c0 	streq	r0, [r0, #-192]!	; 0xffffff40
    1c2c:	2f063c07 	svccs	0x00063c07
    1c30:	13050304 	movwne	r0, #21252	; 0x5304
    1c34:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
    1c38:	0a051303 	beq	14684c <__Stack_Size+0x14584c>
    1c3c:	20200106 	eorcs	r0, r0, r6, lsl #2
    1c40:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    1c44:	014e0312 	cmpeq	lr, r2, lsl r3
    1c48:	0a050304 	beq	142860 <__Stack_Size+0x141860>
    1c4c:	202e3203 	eorcs	r3, lr, r3, lsl #4
    1c50:	07050204 	streq	r0, [r5, -r4, lsl #4]
    1c54:	014e0306 	cmpeq	lr, r6, lsl #6
    1c58:	01060905 	tsteq	r6, r5, lsl #18
    1c5c:	3c062106 	stfccs	f2, [r6], {6}
    1c60:	30060705 	andcc	r0, r6, r5, lsl #14
    1c64:	03054a06 	movweq	r4, #23046	; 0x5a06
    1c68:	01340306 	teqeq	r4, r6, lsl #6
    1c6c:	01060f05 	tsteq	r6, r5, lsl #30
    1c70:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    1c74:	05040421 	streq	r0, [r4, #-1057]	; 0xfffffbdf
    1c78:	7ebe0311 	mrcvc	3, 5, r0, cr14, cr1, {0}
    1c7c:	011e0501 	tsteq	lr, r1, lsl #10
    1c80:	01062505 	tsteq	r6, r5, lsl #10
    1c84:	16050204 	strne	r0, [r5], -r4, lsl #4
    1c88:	2e01c203 	cdpcs	2, 0, cr12, cr1, cr3, {0}
    1c8c:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    1c90:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1c94:	21070501 	tstcs	r7, r1, lsl #10
    1c98:	051f0f05 	ldreq	r0, [pc, #-3845]	; d9b <_Minimum_Stack_Size+0xc9b>
    1c9c:	052f0607 	streq	r0, [pc, #-1543]!	; 169d <__Stack_Size+0x69d>
    1ca0:	0f053303 	svceq	0x00053303
    1ca4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1ca8:	012f063c 			; <UNDEFINED> instruction: 0x012f063c
    1cac:	012e1305 			; <UNDEFINED> instruction: 0x012e1305
    1cb0:	01053206 	tsteq	r5, r6, lsl #4
    1cb4:	060b0522 	streq	r0, [fp], -r2, lsr #10
    1cb8:	053c6403 	ldreq	r6, [ip, #-1027]!	; 0xfffffbfd
    1cbc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    1cc0:	07052e0d 	streq	r2, [r5, -sp, lsl #28]
    1cc4:	0a052f06 	beq	14d8e4 <__Stack_Size+0x14c8e4>
    1cc8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ccc:	4b4b0620 	blmi	12c3554 <__Stack_Size+0x12c2554>
    1cd0:	14050304 	strne	r0, [r5], #-772	; 0xfffffcfc
    1cd4:	05017703 	streq	r7, [r1, #-1795]	; 0xfffff8fd
    1cd8:	4a061303 	bmi	1868ec <__Stack_Size+0x1858ec>
    1cdc:	07050204 	streq	r0, [r5, -r4, lsl #4]
    1ce0:	010b0306 	tsteq	fp, r6, lsl #6
    1ce4:	47030505 	strmi	r0, [r3, -r5, lsl #10]
    1ce8:	08051358 	stmdaeq	r5, {r3, r4, r6, r8, r9, ip}
    1cec:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1cf0:	06250520 	strteq	r0, [r5], -r0, lsr #10
    1cf4:	05030458 	streq	r0, [r3, #-1112]	; 0xfffffba8
    1cf8:	01390313 	teqeq	r9, r3, lsl r3
    1cfc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1d00:	2001060a 	andcs	r0, r1, sl, lsl #12
    1d04:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    1d08:	47030605 	strmi	r0, [r3, -r5, lsl #12]
    1d0c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1d10:	20070501 	andcs	r0, r7, r1, lsl #10
    1d14:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    1d18:	05040401 	streq	r0, [r4, #-1025]	; 0xfffffbff
    1d1c:	7efc0311 	mrcvc	3, 7, r0, cr12, cr1, {0}
    1d20:	011e0501 	tsteq	lr, r1, lsl #10
    1d24:	01062505 	tsteq	r6, r5, lsl #10
    1d28:	0b050204 	bleq	142540 <__Stack_Size+0x141540>
    1d2c:	20018103 	andcs	r8, r1, r3, lsl #2
    1d30:	25050404 	strcs	r0, [r5, #-1028]	; 0xfffffbfc
    1d34:	207eff03 	rsbscs	pc, lr, r3, lsl #30
    1d38:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    1d3c:	20018403 	andcs	r8, r1, r3, lsl #8
    1d40:	660c0306 	strvs	r0, [ip], -r6, lsl #6
    1d44:	13050304 	movwne	r0, #21252	; 0x5304
    1d48:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    1d4c:	0a051303 	beq	146960 <__Stack_Size+0x145960>
    1d50:	3c200106 	stfccs	f0, [r0], #-24	; 0xffffffe8
    1d54:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    1d58:	01550306 	cmpeq	r5, r6, lsl #6
    1d5c:	202e2e06 	eorcs	r2, lr, r6, lsl #28
    1d60:	03060905 	movweq	r0, #26885	; 0x6905
    1d64:	1505013a 	strne	r0, [r5, #-314]	; 0xfffffec6
    1d68:	0b050106 	bleq	142188 <__Stack_Size+0x141188>
    1d6c:	3d05052e 	cfstr32cc	mvfx0, [r5, #-184]	; 0xffffff48
    1d70:	05012006 	streq	r2, [r1, #-6]
    1d74:	05010113 	streq	r0, [r1, #-275]	; 0xfffffeed
    1d78:	05013e05 	streq	r3, [r1, #-3589]	; 0xfffff1fb
    1d7c:	02010113 	andeq	r0, r1, #-1073741820	; 0xc0000004
    1d80:	0101000e 	tsteq	r1, lr
    1d84:	00000355 	andeq	r0, r0, r5, asr r3
    1d88:	00a70003 	adceq	r0, r7, r3
    1d8c:	01020000 	mrseq	r0, (UNDEF: 2)
    1d90:	000d0efb 	strdeq	r0, [sp], -fp
    1d94:	01010101 	tsteq	r1, r1, lsl #2
    1d98:	01000000 	mrseq	r0, (UNDEF: 0)
    1d9c:	73010000 	movwvc	r0, #4096	; 0x1000
    1da0:	2f006372 	svccs	0x00006372
    1da4:	2f727375 	svccs	0x00727375
    1da8:	2f62696c 	svccs	0x0062696c
    1dac:	2f636367 	svccs	0x00636367
    1db0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1db4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1db8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1dbc:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    1dc0:	2f312e33 	svccs	0x00312e33
    1dc4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1dc8:	00656475 	rsbeq	r6, r5, r5, ror r4
    1dcc:	2f62696c 	svccs	0x0062696c
    1dd0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1dd4:	00656475 	rsbeq	r6, r5, r5, ror r4
    1dd8:	62737500 	rsbsvs	r7, r3, #0, 10
    1ddc:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    1de0:	0100632e 	tsteq	r0, lr, lsr #6
    1de4:	73750000 	cmnvc	r5, #0
    1de8:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    1dec:	00682e62 	rsbeq	r2, r8, r2, ror #28
    1df0:	73000001 	movwvc	r0, #1
    1df4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    1df8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1dfc:	63000002 	movwvs	r0, #2
    1e00:	5f65726f 	svcpl	0x0065726f
    1e04:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
    1e08:	00030068 	andeq	r0, r3, r8, rrx
    1e0c:	73797300 	cmnvc	r9, #0, 6
    1e10:	5f6d6574 	svcpl	0x006d6574
    1e14:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1e18:	78316632 	ldmdavc	r1!, {r1, r4, r5, r9, sl, sp, lr}
    1e1c:	00682e78 	rsbeq	r2, r8, r8, ror lr
    1e20:	73000003 	movwvc	r0, #3
    1e24:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1e28:	33303166 	teqcc	r0, #-2147483623	; 0x80000019
    1e2c:	682e6278 	stmdavs	lr!, {r3, r4, r5, r6, r9, sp, lr}
    1e30:	00000300 	andeq	r0, r0, r0, lsl #6
    1e34:	001a0500 	andseq	r0, sl, r0, lsl #10
    1e38:	13340205 	teqne	r4, #1342177280	; 0x50000000
    1e3c:	09030800 	stmdbeq	r3, {fp}
    1e40:	13030501 	movwne	r0, #13569	; 0x3501
    1e44:	01061005 	tsteq	r6, r5
    1e48:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    1e4c:	0105201f 	tsteq	r5, pc, lsl r0
    1e50:	06280521 	strteq	r0, [r8], -r1, lsr #10
    1e54:	13030569 	movwne	r0, #13673	; 0x3569
    1e58:	11062805 	tstne	r6, r5, lsl #16
    1e5c:	05210c05 	streq	r0, [r1, #-3077]!	; 0xfffff3fb
    1e60:	0c051f28 	stceq	15, cr1, [r5], {40}	; 0x28
    1e64:	06030521 	streq	r0, [r3], -r1, lsr #10
    1e68:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1e6c:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    1e70:	4b060305 	blmi	182a8c <__Stack_Size+0x181a8c>
    1e74:	01060505 	tsteq	r6, r5, lsl #10
    1e78:	20061005 	andcs	r1, r6, r5
    1e7c:	01061305 	tsteq	r6, r5, lsl #6
    1e80:	2108052e 	tstcs	r8, lr, lsr #10
    1e84:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    1e88:	01060b05 	tsteq	r6, r5, lsl #22
    1e8c:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    1e90:	7a030605 	bvc	c36ac <__Stack_Size+0xc26ac>
    1e94:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    1e98:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
    1e9c:	05210e05 	streq	r0, [r1, #-3589]!	; 0xfffff1fb
    1ea0:	05051f12 	streq	r1, [r5, #-3858]	; 0xfffff0ee
    1ea4:	08052106 	stmdaeq	r5, {r1, r2, r8, sp}
    1ea8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1eac:	06132f06 	ldreq	r2, [r3], -r6, lsl #30
    1eb0:	06260501 	strteq	r0, [r6], -r1, lsl #10
    1eb4:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    1eb8:	18080013 	stmdane	r8, {r0, r1, r4}
    1ebc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1ec0:	20110626 	andscs	r0, r1, r6, lsr #12
    1ec4:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
    1ec8:	052f0603 	streq	r0, [pc, #-1539]!	; 18cd <__Stack_Size+0x8cd>
    1ecc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1ed0:	0c052105 	stfeqs	f2, [r5], {5}
    1ed4:	2113051f 	tstcs	r3, pc, lsl r5
    1ed8:	052d0c05 	streq	r0, [sp, #-3077]!	; 0xfffff3fb
    1edc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1ee0:	03050110 	movweq	r0, #20752	; 0x5110
    1ee4:	08051313 	stmdaeq	r5, {r0, r1, r4, r8, r9, ip}
    1ee8:	03052006 	movweq	r2, #20486	; 0x5006
    1eec:	0b053406 	bleq	14ef0c <__Stack_Size+0x14df0c>
    1ef0:	03050106 	movweq	r0, #20742	; 0x5106
    1ef4:	01052106 	tsteq	r5, r6, lsl #2
    1ef8:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    1efc:	20790306 	rsbscs	r0, r9, r6, lsl #6
    1f00:	01061605 	tsteq	r6, r5, lsl #12
    1f04:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    1f08:	05051e0c 	streq	r1, [r5, #-3596]	; 0xfffff1f4
    1f0c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1f10:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1f14:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    1f18:	06450501 	strbeq	r0, [r5], -r1, lsl #10
    1f1c:	b8020500 	stmdalt	r2, {r8, sl}
    1f20:	03080013 	movweq	r0, #32787	; 0x8013
    1f24:	03050122 	movweq	r0, #20770	; 0x5122
    1f28:	06050513 			; <UNDEFINED> instruction: 0x06050513
    1f2c:	05590601 	ldrbeq	r0, [r9, #-1537]	; 0xfffff9ff
    1f30:	06010607 	streq	r0, [r1], -r7, lsl #12
    1f34:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
    1f38:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
    1f3c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1f40:	0f052210 	svceq	0x00052210
    1f44:	0609051e 			; <UNDEFINED> instruction: 0x0609051e
    1f48:	060f0521 	streq	r0, [pc], -r1, lsr #10
    1f4c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1f50:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    1f54:	240a0501 	strcs	r0, [sl], #-1281	; 0xfffffaff
    1f58:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    1f5c:	054c064c 	strbeq	r0, [ip, #-1612]	; 0xfffff9b4
    1f60:	4c051303 	stcmi	3, cr1, [r5], {3}
    1f64:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
    1f68:	05590621 	ldrbeq	r0, [r9, #-1569]	; 0xfffff9df
    1f6c:	06010607 	streq	r0, [r1], -r7, lsl #12
    1f70:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
    1f74:	06070501 	streq	r0, [r7], -r1, lsl #10
    1f78:	06090521 	streq	r0, [r9], -r1, lsr #10
    1f7c:	043d0601 	ldrteq	r0, [sp], #-1537	; 0xfffff9ff
    1f80:	03130502 	tsteq	r3, #8388608	; 0x800000
    1f84:	050100e7 	streq	r0, [r1, #-231]	; 0xffffff19
    1f88:	0a051303 	beq	146b9c <__Stack_Size+0x145b9c>
    1f8c:	20200106 	eorcs	r0, r0, r6, lsl #2
    1f90:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    1f94:	7f96031e 	svcvc	0x0096031e
    1f98:	28010501 	stmdacs	r1, {r0, r8, sl}
    1f9c:	201f0a05 	andscs	r0, pc, r5, lsl #20
    1fa0:	00061405 	andeq	r1, r6, r5, lsl #8
    1fa4:	14140205 	ldrne	r0, [r4], #-517	; 0xfffffdfb
    1fa8:	05140800 	ldreq	r0, [r4, #-2048]	; 0xfffff800
    1fac:	14051303 	strne	r1, [r5], #-771	; 0xfffffcfd
    1fb0:	03051106 	movweq	r1, #20742	; 0x5106
    1fb4:	67670621 	strbvs	r0, [r7, -r1, lsr #12]!
    1fb8:	13060105 	movwne	r0, #24837	; 0x6105
    1fbc:	052d0305 	streq	r0, [sp, #-773]!	; 0xfffffcfb
    1fc0:	0500061d 	streq	r0, [r0, #-1565]	; 0xfffff9e3
    1fc4:	00143e02 	andseq	r3, r4, r2, lsl #28
    1fc8:	03051508 	movweq	r1, #21768	; 0x5508
    1fcc:	06050513 			; <UNDEFINED> instruction: 0x06050513
    1fd0:	06051f13 			; <UNDEFINED> instruction: 0x06051f13
    1fd4:	05051f06 	streq	r1, [r5, #-3846]	; 0xfffff0fa
    1fd8:	14200614 	strtne	r0, [r0], #-1556	; 0xfffff9ec
    1fdc:	20062e06 	andcs	r2, r6, r6, lsl #28
    1fe0:	00063a05 	andeq	r3, r6, r5, lsl #20
    1fe4:	14540205 	ldrbne	r0, [r4], #-517	; 0xfffffdfb
    1fe8:	05160800 	ldreq	r0, [r6, #-2048]	; 0xfffff800
    1fec:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    1ff0:	2e10063a 	mrccs	6, 0, r0, cr0, cr10, {1}
    1ff4:	053e1105 	ldreq	r1, [lr, #-261]!	; 0xfffffefb
    1ff8:	052f0603 	streq	r0, [pc, #-1539]!	; 19fd <__Stack_Size+0x9fd>
    1ffc:	2e11060c 	cfmsub32cs	mvax0, mvfx0, mvfx1, mvfx12
    2000:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    2004:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    2008:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    200c:	06202005 	strteq	r2, [r0], -r5
    2010:	0513062f 	ldreq	r0, [r3, #-1583]	; 0xfffff9d1
    2014:	05052d0e 	streq	r2, [r5, #-3342]	; 0xfffff2f2
    2018:	052f2106 	streq	r2, [pc, #-262]!	; 1f1a <__Stack_Size+0xf1a>
    201c:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    2020:	78030601 	stmdavc	r3, {r0, r9, sl}
    2024:	0007053c 	andeq	r0, r7, ip, lsr r5
    2028:	03010402 	movweq	r0, #5122	; 0x1402
    202c:	02003c12 	andeq	r3, r0, #4608	; 0x1200
    2030:	051c0104 	ldreq	r0, [ip, #-260]	; 0xfffffefc
    2034:	04020003 	streq	r0, [r2], #-3
    2038:	0d054701 	stceq	7, cr4, [r5, #-4]
    203c:	01040200 	mrseq	r0, R12_usr
    2040:	00030520 	andeq	r0, r3, r0, lsr #10
    2044:	3c010402 	cfstrscc	mvf0, [r1], {2}
    2048:	200f0306 	andcs	r0, pc, r6, lsl #6
    204c:	13060105 	movwne	r0, #24837	; 0x6105
    2050:	202d0305 	eorcs	r0, sp, r5, lsl #6
    2054:	03060505 	movweq	r0, #25861	; 0x6505
    2058:	0b052e72 	bleq	14da28 <__Stack_Size+0x14ca28>
    205c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2060:	3d2f0620 	stccc	6, cr0, [pc, #-128]!	; 1fe8 <__Stack_Size+0xfe8>
    2064:	2f063206 	svccs	0x00063206
    2068:	06410505 	strbeq	r0, [r1], -r5, lsl #10
    206c:	0b052e3c 	bleq	14d964 <__Stack_Size+0x14c964>
    2070:	20780306 	rsbscs	r0, r8, r6, lsl #6
    2074:	01060d05 	tsteq	r6, r5, lsl #26
    2078:	2f060705 	svccs	0x00060705
    207c:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
    2080:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    2084:	05a00614 	streq	r0, [r0, #1556]!	; 0x614
    2088:	13131303 	tstne	r3, #201326592	; 0xc000000
    208c:	0f061405 	svceq	0x00061405
    2090:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2094:	06051d14 			; <UNDEFINED> instruction: 0x06051d14
    2098:	20050523 	andcs	r0, r5, r3, lsr #10
    209c:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
    20a0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    20a4:	02044b06 	andeq	r4, r4, #6144	; 0x1800
    20a8:	23031405 	movwcs	r1, #13317	; 0x3405
    20ac:	13030501 	movwne	r0, #13569	; 0x3501
    20b0:	042e3c06 	strteq	r3, [lr], #-3078	; 0xfffff3fa
    20b4:	5e030601 	cfmadd32pl	mvax0, mvfx0, mvfx3, mvfx1
    20b8:	06060501 	streq	r0, [r6], -r1, lsl #10
    20bc:	20050501 	andcs	r0, r5, r1, lsl #10
    20c0:	02045906 	andeq	r5, r4, #98304	; 0x18000
    20c4:	2d031305 	stccs	3, cr1, [r3, #-20]	; 0xffffffec
    20c8:	13030501 	movwne	r0, #13569	; 0x3501
    20cc:	01060a05 	tsteq	r6, r5, lsl #20
    20d0:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
    20d4:	01540301 	cmpeq	r4, r1, lsl #6
    20d8:	01000502 	tsteq	r0, r2, lsl #10
    20dc:	Address 0x00000000000020dc is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000120 	stmdaeq	r0, {r5, r8}
  1c:	000000ac 	andeq	r0, r0, ip, lsr #1
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
  2c:	00000002 	andeq	r0, r0, r2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
  4c:	0000000c 	andeq	r0, r0, ip
  50:	00000014 	andeq	r0, r0, r4, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
  5c:	000000a8 	andeq	r0, r0, r8, lsr #1
  60:	83080e41 	movwhi	r0, #36417	; 0x8e41
  64:	00018e02 	andeq	r8, r1, r2, lsl #28
  68:	0000000c 	andeq	r0, r0, ip
  6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  70:	7c020001 	stcvc	0, cr0, [r2], {1}
  74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  78:	0000000c 	andeq	r0, r0, ip
  7c:	00000068 	andeq	r0, r0, r8, rrx
  80:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  84:	00000002 	andeq	r0, r0, r2
  88:	0000000c 	andeq	r0, r0, ip
  8c:	00000068 	andeq	r0, r0, r8, rrx
  90:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
  94:	00000002 	andeq	r0, r0, r2
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000068 	andeq	r0, r0, r8, rrx
  a0:	080001e0 	stmdaeq	r0, {r5, r6, r7, r8}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000068 	andeq	r0, r0, r8, rrx
  b0:	080001e2 	stmdaeq	r0, {r1, r5, r6, r7, r8}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000068 	andeq	r0, r0, r8, rrx
  c0:	080001e4 	stmdaeq	r0, {r2, r5, r6, r7, r8}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000068 	andeq	r0, r0, r8, rrx
  d0:	080001e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000068 	andeq	r0, r0, r8, rrx
  e0:	080001ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000068 	andeq	r0, r0, r8, rrx
  f0:	080001ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8}
  f4:	000000aa 	andeq	r0, r0, sl, lsr #1
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000068 	andeq	r0, r0, r8, rrx
 100:	08000298 	stmdaeq	r0, {r3, r4, r7, r9}
 104:	00000118 	andeq	r0, r0, r8, lsl r1
 108:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000068 	andeq	r0, r0, r8, rrx
 120:	080003b0 	stmdaeq	r0, {r4, r5, r7, r8, r9}
 124:	00000148 	andeq	r0, r0, r8, asr #2
 128:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 12c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 130:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 134:	00000001 	andeq	r0, r0, r1
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	00000068 	andeq	r0, r0, r8, rrx
 140:	080004f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl}
 144:	00000150 	andeq	r0, r0, r0, asr r1
 148:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 14c:	86058506 	strhi	r8, [r5], -r6, lsl #10
 150:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 154:	00018e02 	andeq	r8, r1, r2, lsl #28
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	00000068 	andeq	r0, r0, r8, rrx
 160:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
 164:	00000054 	andeq	r0, r0, r4, asr r0
 168:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 16c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 170:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 174:	00000001 	andeq	r0, r0, r1
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	00000068 	andeq	r0, r0, r8, rrx
 180:	0800069c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl}
 184:	00000034 	andeq	r0, r0, r4, lsr r0
 188:	83180e41 	tsthi	r8, #1040	; 0x410
 18c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 190:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 194:	00018e02 	andeq	r8, r1, r2, lsl #28
 198:	00000018 	andeq	r0, r0, r8, lsl r0
 19c:	00000068 	andeq	r0, r0, r8, rrx
 1a0:	080006d0 	stmdaeq	r0, {r4, r6, r7, r9, sl}
 1a4:	0000005a 	andeq	r0, r0, sl, asr r0
 1a8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1ac:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000020 	andeq	r0, r0, r0, lsr #32
 1b8:	00000068 	andeq	r0, r0, r8, rrx
 1bc:	0800072a 	stmdaeq	r0, {r1, r3, r5, r8, r9, sl}
 1c0:	00000136 	andeq	r0, r0, r6, lsr r1
 1c4:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 1c8:	86038504 	strhi	r8, [r3], -r4, lsl #10
 1cc:	02018e02 	andeq	r8, r1, #2, 28
 1d0:	100e0a46 	andne	r0, lr, r6, asr #20
 1d4:	00000b41 	andeq	r0, r0, r1, asr #22
 1d8:	0000000c 	andeq	r0, r0, ip
 1dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1e0:	7c020001 	stcvc	0, cr0, [r2], {1}
 1e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1e8:	00000018 	andeq	r0, r0, r8, lsl r0
 1ec:	000001d8 	ldrdeq	r0, [r0], -r8
 1f0:	08000860 	stmdaeq	r0, {r5, r6, fp}
 1f4:	00000048 	andeq	r0, r0, r8, asr #32
 1f8:	83100e43 	tsthi	r0, #1072	; 0x430
 1fc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 200:	00018e02 	andeq	r8, r1, r2, lsl #28
 204:	0000000c 	andeq	r0, r0, ip
 208:	000001d8 	ldrdeq	r0, [r0], -r8
 20c:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
 210:	00000018 	andeq	r0, r0, r8, lsl r0
 214:	0000000c 	andeq	r0, r0, ip
 218:	000001d8 	ldrdeq	r0, [r0], -r8
 21c:	080008c0 	stmdaeq	r0, {r6, r7, fp}
 220:	00000018 	andeq	r0, r0, r8, lsl r0
 224:	0000000c 	andeq	r0, r0, ip
 228:	000001d8 	ldrdeq	r0, [r0], -r8
 22c:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
 230:	00000002 	andeq	r0, r0, r2
 234:	00000014 	andeq	r0, r0, r4, lsl r0
 238:	000001d8 	ldrdeq	r0, [r0], -r8
 23c:	080008da 	stmdaeq	r0, {r1, r3, r4, r6, r7, fp}
 240:	00000092 	muleq	r0, r2, r0
 244:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 248:	00018e02 	andeq	r8, r1, r2, lsl #28
 24c:	0000000c 	andeq	r0, r0, ip
 250:	000001d8 	ldrdeq	r0, [r0], -r8
 254:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 258:	00000064 	andeq	r0, r0, r4, rrx
 25c:	00000014 	andeq	r0, r0, r4, lsl r0
 260:	000001d8 	ldrdeq	r0, [r0], -r8
 264:	080009d0 	stmdaeq	r0, {r4, r6, r7, r8, fp}
 268:	0000004c 	andeq	r0, r0, ip, asr #32
 26c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 270:	00018e02 	andeq	r8, r1, r2, lsl #28
 274:	00000014 	andeq	r0, r0, r4, lsl r0
 278:	000001d8 	ldrdeq	r0, [r0], -r8
 27c:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
 280:	00000070 	andeq	r0, r0, r0, ror r0
 284:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 288:	00018e02 	andeq	r8, r1, r2, lsl #28
 28c:	0000000c 	andeq	r0, r0, ip
 290:	000001d8 	ldrdeq	r0, [r0], -r8
 294:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
 298:	00000014 	andeq	r0, r0, r4, lsl r0
 29c:	0000000c 	andeq	r0, r0, ip
 2a0:	000001d8 	ldrdeq	r0, [r0], -r8
 2a4:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
 2a8:	00000028 	andeq	r0, r0, r8, lsr #32
 2ac:	0000000c 	andeq	r0, r0, ip
 2b0:	000001d8 	ldrdeq	r0, [r0], -r8
 2b4:	08000ac8 	stmdaeq	r0, {r3, r6, r7, r9, fp}
 2b8:	0000009c 	muleq	r0, ip, r0
 2bc:	00000018 	andeq	r0, r0, r8, lsl r0
 2c0:	000001d8 	ldrdeq	r0, [r0], -r8
 2c4:	08000b64 	stmdaeq	r0, {r2, r5, r6, r8, r9, fp}
 2c8:	0000002e 	andeq	r0, r0, lr, lsr #32
 2cc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 2d0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2d4:	00018e02 	andeq	r8, r1, r2, lsl #28
 2d8:	00000018 	andeq	r0, r0, r8, lsl r0
 2dc:	000001d8 	ldrdeq	r0, [r0], -r8
 2e0:	08000b92 	stmdaeq	r0, {r1, r4, r7, r8, r9, fp}
 2e4:	00000032 	andeq	r0, r0, r2, lsr r0
 2e8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 2ec:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2f0:	00018e02 	andeq	r8, r1, r2, lsl #28
 2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2f8:	000001d8 	ldrdeq	r0, [r0], -r8
 2fc:	08000bc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, fp}
 300:	00000144 	andeq	r0, r0, r4, asr #2
 304:	83080e41 	movwhi	r0, #36417	; 0x8e41
 308:	02018e02 	andeq	r8, r1, #2, 28
 30c:	0ec3ce93 	mcreq	14, 6, ip, cr3, cr3, {4}
 310:	00000000 	andeq	r0, r0, r0
 314:	00000018 	andeq	r0, r0, r8, lsl r0
 318:	000001d8 	ldrdeq	r0, [r0], -r8
 31c:	08000d08 	stmdaeq	r0, {r3, r8, sl, fp}
 320:	0000004c 	andeq	r0, r0, ip, asr #32
 324:	83080e41 	movwhi	r0, #36417	; 0x8e41
 328:	5c018e02 	stcpl	14, cr8, [r1], {2}
 32c:	000ec3ce 	andeq	ip, lr, lr, asr #7
 330:	0000000c 	andeq	r0, r0, ip
 334:	000001d8 	ldrdeq	r0, [r0], -r8
 338:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
 33c:	00000004 	andeq	r0, r0, r4
 340:	0000000c 	andeq	r0, r0, ip
 344:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 348:	7c020001 	stcvc	0, cr0, [r2], {1}
 34c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 350:	0000000c 	andeq	r0, r0, ip
 354:	00000340 	andeq	r0, r0, r0, asr #6
 358:	08000d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp}
 35c:	00000010 	andeq	r0, r0, r0, lsl r0
 360:	0000000c 	andeq	r0, r0, ip
 364:	00000340 	andeq	r0, r0, r0, asr #6
 368:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
 36c:	00000010 	andeq	r0, r0, r0, lsl r0
 370:	0000000c 	andeq	r0, r0, ip
 374:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 378:	7c020001 	stcvc	0, cr0, [r2], {1}
 37c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 380:	0000000c 	andeq	r0, r0, ip
 384:	00000370 	andeq	r0, r0, r0, ror r3
 388:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
 38c:	0000000a 	andeq	r0, r0, sl
 390:	0000000c 	andeq	r0, r0, ip
 394:	00000370 	andeq	r0, r0, r0, ror r3
 398:	08000d82 	stmdaeq	r0, {r1, r7, r8, sl, fp}
 39c:	00000026 	andeq	r0, r0, r6, lsr #32
 3a0:	0000000c 	andeq	r0, r0, ip
 3a4:	00000370 	andeq	r0, r0, r0, ror r3
 3a8:	08000da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp}
 3ac:	00000022 	andeq	r0, r0, r2, lsr #32
 3b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3b4:	00000370 	andeq	r0, r0, r0, ror r3
 3b8:	08000dca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, fp}
 3bc:	0000004a 	andeq	r0, r0, sl, asr #32
 3c0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 3c4:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
 3c8:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 3cc:	000b4200 	andeq	r4, fp, r0, lsl #4
 3d0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3d4:	00000370 	andeq	r0, r0, r0, ror r3
 3d8:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
 3dc:	0000002c 	andeq	r0, r0, ip, lsr #32
 3e0:	83180e41 	tsthi	r8, #1040	; 0x410
 3e4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 3e8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 3ec:	00018e02 	andeq	r8, r1, r2, lsl #28
 3f0:	00000018 	andeq	r0, r0, r8, lsl r0
 3f4:	00000370 	andeq	r0, r0, r0, ror r3
 3f8:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
 3fc:	00000028 	andeq	r0, r0, r8, lsr #32
 400:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 404:	86038504 	strhi	r8, [r3], -r4, lsl #10
 408:	00018e02 	andeq	r8, r1, r2, lsl #28
 40c:	00000018 	andeq	r0, r0, r8, lsl r0
 410:	00000370 	andeq	r0, r0, r0, ror r3
 414:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
 418:	0000002c 	andeq	r0, r0, ip, lsr #32
 41c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 420:	86038504 	strhi	r8, [r3], -r4, lsl #10
 424:	00018e02 	andeq	r8, r1, r2, lsl #28
 428:	0000001c 	andeq	r0, r0, ip, lsl r0
 42c:	00000370 	andeq	r0, r0, r0, ror r3
 430:	08000e94 	stmdaeq	r0, {r2, r4, r7, r9, sl, fp}
 434:	00000058 	andeq	r0, r0, r8, asr r0
 438:	83180e41 	tsthi	r8, #1040	; 0x410
 43c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 440:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 444:	00018e02 	andeq	r8, r1, r2, lsl #28
 448:	0000000c 	andeq	r0, r0, ip
 44c:	00000370 	andeq	r0, r0, r0, ror r3
 450:	08000eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp}
 454:	0000003c 	andeq	r0, r0, ip, lsr r0
 458:	0000000c 	andeq	r0, r0, ip
 45c:	00000370 	andeq	r0, r0, r0, ror r3
 460:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
 464:	00000068 	andeq	r0, r0, r8, rrx
 468:	00000018 	andeq	r0, r0, r8, lsl r0
 46c:	00000370 	andeq	r0, r0, r0, ror r3
 470:	08000f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp}
 474:	0000008c 	andeq	r0, r0, ip, lsl #1
 478:	83100e41 	tsthi	r0, #1040	; 0x410
 47c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 480:	00018e02 	andeq	r8, r1, r2, lsl #28
 484:	00000018 	andeq	r0, r0, r8, lsl r0
 488:	00000370 	andeq	r0, r0, r0, ror r3
 48c:	0800101c 	stmdaeq	r0, {r2, r3, r4, ip}
 490:	000000c0 	andeq	r0, r0, r0, asr #1
 494:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
 498:	86038504 	strhi	r8, [r3], -r4, lsl #10
 49c:	00018e02 	andeq	r8, r1, r2, lsl #28
 4a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4a4:	00000370 	andeq	r0, r0, r0, ror r3
 4a8:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
 4ac:	000000c0 	andeq	r0, r0, r0, asr #1
 4b0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 4b4:	86048505 	strhi	r8, [r4], -r5, lsl #10
 4b8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000028 	andeq	r0, r0, r8, lsr #32
 4c4:	00000370 	andeq	r0, r0, r0, ror r3
 4c8:	0800119c 	stmdaeq	r0, {r2, r3, r4, r7, r8, ip}
 4cc:	00000198 	muleq	r0, r8, r1
 4d0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 4d4:	86058506 	strhi	r8, [r5], -r6, lsl #10
 4d8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 4dc:	42018e02 	andmi	r8, r1, #2, 28
 4e0:	7702580e 	strvc	r5, [r2, -lr, lsl #16]
 4e4:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
 4e8:	0000000b 	andeq	r0, r0, fp
 4ec:	0000000c 	andeq	r0, r0, ip
 4f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4f4:	7c020001 	stcvc	0, cr0, [r2], {1}
 4f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4fc:	0000000c 	andeq	r0, r0, ip
 500:	000004ec 	andeq	r0, r0, ip, ror #9
 504:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
 508:	00000014 	andeq	r0, r0, r4, lsl r0
 50c:	00000018 	andeq	r0, r0, r8, lsl r0
 510:	000004ec 	andeq	r0, r0, ip, ror #9
 514:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
 518:	0000003c 	andeq	r0, r0, ip, lsr r0
 51c:	83100e41 	tsthi	r0, #1040	; 0x410
 520:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 524:	00018e02 	andeq	r8, r1, r2, lsl #28
 528:	00000018 	andeq	r0, r0, r8, lsl r0
 52c:	000004ec 	andeq	r0, r0, ip, ror #9
 530:	08001384 	stmdaeq	r0, {r2, r7, r8, r9, ip}
 534:	00000034 	andeq	r0, r0, r4, lsr r0
 538:	83100e41 	tsthi	r0, #1040	; 0x410
 53c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 540:	00018e02 	andeq	r8, r1, r2, lsl #28
 544:	0000000c 	andeq	r0, r0, ip
 548:	000004ec 	andeq	r0, r0, ip, ror #9
 54c:	080013b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip}
 550:	0000002c 	andeq	r0, r0, ip, lsr #32
 554:	00000014 	andeq	r0, r0, r4, lsl r0
 558:	000004ec 	andeq	r0, r0, ip, ror #9
 55c:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
 560:	00000030 	andeq	r0, r0, r0, lsr r0
 564:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 568:	00018e02 	andeq	r8, r1, r2, lsl #28
 56c:	00000018 	andeq	r0, r0, r8, lsl r0
 570:	000004ec 	andeq	r0, r0, ip, ror #9
 574:	08001414 	stmdaeq	r0, {r2, r4, sl, ip}
 578:	0000002a 	andeq	r0, r0, sl, lsr #32
 57c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 580:	4e018e02 	cdpmi	14, 0, cr8, cr1, cr2, {0}
 584:	000ec4ce 	andeq	ip, lr, lr, asr #9
 588:	0000000c 	andeq	r0, r0, ip
 58c:	000004ec 	andeq	r0, r0, ip, ror #9
 590:	0800143e 	stmdaeq	r0, {r1, r2, r3, r4, r5, sl, ip}
 594:	00000016 	andeq	r0, r0, r6, lsl r0
 598:	00000030 	andeq	r0, r0, r0, lsr r0
 59c:	000004ec 	andeq	r0, r0, ip, ror #9
 5a0:	08001454 	stmdaeq	r0, {r2, r4, r6, sl, ip}
 5a4:	000000a0 	andeq	r0, r0, r0, lsr #1
 5a8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 5ac:	86078508 	strhi	r8, [r7], -r8, lsl #10
 5b0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 5b4:	8a038904 	bhi	e29cc <__Stack_Size+0xe19cc>
 5b8:	66018e02 	strvs	r8, [r1], -r2, lsl #28
 5bc:	c9cace0a 	stmibgt	sl, {r1, r3, r9, sl, fp, lr, pc}^
 5c0:	c5c6c7c8 	strbgt	ip, [r6, #1992]	; 0x7c8
 5c4:	43000ec4 	movwmi	r0, #3780	; 0xec4
 5c8:	0000000b 	andeq	r0, r0, fp
 5cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 5d0:	000004ec 	andeq	r0, r0, ip, ror #9
 5d4:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
 5d8:	00000040 	andeq	r0, r0, r0, asr #32
 5dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 5e0:	42018e02 	andmi	r8, r1, #2, 28
 5e4:	0e59280e 	cdpeq	8, 5, cr2, cr9, cr14, {0}
 5e8:	00000008 	andeq	r0, r0, r8

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	32425041 	subcc	r5, r2, #65	; 0x41
       4:	00524e45 	subseq	r4, r2, r5, asr #28
       8:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
       c:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
      10:	4e470052 	mcrmi	0, 2, r0, cr7, cr2, {2}
      14:	31432055 	qdaddcc	r2, r5, r3
      18:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
      1c:	20312e33 	eorscs	r2, r1, r3, lsr lr
      20:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
      24:	33303730 	teqcc	r0, #48, 14	; 0xc00000
      28:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
      2c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
      30:	5b202965 	blpl	80a5cc <__Stack_Size+0x8095cc>
      34:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      38:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
      3c:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
      40:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
      44:	6f697369 	svcvs	0x00697369
      48:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
      4c:	37323033 			; <UNDEFINED> instruction: 0x37323033
      50:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
      54:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
      58:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
      5c:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
      60:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
      64:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
      68:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
      6c:	616f6c66 	cmnvs	pc, r6, ror #24
      70:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
      74:	6f733d69 	svcvs	0x00733d69
      78:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
      7c:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
      80:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
      84:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
      88:	672d206d 	strvs	r2, [sp, -sp, rrx]!
      8c:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
      90:	20322d66 	eorscs	r2, r2, r6, ror #26
      94:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
      98:	6f6e662d 	svcvs	0x006e662d
      9c:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
      a0:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
      a4:	414c4600 	cmpmi	ip, r0, lsl #12
      a8:	545f4853 	ldrbpl	r4, [pc], #-2131	; b0 <_Minimum_Stack_Size-0x50>
      ac:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      b0:	42006665 	andmi	r6, r0, #105906176	; 0x6500000
      b4:	00525253 	subseq	r5, r2, r3, asr r2
      b8:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
      bc:	5500524e 	strpl	r5, [r0, #-590]	; 0xfffffdb2
      c0:	735f4253 	cmpvc	pc, #805306373	; 0x30000005
      c4:	70757465 	rsbsvc	r7, r5, r5, ror #8
      c8:	50525700 	subspl	r5, r2, r0, lsl #14
      cc:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
      d0:	6f6c4373 	svcvs	0x006c4373
      d4:	614d6b63 	cmpvs	sp, r3, ror #22
      d8:	50470078 	subpl	r0, r7, r8, ror r0
      dc:	545f4f49 	ldrbpl	r4, [pc], #-3913	; e4 <_Minimum_Stack_Size-0x1c>
      e0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      e4:	73006665 	movwvc	r6, #1637	; 0x665
      e8:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
      ec:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
      f0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      f4:	006c616e 	rsbeq	r6, ip, lr, ror #2
      f8:	64656d2f 	strbtvs	r6, [r5], #-3375	; 0xfffff2d1
      fc:	652f6169 	strvs	r6, [pc, #-361]!	; ffffff9b <BootRAM+0xef7073c>
     100:	642f7478 	strtvs	r7, [pc], #-1144	; 108 <_Minimum_Stack_Size+0x8>
     104:	702f7665 	eorvc	r7, pc, r5, ror #12
     108:	2f676f72 	svccs	0x00676f72
     10c:	69722d31 	ldmdbvs	r2!, {r0, r4, r5, r8, sl, fp, sp}^
     110:	722f6373 	eorvc	r6, pc, #-872415231	; 0xcc000001
     114:	76637369 	strbtvc	r7, [r3], -r9, ror #6
     118:	6d73612d 	ldfvse	f6, [r3, #-180]!	; 0xffffff4c
     11c:	72614b2f 	rsbvc	r4, r1, #48128	; 0xbc00
     120:	74616b61 	strbtvc	r6, [r1], #-2913	; 0xfffff49f
     124:	61737469 	cmnvs	r3, r9, ror #8
     128:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     12c:	316c3233 	cmncc	ip, r3, lsr r2
     130:	662f3135 			; <UNDEFINED> instruction: 0x662f3135
     134:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
     138:	5f657261 	svcpl	0x00657261
     13c:	33303166 	teqcc	r0, #-2147483623	; 0x80000019
     140:	62737500 	rsbsvs	r7, r3, #0, 10
     144:	616c635f 	cmnvs	ip, pc, asr r3
     148:	705f7373 	subsvc	r7, pc, r3, ror r3	; <UNPREDICTABLE>
     14c:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     150:	50424841 	subpl	r4, r2, r1, asr #16
     154:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
     158:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
     15c:	68730065 	ldmdavs	r3!, {r0, r2, r5, r6}^
     160:	2074726f 	rsbscs	r7, r4, pc, ror #4
     164:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     168:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     16c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     170:	73797300 	cmnvc	r9, #0, 6
     174:	6b636974 	blvs	18da74c <__Stack_Size+0x18d974c>
     178:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     17c:	504f0074 	subpl	r0, pc, r4, ror r0	; <UNPREDICTABLE>
     180:	59454b54 	stmdbpl	r5, {r2, r4, r6, r8, r9, fp, lr}^
     184:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     188:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     18c:	63206465 			; <UNDEFINED> instruction: 0x63206465
     190:	00726168 	rsbseq	r6, r2, r8, ror #2
     194:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     198:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     19c:	42504100 	subsmi	r4, r0, #0, 2
     1a0:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     1a4:	616d0052 	qdsubvs	r0, r2, sp
     1a8:	41006e69 	tstmi	r0, r9, ror #28
     1ac:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     1b0:	4100524e 	tstmi	r0, lr, asr #4
     1b4:	52324250 	eorspl	r4, r2, #80, 4
     1b8:	00525453 	subseq	r5, r2, r3, asr r4
     1bc:	6e655f5f 	mcrvs	15, 3, r5, cr5, cr15, {2}
     1c0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     1c4:	7172695f 	cmnvc	r2, pc, asr r9
     1c8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     1cc:	6f6c0070 	svcvs	0x006c0070
     1d0:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
     1d4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     1d8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     1dc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     1e0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     1e4:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     1e8:	745f3874 	ldrbvc	r3, [pc], #-2164	; 1f0 <_Minimum_Stack_Size+0xf0>
     1ec:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
     1f0:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
     1f4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     1f8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     1fc:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     200:	6f6c2067 	svcvs	0x006c2067
     204:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     208:	5300746e 	movwpl	r7, #1134	; 0x46e
     20c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     210:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     214:	6f6c4365 	svcvs	0x006c4365
     218:	73006b63 	movwvc	r6, #2915	; 0xb63
     21c:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 5c <_Minimum_Stack_Size-0xa4>
     220:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     224:	50410063 	subpl	r0, r1, r3, rrx
     228:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
     22c:	61546373 	cmpvs	r4, r3, ror r3
     230:	00656c62 	rsbeq	r6, r5, r2, ror #24
     234:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     238:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
     23c:	43520074 	cmpmi	r2, #116	; 0x74
     240:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     244:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     248:	69750066 	ldmdbvs	r5!, {r1, r2, r5, r6}^
     24c:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
     250:	4900745f 	stmdbmi	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     254:	525f4d54 	subspl	r4, pc, #84, 26	; 0x1500
     258:	66754278 			; <UNDEFINED> instruction: 0x66754278
     25c:	00726566 	rsbseq	r6, r2, r6, ror #10
     260:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
     264:	434c0070 	movtmi	r0, #49264	; 0xc070
     268:	5500524b 	strpl	r5, [r0, #-587]	; 0xfffffdb5
     26c:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
     270:	41435f50 	cmpmi	r3, r0, asr pc
     274:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     278:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     27c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     280:	646e4977 	strbtvs	r4, [lr], #-2423	; 0xfffff689
     284:	62007865 	andvs	r7, r0, #6619136	; 0x650000
     288:	36316675 			; <UNDEFINED> instruction: 0x36316675
     28c:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     290:	43535f31 	cmpmi	r3, #49, 30	; 0xc4
     294:	52495f45 	subpl	r5, r9, #276	; 0x114
     298:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     29c:	5f31414d 	svcpl	0x0031414d
     2a0:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     2a4:	376c656e 	strbcc	r6, [ip, -lr, ror #10]!
     2a8:	5152495f 	cmppl	r2, pc, asr r9
     2ac:	3249006e 	subcc	r0, r9, #110	; 0x6e
     2b0:	455f3243 	ldrbmi	r3, [pc, #-579]	; 75 <_Minimum_Stack_Size-0x8b>
     2b4:	52495f52 	subpl	r5, r9, #328	; 0x148
     2b8:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     2bc:	5f344d49 	svcpl	0x00344d49
     2c0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     2c4:	414d4400 	cmpmi	sp, r0, lsl #8
     2c8:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     2cc:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     2d0:	495f326c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     2d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     2d8:	5f616d70 	svcpl	0x00616d70
     2dc:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     2e0:	00745f72 	rsbseq	r5, r4, r2, ror pc
     2e4:	65526d62 	ldrbvs	r6, [r2, #-3426]	; 0xfffff29e
     2e8:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
     2ec:	70795474 	rsbsvc	r5, r9, r4, ror r4
     2f0:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
     2f4:	5f707574 	svcpl	0x00707574
     2f8:	6b636170 	blvs	18d88c0 <__Stack_Size+0x18d78c0>
     2fc:	46007465 	strmi	r7, [r0], -r5, ror #8
     300:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     304:	5152495f 	cmppl	r2, pc, asr r9
     308:	7962006e 	stmdbvc	r2!, {r1, r2, r3, r5, r6}^
     30c:	72736574 	rsbsvc	r6, r3, #116, 10	; 0x1d000000
     310:	00646165 	rsbeq	r6, r4, r5, ror #2
     314:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     318:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     31c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     320:	4c5f4253 	lfmmi	f4, 2, [pc], {83}	; 0x53
     324:	41435f50 	cmpmi	r3, r0, asr pc
     328:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     32c:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     330:	61485152 	cmpvs	r8, r2, asr r1
     334:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     338:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     33c:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     340:	5f30315f 	svcpl	0x0030315f
     344:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     348:	73616c00 	cmnvc	r1, #0, 24
     34c:	64646174 	strbtvs	r6, [r4], #-372	; 0xfffffe8c
     350:	65500072 	ldrbvs	r0, [r0, #-114]	; 0xffffff8e
     354:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
     358:	5152495f 	cmppl	r2, pc, asr r9
     35c:	7375006e 	cmnvc	r5, #110	; 0x6e
     360:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     364:	5f737361 	svcpl	0x00737361
     368:	00666f73 	rsbeq	r6, r6, r3, ror pc
     36c:	5f434352 	svcpl	0x00434352
     370:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     374:	61567700 	cmpvs	r6, r0, lsl #14
     378:	0065756c 	rsbeq	r7, r5, ip, ror #10
     37c:	6f6d654d 	svcvs	0x006d654d
     380:	614d7972 	hvcvs	55186	; 0xd792
     384:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     388:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     38c:	5152495f 	cmppl	r2, pc, asr r9
     390:	7065006e 	rsbvc	r0, r5, lr, rrx
     394:	6f635f30 	svcvs	0x00635f30
     398:	00746e75 	rsbseq	r6, r4, r5, ror lr
     39c:	52545349 	subspl	r5, r4, #603979777	; 0x24000001
     3a0:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
     3a4:	6e650052 	mcrvs	0, 3, r0, cr5, cr2, {2}
     3a8:	635f7064 	cmpvs	pc, #100	; 0x64
     3ac:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     3b0:	5f6b6361 	svcpl	0x006b6361
     3b4:	61666564 	cmnvs	r6, r4, ror #10
     3b8:	00746c75 	rsbseq	r6, r4, r5, ror ip
     3bc:	314d4954 	cmpcc	sp, r4, asr r9
     3c0:	4b52425f 	blmi	1490d44 <__Stack_Size+0x148fd44>
     3c4:	5152495f 	cmppl	r2, pc, asr r9
     3c8:	5352006e 	cmppl	r2, #110	; 0x6e
     3cc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3d0:	53003144 	movwpl	r3, #324	; 0x144
     3d4:	5f314950 	svcpl	0x00314950
     3d8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     3dc:	73755f00 	cmnvc	r5, #0, 30
     3e0:	70655f62 	rsbvc	r5, r5, r2, ror #30
     3e4:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     3e8:	44006574 	strmi	r6, [r0], #-1396	; 0xfffffa8c
     3ec:	5f31414d 	svcpl	0x0031414d
     3f0:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     3f4:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
     3f8:	5152495f 	cmppl	r2, pc, asr r9
     3fc:	564e006e 	strbpl	r0, [lr], -lr, rrx
     400:	455f4349 	ldrbmi	r4, [pc, #-841]	; bf <_Minimum_Stack_Size-0x41>
     404:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     408:	51524965 	cmppl	r2, r5, ror #18
     40c:	42535500 	subsmi	r5, r3, #0, 10
     410:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     414:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     418:	44414400 	strbmi	r4, [r1], #-1024	; 0xfffffc00
     41c:	43005244 	movwmi	r5, #580	; 0x244
     420:	5f314e41 	svcpl	0x00314e41
     424:	5f315852 	svcpl	0x00315852
     428:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     42c:	53455200 	movtpl	r5, #20992	; 0x5200
     430:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     434:	75004244 	strvc	r4, [r0, #-580]	; 0xfffffdbc
     438:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     43c:	7373616c 	cmnvc	r3, #108, 2
     440:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     444:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     448:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
     44c:	55007263 	strpl	r7, [r0, #-611]	; 0xfffffd9d
     450:	485f4253 	ldmdami	pc, {r0, r1, r4, r6, r9, lr}^	; <UNPREDICTABLE>
     454:	41435f50 	cmpmi	r3, r0, asr pc
     458:	545f314e 	ldrbpl	r3, [pc], #-334	; 460 <_Minimum_Stack_Size+0x360>
     45c:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     460:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     464:	5f6e5152 	svcpl	0x006e5152
     468:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     46c:	30706500 	rsbscc	r6, r0, r0, lsl #10
     470:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
     474:	53550064 	cmppl	r5, #100	; 0x64
     478:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     47c:	5152495f 	cmppl	r2, pc, asr r9
     480:	6f63006e 	svcvs	0x0063006e
     484:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     488:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
     48c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     490:	52305045 	eorspl	r5, r0, #69	; 0x45
     494:	42535500 	subsmi	r5, r3, #0, 10
     498:	6464415f 	strbtvs	r4, [r4], #-351	; 0xfffffea1
     49c:	70650072 	rsbvc	r0, r5, r2, ror r0
     4a0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     4a4:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     4a8:	30706500 	rsbscc	r6, r0, r0, lsl #10
     4ac:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     4b0:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     4b4:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     4b8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4bc:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     4c0:	5f56455f 	svcpl	0x0056455f
     4c4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4c8:	31504500 	cmpcc	r0, r0, lsl #10
     4cc:	73750052 	cmnvc	r5, #82	; 0x52
     4d0:	70655f62 	rsbvc	r5, r5, r2, ror #30
     4d4:	61746164 	cmnvs	r4, r4, ror #2
     4d8:	4400745f 	strmi	r7, [r0], #-1119	; 0xfffffba1
     4dc:	5f31414d 	svcpl	0x0031414d
     4e0:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     4e4:	366c656e 	strbtcc	r6, [ip], -lr, ror #10
     4e8:	5152495f 	cmppl	r2, pc, asr r9
     4ec:	755f006e 	ldrbvc	r0, [pc, #-110]	; 486 <_Minimum_Stack_Size+0x386>
     4f0:	655f6273 	ldrbvs	r6, [pc, #-627]	; 285 <_Minimum_Stack_Size+0x185>
     4f4:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
     4f8:	54006461 	strpl	r6, [r0], #-1121	; 0xfffffb9f
     4fc:	5f334d49 	svcpl	0x00334d49
     500:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     504:	414d4400 	cmpmi	sp, r0, lsl #8
     508:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     50c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     510:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     514:	006e5152 	rsbeq	r5, lr, r2, asr r1
     518:	52325045 	eorspl	r5, r2, #69	; 0x45
     51c:	42535500 	subsmi	r5, r3, #0, 10
     520:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
     524:	495f7055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     528:	006e5152 	rsbeq	r5, lr, r2, asr r1
     52c:	47445757 	smlsldmi	r5, r4, r7, r7
     530:	5152495f 	cmppl	r2, pc, asr r9
     534:	7375006e 	cmnvc	r5, #110	; 0x6e
     538:	6c635f62 	stclvs	15, cr5, [r3], #-392	; 0xfffffe78
     53c:	5f737361 	svcpl	0x00737361
     540:	63736964 	cmnvs	r3, #100, 18	; 0x190000
     544:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
     548:	45007463 	strmi	r7, [r0, #-1123]	; 0xfffffb9d
     54c:	00523350 	subseq	r3, r2, r0, asr r3
     550:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     554:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     558:	5152495f 	cmppl	r2, pc, asr r9
     55c:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     560:	5f344954 	svcpl	0x00344954
     564:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     568:	62737500 	rsbsvs	r7, r3, #0, 10
     56c:	616c635f 	cmnvs	ip, pc, asr r3
     570:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     574:	0074696e 	rsbseq	r6, r4, lr, ror #18
     578:	5f445650 	svcpl	0x00445650
     57c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     580:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
     584:	5f636e75 	svcpl	0x00636e75
     588:	73750074 	cmnvc	r5, #116	; 0x74
     58c:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     590:	756f635f 	strbvc	r6, [pc, #-863]!	; 239 <_Minimum_Stack_Size+0x139>
     594:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     598:	00525043 	subseq	r5, r2, r3, asr #32
     59c:	52345045 	eorspl	r5, r4, #69	; 0x45
     5a0:	414d4400 	cmpmi	sp, r0, lsl #8
     5a4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     5a8:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     5ac:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     5b0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     5b4:	2f637273 	svccs	0x00637273
     5b8:	5f627375 	svcpl	0x00627375
     5bc:	2e62696c 	vnmulcs.f16	s13, s4, s25	; <UNPREDICTABLE>
     5c0:	32490063 	subcc	r0, r9, #99	; 0x63
     5c4:	455f3143 	ldrbmi	r3, [pc, #-323]	; 489 <_Minimum_Stack_Size+0x389>
     5c8:	52495f56 	subpl	r5, r9, #344	; 0x158
     5cc:	72006e51 	andvc	r6, r0, #1296	; 0x510
     5d0:	756e5f78 	strbvc	r5, [lr, #-3960]!	; 0xfffff088
     5d4:	6c625f6d 	stclvs	15, cr5, [r2], #-436	; 0xfffffe4c
     5d8:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     5dc:	62737500 	rsbsvs	r7, r3, #0, 10
     5e0:	616c635f 	cmnvs	ip, pc, asr r3
     5e4:	655f7373 	ldrbvs	r7, [pc, #-883]	; 279 <_Minimum_Stack_Size+0x179>
     5e8:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     5ec:	6975006e 	ldmdbvs	r5!, {r1, r2, r3, r5, r6}^
     5f0:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
     5f4:	7400745f 	strvc	r7, [r0], #-1119	; 0xfffffba1
     5f8:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     5fc:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
     600:	00657a69 	rsbeq	r7, r5, r9, ror #20
     604:	314d4954 	cmpcc	sp, r4, asr r9
     608:	5f50555f 	svcpl	0x0050555f
     60c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     610:	49545300 	ldmdbmi	r4, {r8, r9, ip, lr}^
     614:	54520052 	ldrbpl	r0, [r2], #-82	; 0xffffffae
     618:	6c415f43 	mcrrvs	15, 4, r5, r1, cr3
     61c:	5f6d7261 	svcpl	0x006d7261
     620:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     624:	43545200 	cmpmi	r4, #0, 4
     628:	5152495f 	cmppl	r2, pc, asr r9
     62c:	5045006e 	subpl	r0, r5, lr, rrx
     630:	52005235 	andpl	r5, r0, #1342177283	; 0x50000003
     634:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     638:	30444556 	subcc	r4, r4, r6, asr r5
     63c:	53455200 	movtpl	r5, #20992	; 0x5200
     640:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     644:	52003144 	andpl	r3, r0, #68, 2
     648:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     64c:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
     650:	53455200 	movtpl	r5, #20992	; 0x5200
     654:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     658:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     65c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     660:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     664:	53455200 	movtpl	r5, #20992	; 0x5200
     668:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     66c:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     670:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     674:	36444556 			; <UNDEFINED> instruction: 0x36444556
     678:	53455200 	movtpl	r5, #20992	; 0x5200
     67c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     680:	52003844 	andpl	r3, r0, #68, 16	; 0x440000
     684:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     688:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     68c:	53455200 	movtpl	r5, #20992	; 0x5200
     690:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     694:	55004144 	strpl	r4, [r0, #-324]	; 0xfffffebc
     698:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     69c:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     6a0:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     6a4:	655f6273 	ldrbvs	r6, [pc, #-627]	; 439 <_Minimum_Stack_Size+0x339>
     6a8:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     6ac:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
     6b0:	614d6e6f 	cmpvs	sp, pc, ror #28
     6b4:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
     6b8:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     6bc:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     6c0:	77006e51 	smlsdvc	r0, r1, lr, r6
     6c4:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     6c8:	54006874 	strpl	r6, [r0], #-2164	; 0xfffff78c
     6cc:	5f314d49 	svcpl	0x00314d49
     6d0:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     6d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6d8:	52365045 	eorspl	r5, r6, #69	; 0x45
     6dc:	66656c00 	strbtvs	r6, [r5], -r0, lsl #24
     6e0:	58450074 	stmdapl	r5, {r2, r4, r5, r6}^
     6e4:	5f314954 	svcpl	0x00314954
     6e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6ec:	65526200 	ldrbvs	r6, [r2, #-512]	; 0xfffffe00
     6f0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
     6f4:	564e0074 			; <UNDEFINED> instruction: 0x564e0074
     6f8:	545f4349 	ldrbpl	r4, [pc], #-841	; 700 <_Minimum_Stack_Size+0x600>
     6fc:	00657079 	rsbeq	r7, r5, r9, ror r0
     700:	52544e43 	subspl	r4, r4, #1072	; 0x430
     704:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     708:	52545f31 	subspl	r5, r4, #49, 30	; 0xc4
     70c:	4f435f47 	svcmi	0x00435f47
     710:	52495f4d 	subpl	r5, r9, #308	; 0x134
     714:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     718:	5f314332 	svcpl	0x00314332
     71c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     720:	006e5152 	rsbeq	r5, lr, r2, asr r1
     724:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     728:	5f6b6369 	svcpl	0x006b6369
     72c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     730:	6e706500 	cdpvs	5, 7, cr6, cr0, cr0, {0}
     734:	72006d75 	andvc	r6, r0, #7488	; 0x1d40
     738:	69735f78 	ldmdbvs	r3!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     73c:	5400657a 	strpl	r6, [r0], #-1402	; 0xfffffa86
     740:	5f324d49 	svcpl	0x00324d49
     744:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     748:	62737500 	rsbsvs	r7, r3, #0, 10
     74c:	616c635f 	cmnvs	ip, pc, asr r3
     750:	655f7373 	ldrbvs	r7, [pc, #-883]	; 3e5 <_Minimum_Stack_Size+0x2e5>
     754:	6f5f3070 	svcvs	0x005f3070
     758:	45007475 	strmi	r7, [r0, #-1141]	; 0xfffffb8b
     75c:	00523750 	subseq	r3, r2, r0, asr r7
     760:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     764:	705f6769 	subsvc	r6, pc, r9, ror #14
     768:	5f6b6361 	svcpl	0x006b6361
     76c:	73750074 	cmnvc	r5, #116	; 0x74
     770:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     774:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     778:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     77c:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
     780:	6f6c625f 	svcvs	0x006c625f
     784:	00736b63 	rsbseq	r6, r3, r3, ror #22
     788:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     78c:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     790:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     794:	5152495f 	cmppl	r2, pc, asr r9
     798:	7355006e 	cmpvc	r5, #110	; 0x6e
     79c:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     7a0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     7a4:	5152495f 	cmppl	r2, pc, asr r9
     7a8:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     7ac:	6f6c625f 	svcvs	0x006c625f
     7b0:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     7b4:	6500657a 	strvs	r6, [r0, #-1402]	; 0xfffffa86
     7b8:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     7bc:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     7c0:	62737500 	rsbsvs	r7, r3, #0, 10
     7c4:	5f70655f 	svcpl	0x0070655f
     7c8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     7cc:	756f645f 	strbvc	r6, [pc, #-1119]!	; 375 <_Minimum_Stack_Size+0x275>
     7d0:	00656c62 	rsbeq	r6, r5, r2, ror #24
     7d4:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     7d8:	5f355f39 	svcpl	0x00355f39
     7dc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7e0:	43565300 	cmpmi	r6, #0, 6
     7e4:	5f6c6c61 	svcpl	0x006c6c61
     7e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7ec:	45434900 	strbmi	r4, [r3, #-2304]	; 0xfffff700
     7f0:	50530052 	subspl	r0, r3, r2, asr r0
     7f4:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     7f8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     7fc:	52424149 	subpl	r4, r2, #1073741842	; 0x40000012
     800:	62737500 	rsbsvs	r7, r3, #0, 10
     804:	5f78745f 	svcpl	0x0078745f
     808:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     80c:	414d4400 	cmpmi	sp, r0, lsl #8
     810:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     814:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     818:	495f356c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     81c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     820:	42415442 	submi	r5, r1, #1107296256	; 0x42000000
     824:	6500454c 	strvs	r4, [r0, #-1356]	; 0xfffffab4
     828:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     82c:	45006570 	strmi	r6, [r0, #-1392]	; 0xfffffa90
     830:	33495458 	movtcc	r5, #37976	; 0x9458
     834:	5152495f 	cmppl	r2, pc, asr r9
     838:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
     83c:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     840:	72614800 	rsbvc	r4, r1, #0, 16
     844:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
     848:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     84c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     850:	52505349 	subspl	r5, r0, #603979777	; 0x24000001
     854:	62737500 	rsbsvs	r7, r3, #0, 10
     858:	5f78725f 	svcpl	0x0078725f
     85c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     860:	78720074 	ldmdavc	r2!, {r2, r4, r5, r6}^
     864:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     868:	44410074 	strbmi	r0, [r1], #-116	; 0xffffff8c
     86c:	325f3143 	subscc	r3, pc, #-1073741808	; 0xc0000010
     870:	5152495f 	cmppl	r2, pc, asr r9
     874:	4552006e 	ldrbmi	r0, [r2, #-110]	; 0xffffff92
     878:	56524553 			; <UNDEFINED> instruction: 0x56524553
     87c:	00374445 	eorseq	r4, r7, r5, asr #8
     880:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     884:	495f3354 	ldmdbmi	pc, {r2, r4, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     888:	006e5152 	rsbeq	r5, lr, r2, asr r1
     88c:	504d4154 	subpl	r4, sp, r4, asr r1
     890:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     894:	006e5152 	rsbeq	r5, lr, r2, asr r1
     898:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     89c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     8a0:	53550043 	cmppl	r5, #67	; 0x43
     8a4:	49485f42 	stmdbmi	r8, {r1, r6, r8, r9, sl, fp, ip, lr}^
     8a8:	73654444 	cmnvc	r5, #68, 8	; 0x44000000
     8ac:	70697263 	rsbvc	r7, r9, r3, ror #4
     8b0:	00726f74 	rsbseq	r6, r2, r4, ror pc
     8b4:	31525153 	cmpcc	r2, r3, asr r1
     8b8:	52515300 	subspl	r5, r1, #0, 6
     8bc:	51530032 	cmppl	r3, r2, lsr r0
     8c0:	61003352 	tstvs	r0, r2, asr r3
     8c4:	745f6364 	ldrbvc	r6, [pc], #-868	; 8cc <_Minimum_Stack_Size+0x7cc>
     8c8:	48656d69 	stmdami	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
     8cc:	64696800 	strbtvs	r6, [r9], #-2048	; 0xfffff800
     8d0:	6c6f705f 	stclvs	0, cr7, [pc], #-380	; 75c <_Minimum_Stack_Size+0x65c>
     8d4:	6f5f006c 	svcvs	0x005f006c
     8d8:	78655f6e 	stmdavc	r5!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     8dc:	615f7469 	cmpvs	pc, r9, ror #8
     8e0:	00736772 	rsbseq	r6, r3, r2, ror r7
     8e4:	7463775f 	strbtvc	r7, [r3], #-1887	; 0xfffff8a1
     8e8:	5f626d6f 	svcpl	0x00626d6f
     8ec:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     8f0:	69680065 	stmdbvs	r8!, {r0, r2, r5, r6}^
     8f4:	61645f64 	cmnvs	r4, r4, ror #30
     8f8:	55006174 	strpl	r6, [r0, #-372]	; 0xfffffe8c
     8fc:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     900:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     904:	54545f67 	ldrbpl	r5, [r4], #-3943	; 0xfffff099
     908:	725f0059 	subsvc	r0, pc, #89	; 0x59
     90c:	5f003834 	svcpl	0x00003834
     910:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     914:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     918:	5f006675 	svcpl	0x00006675
     91c:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
     920:	00657a69 	rsbeq	r7, r5, r9, ror #20
     924:	616c665f 	cmnvs	ip, pc, asr r6
     928:	5f007367 	svcpl	0x00007367
     92c:	6c616d6e 	stclvs	13, cr6, [r1], #-440	; 0xfffffe48
     930:	00636f6c 	rsbeq	r6, r3, ip, ror #30
     934:	5f627375 	svcpl	0x00627375
     938:	775f7065 	ldrbvc	r7, [pc, -r5, rrx]
     93c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     940:	756f645f 	strbvc	r6, [pc, #-1119]!	; 4e9 <_Minimum_Stack_Size+0x3e9>
     944:	00656c62 	rsbeq	r6, r5, r2, ror #24
     948:	2f637273 	svccs	0x00637273
     94c:	5f627375 	svcpl	0x00627375
     950:	73616c63 	cmnvc	r1, #25344	; 0x6300
     954:	00632e73 	rsbeq	r2, r3, r3, ror lr
     958:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
     95c:	45525f4b 	ldrbmi	r5, [r2, #-3915]	; 0xfffff0b5
     960:	53525543 	cmppl	r2, #281018368	; 0x10c00000
     964:	5f455649 	svcpl	0x00455649
     968:	755f0054 	ldrbvc	r0, [pc, #-84]	; 91c <_Minimum_Stack_Size+0x81c>
     96c:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
     970:	69666963 	stmdbvs	r6!, {r0, r1, r5, r6, r8, fp, sp, lr}^
     974:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
     978:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     97c:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
     980:	5f006f66 	svcpl	0x00006f66
     984:	6c72626d 	lfmvs	f6, 2, [r2], #-436	; 0xfffffe4c
     988:	735f6e65 	cmpvc	pc, #1616	; 0x650
     98c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     990:	656e5f00 	strbvs	r5, [lr, #-3840]!	; 0xfffff100
     994:	735f0077 	cmpvc	pc, #119	; 0x77
     998:	756f6474 	strbvc	r6, [pc, #-1140]!	; 52c <_Minimum_Stack_Size+0x42c>
     99c:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     9a0:	5f736f70 	svcpl	0x00736f70
     9a4:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     9a8:	5f00736e 	svcpl	0x0000736e
     9ac:	6b6f6f63 	blvs	1bdc740 <__Stack_Size+0x1bdb740>
     9b0:	41006569 	tstmi	r0, r9, ror #10
     9b4:	5f314344 	svcpl	0x00314344
     9b8:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     9bc:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     9c0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     9c4:	626d5f00 	rsbvs	r5, sp, #0, 30
     9c8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     9cc:	5f5f0065 	svcpl	0x005f0065
     9d0:	775f6d74 			; <UNDEFINED> instruction: 0x775f6d74
     9d4:	00796164 	rsbseq	r6, r9, r4, ror #2
     9d8:	5f4d4954 	svcpl	0x004d4954
     9dc:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     9e0:	00666544 	rsbeq	r6, r6, r4, asr #10
     9e4:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     9e8:	00746c75 	rsbseq	r6, r4, r5, ror ip
     9ec:	49465f5f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     9f0:	5f00454c 	svcpl	0x0000454c
     9f4:	5f6d745f 	svcpl	0x006d745f
     9f8:	72756f68 	rsbsvc	r6, r5, #104, 30	; 0x1a0
     9fc:	62737500 	rsbsvs	r7, r3, #0, 10
     a00:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
     a04:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     a08:	44420074 	strbmi	r0, [r2], #-116	; 0xffffff8c
     a0c:	5f005254 	svcpl	0x00005254
     a10:	756f635f 	strbvc	r6, [pc, #-863]!	; 6b9 <_Minimum_Stack_Size+0x5b9>
     a14:	5f00746e 	svcpl	0x0000746e
     a18:	5f6d745f 	svcpl	0x006d745f
     a1c:	006e696d 	rsbeq	r6, lr, sp, ror #18
     a20:	31524343 	cmpcc	r2, r3, asr #6
     a24:	52434300 	subpl	r4, r3, #0, 6
     a28:	43430032 	movtmi	r0, #12338	; 0x3032
     a2c:	43003352 	movwmi	r3, #850	; 0x352
     a30:	31524d43 	cmpcc	r2, r3, asr #26
     a34:	4d434300 	stclmi	3, cr4, [r3, #-0]
     a38:	5f003252 	svcpl	0x00003252
     a3c:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
     a40:	68003834 	stmdavs	r0, {r2, r4, r5, fp, ip, sp}
     a44:	745f6469 	ldrbvc	r6, [pc], #-1129	; a4c <_Minimum_Stack_Size+0x94c>
     a48:	6f656d69 	svcvs	0x00656d69
     a4c:	5f007475 	svcpl	0x00007475
     a50:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     a54:	6b5f746c 	blvs	17ddc0c <__Stack_Size+0x17dcc0c>
     a58:	42535500 	subsmi	r5, r3, #0, 10
     a5c:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     a60:	44676966 	strbtmi	r6, [r7], #-2406	; 0xfffff69a
     a64:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     a68:	6f747069 	svcvs	0x00747069
     a6c:	615f0072 	cmpvs	pc, r2, ror r0	; <UNPREDICTABLE>
     a70:	69746373 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     a74:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
     a78:	5f006675 	svcpl	0x00006675
     a7c:	4946735f 	stmdbmi	r6, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
     a80:	5f00454c 	svcpl	0x0000454c
     a84:	00736477 	rsbseq	r6, r3, r7, ror r4
     a88:	5f63696d 	svcpl	0x0063696d
     a8c:	6c6c6f70 	stclvs	15, cr6, [ip], #-448	; 0xfffffe40
     a90:	5f685f00 	svcpl	0x00685f00
     a94:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
     a98:	735f006f 	cmpvc	pc, #111	; 0x6f
     a9c:	006b6565 	rsbeq	r6, fp, r5, ror #10
     aa0:	7562755f 	strbvc	r7, [r2, #-1375]!	; 0xfffffaa1
     aa4:	655f0066 	ldrbvs	r0, [pc, #-102]	; a46 <_Minimum_Stack_Size+0x946>
     aa8:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
     aac:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     ab0:	73657200 	cmnvc	r5, #0, 4
     ab4:	61746164 	cmnvs	r4, r4, ror #2
     ab8:	745f5f00 	ldrbvc	r5, [pc], #-3840	; ac0 <_Minimum_Stack_Size+0x9c0>
     abc:	65735f6d 	ldrbvs	r5, [r3, #-3949]!	; 0xfffff093
     ac0:	5f5f0063 	svcpl	0x005f0063
     ac4:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     ac8:	00796164 	rsbseq	r6, r9, r4, ror #2
     acc:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
     ad0:	63646100 	cmnvs	r4, #0, 2
     ad4:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
     ad8:	65746c69 	ldrbvs	r6, [r4, #-3177]!	; 0xfffff397
     adc:	6d5f0072 	ldclvs	0, cr0, [pc, #-456]	; 91c <_Minimum_Stack_Size+0x81c>
     ae0:	74727362 	ldrbtvc	r7, [r2], #-866	; 0xfffffc9e
     ae4:	7363776f 	cmnvc	r3, #29097984	; 0x1bc0000
     ae8:	6174735f 	cmnvs	r4, pc, asr r3
     aec:	44006574 	strmi	r6, [r0], #-1396	; 0xfffffa8c
     af0:	00524549 	subseq	r4, r2, r9, asr #10
     af4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     af8:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     afc:	655f7265 	ldrbvs	r7, [pc, #-613]	; 89f <_Minimum_Stack_Size+0x79f>
     b00:	6f5f3070 	svcvs	0x005f3070
     b04:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
     b08:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
     b0c:	655f676f 	ldrbvs	r6, [pc, #-1903]	; 3a5 <_Minimum_Stack_Size+0x2a5>
     b10:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     b14:	5f5f006e 	svcpl	0x005f006e
     b18:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
     b1c:	705f0065 	subsvc	r0, pc, r5, rrx
     b20:	68007335 	stmdavs	r0, {r0, r2, r4, r5, r8, r9, ip, sp, lr}
     b24:	695f6469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
     b28:	0074696e 	rsbseq	r6, r4, lr, ror #18
     b2c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     b30:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     b34:	655f7265 	ldrbvs	r7, [pc, #-613]	; 8d7 <_Minimum_Stack_Size+0x7d7>
     b38:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     b3c:	6d5f006e 	ldclvs	0, cr0, [pc, #-440]	; 98c <_Minimum_Stack_Size+0x88c>
     b40:	6e656c62 	cdpvs	12, 6, cr6, cr5, cr2, {3}
     b44:	6174735f 	cmnvs	r4, pc, asr r3
     b48:	43006574 	movwmi	r6, #1396	; 0x574
     b4c:	00524543 	subseq	r4, r2, r3, asr #10
     b50:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     b54:	61646d5f 	cmnvs	r4, pc, asr sp
     b58:	735f0079 	cmpvc	pc, #121	; 0x79
     b5c:	665f6769 	ldrbvs	r6, [pc], -r9, ror #14
     b60:	00636e75 	rsbeq	r6, r3, r5, ror lr
     b64:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
     b68:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     b6c:	6174735f 	cmnvs	r4, pc, asr r3
     b70:	5f006574 	svcpl	0x00006574
     b74:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
     b78:	00307469 	eorseq	r7, r0, r9, ror #8
     b7c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     b80:	5f6b6369 	svcpl	0x006b6369
     b84:	6d00736d 	stcvs	3, cr7, [r0, #-436]	; 0xfffffe4c
     b88:	69666469 	stmdbvs	r6!, {r0, r3, r5, r6, sl, sp, lr}^
     b8c:	7265746c 	rsbvc	r7, r5, #108, 8	; 0x6c000000
     b90:	6c665f00 	stclvs	15, cr5, [r6], #-0
     b94:	5f6b636f 	svcpl	0x006b636f
     b98:	5f5f0074 	svcpl	0x005f0074
     b9c:	00686377 	rsbeq	r6, r8, r7, ror r3
     ba0:	626f695f 	rsbvs	r6, pc, #1556480	; 0x17c000
     ba4:	43430073 	movtmi	r0, #12403	; 0x3073
     ba8:	5f003452 	svcpl	0x00003452
     bac:	736f6c63 	cmnvc	pc, #25344	; 0x6300
     bb0:	5f5f0065 	svcpl	0x005f0065
     bb4:	64696473 	strbtvs	r6, [r9], #-1139	; 0xfffffb8d
     bb8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     bbc:	434d5300 	movtmi	r5, #54016	; 0xd300
     bc0:	696d0052 	stmdbvs	sp!, {r1, r4, r6}^
     bc4:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     bc8:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
     bcc:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     bd0:	735f006b 	cmpvc	pc, #107	; 0x6b
     bd4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     bd8:	61675f00 	cmnvs	r7, r0, lsl #30
     bdc:	5f616d6d 	svcpl	0x00616d6d
     be0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     be4:	006d6167 	rsbeq	r6, sp, r7, ror #2
     be8:	5f434441 	svcpl	0x00434441
     bec:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     bf0:	00666544 	rsbeq	r6, r6, r4, asr #10
     bf4:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
     bf8:	61006674 	tstvs	r0, r4, ror r6
     bfc:	625f6364 	subsvs	r6, pc, #100, 6	; 0x90000001
     c00:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     c04:	53550072 	cmppl	r5, #114	; 0x72
     c08:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     c0c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     c10:	4f52505f 	svcmi	0x0052505f
     c14:	5f005247 	svcpl	0x00005247
     c18:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     c1c:	72665f00 	rsbvc	r5, r6, #0, 30
     c20:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
     c24:	5f007473 	svcpl	0x00007473
     c28:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
     c2c:	555f5f00 	ldrbpl	r5, [pc, #-3840]	; fffffd34 <BootRAM+0xef704d5>
     c30:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
     c34:	62737500 	rsbsvs	r7, r3, #0, 10
     c38:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
     c3c:	6c6f705f 	stclvs	0, cr7, [pc], #-380	; ac8 <_Minimum_Stack_Size+0x9c8>
     c40:	775f006c 	ldrbvc	r0, [pc, -ip, rrx]
     c44:	6f747263 	svcvs	0x00747263
     c48:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
     c4c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c50:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
     c54:	7000656c 	andvc	r6, r0, ip, ror #10
     c58:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     c5c:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
     c60:	6f705f72 	svcvs	0x00705f72
     c64:	55006c6c 	strpl	r6, [r0, #-3180]	; 0xfffff394
     c68:	535f4253 	cmppl	pc, #805306373	; 0x30000005
     c6c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     c70:	4f4c5f67 	svcmi	0x004c5f67
     c74:	5f5f0047 	svcpl	0x005f0047
     c78:	61656c63 	cmnvs	r5, r3, ror #24
     c7c:	0070756e 	rsbseq	r7, r0, lr, ror #10
     c80:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
     c84:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c88:	6d00745f 	cfstrsvs	mvf7, [r0, #-380]	; 0xfffffe84
     c8c:	61766469 	cmnvs	r6, r9, ror #8
     c90:	6f6c006c 	svcvs	0x006c006c
     c94:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
     c98:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
     c9c:	5f5f0065 	svcpl	0x005f0065
     ca0:	695f6d74 	ldmdbvs	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     ca4:	74736473 	ldrbtvc	r6, [r3], #-1139	; 0xfffffb8d
     ca8:	63775f00 	cmnvs	r7, #0, 30
     cac:	6f747273 	svcvs	0x00747273
     cb0:	5f73626d 	svcpl	0x0073626d
     cb4:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     cb8:	534a0065 	movtpl	r0, #41061	; 0xa065
     cbc:	5f005251 	svcpl	0x00005251
     cc0:	00646e69 	rsbeq	r6, r4, r9, ror #28
     cc4:	5f627375 	svcpl	0x00627375
     cc8:	5f676f6c 	svcpl	0x00676f6c
     ccc:	5f307065 	svcpl	0x00307065
     cd0:	0074756f 	rsbseq	r7, r4, pc, ror #10
     cd4:	52504d53 	subspl	r4, r0, #5312	; 0x14c0
     cd8:	4d530031 	ldclmi	0, cr0, [r3, #-196]	; 0xffffff3c
     cdc:	00325250 	eorseq	r5, r2, r0, asr r2
     ce0:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     ce4:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
     ce8:	63696d00 	cmnvs	r9, #0, 26
     cec:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     cf0:	5f5f0074 	svcpl	0x005f0074
     cf4:	66756273 			; <UNDEFINED> instruction: 0x66756273
     cf8:	63646100 	cmnvs	r4, #0, 2
     cfc:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     d00:	5f004c65 	svcpl	0x00004c65
     d04:	5f6d745f 	svcpl	0x006d745f
     d08:	72616579 	rsbvc	r6, r1, #507510784	; 0x1e400000
     d0c:	63696d00 	cmnvs	r9, #0, 26
     d10:	3070655f 	rsbscc	r6, r0, pc, asr r5
     d14:	006e695f 	rsbeq	r6, lr, pc, asr r9
     d18:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
     d1c:	00746978 	rsbseq	r6, r4, r8, ror r9
     d20:	3152444a 	cmpcc	r2, sl, asr #8
     d24:	52444a00 	subpl	r4, r4, #0, 20
     d28:	444a0032 	strbmi	r0, [sl], #-50	; 0xffffffce
     d2c:	4a003352 	bmi	da7c <__Stack_Size+0xca7c>
     d30:	00345244 	eorseq	r5, r4, r4, asr #4
     d34:	6769425f 			; <UNDEFINED> instruction: 0x6769425f
     d38:	00746e69 	rsbseq	r6, r4, r9, ror #28
     d3c:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
     d40:	74536200 	ldrbvc	r6, [r3], #-512	; 0xfffffe00
     d44:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     d48:	63646100 	cmnvs	r4, #0, 2
     d4c:	6572765f 	ldrbvs	r7, [r2, #-1631]!	; 0xfffff9a1
     d50:	75630066 	strbvc	r0, [r3, #-102]!	; 0xffffff9a
     d54:	6c617672 	stclvs	6, cr7, [r1], #-456	; 0xfffffe38
     d58:	735f5f00 	cmpvc	pc, #0, 30
     d5c:	735f0066 	cmpvc	pc, #102	; 0x66
     d60:	006e6769 	rsbeq	r6, lr, r9, ror #14
     d64:	63775f5f 	cmnvs	r7, #380	; 0x17c
     d68:	5f006268 	svcpl	0x00006268
     d6c:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
     d70:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     d74:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
     d78:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
     d7c:	6f5f0072 	svcvs	0x005f0072
     d80:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
     d84:	64610074 	strbtvs	r0, [r1], #-116	; 0xffffff8c
     d88:	61765f63 	cmnvs	r6, r3, ror #30
     d8c:	5355006c 	cmppl	r5, #108	; 0x6c
     d90:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     d94:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     d98:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
     d9c:	65446c61 	strbvs	r6, [r4, #-3169]	; 0xfffff39f
     da0:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     da4:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     da8:	6f6c5f00 	svcvs	0x006c5f00
     dac:	746c6163 	strbtvc	r6, [ip], #-355	; 0xfffffe9d
     db0:	5f656d69 	svcpl	0x00656d69
     db4:	00667562 	rsbeq	r7, r6, r2, ror #10
     db8:	5f425355 	svcpl	0x00425355
     dbc:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     dc0:	614c676e 	cmpvs	ip, lr, ror #14
     dc4:	6544676e 	strbvs	r6, [r4, #-1902]	; 0xfffff892
     dc8:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     dcc:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     dd0:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     dd4:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
     dd8:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     ddc:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
     de0:	616d5f00 	cmnvs	sp, r0, lsl #30
     de4:	73647778 	cmnvc	r4, #120, 14	; 0x1e00000
     de8:	366c5f00 	strbtcc	r5, [ip], -r0, lsl #30
     dec:	625f6134 	subsvs	r6, pc, #52, 2
     df0:	5f006675 	svcpl	0x00006675
     df4:	736b6c62 	cmnvc	fp, #25088	; 0x6200
     df8:	00657a69 	rsbeq	r7, r5, r9, ror #20
     dfc:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     e00:	6f6c5f00 	svcvs	0x006c5f00
     e04:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
     e08:	445f4253 	ldrbmi	r4, [pc], #-595	; e10 <_Minimum_Stack_Size+0xd10>
     e0c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     e10:	61755165 	cmnvs	r5, r5, ror #2
     e14:	6966696c 	stmdbvs	r6!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     e18:	65447265 	strbvs	r7, [r4, #-613]	; 0xfffffd9b
     e1c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     e20:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     e24:	64696800 	strbtvs	r6, [r9], #-2048	; 0xfffff800
     e28:	3070655f 	rsbscc	r6, r0, pc, asr r5
     e2c:	006e695f 	rsbeq	r6, lr, pc, asr r9
     e30:	6f696e5f 	svcvs	0x00696e5f
     e34:	5f007362 	svcpl	0x00007362
     e38:	5f6f7364 	svcpl	0x006f7364
     e3c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     e40:	6100656c 	tstvs	r0, ip, ror #10
     e44:	695f6364 	ldmdbvs	pc, {r2, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
     e48:	5f007864 	svcpl	0x00007864
     e4c:	62747663 	rsbsvs	r7, r4, #103809024	; 0x6300000
     e50:	5f006675 	svcpl	0x00006675
     e54:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
     e58:	5f657461 	svcpl	0x00657461
     e5c:	00727265 	rsbseq	r7, r2, r5, ror #4
     e60:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     e64:	736d5f65 	cmnvc	sp, #404	; 0x194
     e68:	63696d00 	cmnvs	r9, #0, 26
     e6c:	3070655f 	rsbscc	r6, r0, pc, asr r5
     e70:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     e74:	64696800 	strbtvs	r6, [r9], #-2048	; 0xfffff800
     e78:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
     e7c:	00735f61 	rsbseq	r5, r3, r1, ror #30
     e80:	5f646968 	svcpl	0x00646968
     e84:	61746164 	cmnvs	r4, r4, ror #2
     e88:	5500745f 	strpl	r7, [r0, #-1119]	; 0xfffffba1
     e8c:	445f4253 	ldrbmi	r4, [pc], #-595	; e94 <_Minimum_Stack_Size+0xd94>
     e90:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     e94:	73654465 	cmnvc	r5, #1694498816	; 0x65000000
     e98:	70697263 	rsbvc	r7, r9, r3, ror #4
     e9c:	00726f74 	rsbseq	r6, r2, r4, ror pc
     ea0:	746e665f 	strbtvc	r6, [lr], #-1631	; 0xfffff9a1
     ea4:	73657079 	cmnvc	r5, #121	; 0x79
     ea8:	64615f00 	strbtvs	r5, [r1], #-3840	; 0xfffff100
     eac:	44620064 	strbtmi	r0, [r2], #-100	; 0xffffff9c
     eb0:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     eb4:	6f747069 	svcvs	0x00747069
     eb8:	70795472 	rsbsvc	r5, r9, r2, ror r4
     ebc:	53550065 	cmppl	r5, #101	; 0x65
     ec0:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     ec4:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     ec8:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
     ecc:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
     ed0:	6e697275 	mcrvs	2, 3, r7, cr9, cr5, {3}
     ed4:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
     ed8:	70697263 	rsbvc	r7, r9, r3, ror #4
     edc:	00726f74 	rsbseq	r6, r2, r4, ror pc
     ee0:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
     ee4:	5f5f0065 	svcpl	0x005f0065
     ee8:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
     eec:	735f0065 	cmpvc	pc, #101	; 0x65
     ef0:	6f747274 	svcvs	0x00747274
     ef4:	616c5f6b 	cmnvs	ip, fp, ror #30
     ef8:	5f007473 	svcpl	0x00007473
     efc:	6f74626d 	svcvs	0x0074626d
     f00:	735f6377 	cmpvc	pc, #-603979775	; 0xdc000001
     f04:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     f08:	65766f00 	ldrbvs	r6, [r6, #-3840]!	; 0xfffff100
     f0c:	6d617372 	stclvs	3, cr7, [r1, #-456]!	; 0xfffffe38
     f10:	635f6c70 	cmpvs	pc, #112, 24	; 0x7000
     f14:	5f00746e 	svcpl	0x0000746e
     f18:	61636f6c 	cmnvs	r3, ip, ror #30
     f1c:	5f00656c 	svcpl	0x0000656c
     f20:	72616e66 	rsbvc	r6, r1, #1632	; 0x660
     f24:	70007367 	andvc	r7, r0, r7, ror #6
     f28:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     f2c:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
     f30:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     f34:	5f007469 	svcpl	0x00007469
     f38:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
     f3c:	53550074 	cmppl	r5, #116	; 0x74
     f40:	74535f42 	ldrbvc	r5, [r3], #-3906	; 0xfffff0be
     f44:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     f48:	646f7250 	strbtvs	r7, [pc], #-592	; f50 <_Minimum_Stack_Size+0xe50>
     f4c:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     f50:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     f54:	6d00726f 	sfmvs	f7, 4, [r0, #-444]	; 0xfffffe44
     f58:	735f6369 	cmpvc	pc, #-1543503871	; 0xa4000001
     f5c:	4a00666f 	bmi	1a920 <__Stack_Size+0x19920>
     f60:	3152464f 	cmpcc	r2, pc, asr #12
     f64:	464f4a00 	strbmi	r4, [pc], -r0, lsl #20
     f68:	4a003252 	bmi	d8b8 <__Stack_Size+0xc8b8>
     f6c:	3352464f 	cmpcc	r2, #82837504	; 0x4f00000
     f70:	464f4a00 	strbmi	r4, [pc], -r0, lsl #20
     f74:	68003452 	stmdavs	r0, {r1, r4, r6, sl, ip, sp}
     f78:	655f6469 	ldrbvs	r6, [pc, #-1129]	; b17 <_Minimum_Stack_Size+0xa17>
     f7c:	6f5f3070 	svcvs	0x005f3070
     f80:	5f007475 	svcpl	0x00007475
     f84:	5f66666f 	svcpl	0x0066666f
     f88:	6e5f0074 	mrcvs	0, 2, r0, cr15, cr4, {3}
     f8c:	00667562 	rsbeq	r7, r6, r2, ror #10
     f90:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
     f94:	5f646573 	svcpl	0x00646573
     f98:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
     f9c:	61766300 	cmnvs	r6, r0, lsl #6
     fa0:	4c62006c 	stclmi	0, cr0, [r2], #-432	; 0xfffffe50
     fa4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     fa8:	665f0068 	ldrbvs	r0, [pc], -r8, rrx
     fac:	7367616c 	cmnvc	r7, #108, 2
     fb0:	695f0032 	ldmdbvs	pc, {r1, r4, r5}^	; <UNPREDICTABLE>
     fb4:	78635f73 	stmdavc	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     fb8:	735f0061 	cmpvc	pc, #97	; 0x61
     fbc:	00646565 	rsbeq	r6, r4, r5, ror #10
     fc0:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     fc4:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     fc8:	5f007478 	svcpl	0x00007478
     fcc:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
     fd0:	5f656c61 	svcpl	0x00656c61
     fd4:	64610074 	strbtvs	r0, [r1], #-116	; 0xffffff8c
     fd8:	756f5f63 	strbvc	r5, [pc, #-3939]!	; 7d <_Minimum_Stack_Size-0x83>
     fdc:	6c696674 	stclvs	6, cr6, [r9], #-464	; 0xfffffe30
     fe0:	00726574 	rsbseq	r6, r2, r4, ror r5
     fe4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     fe8:	00727265 	rsbseq	r7, r2, r5, ror #4
     fec:	746e6977 	strbtvc	r6, [lr], #-2423	; 0xfffff689
     ff0:	7300745f 	movwvc	r7, #1119	; 0x45f
     ff4:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
     ff8:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     ffc:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
    1000:	52544300 	subspl	r4, r4, #0, 6
    1004:	7953004c 	ldmdbvc	r3, {r2, r3, r6}^
    1008:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    100c:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1010:	43006570 	movwmi	r6, #1392	; 0x570
    1014:	42494c41 	submi	r4, r9, #16640	; 0x4100
    1018:	656d2f00 	strbvs	r2, [sp, #-3840]!	; 0xfffff100
    101c:	2f616964 	svccs	0x00616964
    1020:	2f747865 	svccs	0x00747865
    1024:	2f766564 	svccs	0x00766564
    1028:	2f626370 	svccs	0x00626370
    102c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1030:	6f72705f 	svcvs	0x0072705f
    1034:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1038:	2f72656d 	svccs	0x0072656d
    103c:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
    1040:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
    1044:	5f31465f 	svcpl	0x0031465f
    1048:	4f4c0032 	svcmi	0x004c0032
    104c:	53004441 	movwpl	r4, #1089	; 0x441
    1050:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    1054:	485f6b63 	ldmdami	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    1058:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    105c:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
    1060:	635f7974 	cmpvs	pc, #116, 18	; 0x1d0000
    1064:	62006766 	andvs	r6, r0, #26738688	; 0x1980000
    1068:	72647561 	rsbvc	r7, r4, #406847488	; 0x18400000
    106c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1070:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1074:	72775f31 	rsbsvc	r5, r7, #49, 30	; 0xc4
    1078:	00657469 	rsbeq	r7, r5, r9, ror #8
    107c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1080:	5f74756f 	svcpl	0x0074756f
    1084:	6300736d 	movwvs	r7, #877	; 0x36d
    1088:	6c5f6364 	mrrcvs	3, 6, r6, pc, cr4	; <UNPREDICTABLE>
    108c:	63656e69 	cmnvs	r5, #1680	; 0x690
    1090:	6e69646f 	cdpvs	4, 6, cr6, cr9, cr15, {3}
    1094:	61750067 	cmnvs	r5, r7, rrx
    1098:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
    109c:	006c7274 	rsbeq	r7, ip, r4, ror r2
    10a0:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    10a4:	78725f31 	ldmdavc	r2!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
    10a8:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    10ac:	616c6674 	smcvs	50788	; 0xc664
    10b0:	54470067 	strbpl	r0, [r7], #-103	; 0xffffff99
    10b4:	75005250 	strvc	r5, [r0, #-592]	; 0xfffffdb0
    10b8:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
    10bc:	675f676f 	ldrbvs	r6, [pc, -pc, ror #14]
    10c0:	00626172 	rsbeq	r6, r2, r2, ror r1
    10c4:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    10c8:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    10cc:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    10d0:	55006574 	strpl	r6, [r0, #-1396]	; 0xfffffa8c
    10d4:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
    10d8:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    10dc:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    10e0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    10e4:	41535500 	cmpmi	r3, r0, lsl #10
    10e8:	545f5452 	ldrbpl	r5, [pc], #-1106	; 10f0 <__Stack_Size+0xf0>
    10ec:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    10f0:	63006665 	movwvs	r6, #1637	; 0x665
    10f4:	6f5f6364 	svcvs	0x005f6364
    10f8:	55007475 	strpl	r7, [r0, #-1141]	; 0xfffffb8b
    10fc:	31545241 	cmpcc	r4, r1, asr #4
    1100:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
    1104:	41550073 	cmpmi	r5, r3, ror r0
    1108:	5f315452 	svcpl	0x00315452
    110c:	73746567 	cmnvc	r4, #432013312	; 0x19c00000
    1110:	72617500 	rsbvc	r7, r1, #0, 10
    1114:	66635f74 	uqsub16vs	r5, r3, r4
    1118:	41550067 	cmpmi	r5, r7, rrx
    111c:	5f315452 	svcpl	0x00315452
    1120:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1124:	72617000 	rsbvc	r7, r1, #0
    1128:	00797469 	rsbseq	r7, r9, r9, ror #8
    112c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1130:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    1134:	7a69735f 	bvc	1a5deb8 <__Stack_Size+0x1a5ceb8>
    1138:	74740065 	ldrbtvc	r0, [r4], #-101	; 0xffffff9b
    113c:	646f6d79 	strbtvs	r6, [pc], #-3449	; 1144 <__Stack_Size+0x144>
    1140:	72730065 	rsbsvc	r0, r3, #101	; 0x65
    1144:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
    1148:	6172676f 	cmnvs	r2, pc, ror #14
    114c:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
    1150:	7700632e 	strvc	r6, [r0, -lr, lsr #6]
    1154:	7364726f 	cmnvc	r4, #-268435450	; 0xf0000006
    1158:	00657a69 	rsbeq	r7, r5, r9, ror #20
    115c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1160:	78745f31 	ldmdavc	r4!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
    1164:	72617500 	rsbvc	r7, r1, #0, 10
    1168:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
    116c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1170:	72617500 	rsbvc	r7, r1, #0, 10
    1174:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
    1178:	65725f66 	ldrbvs	r5, [r2, #-3942]!	; 0xfffff09a
    117c:	70006461 	andvc	r6, r0, r1, ror #8
    1180:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1184:	6766635f 			; <UNDEFINED> instruction: 0x6766635f
    1188:	6f747300 	svcvs	0x00747300
    118c:	74696270 	strbtvc	r6, [r9], #-624	; 0xfffffd90
    1190:	6f6c0073 	svcvs	0x006c0073
    1194:	69645f67 	stmdbvs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1198:	69660072 	stmdbvs	r6!, {r1, r4, r5, r6}^
    119c:	775f6f66 	ldrbvc	r6, [pc, -r6, ror #30]
    11a0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    11a4:	676f6c00 	strbvs	r6, [pc, -r0, lsl #24]!
    11a8:	6766635f 			; <UNDEFINED> instruction: 0x6766635f
    11ac:	72696400 	rsbvc	r6, r9, #0, 8
    11b0:	0078745f 	rsbseq	r7, r8, pc, asr r4
    11b4:	6f666966 	svcvs	0x00666966
    11b8:	63727300 	cmnvs	r2, #0, 6
    11bc:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
    11c0:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    11c4:	6600632e 	strvs	r6, [r0], -lr, lsr #6
    11c8:	5f6f6669 	svcpl	0x006f6669
    11cc:	61746164 	cmnvs	r4, r4, ror #2
    11d0:	7a69735f 	bvc	1a5df54 <__Stack_Size+0x1a5cf54>
    11d4:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
    11d8:	72705f72 	rsbsvc	r5, r0, #456	; 0x1c8
    11dc:	66007665 	strvs	r7, [r0], -r5, ror #12
    11e0:	5f6f6669 	svcpl	0x006f6669
    11e4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
       4:	0800157e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, ip}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	0800157e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, ip}
      10:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      24:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
      28:	080015a4 	stmdaeq	r0, {r2, r5, r7, r8, sl, ip}
      2c:	a4520001 	ldrbge	r0, [r2], #-1
      30:	ae080015 	mcrge	0, 0, r0, cr8, cr5, {0}
      34:	02080015 	andeq	r0, r8, #21
      38:	00007300 	andeq	r7, r0, r0, lsl #6
	...
      44:	a4000000 	strge	r0, [r0], #-0
      48:	b0080015 	andlt	r0, r8, r5, lsl r0
      4c:	01080015 	tsteq	r8, r5, lsl r0
      50:	15b05200 	ldrne	r5, [r0, #512]!	; 0x200
      54:	15ba0800 	ldrne	r0, [sl, #2048]!	; 0x800
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	00000073 	andeq	r0, r0, r3, ror r0
	...
      68:	15b00000 	ldrne	r0, [r0, #0]!
      6c:	15bc0800 	ldrne	r0, [ip, #2048]!	; 0x800
      70:	00010800 	andeq	r0, r1, r0, lsl #16
      74:	0015bc52 	andseq	fp, r5, r2, asr ip
      78:	0015c608 	andseq	ip, r5, r8, lsl #12
      7c:	73000208 	movwvc	r0, #520	; 0x208
	...
      8c:	0015bc00 	andseq	fp, r5, r0, lsl #24
      90:	0015c808 	andseq	ip, r5, r8, lsl #16
      94:	52000108 	andpl	r0, r0, #8, 2
      98:	080015c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip}
      9c:	080015ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, ip}
      a0:	00730002 	rsbseq	r0, r3, r2
	...
      b0:	080015c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip}
      b4:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
      b8:	d0520001 	subsle	r0, r2, r1
      bc:	da080015 	ble	200118 <__Stack_Size+0x1ff118>
      c0:	02080015 	andeq	r0, r8, #21
      c4:	00007300 	andeq	r7, r0, r0, lsl #6
	...
      d0:	d0000000 	andle	r0, r0, r0
      d4:	dc080015 	stcle	0, cr0, [r8], {21}
      d8:	01080015 	tsteq	r8, r5, lsl r0
      dc:	15dc5200 	ldrbne	r5, [ip, #512]	; 0x200
      e0:	15e60800 	strbne	r0, [r6, #2048]!	; 0x800
      e4:	00020800 	andeq	r0, r2, r0, lsl #16
      e8:	00000470 	andeq	r0, r0, r0, ror r4
	...
      f4:	15dc0000 	ldrbne	r0, [ip]
      f8:	15ea0800 	strbne	r0, [sl, #2048]!	; 0x800
      fc:	00010800 	andeq	r0, r1, r0, lsl #16
     100:	0015ea52 	andseq	lr, r5, r2, asr sl
     104:	0015ec08 	andseq	lr, r5, r8, lsl #24
     108:	71000208 	tstvc	r0, r8, lsl #4
     10c:	00000004 	andeq	r0, r0, r4
     110:	00000000 	andeq	r0, r0, r0
     114:	02020000 	andeq	r0, r2, #0
     118:	d0000000 	andle	r0, r0, r0
     11c:	d0080001 	andle	r0, r8, r1
     120:	01080001 	tsteq	r8, r1
     124:	01d05000 	bicseq	r5, r0, r0
     128:	01d40800 	bicseq	r0, r4, r0, lsl #16
     12c:	00010800 	andeq	r0, r1, r0, lsl #16
     130:	0001d450 	andeq	sp, r1, r0, asr r4
     134:	0001dc08 	andeq	sp, r1, r8, lsl #24
     138:	70000308 	andvc	r0, r0, r8, lsl #6
     13c:	00009f01 	andeq	r9, r0, r1, lsl #30
     140:	00000000 	andeq	r0, r0, r0
     144:	00010000 	andeq	r0, r1, r0
	...
     150:	0800013a 	stmdaeq	r0, {r1, r3, r4, r5, r8}
     154:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
     158:	9f300002 	svcls	0x00300002
     15c:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
     160:	08000144 	stmdaeq	r0, {r2, r6, r8}
     164:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     168:	1c0072ff 	sfmne	f7, 4, [r0], {255}	; 0xff
     16c:	0001449f 	muleq	r1, pc, r4	; <UNPREDICTABLE>
     170:	00014608 	andeq	r4, r1, r8, lsl #12
     174:	40000708 	andmi	r0, r0, r8, lsl #14
     178:	0072243c 	rsbseq	r2, r2, ip, lsr r4
     17c:	01469f1c 	cmpeq	r6, ip, lsl pc
     180:	014c0800 	cmpeq	ip, r0, lsl #16
     184:	00070800 	andeq	r0, r7, r0, lsl #16
     188:	72ffff0a 	rscsvc	pc, pc, #10, 30	; 0x28
     18c:	4c9f1c00 	ldcmi	12, cr1, [pc], {0}
     190:	cc080001 	stcgt	0, cr0, [r8], {1}
     194:	06080001 	streq	r0, [r8], -r1
     198:	ffff0c00 			; <UNDEFINED> instruction: 0xffff0c00
     19c:	009f0001 	addseq	r0, pc, r1
	...
     1a8:	01010000 	mrseq	r0, (UNDEF: 1)
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	01000000 	mrseq	r0, (UNDEF: 0)
     1b4:	00000000 	andeq	r0, r0, r0
     1b8:	4c000000 	stcmi	0, cr0, [r0], {-0}
     1bc:	50080001 	andpl	r0, r8, r1
     1c0:	07080001 	streq	r0, [r8, -r1]
     1c4:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
     1c8:	9f1c0072 	svcls	0x001c0072
     1cc:	08000150 	stmdaeq	r0, {r4, r6, r8}
     1d0:	0800015c 	stmdaeq	r0, {r2, r3, r4, r6, r8}
     1d4:	ff0c0006 			; <UNDEFINED> instruction: 0xff0c0006
     1d8:	9f0001ff 	svcls	0x000001ff
     1dc:	0800015c 	stmdaeq	r0, {r2, r3, r4, r6, r8}
     1e0:	08000160 	stmdaeq	r0, {r5, r6, r8}
     1e4:	9f300002 	svcls	0x00300002
     1e8:	08000160 	stmdaeq	r0, {r5, r6, r8}
     1ec:	0800016a 	stmdaeq	r0, {r1, r3, r5, r6, r8}
     1f0:	ff0a0007 			; <UNDEFINED> instruction: 0xff0a0007
     1f4:	1c0072ff 	sfmne	f7, 4, [r0], {255}	; 0xff
     1f8:	00016a9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
     1fc:	00016c08 	andeq	r6, r1, r8, lsl #24
     200:	40000708 	andmi	r0, r0, r8, lsl #14
     204:	0072243c 	rsbseq	r2, r2, ip, lsr r4
     208:	016c9f1c 	cmneq	ip, ip, lsl pc
     20c:	01720800 	cmneq	r2, r0, lsl #16
     210:	00070800 	andeq	r0, r7, r0, lsl #16
     214:	72ffff0a 	rscsvc	pc, pc, #10, 30	; 0x28
     218:	ac9f1c00 	ldcge	12, cr1, [pc], {0}
     21c:	b0080001 	andlt	r0, r8, r1
     220:	02080001 	andeq	r0, r8, #1
     224:	b09f3000 	addslt	r3, pc, r0
     228:	b6080001 	strlt	r0, [r8], -r1
     22c:	07080001 	streq	r0, [r8, -r1]
     230:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
     234:	9f1c0072 	svcls	0x001c0072
     238:	080001b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8}
     23c:	080001b8 	stmdaeq	r0, {r3, r4, r5, r7, r8}
     240:	3c400007 	mcrrcc	0, 0, r0, r0, cr7
     244:	1c007224 	sfmne	f7, 4, [r0], {36}	; 0x24
     248:	0001b89f 	muleq	r1, pc, r8	; <UNPREDICTABLE>
     24c:	0001cc08 	andeq	ip, r1, r8, lsl #24
     250:	0a000708 	beq	1e78 <__Stack_Size+0xe78>
     254:	0072ffff 	ldrshteq	pc, [r2], #-255	; 0xffffff01	; <UNPREDICTABLE>
     258:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
     268:	02010100 	andeq	r0, r1, #0, 2
     26c:	05030302 	streq	r0, [r3, #-770]	; 0xfffffcfe
     270:	00000005 	andeq	r0, r0, r5
     274:	00000000 	andeq	r0, r0, r0
     278:	014c0000 	mrseq	r0, (UNDEF: 76)
     27c:	01500800 	cmpeq	r0, r0, lsl #16
     280:	00020800 	andeq	r0, r2, r0, lsl #16
     284:	01520473 	cmpeq	r2, r3, ror r4
     288:	01600800 	cmneq	r0, r0, lsl #16
     28c:	00010800 	andeq	r0, r1, r0, lsl #16
     290:	00016052 	andeq	r6, r1, r2, asr r0
     294:	00017208 	andeq	r7, r1, r8, lsl #4
     298:	73000208 	movwvc	r0, #520	; 0x208
     29c:	00019604 	andeq	r9, r1, r4, lsl #12
     2a0:	00019608 	andeq	r9, r1, r8, lsl #12
     2a4:	51000108 	tstpl	r0, r8, lsl #2
     2a8:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     2ac:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     2b0:	00710009 	rsbseq	r0, r1, r9
     2b4:	8bffff11 	blhi	ffffff00 <BootRAM+0xef706a1>
     2b8:	969f1a7e 			; <UNDEFINED> instruction: 0x969f1a7e
     2bc:	96080001 	strls	r0, [r8], -r1
     2c0:	0d080001 	stceq	0, cr0, [r8, #-4]
     2c4:	11007100 	mrsne	r7, (UNDEF: 16)
     2c8:	7e8bffff 	mcrvc	15, 4, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
     2cc:	24404d1a 	strbcs	r4, [r0], #-3354	; 0xfffff2e6
     2d0:	01969f21 	orrseq	r9, r6, r1, lsr #30
     2d4:	01960800 	orrseq	r0, r6, r0, lsl #16
     2d8:	000d0800 	andeq	r0, sp, r0, lsl #16
     2dc:	8f110071 	svchi	0x00110071
     2e0:	1a7e8bfe 	bne	1fa32e0 <__Stack_Size+0x1fa22e0>
     2e4:	2124404d 			; <UNDEFINED> instruction: 0x2124404d
     2e8:	0001969f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     2ec:	00019a08 	andeq	r9, r1, r8, lsl #20
     2f0:	71000d08 	tstvc	r0, r8, lsl #26
     2f4:	8e8f1100 	rmfhie	f1, f7, f0
     2f8:	4d1a7e8b 	ldcmi	14, cr7, [sl, #-556]	; 0xfffffdd4
     2fc:	9f212440 	svcls	0x00212440
     300:	0800019a 	stmdaeq	r0, {r1, r3, r4, r7, r8}
     304:	0800019e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8}
     308:	00720007 	rsbseq	r0, r2, r7
     30c:	2124404d 			; <UNDEFINED> instruction: 0x2124404d
     310:	00019e9f 	muleq	r1, pc, lr	; <UNPREDICTABLE>
     314:	0001a608 	andeq	sl, r1, r8, lsl #12
     318:	52000108 	andpl	r0, r0, #8, 2
     31c:	080001a6 	stmdaeq	r0, {r1, r2, r5, r7, r8}
     320:	080001ac 	stmdaeq	r0, {r2, r3, r5, r7, r8}
     324:	04730002 	ldrbteq	r0, [r3], #-2
     328:	080001ac 	stmdaeq	r0, {r2, r3, r5, r7, r8}
     32c:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
     330:	0071000f 	rsbseq	r0, r1, pc
     334:	8b808f11 	blhi	fe023f80 <BootRAM+0xcf94721>
     338:	000c1a7e 	andeq	r1, ip, lr, ror sl
     33c:	21001d04 	tstcs	r0, r4, lsl #26
     340:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     344:	00000000 	andeq	r0, r0, r0
     348:	0004f400 	andeq	pc, r4, r0, lsl #8
     34c:	0004f600 	andeq	pc, r4, r0, lsl #12
     350:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     354:	0004f600 	andeq	pc, r4, r0, lsl #12
     358:	00054e00 	andeq	r4, r5, r0, lsl #28
     35c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     360:	0000000c 	andeq	r0, r0, ip
	...
     36c:	0004f400 	andeq	pc, r4, r0, lsl #8
     370:	00050400 	andeq	r0, r5, r0, lsl #8
     374:	50000100 	andpl	r0, r0, r0, lsl #2
     378:	00000504 	andeq	r0, r0, r4, lsl #10
     37c:	0000054e 	andeq	r0, r0, lr, asr #10
     380:	01f30004 	mvnseq	r0, r4
     384:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     394:	000004f4 	strdeq	r0, [r0], -r4
     398:	0000051c 	andeq	r0, r0, ip, lsl r5
     39c:	1c510001 	mrrcne	0, 0, r0, r1, cr1
     3a0:	20000005 	andcs	r0, r0, r5
     3a4:	03000005 	movweq	r0, #5
     3a8:	9f027100 	svcls	0x00027100
     3ac:	00000520 	andeq	r0, r0, r0, lsr #10
     3b0:	0000054e 	andeq	r0, r0, lr, asr #10
     3b4:	01f30004 	mvnseq	r0, r4
     3b8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     3c4:	05000000 	streq	r0, [r0, #-0]
     3c8:	050c0000 	streq	r0, [ip, #-0]
     3cc:	00010000 	andeq	r0, r1, r0
     3d0:	00050c52 	andeq	r0, r5, r2, asr ip
     3d4:	00052e00 	andeq	r2, r5, r0, lsl #28
     3d8:	73000b00 	movwvc	r0, #2816	; 0xb00
     3dc:	23243300 			; <UNDEFINED> instruction: 0x23243300
     3e0:	8081c080 	addhi	ip, r1, r0, lsl #1
     3e4:	00009f04 	andeq	r9, r0, r4, lsl #30
	...
     3f0:	00000508 	andeq	r0, r0, r8, lsl #10
     3f4:	0000054e 	andeq	r0, r0, lr, asr #10
     3f8:	00500001 	subseq	r0, r0, r1
     3fc:	00000000 	andeq	r0, r0, r0
     400:	01000000 	mrseq	r0, (UNDEF: 0)
     404:	00000000 	andeq	r0, r0, r0
     408:	00050a01 	andeq	r0, r5, r1, lsl #20
     40c:	00051a00 	andeq	r1, r5, r0, lsl #20
     410:	70000500 	andvc	r0, r0, r0, lsl #10
     414:	9f263101 	svcls	0x00263101
     418:	0000051a 	andeq	r0, r0, sl, lsl r5
     41c:	00000520 	andeq	r0, r0, r0, lsr #10
     420:	20540001 	subscs	r0, r4, r1
     424:	4c000005 	stcmi	0, cr0, [r0], {5}
     428:	05000005 	streq	r0, [r0, #-5]
     42c:	31017000 	mrscc	r7, (UNDEF: 1)
     430:	00009f26 	andeq	r9, r0, r6, lsr #30
	...
     440:	00000518 	andeq	r0, r0, r8, lsl r5
     444:	00000524 	andeq	r0, r0, r4, lsr #10
     448:	24520001 	ldrbcs	r0, [r2], #-1
     44c:	2a000005 	bcs	468 <_Minimum_Stack_Size+0x368>
     450:	03000005 	movweq	r0, #5
     454:	9f7c7200 	svcls	0x007c7200
     458:	0000052a 	andeq	r0, r0, sl, lsr #10
     45c:	0000053a 	andeq	r0, r0, sl, lsr r5
     460:	00520001 	subseq	r0, r2, r1
     464:	00000000 	andeq	r0, r0, r0
     468:	02000000 	andeq	r0, r0, #0
     46c:	00051800 	andeq	r1, r5, r0, lsl #16
     470:	00052000 	andeq	r2, r5, r0
     474:	30000200 	andcc	r0, r0, r0, lsl #4
     478:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     47c:	00000000 	andeq	r0, r0, r0
     480:	00046c00 	andeq	r6, r4, r0, lsl #24
     484:	00046e00 	andeq	r6, r4, r0, lsl #28
     488:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     48c:	00046e00 	andeq	r6, r4, r0, lsl #28
     490:	0004c000 	andeq	ip, r4, r0
     494:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     498:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     4a4:	6c000000 	stcvs	0, cr0, [r0], {-0}
     4a8:	92000004 	andls	r0, r0, #4
     4ac:	01000004 	tsteq	r0, r4
     4b0:	04925000 	ldreq	r5, [r2], #0
     4b4:	04b40000 	ldrteq	r0, [r4], #0
     4b8:	00040000 	andeq	r0, r4, r0
     4bc:	9f5001f3 	svcls	0x005001f3
     4c0:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
     4c4:	000004c0 	andeq	r0, r0, r0, asr #9
     4c8:	00500001 	subseq	r0, r0, r1
	...
     4d4:	00047a00 	andeq	r7, r4, r0, lsl #20
     4d8:	0004c000 	andeq	ip, r4, r0
     4dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
     4e8:	04880000 	streq	r0, [r8], #0
     4ec:	04c00000 	strbeq	r0, [r0], #0
     4f0:	00010000 	andeq	r0, r1, r0
     4f4:	00000056 	andeq	r0, r0, r6, asr r0
     4f8:	00000000 	andeq	r0, r0, r0
     4fc:	88000100 	stmdahi	r0, {r8}
     500:	c0000004 	andgt	r0, r0, r4
     504:	01000004 	tsteq	r0, r4
     508:	00005100 	andeq	r5, r0, r0, lsl #2
     50c:	00000000 	andeq	r0, r0, r0
     510:	02000000 	andeq	r0, r0, #0
     514:	00000002 	andeq	r0, r0, r2
     518:	0000048a 	andeq	r0, r0, sl, lsl #9
     51c:	0000048a 	andeq	r0, r0, sl, lsl #9
     520:	8a530001 	bhi	14c052c <__Stack_Size+0x14bf52c>
     524:	a0000004 	andge	r0, r0, r4
     528:	08000004 	stmdaeq	r0, {r2}
     52c:	32007500 	andcc	r7, r0, #0, 10
     530:	22007324 	andcs	r7, r0, #36, 6	; 0x90000000
     534:	0004b49f 	muleq	r4, pc, r4	; <UNPREDICTABLE>
     538:	0004bc00 	andeq	fp, r4, r0, lsl #24
     53c:	75000800 	strvc	r0, [r0, #-2048]	; 0xfffff800
     540:	73243200 			; <UNDEFINED> instruction: 0x73243200
     544:	009f2200 	addseq	r2, pc, r0, lsl #4
     548:	00000000 	andeq	r0, r0, r0
     54c:	02000000 	andeq	r0, r0, #0
     550:	8a000000 	bhi	558 <_Minimum_Stack_Size+0x458>
     554:	bc000004 	stclt	0, cr0, [r0], {4}
     558:	01000004 	tsteq	r0, r4
     55c:	04bc5500 	ldrteq	r5, [ip], #1280	; 0x500
     560:	04be0000 	ldrteq	r0, [lr], #0
     564:	00030000 	andeq	r0, r3, r0
     568:	009f0175 	addseq	r0, pc, r5, ror r1	; <UNPREDICTABLE>
     56c:	00000000 	andeq	r0, r0, r0
     570:	1c000000 	stcne	0, cr0, [r0], {-0}
     574:	20000003 	andcs	r0, r0, r3
     578:	02000003 	andeq	r0, r0, #3
     57c:	20007d00 	andcs	r7, r0, r0, lsl #26
     580:	6c000003 	stcvs	0, cr0, [r0], {3}
     584:	02000004 	andeq	r0, r0, #4
     588:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     594:	00033800 	andeq	r3, r3, r0, lsl #16
     598:	00038800 	andeq	r8, r3, r0, lsl #16
     59c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     5a8:	00000002 	andeq	r0, r0, r2
     5ac:	000003c4 	andeq	r0, r0, r4, asr #7
     5b0:	000003ca 	andeq	r0, r0, sl, asr #7
     5b4:	9f300002 	svcls	0x00300002
     5b8:	000003ca 	andeq	r0, r0, sl, asr #7
     5bc:	000003cc 	andeq	r0, r0, ip, asr #7
     5c0:	74380005 	ldrtvc	r0, [r8], #-5
     5c4:	009f1c00 	addseq	r1, pc, r0, lsl #24
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	d4000000 	strle	r0, [r0], #-0
     5d0:	d6000001 	strle	r0, [r0], -r1
     5d4:	02000001 	andeq	r0, r0, #1
     5d8:	d6007d00 	strle	r7, [r0], -r0, lsl #26
     5dc:	1c000001 	stcne	0, cr0, [r0], {1}
     5e0:	02000003 	andeq	r0, r0, #3
     5e4:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     5f0:	d4000202 	strle	r0, [r0], #-514	; 0xfffffdfe
     5f4:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
     5f8:	01000001 	tsteq	r0, r1
     5fc:	01f05000 	mvnseq	r5, r0
     600:	031c0000 	tsteq	ip, #0
     604:	00010000 	andeq	r0, r1, r0
     608:	00000056 	andeq	r0, r0, r6, asr r0
	...
     620:	0001d400 	andeq	sp, r1, r0, lsl #8
     624:	00023000 	andeq	r3, r2, r0
     628:	51000100 	mrspl	r0, (UNDEF: 16)
     62c:	00000230 	andeq	r0, r0, r0, lsr r2
     630:	00000286 	andeq	r0, r0, r6, lsl #5
     634:	01f30004 	mvnseq	r0, r4
     638:	02869f51 	addeq	r9, r6, #324	; 0x144
     63c:	028a0000 	addeq	r0, sl, #0
     640:	00010000 	andeq	r0, r1, r0
     644:	00028a51 	andeq	r8, r2, r1, asr sl
     648:	00028c00 	andeq	r8, r2, r0, lsl #24
     64c:	f3000400 	vshl.u8	d0, d0, d0
     650:	8c9f5101 	ldfhis	f5, [pc], {1}
     654:	90000002 	andls	r0, r0, r2
     658:	01000002 	tsteq	r0, r2
     65c:	02905100 	addseq	r5, r0, #0, 2
     660:	02920000 	addseq	r0, r2, #0
     664:	00040000 	andeq	r0, r4, r0
     668:	9f5101f3 	svcls	0x005101f3
     66c:	00000292 	muleq	r0, r2, r2
     670:	00000296 	muleq	r0, r6, r2
     674:	96510001 	ldrbls	r0, [r1], -r1
     678:	1c000002 	stcne	0, cr0, [r0], {2}
     67c:	04000003 	streq	r0, [r0], #-3
     680:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     684:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     690:	d4000000 	strle	r0, [r0], #-0
     694:	78000001 	stmdavc	r0, {r0}
     698:	01000002 	tsteq	r0, r2
     69c:	02785200 	rsbseq	r5, r8, #0, 4
     6a0:	02860000 	addeq	r0, r6, #0
     6a4:	00040000 	andeq	r0, r4, r0
     6a8:	9f5201f3 	svcls	0x005201f3
     6ac:	00000286 	andeq	r0, r0, r6, lsl #5
     6b0:	0000031c 	andeq	r0, r0, ip, lsl r3
     6b4:	00520001 	subseq	r0, r2, r1
	...
     6c0:	d4000000 	strle	r0, [r0], #-0
     6c4:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
     6c8:	01000001 	tsteq	r0, r1
     6cc:	01f05300 	mvnseq	r5, r0, lsl #6
     6d0:	031c0000 	tsteq	ip, #0
     6d4:	00010000 	andeq	r0, r1, r0
     6d8:	00000053 	andeq	r0, r0, r3, asr r0
     6dc:	00000000 	andeq	r0, r0, r0
     6e0:	00000100 	andeq	r0, r0, r0, lsl #2
     6e4:	00000000 	andeq	r0, r0, r0
     6e8:	0001f000 	andeq	pc, r1, r0
     6ec:	00025200 	andeq	r5, r2, r0, lsl #4
     6f0:	70000600 	andvc	r0, r0, r0, lsl #12
     6f4:	1a800900 	bne	fe002afc <BootRAM+0xcf7329d>
     6f8:	0002529f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
     6fc:	00028600 	andeq	r8, r2, r0, lsl #12
     700:	f3000700 	vabd.u8	d0, d0, d0
     704:	80095001 	andhi	r5, r9, r1
     708:	02869f1a 	addeq	r9, r6, #26, 30	; 0x68
     70c:	02980000 	addseq	r0, r8, #0
     710:	00060000 	andeq	r0, r6, r0
     714:	80090070 	andhi	r0, r9, r0, ror r0
     718:	02989f1a 	addseq	r9, r8, #26, 30	; 0x68
     71c:	031c0000 	tsteq	ip, #0
     720:	00070000 	andeq	r0, r7, r0
     724:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     728:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     734:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
	...
     744:	00021c00 	andeq	r1, r2, r0, lsl #24
     748:	00021c00 	andeq	r1, r2, r0, lsl #24
     74c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     750:	0000021c 	andeq	r0, r0, ip, lsl r2
     754:	0000021c 	andeq	r0, r0, ip, lsl r2
     758:	0074000b 	rsbseq	r0, r4, fp
     75c:	1a0f0f0a 	bne	3c438c <__Stack_Size+0x3c338c>
     760:	2180800b 	orrcs	r8, r0, fp
     764:	00021c9f 	muleq	r2, pc, ip	; <UNPREDICTABLE>
     768:	00022000 	andeq	r2, r2, r0
     76c:	74001100 	strvc	r1, [r0], #-256	; 0xffffff00
     770:	0f000a00 	svceq	0x00000a00
     774:	0800761a 	stmdaeq	r0, {r1, r3, r4, r9, sl, ip, sp, lr}
     778:	0b211aff 	bleq	84737c <__Stack_Size+0x84637c>
     77c:	9f218080 	svcls	0x00218080
     780:	00000224 	andeq	r0, r0, r4, lsr #4
     784:	00000238 	andeq	r0, r0, r8, lsr r2
     788:	00740007 	rsbseq	r0, r4, r7
     78c:	2180800b 	orrcs	r8, r0, fp
     790:	0002389f 	muleq	r2, pc, r8	; <UNPREDICTABLE>
     794:	00024000 	andeq	r4, r2, r0
     798:	51000100 	mrspl	r0, (UNDEF: 16)
     79c:	00000240 	andeq	r0, r0, r0, asr #4
     7a0:	0000025a 	andeq	r0, r0, sl, asr r2
     7a4:	00750002 	rsbseq	r0, r5, r2
     7a8:	00000266 	andeq	r0, r0, r6, ror #4
     7ac:	0000026a 	andeq	r0, r0, sl, ror #4
     7b0:	86510001 	ldrbhi	r0, [r1], -r1
     7b4:	98000002 	stmdals	r0, {r1}
     7b8:	07000002 	streq	r0, [r0, -r2]
     7bc:	0b007400 	bleq	1d7c4 <__Stack_Size+0x1c7c4>
     7c0:	9f218080 	svcls	0x00218080
     7c4:	00000298 	muleq	r0, r8, r2
     7c8:	0000029a 	muleq	r0, sl, r2
     7cc:	00750002 	rsbseq	r0, r5, r2
	...
     7d8:	000000bc 	strheq	r0, [r0], -ip
     7dc:	000000be 	strheq	r0, [r0], -lr
     7e0:	007d0002 	rsbseq	r0, sp, r2
     7e4:	000000be 	strheq	r0, [r0], -lr
     7e8:	000001d4 	ldrdeq	r0, [r0], -r4
     7ec:	147d0002 	ldrbtne	r0, [sp], #-2
	...
     7f8:	00020200 	andeq	r0, r2, r0, lsl #4
     7fc:	000000bc 	strheq	r0, [r0], -ip
     800:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     804:	d0500001 	subsle	r0, r0, r1
     808:	d4000000 	strle	r0, [r0], #-0
     80c:	01000001 	tsteq	r0, r1
     810:	00005700 	andeq	r5, r0, r0, lsl #14
	...
     820:	00bc0000 	adcseq	r0, ip, r0
     824:	014a0000 	mrseq	r0, (UNDEF: 74)
     828:	00010000 	andeq	r0, r1, r0
     82c:	00014a51 	andeq	r4, r1, r1, asr sl
     830:	00017000 	andeq	r7, r1, r0
     834:	f3000400 	vshl.u8	d0, d0, d0
     838:	709f5101 	addsvc	r5, pc, r1, lsl #2
     83c:	80000001 	andhi	r0, r0, r1
     840:	01000001 	tsteq	r0, r1
     844:	01805100 	orreq	r5, r0, r0, lsl #2
     848:	01d40000 	bicseq	r0, r4, r0
     84c:	00040000 	andeq	r0, r4, r0
     850:	9f5101f3 	svcls	0x005101f3
	...
     860:	00bc0000 	adcseq	r0, ip, r0
     864:	016a0000 	cmneq	sl, r0
     868:	00010000 	andeq	r0, r1, r0
     86c:	00016a52 	andeq	r6, r1, r2, asr sl
     870:	00016c00 	andeq	r6, r1, r0, lsl #24
     874:	f3000400 	vshl.u8	d0, d0, d0
     878:	709f5201 	addsvc	r5, pc, r1, lsl #4
     87c:	d4000001 	strle	r0, [r0], #-1
     880:	01000001 	tsteq	r0, r1
     884:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     898:	00bc0000 	adcseq	r0, ip, r0
     89c:	00d00000 	sbcseq	r0, r0, r0
     8a0:	00010000 	andeq	r0, r1, r0
     8a4:	0000d053 	andeq	sp, r0, r3, asr r0
     8a8:	00015200 	andeq	r5, r1, r0, lsl #4
     8ac:	53000100 	movwpl	r0, #256	; 0x100
     8b0:	00000152 	andeq	r0, r0, r2, asr r1
     8b4:	00000168 	andeq	r0, r0, r8, ror #2
     8b8:	00770007 	rsbseq	r0, r7, r7
     8bc:	00742432 	rsbseq	r2, r4, r2, lsr r4
     8c0:	00016822 	andeq	r6, r1, r2, lsr #16
     8c4:	00017000 	andeq	r7, r1, r0
     8c8:	f3001300 	vcgt.u8	d1, d0, d0
     8cc:	dd035301 	stcle	3, cr5, [r3, #-4]
     8d0:	f3080001 	vhadd.u8	d0, d8, d1
     8d4:	2e305301 	cdpcs	3, 3, cr5, cr0, cr1, {0}
     8d8:	16000128 	strne	r0, [r0], -r8, lsr #2
     8dc:	01709f13 	cmneq	r0, r3, lsl pc
     8e0:	01b00000 	movseq	r0, r0
     8e4:	00010000 	andeq	r0, r1, r0
     8e8:	0001b053 	andeq	fp, r1, r3, asr r0
     8ec:	0001d400 	andeq	sp, r1, r0, lsl #8
     8f0:	77000700 	strvc	r0, [r0, -r0, lsl #14]
     8f4:	71243200 			; <UNDEFINED> instruction: 0x71243200
     8f8:	00002200 	andeq	r2, r0, r0, lsl #4
     8fc:	00000000 	andeq	r0, r0, r0
     900:	00010000 	andeq	r0, r1, r0
	...
     90c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     910:	000000e0 	andeq	r0, r0, r0, ror #1
     914:	00700006 	rsbseq	r0, r0, r6
     918:	9f1a8009 	svcls	0x001a8009
     91c:	000000e0 	andeq	r0, r0, r0, ror #1
     920:	0000010e 	andeq	r0, r0, lr, lsl #2
     924:	007c0006 	rsbseq	r0, ip, r6
     928:	9f1a8009 	svcls	0x001a8009
     92c:	0000010e 	andeq	r0, r0, lr, lsl #2
     930:	00000124 	andeq	r0, r0, r4, lsr #2
     934:	00700006 	rsbseq	r0, r0, r6
     938:	9f1a8009 	svcls	0x001a8009
     93c:	00000124 	andeq	r0, r0, r4, lsr #2
     940:	00000168 	andeq	r0, r0, r8, ror #2
     944:	007c0006 	rsbseq	r0, ip, r6
     948:	9f1a8009 	svcls	0x001a8009
     94c:	00000168 	andeq	r0, r0, r8, ror #2
     950:	000001d4 	ldrdeq	r0, [r0], -r4
     954:	01f30007 	mvnseq	r0, r7
     958:	1a800950 	bne	fe002ea0 <BootRAM+0xcf73641>
     95c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     960:	00000000 	andeq	r0, r0, r0
     964:	01010000 	mrseq	r0, (UNDEF: 1)
     968:	00000202 	andeq	r0, r0, r2, lsl #4
     96c:	00000000 	andeq	r0, r0, r0
     970:	f4000000 	vst4.8	{d0-d3}, [r0], r0
     974:	f4000000 	vst4.8	{d0-d3}, [r0], r0
     978:	01000000 	mrseq	r0, (UNDEF: 0)
     97c:	00f45400 	rscseq	r5, r4, r0, lsl #8
     980:	00f40000 	rscseq	r0, r4, r0
     984:	000b0000 	andeq	r0, fp, r0
     988:	0f0a0074 	svceq	0x000a0074
     98c:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     990:	f49f2180 			; <UNDEFINED> instruction: 0xf49f2180
     994:	fa000000 	blx	99c <_Minimum_Stack_Size+0x89c>
     998:	11000000 	mrsne	r0, (UNDEF: 0)
     99c:	0a007400 	beq	1d9a4 <__Stack_Size+0x1c9a4>
     9a0:	771a0f00 	ldrvc	r0, [sl, -r0, lsl #30]
     9a4:	1aff0800 	bne	fffc29ac <BootRAM+0xef3314d>
     9a8:	80800b21 	addhi	r0, r0, r1, lsr #22
     9ac:	00fe9f21 	rscseq	r9, lr, r1, lsr #30
     9b0:	010c0000 	mrseq	r0, (UNDEF: 12)
     9b4:	00070000 	andeq	r0, r7, r0
     9b8:	800b0074 	andhi	r0, fp, r4, ror r0
     9bc:	249f2180 	ldrcs	r2, [pc], #384	; 9c4 <_Minimum_Stack_Size+0x8c4>
     9c0:	28000001 	stmdacs	r0, {r0}
     9c4:	07000001 	streq	r0, [r0, -r1]
     9c8:	0b007400 	bleq	1d9d0 <__Stack_Size+0x1c9d0>
     9cc:	9f218080 	svcls	0x00218080
     9d0:	00000170 	andeq	r0, r0, r0, ror r1
     9d4:	00000174 	andeq	r0, r0, r4, ror r1
     9d8:	00740007 	rsbseq	r0, r4, r7
     9dc:	2180800b 	orrcs	r8, r0, fp
     9e0:	0001769f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     9e4:	00017a00 	andeq	r7, r1, r0, lsl #20
     9e8:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
     9ec:	80800b00 	addhi	r0, r0, r0, lsl #22
     9f0:	00009f21 	andeq	r9, r0, r1, lsr #30
     9f4:	00000000 	andeq	r0, r0, r0
     9f8:	054e0000 	strbeq	r0, [lr, #-0]
     9fc:	05500000 	ldrbeq	r0, [r0, #-0]
     a00:	00020000 	andeq	r0, r2, r0
     a04:	0550007d 	ldrbeq	r0, [r0, #-125]	; 0xffffff83
     a08:	05dc0000 	ldrbeq	r0, [ip]
     a0c:	00020000 	andeq	r0, r2, r0
     a10:	05dc187d 	ldrbeq	r1, [ip, #2173]	; 0x87d
     a14:	05de0000 	ldrbeq	r0, [lr]
     a18:	00020000 	andeq	r0, r2, r0
     a1c:	05de107d 	ldrbeq	r1, [lr, #125]	; 0x7d
     a20:	06840000 	streq	r0, [r4], r0
     a24:	00020000 	andeq	r0, r2, r0
     a28:	0000187d 	andeq	r1, r0, sp, ror r8
	...
     a38:	054e0000 	strbeq	r0, [lr, #-0]
     a3c:	05740000 	ldrbeq	r0, [r4, #-0]!
     a40:	00010000 	andeq	r0, r1, r0
     a44:	00057450 	andeq	r7, r5, r0, asr r4
     a48:	00059e00 	andeq	r9, r5, r0, lsl #28
     a4c:	f3000400 	vshl.u8	d0, d0, d0
     a50:	9e9f5001 	cdpls	0, 9, cr5, cr15, cr1, {0}
     a54:	a8000005 	stmdage	r0, {r0, r2}
     a58:	01000005 	tsteq	r0, r5
     a5c:	05a85000 	streq	r5, [r8, #0]!
     a60:	06840000 	streq	r0, [r4], r0
     a64:	00040000 	andeq	r0, r4, r0
     a68:	9f5001f3 	svcls	0x005001f3
	...
     a74:	00000001 	andeq	r0, r0, r1
     a78:	00000300 	andeq	r0, r0, r0, lsl #6
     a7c:	0000057a 	andeq	r0, r0, sl, ror r5
     a80:	00000598 	muleq	r0, r8, r5
     a84:	a8550001 	ldmdage	r5, {r0}^
     a88:	da000005 	ble	aa4 <_Minimum_Stack_Size+0x9a4>
     a8c:	01000005 	tsteq	r0, r5
     a90:	05de5500 	ldrbeq	r5, [lr, #1280]	; 0x500
     a94:	06300000 	ldrteq	r0, [r0], -r0
     a98:	00010000 	andeq	r0, r1, r0
     a9c:	00063855 	andeq	r3, r6, r5, asr r8
     aa0:	00065e00 	andeq	r5, r6, r0, lsl #28
     aa4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
     ab0:	05600001 	strbeq	r0, [r0, #-1]!
     ab4:	056a0000 	strbeq	r0, [sl, #-0]!
     ab8:	000b0000 	andeq	r0, fp, r0
     abc:	000a0073 	andeq	r0, sl, r3, ror r0
     ac0:	24401a08 	strbcs	r1, [r0], #-2568	; 0xfffff5f8
     ac4:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
	...
     adc:	80000003 	andhi	r0, r0, r3
     ae0:	98000005 	stmdals	r0, {r0, r2}
     ae4:	01000005 	tsteq	r0, r5
     ae8:	05a85300 	streq	r5, [r8, #768]!	; 0x300
     aec:	05bb0000 	ldreq	r0, [fp, #0]!
     af0:	00010000 	andeq	r0, r1, r0
     af4:	0005de53 	andeq	sp, r5, r3, asr lr
     af8:	0005e800 	andeq	lr, r5, r0, lsl #16
     afc:	53000100 	movwpl	r0, #256	; 0x100
     b00:	000005e8 	andeq	r0, r0, r8, ror #11
     b04:	000005fb 	strdeq	r0, [r0], -fp
     b08:	2a03000b 	bcs	c0b3c <__Stack_Size+0xbfb3c>
     b0c:	94200000 	strtls	r0, [r0], #-0
     b10:	1a7f0801 	bne	1fc2b1c <__Stack_Size+0x1fc1b1c>
     b14:	0005fe9f 	muleq	r5, pc, lr	; <UNPREDICTABLE>
     b18:	00061100 	andeq	r1, r6, r0, lsl #2
     b1c:	53000100 	movwpl	r0, #256	; 0x100
     b20:	00000611 	andeq	r0, r0, r1, lsl r6
     b24:	00000628 	andeq	r0, r0, r8, lsr #12
     b28:	28510001 	ldmdacs	r1, {r0}^
     b2c:	30000006 	andcc	r0, r0, r6
     b30:	01000006 	tsteq	r0, r6
     b34:	06385300 	ldrteq	r5, [r8], -r0, lsl #6
     b38:	06410000 	strbeq	r0, [r1], -r0
     b3c:	00010000 	andeq	r0, r1, r0
     b40:	00000053 	andeq	r0, r0, r3, asr r0
     b44:	00000000 	andeq	r0, r0, r0
     b48:	94000100 	strls	r0, [r0], #-256	; 0xffffff00
     b4c:	98000005 	stmdals	r0, {r0, r2}
     b50:	02000005 	andeq	r0, r0, #5
     b54:	009f3200 	addseq	r3, pc, r0, lsl #4
     b58:	00000000 	andeq	r0, r0, r0
     b5c:	01000000 	mrseq	r0, (UNDEF: 0)
     b60:	00059400 	andeq	r9, r5, r0, lsl #8
     b64:	00059800 	andeq	r9, r5, r0, lsl #16
     b68:	03000600 	movweq	r0, #1536	; 0x600
     b6c:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
     b70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b74:	00000000 	andeq	r0, r0, r0
     b78:	94000100 	strls	r0, [r0], #-256	; 0xffffff00
     b7c:	98000005 	stmdals	r0, {r0, r2}
     b80:	02000005 	andeq	r0, r0, #5
     b84:	009f3000 	addseq	r3, pc, r0
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	01000000 	mrseq	r0, (UNDEF: 0)
     b90:	0005cc00 	andeq	ip, r5, r0, lsl #24
     b94:	0005d900 	andeq	sp, r5, r0, lsl #18
     b98:	91000200 	mrsls	r0, R8_usr
     b9c:	0000006a 	andeq	r0, r0, sl, rrx
     ba0:	00000000 	andeq	r0, r0, r0
     ba4:	cc000100 	stfgts	f0, [r0], {-0}
     ba8:	d9000005 	stmdble	r0, {r0, r2}
     bac:	02000005 	andeq	r0, r0, #5
     bb0:	006c9100 	rsbeq	r9, ip, r0, lsl #2
     bb4:	00000000 	andeq	r0, r0, r0
     bb8:	01000000 	mrseq	r0, (UNDEF: 0)
     bbc:	0005de00 	andeq	sp, r5, r0, lsl #28
     bc0:	0005e600 	andeq	lr, r5, r0, lsl #12
     bc4:	31000200 	mrscc	r0, R8_usr
     bc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     bcc:	00000000 	andeq	r0, r0, r0
     bd0:	de000100 	adfles	f0, f0, f0
     bd4:	e6000005 	str	r0, [r0], -r5
     bd8:	06000005 	streq	r0, [r0], -r5
     bdc:	00340300 	eorseq	r0, r4, r0, lsl #6
     be0:	009f2000 	addseq	r2, pc, r0
     be4:	00000000 	andeq	r0, r0, r0
     be8:	01000000 	mrseq	r0, (UNDEF: 0)
     bec:	0005de00 	andeq	sp, r5, r0, lsl #28
     bf0:	0005e600 	andeq	lr, r5, r0, lsl #12
     bf4:	30000200 	andcc	r0, r0, r0, lsl #4
     bf8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     bfc:	00000000 	andeq	r0, r0, r0
     c00:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     c04:	22000006 	andcs	r0, r0, #6
     c08:	01000006 	tsteq	r0, r6
     c0c:	00005400 	andeq	r5, r0, r0, lsl #8
     c10:	00000000 	andeq	r0, r0, r0
     c14:	00010000 	andeq	r0, r1, r0
     c18:	0000060e 	andeq	r0, r0, lr, lsl #12
     c1c:	00000628 	andeq	r0, r0, r8, lsr #12
     c20:	9f300002 	svcls	0x00300002
	...
     c2c:	056e0002 	strbeq	r0, [lr, #-2]!
     c30:	05780000 	ldrbeq	r0, [r8, #-0]!
     c34:	00020000 	andeq	r0, r2, r0
     c38:	00009f30 	andeq	r9, r0, r0, lsr pc
     c3c:	00000000 	andeq	r0, r0, r0
     c40:	00020000 	andeq	r0, r2, r0
     c44:	0000056e 	andeq	r0, r0, lr, ror #10
     c48:	00000578 	andeq	r0, r0, r8, ror r5
     c4c:	2a030006 	bcs	c0c6c <__Stack_Size+0xbfc6c>
     c50:	9f200000 	svcls	0x00200000
	...
     c5c:	06300005 	ldrteq	r0, [r0], -r5
     c60:	06380000 	ldrteq	r0, [r8], -r0
     c64:	00020000 	andeq	r0, r2, r0
     c68:	00009f30 	andeq	r9, r0, r0, lsr pc
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	03010000 	movweq	r0, #4096	; 0x1000
     c74:	00000630 	andeq	r0, r0, r0, lsr r6
     c78:	00000630 	andeq	r0, r0, r0, lsr r6
     c7c:	9f300002 	svcls	0x00300002
	...
     c88:	000004c0 	andeq	r0, r0, r0, asr #9
     c8c:	000004c2 	andeq	r0, r0, r2, asr #9
     c90:	007d0002 	rsbseq	r0, sp, r2
     c94:	000004c2 	andeq	r0, r0, r2, asr #9
     c98:	000004f4 	strdeq	r0, [r0], -r4
     c9c:	187d0002 	ldmdane	sp!, {r1}^
	...
     cac:	000004c0 	andeq	r0, r0, r0, asr #9
     cb0:	000004d6 	ldrdeq	r0, [r0], -r6
     cb4:	d6500001 	ldrble	r0, [r0], -r1
     cb8:	f4000004 	vst4.8	{d0-d3}, [r0], r4
     cbc:	04000004 	streq	r0, [r0], #-4
     cc0:	5001f300 	andpl	pc, r1, r0, lsl #6
     cc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     cd0:	0004ca00 	andeq	ip, r4, r0, lsl #20
     cd4:	0004d400 	andeq	sp, r4, r0, lsl #8
     cd8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
     cdc:	000004d4 	ldrdeq	r0, [r0], -r4
     ce0:	000004ee 	andeq	r0, r0, lr, ror #9
     ce4:	00560001 	subseq	r0, r6, r1
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	02000000 	andeq	r0, r0, #0
     cf0:	0004d400 	andeq	sp, r4, r0, lsl #8
     cf4:	0004dc00 	andeq	sp, r4, r0, lsl #24
     cf8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     d04:	04d40002 	ldrbeq	r0, [r4], #2
     d08:	04dc0000 	ldrbeq	r0, [ip], #0
     d0c:	00010000 	andeq	r0, r1, r0
     d10:	00000051 	andeq	r0, r0, r1, asr r0
     d14:	00000000 	andeq	r0, r0, r0
     d18:	d4000200 	strle	r0, [r0], #-512	; 0xfffffe00
     d1c:	dc000004 	stcle	0, cr0, [r0], {4}
     d20:	02000004 	andeq	r0, r0, #4
     d24:	009f3000 	addseq	r3, pc, r0
	...
     d30:	30000000 	andcc	r0, r0, r0
     d34:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     d38:	01000000 	mrseq	r0, (UNDEF: 0)
     d3c:	003e5200 	eorseq	r5, lr, r0, lsl #4
     d40:	00400000 	subeq	r0, r0, r0
     d44:	00020000 	andeq	r0, r2, r0
     d48:	00000473 	andeq	r0, r0, r3, ror r4
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00020000 	andeq	r0, r2, r0
     d54:	00000000 	andeq	r0, r0, r0
     d58:	00400000 	subeq	r0, r0, r0
     d5c:	00420000 	subeq	r0, r2, r0
     d60:	00020000 	andeq	r0, r2, r0
     d64:	00429f30 	subeq	r9, r2, r0, lsr pc
     d68:	00440000 	subeq	r0, r4, r0
     d6c:	00090000 	andeq	r0, r9, r0
     d70:	0186a00c 	orreq	sl, r6, ip
     d74:	1c007200 	sfmne	f7, 4, [r0], {-0}
     d78:	0000449f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     d7c:	00004600 	andeq	r4, r0, r0, lsl #12
     d80:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     d84:	000186a1 	andeq	r8, r1, r1, lsr #13
     d88:	9f1c0072 	svcls	0x001c0072
     d8c:	00000046 	andeq	r0, r0, r6, asr #32
     d90:	0000004a 	andeq	r0, r0, sl, asr #32
     d94:	a00c0009 	andge	r0, ip, r9
     d98:	72000186 	andvc	r0, r0, #-2147483615	; 0x80000021
     d9c:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
     dac:	00004a00 	andeq	r4, r0, r0, lsl #20
     db0:	00005800 	andeq	r5, r0, r0, lsl #16
     db4:	52000100 	andpl	r0, r0, #0, 2
     db8:	00000058 	andeq	r0, r0, r8, asr r0
     dbc:	0000005a 	andeq	r0, r0, sl, asr r0
     dc0:	04730002 	ldrbteq	r0, [r3], #-2
     dc4:	0000005a 	andeq	r0, r0, sl, asr r0
     dc8:	00000060 	andeq	r0, r0, r0, rrx
     dcc:	84730004 	ldrbthi	r0, [r3], #-4
     dd0:	000002d8 	ldrdeq	r0, [r0], -r8
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	00020000 	andeq	r0, r2, r0
     ddc:	00600000 	rsbeq	r0, r0, r0
     de0:	00640000 	rsbeq	r0, r4, r0
     de4:	00020000 	andeq	r0, r2, r0
     de8:	00649f30 	rsbeq	r9, r4, r0, lsr pc
     dec:	00660000 	rsbeq	r0, r6, r0
     df0:	00050000 	andeq	r0, r5, r0
     df4:	1c007338 	stcne	3, cr7, [r0], {56}	; 0x38
     df8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     e04:	76000000 	strvc	r0, [r0], -r0
     e08:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
     e0c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     e10:	86a00c00 	strthi	r0, [r0], r0, lsl #24
     e14:	00730001 	rsbseq	r0, r3, r1
     e18:	00789f1c 	rsbseq	r9, r8, ip, lsl pc
     e1c:	007a0000 	rsbseq	r0, sl, r0
     e20:	00090000 	andeq	r0, r9, r0
     e24:	0186a10c 	orreq	sl, r6, ip, lsl #2
     e28:	1c007300 	stcne	3, cr7, [r0], {-0}
     e2c:	00007a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
     e30:	00009200 	andeq	r9, r0, r0, lsl #4
     e34:	0c000900 			; <UNDEFINED> instruction: 0x0c000900
     e38:	000186a0 	andeq	r8, r1, r0, lsr #13
     e3c:	9f1c0073 	svcls	0x001c0073
	...
     e48:	00960001 	addseq	r0, r6, r1
     e4c:	009e0000 	addseq	r0, lr, r0
     e50:	00020000 	andeq	r0, r2, r0
     e54:	00009f44 	andeq	r9, r0, r4, asr #30
	...
     e60:	000e0000 	andeq	r0, lr, r0
     e64:	00100000 	andseq	r0, r0, r0
     e68:	00010000 	andeq	r0, r1, r0
     e6c:	00001050 	andeq	r1, r0, r0, asr r0
     e70:	00001200 	andeq	r1, r0, r0, lsl #4
     e74:	f3000400 	vshl.u8	d0, d0, d0
     e78:	009f5001 	addseq	r5, pc, r1
	...
     e84:	0a000000 	beq	e8c <_Minimum_Stack_Size+0xd8c>
     e88:	0c000000 	stceq	0, cr0, [r0], {-0}
     e8c:	01000000 	mrseq	r0, (UNDEF: 0)
     e90:	000c5000 	andeq	r5, ip, r0
     e94:	000e0000 	andeq	r0, lr, r0
     e98:	00040000 	andeq	r0, r4, r0
     e9c:	9f5001f3 	svcls	0x005001f3
	...
     ea8:	000004a8 	andeq	r0, r0, r8, lsr #9
     eac:	000004aa 	andeq	r0, r0, sl, lsr #9
     eb0:	007d0002 	rsbseq	r0, sp, r2
     eb4:	000004aa 	andeq	r0, r0, sl, lsr #9
     eb8:	000004e2 	andeq	r0, r0, r2, ror #9
     ebc:	087d0002 	ldmdaeq	sp!, {r1}^
     ec0:	000004e2 	andeq	r0, r0, r2, ror #9
     ec4:	000004f4 	strdeq	r0, [r0], -r4
     ec8:	007d0002 	rsbseq	r0, sp, r2
	...
     ed4:	00000364 	andeq	r0, r0, r4, ror #6
     ed8:	00000366 	andeq	r0, r0, r6, ror #6
     edc:	007d0002 	rsbseq	r0, sp, r2
     ee0:	00000366 	andeq	r0, r0, r6, ror #6
     ee4:	0000048c 	andeq	r0, r0, ip, lsl #9
     ee8:	087d0002 	ldmdaeq	sp!, {r1}^
     eec:	0000048c 	andeq	r0, r0, ip, lsl #9
     ef0:	000004a8 	andeq	r0, r0, r8, lsr #9
     ef4:	007d0002 	rsbseq	r0, sp, r2
	...
     f04:	037c0000 	cmneq	ip, #0
     f08:	03840000 	orreq	r0, r4, #0
     f0c:	00010000 	andeq	r0, r1, r0
     f10:	00038453 	andeq	r8, r3, r3, asr r4
     f14:	00038600 	andeq	r8, r3, r0, lsl #12
     f18:	72000200 	andvc	r0, r0, #0, 4
     f1c:	00038600 	andeq	r8, r3, r0, lsl #12
     f20:	00038c00 	andeq	r8, r3, r0, lsl #24
     f24:	0c000500 	cfstr32eq	mvfx0, [r0], {-0}
     f28:	40010c00 	andmi	r0, r1, r0, lsl #24
	...
     f34:	00000003 	andeq	r0, r0, r3
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	000003a4 	andeq	r0, r0, r4, lsr #7
     f40:	000003a6 	andeq	r0, r0, r6, lsr #7
     f44:	9f300002 	svcls	0x00300002
     f48:	000003a6 	andeq	r0, r0, r6, lsr #7
     f4c:	000003a8 	andeq	r0, r0, r8, lsr #7
     f50:	72440005 	subvc	r0, r4, #5
     f54:	a89f1c00 	ldmge	pc, {sl, fp, ip}	; <UNPREDICTABLE>
     f58:	aa000003 	bge	f6c <_Minimum_Stack_Size+0xe6c>
     f5c:	05000003 	streq	r0, [r0, #-3]
     f60:	00724500 	rsbseq	r4, r2, r0, lsl #10
     f64:	03aa9f1c 			; <UNDEFINED> instruction: 0x03aa9f1c
     f68:	03ae0000 			; <UNDEFINED> instruction: 0x03ae0000
     f6c:	00050000 	andeq	r0, r5, r0
     f70:	1c007244 	sfmne	f7, 4, [r0], {68}	; 0x44
     f74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f78:	00000000 	andeq	r0, r0, r0
     f7c:	ec000100 	stfs	f0, [r0], {-0}
     f80:	f4000003 	vst4.8	{d0-d3}, [r0], r3
     f84:	02000003 	andeq	r0, r0, #3
     f88:	009f4200 	addseq	r4, pc, r0, lsl #4
     f8c:	00000000 	andeq	r0, r0, r0
     f90:	03000000 	movweq	r0, #0
     f94:	00000000 	andeq	r0, r0, r0
     f98:	16000000 	strne	r0, [r0], -r0
     f9c:	18000004 	stmdane	r0, {r2}
     fa0:	02000004 	andeq	r0, r0, #4
     fa4:	189f3000 	ldmne	pc, {ip, sp}	; <UNPREDICTABLE>
     fa8:	1a000004 	bne	fc0 <_Minimum_Stack_Size+0xec0>
     fac:	05000004 	streq	r0, [r0, #-4]
     fb0:	00724400 	rsbseq	r4, r2, r0, lsl #8
     fb4:	041a9f1c 	ldreq	r9, [sl], #-3868	; 0xfffff0e4
     fb8:	041c0000 	ldreq	r0, [ip], #-0
     fbc:	00050000 	andeq	r0, r5, r0
     fc0:	1c007245 	sfmne	f7, 4, [r0], {69}	; 0x45
     fc4:	00041c9f 	muleq	r4, pc, ip	; <UNPREDICTABLE>
     fc8:	00042000 	andeq	r2, r4, r0
     fcc:	44000500 	strmi	r0, [r0], #-1280	; 0xfffffb00
     fd0:	9f1c0072 	svcls	0x001c0072
	...
     fdc:	00000332 	andeq	r0, r0, r2, lsr r3
     fe0:	00000334 	andeq	r0, r0, r4, lsr r3
     fe4:	007d0002 	rsbseq	r0, sp, r2
     fe8:	00000334 	andeq	r0, r0, r4, lsr r3
     fec:	00000364 	andeq	r0, r0, r4, ror #6
     ff0:	107d0002 	rsbsne	r0, sp, r2
	...
    1000:	00000332 	andeq	r0, r0, r2, lsr r3
    1004:	0000033d 	andeq	r0, r0, sp, lsr r3
    1008:	3d500001 	ldclcc	0, cr0, [r0, #-4]
    100c:	64000003 	strvs	r0, [r0], #-3
    1010:	01000003 	tsteq	r0, r3
    1014:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    1020:	03320000 	teqeq	r2, #0
    1024:	033d0000 	teqeq	sp, #0
    1028:	00010000 	andeq	r0, r1, r0
    102c:	00033d51 	andeq	r3, r3, r1, asr sp
    1030:	00036400 	andeq	r6, r3, r0, lsl #8
    1034:	f3000400 	vshl.u8	d0, d0, d0
    1038:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1044:	32000000 	andcc	r0, r0, #0
    1048:	3d000003 	stccc	0, cr0, [r0, #-12]
    104c:	01000003 	tsteq	r0, r3
    1050:	033d5200 	teqeq	sp, #0, 4
    1054:	03640000 	cmneq	r4, #0
    1058:	00040000 	andeq	r0, r4, r0
    105c:	9f5201f3 	svcls	0x005201f3
	...
    1068:	00000304 	andeq	r0, r0, r4, lsl #6
    106c:	00000306 	andeq	r0, r0, r6, lsl #6
    1070:	007d0002 	rsbseq	r0, sp, r2
    1074:	00000306 	andeq	r0, r0, r6, lsl #6
    1078:	00000332 	andeq	r0, r0, r2, lsr r3
    107c:	107d0002 	rsbsne	r0, sp, r2
	...
    108c:	00000304 	andeq	r0, r0, r4, lsl #6
    1090:	0000030f 	andeq	r0, r0, pc, lsl #6
    1094:	0f500001 	svceq	0x00500001
    1098:	32000003 	andcc	r0, r0, #3
    109c:	01000003 	tsteq	r0, r3
    10a0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    10b0:	03040000 	movweq	r0, #16384	; 0x4000
    10b4:	03120000 	tsteq	r2, #0
    10b8:	00010000 	andeq	r0, r1, r0
    10bc:	00031251 	andeq	r1, r3, r1, asr r2
    10c0:	00031600 	andeq	r1, r3, r0, lsl #12
    10c4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
    10c8:	00000316 	andeq	r0, r0, r6, lsl r3
    10cc:	0000031b 	andeq	r0, r0, fp, lsl r3
    10d0:	1b510001 	blne	14410dc <__Stack_Size+0x14400dc>
    10d4:	32000003 	andcc	r0, r0, #3
    10d8:	01000003 	tsteq	r0, r3
    10dc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    10ec:	03040000 	movweq	r0, #16384	; 0x4000
    10f0:	03120000 	tsteq	r2, #0
    10f4:	00010000 	andeq	r0, r1, r0
    10f8:	00031252 	andeq	r1, r3, r2, asr r2
    10fc:	00031600 	andeq	r1, r3, r0, lsl #12
    1100:	56000100 	strpl	r0, [r0], -r0, lsl #2
    1104:	00000316 	andeq	r0, r0, r6, lsl r3
    1108:	0000031b 	andeq	r0, r0, fp, lsl r3
    110c:	1b520001 	blne	1481118 <__Stack_Size+0x1480118>
    1110:	32000003 	andcc	r0, r0, #3
    1114:	01000003 	tsteq	r0, r3
    1118:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    1128:	02680000 	rsbeq	r0, r8, #0
    112c:	02900000 	addseq	r0, r0, #0
    1130:	00010000 	andeq	r0, r1, r0
    1134:	00029050 	andeq	r9, r2, r0, asr r0
    1138:	00029400 	andeq	r9, r2, r0, lsl #8
    113c:	f3000400 	vshl.u8	d0, d0, d0
    1140:	949f5001 	ldrls	r5, [pc], #1	; 1148 <__Stack_Size+0x148>
    1144:	a8000002 	stmdage	r0, {r1}
    1148:	01000002 	tsteq	r0, r2
    114c:	02a85000 	adceq	r5, r8, #0
    1150:	03040000 	movweq	r0, #16384	; 0x4000
    1154:	00040000 	andeq	r0, r4, r0
    1158:	9f5001f3 	svcls	0x005001f3
	...
    1164:	0000007a 	andeq	r0, r0, sl, ror r0
    1168:	0000007c 	andeq	r0, r0, ip, ror r0
    116c:	007d0002 	rsbseq	r0, sp, r2
    1170:	0000007c 	andeq	r0, r0, ip, ror r0
    1174:	0000010c 	andeq	r0, r0, ip, lsl #2
    1178:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1184:	00aa0000 	adceq	r0, sl, r0
    1188:	00ae0000 	adceq	r0, lr, r0
    118c:	00010000 	andeq	r0, r1, r0
    1190:	00000050 	andeq	r0, r0, r0, asr r0
    1194:	00000000 	andeq	r0, r0, r0
    1198:	b8000400 	stmdalt	r0, {sl}
    119c:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    11a0:	01000000 	mrseq	r0, (UNDEF: 0)
    11a4:	00005400 	andeq	r5, r0, r0, lsl #8
    11a8:	00000000 	andeq	r0, r0, r0
    11ac:	01000000 	mrseq	r0, (UNDEF: 0)
    11b0:	00020201 	andeq	r0, r2, r1, lsl #4
    11b4:	000000be 	strheq	r0, [r0], -lr
    11b8:	000000be 	strheq	r0, [r0], -lr
    11bc:	00700007 	rsbseq	r0, r0, r7
    11c0:	1affff0a 	bne	df0 <_Minimum_Stack_Size+0xcf0>
    11c4:	0000be9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
    11c8:	0000be00 	andeq	fp, r0, r0, lsl #28
    11cc:	74000e00 	strvc	r0, [r0], #-3584	; 0xfffff200
    11d0:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    11d4:	0a00701a 	beq	1d244 <__Stack_Size+0x1c244>
    11d8:	1c1affff 	ldcne	15, cr15, [sl], {255}	; 0xff
    11dc:	0000be9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
    11e0:	0000c800 	andeq	ip, r0, r0, lsl #16
    11e4:	74001000 	strvc	r1, [r0], #-0
    11e8:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    11ec:	0a00701a 	beq	1d25c <__Stack_Size+0x1c25c>
    11f0:	1c1affff 	ldcne	15, cr15, [sl], {255}	; 0xff
    11f4:	009f2433 	addseq	r2, pc, r3, lsr r4	; <UNPREDICTABLE>
	...
    1200:	60000000 	andvs	r0, r0, r0
    1204:	6a000000 	bvs	120c <__Stack_Size+0x20c>
    1208:	01000000 	mrseq	r0, (UNDEF: 0)
    120c:	006a5000 	rsbeq	r5, sl, r0
    1210:	00780000 	rsbseq	r0, r8, r0
    1214:	00040000 	andeq	r0, r4, r0
    1218:	9f5001f3 	svcls	0x005001f3
	...
    1228:	00000048 	andeq	r0, r0, r8, asr #32
    122c:	00000054 	andeq	r0, r0, r4, asr r0
    1230:	54500001 	ldrbpl	r0, [r0], #-1
    1234:	60000000 	andvs	r0, r0, r0
    1238:	04000000 	streq	r0, [r0], #-0
    123c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1240:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    124c:	00000600 	andeq	r0, r0, r0, lsl #12
    1250:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1254:	00000600 	andeq	r0, r0, r0, lsl #12
    1258:	00004800 	andeq	r4, r0, r0, lsl #16
    125c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1260:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    1270:	00000400 	andeq	r0, r0, r0, lsl #8
    1274:	50000100 	andpl	r0, r0, r0, lsl #2
    1278:	00000004 	andeq	r0, r0, r4
    127c:	00000048 	andeq	r0, r0, r8, asr #32
    1280:	01f30004 	mvnseq	r0, r4
    1284:	00009f50 	andeq	r9, r0, r0, asr pc
    1288:	00000000 	andeq	r0, r0, r0
    128c:	00010000 	andeq	r0, r1, r0
    1290:	00000014 	andeq	r0, r0, r4, lsl r0
    1294:	0000003a 	andeq	r0, r0, sl, lsr r0
    1298:	a6030006 	strge	r0, [r3], -r6
    129c:	9f200002 	svcls	0x00200002
	...
    12a8:	00140000 	andseq	r0, r4, r0
    12ac:	00300000 	eorseq	r0, r0, r0
    12b0:	00080000 	andeq	r0, r8, r0
    12b4:	ff080072 			; <UNDEFINED> instruction: 0xff080072
    12b8:	9f24311a 	svcls	0x0024311a
	...
    12c4:	02000002 	andeq	r0, r0, #2
    12c8:	00000002 	andeq	r0, r0, r2
    12cc:	00040000 	andeq	r0, r4, r0
    12d0:	00010000 	andeq	r0, r1, r0
    12d4:	00000450 	andeq	r0, r0, r0, asr r4
    12d8:	00001400 	andeq	r1, r0, r0, lsl #8
    12dc:	f3000400 	vshl.u8	d0, d0, d0
    12e0:	149f5001 	ldrne	r5, [pc], #1	; 12e8 <__Stack_Size+0x2e8>
    12e4:	36000000 	strcc	r0, [r0], -r0
    12e8:	01000000 	mrseq	r0, (UNDEF: 0)
    12ec:	00005000 	andeq	r5, r0, r0
    12f0:	00000000 	andeq	r0, r0, r0
    12f4:	01000000 	mrseq	r0, (UNDEF: 0)
    12f8:	001c0001 	andseq	r0, ip, r1
    12fc:	001c0000 	andseq	r0, ip, r0
    1300:	00010000 	andeq	r0, r1, r0
    1304:	00001c54 	andeq	r1, r0, r4, asr ip
    1308:	00003600 	andeq	r3, r0, r0, lsl #12
    130c:	70000800 	andvc	r0, r0, r0, lsl #16
    1310:	74243100 	strtvc	r3, [r4], #-256	; 0xffffff00
    1314:	009f2200 	addseq	r2, pc, r0, lsl #4
    1318:	00000000 	andeq	r0, r0, r0
    131c:	70000000 	andvc	r0, r0, r0
    1320:	72000001 	andvc	r0, r0, #1
    1324:	02000001 	andeq	r0, r0, #1
    1328:	72007d00 	andvc	r7, r0, #0, 26
    132c:	bc000001 	stclt	0, cr0, [r0], {1}
    1330:	02000001 	andeq	r0, r0, #1
    1334:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1344:	70000000 	andvc	r0, r0, r0
    1348:	8a000001 	bhi	1354 <__Stack_Size+0x354>
    134c:	01000001 	tsteq	r0, r1
    1350:	018a5000 	orreq	r5, sl, r0
    1354:	01920000 	orrseq	r0, r2, r0
    1358:	00040000 	andeq	r0, r4, r0
    135c:	9f5001f3 	svcls	0x005001f3
    1360:	00000192 	muleq	r0, r2, r1
    1364:	00000198 	muleq	r0, r8, r1
    1368:	98500001 	ldmdals	r0, {r0}^
    136c:	bc000001 	stclt	0, cr0, [r0], {1}
    1370:	04000001 	streq	r0, [r0], #-1
    1374:	5001f300 	andpl	pc, r1, r0, lsl #6
    1378:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    137c:	00000000 	andeq	r0, r0, r0
    1380:	96000000 	strls	r0, [r0], -r0
    1384:	ae000001 	cdpge	0, 0, cr0, cr0, cr1, {0}
    1388:	01000001 	tsteq	r0, r1
    138c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    1398:	00000196 	muleq	r0, r6, r1
    139c:	000001ae 	andeq	r0, r0, lr, lsr #3
    13a0:	00510001 	subseq	r0, r1, r1
	...
    13ac:	96000000 	strls	r0, [r0], -r0
    13b0:	98000001 	stmdals	r0, {r0}
    13b4:	01000001 	tsteq	r0, r1
    13b8:	01985000 	orrseq	r5, r8, r0
    13bc:	01ae0000 			; <UNDEFINED> instruction: 0x01ae0000
    13c0:	00040000 	andeq	r0, r4, r0
    13c4:	9f5001f3 	svcls	0x005001f3
	...
    13d0:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    13d4:	000001be 			; <UNDEFINED> instruction: 0x000001be
    13d8:	007d0002 	rsbseq	r0, sp, r2
    13dc:	000001be 			; <UNDEFINED> instruction: 0x000001be
    13e0:	0000022c 	andeq	r0, r0, ip, lsr #4
    13e4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    13f8:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    13fc:	000001d4 	ldrdeq	r0, [r0], -r4
    1400:	d4500001 	ldrble	r0, [r0], #-1
    1404:	12000001 	andne	r0, r0, #1
    1408:	04000002 	streq	r0, [r0], #-2
    140c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1410:	0002129f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
    1414:	00021400 	andeq	r1, r2, r0, lsl #8
    1418:	50000100 	andpl	r0, r0, r0, lsl #2
    141c:	00000214 	andeq	r0, r0, r4, lsl r2
    1420:	0000022c 	andeq	r0, r0, ip, lsr #4
    1424:	01f30004 	mvnseq	r0, r4
    1428:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1438:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    143c:	000001d6 	ldrdeq	r0, [r0], -r6
    1440:	d6510001 	ldrble	r0, [r1], -r1
    1444:	12000001 	andne	r0, r0, #1
    1448:	04000002 	streq	r0, [r0], #-2
    144c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1450:	0002129f 	muleq	r2, pc, r2	; <UNPREDICTABLE>
    1454:	00022c00 	andeq	r2, r2, r0, lsl #24
    1458:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1468:	01bc0000 			; <UNDEFINED> instruction: 0x01bc0000
    146c:	01d90000 	bicseq	r0, r9, r0
    1470:	00010000 	andeq	r0, r1, r0
    1474:	0001d952 	andeq	sp, r1, r2, asr r9
    1478:	00021200 	andeq	r1, r2, r0, lsl #4
    147c:	f3000400 	vshl.u8	d0, d0, d0
    1480:	129f5201 	addsne	r5, pc, #268435456	; 0x10000000
    1484:	2c000002 	stccs	0, cr0, [r0], {2}
    1488:	01000002 	tsteq	r0, r2
    148c:	00005200 	andeq	r5, r0, r0, lsl #4
    1490:	00000000 	andeq	r0, r0, r0
    1494:	00010000 	andeq	r0, r1, r0
    1498:	01d00100 	bicseq	r0, r0, r0, lsl #2
    149c:	01d40000 	bicseq	r0, r4, r0
    14a0:	00010000 	andeq	r0, r1, r0
    14a4:	0001d450 	andeq	sp, r1, r0, asr r4
    14a8:	00020e00 	andeq	r0, r2, r0, lsl #28
    14ac:	f3000400 	vshl.u8	d0, d0, d0
    14b0:	009f5001 	addseq	r5, pc, r1
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	01000000 	mrseq	r0, (UNDEF: 0)
    14bc:	0001d001 	andeq	sp, r1, r1
    14c0:	00020e00 	andeq	r0, r2, r0, lsl #28
    14c4:	f3000400 	vshl.u8	d0, d0, d0
    14c8:	009f5101 	addseq	r5, pc, r1, lsl #2
    14cc:	00000000 	andeq	r0, r0, r0
    14d0:	01000000 	mrseq	r0, (UNDEF: 0)
    14d4:	0001d001 	andeq	sp, r1, r1
    14d8:	00020e00 	andeq	r0, r2, r0, lsl #28
    14dc:	32000200 	andcc	r0, r0, #0, 4
    14e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    14f0:	0001de00 	andeq	sp, r1, r0, lsl #28
    14f4:	0001e000 	andeq	lr, r1, r0
    14f8:	53000100 	movwpl	r0, #256	; 0x100
    14fc:	000001e0 	andeq	r0, r0, r0, ror #3
    1500:	000001e4 	andeq	r0, r0, r4, ror #3
    1504:	0073000d 	rsbseq	r0, r3, sp
    1508:	1aff000b 	bne	fffc153c <BootRAM+0xef31cdd>
    150c:	ff080072 			; <UNDEFINED> instruction: 0xff080072
    1510:	ee9f211a 	mrc	1, 4, r2, cr15, cr10, {0}
    1514:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
    1518:	01000001 	tsteq	r0, r1
    151c:	01f05300 	mvnseq	r5, r0, lsl #6
    1520:	01f20000 	mvnseq	r0, r0
    1524:	000d0000 	andeq	r0, sp, r0
    1528:	ff080073 			; <UNDEFINED> instruction: 0xff080073
    152c:	0b00711a 	bleq	1d99c <__Stack_Size+0x1c99c>
    1530:	211aff00 	tstcs	sl, r0, lsl #30	; <UNPREDICTABLE>
    1534:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1538:	00000000 	andeq	r0, r0, r0
    153c:	d0000300 	andle	r0, r0, r0, lsl #6
    1540:	da000001 	ble	154c <__Stack_Size+0x54c>
    1544:	02000001 	andeq	r0, r0, #1
    1548:	009f3000 	addseq	r3, pc, r0
    154c:	00000000 	andeq	r0, r0, r0
    1550:	03000000 	movweq	r0, #0
    1554:	0001d000 	andeq	sp, r1, r0
    1558:	0001da00 	andeq	sp, r1, r0, lsl #20
    155c:	03000600 	movweq	r0, #1536	; 0x600
    1560:	200002a4 	andcs	r0, r0, r4, lsr #5
    1564:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1568:	00000000 	andeq	r0, r0, r0
    156c:	00036400 	andeq	r6, r3, r0, lsl #8
    1570:	00036600 	andeq	r6, r3, r0, lsl #12
    1574:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1578:	00036600 	andeq	r6, r3, r0, lsl #12
    157c:	00042400 	andeq	r2, r4, r0, lsl #8
    1580:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1584:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    1590:	64000000 	strvs	r0, [r0], #-0
    1594:	92000003 	andls	r0, r0, #3
    1598:	01000003 	tsteq	r0, r3
    159c:	03925000 	orrseq	r5, r2, #0
    15a0:	03980000 	orrseq	r0, r8, #0
    15a4:	00030000 	andeq	r0, r3, r0
    15a8:	989f0176 	ldmls	pc, {r1, r2, r4, r5, r6, r8}	; <UNPREDICTABLE>
    15ac:	24000003 	strcs	r0, [r0], #-3
    15b0:	04000004 	streq	r0, [r0], #-4
    15b4:	5001f300 	andpl	pc, r1, r0, lsl #6
    15b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    15c4:	64000000 	strvs	r0, [r0], #-0
    15c8:	b6000003 	strlt	r0, [r0], -r3
    15cc:	01000003 	tsteq	r0, r3
    15d0:	03b65100 			; <UNDEFINED> instruction: 0x03b65100
    15d4:	03e20000 	mvneq	r0, #0
    15d8:	00040000 	andeq	r0, r4, r0
    15dc:	9f5101f3 	svcls	0x005101f3
    15e0:	000003e2 	andeq	r0, r0, r2, ror #7
    15e4:	00000424 	andeq	r0, r0, r4, lsr #8
    15e8:	00510001 	subseq	r0, r1, r1
    15ec:	00000000 	andeq	r0, r0, r0
    15f0:	02000000 	andeq	r0, r0, #0
    15f4:	00000000 	andeq	r0, r0, r0
    15f8:	00036400 	andeq	r6, r3, r0, lsl #8
    15fc:	00037a00 	andeq	r7, r3, r0, lsl #20
    1600:	30000200 	andcc	r0, r0, r0, lsl #4
    1604:	00037a9f 	muleq	r3, pc, sl	; <UNPREDICTABLE>
    1608:	0003de00 	andeq	sp, r3, r0, lsl #28
    160c:	53000100 	movwpl	r0, #256	; 0x100
    1610:	000003e2 	andeq	r0, r0, r2, ror #7
    1614:	00000424 	andeq	r0, r0, r4, lsr #8
    1618:	00530001 	subseq	r0, r3, r1
    161c:	00000000 	andeq	r0, r0, r0
    1620:	24000000 	strcs	r0, [r0], #-0
    1624:	28000004 	stmdacs	r0, {r2}
    1628:	02000004 	andeq	r0, r0, #4
    162c:	28007d00 	stmdacs	r0, {r8, sl, fp, ip, sp, lr}
    1630:	2c000004 	stccs	0, cr0, [r0], {4}
    1634:	02000004 	andeq	r0, r0, #4
    1638:	2c187d00 	ldccs	13, cr7, [r8], {-0}
    163c:	1a000004 	bne	1654 <__Stack_Size+0x654>
    1640:	03000005 	movweq	r0, #5
    1644:	00d87d00 	sbcseq	r7, r8, r0, lsl #26
    1648:	0000051a 	andeq	r0, r0, sl, lsl r5
    164c:	0000051e 	andeq	r0, r0, lr, lsl r5
    1650:	187d0002 	ldmdane	sp!, {r1}^
    1654:	0000051e 	andeq	r0, r0, lr, lsl r5
    1658:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    165c:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
    166c:	3c000000 	stccc	0, cr0, [r0], {-0}
    1670:	40000004 	andmi	r0, r0, r4
    1674:	06000004 	streq	r0, [r0], -r4
    1678:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
    167c:	4e9f1aff 			; <UNDEFINED> instruction: 0x4e9f1aff
    1680:	7c000004 	stcvc	0, cr0, [r0], {4}
    1684:	01000004 	tsteq	r0, r4
    1688:	051e5500 	ldreq	r5, [lr, #-1280]	; 0xfffffb00
    168c:	054a0000 	strbeq	r0, [sl, #-0]
    1690:	00010000 	andeq	r0, r1, r0
    1694:	00000055 	andeq	r0, r0, r5, asr r0
    1698:	00000000 	andeq	r0, r0, r0
    169c:	34050300 	strcc	r0, [r5], #-768	; 0xfffffd00
    16a0:	34000004 	strcc	r0, [r0], #-4
    16a4:	06000004 	streq	r0, [r0], -r4
    16a8:	00540300 	subseq	r0, r4, r0, lsl #6
    16ac:	009f2000 	addseq	r2, pc, r0
    16b0:	00000000 	andeq	r0, r0, r0
    16b4:	01000000 	mrseq	r0, (UNDEF: 0)
    16b8:	00047200 	andeq	r7, r4, r0, lsl #4
    16bc:	00047800 	andeq	r7, r4, r0, lsl #16
    16c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    16cc:	04720001 	ldrbteq	r0, [r2], #-1
    16d0:	04780000 	ldrbteq	r0, [r8], #-0
    16d4:	00010000 	andeq	r0, r1, r0
    16d8:	0000005d 	andeq	r0, r0, sp, asr r0
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	72000100 	andvc	r0, r0, #0, 2
    16e4:	78000004 	stmdavc	r0, {r2}
    16e8:	03000004 	movweq	r0, #4
    16ec:	9f810900 	svcls	0x00810900
	...
    16f8:	05380001 	ldreq	r0, [r8, #-1]!
    16fc:	05400000 	strbeq	r0, [r0, #-0]
    1700:	00010000 	andeq	r0, r1, r0
    1704:	00000055 	andeq	r0, r0, r5, asr r0
    1708:	00000000 	andeq	r0, r0, r0
    170c:	38000100 	stmdacc	r0, {r8}
    1710:	40000005 	andmi	r0, r0, r5
    1714:	01000005 	tsteq	r0, r5
    1718:	00005d00 	andeq	r5, r0, r0, lsl #26
    171c:	00000000 	andeq	r0, r0, r0
    1720:	00010000 	andeq	r0, r1, r0
    1724:	00000538 	andeq	r0, r0, r8, lsr r5
    1728:	00000540 	andeq	r0, r0, r0, asr #10
    172c:	82090003 	andhi	r0, r9, #3
    1730:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1734:	00000000 	andeq	r0, r0, r0
    1738:	00000300 	andeq	r0, r0, r0, lsl #6
    173c:	00047c00 	andeq	r7, r4, r0, lsl #24
    1740:	00051800 	andeq	r1, r5, r0, lsl #16
    1744:	31000200 	mrscc	r0, R8_usr
    1748:	00054a9f 	muleq	r5, pc, sl	; <UNPREDICTABLE>
    174c:	0005bc00 	andeq	fp, r5, r0, lsl #24
    1750:	31000200 	mrscc	r0, R8_usr
    1754:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1764:	d2000000 	andle	r0, r0, #0
    1768:	da000004 	ble	1780 <__Stack_Size+0x780>
    176c:	01000004 	tsteq	r0, r4
    1770:	04da5000 	ldrbeq	r5, [sl], #0
    1774:	04dd0000 	ldrbeq	r0, [sp], #0
    1778:	00010000 	andeq	r0, r1, r0
    177c:	0004dd52 	andeq	sp, r4, r2, asr sp
    1780:	0004e600 	andeq	lr, r4, r0, lsl #12
    1784:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
    1788:	00000584 	andeq	r0, r0, r4, lsl #11
    178c:	00000588 	andeq	r0, r0, r8, lsl #11
    1790:	88500001 	ldmdahi	r0, {r0}^
    1794:	8b000005 	blhi	17b0 <__Stack_Size+0x7b0>
    1798:	01000005 	tsteq	r0, r5
    179c:	00005100 	andeq	r5, r0, r0, lsl #2
    17a0:	00000000 	andeq	r0, r0, r0
    17a4:	00010000 	andeq	r0, r1, r0
    17a8:	00000000 	andeq	r0, r0, r0
    17ac:	00000490 	muleq	r0, r0, r4
    17b0:	00000492 	muleq	r0, r2, r4
    17b4:	48910003 	ldmmi	r1, {r0, r1}
    17b8:	0004929f 	muleq	r4, pc, r2	; <UNPREDICTABLE>
    17bc:	00049700 	andeq	r9, r4, r0, lsl #14
    17c0:	51000100 	mrspl	r0, (UNDEF: 16)
    17c4:	00000497 	muleq	r0, r7, r4
    17c8:	00000498 	muleq	r0, r8, r4
    17cc:	48910003 	ldmmi	r1, {r0, r1}
    17d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17d4:	00000000 	andeq	r0, r0, r0
    17d8:	90000100 	andls	r0, r0, r0, lsl #2
    17dc:	98000004 	stmdals	r0, {r2}
    17e0:	02000004 	andeq	r0, r0, #4
    17e4:	009f3200 	addseq	r3, pc, r0, lsl #4
    17e8:	00000000 	andeq	r0, r0, r0
    17ec:	01000000 	mrseq	r0, (UNDEF: 0)
    17f0:	0004ae03 	andeq	sl, r4, r3, lsl #28
    17f4:	0004ae00 	andeq	sl, r4, r0, lsl #28
    17f8:	03000600 	movweq	r0, #1536	; 0x600
    17fc:	20000156 	andcs	r0, r0, r6, asr r1
    1800:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1804:	00000000 	andeq	r0, r0, r0
    1808:	00000100 	andeq	r0, r0, r0, lsl #2
    180c:	c2000000 	andgt	r0, r0, #0
    1810:	c6000004 	strgt	r0, [r0], -r4
    1814:	03000004 	movweq	r0, #4
    1818:	9f489100 	svcls	0x00489100
    181c:	000004c6 	andeq	r0, r0, r6, asr #9
    1820:	000004cb 	andeq	r0, r0, fp, asr #9
    1824:	cb510001 	blgt	1441830 <__Stack_Size+0x1440830>
    1828:	d2000004 	andle	r0, r0, #4
    182c:	03000004 	movweq	r0, #4
    1830:	9f489100 	svcls	0x00489100
	...
    183c:	04c20001 	strbeq	r0, [r2], #1
    1840:	04c40000 	strbeq	r0, [r4], #0
    1844:	00010000 	andeq	r0, r1, r0
    1848:	00000050 	andeq	r0, r0, r0, asr r0
    184c:	00000000 	andeq	r0, r0, r0
    1850:	00000100 	andeq	r0, r0, r0, lsl #2
    1854:	56000000 	strpl	r0, [r0], -r0
    1858:	58000005 	stmdapl	r0, {r0, r2}
    185c:	03000005 	movweq	r0, #5
    1860:	9f489100 	svcls	0x00489100
    1864:	00000558 	andeq	r0, r0, r8, asr r5
    1868:	0000055d 	andeq	r0, r0, sp, asr r5
    186c:	5d510001 	ldclpl	0, cr0, [r1, #-4]
    1870:	5e000005 	cdppl	0, 0, cr0, cr0, cr5, {0}
    1874:	03000005 	movweq	r0, #5
    1878:	9f489100 	svcls	0x00489100
	...
    1884:	05560001 	ldrbeq	r0, [r6, #-1]
    1888:	055e0000 	ldrbeq	r0, [lr, #-0]
    188c:	00020000 	andeq	r0, r2, r0
    1890:	00009f31 	andeq	r9, r0, r1, lsr pc
    1894:	00000000 	andeq	r0, r0, r0
    1898:	00010000 	andeq	r0, r1, r0
    189c:	00000000 	andeq	r0, r0, r0
    18a0:	0000057c 	andeq	r0, r0, ip, ror r5
    18a4:	0000057e 	andeq	r0, r0, lr, ror r5
    18a8:	48910003 	ldmmi	r1, {r0, r1}
    18ac:	00057e9f 	muleq	r5, pc, lr	; <UNPREDICTABLE>
    18b0:	00058300 	andeq	r8, r5, r0, lsl #6
    18b4:	51000100 	mrspl	r0, (UNDEF: 16)
    18b8:	00000583 	andeq	r0, r0, r3, lsl #11
    18bc:	00000584 	andeq	r0, r0, r4, lsl #11
    18c0:	48910003 	ldmmi	r1, {r0, r1}
    18c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    18c8:	00000000 	andeq	r0, r0, r0
    18cc:	7c000100 	stfvcs	f0, [r0], {-0}
    18d0:	84000005 	strhi	r0, [r0], #-5
    18d4:	02000005 	andeq	r0, r0, #5
    18d8:	009f3200 	addseq	r3, pc, r0, lsl #4
    18dc:	00000000 	andeq	r0, r0, r0
    18e0:	a4000000 	strge	r0, [r0], #-0
    18e4:	a8000002 	stmdage	r0, {r1}
    18e8:	02000002 	andeq	r0, r0, #2
    18ec:	a8007d00 	stmdage	r0, {r8, sl, fp, ip, sp, lr}
    18f0:	64000002 	strvs	r0, [r0], #-2
    18f4:	02000003 	andeq	r0, r0, #3
    18f8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    1904:	aa000000 	bge	190c <__Stack_Size+0x90c>
    1908:	b8000002 	stmdalt	r0, {r1}
    190c:	01000002 	tsteq	r0, r2
    1910:	02b85300 	adcseq	r5, r8, #0, 6
    1914:	02c40000 	sbceq	r0, r4, #0
    1918:	00020000 	andeq	r0, r2, r0
    191c:	00000472 	andeq	r0, r0, r2, ror r4
	...
    192c:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    1930:	000002c6 	andeq	r0, r0, r6, asr #5
    1934:	c6530001 	ldrbgt	r0, [r3], -r1
    1938:	ca000002 	bgt	1948 <__Stack_Size+0x948>
    193c:	02000002 	andeq	r0, r0, #2
    1940:	ca047200 	bgt	11e148 <__Stack_Size+0x11d148>
    1944:	d2000002 	andle	r0, r0, #2
    1948:	05000002 	streq	r0, [r0, #-2]
    194c:	08040c00 	stmdaeq	r4, {sl, fp}
    1950:	00004001 	andeq	r4, r0, r1
    1954:	00000000 	andeq	r0, r0, r0
    1958:	00010000 	andeq	r0, r1, r0
    195c:	00000302 	andeq	r0, r0, r2, lsl #6
    1960:	00000304 	andeq	r0, r0, r4, lsl #6
    1964:	25080003 	strcs	r0, [r8, #-3]
    1968:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    196c:	00000000 	andeq	r0, r0, r0
    1970:	00021800 	andeq	r1, r2, r0, lsl #16
    1974:	00021a00 	andeq	r1, r2, r0, lsl #20
    1978:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    197c:	00021a00 	andeq	r1, r2, r0, lsl #20
    1980:	0002a400 	andeq	sl, r2, r0, lsl #8
    1984:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1988:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    19a0:	00021800 	andeq	r1, r2, r0, lsl #16
    19a4:	00022c00 	andeq	r2, r2, r0, lsl #24
    19a8:	50000100 	andpl	r0, r0, r0, lsl #2
    19ac:	0000022c 	andeq	r0, r0, ip, lsr #4
    19b0:	00000230 	andeq	r0, r0, r0, lsr r2
    19b4:	01f30004 	mvnseq	r0, r4
    19b8:	02309f50 	eorseq	r9, r0, #80, 30	; 0x140
    19bc:	023a0000 	eorseq	r0, sl, #0
    19c0:	00010000 	andeq	r0, r1, r0
    19c4:	00023a50 	andeq	r3, r2, r0, asr sl
    19c8:	00025000 	andeq	r5, r2, r0
    19cc:	f3000400 	vshl.u8	d0, d0, d0
    19d0:	509f5001 	addspl	r5, pc, r1
    19d4:	58000002 	stmdapl	r0, {r1}
    19d8:	01000002 	tsteq	r0, r2
    19dc:	02585000 	subseq	r5, r8, #0
    19e0:	02940000 	addseq	r0, r4, #0
    19e4:	00040000 	andeq	r0, r4, r0
    19e8:	9f5001f3 	svcls	0x005001f3
    19ec:	00000294 	muleq	r0, r4, r2
    19f0:	00000296 	muleq	r0, r6, r2
    19f4:	96500001 	ldrbls	r0, [r0], -r1
    19f8:	a4000002 	strge	r0, [r0], #-2
    19fc:	04000002 	streq	r0, [r0], #-2
    1a00:	5001f300 	andpl	pc, r1, r0, lsl #6
    1a04:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1a18:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1a1c:	2c000002 	stccs	0, cr0, [r0], {2}
    1a20:	01000002 	tsteq	r0, r2
    1a24:	022c5100 	eoreq	r5, ip, #0, 2
    1a28:	02300000 	eorseq	r0, r0, #0
    1a2c:	00040000 	andeq	r0, r4, r0
    1a30:	9f5101f3 	svcls	0x005101f3
    1a34:	00000230 	andeq	r0, r0, r0, lsr r2
    1a38:	00000238 	andeq	r0, r0, r8, lsr r2
    1a3c:	38510001 	ldmdacc	r1, {r0}^
    1a40:	50000002 	andpl	r0, r0, r2
    1a44:	04000002 	streq	r0, [r0], #-2
    1a48:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1a4c:	0002509f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    1a50:	00025a00 	andeq	r5, r2, r0, lsl #20
    1a54:	51000100 	mrspl	r0, (UNDEF: 16)
    1a58:	0000025a 	andeq	r0, r0, sl, asr r2
    1a5c:	00000294 	muleq	r0, r4, r2
    1a60:	01f30004 	mvnseq	r0, r4
    1a64:	02949f51 	addseq	r9, r4, #324	; 0x144
    1a68:	02a40000 	adceq	r0, r4, #0
    1a6c:	00010000 	andeq	r0, r1, r0
    1a70:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1a84:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1a88:	2c000002 	stccs	0, cr0, [r0], {2}
    1a8c:	01000002 	tsteq	r0, r2
    1a90:	022c5200 	eoreq	r5, ip, #0, 4
    1a94:	02300000 	eorseq	r0, r0, #0
    1a98:	00040000 	andeq	r0, r4, r0
    1a9c:	9f5201f3 	svcls	0x005201f3
    1aa0:	00000230 	andeq	r0, r0, r0, lsr r2
    1aa4:	0000023d 	andeq	r0, r0, sp, lsr r2
    1aa8:	3d520001 	ldclcc	0, cr0, [r2, #-4]
    1aac:	50000002 	andpl	r0, r0, r2
    1ab0:	04000002 	streq	r0, [r0], #-2
    1ab4:	5201f300 	andpl	pc, r1, #0, 6
    1ab8:	0002509f 	muleq	r2, pc, r0	; <UNPREDICTABLE>
    1abc:	00025d00 	andeq	r5, r2, r0, lsl #26
    1ac0:	52000100 	andpl	r0, r0, #0, 2
    1ac4:	0000025d 	andeq	r0, r0, sp, asr r2
    1ac8:	00000294 	muleq	r0, r4, r2
    1acc:	01f30004 	mvnseq	r0, r4
    1ad0:	02949f52 	addseq	r9, r4, #328	; 0x148
    1ad4:	02a40000 	adceq	r0, r4, #0
    1ad8:	00010000 	andeq	r0, r1, r0
    1adc:	00000052 	andeq	r0, r0, r2, asr r0
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	36000100 	strcc	r0, [r0], -r0, lsl #2
    1ae8:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
    1aec:	06000002 	streq	r0, [r0], -r2
    1af0:	000c0300 	andeq	r0, ip, r0, lsl #6
    1af4:	009f2000 	addseq	r2, pc, r0
    1af8:	00000000 	andeq	r0, r0, r0
    1afc:	01000000 	mrseq	r0, (UNDEF: 0)
    1b00:	00023600 	andeq	r3, r2, r0, lsl #12
    1b04:	00023e00 	andeq	r3, r2, r0, lsl #28
    1b08:	30000200 	andcc	r0, r0, r0, lsl #4
    1b0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b10:	00000000 	andeq	r0, r0, r0
    1b14:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    1b18:	5e000002 	cdppl	0, 0, cr0, cr0, cr2, {0}
    1b1c:	06000002 	streq	r0, [r0], -r2
    1b20:	00130300 	andseq	r0, r3, r0, lsl #6
    1b24:	009f2000 	addseq	r2, pc, r0
    1b28:	00000000 	andeq	r0, r0, r0
    1b2c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b30:	00025400 	andeq	r5, r2, r0, lsl #8
    1b34:	00025e00 	andeq	r5, r2, r0, lsl #28
    1b38:	30000200 	andcc	r0, r0, r0, lsl #4
    1b3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1b48:	00017400 	andeq	r7, r1, r0, lsl #8
    1b4c:	00018600 	andeq	r8, r1, r0, lsl #12
    1b50:	50000100 	andpl	r0, r0, r0, lsl #2
    1b54:	00000186 	andeq	r0, r0, r6, lsl #3
    1b58:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    1b5c:	01f30004 	mvnseq	r0, r4
    1b60:	00009f50 	andeq	r9, r0, r0, asr pc
    1b64:	00000000 	andeq	r0, r0, r0
    1b68:	011c0000 	tsteq	ip, r0
    1b6c:	011e0000 	tsteq	lr, r0
    1b70:	00020000 	andeq	r0, r2, r0
    1b74:	011e007d 	tsteq	lr, sp, ror r0
    1b78:	01740000 	cmneq	r4, r0
    1b7c:	00020000 	andeq	r0, r2, r0
    1b80:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    1b8c:	011c0000 	tsteq	ip, r0
    1b90:	01260000 			; <UNDEFINED> instruction: 0x01260000
    1b94:	00010000 	andeq	r0, r1, r0
    1b98:	00012a50 	andeq	r2, r1, r0, asr sl
    1b9c:	00017400 	andeq	r7, r1, r0, lsl #8
    1ba0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    1bb0:	011c0000 	tsteq	ip, r0
    1bb4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    1bb8:	00010000 	andeq	r0, r1, r0
    1bbc:	00012251 	andeq	r2, r1, r1, asr r2
    1bc0:	00012600 	andeq	r2, r1, r0, lsl #12
    1bc4:	f3000400 	vshl.u8	d0, d0, d0
    1bc8:	2a9f5101 	bcs	fe7d5fd4 <BootRAM+0xd746775>
    1bcc:	6c000001 	stcvs	0, cr0, [r0], {1}
    1bd0:	01000001 	tsteq	r0, r1
    1bd4:	00005400 	andeq	r5, r0, r0, lsl #8
    1bd8:	00000000 	andeq	r0, r0, r0
    1bdc:	03010000 	movweq	r0, #4096	; 0x1000
    1be0:	00000148 	andeq	r0, r0, r8, asr #2
    1be4:	00000148 	andeq	r0, r0, r8, asr #2
    1be8:	54030006 	strpl	r0, [r3], #-6
    1bec:	9f200000 	svcls	0x00200000
	...
    1bf8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1bfc:	000000f2 	strdeq	r0, [r0], -r2
    1c00:	007d0002 	rsbseq	r0, sp, r2
    1c04:	000000f2 	strdeq	r0, [r0], -r2
    1c08:	0000011c 	andeq	r0, r0, ip, lsl r1
    1c0c:	107d0002 	rsbsne	r0, sp, r2
	...
    1c1c:	00f00000 	rscseq	r0, r0, r0
    1c20:	00f80000 	rscseq	r0, r8, r0
    1c24:	00010000 	andeq	r0, r1, r0
    1c28:	0000f850 	andeq	pc, r0, r0, asr r8	; <UNPREDICTABLE>
    1c2c:	00011400 	andeq	r1, r1, r0, lsl #8
    1c30:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    1c34:	00000114 	andeq	r0, r0, r4, lsl r1
    1c38:	0000011c 	andeq	r0, r0, ip, lsl r1
    1c3c:	7f740003 	svcvc	0x00740003
    1c40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1c44:	00000000 	andeq	r0, r0, r0
    1c48:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    1c4c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1c50:	01000000 	mrseq	r0, (UNDEF: 0)
    1c54:	00005100 	andeq	r5, r0, r0, lsl #2
    1c58:	00000000 	andeq	r0, r0, r0
    1c5c:	03010000 	movweq	r0, #4096	; 0x1000
    1c60:	000000fe 	strdeq	r0, [r0], -lr
    1c64:	000000fe 	strdeq	r0, [r0], -lr
    1c68:	54030006 	strpl	r0, [r3], #-6
    1c6c:	9f200000 	svcls	0x00200000
	...
    1c78:	000000c8 	andeq	r0, r0, r8, asr #1
    1c7c:	000000ca 	andeq	r0, r0, sl, asr #1
    1c80:	007d0002 	rsbseq	r0, sp, r2
    1c84:	000000ca 	andeq	r0, r0, sl, asr #1
    1c88:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c8c:	107d0002 	rsbsne	r0, sp, r2
	...
    1c9c:	00020200 	andeq	r0, r2, r0, lsl #4
    1ca0:	000000c8 	andeq	r0, r0, r8, asr #1
    1ca4:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1ca8:	d0500001 	subsle	r0, r0, r1
    1cac:	d4000000 	strle	r0, [r0], #-0
    1cb0:	03000000 	movweq	r0, #0
    1cb4:	9f017400 	svcls	0x00017400
    1cb8:	000000d4 	ldrdeq	r0, [r0], -r4
    1cbc:	000000d8 	ldrdeq	r0, [r0], -r8
    1cc0:	d8540001 	ldmdale	r4, {r0}^
    1cc4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    1cc8:	03000000 	movweq	r0, #0
    1ccc:	9f017400 	svcls	0x00017400
	...
    1cd8:	0000009c 	muleq	r0, ip, r0
    1cdc:	0000009e 	muleq	r0, lr, r0
    1ce0:	007d0002 	rsbseq	r0, sp, r2
    1ce4:	0000009e 	muleq	r0, lr, r0
    1ce8:	000000c8 	andeq	r0, r0, r8, asr #1
    1cec:	187d0002 	ldmdane	sp!, {r1}^
	...
    1cfc:	009c0000 	addseq	r0, ip, r0
    1d00:	00a60000 	adceq	r0, r6, r0
    1d04:	00010000 	andeq	r0, r1, r0
    1d08:	0000a650 	andeq	sl, r0, r0, asr r6
    1d0c:	0000b000 	andeq	fp, r0, r0
    1d10:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    1d14:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1d18:	000000c8 	andeq	r0, r0, r8, asr #1
    1d1c:	7f740003 	svcvc	0x00740003
    1d20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d24:	00000000 	andeq	r0, r0, r0
    1d28:	9c000000 	stcls	0, cr0, [r0], {-0}
    1d2c:	a6000000 	strge	r0, [r0], -r0
    1d30:	01000000 	mrseq	r0, (UNDEF: 0)
    1d34:	00005100 	andeq	r5, r0, r0, lsl #2
    1d38:	00000000 	andeq	r0, r0, r0
    1d3c:	00520000 	subseq	r0, r2, r0
    1d40:	00540000 	subseq	r0, r4, r0
    1d44:	00020000 	andeq	r0, r2, r0
    1d48:	0054007d 	subseq	r0, r4, sp, ror r0
    1d4c:	00660000 	rsbeq	r0, r6, r0
    1d50:	00020000 	andeq	r0, r2, r0
    1d54:	0066087d 	rsbeq	r0, r6, sp, ror r8
    1d58:	006a0000 	rsbeq	r0, sl, r0
    1d5c:	00020000 	andeq	r0, r2, r0
    1d60:	006a007d 	rsbeq	r0, sl, sp, ror r0
    1d64:	009c0000 	addseq	r0, ip, r0
    1d68:	00020000 	andeq	r0, r2, r0
    1d6c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1d78:	0000005e 	andeq	r0, r0, lr, asr r0
    1d7c:	0000006a 	andeq	r0, r0, sl, rrx
    1d80:	00510001 	subseq	r0, r1, r1
    1d84:	00000000 	andeq	r0, r0, r0
    1d88:	01000000 	mrseq	r0, (UNDEF: 0)
    1d8c:	00007003 	andeq	r7, r0, r3
    1d90:	00007000 	andeq	r7, r0, r0
    1d94:	03000600 	movweq	r0, #1536	; 0x600
    1d98:	20000156 	andcs	r0, r0, r6, asr r1
    1d9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1dac:	00000a00 	andeq	r0, r0, r0, lsl #20
    1db0:	00001a00 	andeq	r1, r0, r0, lsl #20
    1db4:	50000100 	andpl	r0, r0, r0, lsl #2
    1db8:	0000001a 	andeq	r0, r0, sl, lsl r0
    1dbc:	0000002c 	andeq	r0, r0, ip, lsr #32
    1dc0:	2c530001 	mrrccs	0, 0, r0, r3, cr1
    1dc4:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    1dc8:	01000000 	mrseq	r0, (UNDEF: 0)
    1dcc:	002e5000 	eoreq	r5, lr, r0
    1dd0:	00300000 	eorseq	r0, r0, r0
    1dd4:	00010000 	andeq	r0, r1, r0
    1dd8:	00000053 	andeq	r0, r0, r3, asr r0
    1ddc:	00000000 	andeq	r0, r0, r0
    1de0:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    1de4:	2c000000 	stccs	0, cr0, [r0], {-0}
    1de8:	01000000 	mrseq	r0, (UNDEF: 0)
    1dec:	00005000 	andeq	r5, r0, r0
    1df0:	00000000 	andeq	r0, r0, r0
    1df4:	05030000 	streq	r0, [r3, #-0]
    1df8:	0000000a 	andeq	r0, r0, sl
    1dfc:	0000000a 	andeq	r0, r0, sl
    1e00:	00500001 	subseq	r0, r0, r1
	...
    1e10:	04000000 	streq	r0, [r0], #-0
    1e14:	01000000 	mrseq	r0, (UNDEF: 0)
    1e18:	00045000 	andeq	r5, r4, r0
    1e1c:	000a0000 	andeq	r0, sl, r0
    1e20:	00040000 	andeq	r0, r4, r0
    1e24:	9f5001f3 	svcls	0x005001f3
	...
    1e30:	00300402 	eorseq	r0, r0, r2, lsl #8
    1e34:	00300000 	eorseq	r0, r0, r0
    1e38:	00010000 	andeq	r0, r1, r0
    1e3c:	00000050 	andeq	r0, r0, r0, asr r0
    1e40:	00000000 	andeq	r0, r0, r0
    1e44:	3c000000 	stccc	0, cr0, [r0], {-0}
    1e48:	50000000 	andpl	r0, r0, r0
    1e4c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e50:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1e5c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1e60:	00000050 	andeq	r0, r0, r0, asr r0
    1e64:	00500001 	subseq	r0, r0, r1
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e70:	0001f600 	andeq	pc, r1, r0, lsl #12
    1e74:	00021800 	andeq	r1, r2, r0, lsl #16
    1e78:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1e84:	000001c0 	andeq	r0, r0, r0, asr #3
    1e88:	000001c2 	andeq	r0, r0, r2, asr #3
    1e8c:	007d0002 	rsbseq	r0, sp, r2
    1e90:	000001c2 	andeq	r0, r0, r2, asr #3
    1e94:	000001c6 	andeq	r0, r0, r6, asr #3
    1e98:	087d0002 	ldmdaeq	sp!, {r1}^
    1e9c:	000001c6 	andeq	r0, r0, r6, asr #3
    1ea0:	000001f8 	strdeq	r0, [r0], -r8
    1ea4:	287d0002 	ldmdacs	sp!, {r1}^
    1ea8:	000001f8 	strdeq	r0, [r0], -r8
    1eac:	00000200 	andeq	r0, r0, r0, lsl #4
    1eb0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1ec0:	000001d8 	ldrdeq	r0, [r0], -r8
    1ec4:	000001de 	ldrdeq	r0, [r0], -lr
    1ec8:	de500001 	cdple	0, 5, cr0, cr0, cr1, {0}
    1ecc:	e1000001 	tst	r0, r1
    1ed0:	01000001 	tsteq	r0, r1
    1ed4:	00005200 	andeq	r5, r0, r0, lsl #4
    1ed8:	00000000 	andeq	r0, r0, r0
    1edc:	00010000 	andeq	r0, r1, r0
    1ee0:	01d80000 	bicseq	r0, r8, r0
    1ee4:	01de0000 	bicseq	r0, lr, r0
    1ee8:	00010000 	andeq	r0, r1, r0
    1eec:	0001de50 	andeq	sp, r1, r0, asr lr
    1ef0:	0001e100 	andeq	lr, r1, r0, lsl #2
    1ef4:	52000100 	andpl	r0, r0, #0, 2
	...
    1f00:	01d80001 	bicseq	r0, r8, r1
    1f04:	01e20000 	mvneq	r0, r0
    1f08:	00010000 	andeq	r0, r1, r0
    1f0c:	0000005d 	andeq	r0, r0, sp, asr r0
    1f10:	00000000 	andeq	r0, r0, r0
    1f14:	d8000100 	stmdale	r0, {r8}
    1f18:	e2000001 	and	r0, r0, #1
    1f1c:	03000001 	movweq	r0, #1
    1f20:	9f830900 	svcls	0x00830900
	...
    1f2c:	01ee0001 	mvneq	r0, r1
    1f30:	01f60000 	mvnseq	r0, r0
    1f34:	00010000 	andeq	r0, r1, r0
    1f38:	0000005d 	andeq	r0, r0, sp, asr r0
    1f3c:	00000000 	andeq	r0, r0, r0
    1f40:	ee000100 	adfs	f0, f0, f0
    1f44:	f6000001 			; <UNDEFINED> instruction: 0xf6000001
    1f48:	02000001 	andeq	r0, r0, #1
    1f4c:	009f3300 	addseq	r3, pc, r0, lsl #6
    1f50:	00000000 	andeq	r0, r0, r0
    1f54:	20000000 	andcs	r0, r0, r0
    1f58:	24000001 	strcs	r0, [r0], #-1
    1f5c:	02000001 	andeq	r0, r0, #1
    1f60:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
    1f64:	70000001 	andvc	r0, r0, r1
    1f68:	02000001 	andeq	r0, r0, #1
    1f6c:	70207d00 	eorvc	r7, r0, r0, lsl #26
    1f70:	76000001 	strvc	r0, [r0], -r1
    1f74:	02000001 	andeq	r0, r0, #1
    1f78:	76007d00 	strvc	r7, [r0], -r0, lsl #26
    1f7c:	c0000001 	andgt	r0, r0, r1
    1f80:	02000001 	andeq	r0, r0, #1
    1f84:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    1f90:	20000000 	andcs	r0, r0, r0
    1f94:	2d000001 	stccs	0, cr0, [r0, #-4]
    1f98:	01000001 	tsteq	r0, r1
    1f9c:	012d5000 			; <UNDEFINED> instruction: 0x012d5000
    1fa0:	01c00000 	biceq	r0, r0, r0
    1fa4:	00040000 	andeq	r0, r4, r0
    1fa8:	9f5001f3 	svcls	0x005001f3
	...
    1fbc:	01200000 			; <UNDEFINED> instruction: 0x01200000
    1fc0:	01460000 	mrseq	r0, (UNDEF: 70)
    1fc4:	00010000 	andeq	r0, r1, r0
    1fc8:	00014651 	andeq	r4, r1, r1, asr r6
    1fcc:	00017000 	andeq	r7, r1, r0
    1fd0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
    1fd4:	00000170 	andeq	r0, r0, r0, ror r1
    1fd8:	00000176 	andeq	r0, r0, r6, ror r1
    1fdc:	01f30004 	mvnseq	r0, r4
    1fe0:	01769f51 	cmneq	r6, r1, asr pc
    1fe4:	01ac0000 			; <UNDEFINED> instruction: 0x01ac0000
    1fe8:	00010000 	andeq	r0, r1, r0
    1fec:	0001ac55 	andeq	sl, r1, r5, asr ip
    1ff0:	0001c000 	andeq	ip, r1, r0
    1ff4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2008:	01200000 			; <UNDEFINED> instruction: 0x01200000
    200c:	013e0000 	teqeq	lr, r0
    2010:	00010000 	andeq	r0, r1, r0
    2014:	00013e52 	andeq	r3, r1, r2, asr lr
    2018:	00017000 	andeq	r7, r1, r0
    201c:	56000100 	strpl	r0, [r0], -r0, lsl #2
    2020:	00000170 	andeq	r0, r0, r0, ror r1
    2024:	00000176 	andeq	r0, r0, r6, ror r1
    2028:	01f30004 	mvnseq	r0, r4
    202c:	01769f52 	cmneq	r6, r2, asr pc
    2030:	01ac0000 			; <UNDEFINED> instruction: 0x01ac0000
    2034:	00010000 	andeq	r0, r1, r0
    2038:	0001ac56 	andeq	sl, r1, r6, asr ip
    203c:	0001c000 	andeq	ip, r1, r0
    2040:	52000100 	andpl	r0, r0, #0, 2
	...
    204c:	012e0000 			; <UNDEFINED> instruction: 0x012e0000
    2050:	01320000 	teqeq	r2, r0
    2054:	00070000 	andeq	r0, r7, r0
    2058:	7003ff0a 	andvc	pc, r3, sl, lsl #30
    205c:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
    2070:	62000000 	andvs	r0, r0, #0
    2074:	70000001 	andvc	r0, r0, r1
    2078:	01000001 	tsteq	r0, r1
    207c:	01705900 	cmneq	r0, r0, lsl #18
    2080:	01720000 	cmneq	r2, r0
    2084:	00010000 	andeq	r0, r1, r0
    2088:	00017651 	andeq	r7, r1, r1, asr r6
    208c:	00019600 	andeq	r9, r1, r0, lsl #12
    2090:	59000100 	stmdbpl	r0, {r8}
    2094:	00000196 	muleq	r0, r6, r1
    2098:	0000019a 	muleq	r0, sl, r1
    209c:	017a0003 	cmneq	sl, r3
    20a0:	00019a9f 	muleq	r1, pc, sl	; <UNPREDICTABLE>
    20a4:	00019c00 	andeq	r9, r1, r0, lsl #24
    20a8:	79000300 	stmdbvc	r0, {r8, r9}
    20ac:	019c9f01 	orrseq	r9, ip, r1, lsl #30
    20b0:	01ac0000 			; <UNDEFINED> instruction: 0x01ac0000
    20b4:	00010000 	andeq	r0, r1, r0
    20b8:	00000059 	andeq	r0, r0, r9, asr r0
	...
    20c4:	62000000 	andvs	r0, r0, #0
    20c8:	75000001 	strvc	r0, [r0, #-1]
    20cc:	01000001 	tsteq	r0, r1
    20d0:	01765300 	cmneq	r6, r0, lsl #6
    20d4:	01810000 	orreq	r0, r1, r0
    20d8:	00010000 	andeq	r0, r1, r0
    20dc:	00019653 	andeq	r9, r1, r3, asr r6
    20e0:	0001a500 	andeq	sl, r1, r0, lsl #10
    20e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    20f0:	000000e0 	andeq	r0, r0, r0, ror #1
    20f4:	000000e2 	andeq	r0, r0, r2, ror #1
    20f8:	007d0002 	rsbseq	r0, sp, r2
    20fc:	000000e2 	andeq	r0, r0, r2, ror #1
    2100:	000000fe 	strdeq	r0, [r0], -lr
    2104:	087d0002 	ldmdaeq	sp!, {r1}^
    2108:	000000fe 	strdeq	r0, [r0], -lr
    210c:	0000010a 	andeq	r0, r0, sl, lsl #2
    2110:	007d0002 	rsbseq	r0, sp, r2
	...
    211c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2120:	000000b2 	strheq	r0, [r0], -r2
    2124:	007d0002 	rsbseq	r0, sp, r2
    2128:	000000b2 	strheq	r0, [r0], -r2
    212c:	000000e0 	andeq	r0, r0, r0, ror #1
    2130:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2144:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2148:	000000ce 	andeq	r0, r0, lr, asr #1
    214c:	ce500001 	cdpgt	0, 5, cr0, cr0, cr1, {0}
    2150:	d6000000 	strle	r0, [r0], -r0
    2154:	04000000 	streq	r0, [r0], #-0
    2158:	5001f300 	andpl	pc, r1, r0, lsl #6
    215c:	0000d69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    2160:	0000d800 	andeq	sp, r0, r0, lsl #16
    2164:	50000100 	andpl	r0, r0, r0, lsl #2
    2168:	000000d8 	ldrdeq	r0, [r0], -r8
    216c:	000000e0 	andeq	r0, r0, r0, ror #1
    2170:	01f30004 	mvnseq	r0, r4
    2174:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    2184:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2188:	000000cc 	andeq	r0, r0, ip, asr #1
    218c:	cc510001 	mrrcgt	0, 0, r0, r1, cr1
    2190:	d6000000 	strle	r0, [r0], -r0
    2194:	04000000 	streq	r0, [r0], #-0
    2198:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    219c:	0000d69f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    21a0:	0000e000 	andeq	lr, r0, r0
    21a4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    21b4:	00b00000 	adcseq	r0, r0, r0
    21b8:	00d10000 	sbcseq	r0, r1, r0
    21bc:	00010000 	andeq	r0, r1, r0
    21c0:	0000d152 	andeq	sp, r0, r2, asr r1
    21c4:	0000d600 	andeq	sp, r0, r0, lsl #12
    21c8:	f3000400 	vshl.u8	d0, d0, d0
    21cc:	d69f5201 	ldrle	r5, [pc], r1, lsl #4
    21d0:	e0000000 	and	r0, r0, r0
    21d4:	01000000 	mrseq	r0, (UNDEF: 0)
    21d8:	00005200 	andeq	r5, r0, r0, lsl #4
    21dc:	00000000 	andeq	r0, r0, r0
    21e0:	00010000 	andeq	r0, r1, r0
    21e4:	000000ca 	andeq	r0, r0, sl, asr #1
    21e8:	000000d2 	ldrdeq	r0, [r0], -r2
    21ec:	1a030006 	bne	c220c <__Stack_Size+0xc120c>
    21f0:	9f200000 	svcls	0x00200000
	...
    21fc:	00ca0001 	sbceq	r0, sl, r1
    2200:	00d20000 	sbcseq	r0, r2, r0
    2204:	00020000 	andeq	r0, r2, r0
    2208:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    2218:	00840000 	addeq	r0, r4, r0
    221c:	009e0000 	addseq	r0, lr, r0
    2220:	00010000 	andeq	r0, r1, r0
    2224:	00009e50 	andeq	r9, r0, r0, asr lr
    2228:	0000a600 	andeq	sl, r0, r0, lsl #12
    222c:	f3000400 	vshl.u8	d0, d0, d0
    2230:	a69f5001 	ldrge	r5, [pc], r1
    2234:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    2238:	01000000 	mrseq	r0, (UNDEF: 0)
    223c:	00a85000 	adceq	r5, r8, r0
    2240:	00b00000 	adcseq	r0, r0, r0
    2244:	00040000 	andeq	r0, r4, r0
    2248:	9f5001f3 	svcls	0x005001f3
	...
    2254:	00000050 	andeq	r0, r0, r0, asr r0
    2258:	00000052 	andeq	r0, r0, r2, asr r0
    225c:	007d0002 	rsbseq	r0, sp, r2
    2260:	00000052 	andeq	r0, r0, r2, asr r0
    2264:	00000084 	andeq	r0, r0, r4, lsl #1
    2268:	107d0002 	rsbsne	r0, sp, r2
	...
    2278:	00010100 	andeq	r0, r1, r0, lsl #2
    227c:	00000050 	andeq	r0, r0, r0, asr r0
    2280:	00000057 	andeq	r0, r0, r7, asr r0
    2284:	57500001 	ldrbpl	r0, [r0, -r1]
    2288:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    228c:	01000000 	mrseq	r0, (UNDEF: 0)
    2290:	00785400 	rsbseq	r5, r8, r0, lsl #8
    2294:	00780000 	rsbseq	r0, r8, r0
    2298:	00030000 	andeq	r0, r3, r0
    229c:	789f7f74 	ldmvc	pc, {r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    22a0:	84000000 	strhi	r0, [r0], #-0
    22a4:	01000000 	mrseq	r0, (UNDEF: 0)
    22a8:	00005400 	andeq	r5, r0, r0, lsl #8
    22ac:	00000000 	andeq	r0, r0, r0
    22b0:	03000000 	movweq	r0, #0
    22b4:	00500003 	subseq	r0, r0, r3
    22b8:	00640000 	rsbeq	r0, r4, r0
    22bc:	00010000 	andeq	r0, r1, r0
    22c0:	00006451 	andeq	r6, r0, r1, asr r4
    22c4:	00008400 	andeq	r8, r0, r0, lsl #8
    22c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    22d4:	00640002 	rsbeq	r0, r4, r2
    22d8:	00660000 	rsbeq	r0, r6, r0
    22dc:	00010000 	andeq	r0, r1, r0
    22e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    22ec:	00006400 	andeq	r6, r0, r0, lsl #8
    22f0:	00007400 	andeq	r7, r0, r0, lsl #8
    22f4:	53000100 	movwpl	r0, #256	; 0x100
    22f8:	0000007c 	andeq	r0, r0, ip, ror r0
    22fc:	00000084 	andeq	r0, r0, r4, lsl #1
    2300:	00530001 	subseq	r0, r3, r1
    2304:	00000000 	andeq	r0, r0, r0
    2308:	14000000 	strne	r0, [r0], #-0
    230c:	16000000 	strne	r0, [r0], -r0
    2310:	02000000 	andeq	r0, r0, #0
    2314:	16007d00 	strne	r7, [r0], -r0, lsl #26
    2318:	50000000 	andpl	r0, r0, r0
    231c:	02000000 	andeq	r0, r0, #0
    2320:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    2330:	14000101 	strne	r0, [r0], #-257	; 0xfffffeff
    2334:	21000000 	mrscs	r0, (UNDEF: 0)
    2338:	01000000 	mrseq	r0, (UNDEF: 0)
    233c:	00215000 	eoreq	r5, r1, r0
    2340:	003e0000 	eorseq	r0, lr, r0
    2344:	00010000 	andeq	r0, r1, r0
    2348:	00003e55 	andeq	r3, r0, r5, asr lr
    234c:	00004800 	andeq	r4, r0, r0, lsl #16
    2350:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    2354:	00489f7f 	subeq	r9, r8, pc, ror pc
    2358:	00500000 	subseq	r0, r0, r0
    235c:	00010000 	andeq	r0, r1, r0
    2360:	00000055 	andeq	r0, r0, r5, asr r0
	...
    236c:	00001400 	andeq	r1, r0, r0, lsl #8
    2370:	00003200 	andeq	r3, r0, r0, lsl #4
    2374:	51000100 	mrspl	r0, (UNDEF: 16)
    2378:	00000032 	andeq	r0, r0, r2, lsr r0
    237c:	00000050 	andeq	r0, r0, r0, asr r0
    2380:	01f30004 	mvnseq	r0, r4
    2384:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2390:	001e0000 	andseq	r0, lr, r0
    2394:	00420000 	subeq	r0, r2, r0
    2398:	00010000 	andeq	r0, r1, r0
    239c:	00004852 	andeq	r4, r0, r2, asr r8
    23a0:	00005000 	andeq	r5, r0, r0
    23a4:	52000100 	andpl	r0, r0, #0, 2
	...
    23b0:	00010100 	andeq	r0, r1, r0, lsl #2
    23b4:	0000002a 	andeq	r0, r0, sl, lsr #32
    23b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    23bc:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    23c0:	32000000 	andcc	r0, r0, #0
    23c4:	01000000 	mrseq	r0, (UNDEF: 0)
    23c8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    23d8:	010a0000 	mrseq	r0, (UNDEF: 10)
    23dc:	01100000 	tsteq	r0, r0
    23e0:	00010000 	andeq	r0, r1, r0
    23e4:	00011050 	andeq	r1, r1, r0, asr r0
    23e8:	00011400 	andeq	r1, r1, r0, lsl #8
    23ec:	f3000400 	vshl.u8	d0, d0, d0
    23f0:	149f5001 	ldrne	r5, [pc], #1	; 23f8 <__Stack_Size+0x13f8>
    23f4:	16000001 	strne	r0, [r0], -r1
    23f8:	01000001 	tsteq	r0, r1
    23fc:	01165000 	tsteq	r6, r0
    2400:	01200000 			; <UNDEFINED> instruction: 0x01200000
    2404:	00040000 	andeq	r0, r4, r0
    2408:	9f5001f3 	svcls	0x005001f3
	...
    2414:	010e0001 	tsteq	lr, r1
    2418:	01100000 	tsteq	r0, r0
    241c:	00010000 	andeq	r0, r1, r0
    2420:	00000050 	andeq	r0, r0, r0, asr r0
    2424:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
   4:	0800014e 	stmdaeq	r0, {r1, r2, r3, r6, r8}
   8:	08000150 	stmdaeq	r0, {r4, r6, r8}
   c:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  10:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  14:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
	...
  20:	08001588 	stmdaeq	r0, {r3, r7, r8, sl, ip}
  24:	0800158a 	stmdaeq	r0, {r1, r3, r7, r8, sl, ip}
  28:	080015ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, ip}
  2c:	080015da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl, ip}
	...
  38:	0800158c 	stmdaeq	r0, {r2, r3, r7, r8, sl, ip}
  3c:	0800158e 	stmdaeq	r0, {r1, r2, r3, r7, r8, sl, ip}
  40:	080015da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl, ip}
  44:	080015e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl, ip}
	...
  50:	08000120 	stmdaeq	r0, {r5, r8}
  54:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  58:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
  5c:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
	...
  68:	00000040 	andeq	r0, r0, r0, asr #32
  6c:	00000040 	andeq	r0, r0, r0, asr #32
  70:	00000042 	andeq	r0, r0, r2, asr #32
  74:	00000048 	andeq	r0, r0, r8, asr #32
	...
  80:	0000005a 	andeq	r0, r0, sl, asr r0
  84:	0000005c 	andeq	r0, r0, ip, asr r0
  88:	00000060 	andeq	r0, r0, r0, rrx
  8c:	00000060 	andeq	r0, r0, r0, rrx
  90:	00000064 	andeq	r0, r0, r4, rrx
  94:	00000076 	andeq	r0, r0, r6, ror r0
	...
  a0:	0000032a 	andeq	r0, r0, sl, lsr #6
  a4:	00000330 	andeq	r0, r0, r0, lsr r3
  a8:	00000330 	andeq	r0, r0, r0, lsr r3
  ac:	00000380 	andeq	r0, r0, r0, lsl #7
	...
  b8:	000003c4 	andeq	r0, r0, r4, asr #7
  bc:	000003c4 	andeq	r0, r0, r4, asr #7
  c0:	000003c8 	andeq	r0, r0, r8, asr #7
  c4:	000003da 	ldrdeq	r0, [r0], -sl
	...
  d0:	0000046e 	andeq	r0, r0, lr, ror #8
  d4:	00000470 	andeq	r0, r0, r0, ror r4
  d8:	0000048a 	andeq	r0, r0, sl, lsl #9
  dc:	00000490 	muleq	r0, r0, r4
  e0:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
  e4:	000004c0 	andeq	r0, r0, r0, asr #9
	...
  f0:	000004ca 	andeq	r0, r0, sl, asr #9
  f4:	000004d4 	ldrdeq	r0, [r0], -r4
  f8:	000004d4 	ldrdeq	r0, [r0], -r4
  fc:	000004dc 	ldrdeq	r0, [r0], -ip
	...
 108:	00000518 	andeq	r0, r0, r8, lsl r5
 10c:	00000518 	andeq	r0, r0, r8, lsl r5
 110:	00000520 	andeq	r0, r0, r0, lsr #10
 114:	0000052c 	andeq	r0, r0, ip, lsr #10
	...
 120:	0000056e 	andeq	r0, r0, lr, ror #10
 124:	0000056e 	andeq	r0, r0, lr, ror #10
 128:	00000570 	andeq	r0, r0, r0, ror r5
 12c:	00000578 	andeq	r0, r0, r8, ror r5
	...
 138:	00000584 	andeq	r0, r0, r4, lsl #11
 13c:	00000598 	muleq	r0, r8, r5
 140:	000005a8 	andeq	r0, r0, r8, lsr #11
 144:	000005da 	ldrdeq	r0, [r0], -sl
 148:	000005de 	ldrdeq	r0, [r0], -lr
 14c:	000005fe 	strdeq	r0, [r0], -lr
	...
 158:	000005c2 	andeq	r0, r0, r2, asr #11
 15c:	000005c4 	andeq	r0, r0, r4, asr #11
 160:	000005cc 	andeq	r0, r0, ip, asr #11
 164:	000005da 	ldrdeq	r0, [r0], -sl
	...
 170:	00000598 	muleq	r0, r8, r5
 174:	0000059e 	muleq	r0, lr, r5
 178:	00000630 	andeq	r0, r0, r0, lsr r6
 17c:	00000638 	andeq	r0, r0, r8, lsr r6
	...
 188:	00000606 	andeq	r0, r0, r6, lsl #12
 18c:	0000060c 	andeq	r0, r0, ip, lsl #12
 190:	0000060e 	andeq	r0, r0, lr, lsl #12
 194:	00000612 	andeq	r0, r0, r2, lsl r6
	...
 1a4:	00000004 	andeq	r0, r0, r4
 1a8:	00000006 	andeq	r0, r0, r6
 1ac:	00000008 	andeq	r0, r0, r8
 1b0:	0000000a 	andeq	r0, r0, sl
 1b4:	00000012 	andeq	r0, r0, r2, lsl r0
 1b8:	00000014 	andeq	r0, r0, r4, lsl r0
 1bc:	0000003a 	andeq	r0, r0, sl, lsr r0
	...
 1c8:	000001ca 	andeq	r0, r0, sl, asr #3
 1cc:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 1d0:	0000020e 	andeq	r0, r0, lr, lsl #4
 1d4:	00000210 	andeq	r0, r0, r0, lsl r2
	...
 1e0:	00000202 	andeq	r0, r0, r2, lsl #4
 1e4:	00000204 	andeq	r0, r0, r4, lsl #4
 1e8:	00000206 	andeq	r0, r0, r6, lsl #4
 1ec:	00000208 	andeq	r0, r0, r8, lsl #4
	...
 1f8:	00000376 	andeq	r0, r0, r6, ror r3
 1fc:	00000378 	andeq	r0, r0, r8, ror r3
 200:	0000037a 	andeq	r0, r0, sl, ror r3
 204:	00000382 	andeq	r0, r0, r2, lsl #7
	...
 210:	000003a4 	andeq	r0, r0, r4, lsr #7
 214:	000003a4 	andeq	r0, r0, r4, lsr #7
 218:	000003a6 	andeq	r0, r0, r6, lsr #7
 21c:	000003ac 	andeq	r0, r0, ip, lsr #7
	...
 228:	00000416 	andeq	r0, r0, r6, lsl r4
 22c:	00000416 	andeq	r0, r0, r6, lsl r4
 230:	00000418 	andeq	r0, r0, r8, lsl r4
 234:	0000041e 	andeq	r0, r0, lr, lsl r4
	...
 240:	000004ae 	andeq	r0, r0, lr, lsr #9
 244:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
 248:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
 24c:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
	...
 258:	0000005c 	andeq	r0, r0, ip, asr r0
 25c:	00000062 	andeq	r0, r0, r2, rrx
 260:	00000066 	andeq	r0, r0, r6, rrx
 264:	0000006a 	andeq	r0, r0, sl, rrx
	...
 270:	000000f4 	strdeq	r0, [r0], -r4
 274:	000000f8 	strdeq	r0, [r0], -r8
 278:	000000fe 	strdeq	r0, [r0], -lr
 27c:	00000102 	andeq	r0, r0, r2, lsl #2
	...
 288:	00000122 	andeq	r0, r0, r2, lsr #2
 28c:	00000126 	andeq	r0, r0, r6, lsr #2
 290:	00000148 	andeq	r0, r0, r8, asr #2
 294:	0000014c 	andeq	r0, r0, ip, asr #2
	...
 2a0:	000001ce 	andeq	r0, r0, lr, asr #3
 2a4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 2a8:	000001f6 	strdeq	r0, [r0], -r6
 2ac:	00000218 	andeq	r0, r0, r8, lsl r2
	...
 2b8:	000002a4 	andeq	r0, r0, r4, lsr #5
 2bc:	000002a6 	andeq	r0, r0, r6, lsr #5
 2c0:	000002a8 	andeq	r0, r0, r8, lsr #5
 2c4:	000002aa 	andeq	r0, r0, sl, lsr #5
 2c8:	000002ac 	andeq	r0, r0, ip, lsr #5
 2cc:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
	...
 2d8:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
 2dc:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
 2e0:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
 2e4:	000002c4 	andeq	r0, r0, r4, asr #5
	...
 2f0:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
 2f4:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
 2f8:	000002f2 	strdeq	r0, [r0], -r2
 2fc:	000002f4 	strdeq	r0, [r0], -r4
 300:	00000302 	andeq	r0, r0, r2, lsl #6
 304:	00000304 	andeq	r0, r0, r4, lsl #6
	...
 310:	0000038c 	andeq	r0, r0, ip, lsl #7
 314:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
 318:	000003e2 	andeq	r0, r0, r2, ror #7
 31c:	00000424 	andeq	r0, r0, r4, lsr #8
	...
 328:	00000478 	andeq	r0, r0, r8, ror r4
 32c:	0000047c 	andeq	r0, r0, ip, ror r4
 330:	00000538 	andeq	r0, r0, r8, lsr r5
 334:	00000540 	andeq	r0, r0, r0, asr #10
	...
 340:	0000047c 	andeq	r0, r0, ip, ror r4
 344:	000004e6 	andeq	r0, r0, r6, ror #9
 348:	0000054a 	andeq	r0, r0, sl, asr #10
 34c:	0000058e 	andeq	r0, r0, lr, lsl #11
	...
 358:	000004c2 	andeq	r0, r0, r2, asr #9
 35c:	000004cc 	andeq	r0, r0, ip, asr #9
 360:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 364:	000004d2 	ldrdeq	r0, [r0], -r2
	...
 370:	0000056a 	andeq	r0, r0, sl, ror #10
 374:	0000056c 	andeq	r0, r0, ip, ror #10
 378:	0000056e 	andeq	r0, r0, lr, ror #10
 37c:	00000570 	andeq	r0, r0, r0, ror r5
	...
 388:	0000010a 	andeq	r0, r0, sl, lsl #2
 38c:	0000010c 	andeq	r0, r0, ip, lsl #2
 390:	0000010e 	andeq	r0, r0, lr, lsl #2
 394:	00000110 	andeq	r0, r0, r0, lsl r1
	...
