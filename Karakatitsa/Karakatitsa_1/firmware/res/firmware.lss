
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	200027ff 	strdcs	r2, [r0], -pc	@ <UNPREDICTABLE>
 8000004:	080016b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, sl, ip}
 8000008:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800000c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000010:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000014:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000018:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
	...
 800002c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000030:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800003c:	08000377 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9}
 8000040:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000044:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000048:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800004c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000050:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000054:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000058:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800005c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000060:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000064:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000068:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800006c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000070:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000074:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000078:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800007c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000080:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000084:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000088:	08000a7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9, fp}
 800008c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000090:	08000671 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl}
 8000094:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 8000098:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 800009c:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000a0:	00000000 	andeq	r0, r0, r0
 80000a4:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000a8:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000ac:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000b0:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000b4:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000b8:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000bc:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000c0:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000c4:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000c8:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000cc:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000d0:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000d4:	08000f0f 	stmdaeq	r0, {r0, r1, r2, r3, r8, r9, sl, fp}
 80000d8:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000dc:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000e0:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000e4:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000e8:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000ec:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
 80000f0:	08001701 	stmdaeq	r0, {r0, r8, r9, sl, ip}
	...
 8000138:	f108f85f 			@ <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800013c <init32-0x14>:
 800013c:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000024 	andcs	r0, r0, r4, lsr #32
 8000148:	20000024 	andcs	r0, r0, r4, lsr #32
 800014c:	200006fc 	strdcs	r0, [r0], -ip

08000150 <init32>:
#define CLOCK_LSI 3
//#define CLOCK_HSE 1
#define CLOCK_FAIL_LSI -4

void init32(){
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000150:	4b21      	ldr	r3, [pc, #132]	@ (80001d8 <init32+0x88>)
  PWR->CR |= PWR_CR_DBP;
 8000152:	4922      	ldr	r1, [pc, #136]	@ (80001dc <init32+0x8c>)
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000154:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000156:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800015a:	625a      	str	r2, [r3, #36]	@ 0x24
  PWR->CR |= PWR_CR_DBP;
 800015c:	680a      	ldr	r2, [r1, #0]
 800015e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000162:	600a      	str	r2, [r1, #0]
  
  RCC->CSR |= RCC_CSR_RTCRST;
 8000164:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000166:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800016a:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->CSR &=~RCC_CSR_RTCRST;
 800016c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800016e:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000172:	635a      	str	r2, [r3, #52]	@ 0x34
  
  RCC->CSR |= RCC_CSR_LSEON; while(!(RCC->CSR & RCC_CSR_LSERDY)){}
 8000174:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000176:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800017a:	635a      	str	r2, [r3, #52]	@ 0x34
 800017c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800017e:	0591      	lsls	r1, r2, #22
 8000180:	d5fc      	bpl.n	800017c <init32+0x2c>
  //RCC->CSR |= RCC_CSR_LSION; while(!(RCC->CSR & RCC_CSR_LSIRDY)){}
  
  RCC->CSR &=~RCC_CSR_RTCSEL;
 8000182:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000184:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8000188:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->CSR |= RCC_CSR_RTCSEL_LSE; // NOCLOCK / LSI / LSE / HSE
 800018a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800018c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8000190:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->CSR |= RCC_CSR_RTCEN;
 8000192:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000194:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8000198:	635a      	str	r2, [r3, #52]	@ 0x34
  
  RTC->WPR = 0xCA;
 800019a:	22ca      	movs	r2, #202	@ 0xca
 800019c:	4b10      	ldr	r3, [pc, #64]	@ (80001e0 <init32+0x90>)
 800019e:	625a      	str	r2, [r3, #36]	@ 0x24
  RTC->WPR = 0x53;
 80001a0:	2253      	movs	r2, #83	@ 0x53
 80001a2:	625a      	str	r2, [r3, #36]	@ 0x24
  RTC->ISR |= RTC_ISR_INIT;
 80001a4:	68da      	ldr	r2, [r3, #12]
 80001a6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80001aa:	60da      	str	r2, [r3, #12]
  while(!(RTC->ISR & RTC_ISR_INITF)){}
 80001ac:	68da      	ldr	r2, [r3, #12]
 80001ae:	0652      	lsls	r2, r2, #25
 80001b0:	d5fc      	bpl.n	80001ac <init32+0x5c>
  //LSE
  RTC->PRER &=~(RTC_PRER_PREDIV_A | RTC_PRER_PREDIV_S);
 80001b2:	6919      	ldr	r1, [r3, #16]
 80001b4:	4a0b      	ldr	r2, [pc, #44]	@ (80001e4 <init32+0x94>)
 80001b6:	400a      	ands	r2, r1
 80001b8:	611a      	str	r2, [r3, #16]
  RTC->PRER |= 255;
 80001ba:	691a      	ldr	r2, [r3, #16]
 80001bc:	f042 02ff 	orr.w	r2, r2, #255	@ 0xff
 80001c0:	611a      	str	r2, [r3, #16]
  RTC->PRER |= (127 << 16);
 80001c2:	691a      	ldr	r2, [r3, #16]
 80001c4:	f442 02fe 	orr.w	r2, r2, #8323072	@ 0x7f0000
 80001c8:	611a      	str	r2, [r3, #16]
  //RTC->PRER = (127 << 16) | 249; //LSI
  //RTC->TR &=~RTC_TR_SU;
  //RTC->DR = 0;
  //RTC->DR &=~RTC_DR_DU;
  RTC->ISR &=~RTC_ISR_INIT;
 80001ca:	68da      	ldr	r2, [r3, #12]
 80001cc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80001d0:	60da      	str	r2, [r3, #12]
  RTC->WPR = 0xFF;
 80001d2:	22ff      	movs	r2, #255	@ 0xff
 80001d4:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80001d6:	4770      	bx	lr
 80001d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80001dc:	40007000 	andmi	r7, r0, r0
 80001e0:	40002800 	andmi	r2, r0, r0, lsl #16
 80001e4:	ff808000 			@ <UNDEFINED> instruction: 0xff808000

080001e8 <clock_HS>:
int8_t clock_HS(int8_t quartz){
  uint16_t i;
  uint32_t tmp;
  
  //clock by MSI
  tmp = RCC->CFGR;
 80001e8:	4b57      	ldr	r3, [pc, #348]	@ (8000348 <clock_HS+0x160>)
 80001ea:	689a      	ldr	r2, [r3, #8]
  tmp &=~RCC_CFGR_SW;
 80001ec:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_MSI; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	f640 72ff 	movw	r2, #4095	@ 0xfff
int8_t clock_HS(int8_t quartz){
 80001f6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
  for(i=0;i<0x0FFF;i++){
    clock_sleep(1000);
 80001fa:	bf00      	nop
 80001fc:	3901      	subs	r1, #1
 80001fe:	d1fc      	bne.n	80001fa <clock_HS+0x12>
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_MSI){i=0x1FFF; break;}
 8000200:	6899      	ldr	r1, [r3, #8]
 8000202:	f011 0f0c 	tst.w	r1, #12
 8000206:	d05c      	beq.n	80002c2 <clock_HS+0xda>
  for(i=0;i<0x0FFF;i++){
 8000208:	3a01      	subs	r2, #1
 800020a:	b292      	uxth	r2, r2
 800020c:	2a00      	cmp	r2, #0
 800020e:	d1f2      	bne.n	80001f6 <clock_HS+0xe>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_MSI;
 8000210:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000214:	4770      	bx	lr
    }
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
  }
  
  // configure flash
  FLASH->ACR |= FLASH_ACR_ACC64;
 8000216:	4b4d      	ldr	r3, [pc, #308]	@ (800034c <clock_HS+0x164>)
  FLASH->ACR |= FLASH_ACR_LATENCY;
  FLASH->ACR |= FLASH_ACR_PRFTEN;
  
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
  tmp = PWR->CR;
 8000218:	494d      	ldr	r1, [pc, #308]	@ (8000350 <clock_HS+0x168>)
  FLASH->ACR |= FLASH_ACR_ACC64;
 800021a:	681a      	ldr	r2, [r3, #0]
 800021c:	f042 0204 	orr.w	r2, r2, #4
 8000220:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY;
 8000222:	681a      	ldr	r2, [r3, #0]
 8000224:	f042 0201 	orr.w	r2, r2, #1
 8000228:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_ACR_PRFTEN;
 800022a:	681a      	ldr	r2, [r3, #0]
 800022c:	f042 0202 	orr.w	r2, r2, #2
 8000230:	601a      	str	r2, [r3, #0]
  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000232:	4a45      	ldr	r2, [pc, #276]	@ (8000348 <clock_HS+0x160>)
 8000234:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8000236:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800023a:	6253      	str	r3, [r2, #36]	@ 0x24
  tmp = PWR->CR;
 800023c:	680b      	ldr	r3, [r1, #0]
  tmp &=~PWR_CR_VOS;
 800023e:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
  tmp |= PWR_CR_VOS_0;
 8000242:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
  PWR->CR = tmp;
 8000246:	600b      	str	r3, [r1, #0]

  
  tmp = RCC->CFGR;
 8000248:	6893      	ldr	r3, [r2, #8]
  tmp &=~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL | RCC_CFGR_PLLDIV);
 800024a:	f423 037d 	bic.w	r3, r3, #16580608	@ 0xfd0000
  
  if(quartz){
 800024e:	b1d0      	cbz	r0, 8000286 <clock_HS+0x9e>
    tmp |= RCC_CFGR_PLLSRC;  //PLL src = HSE
    tmp |= RCC_CFGR_PLLMUL12;//PLLCLK = F_HSE * 12 = 96 MHz
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSE * 12 / 3 = 32 MHz
 8000250:	f443 0311 	orr.w	r3, r3, #9502720	@ 0x910000
  tmp |= RCC_CFGR_HPRE_DIV1;
  //AHB = PLLCLK/HPRE = 32 MHz
  tmp &=~RCC_CFGR_PPRE2;
  tmp |= RCC_CFGR_PPRE2_DIV1;
  //APB2 = HCLK/PPRE2 = 32 MHz
  tmp &=~RCC_CFGR_PPRE1;
 8000254:	493f      	ldr	r1, [pc, #252]	@ (8000354 <clock_HS+0x16c>)
 8000256:	4019      	ands	r1, r3
  tmp |= RCC_CFGR_PPRE1_DIV1;
  //APB1 = HCLK/PPRE1 = 32 MHz
  RCC->CFGR = tmp;
 8000258:	6091      	str	r1, [r2, #8]
  
  RCC->CR |= RCC_CR_PLLON;
 800025a:	6813      	ldr	r3, [r2, #0]
 800025c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000260:	6013      	str	r3, [r2, #0]
 8000262:	f640 73ff 	movw	r3, #4095	@ 0xfff
  for(i=0;i<0x0FFF;i++){
    clock_sleep(1000);
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000266:	4a38      	ldr	r2, [pc, #224]	@ (8000348 <clock_HS+0x160>)
    clock_sleep(1000);
 8000268:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800026c:	bf00      	nop
 800026e:	3901      	subs	r1, #1
 8000270:	d1fc      	bne.n	800026c <clock_HS+0x84>
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFF; break;}
 8000272:	6811      	ldr	r1, [r2, #0]
 8000274:	0189      	lsls	r1, r1, #6
 8000276:	d41c      	bmi.n	80002b2 <clock_HS+0xca>
  for(i=0;i<0x0FFF;i++){
 8000278:	3b01      	subs	r3, #1
 800027a:	b29b      	uxth	r3, r3
 800027c:	2b00      	cmp	r3, #0
 800027e:	d1f3      	bne.n	8000268 <clock_HS+0x80>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL; //can not enable PLL
 8000280:	f06f 0002 	mvn.w	r0, #2
 8000284:	4770      	bx	lr
    tmp |= RCC_CFGR_PLLDIV3; //PLLCLK = F_HSI * 6 / 3 = 32 MHz
 8000286:	f443 0308 	orr.w	r3, r3, #8912896	@ 0x880000
 800028a:	e7e3      	b.n	8000254 <clock_HS+0x6c>
  tmp = RCC->CFGR;
  tmp &=~RCC_CFGR_SW;
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
  RCC->CFGR = tmp;
  for(i=0;i<0x0FFF;i++){
    clock_sleep(1000);
 800028c:	bf00      	nop
 800028e:	3a01      	subs	r2, #1
 8000290:	d1fc      	bne.n	800028c <clock_HS+0xa4>
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 8000292:	688a      	ldr	r2, [r1, #8]
 8000294:	f002 020c 	and.w	r2, r2, #12
 8000298:	2a0c      	cmp	r2, #12
 800029a:	d006      	beq.n	80002aa <clock_HS+0xc2>
  for(i=0;i<0x0FFF;i++){
 800029c:	3b01      	subs	r3, #1
 800029e:	b29b      	uxth	r3, r3
 80002a0:	2b00      	cmp	r3, #0
 80002a2:	d0ed      	beq.n	8000280 <clock_HS+0x98>
  RCC->CR |= RCC_CR_PLLON;
 80002a4:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80002a8:	e7f0      	b.n	800028c <clock_HS+0xa4>
  }
  if(i != 0x1FFF)return CLOCK_FAIL_PLL;
  
  if(quartz)return CLOCK_HSE;
 80002aa:	3800      	subs	r0, #0
 80002ac:	bf18      	it	ne
 80002ae:	2001      	movne	r0, #1
    else return CLOCK_HSI;
}
 80002b0:	4770      	bx	lr
  tmp = RCC->CFGR;
 80002b2:	6893      	ldr	r3, [r2, #8]
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFF; break;}
 80002b4:	4924      	ldr	r1, [pc, #144]	@ (8000348 <clock_HS+0x160>)
  tmp |= RCC_CFGR_SW_PLL; // MSI / HSI / HSE / PLL
 80002b6:	f043 0303 	orr.w	r3, r3, #3
  RCC->CFGR = tmp;
 80002ba:	6093      	str	r3, [r2, #8]
 80002bc:	f640 73ff 	movw	r3, #4095	@ 0xfff
 80002c0:	e7f0      	b.n	80002a4 <clock_HS+0xbc>
  RCC->CR &=~ RCC_CR_HSEON;
 80002c2:	681a      	ldr	r2, [r3, #0]
 80002c4:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80002c8:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSION;
 80002ca:	681a      	ldr	r2, [r3, #0]
 80002cc:	f022 0201 	bic.w	r2, r2, #1
 80002d0:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_HSEBYP;
 80002d2:	681a      	ldr	r2, [r3, #0]
 80002d4:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80002d8:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_PLLON;
 80002da:	681a      	ldr	r2, [r3, #0]
 80002dc:	f022 7280 	bic.w	r2, r2, #16777216	@ 0x1000000
 80002e0:	601a      	str	r2, [r3, #0]
  RCC->CR &=~ RCC_CR_RTCPRE;
 80002e2:	681a      	ldr	r2, [r3, #0]
 80002e4:	f022 42c0 	bic.w	r2, r2, #1610612736	@ 0x60000000
 80002e8:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_RTCPRE_1; //0b00=2 MHz ; 0b01=4MHz ; 0b10=8MHz ; 0b11=16MHz
 80002ea:	681a      	ldr	r2, [r3, #0]
 80002ec:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80002f0:	601a      	str	r2, [r3, #0]
  if(quartz){
 80002f2:	b190      	cbz	r0, 800031a <clock_HS+0x132>
    RCC->CR |= RCC_CR_HSEON;
 80002f4:	681a      	ldr	r2, [r3, #0]
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 80002f6:	4914      	ldr	r1, [pc, #80]	@ (8000348 <clock_HS+0x160>)
    RCC->CR |= RCC_CR_HSEON;
 80002f8:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80002fc:	601a      	str	r2, [r3, #0]
 80002fe:	f640 73ff 	movw	r3, #4095	@ 0xfff
  RCC->CFGR = tmp;
 8000302:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
      clock_sleep(1000);
 8000306:	bf00      	nop
 8000308:	3a01      	subs	r2, #1
 800030a:	d1fc      	bne.n	8000306 <clock_HS+0x11e>
      if(RCC->CR & RCC_CR_HSERDY){i=0x1FFF; break;}
 800030c:	680a      	ldr	r2, [r1, #0]
 800030e:	0392      	lsls	r2, r2, #14
 8000310:	d481      	bmi.n	8000216 <clock_HS+0x2e>
    for(i=0;i<0x0FFF;i++){
 8000312:	3b01      	subs	r3, #1
 8000314:	b29b      	uxth	r3, r3
 8000316:	2b00      	cmp	r3, #0
 8000318:	d1f3      	bne.n	8000302 <clock_HS+0x11a>
    RCC->CR |= RCC_CR_HSION;
 800031a:	4a0b      	ldr	r2, [pc, #44]	@ (8000348 <clock_HS+0x160>)
 800031c:	6813      	ldr	r3, [r2, #0]
 800031e:	f043 0301 	orr.w	r3, r3, #1
 8000322:	6013      	str	r3, [r2, #0]
 8000324:	f640 73ff 	movw	r3, #4095	@ 0xfff
    RCC->CR |= RCC_CR_HSEON;
 8000328:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
      clock_sleep(1000);
 800032c:	bf00      	nop
 800032e:	3801      	subs	r0, #1
 8000330:	d1fc      	bne.n	800032c <clock_HS+0x144>
      if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 8000332:	6811      	ldr	r1, [r2, #0]
 8000334:	0789      	lsls	r1, r1, #30
 8000336:	f53f af6e 	bmi.w	8000216 <clock_HS+0x2e>
    for(i=0;i<0x0FFF;i++){
 800033a:	3b01      	subs	r3, #1
 800033c:	b29b      	uxth	r3, r3
 800033e:	2b00      	cmp	r3, #0
 8000340:	d1f2      	bne.n	8000328 <clock_HS+0x140>
    if(i != 0x1FFF)return CLOCK_FAIL_HSI;
 8000342:	f06f 0001 	mvn.w	r0, #1
 8000346:	4770      	bx	lr
 8000348:	40023800 	andmi	r3, r2, r0, lsl #16
 800034c:	40023c00 	andmi	r3, r2, r0, lsl #24
 8000350:	40007000 	andmi	r7, r0, r0
 8000354:	ff9bc00f 			@ <UNDEFINED> instruction: 0xff9bc00f

08000358 <_init>:
#include "pinmacro.h"
#include "usb_lib.h"
#include "clock.h"
#include "systick.h"

void __attribute__((weak)) _init(void){}
 8000358:	4770      	bx	lr

0800035a <SystemInit>:
void __attribute__((weak)) SystemInit(void){}
 800035a:	4770      	bx	lr

0800035c <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 800035c:	b900      	cbnz	r0, 8000360 <sleep+0x4>
}
 800035e:	4770      	bx	lr
  while(time--)asm volatile("nop");
 8000360:	bf00      	nop
 8000362:	3801      	subs	r0, #1
 8000364:	e7fa      	b.n	800035c <sleep>
 8000366:	bf00      	nop

08000368 <systick_init>:

volatile uint32_t systick_internal = 0;

void systick_init(){
  //SysTick->LOAD = F_AHB / 8 / 1000;
  SysTick->LOAD = SysTick->CALIB;
 8000368:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800036c:	69da      	ldr	r2, [r3, #28]
 800036e:	615a      	str	r2, [r3, #20]
  SysTick->CTRL = SysTick_CTRL_TICKINT | SysTick_CTRL_ENABLE;
 8000370:	2203      	movs	r2, #3
 8000372:	611a      	str	r2, [r3, #16]
}
 8000374:	4770      	bx	lr

08000376 <SysTick_Handler>:

void SysTick_Handler(){
  systick_internal++;
 8000376:	4a02      	ldr	r2, [pc, #8]	@ (8000380 <SysTick_Handler+0xa>)
 8000378:	6813      	ldr	r3, [r2, #0]
 800037a:	3301      	adds	r3, #1
 800037c:	6013      	str	r3, [r2, #0]
}
 800037e:	4770      	bx	lr
 8000380:	20000024 	andcs	r0, r0, r4, lsr #32

08000384 <endp_callback_default>:
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))void usb_class_sof(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}

static void endp_callback_default(uint8_t epnum){}
 8000384:	4770      	bx	lr
__attribute__((weak))void usb_class_init(){}
 8000386:	4770      	bx	lr

08000388 <usb_class_disconnect>:
__attribute__((weak))void usb_class_disconnect(){}
 8000388:	4770      	bx	lr
__attribute__((weak))void usb_class_poll(){}
 800038a:	4770      	bx	lr
__attribute__((weak))void usb_class_sof(){}
 800038c:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 800038e:	2000      	movs	r0, #0
 8000390:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 8000392:	2000      	movs	r0, #0
 8000394:	4770      	bx	lr

08000396 <USB_setup>:
static config_pack_t setup_packet;

//USB_PULLUP may be defined in "hardware.h"

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 8000396:	4b1d      	ldr	r3, [pc, #116]	@ (800040c <USB_setup+0x76>)
  #warning USB_PULLUP undefined
#endif

  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
  //Initialization of callback functions (thx Олег Свиридов, my_xfiles@mail.ru)
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000398:	481d      	ldr	r0, [pc, #116]	@ (8000410 <USB_setup+0x7a>)
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 800039a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800039c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80003a0:	625a      	str	r2, [r3, #36]	@ 0x24
  RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80003a2:	6a1a      	ldr	r2, [r3, #32]
 80003a4:	f042 0201 	orr.w	r2, r2, #1
 80003a8:	621a      	str	r2, [r3, #32]
  SYSCFG->PMC &=~ SYSCFG_PMC_USB_PU;
 80003aa:	4a1a      	ldr	r2, [pc, #104]	@ (8000414 <USB_setup+0x7e>)
 80003ac:	6853      	ldr	r3, [r2, #4]
 80003ae:	f023 0301 	bic.w	r3, r3, #1
 80003b2:	6053      	str	r3, [r2, #4]
  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 80003b4:	2201      	movs	r2, #1
 80003b6:	4b18      	ldr	r3, [pc, #96]	@ (8000418 <USB_setup+0x82>)
 80003b8:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 80003bc:	2308      	movs	r3, #8
 80003be:	4a17      	ldr	r2, [pc, #92]	@ (800041c <USB_setup+0x86>)
 80003c0:	f102 0120 	add.w	r1, r2, #32
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 80003c4:	3b01      	subs	r3, #1
 80003c6:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 80003ca:	f842 0b04 	str.w	r0, [r2], #4
 80003ce:	f841 0b04 	str.w	r0, [r1], #4
 80003d2:	d1f7      	bne.n	80003c4 <USB_setup+0x2e>
 80003d4:	4b12      	ldr	r3, [pc, #72]	@ (8000420 <USB_setup+0x8a>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 80003d6:	bf00      	nop
 80003d8:	3b01      	subs	r3, #1
 80003da:	d1fc      	bne.n	80003d6 <USB_setup+0x40>
  USB->CNTR   = 0;
 80003dc:	4a0e      	ldr	r2, [pc, #56]	@ (8000418 <USB_setup+0x82>)
 80003de:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
  USB->BTABLE = 0;
 80003e2:	f8a2 3050 	strh.w	r3, [r2, #80]	@ 0x50
  USB->DADDR  = 0;
 80003e6:	f8a2 304c 	strh.w	r3, [r2, #76]	@ 0x4c
  USB->ISTR   = 0;
 80003ea:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 80003ee:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80003f2:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80003f6:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80003fa:	4b0a      	ldr	r3, [pc, #40]	@ (8000424 <USB_setup+0x8e>)
 80003fc:	601a      	str	r2, [r3, #0]
  NVIC_EnableIRQ(USB_LP_IRQn);
#ifdef SYSCFG_PMC_USB_PU
  SYSCFG->PMC |= SYSCFG_PMC_USB_PU;
 80003fe:	4a05      	ldr	r2, [pc, #20]	@ (8000414 <USB_setup+0x7e>)
 8000400:	6853      	ldr	r3, [r2, #4]
 8000402:	f043 0301 	orr.w	r3, r3, #1
 8000406:	6053      	str	r3, [r2, #4]
#elif defined EXTEN_USBD_PU_EN
  EXTEN->EXTEN_CTR |= EXTEN_USBD_PU_EN;
#elif defined USB_PULLUP
  GPO_ON( USB_PULLUP );
#endif
}
 8000408:	4770      	bx	lr
 800040a:	bf00      	nop
 800040c:	40023800 	andmi	r3, r2, r0, lsl #16
 8000410:	08000385 	stmdaeq	r0, {r0, r2, r7, r8, r9}
 8000414:	40010000 	andmi	r0, r1, r0
 8000418:	40005c00 	andmi	r5, r0, r0, lsl #24
 800041c:	20000028 	andcs	r0, r0, r8, lsr #32
 8000420:	000186a0 	andeq	r8, r1, r0, lsr #13
 8000424:	e000e100 	and	lr, r0, r0, lsl #2

08000428 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000428:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 800042a:	f000 070f 	and.w	r7, r0, #15
  if(func == NULL)func = endp_callback_default;
 800042e:	4c3c      	ldr	r4, [pc, #240]	@ (8000520 <usb_ep_init+0xf8>)
  
  if(dir_in){
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000430:	ea4f 0c87 	mov.w	ip, r7, lsl #2
  if(func == NULL)func = endp_callback_default;
 8000434:	2b00      	cmp	r3, #0
 8000436:	bf14      	ite	ne
 8000438:	469e      	movne	lr, r3
 800043a:	46a6      	moveq	lr, r4
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800043c:	f10c 4480 	add.w	r4, ip, #1073741824	@ 0x40000000
 8000440:	f504 44b8 	add.w	r4, r4, #23552	@ 0x5c00
 8000444:	8823      	ldrh	r3, [r4, #0]
 8000446:	b240      	sxtb	r0, r0
  if(dir_in){
 8000448:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800044a:	bfb5      	itete	lt
 800044c:	f023 03c0 	biclt.w	r3, r3, #192	@ 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000450:	f023 03f0 	bicge.w	r3, r3, #240	@ 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000454:	051b      	lsllt	r3, r3, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000456:	049b      	lslge	r3, r3, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000458:	bfb4      	ite	lt
 800045a:	0d1b      	lsrlt	r3, r3, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 800045c:	0c9b      	lsrge	r3, r3, #18
 800045e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000462:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000466:	8023      	strh	r3, [r4, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 8000468:	8823      	ldrh	r3, [r4, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 800046a:	2902      	cmp	r1, #2
 800046c:	f403 6310 	and.w	r3, r3, #2304	@ 0x900
 8000470:	ea43 0307 	orr.w	r3, r3, r7
 8000474:	d005      	beq.n	8000482 <usb_ep_init+0x5a>
 8000476:	2903      	cmp	r1, #3
 8000478:	d029      	beq.n	80004ce <usb_ep_init+0xa6>
 800047a:	bb59      	cbnz	r1, 80004d4 <usb_ep_init+0xac>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 800047c:	f443 4302 	orr.w	r3, r3, #33280	@ 0x8200
 8000480:	e001      	b.n	8000486 <usb_ep_init+0x5e>
  buf &=~ USB_EP_T_FIELD;
 8000482:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000486:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
  }
  USB_EPx(epnum) = buf;
  
  if( dir_in ){
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800048a:	4e26      	ldr	r6, [pc, #152]	@ (8000524 <usb_ep_init+0xfc>)
  USB_EPx(epnum) = buf;
 800048c:	8023      	strh	r3, [r4, #0]
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800048e:	013b      	lsls	r3, r7, #4
 8000490:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
  if( dir_in ){
 8000494:	2800      	cmp	r0, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000496:	8835      	ldrh	r5, [r6, #0]
 8000498:	4823      	ldr	r0, [pc, #140]	@ (8000528 <usb_ep_init+0x100>)
 800049a:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
  if( dir_in ){
 800049e:	da1c      	bge.n	80004da <usb_ep_init+0xb2>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80004a0:	601d      	str	r5, [r3, #0]
    epfunc_in[epnum] = func;
 80004a2:	f640 733f 	movw	r3, #3903	@ 0xf3f
    if((ep_type & 0x03) == USB_ENDP_ISO){
 80004a6:	f001 0103 	and.w	r1, r1, #3
 80004aa:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80004ac:	8821      	ldrh	r1, [r4, #0]
    epfunc_in[epnum] = func;
 80004ae:	4484      	add	ip, r0
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80004b0:	ea03 0301 	and.w	r3, r3, r1
 80004b4:	f483 4300 	eor.w	r3, r3, #32768	@ 0x8000
    epfunc_in[epnum] = func;
 80004b8:	f8cc e020 	str.w	lr, [ip, #32]
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80004bc:	bf0c      	ite	eq
 80004be:	f083 03b0 	eoreq.w	r3, r3, #176	@ 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 80004c2:	f083 03a0 	eorne.w	r3, r3, #160	@ 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 80004c6:	442a      	add	r2, r5
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 80004c8:	8023      	strh	r3, [r4, #0]
  lastaddr += size;
 80004ca:	8032      	strh	r2, [r6, #0]
}
 80004cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80004ce:	f443 4306 	orr.w	r3, r3, #34304	@ 0x8600
 80004d2:	e7d8      	b.n	8000486 <usb_ep_init+0x5e>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80004d4:	f443 4304 	orr.w	r3, r3, #33792	@ 0x8400
 80004d8:	e7d5      	b.n	8000486 <usb_ep_init+0x5e>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80004da:	609d      	str	r5, [r3, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 80004dc:	8999      	ldrh	r1, [r3, #12]
    if(size < 64){
 80004de:	2a3f      	cmp	r2, #63	@ 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 80004e0:	bf8b      	itete	hi
 80004e2:	f441 4100 	orrhi.w	r1, r1, #32768	@ 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 80004e6:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 80004ea:	8199      	strhhi	r1, [r3, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 80004ec:	8199      	strhls	r1, [r3, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004ee:	f8b3 c00c 	ldrh.w	ip, [r3, #12]
 80004f2:	bf8a      	itet	hi
 80004f4:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 80004f6:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 80004fa:	f101 31ff 	addhi.w	r1, r1, #4294967295	@ 0xffffffff
 80004fe:	f361 2c8e 	bfi	ip, r1, #10, #5
 8000502:	f8a3 c00c 	strh.w	ip, [r3, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000506:	8823      	ldrh	r3, [r4, #0]
    epfunc_out[epnum] = func;
 8000508:	f840 e027 	str.w	lr, [r0, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 800050c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000510:	049b      	lsls	r3, r3, #18
 8000512:	0c9b      	lsrs	r3, r3, #18
 8000514:	f483 4330 	eor.w	r3, r3, #45056	@ 0xb000
 8000518:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 800051c:	e7d3      	b.n	80004c6 <usb_ep_init+0x9e>
 800051e:	bf00      	nop
 8000520:	08000385 	stmdaeq	r0, {r0, r2, r7, r8, r9}
 8000524:	20000000 	andcs	r0, r0, r0
 8000528:	20000028 	andcs	r0, r0, r8, lsr #32

0800052c <usb_ep_init_double>:
void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800052c:	f248 0c80 	movw	ip, #32896	@ 0x8080
void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000530:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
 8000532:	4c4c      	ldr	r4, [pc, #304]	@ (8000664 <usb_ep_init_double+0x138>)
  epnum &= 0x0F;
 8000534:	f000 050f 	and.w	r5, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000538:	00ae      	lsls	r6, r5, #2
  if(func == NULL)func = endp_callback_default;
 800053a:	2b00      	cmp	r3, #0
 800053c:	bf14      	ite	ne
 800053e:	461f      	movne	r7, r3
 8000540:	4627      	moveq	r7, r4
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 8000542:	f106 4480 	add.w	r4, r6, #1073741824	@ 0x40000000
 8000546:	f504 44b8 	add.w	r4, r4, #23552	@ 0x5c00
 800054a:	8823      	ldrh	r3, [r4, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 800054c:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800054e:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8000552:	ea4f 5303 	mov.w	r3, r3, lsl #20
 8000556:	ea4f 5313 	mov.w	r3, r3, lsr #20
 800055a:	ea4c 0303 	orr.w	r3, ip, r3
 800055e:	8023      	strh	r3, [r4, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 8000560:	8823      	ldrh	r3, [r4, #0]
 8000562:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000566:	ea4f 4383 	mov.w	r3, r3, lsl #18
 800056a:	ea4f 4393 	mov.w	r3, r3, lsr #18
 800056e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000572:	f8a4 c000 	strh.w	ip, [r4]
  uint16_t buf = USB_EPx(epnum);
 8000576:	8823      	ldrh	r3, [r4, #0]
  buf &=~ USB_EP_T_FIELD;
 8000578:	f403 6310 	and.w	r3, r3, #2304	@ 0x900
 800057c:	ea43 0305 	orr.w	r3, r3, r5
  switch(ep_type){
 8000580:	d02c      	beq.n	80005dc <usb_ep_init_double+0xb0>
 8000582:	2903      	cmp	r1, #3
 8000584:	d02d      	beq.n	80005e2 <usb_ep_init_double+0xb6>
 8000586:	bb79      	cbnz	r1, 80005e8 <usb_ep_init_double+0xbc>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 8000588:	f443 4302 	orr.w	r3, r3, #33280	@ 0x8200
  USB_EPx(epnum) = buf;
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800058c:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 8000668 <usb_ep_init_double+0x13c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000590:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000594:	f8bc 1000 	ldrh.w	r1, [ip]
  USB_EPx(epnum) = buf;
 8000598:	8023      	strh	r3, [r4, #0]
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800059a:	012b      	lsls	r3, r5, #4
 800059c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
  if( dir_in ){
 80005a0:	0600      	lsls	r0, r0, #24
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80005a2:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
    usb_epdata[epnum].usb_tx_count = 0;
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 80005a6:	eb01 0e02 	add.w	lr, r1, r2
  if( dir_in ){
 80005aa:	d520      	bpl.n	80005ee <usb_ep_init_double+0xc2>
    usb_epdata[epnum].usb_tx_count = 0;
 80005ac:	2000      	movs	r0, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80005ae:	6019      	str	r1, [r3, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 80005b0:	6058      	str	r0, [r3, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 80005b2:	f8c3 e008 	str.w	lr, [r3, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 80005b6:	60d8      	str	r0, [r3, #12]
    
    buf = USB_EPx(epnum);
 80005b8:	8823      	ldrh	r3, [r4, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 80005ba:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80005be:	041b      	lsls	r3, r3, #16
 80005c0:	0c1b      	lsrs	r3, r3, #16
 80005c2:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80005c6:	8023      	strh	r3, [r4, #0]
  }
  epfunc_in[epnum] = func;
 80005c8:	4b28      	ldr	r3, [pc, #160]	@ (800066c <usb_ep_init_double+0x140>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 80005ca:	eb01 0142 	add.w	r1, r1, r2, lsl #1
  epfunc_in[epnum] = func;
 80005ce:	441e      	add	r6, r3
 80005d0:	6237      	str	r7, [r6, #32]
  epfunc_out[epnum]= func;
 80005d2:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
  lastaddr += 2*size;
 80005d6:	f8ac 1000 	strh.w	r1, [ip]
}
 80005da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 80005dc:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 80005e0:	e7d4      	b.n	800058c <usb_ep_init_double+0x60>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 80005e2:	f443 4306 	orr.w	r3, r3, #34304	@ 0x8600
 80005e6:	e7d1      	b.n	800058c <usb_ep_init_double+0x60>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80005e8:	f443 4304 	orr.w	r3, r3, #33792	@ 0x8400
 80005ec:	e7ce      	b.n	800058c <usb_ep_init_double+0x60>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 80005ee:	6099      	str	r1, [r3, #8]
    if(size < 64){
 80005f0:	2a3f      	cmp	r2, #63	@ 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 80005f2:	f8c3 e000 	str.w	lr, [r3]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005f6:	8898      	ldrh	r0, [r3, #4]
    if(size < 64){
 80005f8:	d828      	bhi.n	800064c <usb_ep_init_double+0x120>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 80005fa:	f36f 30cf 	bfc	r0, #15, #1
 80005fe:	8098      	strh	r0, [r3, #4]
 8000600:	8998      	ldrh	r0, [r3, #12]
 8000602:	f36f 30cf 	bfc	r0, #15, #1
 8000606:	8198      	strh	r0, [r3, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 8000608:	f3c2 0044 	ubfx	r0, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 800060c:	f8b3 e004 	ldrh.w	lr, [r3, #4]
 8000610:	f360 2e8e 	bfi	lr, r0, #10, #5
 8000614:	f8a3 e004 	strh.w	lr, [r3, #4]
 8000618:	f8b3 e00c 	ldrh.w	lr, [r3, #12]
 800061c:	f360 2e8e 	bfi	lr, r0, #10, #5
 8000620:	f8a3 e00c 	strh.w	lr, [r3, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000624:	8823      	ldrh	r3, [r4, #0]
 8000626:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800062a:	049b      	lsls	r3, r3, #18
 800062c:	0c9b      	lsrs	r3, r3, #18
 800062e:	f483 4330 	eor.w	r3, r3, #45056	@ 0xb000
 8000632:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 8000636:	8023      	strh	r3, [r4, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000638:	8823      	ldrh	r3, [r4, #0]
 800063a:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 800063e:	051b      	lsls	r3, r3, #20
 8000640:	0d1b      	lsrs	r3, r3, #20
 8000642:	f483 4300 	eor.w	r3, r3, #32768	@ 0x8000
 8000646:	f083 03b0 	eor.w	r3, r3, #176	@ 0xb0
 800064a:	e7bc      	b.n	80005c6 <usb_ep_init_double+0x9a>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 800064c:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 8000650:	8098      	strh	r0, [r3, #4]
 8000652:	8998      	ldrh	r0, [r3, #12]
 8000654:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 8000658:	8198      	strh	r0, [r3, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 800065a:	0950      	lsrs	r0, r2, #5
 800065c:	3801      	subs	r0, #1
 800065e:	f000 001f 	and.w	r0, r0, #31
 8000662:	e7d3      	b.n	800060c <usb_ep_init_double+0xe0>
 8000664:	08000385 	stmdaeq	r0, {r0, r2, r7, r8, r9}
 8000668:	20000000 	andcs	r0, r0, r0
 800066c:	20000028 	andcs	r0, r0, r8, lsr #32

08000670 <USB_LP_IRQHandler>:
//-----------------------------------------------------------------------
//--------- USB IRQ handler----------------------------------------------
//-----------------------------------------------------------------------
void USB_LP_IRQHandler(){
 8000670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(USB->ISTR & USB_ISTR_CTR){
 8000674:	4c4a      	ldr	r4, [pc, #296]	@ (80007a0 <USB_LP_IRQHandler+0x130>)
 8000676:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800067a:	0419      	lsls	r1, r3, #16
 800067c:	d52f      	bpl.n	80006de <USB_LP_IRQHandler+0x6e>
    do{
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
        epfunc_out[epnum](epnum);
 800067e:	f8df 8124 	ldr.w	r8, [pc, #292]	@ 80007a4 <USB_LP_IRQHandler+0x134>
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 8000682:	f8b4 6044 	ldrh.w	r6, [r4, #68]	@ 0x44
 8000686:	f006 060f 	and.w	r6, r6, #15
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 800068a:	00b7      	lsls	r7, r6, #2
 800068c:	f107 4580 	add.w	r5, r7, #1073741824	@ 0x40000000
 8000690:	f505 45b8 	add.w	r5, r5, #23552	@ 0x5c00
 8000694:	882b      	ldrh	r3, [r5, #0]
 8000696:	041a      	lsls	r2, r3, #16
 8000698:	d50b      	bpl.n	80006b2 <USB_LP_IRQHandler+0x42>
        epfunc_out[epnum](epnum);
 800069a:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 800069e:	4630      	mov	r0, r6
 80006a0:	4798      	blx	r3
        ENDP_CTR_RX_CLR(epnum);
 80006a2:	882b      	ldrh	r3, [r5, #0]
 80006a4:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80006a8:	051b      	lsls	r3, r3, #20
 80006aa:	0d1b      	lsrs	r3, r3, #20
 80006ac:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80006b0:	802b      	strh	r3, [r5, #0]
      }
      if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 80006b2:	882b      	ldrh	r3, [r5, #0]
 80006b4:	061b      	lsls	r3, r3, #24
 80006b6:	d50c      	bpl.n	80006d2 <USB_LP_IRQHandler+0x62>
        epfunc_in[epnum](epnum | 0x80);
 80006b8:	4447      	add	r7, r8
 80006ba:	6a3b      	ldr	r3, [r7, #32]
 80006bc:	f046 0080 	orr.w	r0, r6, #128	@ 0x80
 80006c0:	4798      	blx	r3
        ENDP_CTR_TX_CLR(epnum);
 80006c2:	882b      	ldrh	r3, [r5, #0]
 80006c4:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80006c8:	051b      	lsls	r3, r3, #20
 80006ca:	0d1b      	lsrs	r3, r3, #20
 80006cc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80006d0:	802b      	strh	r3, [r5, #0]
      }
    }while(USB->ISTR & USB_ISTR_CTR);
 80006d2:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 80006d6:	041d      	lsls	r5, r3, #16
 80006d8:	d4d3      	bmi.n	8000682 <USB_LP_IRQHandler+0x12>
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
  }
}
 80006da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(USB->ISTR & USB_ISTR_SOF){
 80006de:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 80006e2:	0598      	lsls	r0, r3, #22
 80006e4:	d506      	bpl.n	80006f4 <USB_LP_IRQHandler+0x84>
    usb_class_sof();
 80006e6:	f000 fbe6 	bl	8000eb6 <usb_class_sof>
    USB->ISTR = (uint16_t)~USB_ISTR_SOF;
 80006ea:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
 80006ee:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
    return;
 80006f2:	e7f2      	b.n	80006da <USB_LP_IRQHandler+0x6a>
  if(USB->ISTR & USB_ISTR_RESET){
 80006f4:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 80006f8:	0559      	lsls	r1, r3, #21
 80006fa:	d52d      	bpl.n	8000758 <USB_LP_IRQHandler+0xe8>
    usb_class_disconnect();
 80006fc:	f7ff fe44 	bl	8000388 <usb_class_disconnect>
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000700:	f44f 431e 	mov.w	r3, #40448	@ 0x9e00
    lastaddr = LASTADDR_DEFAULT;
 8000704:	2240      	movs	r2, #64	@ 0x40
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000706:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
    lastaddr = LASTADDR_DEFAULT;
 800070a:	4b27      	ldr	r3, [pc, #156]	@ (80007a8 <USB_LP_IRQHandler+0x138>)
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 800070c:	4927      	ldr	r1, [pc, #156]	@ (80007ac <USB_LP_IRQHandler+0x13c>)
    lastaddr = LASTADDR_DEFAULT;
 800070e:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 8000710:	2380      	movs	r3, #128	@ 0x80
 8000712:	f8a4 304c 	strh.w	r3, [r4, #76]	@ 0x4c
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000716:	4b23      	ldr	r3, [pc, #140]	@ (80007a4 <USB_LP_IRQHandler+0x134>)
    USB->DADDR = USB_DADDR_EF;
 8000718:	2408      	movs	r4, #8
 800071a:	461d      	mov	r5, r3
 800071c:	f103 0220 	add.w	r2, r3, #32
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000720:	3c01      	subs	r4, #1
 8000722:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
 8000726:	f843 1b04 	str.w	r1, [r3], #4
 800072a:	f842 1b04 	str.w	r1, [r2], #4
 800072e:	d1f7      	bne.n	8000720 <USB_LP_IRQHandler+0xb0>
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000730:	f64f 32ff 	movw	r2, #64511	@ 0xfbff
 8000734:	4b1a      	ldr	r3, [pc, #104]	@ (80007a0 <USB_LP_IRQHandler+0x130>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 8000736:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 8000738:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 800073c:	4620      	mov	r0, r4
 800073e:	2208      	movs	r2, #8
 8000740:	4b1b      	ldr	r3, [pc, #108]	@ (80007b0 <USB_LP_IRQHandler+0x140>)
 8000742:	f7ff fe71 	bl	8000428 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 8000746:	2208      	movs	r2, #8
 8000748:	4621      	mov	r1, r4
 800074a:	2080      	movs	r0, #128	@ 0x80
 800074c:	4b19      	ldr	r3, [pc, #100]	@ (80007b4 <USB_LP_IRQHandler+0x144>)
 800074e:	f7ff fe6b 	bl	8000428 <usb_ep_init>
    ep0_buf = NULL;
 8000752:	642c      	str	r4, [r5, #64]	@ 0x40
    usb_class_init();
 8000754:	f000 fb18 	bl	8000d88 <usb_class_init>
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 8000758:	4c11      	ldr	r4, [pc, #68]	@ (80007a0 <USB_LP_IRQHandler+0x130>)
 800075a:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 800075e:	051a      	lsls	r2, r3, #20
 8000760:	d50c      	bpl.n	800077c <USB_LP_IRQHandler+0x10c>
    usb_class_disconnect();
 8000762:	f7ff fe11 	bl	8000388 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 8000766:	f8b4 3040 	ldrh.w	r3, [r4, #64]	@ 0x40
 800076a:	b29b      	uxth	r3, r3
 800076c:	f043 030c 	orr.w	r3, r3, #12
 8000770:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 8000774:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
 8000778:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 800077c:	4a08      	ldr	r2, [pc, #32]	@ (80007a0 <USB_LP_IRQHandler+0x130>)
 800077e:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 8000782:	04db      	lsls	r3, r3, #19
 8000784:	d5a9      	bpl.n	80006da <USB_LP_IRQHandler+0x6a>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 8000786:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 800078a:	f023 030c 	bic.w	r3, r3, #12
 800078e:	041b      	lsls	r3, r3, #16
 8000790:	0c1b      	lsrs	r3, r3, #16
 8000792:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 8000796:	f64e 73ff 	movw	r3, #61439	@ 0xefff
 800079a:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 800079e:	e79c      	b.n	80006da <USB_LP_IRQHandler+0x6a>
 80007a0:	40005c00 	andmi	r5, r0, r0, lsl #24
 80007a4:	20000028 	andcs	r0, r0, r8, lsr #32
 80007a8:	20000000 	andcs	r0, r0, r0
 80007ac:	08000385 	stmdaeq	r0, {r0, r2, r7, r8, r9}
 80007b0:	080008a1 	stmdaeq	r0, {r0, r5, r7, fp}
 80007b4:	0800080d 	stmdaeq	r0, {r0, r2, r3, fp}

080007b8 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size){
 80007b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80007ba:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80007bc:	00c4      	lsls	r4, r0, #3
 80007be:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 80007c2:	f504 44c0 	add.w	r4, r4, #24576	@ 0x6000
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80007c6:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 80007c8:	1c56      	adds	r6, r2, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80007ca:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 80007ce:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
  uint16_t N2 = (size + 1) >> 1;
 80007d2:	0876      	lsrs	r6, r6, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80007d4:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 80007d6:	b2af      	uxth	r7, r5
 80007d8:	42be      	cmp	r6, r7
 80007da:	d811      	bhi.n	8000800 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 80007dc:	0840      	lsrs	r0, r0, #1
 80007de:	0080      	lsls	r0, r0, #2
 80007e0:	f100 4080 	add.w	r0, r0, #1073741824	@ 0x40000000
  descr->count = size;
 80007e4:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 80007e6:	f500 40b8 	add.w	r0, r0, #23552	@ 0x5c00
 80007ea:	8803      	ldrh	r3, [r0, #0]
 80007ec:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 80007f0:	051b      	lsls	r3, r3, #20
 80007f2:	0d1b      	lsrs	r3, r3, #20
 80007f4:	f483 4300 	eor.w	r3, r3, #32768	@ 0x8000
 80007f8:	f083 03b0 	eor.w	r3, r3, #176	@ 0xb0
 80007fc:	8003      	strh	r3, [r0, #0]
}
 80007fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000800:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 8000804:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000808:	3501      	adds	r5, #1
 800080a:	e7e4      	b.n	80007d6 <_usb_ep_write+0x1e>

0800080c <ep0_in>:
static void ep0_in(uint8_t epnum){
 800080c:	b538      	push	{r3, r4, r5, lr}
  if(ep0_buf == NULL)return;
 800080e:	4c0c      	ldr	r4, [pc, #48]	@ (8000840 <ep0_in+0x34>)
 8000810:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8000812:	b1a1      	cbz	r1, 800083e <ep0_in+0x32>
  uint16_t left = ep0_count;
 8000814:	f8b4 5044 	ldrh.w	r5, [r4, #68]	@ 0x44

#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint16_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000818:	2000      	movs	r0, #0
  if(left > USB_EP0_BUFSZ)left = USB_EP0_BUFSZ;
 800081a:	2d08      	cmp	r5, #8
 800081c:	462a      	mov	r2, r5
 800081e:	bf28      	it	cs
 8000820:	2208      	movcs	r2, #8
 8000822:	f7ff ffc9 	bl	80007b8 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 8000826:	2d07      	cmp	r5, #7
    ep0_buf = NULL;
 8000828:	bf98      	it	ls
 800082a:	2300      	movls	r3, #0
  ep0_count -= left;
 800082c:	eba5 0202 	sub.w	r2, r5, r2
  ep0_buf += left;
 8000830:	bf88      	it	hi
 8000832:	3108      	addhi	r1, #8
  ep0_count -= left;
 8000834:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
  ep0_buf += left;
 8000838:	bf8c      	ite	hi
 800083a:	6421      	strhi	r1, [r4, #64]	@ 0x40
    ep0_buf = NULL;
 800083c:	6423      	strls	r3, [r4, #64]	@ 0x40
}
 800083e:	bd38      	pop	{r3, r4, r5, pc}
 8000840:	20000028 	andcs	r0, r0, r8, lsr #32

08000844 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000844:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 8000846:	00c2      	lsls	r2, r0, #3
 8000848:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 800084c:	f502 42c0 	add.w	r2, r2, #24576	@ 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 8000850:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 8000852:	6850      	ldr	r0, [r2, #4]
 8000854:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 8000858:	b308      	cbz	r0, 800089e <_usb_ep_read+0x5a>
  int n = (sz + 1) >> 1;
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800085a:	6814      	ldr	r4, [r2, #0]
  int n = (sz + 1) >> 1;
 800085c:	1c42      	adds	r2, r0, #1
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800085e:	f104 5400 	add.w	r4, r4, #536870912	@ 0x20000000
  int n = (sz + 1) >> 1;
 8000862:	1052      	asrs	r2, r2, #1
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000864:	f504 5440 	add.w	r4, r4, #12288	@ 0x3000
 8000868:	0092      	lsls	r2, r2, #2
 800086a:	0065      	lsls	r5, r4, #1
  for(int i = 0; i < n; ++i, ++in)
 800086c:	3902      	subs	r1, #2
 800086e:	eb02 0244 	add.w	r2, r2, r4, lsl #1
    buf[i] = *(uint16_t*)in;
 8000872:	f835 4b04 	ldrh.w	r4, [r5], #4
  for(int i = 0; i < n; ++i, ++in)
 8000876:	4295      	cmp	r5, r2
    buf[i] = *(uint16_t*)in;
 8000878:	f821 4f02 	strh.w	r4, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 800087c:	d1f9      	bne.n	8000872 <_usb_ep_read+0x2e>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 800087e:	085b      	lsrs	r3, r3, #1
 8000880:	009b      	lsls	r3, r3, #2
 8000882:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8000886:	f503 43b8 	add.w	r3, r3, #23552	@ 0x5c00
 800088a:	881a      	ldrh	r2, [r3, #0]
 800088c:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8000890:	0492      	lsls	r2, r2, #18
 8000892:	0c92      	lsrs	r2, r2, #18
 8000894:	f482 4230 	eor.w	r2, r2, #45056	@ 0xb000
 8000898:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
 800089c:	801a      	strh	r2, [r3, #0]
  return sz;
}
 800089e:	bd30      	pop	{r4, r5, pc}

080008a0 <ep0_out>:
static void ep0_out(uint8_t epnum){
 80008a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 80008a2:	4b52      	ldr	r3, [pc, #328]	@ (80009ec <ep0_out+0x14c>)
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 80008a4:	4c52      	ldr	r4, [pc, #328]	@ (80009f0 <ep0_out+0x150>)
  uint16_t rxcount = usb_epdata[0].rx_count;
 80008a6:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 80008a8:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 80008ac:	881a      	ldrh	r2, [r3, #0]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 80008ae:	f894 0046 	ldrb.w	r0, [r4, #70]	@ 0x46
  if( setup ){
 80008b2:	0512      	lsls	r2, r2, #20
  if(setup_packet.bmRequestType & 0x80){
 80008b4:	f994 3046 	ldrsb.w	r3, [r4, #70]	@ 0x46
  uint16_t rxcount = usb_epdata[0].rx_count;
 80008b8:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 80008bc:	d403      	bmi.n	80008c6 <ep0_out+0x26>
  if(setup_packet.bmRequestType & 0x80){
 80008be:	2b00      	cmp	r3, #0
 80008c0:	da28      	bge.n	8000914 <ep0_out+0x74>
}
 80008c2:	b003      	add	sp, #12
 80008c4:	bd30      	pop	{r4, r5, pc}
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	da1e      	bge.n	8000908 <ep0_out+0x68>
        bytesread = 0;
 80008ca:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80008cc:	2001      	movs	r0, #1
 80008ce:	f104 0146 	add.w	r1, r4, #70	@ 0x46
 80008d2:	f7ff ffb7 	bl	8000844 <_usb_ep_read>
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 80008d6:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
        bytesread = 0;
 80008da:	f8a4 504e 	strh.w	r5, [r4, #78]	@ 0x4e
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 80008de:	f003 007f 	and.w	r0, r3, #127	@ 0x7f
  if(setup_packet.bmRequestType & 0x80){
 80008e2:	061b      	lsls	r3, r3, #24
 80008e4:	d516      	bpl.n	8000914 <ep0_out+0x74>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 80008e6:	2800      	cmp	r0, #0
 80008e8:	d14b      	bne.n	8000982 <ep0_out+0xe2>
      switch(setup_packet.bRequest){
 80008ea:	f894 3047 	ldrb.w	r3, [r4, #71]	@ 0x47
 80008ee:	2b06      	cmp	r3, #6
 80008f0:	d027      	beq.n	8000942 <ep0_out+0xa2>
 80008f2:	2b08      	cmp	r3, #8
 80008f4:	d042      	beq.n	800097c <ep0_out+0xdc>
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	d143      	bne.n	8000982 <ep0_out+0xe2>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80008fa:	2202      	movs	r2, #2
 80008fc:	493d      	ldr	r1, [pc, #244]	@ (80009f4 <ep0_out+0x154>)
}
 80008fe:	b003      	add	sp, #12
 8000900:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000904:	f7ff bf58 	b.w	80007b8 <_usb_ep_write>
      if( bytesread >= setup_packet.wLength ){
 8000908:	f8b4 204c 	ldrh.w	r2, [r4, #76]	@ 0x4c
 800090c:	f8b4 304e 	ldrh.w	r3, [r4, #78]	@ 0x4e
 8000910:	429a      	cmp	r2, r3
 8000912:	d9da      	bls.n	80008ca <ep0_out+0x2a>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000914:	2800      	cmp	r0, #0
 8000916:	d14a      	bne.n	80009ae <ep0_out+0x10e>
      if(setup_packet.bRequest == SET_ADDRESS){
 8000918:	f894 3047 	ldrb.w	r3, [r4, #71]	@ 0x47
 800091c:	2b05      	cmp	r3, #5
 800091e:	d13c      	bne.n	800099a <ep0_out+0xfa>
 8000920:	4602      	mov	r2, r0
 8000922:	4601      	mov	r1, r0
        uint8_t USB_Addr = setup_packet.wValue;
 8000924:	f894 4048 	ldrb.w	r4, [r4, #72]	@ 0x48
 8000928:	f7ff ff46 	bl	80007b8 <_usb_ep_write>
        while( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID ){}
 800092c:	4a32      	ldr	r2, [pc, #200]	@ (80009f8 <ep0_out+0x158>)
 800092e:	8813      	ldrh	r3, [r2, #0]
 8000930:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8000934:	2b30      	cmp	r3, #48	@ 0x30
 8000936:	d0fa      	beq.n	800092e <ep0_out+0x8e>
        USB->DADDR = USB_DADDR_EF | USB_Addr;
 8000938:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 800093c:	f8a2 404c 	strh.w	r4, [r2, #76]	@ 0x4c
        return;
 8000940:	e7bf      	b.n	80008c2 <ep0_out+0x22>
          const void *data = ZLPP;
 8000942:	2301      	movs	r3, #1
          uint16_t size = 0;
 8000944:	f8ad 0002 	strh.w	r0, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000948:	f10d 0202 	add.w	r2, sp, #2
 800094c:	f8b4 0048 	ldrh.w	r0, [r4, #72]	@ 0x48
 8000950:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 8000952:	9301      	str	r3, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 8000954:	f000 f99c 	bl	8000c90 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000958:	f8b4 304c 	ldrh.w	r3, [r4, #76]	@ 0x4c
 800095c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 8000960:	2080      	movs	r0, #128	@ 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 8000962:	429a      	cmp	r2, r3
 8000964:	bf88      	it	hi
 8000966:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 800096a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800096e:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
  ep0_buf = (uint8_t*)buf;
 8000972:	9b01      	ldr	r3, [sp, #4]
 8000974:	6423      	str	r3, [r4, #64]	@ 0x40
  ep0_in(0x80);
 8000976:	f7ff ff49 	bl	800080c <ep0_in>
 800097a:	e7a2      	b.n	80008c2 <ep0_out+0x22>
 800097c:	2201      	movs	r2, #1
 800097e:	491f      	ldr	r1, [pc, #124]	@ (80009fc <ep0_out+0x15c>)
 8000980:	e7bd      	b.n	80008fe <ep0_out+0x5e>
    void *data = ZLPP;
 8000982:	2301      	movs	r3, #1
 8000984:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 8000986:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000988:	f10d 0202 	add.w	r2, sp, #2
 800098c:	a901      	add	r1, sp, #4
 800098e:	481c      	ldr	r0, [pc, #112]	@ (8000a00 <ep0_out+0x160>)
    uint16_t size = 0;
 8000990:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000994:	f000 f9c8 	bl	8000d28 <usb_class_ep0_in>
 8000998:	e7de      	b.n	8000958 <ep0_out+0xb8>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 800099a:	2b09      	cmp	r3, #9
 800099c:	d107      	bne.n	80009ae <ep0_out+0x10e>
        configuration = setup_packet.wValue;
 800099e:	f8b4 3048 	ldrh.w	r3, [r4, #72]	@ 0x48
 80009a2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 80009a6:	2200      	movs	r2, #0
 80009a8:	4611      	mov	r1, r2
 80009aa:	4610      	mov	r0, r2
 80009ac:	e7a7      	b.n	80008fe <ep0_out+0x5e>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 80009ae:	462a      	mov	r2, r5
 80009b0:	f8b4 104e 	ldrh.w	r1, [r4, #78]	@ 0x4e
 80009b4:	4812      	ldr	r0, [pc, #72]	@ (8000a00 <ep0_out+0x160>)
 80009b6:	f000 f9ce 	bl	8000d56 <usb_class_ep0_out>
 80009ba:	b950      	cbnz	r0, 80009d2 <ep0_out+0x132>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 80009bc:	4a0e      	ldr	r2, [pc, #56]	@ (80009f8 <ep0_out+0x158>)
 80009be:	8813      	ldrh	r3, [r2, #0]
 80009c0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80009c4:	049b      	lsls	r3, r3, #18
 80009c6:	0c9b      	lsrs	r3, r3, #18
 80009c8:	f483 4330 	eor.w	r3, r3, #45056	@ 0xb000
 80009cc:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 80009d0:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 80009d2:	f8b4 304e 	ldrh.w	r3, [r4, #78]	@ 0x4e
 80009d6:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80009d8:	f8b4 304c 	ldrh.w	r3, [r4, #76]	@ 0x4c
    bytesread += rxcount;
 80009dc:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80009de:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 80009e0:	f8a4 504e 	strh.w	r5, [r4, #78]	@ 0x4e
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 80009e4:	f63f af6d 	bhi.w	80008c2 <ep0_out+0x22>
 80009e8:	e7dd      	b.n	80009a6 <ep0_out+0x106>
 80009ea:	bf00      	nop
 80009ec:	40006000 	andmi	r6, r0, r0
 80009f0:	20000028 	andcs	r0, r0, r8, lsr #32
 80009f4:	080017c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, ip}
 80009f8:	40005c00 	andmi	r5, r0, r0, lsl #24
 80009fc:	20000078 	andcs	r0, r0, r8, ror r0
 8000a00:	2000006e 	andcs	r0, r0, lr, rrx

08000a04 <mic_in_callback>:

volatile int16_t adc_buffer[ADC_SIZE];

volatile uint8_t adc_idx = 0;

static void mic_in_callback(uint8_t epnum){
 8000a04:	b570      	push	{r4, r5, r6, lr}
  usb_ep_write_double( epnum, (void*)adc_buffer, (adc_idx+1)*2 );
 8000a06:	4e10      	ldr	r6, [pc, #64]	@ (8000a48 <mic_in_callback+0x44>)
  epnum &= 0x0F;
 8000a08:	f000 000f 	and.w	r0, r0, #15
 8000a0c:	4631      	mov	r1, r6
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000a0e:	0083      	lsls	r3, r0, #2
 8000a10:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8000a14:	f503 43b8 	add.w	r3, r3, #23552	@ 0x5c00
 8000a18:	f811 2b02 	ldrb.w	r2, [r1], #2
 8000a1c:	881d      	ldrh	r5, [r3, #0]
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000a1e:	881c      	ldrh	r4, [r3, #0]
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000a20:	f3c5 3580 	ubfx	r5, r5, #14, #1
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000a24:	f024 04f0 	bic.w	r4, r4, #240	@ 0xf0
 8000a28:	0524      	lsls	r4, r4, #20
 8000a2a:	0d24      	lsrs	r4, r4, #20
 8000a2c:	f444 4440 	orr.w	r4, r4, #49152	@ 0xc000
 8000a30:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 8000a34:	3201      	adds	r2, #1
 8000a36:	801c      	strh	r4, [r3, #0]
  _usb_ep_write(idx, buf, size);
 8000a38:	0052      	lsls	r2, r2, #1
 8000a3a:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8000a3e:	f7ff febb 	bl	80007b8 <_usb_ep_write>
  adc_idx = 0;
 8000a42:	2300      	movs	r3, #0
 8000a44:	7033      	strb	r3, [r6, #0]
};
 8000a46:	bd70      	pop	{r4, r5, r6, pc}
 8000a48:	2000007c 	andcs	r0, r0, ip, ror r0

08000a4c <adc_outfilter>:

#define OFILTER_PWR	8
#define OFILTER_MLT	4
uint16_t adc_outfilter(uint16_t curval){
  static uint32_t filter = (2048<<(OFILTER_PWR+OFILTER_MLT));
  filter += (curval << OFILTER_MLT) - (filter >> OFILTER_PWR);
 8000a4c:	4a04      	ldr	r2, [pc, #16]	@ (8000a60 <adc_outfilter+0x14>)
 8000a4e:	6813      	ldr	r3, [r2, #0]
 8000a50:	eba3 2313 	sub.w	r3, r3, r3, lsr #8
 8000a54:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 8000a58:	6010      	str	r0, [r2, #0]
  return (filter>>OFILTER_PWR);
}
 8000a5a:	f3c0 200f 	ubfx	r0, r0, #8, #16
 8000a5e:	4770      	bx	lr
 8000a60:	20000004 	andcs	r0, r0, r4

08000a64 <midfilter>:

#define MIDFILTER_PWR	10
uint16_t midfilter(uint16_t curval){
  static uint32_t filter = (2048<<MIDFILTER_PWR);
  filter += curval - (filter>>MIDFILTER_PWR);
 8000a64:	4a04      	ldr	r2, [pc, #16]	@ (8000a78 <midfilter+0x14>)
 8000a66:	6853      	ldr	r3, [r2, #4]
 8000a68:	eba3 2393 	sub.w	r3, r3, r3, lsr #10
 8000a6c:	4418      	add	r0, r3
 8000a6e:	6050      	str	r0, [r2, #4]
  return (filter >> MIDFILTER_PWR);
}
 8000a70:	f3c0 208f 	ubfx	r0, r0, #10, #16
 8000a74:	4770      	bx	lr
 8000a76:	bf00      	nop
 8000a78:	20000004 	andcs	r0, r0, r4

08000a7c <adc_infilter>:
#define INFILTER_PWR 0
uint16_t adc_infilter(uint16_t curval){
  static uint32_t filter = (2048<<INFILTER_PWR);
  filter += curval - (filter>>INFILTER_PWR);
  return (filter >> INFILTER_PWR);
}
 8000a7c:	4770      	bx	lr

08000a7e <ADC1_IRQHandler>:

volatile uint8_t adc_timeH = 0;
volatile uint16_t adc_timeL = 0;
void ADC1_IRQHandler(){
 8000a7e:	b510      	push	{r4, lr}
  static uint8_t oversampl_cnt = 0;
  static uint16_t curval = 0;
  
  //Read ADC with oversampling
  if(oversampl_cnt == 0)curval = 0;
 8000a80:	4921      	ldr	r1, [pc, #132]	@ (8000b08 <ADC1_IRQHandler+0x8a>)
 8000a82:	4a22      	ldr	r2, [pc, #136]	@ (8000b0c <ADC1_IRQHandler+0x8e>)
 8000a84:	f891 305a 	ldrb.w	r3, [r1, #90]	@ 0x5a
 8000a88:	b933      	cbnz	r3, 8000a98 <ADC1_IRQHandler+0x1a>
  curval += ADC1->DR;
 8000a8a:	6d93      	ldr	r3, [r2, #88]	@ 0x58
 8000a8c:	f8a1 305c 	strh.w	r3, [r1, #92]	@ 0x5c
  oversampl_cnt++;
 8000a90:	2301      	movs	r3, #1
 8000a92:	f881 305a 	strb.w	r3, [r1, #90]	@ 0x5a
  //adc_timeH - count of full conversions
  if(adc_timeH<255)adc_timeH++;
  adc_timeL = TIM2->CNT;

  ADC1->SR &=~ADC_SR_EOC;
}
 8000a96:	bd10      	pop	{r4, pc}
  curval += ADC1->DR;
 8000a98:	6d94      	ldr	r4, [r2, #88]	@ 0x58
 8000a9a:	f8b1 205c 	ldrh.w	r2, [r1, #92]	@ 0x5c
  oversampl_cnt++;
 8000a9e:	3301      	adds	r3, #1
  curval += ADC1->DR;
 8000aa0:	4414      	add	r4, r2
  oversampl_cnt++;
 8000aa2:	b2db      	uxtb	r3, r3
  curval += ADC1->DR;
 8000aa4:	b2a4      	uxth	r4, r4
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 8000aa6:	2b03      	cmp	r3, #3
  curval += ADC1->DR;
 8000aa8:	f8a1 405c 	strh.w	r4, [r1, #92]	@ 0x5c
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 8000aac:	d9f1      	bls.n	8000a92 <ADC1_IRQHandler+0x14>
  oversampl_cnt = 0;
 8000aae:	2300      	movs	r3, #0
  curval /= OVERSAMPL_COUNT;
 8000ab0:	08a4      	lsrs	r4, r4, #2
  int32_t midval = midfilter(cval);
 8000ab2:	4620      	mov	r0, r4
  oversampl_cnt = 0;
 8000ab4:	f881 305a 	strb.w	r3, [r1, #90]	@ 0x5a
  curval /= OVERSAMPL_COUNT;
 8000ab8:	f8a1 405c 	strh.w	r4, [r1, #92]	@ 0x5c
  int32_t midval = midfilter(cval);
 8000abc:	f7ff ffd2 	bl	8000a64 <midfilter>
  if(adc_idx < ADC_SIZE){
 8000ac0:	780b      	ldrb	r3, [r1, #0]
 8000ac2:	2b2b      	cmp	r3, #43	@ 0x2b
 8000ac4:	d80a      	bhi.n	8000adc <ADC1_IRQHandler+0x5e>
    adc_buffer[adc_idx] = midval;
 8000ac6:	780b      	ldrb	r3, [r1, #0]
  midval = (((int32_t)cval)) - midval;
 8000ac8:	1a24      	subs	r4, r4, r0
  midval <<= 3; //ADC resolution is 0-4095. midval=0-4095. Diff=-4095..+4095 (2**12); Output = -32768..+32767 (2**15) => Kampl=8
 8000aca:	00e4      	lsls	r4, r4, #3
    adc_buffer[adc_idx] = midval;
 8000acc:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8000ad0:	b224      	sxth	r4, r4
 8000ad2:	805c      	strh	r4, [r3, #2]
    adc_idx++;
 8000ad4:	780b      	ldrb	r3, [r1, #0]
 8000ad6:	3301      	adds	r3, #1
 8000ad8:	b2db      	uxtb	r3, r3
 8000ada:	700b      	strb	r3, [r1, #0]
  if(adc_timeH<255)adc_timeH++;
 8000adc:	f891 305e 	ldrb.w	r3, [r1, #94]	@ 0x5e
  ADC1->SR &=~ADC_SR_EOC;
 8000ae0:	4a0a      	ldr	r2, [pc, #40]	@ (8000b0c <ADC1_IRQHandler+0x8e>)
  if(adc_timeH<255)adc_timeH++;
 8000ae2:	2bff      	cmp	r3, #255	@ 0xff
 8000ae4:	bf1f      	itttt	ne
 8000ae6:	f891 305e 	ldrbne.w	r3, [r1, #94]	@ 0x5e
 8000aea:	3301      	addne	r3, #1
 8000aec:	b2db      	uxtbne	r3, r3
 8000aee:	f881 305e 	strbne.w	r3, [r1, #94]	@ 0x5e
  adc_timeL = TIM2->CNT;
 8000af2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000af6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000af8:	b29b      	uxth	r3, r3
 8000afa:	f8a1 3060 	strh.w	r3, [r1, #96]	@ 0x60
  ADC1->SR &=~ADC_SR_EOC;
 8000afe:	6813      	ldr	r3, [r2, #0]
 8000b00:	f023 0302 	bic.w	r3, r3, #2
 8000b04:	6013      	str	r3, [r2, #0]
 8000b06:	e7c6      	b.n	8000a96 <ADC1_IRQHandler+0x18>
 8000b08:	2000007c 	andcs	r0, r0, ip, ror r0
 8000b0c:	40012400 	andmi	r2, r1, r0, lsl #8

08000b10 <mic_sof>:

void mic_sof(){
  if(adc_timeH > ADC_SIZE){
 8000b10:	4a1a      	ldr	r2, [pc, #104]	@ (8000b7c <mic_sof+0x6c>)
 8000b12:	f892 305e 	ldrb.w	r3, [r2, #94]	@ 0x5e
 8000b16:	2b2c      	cmp	r3, #44	@ 0x2c
 8000b18:	d909      	bls.n	8000b2e <mic_sof+0x1e>
    if(TIM2->ARR < TIM2_ARR_MAX) TIM2->ARR++;
 8000b1a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000b1e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000b20:	f5b1 7f35 	cmp.w	r1, #724	@ 0x2d4
 8000b24:	d21f      	bcs.n	8000b66 <mic_sof+0x56>
  }else if(adc_timeH < ADC_SIZE){
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
  }else{
    if(adc_timeL > (TIM2->ARR/2)){
      TIM2->ARR++;
 8000b26:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000b28:	3101      	adds	r1, #1
    }else if(adc_timeL < (TIM2->ARR*3/4)){
      TIM2->ARR--;
 8000b2a:	62d9      	str	r1, [r3, #44]	@ 0x2c
 8000b2c:	e01b      	b.n	8000b66 <mic_sof+0x56>
  }else if(adc_timeH < ADC_SIZE){
 8000b2e:	f892 305e 	ldrb.w	r3, [r2, #94]	@ 0x5e
 8000b32:	2b2b      	cmp	r3, #43	@ 0x2b
 8000b34:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000b38:	d805      	bhi.n	8000b46 <mic_sof+0x36>
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
 8000b3a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000b3c:	292d      	cmp	r1, #45	@ 0x2d
 8000b3e:	d912      	bls.n	8000b66 <mic_sof+0x56>
      TIM2->ARR--;
 8000b40:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000b42:	3901      	subs	r1, #1
 8000b44:	e7f1      	b.n	8000b2a <mic_sof+0x1a>
    if(adc_timeL > (TIM2->ARR/2)){
 8000b46:	f8b2 1060 	ldrh.w	r1, [r2, #96]	@ 0x60
 8000b4a:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8000b4c:	b289      	uxth	r1, r1
 8000b4e:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 8000b52:	d8e8      	bhi.n	8000b26 <mic_sof+0x16>
    }else if(adc_timeL < (TIM2->ARR*3/4)){
 8000b54:	f8b2 0060 	ldrh.w	r0, [r2, #96]	@ 0x60
 8000b58:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000b5a:	b280      	uxth	r0, r0
 8000b5c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8000b60:	ebb0 0f91 	cmp.w	r0, r1, lsr #2
 8000b64:	d3ec      	bcc.n	8000b40 <mic_sof+0x30>
    }
  }
  TIM2->CNT = 0;
 8000b66:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000b6a:	2000      	movs	r0, #0
 8000b6c:	6258      	str	r0, [r3, #36]	@ 0x24
  TIM2->CR1 |= TIM_CR1_URS;
 8000b6e:	6819      	ldr	r1, [r3, #0]
 8000b70:	f041 0104 	orr.w	r1, r1, #4
 8000b74:	6019      	str	r1, [r3, #0]
  adc_timeH = 0;
 8000b76:	f882 005e 	strb.w	r0, [r2, #94]	@ 0x5e
}
 8000b7a:	4770      	bx	lr
 8000b7c:	2000007c 	andcs	r0, r0, ip, ror r0

08000b80 <hid_ep0_in>:
    FEATURE_HID16( HID_DATA |  HID_VAR | HID_ABS | HID_BUF ),
  )
};

char hid_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 8000b80:	7803      	ldrb	r3, [r0, #0]
 8000b82:	2b81      	cmp	r3, #129	@ 0x81
 8000b84:	d108      	bne.n	8000b98 <hid_ep0_in+0x18>
    if( req->bRequest == GET_DESCRIPTOR ){
 8000b86:	7843      	ldrb	r3, [r0, #1]
 8000b88:	2b06      	cmp	r3, #6
 8000b8a:	d103      	bne.n	8000b94 <hid_ep0_in+0x14>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 8000b8c:	8843      	ldrh	r3, [r0, #2]
 8000b8e:	f5b3 5f08 	cmp.w	r3, #8704	@ 0x2200
 8000b92:	d00f      	beq.n	8000bb4 <hid_ep0_in+0x34>
      *data = (void*)&resdata;
      *size = sizeof(hid_data_t);
      return 1;
    }
  }
  return 0;
 8000b94:	2000      	movs	r0, #0
}
 8000b96:	4770      	bx	lr
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE | 0x80) ){
 8000b98:	2ba1      	cmp	r3, #161	@ 0xa1
 8000b9a:	d1fb      	bne.n	8000b94 <hid_ep0_in+0x14>
    if( req->bRequest == HIDREQ_GET_REPORT ){
 8000b9c:	7843      	ldrb	r3, [r0, #1]
 8000b9e:	2b01      	cmp	r3, #1
 8000ba0:	d1f8      	bne.n	8000b94 <hid_ep0_in+0x14>
      resdata.data = 0;
 8000ba2:	2000      	movs	r0, #0
 8000ba4:	4b05      	ldr	r3, [pc, #20]	@ (8000bbc <hid_ep0_in+0x3c>)
 8000ba6:	f823 0f62 	strh.w	r0, [r3, #98]!
      return 1;
 8000baa:	2002      	movs	r0, #2
      *data = (void*)&resdata;
 8000bac:	600b      	str	r3, [r1, #0]
      *size = sizeof(hid_data_t);
 8000bae:	8010      	strh	r0, [r2, #0]
        return 1;
 8000bb0:	2001      	movs	r0, #1
 8000bb2:	4770      	bx	lr
 8000bb4:	2015      	movs	r0, #21
 8000bb6:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <hid_ep0_in+0x40>)
 8000bb8:	e7f8      	b.n	8000bac <hid_ep0_in+0x2c>
 8000bba:	bf00      	nop
 8000bbc:	2000007c 	andcs	r0, r0, ip, ror r0
 8000bc0:	080017c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl, ip}

08000bc4 <hid_ep0_out>:

char hid_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000bc4:	b510      	push	{r4, lr}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000bc6:	7803      	ldrb	r3, [r0, #0]
 8000bc8:	2b21      	cmp	r3, #33	@ 0x21
 8000bca:	d125      	bne.n	8000c18 <hid_ep0_out+0x54>
    if( req->bRequest == HIDREQ_SET_REPORT ){
 8000bcc:	7843      	ldrb	r3, [r0, #1]
 8000bce:	2b09      	cmp	r3, #9
 8000bd0:	d122      	bne.n	8000c18 <hid_ep0_out+0x54>
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000bd2:	b1fa      	cbz	r2, 8000c14 <hid_ep0_out+0x50>
      //анализом запроса не заморачиваемя. Считаем, что ничего кроме нужного не придет
      if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000bd4:	2a02      	cmp	r2, #2
 8000bd6:	d11f      	bne.n	8000c18 <hid_ep0_out+0x54>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000bd8:	4c10      	ldr	r4, [pc, #64]	@ (8000c1c <hid_ep0_out+0x58>)
 8000bda:	2001      	movs	r0, #1
 8000bdc:	f104 0164 	add.w	r1, r4, #100	@ 0x64
 8000be0:	f7ff fe30 	bl	8000844 <_usb_ep_read>
      usb_ep_read(0, (void*)&hid_data);
      
      //PA0-PA7 + PB8-PB15 = hid_data
      uint16_t temp = GPIOA->ODR;
 8000be4:	490e      	ldr	r1, [pc, #56]	@ (8000c20 <hid_ep0_out+0x5c>)
 8000be6:	694b      	ldr	r3, [r1, #20]
      temp = (temp & 0xFF00) | (hid_data.data & 0x00FF);
 8000be8:	f8b4 2064 	ldrh.w	r2, [r4, #100]	@ 0x64
 8000bec:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8000bf0:	b2d2      	uxtb	r2, r2
      GPIOA->ODR = temp;
 8000bf2:	4313      	orrs	r3, r2
 8000bf4:	614b      	str	r3, [r1, #20]
      
      temp = GPIOB->ODR;
 8000bf6:	f8d1 2414 	ldr.w	r2, [r1, #1044]	@ 0x414
      temp = (temp & 0x00FF) | (hid_data.data & 0xFF00);
 8000bfa:	f8b4 3064 	ldrh.w	r3, [r4, #100]	@ 0x64
 8000bfe:	b2d2      	uxtb	r2, r2
 8000c00:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
      GPIOB->ODR = temp;
 8000c04:	4313      	orrs	r3, r2
 8000c06:	f8c1 3414 	str.w	r3, [r1, #1044]	@ 0x414
#ifndef _SYSTICK_H_
#define _SYSTICK_H_

#include <inttypes.h>
extern volatile uint32_t systick_internal;
inline uint32_t systick_ms(){return systick_internal;}
 8000c0a:	4b06      	ldr	r3, [pc, #24]	@ (8000c24 <hid_ep0_out+0x60>)
 8000c0c:	681b      	ldr	r3, [r3, #0]
      
      //GPO_T( BLED );
      hid_timeout = systick_ms() + HID_TIMEOUT_MS;
 8000c0e:	f503 737a 	add.w	r3, r3, #1000	@ 0x3e8
 8000c12:	66a3      	str	r3, [r4, #104]	@ 0x68
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000c14:	2001      	movs	r0, #1
      
      return 1;
    }
  }
  return 0;
}
 8000c16:	bd10      	pop	{r4, pc}
      if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000c18:	2000      	movs	r0, #0
 8000c1a:	e7fc      	b.n	8000c16 <hid_ep0_out+0x52>
 8000c1c:	2000007c 	andcs	r0, r0, ip, ror r0
 8000c20:	40020000 	andmi	r0, r2, r0
 8000c24:	20000024 	andcs	r0, r0, r4, lsr #32

08000c28 <hid_init>:

void hid_init(){
  //PA0-PA7 = GPIO_PP50
  GPIOA->MODER = (GPIOA->MODER &~ (0b11 * 0x00005555)) | (GPIO_PP * 0x00005555);
 8000c28:	4a10      	ldr	r2, [pc, #64]	@ (8000c6c <hid_init+0x44>)
  GPIOA->OSPEEDR = (GPIOA->OSPEEDR &~ (0b11 * 0x00005555)) | (GPIO_VS * 0x00005555);
 8000c2a:	4911      	ldr	r1, [pc, #68]	@ (8000c70 <hid_init+0x48>)
  GPIOA->MODER = (GPIOA->MODER &~ (0b11 * 0x00005555)) | (GPIO_PP * 0x00005555);
 8000c2c:	6813      	ldr	r3, [r2, #0]
 8000c2e:	0c1b      	lsrs	r3, r3, #16
 8000c30:	041b      	lsls	r3, r3, #16
 8000c32:	f443 43aa 	orr.w	r3, r3, #21760	@ 0x5500
 8000c36:	f043 0355 	orr.w	r3, r3, #85	@ 0x55
 8000c3a:	6013      	str	r3, [r2, #0]
  GPIOA->OSPEEDR = (GPIOA->OSPEEDR &~ (0b11 * 0x00005555)) | (GPIO_VS * 0x00005555);
 8000c3c:	6893      	ldr	r3, [r2, #8]
 8000c3e:	400b      	ands	r3, r1
 8000c40:	f443 337f 	orr.w	r3, r3, #261120	@ 0x3fc00
 8000c44:	f443 737f 	orr.w	r3, r3, #1020	@ 0x3fc
 8000c48:	6093      	str	r3, [r2, #8]
  //PB8-PB15 = GPIO_PP50
  GPIOB->MODER = (GPIOB->MODER &~ (0b11 * 0x55550000U)) | (GPIO_PP * 0x55550000U);
 8000c4a:	f8d2 3400 	ldr.w	r3, [r2, #1024]	@ 0x400
 8000c4e:	b29b      	uxth	r3, r3
 8000c50:	f043 43aa 	orr.w	r3, r3, #1426063360	@ 0x55000000
 8000c54:	f443 03aa 	orr.w	r3, r3, #5570560	@ 0x550000
 8000c58:	f8c2 3400 	str.w	r3, [r2, #1024]	@ 0x400
  GPIOB->OSPEEDR = (GPIOB->OSPEEDR &~ (0b11 * 0x55550000U)) | (GPIO_VS * 0x55550000U);
 8000c5c:	f8d2 3408 	ldr.w	r3, [r2, #1032]	@ 0x408
 8000c60:	b29b      	uxth	r3, r3
 8000c62:	430b      	orrs	r3, r1
 8000c64:	f8c2 3408 	str.w	r3, [r2, #1032]	@ 0x408
}
 8000c68:	4770      	bx	lr
 8000c6a:	bf00      	nop
 8000c6c:	40020000 	andmi	r0, r2, r0
 8000c70:	fffc0000 			@ <UNDEFINED> instruction: 0xfffc0000

08000c74 <hid_poll>:
 8000c74:	4b04      	ldr	r3, [pc, #16]	@ (8000c88 <hid_poll+0x14>)
 8000c76:	681a      	ldr	r2, [r3, #0]

void hid_poll(){
  if(systick_ms() > hid_timeout){
 8000c78:	4b04      	ldr	r3, [pc, #16]	@ (8000c8c <hid_poll+0x18>)
 8000c7a:	6e99      	ldr	r1, [r3, #104]	@ 0x68
 8000c7c:	4291      	cmp	r1, r2
    hid_timeout = 0xFFFFFFFF;
 8000c7e:	bf3c      	itt	cc
 8000c80:	f04f 32ff 	movcc.w	r2, #4294967295	@ 0xffffffff
 8000c84:	669a      	strcc	r2, [r3, #104]	@ 0x68
    //GPO_OFF(BLED);
  }
}
 8000c86:	4770      	bx	lr
 8000c88:	20000024 	andcs	r0, r0, r4, lsr #32
 8000c8c:	2000007c 	andcs	r0, r0, ip, ror r0

08000c90 <usb_class_get_std_descr>:
  )
};


void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000c90:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8000c94:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8000c98:	d019      	beq.n	8000cce <usb_class_get_std_descr+0x3e>
 8000c9a:	d806      	bhi.n	8000caa <usb_class_get_std_descr+0x1a>
 8000c9c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8000ca0:	d007      	beq.n	8000cb2 <usb_class_get_std_descr+0x22>
 8000ca2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000ca6:	d009      	beq.n	8000cbc <usb_class_get_std_descr+0x2c>
 8000ca8:	4770      	bx	lr
 8000caa:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8000cae:	d00a      	beq.n	8000cc6 <usb_class_get_std_descr+0x36>
 8000cb0:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 8000cb2:	4b13      	ldr	r3, [pc, #76]	@ (8000d00 <usb_class_get_std_descr+0x70>)
 8000cb4:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 8000cb6:	2312      	movs	r3, #18
          *data = &USB_String_LOG;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000cb8:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 8000cba:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000cbc:	4b11      	ldr	r3, [pc, #68]	@ (8000d04 <usb_class_get_std_descr+0x74>)
 8000cbe:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000cc0:	f44f 73a2 	mov.w	r3, #324	@ 0x144
 8000cc4:	e7f8      	b.n	8000cb8 <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000cc6:	4b10      	ldr	r3, [pc, #64]	@ (8000d08 <usb_class_get_std_descr+0x78>)
 8000cc8:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000cca:	230a      	movs	r3, #10
 8000ccc:	e7f4      	b.n	8000cb8 <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000cce:	b2c0      	uxtb	r0, r0
 8000cd0:	2806      	cmp	r0, #6
 8000cd2:	d8f2      	bhi.n	8000cba <usb_class_get_std_descr+0x2a>
 8000cd4:	e8df f000 	tbb	[pc, r0]
 8000cd8:	0a080412 	beq	8201d28 <__exidx_end+0x200360>
 8000cdc:	00100e0c 	andseq	r0, r0, ip, lsl #28
 8000ce0:	4b0a      	ldr	r3, [pc, #40]	@ (8000d0c <usb_class_get_std_descr+0x7c>)
          *data = &USB_StringLangDescriptor;
 8000ce2:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000ce4:	781b      	ldrb	r3, [r3, #0]
 8000ce6:	e7e7      	b.n	8000cb8 <usb_class_get_std_descr+0x28>
          break;
 8000ce8:	4b09      	ldr	r3, [pc, #36]	@ (8000d10 <usb_class_get_std_descr+0x80>)
 8000cea:	e7fa      	b.n	8000ce2 <usb_class_get_std_descr+0x52>
          break;
 8000cec:	4b09      	ldr	r3, [pc, #36]	@ (8000d14 <usb_class_get_std_descr+0x84>)
 8000cee:	e7f8      	b.n	8000ce2 <usb_class_get_std_descr+0x52>
          break;
 8000cf0:	4b09      	ldr	r3, [pc, #36]	@ (8000d18 <usb_class_get_std_descr+0x88>)
 8000cf2:	e7f6      	b.n	8000ce2 <usb_class_get_std_descr+0x52>
          break;
 8000cf4:	4b09      	ldr	r3, [pc, #36]	@ (8000d1c <usb_class_get_std_descr+0x8c>)
 8000cf6:	e7f4      	b.n	8000ce2 <usb_class_get_std_descr+0x52>
          break;
 8000cf8:	4b09      	ldr	r3, [pc, #36]	@ (8000d20 <usb_class_get_std_descr+0x90>)
 8000cfa:	e7f2      	b.n	8000ce2 <usb_class_get_std_descr+0x52>
 8000cfc:	4b09      	ldr	r3, [pc, #36]	@ (8000d24 <usb_class_get_std_descr+0x94>)
 8000cfe:	e7f0      	b.n	8000ce2 <usb_class_get_std_descr+0x52>
 8000d00:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
 8000d04:	08001866 	stmdaeq	r0, {r1, r2, r5, r6, fp, ip}
 8000d08:	080019aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, fp, ip}
 8000d0c:	080017e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, ip}
 8000d10:	080017f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip}
 8000d14:	08001818 	stmdaeq	r0, {r3, r4, fp, ip}
 8000d18:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
 8000d1c:	0800182e 	stmdaeq	r0, {r1, r2, r3, r5, fp, ip}
 8000d20:	08001842 	stmdaeq	r0, {r1, r6, fp, ip}
 8000d24:	080017dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, ip}

08000d28 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000d28:	b570      	push	{r4, r5, r6, lr}
 8000d2a:	4604      	mov	r4, r0
 8000d2c:	460d      	mov	r5, r1
 8000d2e:	4616      	mov	r6, r2
  if( hid_ep0_in( req, data, size ) )return 1;
 8000d30:	f7ff ff26 	bl	8000b80 <hid_ep0_in>
 8000d34:	b108      	cbz	r0, 8000d3a <usb_class_ep0_in+0x12>
 8000d36:	2001      	movs	r0, #1
  if( mic_ep0_in( req, data, size ) )return 1;
  if( programmer_ep0_in( req, data, size ) )return 1;
  if( usb_log_ep0_in( req, data, size ) )return 1;
  return 0;
}
 8000d38:	bd70      	pop	{r4, r5, r6, pc}
  if( programmer_ep0_in( req, data, size ) )return 1;
 8000d3a:	4620      	mov	r0, r4
 8000d3c:	f000 f978 	bl	8001030 <programmer_ep0_in>
 8000d40:	2800      	cmp	r0, #0
 8000d42:	d1f8      	bne.n	8000d36 <usb_class_ep0_in+0xe>
  if( usb_log_ep0_in( req, data, size ) )return 1;
 8000d44:	4632      	mov	r2, r6
 8000d46:	4629      	mov	r1, r5
 8000d48:	4620      	mov	r0, r4
 8000d4a:	f000 fbd3 	bl	80014f4 <usb_log_ep0_in>
 8000d4e:	3800      	subs	r0, #0
 8000d50:	bf18      	it	ne
 8000d52:	2001      	movne	r0, #1
 8000d54:	e7f0      	b.n	8000d38 <usb_class_ep0_in+0x10>

08000d56 <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000d56:	b570      	push	{r4, r5, r6, lr}
 8000d58:	4604      	mov	r4, r0
 8000d5a:	460d      	mov	r5, r1
 8000d5c:	4616      	mov	r6, r2
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000d5e:	f7ff ff31 	bl	8000bc4 <hid_ep0_out>
 8000d62:	b108      	cbz	r0, 8000d68 <usb_class_ep0_out+0x12>
 8000d64:	2001      	movs	r0, #1
  if( mic_ep0_out( req, offset, rx_size ) )return 1;
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
  if( usb_log_ep0_out( req, offset, rx_size ) )return 1;
  return 0;
}
 8000d66:	bd70      	pop	{r4, r5, r6, pc}
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
 8000d68:	4632      	mov	r2, r6
 8000d6a:	4629      	mov	r1, r5
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	f000 f9b5 	bl	80010dc <programmer_ep0_out>
 8000d72:	2800      	cmp	r0, #0
 8000d74:	d1f6      	bne.n	8000d64 <usb_class_ep0_out+0xe>
  if( usb_log_ep0_out( req, offset, rx_size ) )return 1;
 8000d76:	4632      	mov	r2, r6
 8000d78:	4629      	mov	r1, r5
 8000d7a:	4620      	mov	r0, r4
 8000d7c:	f000 fbd0 	bl	8001520 <usb_log_ep0_out>
 8000d80:	3800      	subs	r0, #0
 8000d82:	bf18      	it	ne
 8000d84:	2001      	movne	r0, #1
 8000d86:	e7ee      	b.n	8000d66 <usb_class_ep0_out+0x10>

08000d88 <usb_class_init>:

void usb_class_init(){
 8000d88:	b508      	push	{r3, lr}
  hid_init();
 8000d8a:	f7ff ff4d 	bl	8000c28 <hid_init>
  usb_ep_init_double( ENDP_MIC | 0x80, USB_ENDP_ISO, ENDP_MIC_SIZE, mic_in_callback );
 8000d8e:	2087      	movs	r0, #135	@ 0x87
 8000d90:	2264      	movs	r2, #100	@ 0x64
 8000d92:	4b3e      	ldr	r3, [pc, #248]	@ (8000e8c <usb_class_init+0x104>)
 8000d94:	2101      	movs	r1, #1
 8000d96:	f7ff fbc9 	bl	800052c <usb_ep_init_double>
  GPIO_config(ADC_IN);
 8000d9a:	4b3d      	ldr	r3, [pc, #244]	@ (8000e90 <usb_class_init+0x108>)
 8000d9c:	681a      	ldr	r2, [r3, #0]
 8000d9e:	f042 0203 	orr.w	r2, r2, #3
 8000da2:	601a      	str	r2, [r3, #0]
 8000da4:	689a      	ldr	r2, [r3, #8]
 8000da6:	f022 0203 	bic.w	r2, r2, #3
 8000daa:	609a      	str	r2, [r3, #8]
  RCC->CR |= RCC_CR_HSION;
 8000dac:	f503 5350 	add.w	r3, r3, #13312	@ 0x3400
 8000db0:	681a      	ldr	r2, [r3, #0]
 8000db2:	f042 0201 	orr.w	r2, r2, #1
 8000db6:	601a      	str	r2, [r3, #0]
 8000db8:	f640 72ff 	movw	r2, #4095	@ 0xfff
    if(RCC->CR & RCC_CR_HSIRDY){i=0x1FFF; break;}
 8000dbc:	6819      	ldr	r1, [r3, #0]
 8000dbe:	0789      	lsls	r1, r1, #30
 8000dc0:	d403      	bmi.n	8000dca <usb_class_init+0x42>
  for(uint16_t i=0;i<0x0FFF;i++){
 8000dc2:	3a01      	subs	r2, #1
 8000dc4:	b292      	uxth	r2, r2
 8000dc6:	2a00      	cmp	r2, #0
 8000dc8:	d1f8      	bne.n	8000dbc <usb_class_init+0x34>
  RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000dca:	6a1a      	ldr	r2, [r3, #32]
 8000dcc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000dd0:	621a      	str	r2, [r3, #32]
  ADC->CCR |= ADC_CCR_TSVREFE;
 8000dd2:	4b30      	ldr	r3, [pc, #192]	@ (8000e94 <usb_class_init+0x10c>)
 8000dd4:	685a      	ldr	r2, [r3, #4]
  ADC_SAMPLING_TIME( ADC_1, marg3(ADC_IN), ADC_SAMPL_TIME_4 );
 8000dd6:	f5a3 7340 	sub.w	r3, r3, #768	@ 0x300
  ADC->CCR |= ADC_CCR_TSVREFE;
 8000dda:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000dde:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
  PM_BITMASK( ADC->CCR, ADC_CCR_ADCPRE, ADC_SPEED_1 ); //prescaler: 1/1
 8000de2:	f8d3 2304 	ldr.w	r2, [r3, #772]	@ 0x304
 8000de6:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8000dea:	f8c3 2304 	str.w	r2, [r3, #772]	@ 0x304
  ADC_SAMPLING_TIME( ADC_1, marg3(ADC_IN), ADC_SAMPL_TIME_4 );
 8000dee:	695a      	ldr	r2, [r3, #20]
 8000df0:	f022 62e0 	bic.w	r2, r2, #117440512	@ 0x7000000
 8000df4:	615a      	str	r2, [r3, #20]
  ADC_SEQ_SET( ADC_1, 1, marg3(ADC_IN) );
 8000df6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8000df8:	f022 021f 	bic.w	r2, r2, #31
 8000dfc:	f042 0208 	orr.w	r2, r2, #8
 8000e00:	641a      	str	r2, [r3, #64]	@ 0x40
 8000e02:	681a      	ldr	r2, [r3, #0]
 8000e04:	05d2      	lsls	r2, r2, #23
 8000e06:	d4fc      	bmi.n	8000e02 <usb_class_init+0x7a>
 8000e08:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
  ADC_SEQ_CNT( ADC_1, 1 );
 8000e0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000e0e:	f022 72f8 	bic.w	r2, r2, #32505856	@ 0x1f00000
 8000e12:	631a      	str	r2, [r3, #48]	@ 0x30
  ADC_Trigger( ADC_1, ADC_TRIG_TIM2_2 );
 8000e14:	689a      	ldr	r2, [r3, #8]
 8000e16:	f022 527c 	bic.w	r2, r2, #1056964608	@ 0x3f000000
 8000e1a:	f042 5298 	orr.w	r2, r2, #318767104	@ 0x13000000
 8000e1e:	609a      	str	r2, [r3, #8]
  ADC1->CR1 |= ADC_CR1_EOCIE;
 8000e20:	685a      	ldr	r2, [r3, #4]
 8000e22:	f042 0220 	orr.w	r2, r2, #32
 8000e26:	605a      	str	r2, [r3, #4]
 8000e28:	4a1b      	ldr	r2, [pc, #108]	@ (8000e98 <usb_class_init+0x110>)
 8000e2a:	6011      	str	r1, [r2, #0]
  ADC1->CR2 |= ADC_CR2_ADON;
 8000e2c:	689a      	ldr	r2, [r3, #8]
 8000e2e:	f042 0201 	orr.w	r2, r2, #1
 8000e32:	609a      	str	r2, [r3, #8]
  while(! (ADC1->SR & ADC_SR_ADONS) ){}
 8000e34:	4a19      	ldr	r2, [pc, #100]	@ (8000e9c <usb_class_init+0x114>)
 8000e36:	6813      	ldr	r3, [r2, #0]
 8000e38:	065b      	lsls	r3, r3, #25
 8000e3a:	d5fc      	bpl.n	8000e36 <usb_class_init+0xae>
  RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000e3c:	4a18      	ldr	r2, [pc, #96]	@ (8000ea0 <usb_class_init+0x118>)
 8000e3e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8000e40:	f043 0301 	orr.w	r3, r3, #1
 8000e44:	6253      	str	r3, [r2, #36]	@ 0x24
  TIM2->PSC = 0;
 8000e46:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000e4a:	2200      	movs	r2, #0
 8000e4c:	629a      	str	r2, [r3, #40]	@ 0x28
  TIM2->ARR = TIM2_ARR_AVG;
 8000e4e:	22b5      	movs	r2, #181	@ 0xb5
 8000e50:	62da      	str	r2, [r3, #44]	@ 0x2c
  TIM2->CR1 |= TIM_CR1_ARPE;
 8000e52:	681a      	ldr	r2, [r3, #0]
 8000e54:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000e58:	601a      	str	r2, [r3, #0]
  PM_BITMASK( TIM2->CCMR1, TIM_CCMR1_OC2M, 0b110 );
 8000e5a:	699a      	ldr	r2, [r3, #24]
 8000e5c:	f422 42e0 	bic.w	r2, r2, #28672	@ 0x7000
 8000e60:	f442 42c0 	orr.w	r2, r2, #24576	@ 0x6000
 8000e64:	619a      	str	r2, [r3, #24]
  TIM2->CCR2 = 1;
 8000e66:	2201      	movs	r2, #1
 8000e68:	639a      	str	r2, [r3, #56]	@ 0x38
  TIM2->CCMR1 |= TIM_CCMR1_OC2PE;
 8000e6a:	699a      	ldr	r2, [r3, #24]
 8000e6c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8000e70:	619a      	str	r2, [r3, #24]
  TIM2->CCER = TIM_CCER_CC2E;
 8000e72:	2210      	movs	r2, #16
 8000e74:	621a      	str	r2, [r3, #32]
  TIM2->CR1 |= TIM_CR1_CEN;
 8000e76:	681a      	ldr	r2, [r3, #0]
 8000e78:	f042 0201 	orr.w	r2, r2, #1
 8000e7c:	601a      	str	r2, [r3, #0]
  mic_init();
  programmer_init();
 8000e7e:	f000 f977 	bl	8001170 <programmer_init>
  usb_log_init();
}
 8000e82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_log_init();
 8000e86:	f000 bb61 	b.w	800154c <usb_log_init>
 8000e8a:	bf00      	nop
 8000e8c:	08000a05 	stmdaeq	r0, {r0, r2, r9, fp}
 8000e90:	40020400 	andmi	r0, r2, r0, lsl #8
 8000e94:	40012700 	andmi	r2, r1, r0, lsl #14
 8000e98:	e000e100 	and	lr, r0, r0, lsl #2
 8000e9c:	40012400 	andmi	r2, r1, r0, lsl #8
 8000ea0:	40023800 	andmi	r3, r2, r0, lsl #16

08000ea4 <usb_class_poll>:

void usb_class_poll(){
 8000ea4:	b508      	push	{r3, lr}
  hid_poll();
 8000ea6:	f7ff fee5 	bl	8000c74 <hid_poll>
  mic_poll();
  programmer_poll();
 8000eaa:	f000 fa29 	bl	8001300 <programmer_poll>
  usb_log_poll();
}
 8000eae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_log_poll();
 8000eb2:	f000 bbbb 	b.w	800162c <usb_log_poll>

08000eb6 <usb_class_sof>:

void usb_class_sof(){
  mic_sof();
 8000eb6:	f7ff be2b 	b.w	8000b10 <mic_sof>
 8000eba:	bf00      	nop

08000ebc <uart_buf_size>:
  volatile uint8_t st,en;
  volatile uint8_t arr[UART_SIZE];
}uart_buffer;

uint8_t uart_buf_size(uart_buffer *buf){
  return ((buf->st - buf->en) & UART_MASK);
 8000ebc:	7803      	ldrb	r3, [r0, #0]
 8000ebe:	7842      	ldrb	r2, [r0, #1]
 8000ec0:	1a98      	subs	r0, r3, r2
}
 8000ec2:	b2c0      	uxtb	r0, r0
 8000ec4:	4770      	bx	lr

08000ec6 <uart_buf_read>:
  return ((buf->st - buf->en) & UART_MASK);
 8000ec6:	7801      	ldrb	r1, [r0, #0]
 8000ec8:	7842      	ldrb	r2, [r0, #1]

uint8_t uart_buf_read(uart_buffer *buf){
 8000eca:	4603      	mov	r3, r0
  uint8_t res;
  if(uart_buf_size(buf) == 0)return 0;
 8000ecc:	4291      	cmp	r1, r2
 8000ece:	d00b      	beq.n	8000ee8 <uart_buf_read+0x22>
  res = buf->arr[buf->st];
 8000ed0:	7802      	ldrb	r2, [r0, #0]
 8000ed2:	4402      	add	r2, r0
 8000ed4:	7890      	ldrb	r0, [r2, #2]
  buf->st++;
 8000ed6:	781a      	ldrb	r2, [r3, #0]
  res = buf->arr[buf->st];
 8000ed8:	b2c0      	uxtb	r0, r0
  buf->st++;
 8000eda:	3201      	adds	r2, #1
 8000edc:	b2d2      	uxtb	r2, r2
 8000ede:	701a      	strb	r2, [r3, #0]
  buf->st &= UART_MASK;
 8000ee0:	781a      	ldrb	r2, [r3, #0]
 8000ee2:	b2d2      	uxtb	r2, r2
 8000ee4:	701a      	strb	r2, [r3, #0]
  return res;
 8000ee6:	4770      	bx	lr
  if(uart_buf_size(buf) == 0)return 0;
 8000ee8:	2000      	movs	r0, #0
}
 8000eea:	4770      	bx	lr

08000eec <uart_buf_write>:
  return ((buf->st - buf->en) & UART_MASK);
 8000eec:	7803      	ldrb	r3, [r0, #0]
 8000eee:	7842      	ldrb	r2, [r0, #1]
 8000ef0:	1a9b      	subs	r3, r3, r2

void uart_buf_write(uart_buffer *buf, uint8_t dat){
  if(uart_buf_size(buf)!=1){
 8000ef2:	b2db      	uxtb	r3, r3
 8000ef4:	2b01      	cmp	r3, #1
 8000ef6:	d009      	beq.n	8000f0c <uart_buf_write+0x20>
    buf->arr[buf->en]=dat;
 8000ef8:	7843      	ldrb	r3, [r0, #1]
 8000efa:	4403      	add	r3, r0
 8000efc:	7099      	strb	r1, [r3, #2]
    buf->en++; buf->en &= UART_MASK;
 8000efe:	7843      	ldrb	r3, [r0, #1]
 8000f00:	3301      	adds	r3, #1
 8000f02:	b2db      	uxtb	r3, r3
 8000f04:	7043      	strb	r3, [r0, #1]
 8000f06:	7843      	ldrb	r3, [r0, #1]
 8000f08:	b2db      	uxtb	r3, r3
 8000f0a:	7043      	strb	r3, [r0, #1]
  }
}
 8000f0c:	4770      	bx	lr

08000f0e <USART1_IRQHandler>:
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef UART1_EN
static uart_buffer uart1_rx;
static uart_buffer uart1_tx;

void USART1_IRQHandler(void){
 8000f0e:	b510      	push	{r4, lr}
  if( USART1->SR & USART_SR_RXNE ){
 8000f10:	4c0f      	ldr	r4, [pc, #60]	@ (8000f50 <USART1_IRQHandler+0x42>)
 8000f12:	6823      	ldr	r3, [r4, #0]
 8000f14:	069a      	lsls	r2, r3, #26
 8000f16:	d506      	bpl.n	8000f26 <USART1_IRQHandler+0x18>
    uint8_t temp = USART1->DR;
 8000f18:	6861      	ldr	r1, [r4, #4]
    uart_buf_write(&uart1_rx, temp);
 8000f1a:	480e      	ldr	r0, [pc, #56]	@ (8000f54 <USART1_IRQHandler+0x46>)
 8000f1c:	b2c9      	uxtb	r1, r1
  }else if( USART1->SR & USART_SR_TXE ){
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
      else USART1->CR1 &=~ USART_CR1_TXEIE;
  }
}
 8000f1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    uart_buf_write(&uart1_rx, temp);
 8000f22:	f7ff bfe3 	b.w	8000eec <uart_buf_write>
  }else if( USART1->SR & USART_SR_TXE ){
 8000f26:	6823      	ldr	r3, [r4, #0]
 8000f28:	061b      	lsls	r3, r3, #24
 8000f2a:	d50b      	bpl.n	8000f44 <USART1_IRQHandler+0x36>
  return ((buf->st - buf->en) & UART_MASK);
 8000f2c:	4809      	ldr	r0, [pc, #36]	@ (8000f54 <USART1_IRQHandler+0x46>)
 8000f2e:	f890 2102 	ldrb.w	r2, [r0, #258]	@ 0x102
 8000f32:	f890 3103 	ldrb.w	r3, [r0, #259]	@ 0x103
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
 8000f36:	429a      	cmp	r2, r3
 8000f38:	d005      	beq.n	8000f46 <USART1_IRQHandler+0x38>
 8000f3a:	f500 7081 	add.w	r0, r0, #258	@ 0x102
 8000f3e:	f7ff ffc2 	bl	8000ec6 <uart_buf_read>
 8000f42:	6060      	str	r0, [r4, #4]
}
 8000f44:	bd10      	pop	{r4, pc}
      else USART1->CR1 &=~ USART_CR1_TXEIE;
 8000f46:	68e3      	ldr	r3, [r4, #12]
 8000f48:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000f4c:	60e3      	str	r3, [r4, #12]
}
 8000f4e:	e7f9      	b.n	8000f44 <USART1_IRQHandler+0x36>
 8000f50:	40013800 	andmi	r3, r1, r0, lsl #16
 8000f54:	200000e8 	andcs	r0, r0, r8, ror #1

08000f58 <UART1_write>:

void UART1_write(uint8_t *data, uint8_t len){
 8000f58:	b570      	push	{r4, r5, r6, lr}
 8000f5a:	4604      	mov	r4, r0
  while(len--)UART_putc(1, *(data++));
 8000f5c:	1845      	adds	r5, r0, r1
 8000f5e:	4e07      	ldr	r6, [pc, #28]	@ (8000f7c <UART1_write+0x24>)
 8000f60:	4807      	ldr	r0, [pc, #28]	@ (8000f80 <UART1_write+0x28>)
 8000f62:	42ac      	cmp	r4, r5
 8000f64:	d100      	bne.n	8000f68 <UART1_write+0x10>
}
 8000f66:	bd70      	pop	{r4, r5, r6, pc}
  while(len--)UART_putc(1, *(data++));
 8000f68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f6c:	f7ff ffbe 	bl	8000eec <uart_buf_write>
 8000f70:	68f3      	ldr	r3, [r6, #12]
 8000f72:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000f76:	60f3      	str	r3, [r6, #12]
 8000f78:	e7f3      	b.n	8000f62 <UART1_write+0xa>
 8000f7a:	bf00      	nop
 8000f7c:	40013800 	andmi	r3, r1, r0, lsl #16
 8000f80:	200001ea 	andcs	r0, r0, sl, ror #3

08000f84 <UART1_puts>:

void UART1_puts(char *str){
 8000f84:	b538      	push	{r3, r4, r5, lr}
 8000f86:	1e44      	subs	r4, r0, #1
  while(str[0] != 0)UART_putc(1, *(str++));
 8000f88:	4d06      	ldr	r5, [pc, #24]	@ (8000fa4 <UART1_puts+0x20>)
 8000f8a:	4807      	ldr	r0, [pc, #28]	@ (8000fa8 <UART1_puts+0x24>)
 8000f8c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8000f90:	b901      	cbnz	r1, 8000f94 <UART1_puts+0x10>
}
 8000f92:	bd38      	pop	{r3, r4, r5, pc}
  while(str[0] != 0)UART_putc(1, *(str++));
 8000f94:	f7ff ffaa 	bl	8000eec <uart_buf_write>
 8000f98:	68eb      	ldr	r3, [r5, #12]
 8000f9a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000f9e:	60eb      	str	r3, [r5, #12]
 8000fa0:	e7f4      	b.n	8000f8c <UART1_puts+0x8>
 8000fa2:	bf00      	nop
 8000fa4:	40013800 	andmi	r3, r1, r0, lsl #16
 8000fa8:	200001ea 	andcs	r0, r0, sl, ror #3

08000fac <UART1_read>:

void UART1_read(uint8_t *data, uint8_t len){
 8000fac:	b570      	push	{r4, r5, r6, lr}
 8000fae:	4604      	mov	r4, r0
  return ((buf->st - buf->en) & UART_MASK);
 8000fb0:	4e08      	ldr	r6, [pc, #32]	@ (8000fd4 <UART1_read+0x28>)
 8000fb2:	1845      	adds	r5, r0, r1
  while(len--){
 8000fb4:	42ac      	cmp	r4, r5
 8000fb6:	d100      	bne.n	8000fba <UART1_read+0xe>
    while(UART_rx_count(1) == 0){}
    *(data++) = UART_getc(1);
  }
}
 8000fb8:	bd70      	pop	{r4, r5, r6, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8000fba:	7832      	ldrb	r2, [r6, #0]
 8000fbc:	7873      	ldrb	r3, [r6, #1]
    while(UART_rx_count(1) == 0){}
 8000fbe:	1a9b      	subs	r3, r3, r2
 8000fc0:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 8000fc4:	2b00      	cmp	r3, #0
 8000fc6:	d0f8      	beq.n	8000fba <UART1_read+0xe>
    *(data++) = UART_getc(1);
 8000fc8:	4630      	mov	r0, r6
 8000fca:	f7ff ff7c 	bl	8000ec6 <uart_buf_read>
 8000fce:	f804 0b01 	strb.w	r0, [r4], #1
 8000fd2:	e7ef      	b.n	8000fb4 <UART1_read+0x8>
 8000fd4:	200000e8 	andcs	r0, r0, r8, ror #1

08000fd8 <UART1_gets>:

void UART1_gets(char *str, uint8_t len){
 8000fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fda:	4605      	mov	r5, r0
 8000fdc:	1e4c      	subs	r4, r1, #1
  return ((buf->st - buf->en) & UART_MASK);
 8000fde:	4e13      	ldr	r6, [pc, #76]	@ (800102c <UART1_gets+0x54>)
 8000fe0:	b2e4      	uxtb	r4, r4
  while(len--){
 8000fe2:	2cff      	cmp	r4, #255	@ 0xff
 8000fe4:	462f      	mov	r7, r5
 8000fe6:	d10d      	bne.n	8001004 <UART1_gets+0x2c>
    while(UART_rx_count(1) == 0){}
    str[0] = UART_getc(1);
    if(str[0] == 0 || str[0] == 13)break;
    str++;
  }
  if(str[0] != 0){
 8000fe8:	783b      	ldrb	r3, [r7, #0]
 8000fea:	b153      	cbz	r3, 8001002 <UART1_gets+0x2a>
    if(len < 3)str[0] = 0;
 8000fec:	2c02      	cmp	r4, #2
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000fee:	bf83      	ittte	hi
 8000ff0:	230a      	movhi	r3, #10
 8000ff2:	703b      	strbhi	r3, [r7, #0]
 8000ff4:	230d      	movhi	r3, #13
    if(len < 3)str[0] = 0;
 8000ff6:	2300      	movls	r3, #0
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8000ff8:	bf85      	ittet	hi
 8000ffa:	707b      	strbhi	r3, [r7, #1]
 8000ffc:	2300      	movhi	r3, #0
    if(len < 3)str[0] = 0;
 8000ffe:	703b      	strbls	r3, [r7, #0]
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8001000:	70bb      	strbhi	r3, [r7, #2]
  }
}
 8001002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8001004:	7832      	ldrb	r2, [r6, #0]
 8001006:	7873      	ldrb	r3, [r6, #1]
    while(UART_rx_count(1) == 0){}
 8001008:	1a9b      	subs	r3, r3, r2
 800100a:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 800100e:	2b00      	cmp	r3, #0
 8001010:	d0f8      	beq.n	8001004 <UART1_gets+0x2c>
    str[0] = UART_getc(1);
 8001012:	4630      	mov	r0, r6
 8001014:	f7ff ff57 	bl	8000ec6 <uart_buf_read>
 8001018:	f805 0b01 	strb.w	r0, [r5], #1
    if(str[0] == 0 || str[0] == 13)break;
 800101c:	2800      	cmp	r0, #0
 800101e:	d0e3      	beq.n	8000fe8 <UART1_gets+0x10>
 8001020:	1e63      	subs	r3, r4, #1
 8001022:	280d      	cmp	r0, #13
 8001024:	b2db      	uxtb	r3, r3
 8001026:	d0df      	beq.n	8000fe8 <UART1_gets+0x10>
 8001028:	461c      	mov	r4, r3
 800102a:	e7da      	b.n	8000fe2 <UART1_gets+0xa>
 800102c:	200000e8 	andcs	r0, r0, r8, ror #1

08001030 <programmer_ep0_in>:
#define timeout_reset() do{timeout_ms = systick_ms() + TIMEOUT_MS;}while(0)

void uart_ctrl( uint8_t *buf, int size);

char programmer_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8001030:	7803      	ldrb	r3, [r0, #0]
 8001032:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001036:	2b21      	cmp	r3, #33	@ 0x21
 8001038:	d110      	bne.n	800105c <programmer_ep0_in+0x2c>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 800103a:	7843      	ldrb	r3, [r0, #1]
 800103c:	2b21      	cmp	r3, #33	@ 0x21
 800103e:	d10d      	bne.n	800105c <programmer_ep0_in+0x2c>
      if( req->wIndex == ifnum(interface_tty) ){
 8001040:	8883      	ldrh	r3, [r0, #4]
 8001042:	2b01      	cmp	r3, #1
 8001044:	d104      	bne.n	8001050 <programmer_ep0_in+0x20>
        *data = (void*)&tty_cfg;
 8001046:	4b06      	ldr	r3, [pc, #24]	@ (8001060 <programmer_ep0_in+0x30>)
        *size = sizeof(tty_cfg);
      }else if( req->wIndex == ifnum(interface_progr) ){
        *data = (void*)&progr_cfg;
 8001048:	600b      	str	r3, [r1, #0]
        *size = sizeof(progr_cfg);
 800104a:	2307      	movs	r3, #7
 800104c:	8013      	strh	r3, [r2, #0]
 800104e:	e001      	b.n	8001054 <programmer_ep0_in+0x24>
      }else if( req->wIndex == ifnum(interface_progr) ){
 8001050:	2b03      	cmp	r3, #3
 8001052:	d001      	beq.n	8001058 <programmer_ep0_in+0x28>
      }
      return 1;
 8001054:	2001      	movs	r0, #1
 8001056:	4770      	bx	lr
        *data = (void*)&progr_cfg;
 8001058:	4b02      	ldr	r3, [pc, #8]	@ (8001064 <programmer_ep0_in+0x34>)
 800105a:	e7f5      	b.n	8001048 <programmer_ep0_in+0x18>
    }
  }
  return 0;
 800105c:	2000      	movs	r0, #0
}
 800105e:	4770      	bx	lr
 8001060:	2000000c 	andcs	r0, r0, ip
 8001064:	20000013 	andcs	r0, r0, r3, lsl r0

08001068 <uart_cfg>:

void uart_cfg( volatile struct cdc_linecoding *cfg ){
  UART_speed( USART, cfg->baudrate );
 8001068:	4a19      	ldr	r2, [pc, #100]	@ (80010d0 <uart_cfg+0x68>)
 800106a:	6a13      	ldr	r3, [r2, #32]
 800106c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001070:	6213      	str	r3, [r2, #32]
 8001072:	6803      	ldr	r3, [r0, #0]
 8001074:	4a17      	ldr	r2, [pc, #92]	@ (80010d4 <uart_cfg+0x6c>)
 8001076:	fbb2 f2f3 	udiv	r2, r2, r3
 800107a:	4b17      	ldr	r3, [pc, #92]	@ (80010d8 <uart_cfg+0x70>)
 800107c:	609a      	str	r2, [r3, #8]
  //stopbits
  
  //parity
  if(cfg->parity == 0){ //none
 800107e:	7942      	ldrb	r2, [r0, #5]
 8001080:	b942      	cbnz	r2, 8001094 <uart_cfg+0x2c>
    USART1->CR1 &=~USART_CR1_PCE;
 8001082:	68da      	ldr	r2, [r3, #12]
 8001084:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001088:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_M;
 800108a:	68da      	ldr	r2, [r3, #12]
 800108c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 |= USART_CR1_PS;
  }else if(cfg->parity == 2){ //even
    USART1->CR1 |= USART_CR1_M;
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 &=~USART_CR1_PS;
 8001090:	60da      	str	r2, [r3, #12]
  }
}
 8001092:	4770      	bx	lr
  }else if(cfg->parity == 1){ //odd
 8001094:	7942      	ldrb	r2, [r0, #5]
 8001096:	2a01      	cmp	r2, #1
 8001098:	d10b      	bne.n	80010b2 <uart_cfg+0x4a>
    USART1->CR1 |= USART_CR1_M;
 800109a:	68da      	ldr	r2, [r3, #12]
 800109c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80010a0:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 80010a2:	68da      	ldr	r2, [r3, #12]
 80010a4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80010a8:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PS;
 80010aa:	68da      	ldr	r2, [r3, #12]
 80010ac:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80010b0:	e7ee      	b.n	8001090 <uart_cfg+0x28>
  }else if(cfg->parity == 2){ //even
 80010b2:	7942      	ldrb	r2, [r0, #5]
 80010b4:	2a02      	cmp	r2, #2
 80010b6:	d1ec      	bne.n	8001092 <uart_cfg+0x2a>
    USART1->CR1 |= USART_CR1_M;
 80010b8:	68da      	ldr	r2, [r3, #12]
 80010ba:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80010be:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 80010c0:	68da      	ldr	r2, [r3, #12]
 80010c2:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80010c6:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_PS;
 80010c8:	68da      	ldr	r2, [r3, #12]
 80010ca:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80010ce:	e7df      	b.n	8001090 <uart_cfg+0x28>
 80010d0:	40023800 	andmi	r3, r2, r0, lsl #16
 80010d4:	01e84800 	mvneq	r4, r0, lsl #16
 80010d8:	40013800 	andmi	r3, r1, r0, lsl #16

080010dc <programmer_ep0_out>:

char programmer_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80010dc:	b510      	push	{r4, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80010de:	7803      	ldrb	r3, [r0, #0]
char programmer_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80010e0:	b09a      	sub	sp, #104	@ 0x68
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80010e2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80010e6:	2b21      	cmp	r3, #33	@ 0x21
 80010e8:	d13a      	bne.n	8001160 <programmer_ep0_out+0x84>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 80010ea:	7843      	ldrb	r3, [r0, #1]
 80010ec:	2b20      	cmp	r3, #32
 80010ee:	d137      	bne.n	8001160 <programmer_ep0_out+0x84>
      if(rx_size == 0)return 1;
 80010f0:	b162      	cbz	r2, 800110c <programmer_ep0_out+0x30>
      if( req->wIndex == ifnum(interface_tty) ){
 80010f2:	8880      	ldrh	r0, [r0, #4]
 80010f4:	2801      	cmp	r0, #1
 80010f6:	d10c      	bne.n	8001112 <programmer_ep0_out+0x36>
 80010f8:	491a      	ldr	r1, [pc, #104]	@ (8001164 <programmer_ep0_out+0x88>)
 80010fa:	f7ff fba3 	bl	8000844 <_usb_ep_read>
        usb_ep_read(0, (void*)&tty_cfg);
        if(ttymode == TTYM_NORMAL){
 80010fe:	4b1a      	ldr	r3, [pc, #104]	@ (8001168 <programmer_ep0_out+0x8c>)
 8001100:	f893 3204 	ldrb.w	r3, [r3, #516]	@ 0x204
 8001104:	b913      	cbnz	r3, 800110c <programmer_ep0_out+0x30>
          uart_cfg( &tty_cfg );
 8001106:	4817      	ldr	r0, [pc, #92]	@ (8001164 <programmer_ep0_out+0x88>)
 8001108:	f7ff ffae 	bl	8001068 <uart_cfg>
      if(rx_size == 0)return 1;
 800110c:	2001      	movs	r0, #1
      //  1   : RTS
      //  0   : DTR
    }
  }
  return 0;
}
 800110e:	b01a      	add	sp, #104	@ 0x68
 8001110:	bd10      	pop	{r4, pc}
      }else if( req->wIndex == ifnum(interface_progr) ){
 8001112:	2803      	cmp	r0, #3
 8001114:	d11f      	bne.n	8001156 <programmer_ep0_out+0x7a>
 8001116:	4c13      	ldr	r4, [pc, #76]	@ (8001164 <programmer_ep0_out+0x88>)
 8001118:	2001      	movs	r0, #1
 800111a:	1de1      	adds	r1, r4, #7
 800111c:	f7ff fb92 	bl	8000844 <_usb_ep_read>
        if( progr_cfg.baudrate == SPEED_CTRL ){
 8001120:	f8d4 3007 	ldr.w	r3, [r4, #7]
 8001124:	4910      	ldr	r1, [pc, #64]	@ (8001168 <programmer_ep0_out+0x8c>)
 8001126:	2b32      	cmp	r3, #50	@ 0x32
 8001128:	d10a      	bne.n	8001140 <programmer_ep0_out+0x64>
          ttymode = TTYM_CTRL;
 800112a:	2302      	movs	r3, #2
 800112c:	f881 3204 	strb.w	r3, [r1, #516]	@ 0x204
 8001130:	4b0e      	ldr	r3, [pc, #56]	@ (800116c <programmer_ep0_out+0x90>)
 8001132:	681b      	ldr	r3, [r3, #0]
          timeout_reset();
 8001134:	f503 531c 	add.w	r3, r3, #9984	@ 0x2700
 8001138:	3310      	adds	r3, #16
 800113a:	f8c1 3208 	str.w	r3, [r1, #520]	@ 0x208
 800113e:	e7e5      	b.n	800110c <programmer_ep0_out+0x30>
        }else if( ttymode == TTYM_CTRL ){
 8001140:	f891 3204 	ldrb.w	r3, [r1, #516]	@ 0x204
 8001144:	2b02      	cmp	r3, #2
 8001146:	d1e1      	bne.n	800110c <programmer_ep0_out+0x30>
          ttymode = TTYM_PROGR;
 8001148:	2301      	movs	r3, #1
          uart_cfg( &progr_cfg );
 800114a:	1de0      	adds	r0, r4, #7
          ttymode = TTYM_PROGR;
 800114c:	f881 3204 	strb.w	r3, [r1, #516]	@ 0x204
          uart_cfg( &progr_cfg );
 8001150:	f7ff ff8a 	bl	8001068 <uart_cfg>
 8001154:	e7ec      	b.n	8001130 <programmer_ep0_out+0x54>
 8001156:	a901      	add	r1, sp, #4
 8001158:	2001      	movs	r0, #1
 800115a:	f7ff fb73 	bl	8000844 <_usb_ep_read>
 800115e:	e7d5      	b.n	800110c <programmer_ep0_out+0x30>
  return 0;
 8001160:	2000      	movs	r0, #0
 8001162:	e7d4      	b.n	800110e <programmer_ep0_out+0x32>
 8001164:	2000000c 	andcs	r0, r0, ip
 8001168:	200000e8 	andcs	r0, r0, r8, ror #1
 800116c:	20000024 	andcs	r0, r0, r4, lsr #32

08001170 <programmer_init>:
  }
}

static char initflag = 0;

void programmer_init(){
 8001170:	b570      	push	{r4, r5, r6, lr}
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 8001172:	2620      	movs	r6, #32
 8001174:	4934      	ldr	r1, [pc, #208]	@ (8001248 <programmer_init+0xd8>)
  UART_init(USART, 9600);
 8001176:	4b35      	ldr	r3, [pc, #212]	@ (800124c <programmer_init+0xdc>)
 8001178:	f8c1 6084 	str.w	r6, [r1, #132]	@ 0x84
 800117c:	681a      	ldr	r2, [r3, #0]
 800117e:	2400      	movs	r4, #0
 8001180:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8001184:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8001188:	601a      	str	r2, [r3, #0]
 800118a:	689a      	ldr	r2, [r3, #8]
 800118c:	4d30      	ldr	r5, [pc, #192]	@ (8001250 <programmer_init+0xe0>)
 800118e:	f442 1240 	orr.w	r2, r2, #3145728	@ 0x300000
 8001192:	609a      	str	r2, [r3, #8]
 8001194:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
  UART_puts(USART, "Test\n\r");
 8001196:	482f      	ldr	r0, [pc, #188]	@ (8001254 <programmer_init+0xe4>)
  UART_init(USART, 9600);
 8001198:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
 800119c:	f442 62e0 	orr.w	r2, r2, #1792	@ 0x700
 80011a0:	625a      	str	r2, [r3, #36]	@ 0x24
 80011a2:	681a      	ldr	r2, [r3, #0]
 80011a4:	f422 2240 	bic.w	r2, r2, #786432	@ 0xc0000
 80011a8:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 80011ac:	601a      	str	r2, [r3, #0]
 80011ae:	689a      	ldr	r2, [r3, #8]
 80011b0:	f442 2240 	orr.w	r2, r2, #786432	@ 0xc0000
 80011b4:	609a      	str	r2, [r3, #8]
 80011b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80011b8:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80011bc:	f042 0270 	orr.w	r2, r2, #112	@ 0x70
 80011c0:	625a      	str	r2, [r3, #36]	@ 0x24
 80011c2:	4a25      	ldr	r2, [pc, #148]	@ (8001258 <programmer_init+0xe8>)
 80011c4:	6a13      	ldr	r3, [r2, #32]
 80011c6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80011ca:	6213      	str	r3, [r2, #32]
 80011cc:	f640 5205 	movw	r2, #3333	@ 0xd05
 80011d0:	4b22      	ldr	r3, [pc, #136]	@ (800125c <programmer_init+0xec>)
 80011d2:	609a      	str	r2, [r3, #8]
 80011d4:	f242 022c 	movw	r2, #8236	@ 0x202c
 80011d8:	60da      	str	r2, [r3, #12]
 80011da:	611c      	str	r4, [r3, #16]
 80011dc:	615c      	str	r4, [r3, #20]
 80011de:	619c      	str	r4, [r3, #24]
 80011e0:	702c      	strb	r4, [r5, #0]
 80011e2:	706c      	strb	r4, [r5, #1]
 80011e4:	f885 4102 	strb.w	r4, [r5, #258]	@ 0x102
 80011e8:	f885 4103 	strb.w	r4, [r5, #259]	@ 0x103
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80011ec:	604e      	str	r6, [r1, #4]
  UART_puts(USART, "Test\n\r");
 80011ee:	f7ff fec9 	bl	8000f84 <UART1_puts>
  ttymode = TTYM_NORMAL;
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80011f2:	4623      	mov	r3, r4
 80011f4:	2208      	movs	r2, #8
 80011f6:	2103      	movs	r1, #3
 80011f8:	2084      	movs	r0, #132	@ 0x84
  ttymode = TTYM_NORMAL;
 80011fa:	f885 4204 	strb.w	r4, [r5, #516]	@ 0x204
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80011fe:	f7ff f913 	bl	8000428 <usb_ep_init>
  usb_ep_init( ENDP_TTY_IN   | 0x80, USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 8001202:	4623      	mov	r3, r4
 8001204:	4632      	mov	r2, r6
 8001206:	2102      	movs	r1, #2
 8001208:	2081      	movs	r0, #129	@ 0x81
 800120a:	f7ff f90d 	bl	8000428 <usb_ep_init>
  usb_ep_init( ENDP_TTY_OUT,         USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 800120e:	4623      	mov	r3, r4
 8001210:	4632      	mov	r2, r6
 8001212:	2102      	movs	r1, #2
 8001214:	2001      	movs	r0, #1
 8001216:	f7ff f907 	bl	8000428 <usb_ep_init>

  usb_ep_init( ENDP_PROG_CTL | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800121a:	4623      	mov	r3, r4
 800121c:	2208      	movs	r2, #8
 800121e:	2103      	movs	r1, #3
 8001220:	2085      	movs	r0, #133	@ 0x85
 8001222:	f7ff f901 	bl	8000428 <usb_ep_init>
  usb_ep_init( ENDP_PROG_IN  | 0x80, USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 8001226:	4623      	mov	r3, r4
 8001228:	4632      	mov	r2, r6
 800122a:	2102      	movs	r1, #2
 800122c:	2082      	movs	r0, #130	@ 0x82
 800122e:	f7ff f8fb 	bl	8000428 <usb_ep_init>
  usb_ep_init( ENDP_PROG_OUT,        USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 8001232:	2102      	movs	r1, #2
 8001234:	4623      	mov	r3, r4
 8001236:	4632      	mov	r2, r6
 8001238:	4608      	mov	r0, r1
 800123a:	f7ff f8f5 	bl	8000428 <usb_ep_init>
  initflag = 1;
 800123e:	2301      	movs	r3, #1
 8001240:	f885 320c 	strb.w	r3, [r5, #524]	@ 0x20c
}
 8001244:	bd70      	pop	{r4, r5, r6, pc}
 8001246:	bf00      	nop
 8001248:	e000e100 	and	lr, r0, r0, lsl #2
 800124c:	40020000 	andmi	r0, r2, r0
 8001250:	200000e8 	andcs	r0, r0, r8, ror #1
 8001254:	080019b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, fp, ip}
 8001258:	40023800 	andmi	r3, r2, r0, lsl #16
 800125c:	40013800 	andmi	r3, r1, r0, lsl #16

08001260 <uart_ctrl>:
//*/
#define CTRL_RST	(1<<0)
#define CTRL_BOOT0	(1<<1)
#define CTRL_USB	(1<<2)
//control sequence
void uart_ctrl( uint8_t *buf, int size){
 8001260:	b5f0      	push	{r4, r5, r6, r7, lr}
  //GPO_T( GLED );
  uint8_t val = 0;
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001262:	4b24      	ldr	r3, [pc, #144]	@ (80012f4 <uart_ctrl+0x94>)
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001264:	4d24      	ldr	r5, [pc, #144]	@ (80012f8 <uart_ctrl+0x98>)
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001266:	691b      	ldr	r3, [r3, #16]
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001268:	692a      	ldr	r2, [r5, #16]
  if( GPI_ON(RESET) )val |= CTRL_RST;
 800126a:	f483 7380 	eor.w	r3, r3, #256	@ 0x100
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 800126e:	0712      	lsls	r2, r2, #28
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001270:	f3c3 2300 	ubfx	r3, r3, #8, #1
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001274:	d501      	bpl.n	800127a <uart_ctrl+0x1a>
 8001276:	f043 0302 	orr.w	r3, r3, #2
 800127a:	1e44      	subs	r4, r0, #1
#ifdef USBR
  if( GPI_ON(USBR ) )val |= CTRL_USB;
#endif
  for(int i=0; i<size; i++){
    if(buf[i] == 'z')timeout_ms = 0;
 800127c:	2700      	movs	r7, #0
 800127e:	4e1f      	ldr	r6, [pc, #124]	@ (80012fc <uart_ctrl+0x9c>)
  for(int i=0; i<size; i++){
 8001280:	f1c0 0001 	rsb	r0, r0, #1
 8001284:	e00a      	b.n	800129c <uart_ctrl+0x3c>
    if(buf[i] == 'z')timeout_ms = 0;
 8001286:	7862      	ldrb	r2, [r4, #1]
 8001288:	2a7a      	cmp	r2, #122	@ 0x7a
 800128a:	bf08      	it	eq
 800128c:	f8c6 7208 	streq.w	r7, [r6, #520]	@ 0x208
    if(buf[i] == 'R')val |= CTRL_RST;
 8001290:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8001294:	2a52      	cmp	r2, #82	@ 0x52
 8001296:	d114      	bne.n	80012c2 <uart_ctrl+0x62>
 8001298:	f043 0301 	orr.w	r3, r3, #1
  for(int i=0; i<size; i++){
 800129c:	1902      	adds	r2, r0, r4
 800129e:	428a      	cmp	r2, r1
 80012a0:	dbf1      	blt.n	8001286 <uart_ctrl+0x26>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
    if(buf[i] == 'U')val |= CTRL_USB;
    if(buf[i] == 'u')val &=~CTRL_USB;
  }
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 80012a2:	f013 0f01 	tst.w	r3, #1
 80012a6:	bf14      	ite	ne
 80012a8:	f04f 7180 	movne.w	r1, #16777216	@ 0x1000000
 80012ac:	f44f 7180 	moveq.w	r1, #256	@ 0x100
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 80012b0:	079b      	lsls	r3, r3, #30
 80012b2:	bf4c      	ite	mi
 80012b4:	2308      	movmi	r3, #8
 80012b6:	f44f 2300 	movpl.w	r3, #524288	@ 0x80000
 80012ba:	4a0e      	ldr	r2, [pc, #56]	@ (80012f4 <uart_ctrl+0x94>)
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 80012bc:	6191      	str	r1, [r2, #24]
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 80012be:	61ab      	str	r3, [r5, #24]
#ifdef USBR
  if( val & CTRL_USB)	GPO_ON(USBR);  else GPO_OFF(USBR);
#endif
}
 80012c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if(buf[i] == 'r')val &=~CTRL_RST;
 80012c2:	2a72      	cmp	r2, #114	@ 0x72
 80012c4:	d102      	bne.n	80012cc <uart_ctrl+0x6c>
 80012c6:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012ca:	e7e7      	b.n	800129c <uart_ctrl+0x3c>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
 80012cc:	2a42      	cmp	r2, #66	@ 0x42
 80012ce:	d102      	bne.n	80012d6 <uart_ctrl+0x76>
 80012d0:	f043 0302 	orr.w	r3, r3, #2
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012d4:	e7e2      	b.n	800129c <uart_ctrl+0x3c>
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
 80012d6:	2a62      	cmp	r2, #98	@ 0x62
 80012d8:	d102      	bne.n	80012e0 <uart_ctrl+0x80>
 80012da:	f003 03fd 	and.w	r3, r3, #253	@ 0xfd
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012de:	e7dd      	b.n	800129c <uart_ctrl+0x3c>
    if(buf[i] == 'U')val |= CTRL_USB;
 80012e0:	2a55      	cmp	r2, #85	@ 0x55
 80012e2:	d102      	bne.n	80012ea <uart_ctrl+0x8a>
 80012e4:	f043 0304 	orr.w	r3, r3, #4
    if(buf[i] == 'u')val &=~CTRL_USB;
 80012e8:	e7d8      	b.n	800129c <uart_ctrl+0x3c>
 80012ea:	2a75      	cmp	r2, #117	@ 0x75
 80012ec:	d1d6      	bne.n	800129c <uart_ctrl+0x3c>
 80012ee:	f003 03fb 	and.w	r3, r3, #251	@ 0xfb
  for(int i=0; i<size; i++){
 80012f2:	e7d3      	b.n	800129c <uart_ctrl+0x3c>
 80012f4:	40020000 	andmi	r0, r2, r0
 80012f8:	40020400 	andmi	r0, r2, r0, lsl #8
 80012fc:	200000e8 	andcs	r0, r0, r8, ror #1

08001300 <programmer_poll>:
void programmer_poll(){
 8001300:	b530      	push	{r4, r5, lr}
  if(!initflag)return;
 8001302:	4c56      	ldr	r4, [pc, #344]	@ (800145c <programmer_poll+0x15c>)
void programmer_poll(){
 8001304:	b091      	sub	sp, #68	@ 0x44
  if(!initflag)return;
 8001306:	f894 320c 	ldrb.w	r3, [r4, #524]	@ 0x20c
 800130a:	2b00      	cmp	r3, #0
 800130c:	d061      	beq.n	80013d2 <programmer_poll+0xd2>
  return ((buf->st - buf->en) & UART_MASK);
 800130e:	7823      	ldrb	r3, [r4, #0]
 8001310:	7865      	ldrb	r5, [r4, #1]
 8001312:	1aed      	subs	r5, r5, r3
  if(size > 0){
 8001314:	f015 05ff 	ands.w	r5, r5, #255	@ 0xff
 8001318:	d015      	beq.n	8001346 <programmer_poll+0x46>
    if( ttymode == TTYM_NORMAL ){
 800131a:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
    if( size > ENDP_TTY_SIZE )size = ENDP_TTY_SIZE;
 800131e:	2d20      	cmp	r5, #32
 8001320:	bf28      	it	cs
 8001322:	2520      	movcs	r5, #32
    if( ttymode == TTYM_NORMAL ){
 8001324:	4b4e      	ldr	r3, [pc, #312]	@ (8001460 <programmer_poll+0x160>)
 8001326:	2a00      	cmp	r2, #0
 8001328:	d155      	bne.n	80013d6 <programmer_poll+0xd6>
      if(usb_ep_ready( ENDP_TTY_IN | 0x80 )){
 800132a:	889b      	ldrh	r3, [r3, #4]
 800132c:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8001330:	2b30      	cmp	r3, #48	@ 0x30
 8001332:	d008      	beq.n	8001346 <programmer_poll+0x46>
        UART_read( USART, buf, size);
 8001334:	4629      	mov	r1, r5
 8001336:	4668      	mov	r0, sp
 8001338:	f7ff fe38 	bl	8000fac <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 800133c:	462a      	mov	r2, r5
 800133e:	4669      	mov	r1, sp
 8001340:	2002      	movs	r0, #2
 8001342:	f7ff fa39 	bl	80007b8 <_usb_ep_write>
  if(ttymode == TTYM_NORMAL){
 8001346:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 800134a:	4d45      	ldr	r5, [pc, #276]	@ (8001460 <programmer_poll+0x160>)
 800134c:	2b00      	cmp	r3, #0
 800134e:	d158      	bne.n	8001402 <programmer_poll+0x102>
    if(usb_ep_ready( ENDP_PROG_OUT))usb_ep_read( ENDP_PROG_OUT, (void*)buf );
 8001350:	892b      	ldrh	r3, [r5, #8]
 8001352:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8001356:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800135a:	d103      	bne.n	8001364 <programmer_poll+0x64>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800135c:	2005      	movs	r0, #5
 800135e:	a908      	add	r1, sp, #32
 8001360:	f7ff fa70 	bl	8000844 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_TTY_OUT ))return;
 8001364:	88ab      	ldrh	r3, [r5, #4]
 8001366:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800136a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800136e:	d117      	bne.n	80013a0 <programmer_poll+0xa0>
    epnum = ENDP_TTY_OUT;
 8001370:	2001      	movs	r0, #1
  if(ttymode != TTYM_CTRL){
 8001372:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 8001376:	2b02      	cmp	r3, #2
 8001378:	d05c      	beq.n	8001434 <programmer_poll+0x134>
 800137a:	f894 3102 	ldrb.w	r3, [r4, #258]	@ 0x102
 800137e:	f894 2103 	ldrb.w	r2, [r4, #259]	@ 0x103
 8001382:	1a9b      	subs	r3, r3, r2
    if( UART_tx_count( USART ) > (ENDP_TTY_SIZE + 10) ){
 8001384:	b2db      	uxtb	r3, r3
 8001386:	f1c3 03ff 	rsb	r3, r3, #255	@ 0xff
 800138a:	2b2a      	cmp	r3, #42	@ 0x2a
 800138c:	dd08      	ble.n	80013a0 <programmer_poll+0xa0>
 800138e:	0040      	lsls	r0, r0, #1
 8001390:	a908      	add	r1, sp, #32
 8001392:	3001      	adds	r0, #1
 8001394:	f7ff fa56 	bl	8000844 <_usb_ep_read>
      UART_write( USART, buf, size );
 8001398:	b2c1      	uxtb	r1, r0
 800139a:	a808      	add	r0, sp, #32
 800139c:	f7ff fddc 	bl	8000f58 <UART1_write>
  if( ttymode != TTYM_NORMAL ){
 80013a0:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 80013a4:	b15b      	cbz	r3, 80013be <programmer_poll+0xbe>
 80013a6:	4b2f      	ldr	r3, [pc, #188]	@ (8001464 <programmer_poll+0x164>)
 80013a8:	681b      	ldr	r3, [r3, #0]
    if( systick_ms() > timeout_ms ){
 80013aa:	f8d4 2208 	ldr.w	r2, [r4, #520]	@ 0x208
 80013ae:	429a      	cmp	r2, r3
 80013b0:	d205      	bcs.n	80013be <programmer_poll+0xbe>
      ttymode = TTYM_NORMAL;
 80013b2:	2300      	movs	r3, #0
      uart_cfg( &tty_cfg );
 80013b4:	482c      	ldr	r0, [pc, #176]	@ (8001468 <programmer_poll+0x168>)
      ttymode = TTYM_NORMAL;
 80013b6:	f884 3204 	strb.w	r3, [r4, #516]	@ 0x204
      uart_cfg( &tty_cfg );
 80013ba:	f7ff fe55 	bl	8001068 <uart_cfg>
  if( ttymode == TTYM_NORMAL ){		//green
 80013be:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
 80013c2:	4b2a      	ldr	r3, [pc, #168]	@ (800146c <programmer_poll+0x16c>)
 80013c4:	2a00      	cmp	r2, #0
 80013c6:	d13e      	bne.n	8001446 <programmer_poll+0x146>
    GPO_ON(GLED); GPO_OFF(RLED);
 80013c8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 80013cc:	619a      	str	r2, [r3, #24]
 80013ce:	2220      	movs	r2, #32
    GPO_ON(RLED); GPO_ON(GLED);
 80013d0:	619a      	str	r2, [r3, #24]
}
 80013d2:	b011      	add	sp, #68	@ 0x44
 80013d4:	bd30      	pop	{r4, r5, pc}
    }else if( ttymode == TTYM_PROGR ){
 80013d6:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
 80013da:	2a01      	cmp	r2, #1
 80013dc:	d10c      	bne.n	80013f8 <programmer_poll+0xf8>
      if(usb_ep_ready( ENDP_PROG_IN | 0x80 )){
 80013de:	891b      	ldrh	r3, [r3, #8]
 80013e0:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80013e4:	2b30      	cmp	r3, #48	@ 0x30
 80013e6:	d0ae      	beq.n	8001346 <programmer_poll+0x46>
        UART_read( USART, buf, size);
 80013e8:	4629      	mov	r1, r5
 80013ea:	4668      	mov	r0, sp
 80013ec:	f7ff fdde 	bl	8000fac <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80013f0:	462a      	mov	r2, r5
 80013f2:	4669      	mov	r1, sp
 80013f4:	2004      	movs	r0, #4
 80013f6:	e7a4      	b.n	8001342 <programmer_poll+0x42>
      UART_read( USART, buf, size );
 80013f8:	4629      	mov	r1, r5
 80013fa:	4668      	mov	r0, sp
 80013fc:	f7ff fdd6 	bl	8000fac <UART1_read>
 8001400:	e7a1      	b.n	8001346 <programmer_poll+0x46>
    if(usb_ep_ready( ENDP_TTY_OUT ))usb_ep_read( ENDP_TTY_OUT, (void*)buf );
 8001402:	88ab      	ldrh	r3, [r5, #4]
 8001404:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8001408:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800140c:	d103      	bne.n	8001416 <programmer_poll+0x116>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800140e:	2003      	movs	r0, #3
 8001410:	a908      	add	r1, sp, #32
 8001412:	f7ff fa17 	bl	8000844 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_PROG_OUT))return;
 8001416:	892b      	ldrh	r3, [r5, #8]
 8001418:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800141c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001420:	d1be      	bne.n	80013a0 <programmer_poll+0xa0>
 8001422:	4b10      	ldr	r3, [pc, #64]	@ (8001464 <programmer_poll+0x164>)
    epnum = ENDP_PROG_OUT;
 8001424:	2002      	movs	r0, #2
 8001426:	681b      	ldr	r3, [r3, #0]
    timeout_reset();
 8001428:	f503 531c 	add.w	r3, r3, #9984	@ 0x2700
 800142c:	3310      	adds	r3, #16
 800142e:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
 8001432:	e79e      	b.n	8001372 <programmer_poll+0x72>
 8001434:	a908      	add	r1, sp, #32
 8001436:	2005      	movs	r0, #5
 8001438:	f7ff fa04 	bl	8000844 <_usb_ep_read>
 800143c:	4601      	mov	r1, r0
    uart_ctrl( buf, size );
 800143e:	a808      	add	r0, sp, #32
 8001440:	f7ff ff0e 	bl	8001260 <uart_ctrl>
 8001444:	e7ac      	b.n	80013a0 <programmer_poll+0xa0>
  }else if( ttymode == TTYM_PROGR ){	//red
 8001446:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
 800144a:	2a01      	cmp	r2, #1
 800144c:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
    GPO_ON(RLED); GPO_OFF(GLED);
 8001450:	619a      	str	r2, [r3, #24]
 8001452:	bf0c      	ite	eq
 8001454:	2240      	moveq	r2, #64	@ 0x40
    GPO_ON(RLED); GPO_ON(GLED);
 8001456:	f44f 0280 	movne.w	r2, #4194304	@ 0x400000
 800145a:	e7b9      	b.n	80013d0 <programmer_poll+0xd0>
 800145c:	200000e8 	andcs	r0, r0, r8, ror #1
 8001460:	40005c00 	andmi	r5, r0, r0, lsl #24
 8001464:	20000024 	andcs	r0, r0, r4, lsr #32
 8001468:	2000000c 	andcs	r0, r0, ip
 800146c:	40020400 	andmi	r0, r2, r0, lsl #8

08001470 <fifo_data_size>:
  volatile uint16_t st,en;
  volatile uint8_t arr[USB_LOG_SIZE];
}fifo;

uint16_t fifo_data_size(){
  return ((fifo.en - fifo.st) & USB_LOG_MASK);
 8001470:	4b03      	ldr	r3, [pc, #12]	@ (8001480 <fifo_data_size+0x10>)
 8001472:	8858      	ldrh	r0, [r3, #2]
 8001474:	881b      	ldrh	r3, [r3, #0]
 8001476:	1ac0      	subs	r0, r0, r3
}
 8001478:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800147c:	4770      	bx	lr
 800147e:	bf00      	nop
 8001480:	200002f6 	strdcs	r0, [r0], -r6

08001484 <fifo_write>:
#define fifo_free_size() (USB_LOG_MASK - fifo_data_size())

void fifo_write(uint8_t *buf, int size){
 8001484:	b538      	push	{r3, r4, r5, lr}
  uint16_t en = fifo.en;
 8001486:	4d0d      	ldr	r5, [pc, #52]	@ (80014bc <fifo_write+0x38>)
void fifo_write(uint8_t *buf, int size){
 8001488:	4604      	mov	r4, r0
  uint16_t en = fifo.en;
 800148a:	886a      	ldrh	r2, [r5, #2]
  uint16_t av = fifo_free_size();
 800148c:	f7ff fff0 	bl	8001470 <fifo_data_size>
 8001490:	f5c0 737f 	rsb	r3, r0, #1020	@ 0x3fc
 8001494:	3303      	adds	r3, #3
 8001496:	b29b      	uxth	r3, r3
  if(av > size)av = size;
 8001498:	428b      	cmp	r3, r1
 800149a:	bfc8      	it	gt
 800149c:	b28b      	uxthgt	r3, r1
  uint16_t en = fifo.en;
 800149e:	b292      	uxth	r2, r2
  if(av > size)av = size;
 80014a0:	4423      	add	r3, r4
  while( av > 0 ){
 80014a2:	429c      	cmp	r4, r3
 80014a4:	d101      	bne.n	80014aa <fifo_write+0x26>
    fifo.arr[en] = buf[0];
    en = (en + 1) & USB_LOG_MASK;
    buf++;
    av--;
  }
  fifo.en = en;
 80014a6:	806a      	strh	r2, [r5, #2]
}
 80014a8:	bd38      	pop	{r3, r4, r5, pc}
    fifo.arr[en] = buf[0];
 80014aa:	f814 0b01 	ldrb.w	r0, [r4], #1
 80014ae:	18a9      	adds	r1, r5, r2
    en = (en + 1) & USB_LOG_MASK;
 80014b0:	3201      	adds	r2, #1
    fifo.arr[en] = buf[0];
 80014b2:	7108      	strb	r0, [r1, #4]
    en = (en + 1) & USB_LOG_MASK;
 80014b4:	f3c2 0209 	ubfx	r2, r2, #0, #10
    av--;
 80014b8:	e7f3      	b.n	80014a2 <fifo_write+0x1e>
 80014ba:	bf00      	nop
 80014bc:	200002f6 	strdcs	r0, [r0], -r6

080014c0 <fifo_read>:
#define fifo_str(str) fifo_write((uint8_t*)str, sizeof(str))

int fifo_read(uint8_t *buf, int size){
 80014c0:	b538      	push	{r3, r4, r5, lr}
 80014c2:	4602      	mov	r2, r0
  uint16_t av = fifo_data_size();
 80014c4:	f7ff ffd4 	bl	8001470 <fifo_data_size>
  uint16_t st = fifo.st;
 80014c8:	4c09      	ldr	r4, [pc, #36]	@ (80014f0 <fifo_read+0x30>)
  if(av > size)av = size;
 80014ca:	4288      	cmp	r0, r1
  uint16_t st = fifo.st;
 80014cc:	8823      	ldrh	r3, [r4, #0]
  if(av > size)av = size;
 80014ce:	bfc8      	it	gt
 80014d0:	b288      	uxthgt	r0, r1
  uint16_t st = fifo.st;
 80014d2:	b29b      	uxth	r3, r3
  size = av;
  while( av > 0 ){
 80014d4:	1811      	adds	r1, r2, r0
 80014d6:	428a      	cmp	r2, r1
 80014d8:	d101      	bne.n	80014de <fifo_read+0x1e>
    buf[0] = fifo.arr[st];
    buf++;
    st = (st + 1) & USB_LOG_MASK;
    av--;
  }
  fifo.st = st;
 80014da:	8023      	strh	r3, [r4, #0]
  return size;
}
 80014dc:	bd38      	pop	{r3, r4, r5, pc}
    buf[0] = fifo.arr[st];
 80014de:	18e5      	adds	r5, r4, r3
 80014e0:	792d      	ldrb	r5, [r5, #4]
    st = (st + 1) & USB_LOG_MASK;
 80014e2:	3301      	adds	r3, #1
    buf[0] = fifo.arr[st];
 80014e4:	f802 5b01 	strb.w	r5, [r2], #1
    st = (st + 1) & USB_LOG_MASK;
 80014e8:	f3c3 0309 	ubfx	r3, r3, #0, #10
    av--;
 80014ec:	e7f3      	b.n	80014d6 <fifo_read+0x16>
 80014ee:	bf00      	nop
 80014f0:	200002f6 	strdcs	r0, [r0], -r6

080014f4 <usb_log_ep0_in>:
  .parity = 0,
  .wordsize = 8,
};

char usb_log_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80014f4:	7803      	ldrb	r3, [r0, #0]
 80014f6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80014fa:	2b21      	cmp	r3, #33	@ 0x21
 80014fc:	d10b      	bne.n	8001516 <usb_log_ep0_in+0x22>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 80014fe:	7843      	ldrb	r3, [r0, #1]
 8001500:	2b21      	cmp	r3, #33	@ 0x21
 8001502:	d108      	bne.n	8001516 <usb_log_ep0_in+0x22>
      if( req->wIndex == ifnum(interface_log) ){
 8001504:	8883      	ldrh	r3, [r0, #4]
 8001506:	2b05      	cmp	r3, #5
 8001508:	d105      	bne.n	8001516 <usb_log_ep0_in+0x22>
        *data = (void*)&log_cfg;
 800150a:	4b04      	ldr	r3, [pc, #16]	@ (800151c <usb_log_ep0_in+0x28>)
        *size = sizeof(log_cfg);
        return 1;
 800150c:	2001      	movs	r0, #1
        *data = (void*)&log_cfg;
 800150e:	600b      	str	r3, [r1, #0]
        *size = sizeof(log_cfg);
 8001510:	2307      	movs	r3, #7
 8001512:	8013      	strh	r3, [r2, #0]
        return 1;
 8001514:	4770      	bx	lr
      }
    }
  }
  return 0;
 8001516:	2000      	movs	r0, #0
}
 8001518:	4770      	bx	lr
 800151a:	bf00      	nop
 800151c:	2000001a 	andcs	r0, r0, sl, lsl r0

08001520 <usb_log_ep0_out>:

char usb_log_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8001520:	b508      	push	{r3, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8001522:	7803      	ldrb	r3, [r0, #0]
 8001524:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001528:	2b21      	cmp	r3, #33	@ 0x21
 800152a:	d10b      	bne.n	8001544 <usb_log_ep0_out+0x24>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 800152c:	7843      	ldrb	r3, [r0, #1]
 800152e:	2b20      	cmp	r3, #32
 8001530:	d108      	bne.n	8001544 <usb_log_ep0_out+0x24>
      if(rx_size == 0)return 1;
 8001532:	b12a      	cbz	r2, 8001540 <usb_log_ep0_out+0x20>
      if( req->wIndex == ifnum(interface_tty) ){
 8001534:	8880      	ldrh	r0, [r0, #4]
 8001536:	2801      	cmp	r0, #1
 8001538:	d104      	bne.n	8001544 <usb_log_ep0_out+0x24>
 800153a:	4903      	ldr	r1, [pc, #12]	@ (8001548 <usb_log_ep0_out+0x28>)
 800153c:	f7ff f982 	bl	8000844 <_usb_ep_read>
      if(rx_size == 0)return 1;
 8001540:	2001      	movs	r0, #1
        return 1;
      }
    }
  }
  return 0;
}
 8001542:	bd08      	pop	{r3, pc}
  return 0;
 8001544:	2000      	movs	r0, #0
 8001546:	e7fc      	b.n	8001542 <usb_log_ep0_out+0x22>
 8001548:	2000001a 	andcs	r0, r0, sl, lsl r0

0800154c <usb_log_init>:
void usb_log_init(){
 800154c:	b510      	push	{r4, lr}
  usb_ep_init( ENDP_LOG_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800154e:	2300      	movs	r3, #0
 8001550:	2208      	movs	r2, #8
 8001552:	2103      	movs	r1, #3
 8001554:	2086      	movs	r0, #134	@ 0x86
 8001556:	f7fe ff67 	bl	8000428 <usb_ep_init>
  usb_ep_init( ENDP_LOG_IN   | 0x80, USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
 800155a:	2300      	movs	r3, #0
 800155c:	2220      	movs	r2, #32
 800155e:	2102      	movs	r1, #2
 8001560:	2083      	movs	r0, #131	@ 0x83
 8001562:	f7fe ff61 	bl	8000428 <usb_ep_init>
  usb_ep_init( ENDP_LOG_OUT,         USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
}
 8001566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_ep_init( ENDP_LOG_OUT,         USB_ENDP_BULK, ENDP_LOG_SIZE,  NULL );
 800156a:	2300      	movs	r3, #0
 800156c:	2220      	movs	r2, #32
 800156e:	2102      	movs	r1, #2
 8001570:	2003      	movs	r0, #3
 8001572:	f7fe bf59 	b.w	8000428 <usb_ep_init>

08001576 <log_dir>:

void log_dir(uint8_t dir_tx){
  if(dir_tx){
    fifo_str("⍄");
 8001576:	2104      	movs	r1, #4
  if(dir_tx){
 8001578:	b110      	cbz	r0, 8001580 <log_dir+0xa>
    fifo_str("⍄");
 800157a:	4802      	ldr	r0, [pc, #8]	@ (8001584 <log_dir+0xe>)
  }else{
    fifo_str("⍃");
 800157c:	f7ff bf82 	b.w	8001484 <fifo_write>
 8001580:	4801      	ldr	r0, [pc, #4]	@ (8001588 <log_dir+0x12>)
 8001582:	e7fb      	b.n	800157c <log_dir+0x6>
 8001584:	080019bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, fp, ip}
 8001588:	080019bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, fp, ip}

0800158c <usb_log_grab>:
  }
}

void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 800158c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001590:	4605      	mov	r5, r0
  static uint8_t dir_prev = 0xFF;
  uint16_t av = fifo_free_size();
 8001592:	f7ff ff6d 	bl	8001470 <fifo_data_size>
 8001596:	f5c0 707f 	rsb	r0, r0, #1020	@ 0x3fc
 800159a:	3003      	adds	r0, #3
  if(av < 10)return;
 800159c:	b280      	uxth	r0, r0
 800159e:	2809      	cmp	r0, #9
void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 80015a0:	460e      	mov	r6, r1
 80015a2:	4617      	mov	r7, r2
  if(av < 10)return;
 80015a4:	d937      	bls.n	8001616 <usb_log_grab+0x8a>
  
  if(dir_prev != dir_tx){
 80015a6:	4b1d      	ldr	r3, [pc, #116]	@ (800161c <usb_log_grab+0x90>)
 80015a8:	79da      	ldrb	r2, [r3, #7]
 80015aa:	42aa      	cmp	r2, r5
 80015ac:	d007      	beq.n	80015be <usb_log_grab+0x32>
    dir_prev = dir_tx;
    fifo_str("\r\n");
 80015ae:	481c      	ldr	r0, [pc, #112]	@ (8001620 <usb_log_grab+0x94>)
 80015b0:	2103      	movs	r1, #3
    dir_prev = dir_tx;
 80015b2:	71dd      	strb	r5, [r3, #7]
    fifo_str("\r\n");
 80015b4:	f7ff ff66 	bl	8001484 <fifo_write>
    log_dir(dir_tx);
 80015b8:	4628      	mov	r0, r5
 80015ba:	f7ff ffdc 	bl	8001576 <log_dir>
void usb_log_grab(uint8_t dir_tx, uint8_t *buf, int size){
 80015be:	2300      	movs	r3, #0
 80015c0:	461a      	mov	r2, r3
      fifo_write(&buf[pi], i-pi);
      fifo_str("\r");
      log_dir(dir_tx);
    }else if(buf[i] == '\n'){
      fifo_write(&buf[pi], i-pi);
      fifo_str("\n\r");
 80015c2:	f8df 8060 	ldr.w	r8, [pc, #96]	@ 8001624 <usb_log_grab+0x98>
      fifo_str("\r");
 80015c6:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 8001628 <usb_log_grab+0x9c>
  for(i=0; i<size; i++){
 80015ca:	b299      	uxth	r1, r3
 80015cc:	42b9      	cmp	r1, r7
      fifo_write(&buf[pi], i-pi);
 80015ce:	eb06 0002 	add.w	r0, r6, r2
  for(i=0; i<size; i++){
 80015d2:	db04      	blt.n	80015de <usb_log_grab+0x52>
    }
    
    pi = i+1;
  }
  fifo_write(&buf[pi], i-pi);
}
 80015d4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  fifo_write(&buf[pi], i-pi);
 80015d8:	1a89      	subs	r1, r1, r2
 80015da:	f7ff bf53 	b.w	8001484 <fifo_write>
    if(buf[i] == '\r'){
 80015de:	f816 c001 	ldrb.w	ip, [r6, r1]
 80015e2:	1c5c      	adds	r4, r3, #1
 80015e4:	f1bc 0f0d 	cmp.w	ip, #13
 80015e8:	d10c      	bne.n	8001604 <usb_log_grab+0x78>
      fifo_write(&buf[pi], i-pi);
 80015ea:	1a89      	subs	r1, r1, r2
 80015ec:	f7ff ff4a 	bl	8001484 <fifo_write>
      fifo_str("\r");
 80015f0:	2102      	movs	r1, #2
 80015f2:	4648      	mov	r0, r9
      fifo_str("\n\r");
 80015f4:	f7ff ff46 	bl	8001484 <fifo_write>
      log_dir(dir_tx);
 80015f8:	4628      	mov	r0, r5
 80015fa:	f7ff ffbc 	bl	8001576 <log_dir>
    pi = i+1;
 80015fe:	b2a2      	uxth	r2, r4
  for(i=0; i<size; i++){
 8001600:	4623      	mov	r3, r4
 8001602:	e7e2      	b.n	80015ca <usb_log_grab+0x3e>
    }else if(buf[i] == '\n'){
 8001604:	f1bc 0f0a 	cmp.w	ip, #10
 8001608:	d1fa      	bne.n	8001600 <usb_log_grab+0x74>
      fifo_write(&buf[pi], i-pi);
 800160a:	1a89      	subs	r1, r1, r2
 800160c:	f7ff ff3a 	bl	8001484 <fifo_write>
      fifo_str("\n\r");
 8001610:	2103      	movs	r1, #3
 8001612:	4640      	mov	r0, r8
 8001614:	e7ee      	b.n	80015f4 <usb_log_grab+0x68>
}
 8001616:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800161a:	bf00      	nop
 800161c:	2000001a 	andcs	r0, r0, sl, lsl r0
 8001620:	080019c3 	stmdaeq	r0, {r0, r1, r6, r7, r8, fp, ip}
 8001624:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
 8001628:	080019b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, ip}

0800162c <usb_log_poll>:

void usb_log_poll(){
  uint16_t size;
  USB_ALIGN uint8_t buf[ENDP_LOG_SIZE];
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 800162c:	4b0f      	ldr	r3, [pc, #60]	@ (800166c <usb_log_poll+0x40>)
void usb_log_poll(){
 800162e:	b500      	push	{lr}
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 8001630:	899b      	ldrh	r3, [r3, #12]
void usb_log_poll(){
 8001632:	b089      	sub	sp, #36	@ 0x24
  if(usb_ep_ready( ENDP_LOG_IN | 0x80 )){
 8001634:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8001638:	2b30      	cmp	r3, #48	@ 0x30
 800163a:	d008      	beq.n	800164e <usb_log_poll+0x22>
    size = fifo_read(buf, sizeof(buf));
 800163c:	2120      	movs	r1, #32
 800163e:	4668      	mov	r0, sp
 8001640:	f7ff ff3e 	bl	80014c0 <fifo_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8001644:	4669      	mov	r1, sp
 8001646:	b282      	uxth	r2, r0
 8001648:	2006      	movs	r0, #6
 800164a:	f7ff f8b5 	bl	80007b8 <_usb_ep_write>
    usb_ep_write( ENDP_LOG_IN | 0x80, (uint16_t*)buf, size );
  }
  if(usb_ep_ready( ENDP_LOG_OUT ) ){
 800164e:	4b07      	ldr	r3, [pc, #28]	@ (800166c <usb_log_poll+0x40>)
 8001650:	899b      	ldrh	r3, [r3, #12]
 8001652:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8001656:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800165a:	d103      	bne.n	8001664 <usb_log_poll+0x38>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800165c:	4669      	mov	r1, sp
 800165e:	2007      	movs	r0, #7
 8001660:	f7ff f8f0 	bl	8000844 <_usb_ep_read>
    usb_ep_read( ENDP_LOG_OUT, (uint16_t*)buf);
  }
 8001664:	b009      	add	sp, #36	@ 0x24
 8001666:	f85d fb04 	ldr.w	pc, [sp], #4
 800166a:	bf00      	nop
 800166c:	40005c00 	andmi	r5, r0, r0, lsl #24

08001670 <__libc_init_array>:
 8001670:	b570      	push	{r4, r5, r6, lr}
 8001672:	4e0d      	ldr	r6, [pc, #52]	@ (80016a8 <__libc_init_array+0x38>)
 8001674:	4d0d      	ldr	r5, [pc, #52]	@ (80016ac <__libc_init_array+0x3c>)
 8001676:	1b76      	subs	r6, r6, r5
 8001678:	10b6      	asrs	r6, r6, #2
 800167a:	d006      	beq.n	800168a <__libc_init_array+0x1a>
 800167c:	2400      	movs	r4, #0
 800167e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001682:	3401      	adds	r4, #1
 8001684:	4798      	blx	r3
 8001686:	42a6      	cmp	r6, r4
 8001688:	d1f9      	bne.n	800167e <__libc_init_array+0xe>
 800168a:	4e09      	ldr	r6, [pc, #36]	@ (80016b0 <__libc_init_array+0x40>)
 800168c:	4d09      	ldr	r5, [pc, #36]	@ (80016b4 <__libc_init_array+0x44>)
 800168e:	f7fe fe63 	bl	8000358 <_init>
 8001692:	1b76      	subs	r6, r6, r5
 8001694:	10b6      	asrs	r6, r6, #2
 8001696:	d006      	beq.n	80016a6 <__libc_init_array+0x36>
 8001698:	2400      	movs	r4, #0
 800169a:	f855 3b04 	ldr.w	r3, [r5], #4
 800169e:	3401      	adds	r4, #1
 80016a0:	4798      	blx	r3
 80016a2:	42a6      	cmp	r6, r4
 80016a4:	d1f9      	bne.n	800169a <__libc_init_array+0x2a>
 80016a6:	bd70      	pop	{r4, r5, r6, pc}
 80016a8:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}
 80016ac:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}
 80016b0:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}
 80016b4:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}

080016b8 <Reset_Handler>:
 80016b8:	2100      	movs	r1, #0
 80016ba:	e003      	b.n	80016c4 <LoopCopyDataInit>

080016bc <CopyDataInit>:
 80016bc:	4b0b      	ldr	r3, [pc, #44]	@ (80016ec <LoopFillZerobss+0x14>)
 80016be:	585b      	ldr	r3, [r3, r1]
 80016c0:	5043      	str	r3, [r0, r1]
 80016c2:	3104      	adds	r1, #4

080016c4 <LoopCopyDataInit>:
 80016c4:	480a      	ldr	r0, [pc, #40]	@ (80016f0 <LoopFillZerobss+0x18>)
 80016c6:	4b0b      	ldr	r3, [pc, #44]	@ (80016f4 <LoopFillZerobss+0x1c>)
 80016c8:	1842      	adds	r2, r0, r1
 80016ca:	429a      	cmp	r2, r3
 80016cc:	d3f6      	bcc.n	80016bc <CopyDataInit>
 80016ce:	4a0a      	ldr	r2, [pc, #40]	@ (80016f8 <LoopFillZerobss+0x20>)
 80016d0:	e002      	b.n	80016d8 <LoopFillZerobss>

080016d2 <FillZerobss>:
 80016d2:	2300      	movs	r3, #0
 80016d4:	f842 3b04 	str.w	r3, [r2], #4

080016d8 <LoopFillZerobss>:
 80016d8:	4b08      	ldr	r3, [pc, #32]	@ (80016fc <LoopFillZerobss+0x24>)
 80016da:	429a      	cmp	r2, r3
 80016dc:	d3f9      	bcc.n	80016d2 <FillZerobss>
 80016de:	f7fe fe3c 	bl	800035a <SystemInit>
 80016e2:	f7ff ffc5 	bl	8001670 <__libc_init_array>
 80016e6:	f000 f80d 	bl	8001704 <main>
 80016ea:	4770      	bx	lr
 80016ec:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}
 80016f0:	20000000 	andcs	r0, r0, r0
 80016f4:	20000024 	andcs	r0, r0, r4, lsr #32
 80016f8:	20000024 	andcs	r0, r0, r4, lsr #32
 80016fc:	200006fc 	strdcs	r0, [r0], -ip

08001700 <BusFault_Handler>:
 8001700:	e7fe      	b.n	8001700 <BusFault_Handler>
	...

08001704 <main>:

int main(void){
 8001704:	b508      	push	{r3, lr}
  clock_HS(1);
 8001706:	2001      	movs	r0, #1
 8001708:	f7fe fd6e 	bl	80001e8 <clock_HS>
  systick_init();
 800170c:	f7fe fe2c 	bl	8000368 <systick_init>
  RCC->AHBENR |= RCC_AHBENR_GPIOAEN | RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN | RCC_AHBENR_GPIODEN;
 8001710:	4a29      	ldr	r2, [pc, #164]	@ (80017b8 <main+0xb4>)
 8001712:	69d3      	ldr	r3, [r2, #28]
 8001714:	f043 030f 	orr.w	r3, r3, #15
 8001718:	61d3      	str	r3, [r2, #28]

  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(BLED);
 800171a:	4b28      	ldr	r3, [pc, #160]	@ (80017bc <main+0xb8>)
 800171c:	681a      	ldr	r2, [r3, #0]
 800171e:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8001722:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8001726:	601a      	str	r2, [r3, #0]
 8001728:	689a      	ldr	r2, [r3, #8]
 800172a:	f442 6240 	orr.w	r2, r2, #3072	@ 0xc00
 800172e:	609a      	str	r2, [r3, #8]
 8001730:	681a      	ldr	r2, [r3, #0]
 8001732:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8001736:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800173a:	601a      	str	r2, [r3, #0]
 800173c:	689a      	ldr	r2, [r3, #8]
 800173e:	f442 5240 	orr.w	r2, r2, #12288	@ 0x3000
 8001742:	609a      	str	r2, [r3, #8]
 8001744:	681a      	ldr	r2, [r3, #0]
 8001746:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800174a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800174e:	601a      	str	r2, [r3, #0]
 8001750:	689a      	ldr	r2, [r3, #8]
 8001752:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 8001756:	609a      	str	r2, [r3, #8]
  GPIO_config(ADC_IN); GPIO_config(RESET); GPIO_config(BOOT0);
 8001758:	681a      	ldr	r2, [r3, #0]
 800175a:	f042 0203 	orr.w	r2, r2, #3
 800175e:	601a      	str	r2, [r3, #0]
 8001760:	689a      	ldr	r2, [r3, #8]
 8001762:	f022 0203 	bic.w	r2, r2, #3
 8001766:	609a      	str	r2, [r3, #8]
 8001768:	4a15      	ldr	r2, [pc, #84]	@ (80017c0 <main+0xbc>)
 800176a:	6811      	ldr	r1, [r2, #0]
 800176c:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
 8001770:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
 8001774:	6011      	str	r1, [r2, #0]
 8001776:	6891      	ldr	r1, [r2, #8]
 8001778:	f441 3140 	orr.w	r1, r1, #196608	@ 0x30000
 800177c:	6091      	str	r1, [r2, #8]
 800177e:	6819      	ldr	r1, [r3, #0]
 8001780:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8001784:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
 8001788:	6019      	str	r1, [r3, #0]
 800178a:	6899      	ldr	r1, [r3, #8]
 800178c:	f041 01c0 	orr.w	r1, r1, #192	@ 0xc0
 8001790:	6099      	str	r1, [r3, #8]
  
  GPO_OFF(RLED); GPO_OFF(GLED); GPO_OFF(BLED);
 8001792:	2120      	movs	r1, #32
 8001794:	6199      	str	r1, [r3, #24]
 8001796:	2140      	movs	r1, #64	@ 0x40
 8001798:	6199      	str	r1, [r3, #24]
 800179a:	2110      	movs	r1, #16
 800179c:	6199      	str	r1, [r3, #24]
  GPO_OFF(RESET); GPO_OFF(BOOT0);
 800179e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80017a2:	6191      	str	r1, [r2, #24]
 80017a4:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 80017a8:	619a      	str	r2, [r3, #24]
  
  USB_setup();
 80017aa:	f7fe fdf4 	bl	8000396 <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 80017ae:	b662      	cpsie	i
  __enable_irq();
  
  //uint32_t ntime_ms = 0;

  while(1){
    usb_class_poll();
 80017b0:	f7ff fb78 	bl	8000ea4 <usb_class_poll>
  while(1){
 80017b4:	e7fc      	b.n	80017b0 <main+0xac>
 80017b6:	bf00      	nop
 80017b8:	40023800 	andmi	r3, r2, r0, lsl #16
 80017bc:	40020400 	andmi	r0, r2, r0, lsl #8
 80017c0:	40020000 	andmi	r0, r2, r0

Disassembly of section .rodata:

080017c4 <USB_HIDDescriptor-0x2>:
	...

080017c6 <USB_HIDDescriptor>:
static const uint8_t USB_HIDDescriptor[] = {
 80017c6:	09ff0006 	ldmibeq	pc!, {r1, r2}^	@ <UNPREDICTABLE>
 80017ca:	1501a101 	strne	sl, [r1, #-257]	@ 0xfffffeff
 80017ce:	75ff2500 	ldrbvc	r2, [pc, #1280]!	@ 8001cd6 <__exidx_end+0x30e>
 80017d2:	09029508 	stmdbeq	r2, {r3, r8, sl, ip, pc}
 80017d6:	0102b200 	mrseq	fp, R10_usr
 80017da:	 	movweq	r0, #16576	@ 0x40c0

080017dc <USB_StringLangDescriptor>:
USB_STRING(USB_StringLangDescriptor, u"\x0409"); //lang US
 80017dc:	04090304 	streq	r0, [r9], #-772	@ 0xfffffcfc

080017e0 <USB_StringManufacturingDescriptor>:
USB_STRING(USB_StringManufacturingDescriptor, u"COKPOWEHEU"); //Vendor
 80017e0:	00430316 	subeq	r0, r3, r6, lsl r3
 80017e4:	004b004f 	subeq	r0, fp, pc, asr #32
 80017e8:	004f0050 	subeq	r0, pc, r0, asr r0	@ <UNPREDICTABLE>
 80017ec:	00450057 	subeq	r0, r5, r7, asr r0
 80017f0:	00450048 	subeq	r0, r5, r8, asr #32
 80017f4:	 			@ <UNDEFINED> instruction: 0x03220055

080017f6 <USB_StringProdDescriptor>:
USB_STRING(USB_StringProdDescriptor, u"Karakatitsa_GD32"); //Product
 80017f6:	004b0322 	subeq	r0, fp, r2, lsr #6
 80017fa:	00720061 	rsbseq	r0, r2, r1, rrx
 80017fe:	006b0061 	rsbeq	r0, fp, r1, rrx
 8001802:	00740061 	rsbseq	r0, r4, r1, rrx
 8001806:	00740069 	rsbseq	r0, r4, r9, rrx
 800180a:	00610073 	rsbeq	r0, r1, r3, ror r0
 800180e:	0047005f 	subeq	r0, r7, pc, asr r0
 8001812:	00330044 	eorseq	r0, r3, r4, asr #32
 8001816:	 	movweq	r0, #16434	@ 0x4032

08001818 <USB_StringSerialDescriptor>:
USB_STRING(USB_StringSerialDescriptor, u"1"); //Serial (BCD)
 8001818:	00310304 	eorseq	r0, r1, r4, lsl #6

0800181c <USB_String_TTY>:
USB_STRING(USB_String_TTY, u"GD32_DBG");
 800181c:	00470312 	subeq	r0, r7, r2, lsl r3
 8001820:	00330044 	eorseq	r0, r3, r4, asr #32
 8001824:	005f0032 	subseq	r0, pc, r2, lsr r0	@ <UNPREDICTABLE>
 8001828:	00420044 	subeq	r0, r2, r4, asr #32
 800182c:	 	tsteq	r4, #71	@ 0x47

0800182e <USB_String_PROGR>:
USB_STRING(USB_String_PROGR, u"GD32_PROG");
 800182e:	00470314 	subeq	r0, r7, r4, lsl r3
 8001832:	00330044 	eorseq	r0, r3, r4, asr #32
 8001836:	005f0032 	subseq	r0, pc, r2, lsr r0	@ <UNPREDICTABLE>
 800183a:	00520050 	subseq	r0, r2, r0, asr r0
 800183e:	0047004f 	subeq	r0, r7, pc, asr #32

08001842 <USB_String_LOG>:
USB_STRING(USB_String_LOG, u"GD32_LOG");
 8001842:	00470312 	subeq	r0, r7, r2, lsl r3
 8001846:	00330044 	eorseq	r0, r3, r4, asr #32
 800184a:	005f0032 	subseq	r0, pc, r2, lsr r0	@ <UNPREDICTABLE>
 800184e:	004f004c 	subeq	r0, pc, ip, asr #32
 8001852:	 	tsteq	r2, r7, asr #32

08001854 <USB_DeviceDescriptor>:
static const uint8_t USB_DeviceDescriptor[] = {
 8001854:	01100112 	tsteq	r0, r2, lsl r1
 8001858:	080102ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9}
 800185c:	05df16c0 	ldrbeq	r1, [pc, #1728]	@ 8001f24 <__exidx_end+0x55c>
 8001860:	02010001 	andeq	r0, r1, #1
 8001864:	 	andeq	r0, r9, #-1073741824	@ 0xc0000000

08001866 <USB_ConfigDescriptor>:
static const uint8_t USB_ConfigDescriptor[] = {
 8001866:	01440209 	cmpeq	r4, r9, lsl #4
 800186a:	80000109 	andhi	r0, r0, r9, lsl #2
 800186e:	00040932 	andeq	r0, r4, r2, lsr r9
 8001872:	00030000 	andeq	r0, r3, r0
 8001876:	21090000 	mrscs	r0, (UNDEF: 9)
 800187a:	01000101 	tsteq	r0, r1, lsl #2
 800187e:	08001522 	stmdaeq	r0, {r1, r5, r8, sl, ip}
 8001882:	0202010b 	andeq	r0, r2, #-1073741822	@ 0xc0000002
 8001886:	09040002 	stmdbeq	r4, {r1}
 800188a:	01000104 	tsteq	r0, r4, lsl #2
 800188e:	04000202 	streq	r0, [r0], #-514	@ 0xfffffdfe
 8001892:	10002405 	andne	r2, r0, r5, lsl #8
 8001896:	01240501 			@ <UNDEFINED> instruction: 0x01240501
 800189a:	24040200 	strcs	r0, [r4], #-512	@ 0xfffffe00
 800189e:	24050202 	strcs	r0, [r5], #-514	@ 0xfffffdfe
 80018a2:	07020106 	streq	r0, [r2, -r6, lsl #2]
 80018a6:	08038405 	stmdaeq	r3, {r0, r2, sl, pc}
 80018aa:	04096400 	streq	r6, [r9], #-1024	@ 0xfffffc00
 80018ae:	0a020002 	beq	80818be <__exidx_end+0x7fef6>
 80018b2:	07000000 	streq	r0, [r0, -r0]
 80018b6:	20020105 	andcs	r0, r2, r5, lsl #2
 80018ba:	05070000 	streq	r0, [r7, #-0]
 80018be:	00200281 	eoreq	r0, r0, r1, lsl #5
 80018c2:	030b0800 	movweq	r0, #47104	@ 0xb800
 80018c6:	00020202 	andeq	r0, r2, r2, lsl #4
 80018ca:	03040905 	movweq	r0, #18693	@ 0x4905
 80018ce:	02020100 	andeq	r0, r2, #0, 2
 80018d2:	24050500 	strcs	r0, [r5], #-1280	@ 0xfffffb00
 80018d6:	05011000 	streq	r1, [r1, #-0]
 80018da:	04000124 	streq	r0, [r0], #-292	@ 0xfffffedc
 80018de:	02022404 	andeq	r2, r2, #4, 8	@ 0x4000000
 80018e2:	03062405 	movweq	r2, #25605	@ 0x6405
 80018e6:	85050704 	strhi	r0, [r5, #-1796]	@ 0xfffff8fc
 80018ea:	64000803 	strvs	r0, [r0], #-2051	@ 0xfffff7fd
 80018ee:	00040409 	andeq	r0, r4, r9, lsl #8
 80018f2:	00000a02 	andeq	r0, r0, r2, lsl #20
 80018f6:	02050700 	andeq	r0, r5, #0, 14
 80018fa:	00002002 	andeq	r2, r0, r2
 80018fe:	02820507 	addeq	r0, r2, #29360128	@ 0x1c00000
 8001902:	08000020 	stmdaeq	r0, {r5}
 8001906:	0203050b 	andeq	r0, r3, #46137344	@ 0x2c00000
 800190a:	09060002 	stmdbeq	r6, {r1}
 800190e:	01000504 	tsteq	r0, r4, lsl #10
 8001912:	06000202 	streq	r0, [r0], -r2, lsl #4
 8001916:	10002405 	andne	r2, r0, r5, lsl #8
 800191a:	01240501 			@ <UNDEFINED> instruction: 0x01240501
 800191e:	24040600 	strcs	r0, [r4], #-1536	@ 0xfffffa00
 8001922:	24050202 	strcs	r0, [r5], #-514	@ 0xfffffdfe
 8001926:	07060506 	streq	r0, [r6, -r6, lsl #10]
 800192a:	08038605 	stmdaeq	r3, {r0, r2, r9, sl, pc}
 800192e:	04096400 	streq	r6, [r9], #-1024	@ 0xfffffc00
 8001932:	0a020006 	beq	8081952 <__exidx_end+0x7ff8a>
 8001936:	07000000 	streq	r0, [r0, -r0]
 800193a:	20020305 	andcs	r0, r2, r5, lsl #6
 800193e:	05070000 	streq	r0, [r7, #-0]
 8001942:	00200283 	eoreq	r0, r0, r3, lsl #5
 8001946:	070b0800 	streq	r0, [fp, -r0, lsl #16]
 800194a:	00010102 	andeq	r0, r1, r2, lsl #2
 800194e:	07040900 	streq	r0, [r4, -r0, lsl #18]
 8001952:	01010000 	mrseq	r0, (UNDEF: 1)
 8001956:	24090000 	strcs	r0, [r9], #-0
 800195a:	1e010001 	cdpne	0, 0, cr0, cr1, cr1, {0}
 800195e:	0c080100 	stfeqs	f0, [r8], {-0}
 8001962:	01010224 	tsteq	r1, r4, lsr #4
 8001966:	00010002 	andeq	r0, r1, r2
 800196a:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
 800196e:	01020324 	tsteq	r2, r4, lsr #6
 8001972:	00010001 	andeq	r0, r1, r1
 8001976:	00080409 	andeq	r0, r8, r9, lsl #8
 800197a:	00020100 	andeq	r0, r2, r0, lsl #2
 800197e:	08040900 	stmdaeq	r4, {r8, fp}
 8001982:	02010101 	andeq	r0, r1, #1073741824	@ 0x40000000
 8001986:	24070000 	strcs	r0, [r7], #-0
 800198a:	01010201 	tsteq	r1, r1, lsl #4
 800198e:	02240b00 	eoreq	r0, r4, #0, 22
 8001992:	10020101 	andne	r0, r2, r1, lsl #2
 8001996:	00abe001 	adceq	lr, fp, r1
 800199a:	01870509 	orreq	r0, r7, r9, lsl #10
 800199e:	00010064 	andeq	r0, r1, r4, rrx
 80019a2:	01250700 			@ <UNDEFINED> instruction: 0x01250700
 80019a6:	00000000 	andeq	r0, r0, r0

080019aa <USB_DeviceQualifierDescriptor>:
static const uint8_t USB_DeviceQualifierDescriptor[] = {
 80019aa:	0200060a 	andeq	r0, r0, #10485760	@ 0xa00000
 80019ae:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
 80019b2:	65540001 	ldrbvs	r0, [r4, #-1]
 80019b6:	0d0a7473 	cfstrseq	mvf7, [sl, #-460]	@ 0xfffffe34
 80019ba:	848de200 	strhi	lr, [sp], #512	@ 0x200
 80019be:	838de200 	orrhi	lr, sp, #0, 4
 80019c2:	000a0d00 	andeq	r0, sl, r0, lsl #26
	...

Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

20000004 <filter.5>:
  static uint32_t filter = (2048<<(OFILTER_PWR+OFILTER_MLT));
20000004:	00800000 	addeq	r0, r0, r0

20000008 <filter.4>:
  static uint32_t filter = (2048<<MIDFILTER_PWR);
20000008:	00200000 	eoreq	r0, r0, r0

2000000c <tty_cfg>:
volatile struct cdc_linecoding tty_cfg = {
2000000c:	00002580 	andeq	r2, r0, r0, lsl #11
20000010:	 	andhi	r0, r8, r1

20000013 <progr_cfg>:
volatile struct cdc_linecoding progr_cfg = {
20000013:	00002580 	andeq	r2, r0, r0, lsl #11
20000017:	 	andhi	r0, r8, r1

2000001a <log_cfg>:
volatile struct cdc_linecoding log_cfg = {
2000001a:	00002580 	andeq	r2, r0, r0, lsl #11
2000001e:	 			@ <UNDEFINED> instruction: 0xff080001

20000021 <dir_prev.0>:
  static uint8_t dir_prev = 0xFF;
20000021:	Address 0x20000021 is out of bounds.


Disassembly of section .bss:

20000024 <systick_internal>:
volatile uint32_t systick_internal = 0;
20000024:	00000000 	andeq	r0, r0, r0

20000028 <epfunc_out>:
	...

20000048 <epfunc_in>:
	...

20000068 <ep0_buf>:
static const uint8_t *ep0_buf = NULL;
20000068:	00000000 	andeq	r0, r0, r0

2000006c <ep0_count>:
	...

2000006e <setup_packet>:
	...

20000076 <bytesread.0>:
	...

20000078 <configuration>:
static uint8_t configuration = 0;
20000078:	00000000 	andeq	r0, r0, r0

2000007c <adc_idx>:
	...

2000007e <adc_buffer>:
	...

200000d6 <oversampl_cnt.2>:
	...

200000d8 <curval.1>:
	...

200000da <adc_timeH>:
	...

200000dc <adc_timeL>:
	...

200000de <resdata.0>:
	...

200000e0 <hid_data>:
hid_data_t hid_data;
200000e0:	00000000 	andeq	r0, r0, r0

200000e4 <hid_timeout>:
static volatile uint32_t hid_timeout = 0;
200000e4:	00000000 	andeq	r0, r0, r0

200000e8 <uart1_rx>:
	...

200001ea <uart1_tx>:
	...

200002ec <ttymode>:
volatile char ttymode = TTYM_NORMAL;
200002ec:	00000000 	andeq	r0, r0, r0

200002f0 <timeout_ms>:
volatile uint32_t timeout_ms = 0;
200002f0:	00000000 	andeq	r0, r0, r0

200002f4 <initflag>:
	...

200002f6 <fifo>:
	...

Disassembly of section ._user_heap_stack:

200006fc <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	@ 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	@ 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	@ 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <_Min_Stack_Size+0x45c3c>
  2c:	Address 0x2c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000097f 	andeq	r0, r0, pc, ror r9
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000193 	muleq	r0, r3, r1
      10:	00039a0c 	andeq	r9, r3, ip, lsl #20
      14:	0000af00 	andeq	sl, r0, r0, lsl #30
      18:	00007800 	andeq	r7, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000218 	andeq	r0, r0, r8, lsl r2
      30:	00071103 	andeq	r1, r7, r3, lsl #2
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	30050202 	andcc	r0, r5, r2, lsl #4
      40:	02000000 	andeq	r0, r0, #0
      44:	00670504 	rsbeq	r0, r7, r4, lsl #10
      48:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
      4c:	00006205 	andeq	r6, r0, r5, lsl #4
      50:	08010200 	stmdaeq	r1, {r9}
      54:	00000216 	andeq	r0, r0, r6, lsl r2
      58:	00025f03 	andeq	r5, r2, r3, lsl #30
      5c:	19310400 	ldmdbne	r1!, {sl}
      60:	00000064 	andeq	r0, r0, r4, rrx
      64:	91070202 	tstls	r7, r2, lsl #4
      68:	03000002 	movweq	r0, #2
      6c:	0000024f 	andeq	r0, r0, pc, asr #4
      70:	7c193404 	cfldrsvc	mvf3, [r9], {4}
      74:	04000000 	streq	r0, [r0], #-0
      78:	0000006b 	andeq	r0, r0, fp, rrx
      7c:	3d070402 	cfstrscc	mvf0, [r7, #-8]
      80:	02000002 	andeq	r0, r0, #2
      84:	02380708 	eorseq	r0, r8, #8, 14	@ 0x200000
      88:	04050000 	streq	r0, [r5], #-0
      8c:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
      90:	07040200 	streq	r0, [r4, -r0, lsl #4]
      94:	00000242 	andeq	r0, r0, r2, asr #4
      98:	25058406 	strcs	r8, [r5, #-1030]	@ 0xfffffbfa
      9c:	01530901 	cmpeq	r3, r1, lsl #18
      a0:	41070000 	mrsmi	r0, (UNDEF: 7)
      a4:	05005243 	streq	r5, [r0, #-579]	@ 0xfffffdbd
      a8:	77110127 	ldrvc	r0, [r1, -r7, lsr #2]
      ac:	02000000 	andeq	r0, r0, #0
      b0:	40080023 	andmi	r0, r8, r3, lsr #32
      b4:	05000000 	streq	r0, [r0, #-0]
      b8:	77110128 	ldrvc	r0, [r1, -r8, lsr #2]
      bc:	02000000 	andeq	r0, r0, #0
      c0:	53080423 	movwpl	r0, #33827	@ 0x8423
      c4:	05000003 	streq	r0, [r0, #-3]
      c8:	77110129 	ldrvc	r0, [r1, -r9, lsr #2]
      cc:	02000000 	andeq	r0, r0, #0
      d0:	2b080823 	blcs	202164 <_Min_Stack_Size+0x201d64>
      d4:	05000002 	streq	r0, [r0, #-2]
      d8:	7711012a 	ldrvc	r0, [r1, -sl, lsr #2]
      dc:	02000000 	andeq	r0, r0, #0
      e0:	31080c23 	tstcc	r8, r3, lsr #24
      e4:	05000003 	streq	r0, [r0, #-3]
      e8:	7711012b 	ldrvc	r0, [r1, -fp, lsr #2]
      ec:	02000000 	andeq	r0, r0, #0
      f0:	1e081023 	cdpne	0, 0, cr1, cr8, cr3, {1}
      f4:	05000001 	streq	r0, [r0, #-1]
      f8:	7711012c 	ldrvc	r0, [r1, -ip, lsr #2]
      fc:	02000000 	andeq	r0, r0, #0
     100:	53071423 	movwpl	r1, #29731	@ 0x7423
     104:	2d050052 	stccs	0, cr0, [r5, #-328]	@ 0xfffffeb8
     108:	00771101 	rsbseq	r1, r7, r1, lsl #2
     10c:	23020000 	movwcs	r0, #8192	@ 0x2000
     110:	424f0718 	submi	r0, pc, #24, 14	@ 0x600000
     114:	2e050052 	mcrcs	0, 0, r0, cr5, cr2, {2}
     118:	00771101 	rsbseq	r1, r7, r1, lsl #2
     11c:	23020000 	movwcs	r0, #8192	@ 0x2000
     120:	02ae081c 	adceq	r0, lr, #28, 16	@ 0x1c0000
     124:	2f050000 	svccs	0x00050000
     128:	00771101 	rsbseq	r1, r7, r1, lsl #2
     12c:	23020000 	movwcs	r0, #8192	@ 0x2000
     130:	03670820 	cmneq	r7, #32, 16	@ 0x200000
     134:	30050000 	andcc	r0, r5, r0
     138:	01530e01 	cmpeq	r3, r1, lsl #28
     13c:	23020000 	movwcs	r0, #8192	@ 0x2000
     140:	034d0824 	movteq	r0, #55332	@ 0xd824
     144:	31050000 	mrscc	r0, (UNDEF: 5)
     148:	00771101 	rsbseq	r1, r7, r1, lsl #2
     14c:	23030000 	movwcs	r0, #12288	@ 0x3000
     150:	09000180 	stmdbeq	r0, {r7, r8}
     154:	0000006b 	andeq	r0, r0, fp, rrx
     158:	00000163 	andeq	r0, r0, r3, ror #2
     15c:	0000910a 	andeq	r9, r0, sl, lsl #2
     160:	0b001600 	bleq	5968 <_Min_Stack_Size+0x5568>
     164:	00000376 	andeq	r0, r0, r6, ror r3
     168:	03013205 	movweq	r3, #4613	@ 0x1205
     16c:	00000098 	muleq	r0, r8, r0
     170:	4f052c06 	svcmi	0x00052c06
     174:	021b0901 	andseq	r0, fp, #16384	@ 0x4000
     178:	67080000 	strvs	r0, [r8, -r0]
     17c:	05000001 	streq	r0, [r0, #-1]
     180:	77110151 			@ <UNDEFINED> instruction: 0x77110151
     184:	02000000 	andeq	r0, r0, #0
     188:	04080023 	streq	r0, [r8], #-35	@ 0xffffffdd
     18c:	05000001 	streq	r0, [r0, #-1]
     190:	77110152 			@ <UNDEFINED> instruction: 0x77110152
     194:	02000000 	andeq	r0, r0, #0
     198:	0d080423 	cfstrseq	mvf0, [r8, #-140]	@ 0xffffff74
     19c:	05000000 	streq	r0, [r0, #-0]
     1a0:	77110153 			@ <UNDEFINED> instruction: 0x77110153
     1a4:	02000000 	andeq	r0, r0, #0
     1a8:	35080823 	strcc	r0, [r8, #-2083]	@ 0xfffff7dd
     1ac:	05000001 	streq	r0, [r0, #-1]
     1b0:	77110154 			@ <UNDEFINED> instruction: 0x77110154
     1b4:	02000000 	andeq	r0, r0, #0
     1b8:	49070c23 	stmdbmi	r7, {r0, r1, r5, sl, fp}
     1bc:	05005244 	streq	r5, [r0, #-580]	@ 0xfffffdbc
     1c0:	77110155 			@ <UNDEFINED> instruction: 0x77110155
     1c4:	02000000 	andeq	r0, r0, #0
     1c8:	4f071023 	svcmi	0x00071023
     1cc:	05005244 	streq	r5, [r0, #-580]	@ 0xfffffdbc
     1d0:	77110156 			@ <UNDEFINED> instruction: 0x77110156
     1d4:	02000000 	andeq	r0, r0, #0
     1d8:	5b081423 	blpl	20526c <_Min_Stack_Size+0x204e6c>
     1dc:	05000001 	streq	r0, [r0, #-1]
     1e0:	77110157 			@ <UNDEFINED> instruction: 0x77110157
     1e4:	02000000 	andeq	r0, r0, #0
     1e8:	8b081823 	blhi	20627c <_Min_Stack_Size+0x205e7c>
     1ec:	05000003 	streq	r0, [r0, #-3]
     1f0:	77110158 			@ <UNDEFINED> instruction: 0x77110158
     1f4:	02000000 	andeq	r0, r0, #0
     1f8:	41071c23 	tstmi	r7, r3, lsr #24
     1fc:	05005246 	streq	r5, [r0, #-582]	@ 0xfffffdba
     200:	2b110159 	blcs	44076c <_Min_Stack_Size+0x44036c>
     204:	02000002 	andeq	r0, r0, #2
     208:	42072023 	andmi	r2, r7, #35	@ 0x23
     20c:	05005252 	streq	r5, [r0, #-594]	@ 0xfffffdae
     210:	7711015a 			@ <UNDEFINED> instruction: 0x7711015a
     214:	02000000 	andeq	r0, r0, #0
     218:	09002823 	stmdbeq	r0, {r0, r1, r5, fp, sp}
     21c:	00000077 	andeq	r0, r0, r7, ror r0
     220:	0000022b 	andeq	r0, r0, fp, lsr #4
     224:	0000910a 	andeq	r9, r0, sl, lsl #2
     228:	04000100 	streq	r0, [r0], #-256	@ 0xffffff00
     22c:	0000021b 	andeq	r0, r0, fp, lsl r2
     230:	0000000b 	andeq	r0, r0, fp
     234:	015b0500 	cmpeq	fp, r0, lsl #10
     238:	00017003 	andeq	r7, r1, r3
     23c:	05080600 	streq	r0, [r8, #-1536]	@ 0xfffffa00
     240:	67090189 	strvs	r0, [r9, -r9, lsl #3]
     244:	07000002 	streq	r0, [r0, -r2]
     248:	05005243 	streq	r5, [r0, #-579]	@ 0xfffffdbd
     24c:	7711018b 	ldrvc	r0, [r1, -fp, lsl #3]
     250:	02000000 	andeq	r0, r0, #0
     254:	43070023 	movwmi	r0, #28707	@ 0x7023
     258:	05005253 	streq	r5, [r0, #-595]	@ 0xfffffdad
     25c:	7711018c 	ldrvc	r0, [r1, -ip, lsl #3]
     260:	02000000 	andeq	r0, r0, #0
     264:	0b000423 	bleq	12f8 <_Min_Stack_Size+0xef8>
     268:	00000056 	andeq	r0, r0, r6, asr r0
     26c:	03018d05 	movweq	r8, #7429	@ 0x1d05
     270:	0000023d 	andeq	r0, r0, sp, lsr r2
     274:	93053806 	movwls	r3, #22534	@ 0x5806
     278:	035e0901 	cmpeq	lr, #16384	@ 0x4000
     27c:	43070000 	movwmi	r0, #28672	@ 0x7000
     280:	95050052 	strls	r0, [r5, #-82]	@ 0xffffffae
     284:	00771101 	rsbseq	r1, r7, r1, lsl #2
     288:	23020000 	movwcs	r0, #8192	@ 0x2000
     28c:	00800800 	addeq	r0, r0, r0, lsl #16
     290:	96050000 	strls	r0, [r5], -r0
     294:	00771101 	rsbseq	r1, r7, r1, lsl #2
     298:	23020000 	movwcs	r0, #8192	@ 0x2000
     29c:	008f0804 	addeq	r0, pc, r4, lsl #16
     2a0:	97050000 	strls	r0, [r5, -r0]
     2a4:	00771101 	rsbseq	r1, r7, r1, lsl #2
     2a8:	23020000 	movwcs	r0, #8192	@ 0x2000
     2ac:	49430708 	stmdbmi	r3, {r3, r8, r9, sl}^
     2b0:	98050052 	stmdals	r5, {r1, r4, r6}
     2b4:	00771101 	rsbseq	r1, r7, r1, lsl #2
     2b8:	23020000 	movwcs	r0, #8192	@ 0x2000
     2bc:	0126080c 			@ <UNDEFINED> instruction: 0x0126080c
     2c0:	99050000 	stmdbls	r5, {}	@ <UNPREDICTABLE>
     2c4:	00771101 	rsbseq	r1, r7, r1, lsl #2
     2c8:	23020000 	movwcs	r0, #8192	@ 0x2000
     2cc:	016d0810 	cmneq	sp, r0, lsl r8
     2d0:	9a050000 	bls	1402d8 <_Min_Stack_Size+0x13fed8>
     2d4:	00771101 	rsbseq	r1, r7, r1, lsl #2
     2d8:	23020000 	movwcs	r0, #8192	@ 0x2000
     2dc:	001b0814 	andseq	r0, fp, r4, lsl r8
     2e0:	9b050000 	blls	1402e8 <_Min_Stack_Size+0x13fee8>
     2e4:	00771101 	rsbseq	r1, r7, r1, lsl #2
     2e8:	23020000 	movwcs	r0, #8192	@ 0x2000
     2ec:	020f0818 	andeq	r0, pc, #24, 16	@ 0x180000
     2f0:	9c050000 	stcls	0, cr0, [r5], {-0}
     2f4:	00771101 	rsbseq	r1, r7, r1, lsl #2
     2f8:	23020000 	movwcs	r0, #8192	@ 0x2000
     2fc:	010b081c 	tsteq	fp, ip, lsl r8
     300:	9d050000 	stcls	0, cr0, [r5, #-0]
     304:	00771101 	rsbseq	r1, r7, r1, lsl #2
     308:	23020000 	movwcs	r0, #8192	@ 0x2000
     30c:	009b0820 	addseq	r0, fp, r0, lsr #16
     310:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
     314:	00771101 	rsbseq	r1, r7, r1, lsl #2
     318:	23020000 	movwcs	r0, #8192	@ 0x2000
     31c:	00700824 	rsbseq	r0, r0, r4, lsr #16
     320:	9f050000 	svcls	0x00050000
     324:	00771101 	rsbseq	r1, r7, r1, lsl #2
     328:	23020000 	movwcs	r0, #8192	@ 0x2000
     32c:	03900828 	orrseq	r0, r0, #40, 16	@ 0x280000
     330:	a0050000 	andge	r0, r5, r0
     334:	00771101 	rsbseq	r1, r7, r1, lsl #2
     338:	23020000 	movwcs	r0, #8192	@ 0x2000
     33c:	02a4082c 	adceq	r0, r4, #44, 16	@ 0x2c0000
     340:	a1050000 	mrsge	r0, (UNDEF: 5)
     344:	00771101 	rsbseq	r1, r7, r1, lsl #2
     348:	23020000 	movwcs	r0, #8192	@ 0x2000
     34c:	53430730 	movtpl	r0, #14128	@ 0x3730
     350:	a2050052 	andge	r0, r5, #82	@ 0x52
     354:	00771101 	rsbseq	r1, r7, r1, lsl #2
     358:	23020000 	movwcs	r0, #8192	@ 0x2000
     35c:	4f0b0034 	svcmi	0x000b0034
     360:	05000001 	streq	r0, [r0, #-1]
     364:	740301a3 	strvc	r0, [r3], #-419	@ 0xfffffe5d
     368:	06000002 	streq	r0, [r0], -r2
     36c:	01c005d0 	ldrdeq	r0, [r0, #80]	@ 0x50
     370:	0006c709 	andeq	ip, r6, r9, lsl #14
     374:	52540700 	subspl	r0, r4, #0, 14
     378:	01c20500 	biceq	r0, r2, r0, lsl #10
     37c:	00007711 	andeq	r7, r0, r1, lsl r7
     380:	00230200 	eoreq	r0, r3, r0, lsl #4
     384:	00524407 	subseq	r4, r2, r7, lsl #8
     388:	1101c305 	tstne	r1, r5, lsl #6
     38c:	00000077 	andeq	r0, r0, r7, ror r0
     390:	07042302 	streq	r2, [r4, -r2, lsl #6]
     394:	05005243 	streq	r5, [r0, #-579]	@ 0xfffffdbd
     398:	771101c4 	ldrvc	r0, [r1, -r4, asr #3]
     39c:	02000000 	andeq	r0, r0, #0
     3a0:	49070823 	stmdbmi	r7, {r0, r1, r5, fp}
     3a4:	05005253 	streq	r5, [r0, #-595]	@ 0xfffffdad
     3a8:	771101c5 	ldrvc	r0, [r1, -r5, asr #3]
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	13080c23 	movwne	r0, #35875	@ 0x8c23
     3b4:	05000001 	streq	r0, [r0, #-1]
     3b8:	771101c6 	ldrvc	r0, [r1, -r6, asr #3]
     3bc:	02000000 	andeq	r0, r0, #0
     3c0:	4a081023 	bmi	204454 <_Min_Stack_Size+0x204054>
     3c4:	05000000 	streq	r0, [r0, #-0]
     3c8:	771101c7 	ldrvc	r0, [r1, -r7, asr #3]
     3cc:	02000000 	andeq	r0, r0, #0
     3d0:	3b081423 	blcc	205464 <_Min_Stack_Size+0x205064>
     3d4:	05000001 	streq	r0, [r0, #-1]
     3d8:	771101c8 	ldrvc	r0, [r1, -r8, asr #3]
     3dc:	02000000 	andeq	r0, r0, #0
     3e0:	58081823 	stmdapl	r8, {r0, r1, r5, fp, ip}
     3e4:	05000002 	streq	r0, [r0, #-2]
     3e8:	771101c9 	ldrvc	r0, [r1, -r9, asr #3]
     3ec:	02000000 	andeq	r0, r0, #0
     3f0:	39081c23 	stmdbcc	r8, {r0, r1, r5, sl, fp, ip}
     3f4:	05000003 	streq	r0, [r0, #-3]
     3f8:	771101ca 	ldrvc	r0, [r1, -sl, asr #3]
     3fc:	02000000 	andeq	r0, r0, #0
     400:	57072023 	strpl	r2, [r7, -r3, lsr #32]
     404:	05005250 	streq	r5, [r0, #-592]	@ 0xfffffdb0
     408:	771101cb 	ldrvc	r0, [r1, -fp, asr #3]
     40c:	02000000 	andeq	r0, r0, #0
     410:	53072423 	movwpl	r2, #29731	@ 0x7423
     414:	05005253 	streq	r5, [r0, #-595]	@ 0xfffffdad
     418:	771101cc 	ldrvc	r0, [r1, -ip, asr #3]
     41c:	02000000 	andeq	r0, r0, #0
     420:	68082823 	stmdavs	r8, {r0, r1, r5, fp, sp}
     424:	05000002 	streq	r0, [r0, #-2]
     428:	771101cd 	ldrvc	r0, [r1, -sp, asr #3]
     42c:	02000000 	andeq	r0, r0, #0
     430:	75082c23 	strvc	r2, [r8, #-3107]	@ 0xfffff3dd
     434:	05000002 	streq	r0, [r0, #-2]
     438:	771101ce 	ldrvc	r0, [r1, -lr, asr #3]
     43c:	02000000 	andeq	r0, r0, #0
     440:	a3083023 	movwge	r3, #32803	@ 0x8023
     444:	05000000 	streq	r0, [r0, #-0]
     448:	771101cf 	ldrvc	r0, [r1, -pc, asr #3]
     44c:	02000000 	andeq	r0, r0, #0
     450:	5a083423 	bpl	20d4e4 <_Min_Stack_Size+0x20d0e4>
     454:	05000003 	streq	r0, [r0, #-3]
     458:	771101d0 			@ <UNDEFINED> instruction: 0x771101d0
     45c:	02000000 	andeq	r0, r0, #0
     460:	45083823 	strmi	r3, [r8, #-2083]	@ 0xfffff7dd
     464:	05000000 	streq	r0, [r0, #-0]
     468:	771101d1 			@ <UNDEFINED> instruction: 0x771101d1
     46c:	02000000 	andeq	r0, r0, #0
     470:	f7083c23 			@ <UNDEFINED> instruction: 0xf7083c23
     474:	05000000 	streq	r0, [r0, #-0]
     478:	771101d2 			@ <UNDEFINED> instruction: 0x771101d2
     47c:	02000000 	andeq	r0, r0, #0
     480:	8a084023 	bhi	210514 <_Min_Stack_Size+0x210114>
     484:	05000001 	streq	r0, [r0, #-1]
     488:	771101d3 			@ <UNDEFINED> instruction: 0x771101d3
     48c:	02000000 	andeq	r0, r0, #0
     490:	cd084423 	cfstrsgt	mvf4, [r8, #-140]	@ 0xffffff74
     494:	05000002 	streq	r0, [r0, #-2]
     498:	771101d4 			@ <UNDEFINED> instruction: 0x771101d4
     49c:	02000000 	andeq	r0, r0, #0
     4a0:	13084823 	movwne	r4, #34851	@ 0x8823
     4a4:	05000003 	streq	r0, [r0, #-3]
     4a8:	6b0c01d5 	blvs	300c04 <_Min_Stack_Size+0x300804>
     4ac:	02000000 	andeq	r0, r0, #0
     4b0:	32084c23 	andcc	r4, r8, #8960	@ 0x2300
     4b4:	05000002 	streq	r0, [r0, #-2]
     4b8:	771101d6 			@ <UNDEFINED> instruction: 0x771101d6
     4bc:	02000000 	andeq	r0, r0, #0
     4c0:	24085023 	strcs	r5, [r8], #-35	@ 0xffffffdd
     4c4:	05000003 	streq	r0, [r0, #-3]
     4c8:	771101d7 			@ <UNDEFINED> instruction: 0x771101d7
     4cc:	02000000 	andeq	r0, r0, #0
     4d0:	15085423 	strne	r5, [r8, #-1059]	@ 0xfffffbdd
     4d4:	05000000 	streq	r0, [r0, #-0]
     4d8:	771101d8 			@ <UNDEFINED> instruction: 0x771101d8
     4dc:	02000000 	andeq	r0, r0, #0
     4e0:	18085823 	stmdane	r8, {r0, r1, r5, fp, ip, lr}
     4e4:	05000001 	streq	r0, [r0, #-1]
     4e8:	771101d9 			@ <UNDEFINED> instruction: 0x771101d9
     4ec:	02000000 	andeq	r0, r0, #0
     4f0:	6f085c23 	svcvs	0x00085c23
     4f4:	05000002 	streq	r0, [r0, #-2]
     4f8:	771101da 			@ <UNDEFINED> instruction: 0x771101da
     4fc:	02000000 	andeq	r0, r0, #0
     500:	40086023 	andmi	r6, r8, r3, lsr #32
     504:	05000003 	streq	r0, [r0, #-3]
     508:	771101db 			@ <UNDEFINED> instruction: 0x771101db
     50c:	02000000 	andeq	r0, r0, #0
     510:	3a086423 	bcc	2195a4 <_Min_Stack_Size+0x2191a4>
     514:	05000000 	streq	r0, [r0, #-0]
     518:	771101dc 			@ <UNDEFINED> instruction: 0x771101dc
     51c:	02000000 	andeq	r0, r0, #0
     520:	49086823 	stmdbmi	r8, {r0, r1, r5, fp, sp, lr}
     524:	05000001 	streq	r0, [r0, #-1]
     528:	771101dd 			@ <UNDEFINED> instruction: 0x771101dd
     52c:	02000000 	andeq	r0, r0, #0
     530:	bb086c23 	bllt	21b5c4 <_Min_Stack_Size+0x21b1c4>
     534:	05000002 	streq	r0, [r0, #-2]
     538:	771101de 			@ <UNDEFINED> instruction: 0x771101de
     53c:	02000000 	andeq	r0, r0, #0
     540:	70087023 	andvc	r7, r8, r3, lsr #32
     544:	05000003 	streq	r0, [r0, #-3]
     548:	771101df 			@ <UNDEFINED> instruction: 0x771101df
     54c:	02000000 	andeq	r0, r0, #0
     550:	42087423 	andmi	r7, r8, #587202560	@ 0x23000000
     554:	05000001 	streq	r0, [r0, #-1]
     558:	771101e0 	ldrvc	r0, [r1, -r0, ror #3]
     55c:	02000000 	andeq	r0, r0, #0
     560:	b4087823 	strlt	r7, [r8], #-2083	@ 0xfffff7dd
     564:	05000002 	streq	r0, [r0, #-2]
     568:	771101e1 	ldrvc	r0, [r1, -r1, ror #3]
     56c:	02000000 	andeq	r0, r0, #0
     570:	60087c23 	andvs	r7, r8, r3, lsr #24
     574:	05000003 	streq	r0, [r0, #-3]
     578:	771101e2 	ldrvc	r0, [r1, -r2, ror #3]
     57c:	03000000 	movweq	r0, #0
     580:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     584:	00000079 	andeq	r0, r0, r9, ror r0
     588:	1101e305 	tstne	r1, r5, lsl #6
     58c:	00000077 	andeq	r0, r0, r7, ror r0
     590:	01842303 	orreq	r2, r4, r3, lsl #6
     594:	0001fe08 	andeq	pc, r1, r8, lsl #28
     598:	01e40500 	mvneq	r0, r0, lsl #10
     59c:	00007711 	andeq	r7, r0, r1, lsl r7
     5a0:	88230300 	stmdahi	r3!, {r8, r9}
     5a4:	02dd0801 	sbcseq	r0, sp, #65536	@ 0x10000
     5a8:	e5050000 	str	r0, [r5, #-0]
     5ac:	00771101 	rsbseq	r1, r7, r1, lsl #2
     5b0:	23030000 	movwcs	r0, #12288	@ 0x3000
     5b4:	a508018c 	strge	r0, [r8, #-396]	@ 0xfffffe74
     5b8:	05000003 	streq	r0, [r0, #-3]
     5bc:	771101e6 	ldrvc	r0, [r1, -r6, ror #3]
     5c0:	03000000 	movweq	r0, #0
     5c4:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     5c8:	00000094 	muleq	r0, r4, r0
     5cc:	1101e705 	tstne	r1, r5, lsl #14
     5d0:	00000077 	andeq	r0, r0, r7, ror r0
     5d4:	01942303 	orrseq	r2, r4, r3, lsl #6
     5d8:	0002d608 	andeq	sp, r2, r8, lsl #12
     5dc:	01e80500 	mvneq	r0, r0, lsl #10
     5e0:	00007711 	andeq	r7, r0, r1, lsl r7
     5e4:	98230300 	stmdals	r3!, {r8, r9}
     5e8:	031d0801 	tsteq	sp, #65536	@ 0x10000
     5ec:	e9050000 	stmdb	r5, {}	@ <UNPREDICTABLE>
     5f0:	00771101 	rsbseq	r1, r7, r1, lsl #2
     5f4:	23030000 	movwcs	r0, #12288	@ 0x3000
     5f8:	a808019c 	stmdage	r8, {r2, r3, r4, r7, r8}
     5fc:	05000000 	streq	r0, [r0, #-0]
     600:	771101ea 	ldrvc	r0, [r1, -sl, ror #3]
     604:	03000000 	movweq	r0, #0
     608:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
     60c:	000002f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
     610:	1101eb05 	tstne	r1, r5, lsl #22
     614:	00000077 	andeq	r0, r0, r7, ror r0
     618:	01a42303 			@ <UNDEFINED> instruction: 0x01a42303
     61c:	00032a08 	andeq	r2, r3, r8, lsl #20
     620:	01ec0500 	mvneq	r0, r0, lsl #10
     624:	00007711 	andeq	r7, r0, r1, lsl r7
     628:	a8230300 	stmdage	r3!, {r8, r9}
     62c:	00240801 	eoreq	r0, r4, r1, lsl #16
     630:	ed050000 	stc	0, cr0, [r5, #-0]
     634:	00771101 	rsbseq	r1, r7, r1, lsl #2
     638:	23030000 	movwcs	r0, #12288	@ 0x3000
     63c:	2e0801ac 	adfcs<illegal precision>p	f0, f0, #4.0
     640:	05000001 	streq	r0, [r0, #-1]
     644:	771101ee 	ldrvc	r0, [r1, -lr, ror #3]
     648:	03000000 	movweq	r0, #0
     64c:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
     650:	0000027f 	andeq	r0, r0, pc, ror r2
     654:	1101ef05 	tstne	r1, r5, lsl #30
     658:	00000077 	andeq	r0, r0, r7, ror r0
     65c:	01b42303 			@ <UNDEFINED> instruction: 0x01b42303
     660:	00034608 	andeq	r4, r3, r8, lsl #12
     664:	01f00500 	mvnseq	r0, r0, lsl #10
     668:	00007711 	andeq	r7, r0, r1, lsl r7
     66c:	b8230300 	stmdalt	r3!, {r8, r9}
     670:	03840801 	orreq	r0, r4, #65536	@ 0x10000
     674:	f1050000 			@ <UNDEFINED> instruction: 0xf1050000
     678:	00771101 	rsbseq	r1, r7, r1, lsl #2
     67c:	23030000 	movwcs	r0, #12288	@ 0x3000
     680:	600801bc 			@ <UNDEFINED> instruction: 0x600801bc
     684:	05000001 	streq	r0, [r0, #-1]
     688:	771101f2 			@ <UNDEFINED> instruction: 0x771101f2
     68c:	03000000 	movweq	r0, #0
     690:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
     694:	000002c6 	andeq	r0, r0, r6, asr #5
     698:	1101f305 	tstne	r1, r5, lsl #6	@ <UNPREDICTABLE>
     69c:	00000077 	andeq	r0, r0, r7, ror r0
     6a0:	01c42303 	biceq	r2, r4, r3, lsl #6
     6a4:	00004f08 	andeq	r4, r0, r8, lsl #30
     6a8:	01f40500 	mvnseq	r0, r0, lsl #10
     6ac:	00007711 	andeq	r7, r0, r1, lsl r7
     6b0:	c8230300 	stmdagt	r3!, {r8, r9}
     6b4:	01760801 	cmneq	r6, r1, lsl #16
     6b8:	f5050000 			@ <UNDEFINED> instruction: 0xf5050000
     6bc:	00771101 	rsbseq	r1, r7, r1, lsl #2
     6c0:	23030000 	movwcs	r0, #12288	@ 0x3000
     6c4:	0b0001cc 	bleq	dfc <_Min_Stack_Size+0x9fc>
     6c8:	000002e4 	andeq	r0, r0, r4, ror #5
     6cc:	0301f605 	movweq	pc, #5637	@ 0x1605	@ <UNPREDICTABLE>
     6d0:	0000036b 	andeq	r0, r0, fp, ror #6
     6d4:	0304010c 	movweq	r0, #16652	@ 0x410c
     6d8:	46060000 	strmi	r0, [r6], -r0
     6dc:	06e40106 	strbteq	r0, [r4], r6, lsl #2
     6e0:	000d0000 	andeq	r0, sp, r0
     6e4:	0205010c 	andeq	r0, r5, #12, 2
     6e8:	28060000 	stmdacs	r6, {}	@ <UNPREDICTABLE>
     6ec:	06f40106 	ldrbteq	r0, [r4], r6, lsl #2
     6f0:	000d0000 	andeq	r0, sp, r0
     6f4:	02f7010c 	rscseq	r0, r7, #12, 2
     6f8:	08070000 	stmdaeq	r7, {}	@ <UNPREDICTABLE>
     6fc:	07040106 	streq	r0, [r4, -r6, lsl #2]
     700:	000d0000 	andeq	r0, sp, r0
     704:	02c1010e 	sbceq	r0, r1, #-2147483645	@ 0x80000003
     708:	0f010000 	svceq	0x00010000
     70c:	008a0105 	addeq	r0, sl, r5, lsl #2
     710:	17040000 	strne	r0, [r4, -r0]
     714:	17c40800 	strbne	r0, [r4, r0, lsl #16]
     718:	00000800 	andeq	r0, r0, r0, lsl #16
     71c:	33010000 	movwcc	r0, #4096	@ 0x1000
     720:	0f000008 	svceq	0x00000008
     724:	0800171a 	stmdaeq	r0, {r1, r3, r4, r8, r9, sl, ip}
     728:	08001730 	stmdaeq	r0, {r4, r5, r8, r9, sl, ip}
     72c:	00000745 	andeq	r0, r0, r5, asr #14
     730:	00002b10 	andeq	r2, r0, r0, lsl fp
     734:	03140100 	tsteq	r4, #0, 2
     738:	0000006b 	andeq	r0, r0, fp, rrx
     73c:	00000028 	andeq	r0, r0, r8, lsr #32
     740:	00000020 	andeq	r0, r0, r0, lsr #32
     744:	17300f00 	ldrne	r0, [r0, -r0, lsl #30]!
     748:	17440800 	strbne	r0, [r4, -r0, lsl #16]
     74c:	07670800 	strbeq	r0, [r7, -r0, lsl #16]!
     750:	2b100000 	blcs	400758 <_Min_Stack_Size+0x400358>
     754:	01000000 	mrseq	r0, (UNDEF: 0)
     758:	006b1614 	rsbeq	r1, fp, r4, lsl r6
     75c:	006b0000 	rsbeq	r0, fp, r0
     760:	00630000 	rsbeq	r0, r3, r0
     764:	0f000000 	svceq	0x00000000
     768:	08001744 	stmdaeq	r0, {r2, r6, r8, r9, sl, ip}
     76c:	08001758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip}
     770:	00000789 	andeq	r0, r0, r9, lsl #15
     774:	00002b10 	andeq	r2, r0, r0, lsl fp
     778:	29140100 	ldmdbcs	r4, {r8}
     77c:	0000006b 	andeq	r0, r0, fp, rrx
     780:	000000ae 	andeq	r0, r0, lr, lsr #1
     784:	000000a6 	andeq	r0, r0, r6, lsr #1
     788:	17580f00 	ldrbne	r0, [r8, -r0, lsl #30]
     78c:	17680800 	strbne	r0, [r8, -r0, lsl #16]!
     790:	07ab0800 	streq	r0, [fp, r0, lsl #16]!
     794:	2b100000 	blcs	40079c <_Min_Stack_Size+0x40039c>
     798:	01000000 	mrseq	r0, (UNDEF: 0)
     79c:	006b0315 	rsbeq	r0, fp, r5, lsl r3
     7a0:	00f10000 	rscseq	r0, r1, r0
     7a4:	00e90000 	rsceq	r0, r9, r0
     7a8:	0f000000 	svceq	0x00000000
     7ac:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
     7b0:	0800177e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sl, ip}
     7b4:	000007cd 	andeq	r0, r0, sp, asr #15
     7b8:	00002b10 	andeq	r2, r0, r0, lsl fp
     7bc:	18150100 	ldmdane	r5, {r8}
     7c0:	0000006b 	andeq	r0, r0, fp, rrx
     7c4:	00000133 	andeq	r0, r0, r3, lsr r1
     7c8:	0000012b 	andeq	r0, r0, fp, lsr #2
     7cc:	177e0f00 	ldrbne	r0, [lr, -r0, lsl #30]!
     7d0:	17920800 	ldrne	r0, [r2, r0, lsl #16]
     7d4:	07ef0800 	strbeq	r0, [pc, r0, lsl #16]!
     7d8:	2b100000 	blcs	4007e0 <_Min_Stack_Size+0x4003e0>
     7dc:	01000000 	mrseq	r0, (UNDEF: 0)
     7e0:	006b2c15 	rsbeq	r2, fp, r5, lsl ip
     7e4:	01770000 	cmneq	r7, r0
     7e8:	016f0000 	cmneq	pc, r0
     7ec:	11000000 	mrsne	r0, (UNDEF: 0)
     7f0:	00000978 	andeq	r0, r0, r8, ror r9
     7f4:	080017ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, sl, ip}
     7f8:	0017ae01 	andseq	sl, r7, r1, lsl #28
     7fc:	0017b008 	andseq	fp, r7, r8
     800:	031b0108 	tsteq	fp, #8, 2
     804:	00170c12 	andseq	r0, r7, r2, lsl ip
     808:	00088208 	andeq	r8, r8, r8, lsl #4
     80c:	00081700 	andeq	r1, r8, r0, lsl #14
     810:	50011300 	andpl	r1, r1, r0, lsl #6
     814:	14003101 	strne	r3, [r0], #-257	@ 0xfffffeff
     818:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
     81c:	000006f4 	strdeq	r0, [r0], -r4
     820:	0017ae14 	andseq	sl, r7, r4, lsl lr
     824:	0006e408 	andeq	lr, r6, r8, lsl #8
     828:	17b41400 	ldrne	r1, [r4, r0, lsl #8]!
     82c:	06d40800 	ldrbeq	r0, [r4], r0, lsl #16
     830:	15000000 	strne	r0, [r0, #-0]
     834:	0003ac01 	andeq	sl, r3, r1, lsl #24
     838:	060b0100 	streq	r0, [fp], -r0, lsl #2
     83c:	00035c01 	andeq	r5, r3, r1, lsl #24
     840:	00036608 	andeq	r6, r3, r8, lsl #12
     844:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     848:	00086201 	andeq	r6, r8, r1, lsl #4
     84c:	027a1600 	rsbseq	r1, sl, #0, 12
     850:	0b010000 	bleq	40858 <_Min_Stack_Size+0x40458>
     854:	00006b15 	andeq	r6, r0, r5, lsl fp
     858:	0001ba00 	andeq	fp, r1, r0, lsl #20
     85c:	0001b200 	andeq	fp, r1, r0, lsl #4
     860:	01170000 	tsteq	r7, r0
     864:	00000286 	andeq	r0, r0, r6, lsl #5
     868:	011c0901 	tsteq	ip, r1, lsl #18
     86c:	0800035a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9}
     870:	0800035c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9}
     874:	01007d02 	tsteq	r0, r2, lsl #26
     878:	0cb50118 	ldfeqs	f0, [r5], #96	@ 0x60
     87c:	08010000 	stmdaeq	r1, {}	@ <UNPREDICTABLE>
     880:	0119011c 	tsteq	r9, ip, lsl r1
     884:	00000086 	andeq	r0, r0, r6, lsl #1
     888:	01083602 	tsteq	r8, r2, lsl #12
     88c:	00000030 	andeq	r0, r0, r0, lsr r0
     890:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
     894:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
     898:	01007d02 	tsteq	r0, r2, lsl #26
     89c:	00000963 	andeq	r0, r0, r3, ror #18
     8a0:	00022416 	andeq	r2, r2, r6, lsl r4
     8a4:	18360200 	ldmdane	r6!, {r9}
     8a8:	00000030 	andeq	r0, r0, r0, lsr r0
     8ac:	000001f6 	strdeq	r0, [r0], -r6
     8b0:	000001f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
     8b4:	0200691a 	andeq	r6, r0, #425984	@ 0x68000
     8b8:	00580c37 	subseq	r0, r8, r7, lsr ip
     8bc:	02480000 	subeq	r0, r8, #0
     8c0:	02220000 	eoreq	r0, r2, #0
     8c4:	741a0000 	ldrvc	r0, [sl], #-0
     8c8:	0200706d 	andeq	r7, r0, #109	@ 0x6d
     8cc:	006b0c38 	rsbeq	r0, fp, r8, lsr ip
     8d0:	03950000 	orrseq	r0, r5, #0
     8d4:	03710000 	cmneq	r1, #0
     8d8:	001b0000 	andseq	r0, fp, r0
     8dc:	f6000000 			@ <UNDEFINED> instruction: 0xf6000000
     8e0:	1a000008 	bne	908 <_Min_Stack_Size+0x508>
     8e4:	40020074 	andmi	r0, r2, r4, ror r0
     8e8:	00006b05 	andeq	r6, r0, r5, lsl #22
     8ec:	00049400 	andeq	r9, r4, r0, lsl #8
     8f0:	00048a00 	andeq	r8, r4, r0, lsl #20
     8f4:	481b0000 	ldmdami	fp, {}	@ <UNPREDICTABLE>
     8f8:	12000000 	andne	r0, r0, #0
     8fc:	1a000009 	bne	928 <_Min_Stack_Size+0x528>
     900:	51020074 	tstpl	r2, r4, ror r0
     904:	00006b07 	andeq	r6, r0, r7, lsl #22
     908:	0004e900 	andeq	lr, r4, r0, lsl #18
     90c:	0004df00 	andeq	sp, r4, r0, lsl #30
     910:	601b0000 	andsvs	r0, fp, r0
     914:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
     918:	1a000009 	bne	944 <_Min_Stack_Size+0x544>
     91c:	5b020074 	blpl	80af4 <_Min_Stack_Size+0x806f4>
     920:	00006b07 	andeq	r6, r0, r7, lsl #22
     924:	00053e00 	andeq	r3, r5, r0, lsl #28
     928:	00053400 	andeq	r3, r5, r0, lsl #8
     92c:	181b0000 	ldmdane	fp, {}	@ <UNPREDICTABLE>
     930:	4a000000 	bmi	938 <_Min_Stack_Size+0x538>
     934:	1a000009 	bne	960 <_Min_Stack_Size+0x560>
     938:	87020074 	smlsdxhi	r2, r4, r0, r0
     93c:	00006b05 	andeq	r6, r0, r5, lsl #22
     940:	00059300 	andeq	r9, r5, r0, lsl #6
     944:	00058900 	andeq	r8, r5, r0, lsl #18
     948:	301c0000 	andscc	r0, ip, r0
     94c:	1a000000 	bne	954 <_Min_Stack_Size+0x554>
     950:	91020074 	tstls	r2, r4, ror r0
     954:	00006b05 	andeq	r6, r0, r5, lsl #22
     958:	0005e800 	andeq	lr, r5, r0, lsl #16
     95c:	0005de00 	andeq	sp, r5, r0, lsl #28
     960:	1d000000 	stcne	0, cr0, [r0, #-0]
     964:	0000fd01 	andeq	pc, r0, r1, lsl #26
     968:	06160200 	ldreq	r0, [r6], -r0, lsl #4
     96c:	08000150 	stmdaeq	r0, {r4, r6, r8}
     970:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
     974:	01007d02 	tsteq	r0, r2, lsl #26
     978:	00017d1e 	andeq	r7, r1, lr, lsl sp
     97c:	04b40300 	ldrteq	r0, [r4], #768	@ 0x300
     980:	1c000316 	stcne	3, cr0, [r0], {22}
     984:	02000001 	andeq	r0, r0, #1
     988:	0001e700 	andeq	lr, r1, r0, lsl #14
     98c:	93010400 	movwls	r0, #5120	@ 0x1400
     990:	0c000001 	stceq	0, cr0, [r0], {1}
     994:	000003b2 			@ <UNDEFINED> instruction: 0x000003b2
     998:	000000af 	andeq	r0, r0, pc, lsr #1
     99c:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
     9a0:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
     9a4:	000005dd 	ldrdeq	r0, [r0], -sp
     9a8:	18060102 	stmdane	r6, {r1, r8}
     9ac:	02000002 	andeq	r0, r0, #2
     9b0:	00300502 	eorseq	r0, r0, r2, lsl #10
     9b4:	04020000 	streq	r0, [r2], #-0
     9b8:	00006705 	andeq	r6, r0, r5, lsl #14
     9bc:	05080200 	streq	r0, [r8, #-512]	@ 0xfffffe00
     9c0:	00000062 	andeq	r0, r0, r2, rrx
     9c4:	16080102 	strne	r0, [r8], -r2, lsl #2
     9c8:	02000002 	andeq	r0, r0, #2
     9cc:	02910702 	addseq	r0, r1, #524288	@ 0x80000
     9d0:	4f030000 	svcmi	0x00030000
     9d4:	03000002 	movweq	r0, #2
     9d8:	00651934 	rsbeq	r1, r5, r4, lsr r9
     9dc:	4f040000 	svcmi	0x00040000
     9e0:	05000000 	streq	r0, [r0, #-0]
     9e4:	0000005b 	andeq	r0, r0, fp, asr r0
     9e8:	3d070402 	cfstrscc	mvf0, [r7, #-8]
     9ec:	02000002 	andeq	r0, r0, #2
     9f0:	02380708 	eorseq	r0, r8, #8, 14	@ 0x200000
     9f4:	04060000 	streq	r0, [r6], #-0
     9f8:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
     9fc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     a00:	00000242 	andeq	r0, r0, r2, asr #4
     a04:	6d021007 	stcvs	0, cr1, [r2, #-28]	@ 0xffffffe4
     a08:	00cc0901 	sbceq	r0, ip, r1, lsl #18
     a0c:	c6080000 	strgt	r0, [r8], -r0
     a10:	02000003 	andeq	r0, r0, #3
     a14:	5b11016f 	blpl	440fd8 <_Min_Stack_Size+0x440bd8>
     a18:	02000000 	andeq	r0, r0, #0
     a1c:	cb080023 	blgt	200ab0 <_Min_Stack_Size+0x2006b0>
     a20:	02000003 	andeq	r0, r0, #3
     a24:	5b110170 	blpl	440fec <_Min_Stack_Size+0x440bec>
     a28:	02000000 	andeq	r0, r0, #0
     a2c:	56090423 	strpl	r0, [r9], -r3, lsr #8
     a30:	02004c41 	andeq	r4, r0, #16640	@ 0x4100
     a34:	5b110171 	blpl	441000 <_Min_Stack_Size+0x440c00>
     a38:	02000000 	andeq	r0, r0, #0
     a3c:	c0080823 	andgt	r0, r8, r3, lsr #16
     a40:	02000003 	andeq	r0, r0, #3
     a44:	60110172 	andsvs	r0, r1, r2, ror r1
     a48:	02000000 	andeq	r0, r0, #0
     a4c:	0a000c23 	beq	3ae0 <_Min_Stack_Size+0x36e0>
     a50:	000003e0 	andeq	r0, r0, r0, ror #7
     a54:	03017302 	movweq	r7, #4866	@ 0x1302
     a58:	00000081 	andeq	r0, r0, r1, lsl #1
     a5c:	0003ed0b 	andeq	lr, r3, fp, lsl #26
     a60:	1a050400 	bne	141a68 <_Min_Stack_Size+0x141668>
     a64:	0000005b 	andeq	r0, r0, fp, asr r0
     a68:	d90c0101 	stmdble	ip, {r0, r8}
     a6c:	01000000 	mrseq	r0, (UNDEF: 0)
     a70:	03051304 	movweq	r1, #21252	@ 0x5304
     a74:	20000024 	andcs	r0, r0, r4, lsr #32
     a78:	03d0010d 	bicseq	r0, r0, #1073741827	@ 0x40000003
     a7c:	0c010000 	stceq	0, cr0, [r1], {-0}
     a80:	00037606 	andeq	r7, r3, r6, lsl #12
     a84:	00038408 	andeq	r8, r3, r8, lsl #8
     a88:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     a8c:	f7010d01 			@ <UNDEFINED> instruction: 0xf7010d01
     a90:	01000002 	tsteq	r0, r2
     a94:	03680606 	cmneq	r8, #6291456	@ 0x600000
     a98:	03760800 	cmneq	r6, #0, 16
     a9c:	7d020800 	stcvc	8, cr0, [r2, #-0]
     aa0:	e0000100 	and	r0, r0, r0, lsl #2
     aa4:	02000012 	andeq	r0, r0, #18
     aa8:	0002a800 	andeq	sl, r2, r0, lsl #16
     aac:	93010400 	movwls	r0, #5120	@ 0x1400
     ab0:	0c000001 	stceq	0, cr0, [r0], {1}
     ab4:	000007c0 	andeq	r0, r0, r0, asr #15
     ab8:	000000af 	andeq	r0, r0, pc, lsr #1
     abc:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
     ac0:	08000a04 	stmdaeq	r0, {r2, r9, fp}
     ac4:	0000069a 	muleq	r0, sl, r6
     ac8:	18060102 	stmdane	r6, {r1, r8}
     acc:	02000002 	andeq	r0, r0, #2
     ad0:	00300502 	eorseq	r0, r0, r2, lsl #10
     ad4:	04020000 	streq	r0, [r2], #-0
     ad8:	00006705 	andeq	r6, r0, r5, lsl #14
     adc:	05080200 	streq	r0, [r8, #-512]	@ 0xfffffe00
     ae0:	00000062 	andeq	r0, r0, r2, rrx
     ae4:	00071003 	andeq	r1, r7, r3
     ae8:	182e0400 	stmdane	lr!, {sl}
     aec:	00000057 	andeq	r0, r0, r7, asr r0
     af0:	00004104 	andeq	r4, r0, r4, lsl #2
     af4:	00410500 	subeq	r0, r1, r0, lsl #10
     af8:	01020000 	mrseq	r0, (UNDEF: 2)
     afc:	00021608 	andeq	r1, r2, r8, lsl #12
     b00:	025f0300 	subseq	r0, pc, #0, 6
     b04:	31040000 	mrscc	r0, (UNDEF: 4)
     b08:	00007419 	andeq	r7, r0, r9, lsl r4
     b0c:	005e0400 	subseq	r0, lr, r0, lsl #8
     b10:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     b14:	02000000 	andeq	r0, r0, #0
     b18:	02910702 	addseq	r0, r1, #524288	@ 0x80000
     b1c:	4f030000 	svcmi	0x00030000
     b20:	04000002 	streq	r0, [r0], #-2
     b24:	008c1934 	addeq	r1, ip, r4, lsr r9
     b28:	7b040000 	blvc	100b30 <_Min_Stack_Size+0x100730>
     b2c:	02000000 	andeq	r0, r0, #0
     b30:	023d0704 	eorseq	r0, sp, #4, 14	@ 0x100000
     b34:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
     b38:	00023807 	andeq	r3, r2, r7, lsl #16
     b3c:	05040600 	streq	r0, [r4, #-1536]	@ 0xfffffa00
     b40:	00746e69 	rsbseq	r6, r4, r9, ror #28
     b44:	42070402 	andmi	r0, r7, #33554432	@ 0x2000000
     b48:	03000002 	movweq	r0, #2
     b4c:	00000775 	andeq	r0, r0, r5, ror r7
     b50:	b40f1d03 	strlt	r1, [pc], #-3331	@ b58 <_Min_Stack_Size+0x758>
     b54:	07000000 	streq	r0, [r0, -r0]
     b58:	0000ba04 	andeq	fp, r0, r4, lsl #20
     b5c:	c6010800 	strgt	r0, [r1], -r0, lsl #16
     b60:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
     b64:	00000041 	andeq	r0, r0, r1, asr #32
     b68:	03080a00 	movweq	r0, #35328	@ 0x8a00
     b6c:	011b091e 	tsteq	fp, lr, lsl r9
     b70:	810b0000 	mrshi	r0, (UNDEF: 11)
     b74:	03000004 	movweq	r0, #4
     b78:	00410b1f 	subeq	r0, r1, pc, lsl fp
     b7c:	23020000 	movwcs	r0, #8192	@ 0x2000
     b80:	08dc0b00 	ldmeq	ip, {r8, r9, fp}^
     b84:	20030000 	andcs	r0, r3, r0
     b88:	0000410b 	andeq	r4, r0, fp, lsl #2
     b8c:	01230200 			@ <UNDEFINED> instruction: 0x01230200
     b90:	0005030b 	andeq	r0, r5, fp, lsl #6
     b94:	0c210300 	stceq	3, cr0, [r1], #-0
     b98:	0000005e 	andeq	r0, r0, lr, asr r0
     b9c:	0b022302 	bleq	897ac <_Min_Stack_Size+0x893ac>
     ba0:	00000409 	andeq	r0, r0, r9, lsl #8
     ba4:	5e0c2203 	cdppl	2, 0, cr2, cr12, cr3, {0}
     ba8:	02000000 	andeq	r0, r0, #0
     bac:	bf0b0423 	svclt	0x000b0423
     bb0:	03000008 	movweq	r0, #8
     bb4:	005e0c23 	subseq	r0, lr, r3, lsr #24
     bb8:	23020000 	movwcs	r0, #8192	@ 0x2000
     bbc:	48030006 	stmdami	r3, {r1, r2}
     bc0:	03000009 	movweq	r0, #9
     bc4:	00c60224 	sbceq	r0, r6, r4, lsr #4
     bc8:	050c0000 	streq	r0, [ip, #-0]
     bcc:	00002501 	andeq	r2, r0, r1, lsl #10
     bd0:	01580500 	cmpeq	r8, r0, lsl #10
     bd4:	0000029e 	muleq	r0, lr, r2
     bd8:	0008ab0d 	andeq	sl, r8, sp, lsl #22
     bdc:	0a0d7200 	beq	35d3e4 <_Min_Stack_Size+0x35cfe4>
     be0:	74000005 	strvc	r0, [r0], #-5
     be4:	0007530d 	andeq	r5, r7, sp, lsl #6
     be8:	8e0d7500 	cfsh32hi	mvfx7, mvfx13, #0
     bec:	76000009 	strvc	r0, [r0], -r9
     bf0:	00044f0d 	andeq	r4, r4, sp, lsl #30
     bf4:	7c0d7b00 			@ <UNDEFINED> instruction: 0x7c0d7b00
     bf8:	7c000009 	stcvc	0, cr0, [r0], {9}
     bfc:	0004d90d 	andeq	sp, r4, sp, lsl #18
     c00:	140d7e00 	strne	r7, [sp], #-3584	@ 0xfffff200
     c04:	7f000009 	svcvc	0x00000009
     c08:	00072f0e 	andeq	r2, r7, lr, lsl #30
     c0c:	6c0e0000 	stcvs	0, cr0, [lr], {-0}
     c10:	01000007 	tsteq	r0, r7
     c14:	00052f0e 	andeq	r2, r5, lr, lsl #30
     c18:	3b0e0200 	blcc	381420 <_Min_Stack_Size+0x381020>
     c1c:	03000006 	movweq	r0, #6
     c20:	00049c0e 	andeq	r9, r4, lr, lsl #24
     c24:	fa0e0400 	blx	381c2c <_Min_Stack_Size+0x38182c>
     c28:	05000004 	streq	r0, [r0, #-4]
     c2c:	0004b10e 	andeq	fp, r4, lr, lsl #2
     c30:	d10e0600 	tstle	lr, r0, lsl #12
     c34:	07000008 	streq	r0, [r0, -r8]
     c38:	0006650e 	andeq	r6, r6, lr, lsl #10
     c3c:	230e0800 	movwcs	r0, #59392	@ 0xe800
     c40:	0900000a 	stmdbeq	r0, {r1, r3}
     c44:	0007610e 	andeq	r6, r7, lr, lsl #2
     c48:	ee0e0a00 	vmla.f32	s0, s28, s0
     c4c:	0b000006 	bleq	c6c <_Min_Stack_Size+0x86c>
     c50:	0004620e 	andeq	r6, r4, lr, lsl #4
     c54:	ad0e0c00 	stcge	12, cr0, [lr, #-0]
     c58:	0d000007 	stceq	0, cr0, [r0, #-28]	@ 0xffffffe4
     c5c:	00059a0e 	andeq	r9, r5, lr, lsl #20
     c60:	f80e0e00 			@ <UNDEFINED> instruction: 0xf80e0e00
     c64:	0f000009 	svceq	0x00000009
     c68:	0006b10e 	andeq	fp, r6, lr, lsl #2
     c6c:	2f0e1000 	svccs	0x000e1000
     c70:	11000004 	tstne	r0, r4
     c74:	0006700e 	andeq	r7, r6, lr
     c78:	700e1200 	andvc	r1, lr, r0, lsl #4
     c7c:	13000009 	movwne	r0, #9
     c80:	000a840e 	andeq	r8, sl, lr, lsl #8
     c84:	120e1400 	andne	r1, lr, #0, 8
     c88:	1500000a 	strne	r0, [r0, #-10]
     c8c:	0005bc0e 	andeq	fp, r5, lr, lsl #24
     c90:	c80e1600 	stmdagt	lr, {r9, sl, ip}
     c94:	17000009 	strne	r0, [r0, -r9]
     c98:	0004250e 	andeq	r2, r4, lr, lsl #10
     c9c:	240e1900 	strcs	r1, [lr], #-2304	@ 0xfffff700
     ca0:	1a000007 	bne	cc4 <_Min_Stack_Size+0x8c4>
     ca4:	0003fe0e 	andeq	pc, r3, lr, lsl #28
     ca8:	270e1b00 	strcs	r1, [lr, -r0, lsl #22]
     cac:	1c000009 	stcne	0, cr0, [r0], {9}
     cb0:	0006e40e 	andeq	lr, r6, lr, lsl #8
     cb4:	580e1d00 	stmdapl	lr, {r8, sl, fp, ip}
     cb8:	1e000004 	cdpne	0, 0, cr0, cr0, cr4, {0}
     cbc:	0007ce0e 	andeq	ip, r7, lr, lsl #28
     cc0:	070e1f00 	streq	r1, [lr, -r0, lsl #30]
     cc4:	20000009 	andcs	r0, r0, r9
     cc8:	00067a0e 	andeq	r7, r6, lr, lsl #20
     ccc:	420e2100 	andmi	r2, lr, #0, 2
     cd0:	22000004 	andcs	r0, r0, #4
     cd4:	0005780e 	andeq	r7, r5, lr, lsl #16
     cd8:	df0e2300 	svcle	0x000e2300
     cdc:	24000009 	strcs	r0, [r0], #-9
     ce0:	0008930e 	andeq	r9, r8, lr, lsl #6
     ce4:	150e2500 	strne	r2, [lr, #-1280]	@ 0xfffffb00
     ce8:	26000006 	strcs	r0, [r0], -r6
     cec:	000a6e0e 	andeq	r6, sl, lr, lsl #28
     cf0:	bc0e2700 	stclt	7, cr2, [lr], {-0}
     cf4:	28000004 	stmdacs	r0, {r2}
     cf8:	00080c0e 	andeq	r0, r8, lr, lsl #24
     cfc:	6e0e2900 	vmlavs.f16	s4, s28, s0	@ <UNPREDICTABLE>
     d00:	2a000008 	bcs	d28 <_Min_Stack_Size+0x928>
     d04:	0005900e 	andeq	r9, r5, lr
     d08:	ee0e2b00 	vmla.f64	d2, d14, d0
     d0c:	2c000009 	stccs	0, cr0, [r0], {9}
     d10:	0007a30e 	andeq	sl, r7, lr, lsl #6
     d14:	8c0e2e00 	stchi	14, cr2, [lr], {-0}
     d18:	2f000006 	svccs	0x00000006
     d1c:	0006c40e 	andeq	ip, r6, lr, lsl #8
     d20:	5b0e3200 	blpl	38d528 <_Min_Stack_Size+0x38d128>
     d24:	3300000a 	movwcc	r0, #10
     d28:	0007900e 	andeq	r9, r7, lr
     d2c:	5c0e3400 	cfstrspl	mvf3, [lr], {-0}
     d30:	35000005 	strcc	r0, [r0, #-5]
     d34:	0008f40e 	andeq	pc, r8, lr, lsl #8
     d38:	a30e3600 	movwge	r3, #58880	@ 0xe600
     d3c:	38000006 	stmdacc	r0, {r1, r2}
     d40:	06020300 	streq	r0, [r2], -r0, lsl #6
     d44:	98050000 	stmdals	r5, {}	@ <UNPREDICTABLE>
     d48:	00012703 	andeq	r2, r1, r3, lsl #14
     d4c:	0e040f00 	cdpeq	15, 0, cr0, cr4, cr0, {0}
     d50:	82098402 	andhi	r8, r9, #33554432	@ 0x2000000
     d54:	0b000003 	bleq	d68 <_Min_Stack_Size+0x968>
     d58:	00000541 	andeq	r0, r0, r1, asr #10
     d5c:	92118602 	andsls	r8, r1, #2097152	@ 0x200000
     d60:	02000003 	andeq	r0, r0, #3
     d64:	280b0023 	stmdacs	fp, {r0, r1, r5}
     d68:	02000008 	andeq	r0, r0, #8
     d6c:	03971187 	orrseq	r1, r7, #-1073741791	@ 0xc0000021
     d70:	23020000 	movwcs	r0, #8192	@ 0x2000
     d74:	09da0b20 	ldmibeq	sl, {r5, r8, r9, fp}^
     d78:	88020000 	stmdahi	r2, {}	@ <UNPREDICTABLE>
     d7c:	00039211 	andeq	r9, r3, r1, lsl r2
     d80:	80230300 	eorhi	r0, r3, r0, lsl #6
     d84:	056f0b01 	strbeq	r0, [pc, #-2817]!	@ 28b <_Min_Heap_Size+0x28b>
     d88:	89020000 	stmdbhi	r2, {}	@ <UNPREDICTABLE>
     d8c:	00039711 	andeq	r9, r3, r1, lsl r7
     d90:	a0230300 	eorge	r0, r3, r0, lsl #6
     d94:	0a410b01 	beq	10439a0 <_Min_Stack_Size+0x10435a0>
     d98:	8a020000 	bhi	80da0 <_Min_Stack_Size+0x809a0>
     d9c:	00039211 	andeq	r9, r3, r1, lsl r2
     da0:	80230300 	eorhi	r0, r3, r0, lsl #6
     da4:	083c0b02 	ldmdaeq	ip!, {r1, r8, r9, fp}
     da8:	8b020000 	blhi	80db0 <_Min_Stack_Size+0x809b0>
     dac:	00039711 	andeq	r9, r3, r1, lsl r7
     db0:	a0230300 	eorge	r0, r3, r0, lsl #6
     db4:	078b0b02 	streq	r0, [fp, r2, lsl #22]
     db8:	8c020000 	stchi	0, cr0, [r2], {-0}
     dbc:	00039211 	andeq	r9, r3, r1, lsl r2
     dc0:	80230300 	eorhi	r0, r3, r0, lsl #6
     dc4:	08460b03 	stmdaeq	r6, {r0, r1, r8, r9, fp}^
     dc8:	8d020000 	stchi	0, cr0, [r2, #-0]
     dcc:	00039711 	andeq	r9, r3, r1, lsl r7
     dd0:	a0230300 	eorge	r0, r3, r0, lsl #6
     dd4:	09e90b03 	stmibeq	r9!, {r0, r1, r8, r9, fp}^
     dd8:	8e020000 	cdphi	0, 0, cr0, cr2, cr0, {0}
     ddc:	00039211 	andeq	r9, r3, r1, lsl r2
     de0:	80230300 	eorhi	r0, r3, r0, lsl #6
     de4:	08500b04 	ldmdaeq	r0, {r2, r8, r9, fp}^
     de8:	8f020000 	svchi	0x00020000
     dec:	0003a711 	andeq	sl, r3, r1, lsl r7
     df0:	a0230300 	eorge	r0, r3, r0, lsl #6
     df4:	50491004 	subpl	r1, r9, r4
     df8:	11900200 	orrsne	r0, r0, r0, lsl #4
     dfc:	000003c7 	andeq	r0, r0, r7, asr #7
     e00:	06802303 	streq	r2, [r0], r3, lsl #6
     e04:	00085a0b 	andeq	r5, r8, fp, lsl #20
     e08:	11910200 	orrsne	r0, r1, r0, lsl #4
     e0c:	000003cc 	andeq	r0, r0, ip, asr #7
     e10:	07f02303 	ldrbeq	r2, [r0, r3, lsl #6]!
     e14:	0008070b 	andeq	r0, r8, fp, lsl #14
     e18:	11920200 	orrsne	r0, r2, r0, lsl #4
     e1c:	00000087 	andeq	r0, r0, r7, lsl #1
     e20:	1c802303 	stcne	3, cr2, [r0], {3}
     e24:	00871100 	addeq	r1, r7, r0, lsl #2
     e28:	03920000 	orrseq	r0, r2, #0
     e2c:	a1120000 	tstge	r2, r0
     e30:	07000000 	streq	r0, [r0, -r0]
     e34:	03820400 	orreq	r0, r2, #0, 8
     e38:	7b110000 	blvc	440e40 <_Min_Stack_Size+0x440a40>
     e3c:	a7000000 	strge	r0, [r0, -r0]
     e40:	12000003 	andne	r0, r0, #3
     e44:	000000a1 	andeq	r0, r0, r1, lsr #1
     e48:	7b110017 	blvc	440eac <_Min_Stack_Size+0x440aac>
     e4c:	b7000000 	strlt	r0, [r0, -r0]
     e50:	12000003 	andne	r0, r0, #3
     e54:	000000a1 	andeq	r0, r0, r1, lsr #1
     e58:	4d110037 	ldcmi	0, cr0, [r1, #-220]	@ 0xffffff24
     e5c:	c7000000 	strgt	r0, [r0, -r0]
     e60:	12000003 	andne	r0, r0, #3
     e64:	000000a1 	andeq	r0, r0, r1, lsr #1
     e68:	b70400ef 	strlt	r0, [r4, -pc, ror #1]
     e6c:	11000003 	tstne	r0, r3
     e70:	0000007b 	andeq	r0, r0, fp, ror r0
     e74:	000003dd 	ldrdeq	r0, [r0], -sp
     e78:	0000a113 	andeq	sl, r0, r3, lsl r1
     e7c:	00028300 	andeq	r8, r2, r0, lsl #6
     e80:	0008e503 	andeq	lr, r8, r3, lsl #10
     e84:	04930200 	ldreq	r0, [r3], #512	@ 0x200
     e88:	000002aa 	andeq	r0, r0, sl, lsr #5
     e8c:	61051814 	tstvs	r5, r4, lsl r8
     e90:	04240901 	strteq	r0, [r4], #-2305	@ 0xfffff6ff
     e94:	f3150000 	vhadd.u16	d0, d5, d0
     e98:	05000004 	streq	r0, [r0, #-4]
     e9c:	87110163 	ldrhi	r0, [r1, -r3, ror #2]
     ea0:	02000000 	andeq	r0, r0, #0
     ea4:	50160023 	andspl	r0, r6, r3, lsr #32
     ea8:	0500434d 	streq	r4, [r0, #-845]	@ 0xfffffcb3
     eac:	87110164 	ldrhi	r0, [r1, -r4, ror #2]
     eb0:	02000000 	andeq	r0, r0, #0
     eb4:	18150423 	ldmdane	r5, {r0, r1, r5, sl}
     eb8:	05000007 	streq	r0, [r0, #-7]
     ebc:	34110165 	ldrcc	r0, [r1], #-357	@ 0xfffffe9b
     ec0:	02000004 	andeq	r0, r0, #4
     ec4:	11000823 	tstne	r0, r3, lsr #16
     ec8:	00000087 	andeq	r0, r0, r7, lsl #1
     ecc:	00000434 	andeq	r0, r0, r4, lsr r4
     ed0:	0000a112 	andeq	sl, r0, r2, lsl r1
     ed4:	04000300 	streq	r0, [r0], #-768	@ 0xfffffd00
     ed8:	00000424 	andeq	r0, r0, r4, lsr #8
     edc:	00041017 	andeq	r1, r4, r7, lsl r0
     ee0:	01660500 	cmneq	r6, r0, lsl #10
     ee4:	0003e903 	andeq	lr, r3, r3, lsl #18
     ee8:	05381400 	ldreq	r1, [r8, #-1024]!	@ 0xfffffc00
     eec:	30090193 	mulcc	r9, r3, r1
     ef0:	16000005 	strne	r0, [r0], -r5
     ef4:	05005243 	streq	r5, [r0, #-579]	@ 0xfffffdbd
     ef8:	87110195 			@ <UNDEFINED> instruction: 0x87110195
     efc:	02000000 	andeq	r0, r0, #0
     f00:	80150023 	andshi	r0, r5, r3, lsr #32
     f04:	05000000 	streq	r0, [r0, #-0]
     f08:	87110196 			@ <UNDEFINED> instruction: 0x87110196
     f0c:	02000000 	andeq	r0, r0, #0
     f10:	8f150423 	svchi	0x00150423
     f14:	05000000 	streq	r0, [r0, #-0]
     f18:	87110197 			@ <UNDEFINED> instruction: 0x87110197
     f1c:	02000000 	andeq	r0, r0, #0
     f20:	43160823 	tstmi	r6, #2293760	@ 0x230000
     f24:	05005249 	streq	r5, [r0, #-585]	@ 0xfffffdb7
     f28:	87110198 			@ <UNDEFINED> instruction: 0x87110198
     f2c:	02000000 	andeq	r0, r0, #0
     f30:	26150c23 	ldrcs	r0, [r5], -r3, lsr #24
     f34:	05000001 	streq	r0, [r0, #-1]
     f38:	87110199 			@ <UNDEFINED> instruction: 0x87110199
     f3c:	02000000 	andeq	r0, r0, #0
     f40:	6d151023 	ldcvs	0, cr1, [r5, #-140]	@ 0xffffff74
     f44:	05000001 	streq	r0, [r0, #-1]
     f48:	8711019a 			@ <UNDEFINED> instruction: 0x8711019a
     f4c:	02000000 	andeq	r0, r0, #0
     f50:	1b151423 	blne	545fe4 <_Min_Stack_Size+0x545be4>
     f54:	05000000 	streq	r0, [r0, #-0]
     f58:	8711019b 			@ <UNDEFINED> instruction: 0x8711019b
     f5c:	02000000 	andeq	r0, r0, #0
     f60:	0f151823 	svceq	0x00151823
     f64:	05000002 	streq	r0, [r0, #-2]
     f68:	8711019c 			@ <UNDEFINED> instruction: 0x8711019c
     f6c:	02000000 	andeq	r0, r0, #0
     f70:	0b151c23 	bleq	548004 <_Min_Stack_Size+0x547c04>
     f74:	05000001 	streq	r0, [r0, #-1]
     f78:	8711019d 			@ <UNDEFINED> instruction: 0x8711019d
     f7c:	02000000 	andeq	r0, r0, #0
     f80:	9b152023 	blls	549014 <_Min_Stack_Size+0x548c14>
     f84:	05000000 	streq	r0, [r0, #-0]
     f88:	8711019e 			@ <UNDEFINED> instruction: 0x8711019e
     f8c:	02000000 	andeq	r0, r0, #0
     f90:	70152423 	andsvc	r2, r5, r3, lsr #8
     f94:	05000000 	streq	r0, [r0, #-0]
     f98:	8711019f 			@ <UNDEFINED> instruction: 0x8711019f
     f9c:	02000000 	andeq	r0, r0, #0
     fa0:	90152823 	andsls	r2, r5, r3, lsr #16
     fa4:	05000003 	streq	r0, [r0, #-3]
     fa8:	871101a0 	ldrhi	r0, [r1, -r0, lsr #3]
     fac:	02000000 	andeq	r0, r0, #0
     fb0:	a4152c23 	ldrge	r2, [r5], #-3107	@ 0xfffff3dd
     fb4:	05000002 	streq	r0, [r0, #-2]
     fb8:	871101a1 	ldrhi	r0, [r1, -r1, lsr #3]
     fbc:	02000000 	andeq	r0, r0, #0
     fc0:	43163023 	tstmi	r6, #35	@ 0x23
     fc4:	05005253 	streq	r5, [r0, #-595]	@ 0xfffffdad
     fc8:	871101a2 	ldrhi	r0, [r1, -r2, lsr #3]
     fcc:	02000000 	andeq	r0, r0, #0
     fd0:	17003423 	strne	r3, [r0, -r3, lsr #8]
     fd4:	0000014f 	andeq	r0, r0, pc, asr #2
     fd8:	0301a305 	movweq	sl, #4869	@ 0x1305
     fdc:	00000446 	andeq	r0, r0, r6, asr #8
     fe0:	37055414 	smladcc	r5, r4, r4, r5
     fe4:	06e80902 	strbteq	r0, [r8], r2, lsl #18
     fe8:	36150000 	ldrcc	r0, [r5], -r0
     fec:	05000006 	streq	r0, [r0, #-6]
     ff0:	6a110239 	bvs	4418dc <_Min_Stack_Size+0x4414dc>
     ff4:	02000000 	andeq	r0, r0, #0
     ff8:	28150023 	ldmdacs	r5, {r0, r1, r5}
     ffc:	05000008 	streq	r0, [r0, #-8]
    1000:	6a11023a 	bvs	4418f0 <_Min_Stack_Size+0x4414f0>
    1004:	02000000 	andeq	r0, r0, #0
    1008:	87150223 	ldrhi	r0, [r5, -r3, lsr #4]
    100c:	05000006 	streq	r0, [r0, #-6]
    1010:	6a11023b 	bvs	441904 <_Min_Stack_Size+0x441504>
    1014:	02000000 	andeq	r0, r0, #0
    1018:	32150423 	andscc	r0, r5, #587202560	@ 0x23000000
    101c:	05000008 	streq	r0, [r0, #-8]
    1020:	6a11023c 	bvs	441918 <_Min_Stack_Size+0x441518>
    1024:	02000000 	andeq	r0, r0, #0
    1028:	1f150623 	svcne	0x00150623
    102c:	05000007 	streq	r0, [r0, #-7]
    1030:	6a11023d 	bvs	44192c <_Min_Stack_Size+0x44152c>
    1034:	02000000 	andeq	r0, r0, #0
    1038:	3c150823 	ldccc	8, cr0, [r5], {35}	@ 0x23
    103c:	05000008 	streq	r0, [r0, #-8]
    1040:	6a11023e 	bvs	441940 <_Min_Stack_Size+0x441540>
    1044:	02000000 	andeq	r0, r0, #0
    1048:	4e150a23 	vnmlsmi.f32	s0, s10, s7
    104c:	05000007 	streq	r0, [r0, #-7]
    1050:	6a11023f 	bvs	441954 <_Min_Stack_Size+0x441554>
    1054:	02000000 	andeq	r0, r0, #0
    1058:	46150c23 	ldrmi	r0, [r5], -r3, lsr #24
    105c:	05000008 	streq	r0, [r0, #-8]
    1060:	6a110240 	bvs	441968 <_Min_Stack_Size+0x441568>
    1064:	02000000 	andeq	r0, r0, #0
    1068:	d5150e23 	ldrle	r0, [r5, #-3619]	@ 0xfffff1dd
    106c:	05000009 	streq	r0, [r0, #-9]
    1070:	6a110241 	bvs	44197c <_Min_Stack_Size+0x44157c>
    1074:	02000000 	andeq	r0, r0, #0
    1078:	50151023 	andspl	r1, r5, r3, lsr #32
    107c:	05000008 	streq	r0, [r0, #-8]
    1080:	6a110242 	bvs	441990 <_Min_Stack_Size+0x441590>
    1084:	02000000 	andeq	r0, r0, #0
    1088:	23151223 	tstcs	r5, #805306370	@ 0x30000002
    108c:	05000008 	streq	r0, [r0, #-8]
    1090:	6a110243 	bvs	4419a4 <_Min_Stack_Size+0x4415a4>
    1094:	02000000 	andeq	r0, r0, #0
    1098:	5a151423 	bpl	54612c <_Min_Stack_Size+0x545d2c>
    109c:	05000008 	streq	r0, [r0, #-8]
    10a0:	6a110244 	bvs	4419b8 <_Min_Stack_Size+0x4415b8>
    10a4:	02000000 	andeq	r0, r0, #0
    10a8:	c7151623 	ldrgt	r1, [r5, -r3, lsr #12]
    10ac:	05000008 	streq	r0, [r0, #-8]
    10b0:	6a110245 	bvs	4419cc <_Min_Stack_Size+0x4415cc>
    10b4:	02000000 	andeq	r0, r0, #0
    10b8:	64151823 	ldrvs	r1, [r5], #-2083	@ 0xfffff7dd
    10bc:	05000008 	streq	r0, [r0, #-8]
    10c0:	6a110246 	bvs	4419e0 <_Min_Stack_Size+0x4415e0>
    10c4:	02000000 	andeq	r0, r0, #0
    10c8:	43151a23 	tstmi	r5, #143360	@ 0x23000
    10cc:	05000009 	streq	r0, [r0, #-9]
    10d0:	6a110247 	bvs	4419f4 <_Min_Stack_Size+0x4415f4>
    10d4:	02000000 	andeq	r0, r0, #0
    10d8:	13151c23 	tstne	r5, #8960	@ 0x2300
    10dc:	05000003 	streq	r0, [r0, #-3]
    10e0:	f8110248 			@ <UNDEFINED> instruction: 0xf8110248
    10e4:	02000006 	andeq	r0, r0, #6
    10e8:	ef151e23 	svc	0x00151e23
    10ec:	05000008 	streq	r0, [r0, #-8]
    10f0:	6a110249 	bvs	441a1c <_Min_Stack_Size+0x44161c>
    10f4:	02000000 	andeq	r0, r0, #0
    10f8:	7a154023 	bvc	55118c <_Min_Stack_Size+0x550d8c>
    10fc:	0500000a 	streq	r0, [r0, #-10]
    1100:	6a11024a 	bvs	441a30 <_Min_Stack_Size+0x441630>
    1104:	02000000 	andeq	r0, r0, #0
    1108:	2a154223 	bcs	55199c <_Min_Stack_Size+0x55159c>
    110c:	05000005 	streq	r0, [r0, #-5]
    1110:	6a11024b 	bvs	441a44 <_Min_Stack_Size+0x441644>
    1114:	02000000 	andeq	r0, r0, #0
    1118:	7f154423 	svcvc	0x00154423
    111c:	05000008 	streq	r0, [r0, #-8]
    1120:	6a11024c 	bvs	441a58 <_Min_Stack_Size+0x441658>
    1124:	02000000 	andeq	r0, r0, #0
    1128:	46164623 	ldrmi	r4, [r6], -r3, lsr #12
    112c:	0500524e 	streq	r5, [r0, #-590]	@ 0xfffffdb2
    1130:	6a11024d 	bvs	441a6c <_Min_Stack_Size+0x44166c>
    1134:	02000000 	andeq	r0, r0, #0
    1138:	89154823 	ldmdbhi	r5, {r0, r1, r5, fp, lr}
    113c:	05000008 	streq	r0, [r0, #-8]
    1140:	6a11024e 	bvs	441a80 <_Min_Stack_Size+0x441680>
    1144:	02000000 	andeq	r0, r0, #0
    1148:	d2154a23 	andsle	r4, r5, #143360	@ 0x23000
    114c:	05000005 	streq	r0, [r0, #-5]
    1150:	6a11024f 	bvs	441a94 <_Min_Stack_Size+0x441694>
    1154:	02000000 	andeq	r0, r0, #0
    1158:	90154c23 	andsls	r4, r5, r3, lsr #24
    115c:	0500000a 	streq	r0, [r0, #-10]
    1160:	6a110250 	bvs	441aa8 <_Min_Stack_Size+0x4416a8>
    1164:	02000000 	andeq	r0, r0, #0
    1168:	0b154e23 	bleq	5549fc <_Min_Stack_Size+0x5545fc>
    116c:	0500000a 	streq	r0, [r0, #-10]
    1170:	6a110251 	bvs	441abc <_Min_Stack_Size+0x4416bc>
    1174:	02000000 	andeq	r0, r0, #0
    1178:	9a155023 	bls	55520c <_Min_Stack_Size+0x554e0c>
    117c:	0500000a 	streq	r0, [r0, #-10]
    1180:	6a110252 	bvs	441ad0 <_Min_Stack_Size+0x4416d0>
    1184:	02000000 	andeq	r0, r0, #0
    1188:	11005223 	tstne	r0, r3, lsr #4
    118c:	0000006a 	andeq	r0, r0, sl, rrx
    1190:	000006f8 	strdeq	r0, [r0], -r8
    1194:	0000a112 	andeq	sl, r0, r2, lsl r1
    1198:	04001000 	streq	r1, [r0], #-0
    119c:	000006e8 	andeq	r0, r0, r8, ror #13
    11a0:	0005c617 	andeq	ip, r5, r7, lsl r6
    11a4:	02530500 	subseq	r0, r3, #0, 10
    11a8:	00053d03 	andeq	r3, r5, r3, lsl #26
    11ac:	01040a00 	tsteq	r4, r0, lsl #20
    11b0:	074a0729 	strbeq	r0, [sl, -r9, lsr #14]
    11b4:	82180000 	andshi	r0, r8, #0
    11b8:	01000007 	tsteq	r0, r7
    11bc:	007b122a 	rsbseq	r1, fp, sl, lsr #4
    11c0:	0a040000 	beq	1011c8 <_Min_Stack_Size+0x100dc8>
    11c4:	00230216 	eoreq	r0, r3, r6, lsl r2
    11c8:	00096218 	andeq	r6, r9, r8, lsl r2
    11cc:	122b0100 	eorne	r0, fp, #0, 2
    11d0:	0000007b 	andeq	r0, r0, fp, ror r0
    11d4:	02110504 	andseq	r0, r1, #4, 10	@ 0x1000000
    11d8:	fa180023 	blx	60126c <_Min_Stack_Size+0x600e6c>
    11dc:	01000007 	tsteq	r0, r7
    11e0:	007b122c 	rsbseq	r1, fp, ip, lsr #4
    11e4:	01040000 	mrseq	r0, (UNDEF: 4)
    11e8:	00230210 	eoreq	r0, r3, r0, lsl r2
    11ec:	01041900 	tsteq	r4, r0, lsl #18
    11f0:	07650e27 	strbeq	r0, [r5, -r7, lsr #28]!
    11f4:	7e1a0000 	cdpvc	0, 1, cr0, cr10, cr0, {0}
    11f8:	01000007 	tsteq	r0, r7
    11fc:	007b1028 	rsbseq	r1, fp, r8, lsr #32
    1200:	0a1b0000 	beq	6c1208 <_Min_Stack_Size+0x6c0e08>
    1204:	00000007 	andeq	r0, r0, r7
    1208:	00074a04 	andeq	r4, r7, r4, lsl #20
    120c:	01040a00 	tsteq	r4, r0, lsl #20
    1210:	07aa0732 			@ <UNDEFINED> instruction: 0x07aa0732
    1214:	4a180000 	bmi	60121c <_Min_Stack_Size+0x600e1c>
    1218:	0100000a 	tsteq	r0, sl
    121c:	007b1233 	rsbseq	r1, fp, r3, lsr r2
    1220:	0a040000 	beq	101228 <_Min_Stack_Size+0x100e28>
    1224:	00230216 	eoreq	r0, r3, r6, lsl r2
    1228:	0007db18 	andeq	sp, r7, r8, lsl fp
    122c:	12340100 	eorsne	r0, r4, #0, 2
    1230:	0000007b 	andeq	r0, r0, fp, ror r0
    1234:	02110504 	andseq	r0, r1, #4, 10	@ 0x1000000
    1238:	9e180023 	cdpls	0, 1, cr0, cr8, cr3, {1}
    123c:	01000009 	tsteq	r0, r9
    1240:	007b1235 	rsbseq	r1, fp, r5, lsr r2
    1244:	01040000 	mrseq	r0, (UNDEF: 4)
    1248:	00230210 	eoreq	r0, r3, r0, lsl r2
    124c:	01041900 	tsteq	r4, r0, lsl #18
    1250:	07c50e30 			@ <UNDEFINED> instruction: 0x07c50e30
    1254:	461a0000 	ldrmi	r0, [sl], -r0
    1258:	0100000a 	tsteq	r0, sl
    125c:	007b1031 	rsbseq	r1, fp, r1, lsr r0
    1260:	6a1b0000 	bvs	6c1268 <_Min_Stack_Size+0x6c0e68>
    1264:	00000007 	andeq	r0, r0, r7
    1268:	0007aa04 	andeq	sl, r7, r4, lsl #20
    126c:	01100a00 	tsteq	r0, r0, lsl #20
    1270:	08020925 	stmdaeq	r2, {r0, r2, r5, r8, fp}
    1274:	350b0000 	strcc	r0, [fp, #-0]
    1278:	0100000a 	tsteq	r0, sl
    127c:	00871726 	addeq	r1, r7, r6, lsr #14
    1280:	23020000 	movwcs	r0, #8192	@ 0x2000
    1284:	07651c00 	strbeq	r1, [r5, -r0, lsl #24]!
    1288:	23020000 	movwcs	r0, #8192	@ 0x2000
    128c:	09560b04 	ldmdbeq	r6, {r2, r8, r9, fp}^
    1290:	2f010000 	svccs	0x00010000
    1294:	00008717 	andeq	r8, r0, r7, lsl r7
    1298:	08230200 	stmdaeq	r3!, {r9}
    129c:	0007c51c 	andeq	ip, r7, ip, lsl r5
    12a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    12a4:	06960300 	ldreq	r0, [r6], r0, lsl #6
    12a8:	38010000 	stmdacc	r1, {}	@ <UNPREDICTABLE>
    12ac:	0007ca02 	andeq	ip, r7, r2, lsl #20
    12b0:	00a81100 	adceq	r1, r8, r0, lsl #2
    12b4:	081e0000 	ldmdaeq	lr, {}	@ <UNPREDICTABLE>
    12b8:	a1120000 	tstge	r2, r0
    12bc:	07000000 	streq	r0, [r0, -r0]
    12c0:	09ab1d00 	stmibeq	fp!, {r8, sl, fp, ip}
    12c4:	3a010000 	bcc	412cc <_Min_Stack_Size+0x40ecc>
    12c8:	00080e0a 	andeq	r0, r8, sl, lsl #28
    12cc:	03050100 	movweq	r0, #20736	@ 0x5100
    12d0:	20000048 	andcs	r0, r0, r8, asr #32
    12d4:	0006521d 	andeq	r5, r6, sp, lsl r2
    12d8:	0a3b0100 	beq	ec16e0 <_Min_Stack_Size+0xec12e0>
    12dc:	0000080e 	andeq	r0, r0, lr, lsl #16
    12e0:	28030501 	stmdacs	r3, {r0, r8, sl}
    12e4:	1e200000 	cdpne	0, 2, cr0, cr0, cr0, {0}
    12e8:	0000048f 	andeq	r0, r0, pc, lsl #9
    12ec:	1b163d01 	blne	5906f8 <_Min_Stack_Size+0x5902f8>
    12f0:	05000001 	streq	r0, [r0, #-1]
    12f4:	00006e03 	andeq	r6, r0, r3, lsl #28
    12f8:	065d1e20 	ldrbeq	r1, [sp], -r0, lsr #28
    12fc:	69010000 	stmdbvs	r1, {}	@ <UNPREDICTABLE>
    1300:	00086817 	andeq	r6, r8, r7, lsl r8
    1304:	68030500 	stmdavs	r3, {r8, sl}
    1308:	07200000 	streq	r0, [r0, -r0]!
    130c:	00005204 	andeq	r5, r0, r4, lsl #4
    1310:	05201e00 	streq	r1, [r0, #-3584]!	@ 0xfffff200
    1314:	6a010000 	bvs	4131c <_Min_Stack_Size+0x40f1c>
    1318:	00005e11 	andeq	r5, r0, r1, lsl lr
    131c:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    1320:	1e200000 	cdpne	0, 2, cr0, cr0, cr0, {0}
    1324:	00000628 	andeq	r0, r0, r8, lsr #12
    1328:	41108001 	tstmi	r0, r1
    132c:	05000000 	streq	r0, [r0, #-0]
    1330:	00007803 	andeq	r7, r0, r3, lsl #16
    1334:	04d01e20 	ldrbeq	r1, [r0], #3616	@ 0xe20
    1338:	c8010000 	stmdagt	r1, {}	@ <UNPREDICTABLE>
    133c:	00005e11 	andeq	r5, r0, r1, lsl lr
    1340:	00030500 	andeq	r0, r3, r0, lsl #10
    1344:	14200000 	strtne	r0, [r0], #-0
    1348:	01680104 	cmneq	r8, r4, lsl #2
    134c:	0008e805 	andeq	lr, r8, r5, lsl #16
    1350:	0a4a1f00 	beq	1288f58 <_Min_Stack_Size+0x1288b58>
    1354:	69010000 	stmdbvs	r1, {}	@ <UNPREDICTABLE>
    1358:	007b1001 	rsbseq	r1, fp, r1
    135c:	0a040000 	beq	101364 <_Min_Stack_Size+0x100f64>
    1360:	00230216 	eoreq	r0, r3, r6, lsl r2
    1364:	0007db1f 	andeq	sp, r7, pc, lsl fp
    1368:	016a0100 	cmneq	sl, r0, lsl #2
    136c:	00007b10 	andeq	r7, r0, r0, lsl fp
    1370:	11050400 	tstne	r5, r0, lsl #8
    1374:	1f002302 	svcne	0x00002302
    1378:	0000099e 	muleq	r0, lr, r9
    137c:	10016b01 	andne	r6, r1, r1, lsl #22
    1380:	0000007b 	andeq	r0, r0, fp, ror r0
    1384:	02100104 	andseq	r0, r0, #4, 2
    1388:	20000023 	andcs	r0, r0, r3, lsr #32
    138c:	01660104 	cmneq	r6, r4, lsl #2
    1390:	0009050c 	andeq	r0, r9, ip, lsl #10
    1394:	05242100 	streq	r2, [r4, #-256]!	@ 0xffffff00
    1398:	67010000 	strvs	r0, [r1, -r0]
    139c:	007b0e01 	rsbseq	r0, fp, r1, lsl #28
    13a0:	a41b0000 	ldrge	r0, [fp], #-0
    13a4:	00000008 	andeq	r0, r0, r8
    13a8:	0008e804 	andeq	lr, r8, r4, lsl #16
    13ac:	01081400 	tsteq	r8, r0, lsl #8
    13b0:	2d090164 	stfcss	f0, [r9, #-400]	@ 0xfffffe70
    13b4:	15000009 	strne	r0, [r0, #-9]
    13b8:	0000095d 	andeq	r0, r0, sp, asr r9
    13bc:	15016501 	strne	r6, [r1, #-1281]	@ 0xfffffaff
    13c0:	00000087 	andeq	r0, r0, r7, lsl #1
    13c4:	1c002302 	stcne	3, cr2, [r0], {2}
    13c8:	00000905 	andeq	r0, r0, r5, lsl #18
    13cc:	00042302 	andeq	r2, r4, r2, lsl #6
    13d0:	00047517 	andeq	r7, r4, r7, lsl r5
    13d4:	016e0100 	cmneq	lr, r0, lsl #2
    13d8:	00090a02 	andeq	r0, r9, r2, lsl #20
    13dc:	ea012200 	b	49be4 <_Min_Stack_Size+0x497e4>
    13e0:	03000005 	movweq	r0, #5
    13e4:	0101063d 	tsteq	r1, sp, lsr r6
    13e8:	00000959 	andeq	r0, r0, r9, asr r9
    13ec:	00005e09 	andeq	r5, r0, r9, lsl #28
    13f0:	09590900 	ldmdbeq	r9, {r8, fp}^
    13f4:	66090000 	strvs	r0, [r9], -r0
    13f8:	00000009 	andeq	r0, r0, r9
    13fc:	095f0407 	ldmdbeq	pc, {r0, r1, r2, sl}^	@ <UNPREDICTABLE>
    1400:	04070000 	streq	r0, [r7], #-0
    1404:	00000965 	andeq	r0, r0, r5, ror #18
    1408:	5e040723 	cdppl	7, 0, cr0, cr4, cr3, {1}
    140c:	24000000 	strcs	r0, [r0], #-0
    1410:	0006d701 	andeq	sp, r6, r1, lsl #14
    1414:	017e0100 	cmneq	lr, r0, lsl #2
    1418:	009a0105 	addseq	r0, sl, r5, lsl #2
    141c:	08440000 	stmdaeq	r4, {}^	@ <UNPREDICTABLE>
    1420:	08a00800 	stmiaeq	r0!, {fp}
    1424:	06330800 	ldrteq	r0, [r3], -r0, lsl #16
    1428:	24010000 	strcs	r0, [r1], #-0
    142c:	2500000a 	strcs	r0, [r0, #-10]
    1430:	00786469 	rsbseq	r6, r8, r9, ror #8
    1434:	1a017e01 	bne	60c40 <_Min_Stack_Size+0x60840>
    1438:	00000041 	andeq	r0, r0, r1, asr #32
    143c:	00000657 	andeq	r0, r0, r7, asr r6
    1440:	00000653 	andeq	r0, r0, r3, asr r6
    1444:	66756225 	ldrbtvs	r6, [r5], -r5, lsr #4
    1448:	017e0100 	cmneq	lr, r0, lsl #2
    144c:	00096629 	andeq	r6, r9, r9, lsr #12
    1450:	00067e00 	andeq	r7, r6, r0, lsl #28
    1454:	00067800 	andeq	r7, r6, r0, lsl #16
    1458:	05fc2600 	ldrbeq	r2, [ip, #1536]!	@ 0x600
    145c:	7f010000 	svcvc	0x00010000
    1460:	0a241001 	beq	90546c <_Min_Stack_Size+0x90506c>
    1464:	06b00000 	ldrteq	r0, [r0], r0
    1468:	06ac0000 	strteq	r0, [ip], r0
    146c:	73270000 			@ <UNDEFINED> instruction: 0x73270000
    1470:	8001007a 	andhi	r0, r1, sl, ror r0
    1474:	009a0701 	addseq	r0, sl, r1, lsl #14
    1478:	06da0000 	ldrbeq	r0, [sl], r0
    147c:	06d80000 	ldrbeq	r0, [r8], r0
    1480:	6e270000 	cdpvs	0, 2, cr0, cr7, cr0, {0}
    1484:	01820100 	orreq	r0, r2, r0, lsl #2
    1488:	00009a07 	andeq	r9, r0, r7, lsl #20
    148c:	0006f300 	andeq	pc, r6, r0, lsl #6
    1490:	0006ed00 	andeq	lr, r6, r0, lsl #26
    1494:	6e692700 	cdpvs	7, 6, cr2, cr9, cr0, {0}
    1498:	01830100 	orreq	r0, r3, r0, lsl #2
    149c:	000a2a16 	andeq	r2, sl, r6, lsl sl
    14a0:	00072a00 	andeq	r2, r7, r0, lsl #20
    14a4:	00072400 	andeq	r2, r7, r0, lsl #8
    14a8:	086c2800 	stmdaeq	ip!, {fp, sp}^
    14ac:	087e0800 	ldmdaeq	lr!, {fp}^
    14b0:	69270800 	stmdbvs	r7!, {fp}
    14b4:	01840100 	orreq	r0, r4, r0, lsl #2
    14b8:	00009a0b 	andeq	r9, r0, fp, lsl #20
    14bc:	00075700 	andeq	r5, r7, r0, lsl #14
    14c0:	00075500 	andeq	r5, r7, r0, lsl #10
    14c4:	07000000 	streq	r0, [r0, -r0]
    14c8:	00092d04 	andeq	r2, r9, r4, lsl #26
    14cc:	87040700 	strhi	r0, [r4, -r0, lsl #14]
    14d0:	29000000 	stmdbcs	r0, {}	@ <UNPREDICTABLE>
    14d4:	00058201 	andeq	r8, r5, r1, lsl #4
    14d8:	01700100 	cmneq	r0, r0, lsl #2
    14dc:	07b80106 	ldreq	r0, [r8, r6, lsl #2]!
    14e0:	080c0800 	stmdaeq	ip, {fp}
    14e4:	076b0800 	strbeq	r0, [fp, -r0, lsl #16]!
    14e8:	ec010000 	stc	0, cr0, [r1], {-0}
    14ec:	2500000a 	strcs	r0, [r0, #-10]
    14f0:	00786469 	rsbseq	r6, r8, r9, ror #8
    14f4:	1c017001 	stcne	0, cr7, [r1], {1}
    14f8:	00000041 	andeq	r0, r0, r1, asr #32
    14fc:	00000791 	muleq	r0, r1, r7
    1500:	0000078b 	andeq	r0, r0, fp, lsl #15
    1504:	6675622a 	ldrbtvs	r6, [r5], -sl, lsr #4
    1508:	01700100 	cmneq	r0, r0, lsl #2
    150c:	000aec31 	andeq	lr, sl, r1, lsr ip
    1510:	2b510100 	blcs	1441918 <_Min_Stack_Size+0x1441518>
    1514:	00000fe2 	andeq	r0, r0, r2, ror #31
    1518:	3f017001 	svccc	0x00017001
    151c:	0000005e 	andeq	r0, r0, lr, asr r0
    1520:	fc265201 	stc2	2, cr5, [r6], #-4
    1524:	01000005 	tsteq	r0, r5
    1528:	24100171 	ldrcs	r0, [r0], #-369	@ 0xfffffe8f
    152c:	bf00000a 	svclt	0x0000000a
    1530:	bd000007 	stclt	0, cr0, [r0, #-28]	@ 0xffffffe4
    1534:	27000007 	strcs	r0, [r0, -r7]
    1538:	0100324e 	tsteq	r0, lr, asr #4
    153c:	5e0c0172 	mcrpl	1, 0, r0, cr12, cr2, {3}
    1540:	d4000000 	strle	r0, [r0], #-0
    1544:	d2000007 	andle	r0, r0, #7
    1548:	26000007 	strcs	r0, [r0], -r7
    154c:	0000041f 	andeq	r0, r0, pc, lsl r4
    1550:	0d017401 	cfstrseq	mvf7, [r1, #-4]
    1554:	00000966 	andeq	r0, r0, r6, ror #18
    1558:	000007e9 	andeq	r0, r0, r9, ror #15
    155c:	000007e7 	andeq	r0, r0, r7, ror #15
    1560:	74756f27 	ldrbtvc	r6, [r5], #-3879	@ 0xfffff0d9
    1564:	01750100 	cmneq	r5, r0, lsl #2
    1568:	000a2a16 	andeq	r2, sl, r6, lsl sl
    156c:	00080200 	andeq	r0, r8, r0, lsl #4
    1570:	0007fc00 	andeq	pc, r7, r0, lsl #24
    1574:	00e82c00 	rsceq	r2, r8, r0, lsl #24
    1578:	69270000 	stmdbvs	r7!, {}	@ <UNPREDICTABLE>
    157c:	01760100 	cmneq	r6, r0, lsl #2
    1580:	00005e10 	andeq	r5, r0, r0, lsl lr
    1584:	00083d00 	andeq	r3, r8, r0, lsl #26
    1588:	00083900 	andeq	r3, r8, r0, lsl #18
    158c:	07000000 	streq	r0, [r0, -r0]
    1590:	00006f04 	andeq	r6, r0, r4, lsl #30
    1594:	d8012d00 	stmdale	r1, {r8, sl, fp, sp}
    1598:	01000005 	tsteq	r0, r5
    159c:	7006012e 	andvc	r0, r6, lr, lsr #2
    15a0:	b8080006 	stmdalt	r8, {r1, r2}
    15a4:	5d080007 	stcpl	0, cr0, [r8, #-28]	@ 0xffffffe4
    15a8:	01000008 	tsteq	r0, r8
    15ac:	00000bdd 	ldrdeq	r0, [r0], -sp
    15b0:	0000b02e 	andeq	fp, r0, lr, lsr #32
    15b4:	000b4b00 	andeq	r4, fp, r0, lsl #22
    15b8:	09212600 	stmdbeq	r1!, {r9, sl, sp}
    15bc:	31010000 	mrscc	r0, (UNDEF: 1)
    15c0:	00410f01 	subeq	r0, r1, r1, lsl #30
    15c4:	087f0000 	ldmdaeq	pc!, {}^	@ <UNPREDICTABLE>
    15c8:	087d0000 	ldmdaeq	sp!, {}^	@ <UNPREDICTABLE>
    15cc:	a22f0000 	eorge	r0, pc, #0
    15d0:	3b080006 	blcc	2015f0 <_Min_Stack_Size+0x2011f0>
    15d4:	3000000b 	andcc	r0, r0, fp
    15d8:	76025001 	strvc	r5, [r2], -r1
    15dc:	c2310000 	eorsgt	r0, r1, #0
    15e0:	30080006 	andcc	r0, r8, r6
    15e4:	76055001 	strvc	r5, [r5], -r1
    15e8:	21800800 	orrcs	r0, r0, r0, lsl #16
    15ec:	c82e0000 	stmdagt	lr!, {}	@ <UNPREDICTABLE>
    15f0:	68000000 	stmdavs	r0, {}	@ <UNPREDICTABLE>
    15f4:	2700000b 	strcs	r0, [r0, -fp]
    15f8:	4d010069 	stcmi	0, cr0, [r1, #-420]	@ 0xfffffe5c
    15fc:	00411101 	subeq	r1, r1, r1, lsl #2
    1600:	08960000 	ldmeq	r6, {}	@ <UNPREDICTABLE>
    1604:	08920000 	ldmeq	r2, {}	@ <UNPREDICTABLE>
    1608:	32000000 	andcc	r0, r0, #0
    160c:	080006ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, sl}
    1610:	00001232 	andeq	r1, r0, r2, lsr r2
    1614:	00070032 	andeq	r0, r7, r2, lsr r0
    1618:	00124408 	andseq	r4, r2, r8, lsl #8
    161c:	07463300 	strbeq	r3, [r6, -r0, lsl #6]
    1620:	0c6c0800 	stcleq	8, cr0, [ip], #-0
    1624:	0ba20000 	bleq	fe88162c <BootRAM+0xd7f1dcd>
    1628:	01300000 	teqeq	r0, r0
    162c:	00740250 	rsbseq	r0, r4, r0, asr r2
    1630:	02510130 	subseq	r0, r1, #48, 2
    1634:	01300074 	teqeq	r0, r4, ror r0
    1638:	30380152 	eorscc	r0, r8, r2, asr r1
    163c:	03055301 	movweq	r5, #21249	@ 0x5301
    1640:	080008a1 	stmdaeq	r0, {r0, r5, r7, fp}
    1644:	07523300 	ldrbeq	r3, [r2, -r0, lsl #6]
    1648:	0c6c0800 	stcleq	8, cr0, [ip], #-0
    164c:	0bca0000 	bleq	ff281654 <BootRAM+0xe1f1df5>
    1650:	01300000 	teqeq	r0, r0
    1654:	80090250 	andhi	r0, r9, r0, asr r2
    1658:	02510130 	subseq	r0, r1, #48, 2
    165c:	01300074 	teqeq	r0, r4, ror r0
    1660:	30380152 	eorscc	r0, r8, r2, asr r1
    1664:	03055301 	movweq	r5, #21249	@ 0x5301
    1668:	0800080d 	stmdaeq	r0, {r0, r2, r3, fp}
    166c:	07583200 	ldrbeq	r3, [r8, -r0, lsl #4]
    1670:	124d0800 	subne	r0, sp, #0, 16
    1674:	66320000 	ldrtvs	r0, [r2], -r0
    1678:	44080007 	strmi	r0, [r8], #-7
    167c:	00000012 	andeq	r0, r0, r2, lsl r0
    1680:	09b50134 	ldmibeq	r5!, {r2, r4, r5, r8}
    1684:	f9010000 			@ <UNDEFINED> instruction: 0xf9010000
    1688:	052c0106 	streq	r0, [ip, #-262]!	@ 0xfffffefa
    168c:	06700800 	ldrbteq	r0, [r0], -r0, lsl #16
    1690:	08b90800 	ldmeq	r9!, {fp}
    1694:	6c010000 	stcvs	0, cr0, [r1], {-0}
    1698:	3500000c 	strcc	r0, [r0, #-12]
    169c:	00000921 	andeq	r0, r0, r1, lsr #18
    16a0:	4121f901 	msrmi	CPSR_c, r1, lsl #18
    16a4:	dd000000 	stcle	0, cr0, [r0, #-0]
    16a8:	d9000008 	stmdble	r0, {r3}
    16ac:	35000008 	strcc	r0, [r0, #-8]
    16b0:	00000a1b 	andeq	r0, r0, fp, lsl sl
    16b4:	4130f901 	teqmi	r0, r1, lsl #18	@ <UNPREDICTABLE>
    16b8:	03000000 	movweq	r0, #0
    16bc:	fb000009 	blx	16ea <_Min_Stack_Size+0x12ea>
    16c0:	36000008 	strcc	r0, [r0], -r8
    16c4:	00000fe2 	andeq	r0, r0, r2, ror #31
    16c8:	5e42f901 	vmlapl.f16	s31, s4, s2	@ <UNPREDICTABLE>
    16cc:	01000000 	mrseq	r0, (UNDEF: 0)
    16d0:	04cb3552 	strbeq	r3, [fp], #1362	@ 0x552
    16d4:	f9010000 			@ <UNDEFINED> instruction: 0xf9010000
    16d8:	0000a851 	andeq	sl, r0, r1, asr r8
    16dc:	00094100 	andeq	r4, r9, r0, lsl #2
    16e0:	00093d00 	andeq	r3, r9, r0, lsl #26
    16e4:	0a2e3700 	beq	b8f2ec <_Min_Stack_Size+0xb8eeec>
    16e8:	fb010000 	blx	416f2 <_Min_Stack_Size+0x412f2>
    16ec:	0000410b 	andeq	r4, r0, fp, lsl #2
    16f0:	00096700 	andeq	r6, r9, r0, lsl #14
    16f4:	00095f00 	andeq	r5, r9, r0, lsl #30
    16f8:	75622700 	strbvc	r2, [r2, #-1792]!	@ 0xfffff900
    16fc:	01010066 	tsteq	r1, r6, rrx
    1700:	005e0c01 	subseq	r0, lr, r1, lsl #24
    1704:	09c70000 	stmibeq	r7, {}^	@ <UNPREDICTABLE>
    1708:	09b10000 	ldmibeq	r1!, {}	@ <UNPREDICTABLE>
    170c:	34000000 	strcc	r0, [r0], #-0
    1710:	00089f01 	andeq	r9, r8, r1, lsl #30
    1714:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    1718:	00042801 	andeq	r2, r4, r1, lsl #16
    171c:	00052c08 	andeq	r2, r5, r8, lsl #24
    1720:	000a7c08 	andeq	r7, sl, r8, lsl #24
    1724:	0d000100 	stfeqs	f0, [r0, #-0]
    1728:	21350000 	teqcs	r5, r0
    172c:	01000009 	tsteq	r0, r9
    1730:	00411ac9 	subeq	r1, r1, r9, asr #21
    1734:	0aa00000 	beq	fe80173c <BootRAM+0xd771edd>
    1738:	0a9c0000 	beq	fe701740 <BootRAM+0xd671ee1>
    173c:	1b350000 	blne	d41744 <_Min_Stack_Size+0xd41344>
    1740:	0100000a 	tsteq	r0, sl
    1744:	004129c9 	subeq	r2, r1, r9, asr #19
    1748:	0ac60000 	beq	ff181750 <BootRAM+0xe0f1ef1>
    174c:	0abe0000 	beq	fef81754 <BootRAM+0xdef1ef5>
    1750:	e2350000 	eors	r0, r5, #0
    1754:	0100000f 	tsteq	r0, pc
    1758:	005e3bc9 	subseq	r3, lr, r9, asr #23
    175c:	0b060000 	bleq	181764 <_Min_Stack_Size+0x181364>
    1760:	0b000000 	bleq	1768 <_Min_Stack_Size+0x1368>
    1764:	cb350000 	blgt	d4176c <_Min_Stack_Size+0xd4136c>
    1768:	01000004 	tsteq	r0, r4
    176c:	00a84ac9 	adceq	r4, r8, r9, asr #21
    1770:	0b360000 	bleq	d81778 <_Min_Stack_Size+0xd81378>
    1774:	0b320000 	bleq	c8177c <_Min_Stack_Size+0xc8137c>
    1778:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
    177c:	0100000a 	tsteq	r0, sl
    1780:	00410bcb 	subeq	r0, r1, fp, asr #23
    1784:	0b580000 	bleq	160178c <_Min_Stack_Size+0x160138c>
    1788:	0b540000 	bleq	1501790 <_Min_Stack_Size+0x1501390>
    178c:	62380000 	eorsvs	r0, r8, #0
    1790:	01006675 	tsteq	r0, r5, ror r6
    1794:	005e0cd4 	ldrsbeq	r0, [lr], #-196	@ 0xffffff3c
    1798:	0b8f0000 	bleq	fe3c17a0 <BootRAM+0xd331f41>
    179c:	0b810000 	bleq	fe0417a4 <BootRAM+0xcfb1f45>
    17a0:	39000000 	stmdbcc	r0, {}	@ <UNPREDICTABLE>
    17a4:	00000d5f 	andeq	r0, r0, pc, asr sp
    17a8:	010d8201 	tsteq	sp, r1, lsl #4
    17ac:	080008a0 	stmdaeq	r0, {r5, r7, fp}
    17b0:	08000a04 	stmdaeq	r0, {r2, r9, fp}
    17b4:	00000c16 	andeq	r0, r0, r6, lsl ip
    17b8:	00101e01 	andseq	r1, r0, r1, lsl #28
    17bc:	09213500 	stmdbeq	r1!, {r8, sl, ip, sp}
    17c0:	82010000 	andhi	r0, r1, #0
    17c4:	0000411d 	andeq	r4, r0, sp, lsl r1
    17c8:	000c7600 	andeq	r7, ip, r0, lsl #12
    17cc:	000c7200 	andeq	r7, ip, r0, lsl #4
    17d0:	04a71e00 	strteq	r1, [r7], #3584	@ 0xe00
    17d4:	83010000 	movwhi	r0, #4096	@ 0x1000
    17d8:	00005e13 	andeq	r5, r0, r3, lsl lr
    17dc:	76030500 	strvc	r0, [r3], -r0, lsl #10
    17e0:	37200000 	strcc	r0, [r0, -r0]!
    17e4:	00000a53 	andeq	r0, r0, r3, asr sl
    17e8:	5e0c8401 	cdppl	4, 0, cr8, cr12, cr1, {0}
    17ec:	9b000000 	blls	17f4 <_Min_Stack_Size+0x13f4>
    17f0:	9700000c 	strls	r0, [r0, -ip]
    17f4:	3a00000c 	bcc	182c <_Min_Stack_Size+0x142c>
    17f8:	00000209 	andeq	r0, r0, r9, lsl #4
    17fc:	410b8501 	tstmi	fp, r1, lsl #10
    1800:	38000000 	stmdacc	r0, {}	@ <UNPREDICTABLE>
    1804:	00716572 	rsbseq	r6, r1, r2, ror r5
    1808:	410b9501 	tstmi	fp, r1, lsl #10
    180c:	c7000000 	strgt	r0, [r0, -r0]
    1810:	bb00000c 	bllt	1848 <_Min_Stack_Size+0x1448>
    1814:	2e00000c 	cdpcs	0, 0, cr0, cr0, cr12, {0}
    1818:	00000138 	andeq	r0, r0, r8, lsr r1
    181c:	00000ebf 			@ <UNDEFINED> instruction: 0x00000ebf
    1820:	000ade1e 	andeq	sp, sl, lr, lsl lr
    1824:	0bac0100 	bleq	feb01c2c <BootRAM+0xda723cd>
    1828:	0000101e 	andeq	r1, r0, lr, lsl r0
    182c:	1e6c9102 	lgnnee	f1, f2
    1830:	00000fe2 	andeq	r0, r0, r2, ror #31
    1834:	5e0ead01 	cdppl	13, 0, cr10, cr14, cr1, {0}
    1838:	02000000 	andeq	r0, r0, #0
    183c:	423b6a91 	eorsmi	r6, fp, #593920	@ 0x91000
    1840:	58080009 	stmdapl	r8, {r0, r3}
    1844:	dd080009 	stcle	0, cr0, [r8, #-36]	@ 0xffffffdc
    1848:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    184c:	00000ade 	ldrdeq	r0, [r0], -lr
    1850:	5f179d01 	svcpl	0x00179d01
    1854:	02000009 	andeq	r0, r0, #9
    1858:	e21e6c91 	ands	r6, lr, #37120	@ 0x9100
    185c:	0100000f 	tsteq	r0, pc
    1860:	005e149e 			@ <UNDEFINED> instruction: 0x005e149e
    1864:	91020000 	mrsls	r0, (UNDEF: 2)
    1868:	09583c6a 	ldmdbeq	r8, {r1, r3, r5, r6, sl, fp, ip, sp}^
    186c:	093a0800 	ldmdbeq	sl!, {fp}
    1870:	01300000 	teqeq	r0, r0
    1874:	6c910251 	lfmvs	f0, 4, [r1], {81}	@ 0x51
    1878:	02520130 	subseq	r0, r2, #48, 2
    187c:	00006a91 	muleq	r0, r1, sl
    1880:	0012823d 	andseq	r8, r2, sp, lsr r2
    1884:	0008fa00 	andeq	pc, r8, r0, lsl #20
    1888:	08fa0108 	ldmeq	sl!, {r3, r8}^
    188c:	08fe0800 	ldmeq	lr!, {fp}^
    1890:	a5010800 	strge	r0, [r1, #-2048]	@ 0xfffff800
    1894:	000e1e0b 	andeq	r1, lr, fp, lsl #28
    1898:	12a83e00 	adcne	r3, r8, #0, 28
    189c:	0d2c0000 	stceq	0, cr0, [ip, #-0]
    18a0:	0d2a0000 	stceq	0, cr0, [sl, #-0]
    18a4:	9c3e0000 	ldcls	0, cr0, [lr], #-0
    18a8:	42000012 	andmi	r0, r0, #18
    18ac:	4000000d 	andmi	r0, r0, sp
    18b0:	3e00000d 	cdpcc	0, 0, cr0, cr0, cr13, {0}
    18b4:	00001290 	muleq	r0, r0, r2
    18b8:	00000d5c 	andeq	r0, r0, ip, asr sp
    18bc:	00000d5a 	andeq	r0, r0, sl, asr sp
    18c0:	10203f00 	eorne	r3, r0, r0, lsl #30
    18c4:	096a0000 	stmdbeq	sl!, {}^	@ <UNPREDICTABLE>
    18c8:	58010800 	stmdapl	r1, {fp}
    18cc:	01000001 	tsteq	r0, r1
    18d0:	0e5e05b0 	mrceq	5, 2, r0, cr14, cr0, {5}
    18d4:	3a3e0000 	bcc	f818dc <_Min_Stack_Size+0xf814dc>
    18d8:	72000010 	andvc	r0, r0, #16
    18dc:	7000000d 	andvc	r0, r0, sp
    18e0:	3e00000d 	cdpcc	0, 0, cr0, cr0, cr13, {0}
    18e4:	0000102e 	andeq	r1, r0, lr, lsr #32
    18e8:	00000d88 	andeq	r0, r0, r8, lsl #27
    18ec:	00000d86 	andeq	r0, r0, r6, lsl #27
    18f0:	00097a3c 	andeq	r7, r9, ip, lsr sl
    18f4:	00104708 	andseq	r4, r0, r8, lsl #14
    18f8:	50013000 	andpl	r3, r1, r0
    18fc:	00800902 	addeq	r0, r0, r2, lsl #18
    1900:	12823d00 	addne	r3, r2, #0, 26
    1904:	097c0000 	ldmdbeq	ip!, {}^	@ <UNPREDICTABLE>
    1908:	7c010800 	stcvc	8, cr0, [r1], {-0}
    190c:	82080009 	andhi	r0, r8, #9
    1910:	01080009 	tsteq	r8, r9
    1914:	0e9f0ba8 	vfnmseq.f64	d0, d31, d24
    1918:	a83e0000 	ldmdage	lr!, {}	@ <UNPREDICTABLE>
    191c:	9e000012 	mcrls	0, 0, r0, cr0, cr2, {0}
    1920:	9c00000d 	stcls	0, cr0, [r0], {13}
    1924:	3e00000d 	cdpcc	0, 0, cr0, cr0, cr13, {0}
    1928:	0000129c 	muleq	r0, ip, r2
    192c:	00000db4 			@ <UNDEFINED> instruction: 0x00000db4
    1930:	00000db2 			@ <UNDEFINED> instruction: 0x00000db2
    1934:	0012903e 	andseq	r9, r2, lr, lsr r0
    1938:	000dce00 	andeq	ip, sp, r0, lsl #28
    193c:	000dcc00 	andeq	ip, sp, r0, lsl #24
    1940:	983c0000 	ldmdals	ip!, {}	@ <UNPREDICTABLE>
    1944:	dd080009 	stcle	0, cr0, [r8, #-36]	@ 0xffffffdc
    1948:	30000011 	andcc	r0, r0, r1, lsl r0
    194c:	03055001 	movweq	r5, #20481	@ 0x5001
    1950:	2000006e 	andcs	r0, r0, lr, rrx
    1954:	02510130 	subseq	r0, r1, #48, 2
    1958:	01306c91 	teqeq	r0, r1	@ <illegal shifter operand>
    195c:	6a910252 	bvs	fe4422ac <BootRAM+0xd3b2a4d>
    1960:	203b0000 	eorscs	r0, fp, r0
    1964:	42080009 	andmi	r0, r8, #9
    1968:	36080009 	strcc	r0, [r8], -r9
    196c:	3700000f 	strcc	r0, [r0, -pc]
    1970:	00000649 	andeq	r0, r0, r9, asr #12
    1974:	4111b501 	tstmi	r1, r1, lsl #10
    1978:	e4000000 	str	r0, [r0], #-0
    197c:	e200000d 	and	r0, r0, #13
    1980:	4000000d 	andmi	r0, r0, sp
    1984:	00001282 	andeq	r1, r0, r2, lsl #5
    1988:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
    198c:	00018801 	andeq	r8, r1, r1, lsl #16
    1990:	09b60100 	ldmibeq	r6!, {r8}
    1994:	0012a83e 	andseq	sl, r2, lr, lsr r8
    1998:	000df900 	andeq	pc, sp, r0, lsl #18
    199c:	000df700 	andeq	pc, sp, r0, lsl #14
    19a0:	129c3e00 	addsne	r3, ip, #0, 28
    19a4:	0df90000 	ldcleq	0, cr0, [r9]
    19a8:	0df70000 	ldcleq	0, cr0, [r7]
    19ac:	903e0000 	eorsls	r0, lr, r0
    19b0:	f9000012 			@ <UNDEFINED> instruction: 0xf9000012
    19b4:	f700000d 			@ <UNDEFINED> instruction: 0xf700000d
    19b8:	3c00000d 	stccc	0, cr0, [r0], {13}
    19bc:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
    19c0:	00000a30 	andeq	r0, r0, r0, lsr sl
    19c4:	02500130 	subseq	r0, r0, #48, 2
    19c8:	01300071 	teqeq	r0, r1, ror r0
    19cc:	00710251 	rsbseq	r0, r1, r1, asr r2
    19d0:	02520130 	subseq	r0, r2, #48, 2
    19d4:	00000071 	andeq	r0, r0, r1, ror r0
    19d8:	12573f00 	subsne	r3, r7, #0, 30
    19dc:	08ca0000 	stmiaeq	sl, {}^	@ <UNPREDICTABLE>
    19e0:	20010800 	andcs	r0, r1, r0, lsl #16
    19e4:	01000001 	tsteq	r0, r1
    19e8:	0f7c098e 	svceq	0x007c098e
    19ec:	693e0000 	ldmdbvs	lr!, {}	@ <UNPREDICTABLE>
    19f0:	0f000012 	svceq	0x00000012
    19f4:	0d00000e 	stceq	0, cr0, [r0, #-56]	@ 0xffffffc8
    19f8:	3e00000e 	cdpcc	0, 0, cr0, cr0, cr14, {0}
    19fc:	00001275 	andeq	r1, r0, r5, ror r2
    1a00:	00000e25 	andeq	r0, r0, r5, lsr #28
    1a04:	00000e23 	andeq	r0, r0, r3, lsr #28
    1a08:	0008d63c 	andeq	sp, r8, ip, lsr r6
    1a0c:	00096c08 	andeq	r6, r9, r8, lsl #24
    1a10:	50013000 	andpl	r3, r1, r0
    1a14:	01303101 	teqeq	r0, r1, lsl #2
    1a18:	c6740351 			@ <UNDEFINED> instruction: 0xc6740351
    1a1c:	3f000000 	svccc	0x00000000
    1a20:	00001282 	andeq	r1, r0, r2, lsl #5
    1a24:	080009a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, fp}
    1a28:	00017005 	andeq	r7, r1, r5
    1a2c:	2cc40100 	stfcse	f0, [r4], {0}
    1a30:	00000fc3 	andeq	r0, r0, r3, asr #31
    1a34:	0012a83e 	andseq	sl, r2, lr, lsr r8
    1a38:	000e3f00 	andeq	r3, lr, r0, lsl #30
    1a3c:	000e3d00 	andeq	r3, lr, r0, lsl #26
    1a40:	129c3e00 	addsne	r3, ip, #0, 28
    1a44:	0e3f0000 	cdpeq	0, 3, cr0, cr15, cr0, {0}
    1a48:	0e3d0000 	cdpeq	0, 3, cr0, cr13, cr0, {0}
    1a4c:	903e0000 	eorsls	r0, lr, r0
    1a50:	3f000012 	svccc	0x00000012
    1a54:	3d00000e 	stccc	0, cr0, [r0, #-56]	@ 0xffffffc8
    1a58:	4100000e 	tstmi	r0, lr
    1a5c:	08000908 	stmdaeq	r0, {r3, r8, fp}
    1a60:	000a3001 	andeq	r3, sl, r1
    1a64:	823d0000 	eorshi	r0, sp, #0
    1a68:	a6000012 			@ <UNDEFINED> instruction: 0xa6000012
    1a6c:	01080009 	tsteq	r8, r9
    1a70:	080009a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, fp}
    1a74:	080009a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, fp}
    1a78:	0409bc01 	streq	fp, [r9], #-3073	@ 0xfffff3ff
    1a7c:	3e000010 	mcrcc	0, 0, r0, cr0, cr0, {0}
    1a80:	000012a8 	andeq	r1, r0, r8, lsr #5
    1a84:	00000e55 	andeq	r0, r0, r5, asr lr
    1a88:	00000e53 	andeq	r0, r0, r3, asr lr
    1a8c:	00129c3e 	andseq	r9, r2, lr, lsr ip
    1a90:	000e5500 	andeq	r5, lr, r0, lsl #10
    1a94:	000e5300 	andeq	r5, lr, r0, lsl #6
    1a98:	12903e00 	addsne	r3, r0, #0, 28
    1a9c:	0e550000 	cdpeq	0, 5, cr0, cr5, cr0, {0}
    1aa0:	0e530000 	cdpeq	0, 5, cr0, cr3, cr0, {0}
    1aa4:	3c000000 	stccc	0, cr0, [r0], {-0}
    1aa8:	080009ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, fp}
    1aac:	00001181 	andeq	r1, r0, r1, lsl #3
    1ab0:	05500130 	ldrbeq	r0, [r0, #-304]	@ 0xfffffed0
    1ab4:	00006e03 	andeq	r6, r0, r3, lsl #28
    1ab8:	52013020 	andpl	r3, r1, #32
    1abc:	00007502 	andeq	r7, r0, r2, lsl #10
    1ac0:	43044200 	movwmi	r4, #16896	@ 0x4200
    1ac4:	0000060c 	andeq	r0, r0, ip, lsl #12
    1ac8:	01147a01 	tsteq	r4, r1, lsl #20
    1acc:	00104703 	andseq	r4, r0, r3, lsl #14
    1ad0:	75624400 	strbvc	r4, [r2, #-1024]!	@ 0xfffffc00
    1ad4:	7a010066 	bvc	41c74 <_Min_Stack_Size+0x41874>
    1ad8:	000aec2d 	andeq	lr, sl, sp, lsr #24
    1adc:	0fe24500 	svceq	0x00e24500
    1ae0:	7a010000 	bvc	41ae8 <_Min_Stack_Size+0x416e8>
    1ae4:	00005e3b 	andeq	r5, r0, fp, lsr lr
    1ae8:	bf390000 	svclt	0x00390000
    1aec:	0100000c 	tsteq	r0, ip
    1af0:	0c010d6c 	stceq	13, cr0, [r1], {108}	@ 0x6c
    1af4:	44080008 	strmi	r0, [r8], #-8
    1af8:	69080008 	stmdbvs	r8, {r3}
    1afc:	0100000e 	tsteq	r0, lr
    1b00:	000010de 	ldrdeq	r1, [r0], -lr
    1b04:	00092135 	andeq	r2, r9, r5, lsr r1
    1b08:	1c6c0100 	stfnee	f0, [ip], #-0
    1b0c:	00000041 	andeq	r0, r0, r1, asr #32
    1b10:	00000e8d 	andeq	r0, r0, sp, lsl #29
    1b14:	00000e89 	andeq	r0, r0, r9, lsl #29
    1b18:	0008cc37 	andeq	ip, r8, r7, lsr ip
    1b1c:	0c6e0100 	stfeqe	f0, [lr], #-0
    1b20:	0000005e 	andeq	r0, r0, lr, asr r0
    1b24:	00000eb4 			@ <UNDEFINED> instruction: 0x00000eb4
    1b28:	00000eae 	andeq	r0, r0, lr, lsr #29
    1b2c:	00128240 	andseq	r8, r2, r0, asr #4
    1b30:	00082200 	andeq	r2, r8, r0, lsl #4
    1b34:	01080108 	tsteq	r8, r8, lsl #2
    1b38:	70010000 	andvc	r0, r1, r0
    1b3c:	12a83e03 	adcne	r3, r8, #3, 28	@ 0x30
    1b40:	0ef30000 	cdpeq	0, 15, cr0, cr3, cr0, {0}
    1b44:	0ef10000 	cdpeq	0, 15, cr0, cr1, cr0, {0}
    1b48:	9c3e0000 	ldcls	0, cr0, [lr], #-0
    1b4c:	08000012 	stmdaeq	r0, {r1, r4}
    1b50:	0600000f 	streq	r0, [r0], -pc
    1b54:	3e00000f 	cdpcc	0, 0, cr0, cr0, cr15, {0}
    1b58:	00001290 	muleq	r0, r0, r2
    1b5c:	00000f1d 	andeq	r0, r0, sp, lsl pc
    1b60:	00000f1b 	andeq	r0, r0, fp, lsl pc
    1b64:	0008263c 	andeq	r2, r8, ip, lsr r6
    1b68:	000a3008 	andeq	r3, sl, r8
    1b6c:	50013000 	andpl	r3, r1, r0
    1b70:	01303001 	teqeq	r0, r1
    1b74:	00710251 	rsbseq	r0, r1, r1, asr r2
    1b78:	02520130 	subseq	r0, r2, #48, 2
    1b7c:	00000072 	andeq	r0, r0, r2, ror r0
    1b80:	05014600 	streq	r4, [r1, #-1536]	@ 0xfffffa00
    1b84:	01000002 	tsteq	r0, r2
    1b88:	03960641 	orrseq	r0, r6, #68157440	@ 0x4100000
    1b8c:	04280800 	strteq	r0, [r8], #-2048	@ 0xfffff800
    1b90:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1b94:	11590100 	cmpne	r9, r0, lsl #2
    1b98:	902e0000 	eorls	r0, lr, r0
    1b9c:	13000000 	movwne	r0, #0
    1ba0:	38000011 	stmdacc	r0, {r0, r4}
    1ba4:	58010069 	stmdapl	r1, {r0, r3, r5, r6}
    1ba8:	0000410f 	andeq	r4, r0, pc, lsl #2
    1bac:	000f3500 	andeq	r3, pc, r0, lsl #10
    1bb0:	000f3100 	andeq	r3, pc, r0, lsl #2
    1bb4:	d63b0000 	ldrtle	r0, [fp], -r0
    1bb8:	dc080003 	stcle	0, cr0, [r8], {3}
    1bbc:	35080003 	strcc	r0, [r8, #-3]
    1bc0:	38000011 	stmdacc	r0, {r0, r4}
    1bc4:	00727463 	rsbseq	r7, r2, r3, ror #8
    1bc8:	7b105901 	blvc	417fd4 <_Min_Stack_Size+0x417bd4>
    1bcc:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    1bd0:	5800000f 	stmdapl	r0, {r0, r1, r2, r3}
    1bd4:	0000000f 	andeq	r0, r0, pc
    1bd8:	0012b547 	andseq	fp, r2, r7, asr #10
    1bdc:	0003f600 	andeq	pc, r3, r0, lsl #12
    1be0:	03f60108 	mvnseq	r0, #8, 2
    1be4:	03fe0800 	mvnseq	r0, #0, 16
    1be8:	5f010800 	svcpl	0x00010800
    1bec:	12c43e03 	sbcne	r3, r4, #3, 28	@ 0x30
    1bf0:	0fa10000 	svceq	0x00a10000
    1bf4:	0f9f0000 	svceq	0x009f0000
    1bf8:	00000000 	andeq	r0, r0, r0
    1bfc:	00054648 	andeq	r4, r5, r8, asr #12
    1c00:	0d230100 	stfeqs	f0, [r3, #-0]
    1c04:	00038401 	andeq	r8, r3, r1, lsl #8
    1c08:	00038608 	andeq	r8, r3, r8, lsl #12
    1c0c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    1c10:	00118101 	andseq	r8, r1, r1, lsl #2
    1c14:	09213600 	stmdbeq	r1!, {r9, sl, ip, sp}
    1c18:	23010000 	movwcs	r0, #4096	@ 0x1000
    1c1c:	0000412b 	andeq	r4, r0, fp, lsr #2
    1c20:	00500100 	subseq	r0, r0, r0, lsl #2
    1c24:	09310149 	ldmdbeq	r1!, {r0, r3, r6, r8}
    1c28:	21010000 	mrscs	r0, (UNDEF: 1)
    1c2c:	11d0011b 	bicsne	r0, r0, fp, lsl r1
    1c30:	03920000 	orrseq	r0, r2, #0
    1c34:	03960800 	orrseq	r0, r6, #0, 16
    1c38:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1c3c:	11d00100 	bicsne	r0, r0, r0, lsl #2
    1c40:	724a0000 	subvc	r0, sl, #0
    1c44:	01007165 	tsteq	r0, r5, ror #2
    1c48:	11d73c21 	bicsne	r3, r7, r1, lsr #24
    1c4c:	0fb90000 	svceq	0x00b90000
    1c50:	0fb50000 	svceq	0x00b50000
    1c54:	21360000 	teqcs	r6, r0
    1c58:	01000006 	tsteq	r0, r6
    1c5c:	005e4a21 	subseq	r4, lr, r1, lsr #20
    1c60:	51010000 	mrspl	r0, (UNDEF: 1)
    1c64:	00081b36 	andeq	r1, r8, r6, lsr fp
    1c68:	5b210100 	blpl	842070 <_Min_Stack_Size+0x841c70>
    1c6c:	0000005e 	andeq	r0, r0, lr, asr r0
    1c70:	02005201 	andeq	r5, r0, #268435456	@ 0x10000000
    1c74:	021f0801 	andseq	r0, pc, #65536	@ 0x10000
    1c78:	04070000 	streq	r0, [r7], #-0
    1c7c:	0000011b 	andeq	r0, r0, fp, lsl r1
    1c80:	07e90149 	strbeq	r0, [r9, r9, asr #2]!
    1c84:	20010000 	andcs	r0, r1, r0
    1c88:	11d0011b 	bicsne	r0, r0, fp, lsl r1
    1c8c:	038e0000 	orreq	r0, lr, #0
    1c90:	03920800 	orrseq	r0, r2, #0, 16
    1c94:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1c98:	122c0100 	eorne	r0, ip, #0, 2
    1c9c:	724a0000 	subvc	r0, sl, #0
    1ca0:	01007165 	tsteq	r0, r5, ror #2
    1ca4:	11d73b20 	bicsne	r3, r7, r0, lsr #22
    1ca8:	0fde0000 	svceq	0x00de0000
    1cac:	0fda0000 	svceq	0x00da0000
    1cb0:	de360000 	cdple	0, 3, cr0, cr6, cr0, {0}
    1cb4:	0100000a 	tsteq	r0, sl
    1cb8:	122c4720 	eorne	r4, ip, #32, 14	@ 0x800000
    1cbc:	51010000 	mrspl	r0, (UNDEF: 1)
    1cc0:	000fe236 	andeq	lr, pc, r6, lsr r2	@ <UNPREDICTABLE>
    1cc4:	57200100 	strpl	r0, [r0, -r0, lsl #2]!
    1cc8:	00000966 	andeq	r0, r0, r6, ror #18
    1ccc:	07005201 	streq	r5, [r0, -r1, lsl #4]
    1cd0:	00101e04 	andseq	r1, r0, r4, lsl #28
    1cd4:	e5014b00 	str	r4, [r1, #-2816]	@ 0xfffff500
    1cd8:	01000004 	tsteq	r0, r4
    1cdc:	014b1b1f 	cmpeq	fp, pc, lsl fp
    1ce0:	00000304 	andeq	r0, r0, r4, lsl #6
    1ce4:	4b1b1e01 	blmi	6c94f0 <_Min_Stack_Size+0x6c90f0>
    1ce8:	00073901 	andeq	r3, r7, r1, lsl #18
    1cec:	1b1d0100 	blne	7420f4 <_Min_Stack_Size+0x741cf4>
    1cf0:	0701014c 	streq	r0, [r1, -ip, asr #2]
    1cf4:	1c010000 	stcne	0, cr0, [r1], {-0}
    1cf8:	d84d011b 	stmdale	sp, {r0, r1, r3, r4, r8}^
    1cfc:	03000006 	movweq	r0, #6
    1d00:	9a0113c1 	bls	46c0c <_Min_Stack_Size+0x4680c>
    1d04:	03000000 	movweq	r0, #0
    1d08:	00001282 	andeq	r1, r0, r2, lsl #5
    1d0c:	00092145 	andeq	r2, r9, r5, asr #2
    1d10:	27c10300 	strbcs	r0, [r1, r0, lsl #6]
    1d14:	00000041 	andeq	r0, r0, r1, asr #32
    1d18:	66756244 	ldrbtvs	r6, [r5], -r4, asr #4
    1d1c:	38c10300 	stmiacc	r1, {r8, r9}^
    1d20:	00000966 	andeq	r0, r0, r6, ror #18
    1d24:	05834300 	streq	r4, [r3, #768]	@ 0x300
    1d28:	b4030000 	strlt	r0, [r3], #-0
    1d2c:	b5030114 	strlt	r0, [r3, #-276]	@ 0xfffffeec
    1d30:	45000012 	strmi	r0, [r0, #-18]	@ 0xffffffee
    1d34:	00000921 	andeq	r0, r0, r1, lsr #18
    1d38:	4129b403 			@ <UNDEFINED> instruction: 0x4129b403
    1d3c:	44000000 	strmi	r0, [r0], #-0
    1d40:	00667562 	rsbeq	r7, r6, r2, ror #10
    1d44:	ec40b403 	cfstrd	mvd11, [r0], {3}
    1d48:	4500000a 	strmi	r0, [r0, #-10]
    1d4c:	00000fe2 	andeq	r0, r0, r2, ror #31
    1d50:	5e4eb403 	cdppl	4, 4, cr11, cr14, cr3, {0}
    1d54:	00000000 	andeq	r0, r0, r0
    1d58:	0005ad4e 	andeq	sl, r5, lr, asr #26
    1d5c:	05de0200 	ldrbeq	r0, [lr, #512]	@ 0x200
    1d60:	d2030116 	andle	r0, r3, #-2147483643	@ 0x80000005
    1d64:	4f000012 	svcmi	0x00000012
    1d68:	0000072a 	andeq	r0, r0, sl, lsr #14
    1d6c:	2f05de02 	svccs	0x0005de02
    1d70:	0000029e 	muleq	r0, lr, r2
    1d74:	124d5000 	subne	r5, sp, #0
    1d78:	03860000 	orreq	r0, r6, #0
    1d7c:	03880800 	orreq	r0, r8, #0, 16
    1d80:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1d84:	32000100 	andcc	r0, r0, #0, 2
    1d88:	02000018 	andeq	r0, r0, #24
    1d8c:	0007a200 	andeq	sl, r7, r0, lsl #4
    1d90:	93010400 	movwls	r0, #5120	@ 0x1400
    1d94:	0c000001 	stceq	0, cr0, [r0], {1}
    1d98:	00000aff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    1d9c:	000000af 	andeq	r0, r0, pc, lsr #1
    1da0:	08000a04 	stmdaeq	r0, {r2, r9, fp}
    1da4:	08000eba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, sl, fp}
    1da8:	00000f95 	muleq	r0, r5, pc	@ <UNPREDICTABLE>
    1dac:	18060102 	stmdane	r6, {r1, r8}
    1db0:	03000002 	movweq	r0, #2
    1db4:	00000260 	andeq	r0, r0, r0, ror #4
    1db8:	3d182507 	cfldr32cc	mvfx2, [r8, #-28]	@ 0xffffffe4
    1dbc:	04000000 	streq	r0, [r0], #-0
    1dc0:	0000002c 	andeq	r0, r0, ip, lsr #32
    1dc4:	30050202 	andcc	r0, r5, r2, lsl #4
    1dc8:	03000000 	movweq	r0, #0
    1dcc:	00000250 	andeq	r0, r0, r0, asr r2
    1dd0:	50182807 	andspl	r2, r8, r7, lsl #16
    1dd4:	02000000 	andeq	r0, r0, #0
    1dd8:	00670504 	rsbeq	r0, r7, r4, lsl #10
    1ddc:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
    1de0:	00006205 	andeq	r6, r0, r5, lsl #4
    1de4:	07100300 	ldreq	r0, [r0, -r0, lsl #6]
    1de8:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    1dec:	00007418 	andeq	r7, r0, r8, lsl r4
    1df0:	005e0400 	subseq	r0, lr, r0, lsl #8
    1df4:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    1df8:	02000000 	andeq	r0, r0, #0
    1dfc:	02160801 	andseq	r0, r6, #65536	@ 0x10000
    1e00:	5f030000 	svcpl	0x00030000
    1e04:	07000002 	streq	r0, [r0, -r2]
    1e08:	00911931 	addseq	r1, r1, r1, lsr r9
    1e0c:	7b040000 	blvc	101e14 <_Min_Stack_Size+0x101a14>
    1e10:	05000000 	streq	r0, [r0, #-0]
    1e14:	0000007b 	andeq	r0, r0, fp, ror r0
    1e18:	91070202 	tstls	r7, r2, lsl #4
    1e1c:	03000002 	movweq	r0, #2
    1e20:	0000024f 	andeq	r0, r0, pc, asr #4
    1e24:	a9193407 	ldmdbge	r9, {r0, r1, r2, sl, ip, sp}
    1e28:	04000000 	streq	r0, [r0], #-0
    1e2c:	00000098 	muleq	r0, r8, r0
    1e30:	3d070402 	cfstrscc	mvf0, [r7, #-8]
    1e34:	02000002 	andeq	r0, r0, #2
    1e38:	02380708 	eorseq	r0, r8, #8, 14	@ 0x200000
    1e3c:	04060000 	streq	r0, [r6], #-0
    1e40:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
    1e44:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1e48:	00000242 	andeq	r0, r0, r2, asr #4
    1e4c:	00077503 	andeq	r7, r7, r3, lsl #10
    1e50:	0f1d0300 	svceq	0x001d0300
    1e54:	000000d1 	ldrdeq	r0, [r0], -r1
    1e58:	00d70407 	sbcseq	r0, r7, r7, lsl #8
    1e5c:	01080000 	mrseq	r0, (UNDEF: 8)
    1e60:	000000e3 	andeq	r0, r0, r3, ror #1
    1e64:	00005e09 	andeq	r5, r0, r9, lsl #28
    1e68:	080a0000 	stmdaeq	sl, {}	@ <UNPREDICTABLE>
    1e6c:	38091e03 	stmdacc	r9, {r0, r1, r9, sl, fp, ip}
    1e70:	0b000001 	bleq	1e7c <_Min_Stack_Size+0x1a7c>
    1e74:	00000481 	andeq	r0, r0, r1, lsl #9
    1e78:	5e0b1f03 	cdppl	15, 0, cr1, cr11, cr3, {0}
    1e7c:	02000000 	andeq	r0, r0, #0
    1e80:	dc0b0023 	stcle	0, cr0, [fp], {35}	@ 0x23
    1e84:	03000008 	movweq	r0, #8
    1e88:	005e0b20 	subseq	r0, lr, r0, lsr #22
    1e8c:	23020000 	movwcs	r0, #8192	@ 0x2000
    1e90:	05030b01 	streq	r0, [r3, #-2817]	@ 0xfffff4ff
    1e94:	21030000 	mrscs	r0, (UNDEF: 3)
    1e98:	00007b0c 	andeq	r7, r0, ip, lsl #22
    1e9c:	02230200 	eoreq	r0, r3, #0, 4
    1ea0:	0004090b 	andeq	r0, r4, fp, lsl #18
    1ea4:	0c220300 	stceq	3, cr0, [r2], #-0
    1ea8:	0000007b 	andeq	r0, r0, fp, ror r0
    1eac:	0b042302 	bleq	10aabc <_Min_Stack_Size+0x10a6bc>
    1eb0:	000008bf 			@ <UNDEFINED> instruction: 0x000008bf
    1eb4:	7b0c2303 	blvc	30aac8 <_Min_Stack_Size+0x30a6c8>
    1eb8:	02000000 	andeq	r0, r0, #0
    1ebc:	03000623 	movweq	r0, #1571	@ 0x623
    1ec0:	00000948 	andeq	r0, r0, r8, asr #18
    1ec4:	e3022403 	movw	r2, #9219	@ 0x2403
    1ec8:	0c000000 	stceq	0, cr0, [r0], {-0}
    1ecc:	00250105 	eoreq	r0, r5, r5, lsl #2
    1ed0:	58080000 	stmdapl	r8, {}	@ <UNPREDICTABLE>
    1ed4:	0002bb01 	andeq	fp, r2, r1, lsl #22
    1ed8:	08ab0d00 	stmiaeq	fp!, {r8, sl, fp}
    1edc:	0d720000 	ldcleq	0, cr0, [r2, #-0]
    1ee0:	0000050a 	andeq	r0, r0, sl, lsl #10
    1ee4:	07530d74 			@ <UNDEFINED> instruction: 0x07530d74
    1ee8:	0d750000 	ldcleq	0, cr0, [r5, #-0]
    1eec:	0000098e 	andeq	r0, r0, lr, lsl #19
    1ef0:	044f0d76 	strbeq	r0, [pc], #-3446	@ 1ef8 <_Min_Stack_Size+0x1af8>
    1ef4:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
    1ef8:	0000097c 	andeq	r0, r0, ip, ror r9
    1efc:	04d90d7c 	ldrbeq	r0, [r9], #3452	@ 0xd7c
    1f00:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
    1f04:	00000914 	andeq	r0, r0, r4, lsl r9
    1f08:	072f0e7f 			@ <UNDEFINED> instruction: 0x072f0e7f
    1f0c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1f10:	0000076c 	andeq	r0, r0, ip, ror #14
    1f14:	052f0e01 	streq	r0, [pc, #-3585]!	@ 111b <_Min_Stack_Size+0xd1b>
    1f18:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    1f1c:	0000063b 	andeq	r0, r0, fp, lsr r6
    1f20:	049c0e03 	ldreq	r0, [ip], #3587	@ 0xe03
    1f24:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1f28:	000004fa 	strdeq	r0, [r0], -sl
    1f2c:	04b10e05 	ldrteq	r0, [r1], #3589	@ 0xe05
    1f30:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    1f34:	000008d1 	ldrdeq	r0, [r0], -r1
    1f38:	06650e07 	strbteq	r0, [r5], -r7, lsl #28
    1f3c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    1f40:	00000a23 	andeq	r0, r0, r3, lsr #20
    1f44:	07610e09 	strbeq	r0, [r1, -r9, lsl #28]!
    1f48:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    1f4c:	000006ee 	andeq	r0, r0, lr, ror #13
    1f50:	04620e0b 	strbteq	r0, [r2], #-3595	@ 0xfffff1f5
    1f54:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    1f58:	000007ad 	andeq	r0, r0, sp, lsr #15
    1f5c:	059a0e0d 	ldreq	r0, [sl, #3597]	@ 0xe0d
    1f60:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    1f64:	000009f8 	strdeq	r0, [r0], -r8
    1f68:	06b10e0f 	ldrteq	r0, [r1], pc, lsl #28
    1f6c:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    1f70:	0000042f 	andeq	r0, r0, pc, lsr #8
    1f74:	06700e11 			@ <UNDEFINED> instruction: 0x06700e11
    1f78:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
    1f7c:	00000970 	andeq	r0, r0, r0, ror r9
    1f80:	0a840e13 	beq	fe1057d4 <BootRAM+0xd075f75>
    1f84:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
    1f88:	00000a12 	andeq	r0, r0, r2, lsl sl
    1f8c:	05bc0e15 	ldreq	r0, [ip, #3605]!	@ 0xe15
    1f90:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
    1f94:	000009c8 	andeq	r0, r0, r8, asr #19
    1f98:	04250e17 	strteq	r0, [r5], #-3607	@ 0xfffff1e9
    1f9c:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    1fa0:	00000724 	andeq	r0, r0, r4, lsr #14
    1fa4:	03fe0e1a 	mvnseq	r0, #416	@ 0x1a0
    1fa8:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    1fac:	00000927 	andeq	r0, r0, r7, lsr #18
    1fb0:	06e40e1c 	usateq	r0, #4, ip, lsl #28
    1fb4:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
    1fb8:	00000458 	andeq	r0, r0, r8, asr r4
    1fbc:	07ce0e1e 	bfieq	r0, lr, (invalid: 28:14)
    1fc0:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
    1fc4:	00000907 	andeq	r0, r0, r7, lsl #18
    1fc8:	067a0e20 	ldrbteq	r0, [sl], -r0, lsr #28
    1fcc:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
    1fd0:	00000442 	andeq	r0, r0, r2, asr #8
    1fd4:	05780e22 	ldrbeq	r0, [r8, #-3618]!	@ 0xfffff1de
    1fd8:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
    1fdc:	000009df 	ldrdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    1fe0:	08930e24 	ldmeq	r3, {r2, r5, r9, sl, fp}
    1fe4:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
    1fe8:	00000615 	andeq	r0, r0, r5, lsl r6
    1fec:	0a6e0e26 	beq	1b8588c <_Min_Stack_Size+0x1b8548c>
    1ff0:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
    1ff4:	000004bc 			@ <UNDEFINED> instruction: 0x000004bc
    1ff8:	080c0e28 	stmdaeq	ip, {r3, r5, r9, sl, fp}
    1ffc:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
    2000:	0000086e 	andeq	r0, r0, lr, ror #16
    2004:	05900e2a 	ldreq	r0, [r0, #3626]	@ 0xe2a
    2008:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
    200c:	000009ee 	andeq	r0, r0, lr, ror #19
    2010:	07a30e2c 	streq	r0, [r3, ip, lsr #28]!
    2014:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
    2018:	0000068c 	andeq	r0, r0, ip, lsl #13
    201c:	06c40e2f 	strbeq	r0, [r4], pc, lsr #28
    2020:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
    2024:	00000a5b 	andeq	r0, r0, fp, asr sl
    2028:	07900e33 			@ <UNDEFINED> instruction: 0x07900e33
    202c:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
    2030:	0000055c 	andeq	r0, r0, ip, asr r5
    2034:	08f40e35 	ldmeq	r4!, {r0, r2, r4, r5, r9, sl, fp}^
    2038:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
    203c:	000006a3 	andeq	r0, r0, r3, lsr #13
    2040:	02030038 	andeq	r0, r3, #56	@ 0x38
    2044:	08000006 	stmdaeq	r0, {r1, r2}
    2048:	01440398 			@ <UNDEFINED> instruction: 0x01440398
    204c:	040f0000 	streq	r0, [pc], #-0	@ 2054 <_Min_Stack_Size+0x1c54>
    2050:	0984060e 	stmibeq	r4, {r1, r2, r3, r9, sl}
    2054:	0000039f 	muleq	r0, pc, r3	@ <UNPREDICTABLE>
    2058:	0005410b 	andeq	r4, r5, fp, lsl #2
    205c:	11860600 	orrne	r0, r6, r0, lsl #12
    2060:	000003af 	andeq	r0, r0, pc, lsr #7
    2064:	0b002302 	bleq	ac74 <_Min_Stack_Size+0xa874>
    2068:	00000828 	andeq	r0, r0, r8, lsr #16
    206c:	b4118706 	ldrlt	r8, [r1], #-1798	@ 0xfffff8fa
    2070:	02000003 	andeq	r0, r0, #3
    2074:	da0b2023 	ble	2ca108 <_Min_Stack_Size+0x2c9d08>
    2078:	06000009 	streq	r0, [r0], -r9
    207c:	03af1188 			@ <UNDEFINED> instruction: 0x03af1188
    2080:	23030000 	movwcs	r0, #12288	@ 0x3000
    2084:	6f0b0180 	svcvs	0x000b0180
    2088:	06000005 	streq	r0, [r0], -r5
    208c:	03b41189 			@ <UNDEFINED> instruction: 0x03b41189
    2090:	23030000 	movwcs	r0, #12288	@ 0x3000
    2094:	410b01a0 	smlatbmi	fp, r0, r1, r0
    2098:	0600000a 	streq	r0, [r0], -sl
    209c:	03af118a 			@ <UNDEFINED> instruction: 0x03af118a
    20a0:	23030000 	movwcs	r0, #12288	@ 0x3000
    20a4:	3c0b0280 	sfmcc	f0, 4, [fp], {128}	@ 0x80
    20a8:	06000008 	streq	r0, [r0], -r8
    20ac:	03b4118b 			@ <UNDEFINED> instruction: 0x03b4118b
    20b0:	23030000 	movwcs	r0, #12288	@ 0x3000
    20b4:	8b0b02a0 	blhi	2c2b3c <_Min_Stack_Size+0x2c273c>
    20b8:	06000007 	streq	r0, [r0], -r7
    20bc:	03af118c 			@ <UNDEFINED> instruction: 0x03af118c
    20c0:	23030000 	movwcs	r0, #12288	@ 0x3000
    20c4:	460b0380 	strmi	r0, [fp], -r0, lsl #7
    20c8:	06000008 	streq	r0, [r0], -r8
    20cc:	03b4118d 			@ <UNDEFINED> instruction: 0x03b4118d
    20d0:	23030000 	movwcs	r0, #12288	@ 0x3000
    20d4:	e90b03a0 	stmdb	fp, {r5, r7, r8, r9}
    20d8:	06000009 	streq	r0, [r0], -r9
    20dc:	03af118e 			@ <UNDEFINED> instruction: 0x03af118e
    20e0:	23030000 	movwcs	r0, #12288	@ 0x3000
    20e4:	500b0480 	andpl	r0, fp, r0, lsl #9
    20e8:	06000008 	streq	r0, [r0], -r8
    20ec:	03c4118f 	biceq	r1, r4, #-1073741789	@ 0xc0000023
    20f0:	23030000 	movwcs	r0, #12288	@ 0x3000
    20f4:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
    20f8:	90060050 	andls	r0, r6, r0, asr r0
    20fc:	0003e411 	andeq	lr, r3, r1, lsl r4
    2100:	80230300 	eorhi	r0, r3, r0, lsl #6
    2104:	085a0b06 	ldmdaeq	sl, {r1, r2, r8, r9, fp}^
    2108:	91060000 	mrsls	r0, (UNDEF: 6)
    210c:	0003e911 	andeq	lr, r3, r1, lsl r9
    2110:	f0230300 			@ <UNDEFINED> instruction: 0xf0230300
    2114:	08070b07 	stmdaeq	r7, {r0, r1, r2, r8, r9, fp}
    2118:	92060000 	andls	r0, r6, #0
    211c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2120:	80230300 	eorhi	r0, r3, r0, lsl #6
    2124:	a411001c 	ldrge	r0, [r1], #-28	@ 0xffffffe4
    2128:	af000000 	svcge	0x00000000
    212c:	12000003 	andne	r0, r0, #3
    2130:	000000be 	strheq	r0, [r0], -lr
    2134:	9f040007 	svcls	0x00040007
    2138:	11000003 	tstne	r0, r3
    213c:	00000098 	muleq	r0, r8, r0
    2140:	000003c4 	andeq	r0, r0, r4, asr #7
    2144:	0000be12 	andeq	fp, r0, r2, lsl lr
    2148:	11001700 	tstne	r0, r0, lsl #14
    214c:	00000098 	muleq	r0, r8, r0
    2150:	000003d4 	ldrdeq	r0, [r0], -r4
    2154:	0000be12 	andeq	fp, r0, r2, lsl lr
    2158:	11003700 	tstne	r0, r0, lsl #14
    215c:	0000006a 	andeq	r0, r0, sl, rrx
    2160:	000003e4 	andeq	r0, r0, r4, ror #7
    2164:	0000be12 	andeq	fp, r0, r2, lsl lr
    2168:	0400ef00 	streq	lr, [r0], #-3840	@ 0xfffff100
    216c:	000003d4 	ldrdeq	r0, [r0], -r4
    2170:	00009811 	andeq	r9, r0, r1, lsl r8
    2174:	0003fa00 	andeq	pc, r3, r0, lsl #20
    2178:	00be1300 	adcseq	r1, lr, r0, lsl #6
    217c:	02830000 	addeq	r0, r3, #0
    2180:	08e50300 	stmiaeq	r5!, {r8, r9}^
    2184:	93060000 	movwls	r0, #24576	@ 0x6000
    2188:	0002c704 	andeq	ip, r2, r4, lsl #14
    218c:	08600a00 	stmdaeq	r0!, {r9, fp}^
    2190:	057609aa 	ldrbeq	r0, [r6, #-2474]!	@ 0xfffff656
    2194:	53100000 	tstpl	r0, #0
    2198:	ac080052 	stcge	0, cr0, [r8], {82}	@ 0x52
    219c:	0000a411 	andeq	sl, r0, r1, lsl r4
    21a0:	00230200 	eoreq	r0, r3, r0, lsl #4
    21a4:	31524310 	cmpcc	r2, r0, lsl r3
    21a8:	11ad0800 			@ <UNDEFINED> instruction: 0x11ad0800
    21ac:	000000a4 	andeq	r0, r0, r4, lsr #1
    21b0:	10042302 	andne	r2, r4, r2, lsl #6
    21b4:	00325243 	eorseq	r5, r2, r3, asr #4
    21b8:	a411ae08 	ldrge	sl, [r1], #-3592	@ 0xfffff1f8
    21bc:	02000000 	andeq	r0, r0, #0
    21c0:	8a0b0823 	bhi	2c4254 <_Min_Stack_Size+0x2c3e54>
    21c4:	0800000c 	stmdaeq	r0, {r2, r3}
    21c8:	00a411af 	adceq	r1, r4, pc, lsr #3
    21cc:	23020000 	movwcs	r0, #8192	@ 0x2000
    21d0:	0c900b0c 	vldmiaeq	r0, {d0-d5}
    21d4:	b0080000 	andlt	r0, r8, r0
    21d8:	0000a411 	andeq	sl, r0, r1, lsl r4
    21dc:	10230200 	eorne	r0, r3, r0, lsl #4
    21e0:	000ba60b 	andeq	sl, fp, fp, lsl #12
    21e4:	11b10800 			@ <UNDEFINED> instruction: 0x11b10800
    21e8:	000000a4 	andeq	r0, r0, r4, lsr #1
    21ec:	0b142302 	bleq	50adfc <_Min_Stack_Size+0x50a9fc>
    21f0:	00000e12 	andeq	r0, r0, r2, lsl lr
    21f4:	a411b208 	ldrge	fp, [r1], #-520	@ 0xfffffdf8
    21f8:	02000000 	andeq	r0, r0, #0
    21fc:	180b1823 	stmdane	fp, {r0, r1, r5, fp, ip}
    2200:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    2204:	00a411b3 	strhteq	r1, [r4], r3
    2208:	23020000 	movwcs	r0, #8192	@ 0x2000
    220c:	0e1e0b1c 	vmoveq.32	r0, d14[0]
    2210:	b4080000 	strlt	r0, [r8], #-0
    2214:	0000a411 	andeq	sl, r0, r1, lsl r4
    2218:	20230200 	eorcs	r0, r3, r0, lsl #4
    221c:	000e240b 	andeq	r2, lr, fp, lsl #8
    2220:	11b50800 			@ <UNDEFINED> instruction: 0x11b50800
    2224:	000000a4 	andeq	r0, r0, r4, lsr #1
    2228:	10242302 	eorne	r2, r4, r2, lsl #6
    222c:	00525448 	subseq	r5, r2, r8, asr #8
    2230:	a411b608 	ldrge	fp, [r1], #-1544	@ 0xfffff9f8
    2234:	02000000 	andeq	r0, r0, #0
    2238:	4c102823 	ldcmi	8, cr2, [r0], {35}	@ 0x23
    223c:	08005254 	stmdaeq	r0, {r2, r4, r6, r9, ip, lr}
    2240:	00a411b7 	strhteq	r1, [r4], r7
    2244:	23020000 	movwcs	r0, #8192	@ 0x2000
    2248:	0aa40b2c 	beq	fe904f00 <BootRAM+0xd8756a1>
    224c:	b8080000 	stmdalt	r8, {}	@ <UNPREDICTABLE>
    2250:	0000a411 	andeq	sl, r0, r1, lsl r4
    2254:	30230200 	eorcc	r0, r3, r0, lsl #4
    2258:	000aa90b 	andeq	sl, sl, fp, lsl #18
    225c:	11b90800 			@ <UNDEFINED> instruction: 0x11b90800
    2260:	000000a4 	andeq	r0, r0, r4, lsr #1
    2264:	0b342302 	bleq	d0ae74 <_Min_Stack_Size+0xd0aa74>
    2268:	00000aae 	andeq	r0, r0, lr, lsr #21
    226c:	a411ba08 	ldrge	fp, [r1], #-2568	@ 0xfffff5f8
    2270:	02000000 	andeq	r0, r0, #0
    2274:	b30b3823 	movwlt	r3, #47139	@ 0xb823
    2278:	0800000a 	stmdaeq	r0, {r1, r3}
    227c:	00a411bb 	strhteq	r1, [r4], fp
    2280:	23020000 	movwcs	r0, #8192	@ 0x2000
    2284:	0ab80b3c 	beq	fee04f7c <BootRAM+0xdd7571d>
    2288:	bc080000 	stclt	0, cr0, [r8], {-0}
    228c:	0000a411 	andeq	sl, r0, r1, lsl r4
    2290:	40230200 	eormi	r0, r3, r0, lsl #4
    2294:	000c620b 	andeq	r6, ip, fp, lsl #4
    2298:	11bd0800 			@ <UNDEFINED> instruction: 0x11bd0800
    229c:	000000a4 	andeq	r0, r0, r4, lsr #1
    22a0:	0b442302 	bleq	110aeb0 <_Min_Stack_Size+0x110aab0>
    22a4:	00000cc6 	andeq	r0, r0, r6, asr #25
    22a8:	a411be08 	ldrge	fp, [r1], #-3592	@ 0xfffff1f8
    22ac:	02000000 	andeq	r0, r0, #0
    22b0:	cb0b4823 	blgt	2d4344 <_Min_Stack_Size+0x2d3f44>
    22b4:	0800000c 	stmdaeq	r0, {r2, r3}
    22b8:	00a411bf 	strhteq	r1, [r4], pc
    22bc:	23020000 	movwcs	r0, #8192	@ 0x2000
    22c0:	0cd00b4c 	vldmiaeq	r0, {d16-<overflow reg d53>}
    22c4:	c0080000 	andgt	r0, r8, r0
    22c8:	0000a411 	andeq	sl, r0, r1, lsl r4
    22cc:	50230200 	eorpl	r0, r3, r0, lsl #4
    22d0:	000cd50b 	andeq	sp, ip, fp, lsl #10
    22d4:	11c10800 	bicne	r0, r1, r0, lsl #16
    22d8:	000000a4 	andeq	r0, r0, r4, lsr #1
    22dc:	10542302 	subsne	r2, r4, r2, lsl #6
    22e0:	08005244 	stmdaeq	r0, {r2, r6, r9, ip, lr}
    22e4:	00a411c2 	adceq	r1, r4, r2, asr #3
    22e8:	23020000 	movwcs	r0, #8192	@ 0x2000
    22ec:	03670b58 	cmneq	r7, #88, 22	@ 0x16000
    22f0:	c3080000 	movwgt	r0, #32768	@ 0x8000
    22f4:	0000980c 	andeq	r9, r0, ip, lsl #16
    22f8:	5c230200 	sfmpl	f0, 4, [r3], #-0
    22fc:	0bf80300 	bleq	ffe02f04 <BootRAM+0xed736a5>
    2300:	c4080000 	strgt	r0, [r8], #-0
    2304:	00040603 	andeq	r0, r4, r3, lsl #12
    2308:	08080a00 	stmdaeq	r8, {r9, fp}
    230c:	05aa09c6 	streq	r0, [sl, #2502]!	@ 0x9c6
    2310:	43100000 	tstmi	r0, #0
    2314:	08005253 	stmdaeq	r0, {r0, r1, r4, r6, r9, ip, lr}
    2318:	00a411c8 	adceq	r1, r4, r8, asr #3
    231c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2320:	43431000 	movtmi	r1, #12288	@ 0x3000
    2324:	c9080052 	stmdbgt	r8, {r1, r4, r6}
    2328:	0000a411 	andeq	sl, r0, r1, lsl r4
    232c:	04230200 	strteq	r0, [r3], #-512	@ 0xfffffe00
    2330:	0c670300 	stcleq	3, cr0, [r7], #-0
    2334:	ca080000 	bgt	20233c <_Min_Stack_Size+0x201f3c>
    2338:	00058203 	andeq	r8, r5, r3, lsl #4
    233c:	082c1400 	stmdaeq	ip!, {sl, ip}
    2340:	6109014f 	tstvs	r9, pc, asr #2
    2344:	15000006 	strne	r0, [r0, #-6]
    2348:	00000167 	andeq	r0, r0, r7, ror #2
    234c:	11015108 	tstne	r1, r8, lsl #2
    2350:	000000a4 	andeq	r0, r0, r4, lsr #1
    2354:	15002302 	strne	r2, [r0, #-770]	@ 0xfffffcfe
    2358:	00000104 	andeq	r0, r0, r4, lsl #2
    235c:	11015208 	tstne	r1, r8, lsl #4
    2360:	000000a4 	andeq	r0, r0, r4, lsr #1
    2364:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    2368:	0000000d 	andeq	r0, r0, sp
    236c:	11015308 	tstne	r1, r8, lsl #6
    2370:	000000a4 	andeq	r0, r0, r4, lsr #1
    2374:	15082302 	strne	r2, [r8, #-770]	@ 0xfffffcfe
    2378:	00000135 	andeq	r0, r0, r5, lsr r1
    237c:	11015408 	tstne	r1, r8, lsl #8
    2380:	000000a4 	andeq	r0, r0, r4, lsr #1
    2384:	160c2302 	strne	r2, [ip], -r2, lsl #6
    2388:	00524449 	subseq	r4, r2, r9, asr #8
    238c:	11015508 	tstne	r1, r8, lsl #10
    2390:	000000a4 	andeq	r0, r0, r4, lsr #1
    2394:	16102302 	ldrne	r2, [r0], -r2, lsl #6
    2398:	0052444f 	subseq	r4, r2, pc, asr #8
    239c:	11015608 	tstne	r1, r8, lsl #12
    23a0:	000000a4 	andeq	r0, r0, r4, lsr #1
    23a4:	15142302 	ldrne	r2, [r4, #-770]	@ 0xfffffcfe
    23a8:	0000015b 	andeq	r0, r0, fp, asr r1
    23ac:	11015708 	tstne	r1, r8, lsl #14
    23b0:	000000a4 	andeq	r0, r0, r4, lsr #1
    23b4:	15182302 	ldrne	r2, [r8, #-770]	@ 0xfffffcfe
    23b8:	0000038b 	andeq	r0, r0, fp, lsl #7
    23bc:	11015808 	tstne	r1, r8, lsl #16
    23c0:	000000a4 	andeq	r0, r0, r4, lsr #1
    23c4:	161c2302 	ldrne	r2, [ip], -r2, lsl #6
    23c8:	00524641 	subseq	r4, r2, r1, asr #12
    23cc:	11015908 	tstne	r1, r8, lsl #18
    23d0:	00000671 	andeq	r0, r0, r1, ror r6
    23d4:	16202302 	strtne	r2, [r0], -r2, lsl #6
    23d8:	00525242 	subseq	r5, r2, r2, asr #4
    23dc:	11015a08 	tstne	r1, r8, lsl #20
    23e0:	000000a4 	andeq	r0, r0, r4, lsr #1
    23e4:	00282302 	eoreq	r2, r8, r2, lsl #6
    23e8:	0000a411 	andeq	sl, r0, r1, lsl r4
    23ec:	00067100 	andeq	r7, r6, r0, lsl #2
    23f0:	00be1200 	adcseq	r1, lr, r0, lsl #4
    23f4:	00010000 	andeq	r0, r1, r0
    23f8:	00066104 	andeq	r6, r6, r4, lsl #2
    23fc:	00001700 	andeq	r1, r0, r0, lsl #14
    2400:	5b080000 	blpl	202408 <_Min_Stack_Size+0x202008>
    2404:	05b60301 	ldreq	r0, [r6, #769]!	@ 0x301
    2408:	38140000 	ldmdacc	r4, {}	@ <UNPREDICTABLE>
    240c:	09019308 	stmdbeq	r1, {r3, r8, r9, ip, pc}
    2410:	0000076d 	andeq	r0, r0, sp, ror #14
    2414:	00524316 	subseq	r4, r2, r6, lsl r3
    2418:	11019508 	tstne	r1, r8, lsl #10
    241c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2420:	15002302 	strne	r2, [r0, #-770]	@ 0xfffffcfe
    2424:	00000080 	andeq	r0, r0, r0, lsl #1
    2428:	11019608 	tstne	r1, r8, lsl #12
    242c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2430:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    2434:	0000008f 	andeq	r0, r0, pc, lsl #1
    2438:	11019708 	tstne	r1, r8, lsl #14
    243c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2440:	16082302 	strne	r2, [r8], -r2, lsl #6
    2444:	00524943 	subseq	r4, r2, r3, asr #18
    2448:	11019808 	tstne	r1, r8, lsl #16
    244c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2450:	150c2302 	strne	r2, [ip, #-770]	@ 0xfffffcfe
    2454:	00000126 	andeq	r0, r0, r6, lsr #2
    2458:	11019908 	tstne	r1, r8, lsl #18
    245c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2460:	15102302 	ldrne	r2, [r0, #-770]	@ 0xfffffcfe
    2464:	0000016d 	andeq	r0, r0, sp, ror #2
    2468:	11019a08 	tstne	r1, r8, lsl #20
    246c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2470:	15142302 	ldrne	r2, [r4, #-770]	@ 0xfffffcfe
    2474:	0000001b 	andeq	r0, r0, fp, lsl r0
    2478:	11019b08 	tstne	r1, r8, lsl #22
    247c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2480:	15182302 	ldrne	r2, [r8, #-770]	@ 0xfffffcfe
    2484:	0000020f 	andeq	r0, r0, pc, lsl #4
    2488:	11019c08 	tstne	r1, r8, lsl #24
    248c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2490:	151c2302 	ldrne	r2, [ip, #-770]	@ 0xfffffcfe
    2494:	0000010b 	andeq	r0, r0, fp, lsl #2
    2498:	11019d08 	tstne	r1, r8, lsl #26
    249c:	000000a4 	andeq	r0, r0, r4, lsr #1
    24a0:	15202302 	strne	r2, [r0, #-770]!	@ 0xfffffcfe
    24a4:	0000009b 	muleq	r0, fp, r0
    24a8:	11019e08 	tstne	r1, r8, lsl #28
    24ac:	000000a4 	andeq	r0, r0, r4, lsr #1
    24b0:	15242302 	strne	r2, [r4, #-770]!	@ 0xfffffcfe
    24b4:	00000070 	andeq	r0, r0, r0, ror r0
    24b8:	11019f08 	tstne	r1, r8, lsl #30
    24bc:	000000a4 	andeq	r0, r0, r4, lsr #1
    24c0:	15282302 	strne	r2, [r8, #-770]!	@ 0xfffffcfe
    24c4:	00000390 	muleq	r0, r0, r3
    24c8:	1101a008 	tstne	r1, r8
    24cc:	000000a4 	andeq	r0, r0, r4, lsr #1
    24d0:	152c2302 	strne	r2, [ip, #-770]!	@ 0xfffffcfe
    24d4:	000002a4 	andeq	r0, r0, r4, lsr #5
    24d8:	1101a108 	tstne	r1, r8, lsl #2
    24dc:	000000a4 	andeq	r0, r0, r4, lsr #1
    24e0:	16302302 	ldrtne	r2, [r0], -r2, lsl #6
    24e4:	00525343 	subseq	r5, r2, r3, asr #6
    24e8:	1101a208 	tstne	r1, r8, lsl #4
    24ec:	000000a4 	andeq	r0, r0, r4, lsr #1
    24f0:	00342302 	eorseq	r2, r4, r2, lsl #6
    24f4:	00014f17 	andeq	r4, r1, r7, lsl pc
    24f8:	01a30800 			@ <UNDEFINED> instruction: 0x01a30800
    24fc:	00068303 	andeq	r8, r6, r3, lsl #6
    2500:	08541400 	ldmdaeq	r4, {sl, ip}^
    2504:	d309020c 	movwle	r0, #37388	@ 0x920c
    2508:	16000008 	strne	r0, [r0], -r8
    250c:	00315243 	eorseq	r5, r1, r3, asr #4
    2510:	11020e08 	tstne	r2, r8, lsl #28
    2514:	000000a4 	andeq	r0, r0, r4, lsr #1
    2518:	16002302 	strne	r2, [r0], -r2, lsl #6
    251c:	00325243 	eorseq	r5, r2, r3, asr #4
    2520:	11020f08 	tstne	r2, r8, lsl #30
    2524:	000000a4 	andeq	r0, r0, r4, lsr #1
    2528:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    252c:	00000cda 	ldrdeq	r0, [r0], -sl
    2530:	11021008 	tstne	r2, r8
    2534:	000000a4 	andeq	r0, r0, r4, lsr #1
    2538:	15082302 	strne	r2, [r8, #-770]	@ 0xfffffcfe
    253c:	00000b7f 	andeq	r0, r0, pc, ror fp
    2540:	11021108 	tstne	r2, r8, lsl #2
    2544:	000000a4 	andeq	r0, r0, r4, lsr #1
    2548:	160c2302 	strne	r2, [ip], -r2, lsl #6
    254c:	08005253 	stmdaeq	r0, {r0, r1, r4, r6, r9, ip, lr}
    2550:	a4110212 	ldrge	r0, [r1], #-530	@ 0xfffffdee
    2554:	02000000 	andeq	r0, r0, #0
    2558:	45161023 	ldrmi	r1, [r6, #-35]	@ 0xffffffdd
    255c:	08005247 	stmdaeq	r0, {r0, r1, r2, r6, r9, ip, lr}
    2560:	a4110213 	ldrge	r0, [r1], #-531	@ 0xfffffded
    2564:	02000000 	andeq	r0, r0, #0
    2568:	3f151423 	svccc	0x00151423
    256c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2570:	a4110214 	ldrge	r0, [r1], #-532	@ 0xfffffdec
    2574:	02000000 	andeq	r0, r0, #0
    2578:	45151823 	ldrmi	r1, [r5, #-2083]	@ 0xfffff7dd
    257c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2580:	a4110215 	ldrge	r0, [r1], #-533	@ 0xfffffdeb
    2584:	02000000 	andeq	r0, r0, #0
    2588:	23151c23 	tstcs	r5, #8960	@ 0x2300
    258c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2590:	a4110216 	ldrge	r0, [r1], #-534	@ 0xfffffdea
    2594:	02000000 	andeq	r0, r0, #0
    2598:	43162023 	tstmi	r6, #35	@ 0x23
    259c:	0800544e 	stmdaeq	r0, {r1, r2, r3, r6, sl, ip, lr}
    25a0:	a4110217 	ldrge	r0, [r1], #-535	@ 0xfffffde9
    25a4:	02000000 	andeq	r0, r0, #0
    25a8:	50162423 	andspl	r2, r6, r3, lsr #8
    25ac:	08004353 	stmdaeq	r0, {r0, r1, r4, r6, r8, r9, lr}
    25b0:	a4110218 	ldrge	r0, [r1], #-536	@ 0xfffffde8
    25b4:	02000000 	andeq	r0, r0, #0
    25b8:	41162823 	tstmi	r6, r3, lsr #16
    25bc:	08005252 	stmdaeq	r0, {r1, r4, r6, r9, ip, lr}
    25c0:	a4110219 	ldrge	r0, [r1], #-537	@ 0xfffffde7
    25c4:	02000000 	andeq	r0, r0, #0
    25c8:	92152c23 	andsls	r2, r5, #8960	@ 0x2300
    25cc:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    25d0:	9811021a 	ldmdals	r1, {r1, r3, r4, r9}
    25d4:	02000000 	andeq	r0, r0, #0
    25d8:	35153023 	ldrcc	r3, [r5, #-35]	@ 0xffffffdd
    25dc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    25e0:	a411021b 	ldrge	r0, [r1], #-539	@ 0xfffffde5
    25e4:	02000000 	andeq	r0, r0, #0
    25e8:	3a153423 	bcc	54f67c <_Min_Stack_Size+0x54f27c>
    25ec:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    25f0:	a411021c 	ldrge	r0, [r1], #-540	@ 0xfffffde4
    25f4:	02000000 	andeq	r0, r0, #0
    25f8:	51153823 	tstpl	r5, r3, lsr #16
    25fc:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2600:	a411021d 	ldrge	r0, [r1], #-541	@ 0xfffffde3
    2604:	02000000 	andeq	r0, r0, #0
    2608:	56153c23 	ldrpl	r3, [r5], -r3, lsr #24
    260c:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2610:	a411021e 	ldrge	r0, [r1], #-542	@ 0xfffffde2
    2614:	02000000 	andeq	r0, r0, #0
    2618:	9d154023 	ldcls	0, cr4, [r5, #-140]	@ 0xffffff74
    261c:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2620:	9811021f 	ldmdals	r1, {r0, r1, r2, r3, r4, r9}
    2624:	02000000 	andeq	r0, r0, #0
    2628:	44164423 	ldrmi	r4, [r6], #-1059	@ 0xfffffbdd
    262c:	08005243 	stmdaeq	r0, {r0, r1, r6, r9, ip, lr}
    2630:	a4110220 	ldrge	r0, [r1], #-544	@ 0xfffffde0
    2634:	02000000 	andeq	r0, r0, #0
    2638:	df154823 	svcle	0x00154823
    263c:	0800000c 	stmdaeq	r0, {r2, r3}
    2640:	a4110221 	ldrge	r0, [r1], #-545	@ 0xfffffddf
    2644:	02000000 	andeq	r0, r0, #0
    2648:	4f164c23 	svcmi	0x00164c23
    264c:	22080052 	andcs	r0, r8, #82	@ 0x52
    2650:	00a41102 	adceq	r1, r4, r2, lsl #2
    2654:	23020000 	movwcs	r0, #8192	@ 0x2000
    2658:	17170050 			@ <UNDEFINED> instruction: 0x17170050
    265c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2660:	7a030223 	bvc	c2ef4 <_Min_Stack_Size+0xc2af4>
    2664:	14000007 	strne	r0, [r0], #-7
    2668:	02370854 	eorseq	r0, r7, #84, 16	@ 0x540000
    266c:	000a8b09 	andeq	r8, sl, r9, lsl #22
    2670:	06361500 	ldrteq	r1, [r6], -r0, lsl #10
    2674:	39080000 	stmdbcc	r8, {}	@ <UNPREDICTABLE>
    2678:	00871102 	addeq	r1, r7, r2, lsl #2
    267c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2680:	08281500 	stmdaeq	r8!, {r8, sl, ip}
    2684:	3a080000 	bcc	20268c <_Min_Stack_Size+0x20228c>
    2688:	00871102 	addeq	r1, r7, r2, lsl #2
    268c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2690:	06871502 	streq	r1, [r7], r2, lsl #10
    2694:	3b080000 	blcc	20269c <_Min_Stack_Size+0x20229c>
    2698:	00871102 	addeq	r1, r7, r2, lsl #2
    269c:	23020000 	movwcs	r0, #8192	@ 0x2000
    26a0:	08321504 	ldmdaeq	r2!, {r2, r8, sl, ip}
    26a4:	3c080000 	stccc	0, cr0, [r8], {-0}
    26a8:	00871102 	addeq	r1, r7, r2, lsl #2
    26ac:	23020000 	movwcs	r0, #8192	@ 0x2000
    26b0:	071f1506 	ldreq	r1, [pc, -r6, lsl #10]
    26b4:	3d080000 	stccc	0, cr0, [r8, #-0]
    26b8:	00871102 	addeq	r1, r7, r2, lsl #2
    26bc:	23020000 	movwcs	r0, #8192	@ 0x2000
    26c0:	083c1508 	ldmdaeq	ip!, {r3, r8, sl, ip}
    26c4:	3e080000 	cdpcc	0, 0, cr0, cr8, cr0, {0}
    26c8:	00871102 	addeq	r1, r7, r2, lsl #2
    26cc:	23020000 	movwcs	r0, #8192	@ 0x2000
    26d0:	074e150a 	strbeq	r1, [lr, -sl, lsl #10]
    26d4:	3f080000 	svccc	0x00080000
    26d8:	00871102 	addeq	r1, r7, r2, lsl #2
    26dc:	23020000 	movwcs	r0, #8192	@ 0x2000
    26e0:	0846150c 	stmdaeq	r6, {r2, r3, r8, sl, ip}^
    26e4:	40080000 	andmi	r0, r8, r0
    26e8:	00871102 	addeq	r1, r7, r2, lsl #2
    26ec:	23020000 	movwcs	r0, #8192	@ 0x2000
    26f0:	09d5150e 	ldmibeq	r5, {r1, r2, r3, r8, sl, ip}^
    26f4:	41080000 	mrsmi	r0, (UNDEF: 8)
    26f8:	00871102 	addeq	r1, r7, r2, lsl #2
    26fc:	23020000 	movwcs	r0, #8192	@ 0x2000
    2700:	08501510 	ldmdaeq	r0, {r4, r8, sl, ip}^
    2704:	42080000 	andmi	r0, r8, #0
    2708:	00871102 	addeq	r1, r7, r2, lsl #2
    270c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2710:	08231512 	stmdaeq	r3!, {r1, r4, r8, sl, ip}
    2714:	43080000 	movwmi	r0, #32768	@ 0x8000
    2718:	00871102 	addeq	r1, r7, r2, lsl #2
    271c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2720:	085a1514 	ldmdaeq	sl, {r2, r4, r8, sl, ip}^
    2724:	44080000 	strmi	r0, [r8], #-0
    2728:	00871102 	addeq	r1, r7, r2, lsl #2
    272c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2730:	08c71516 	stmiaeq	r7, {r1, r2, r4, r8, sl, ip}^
    2734:	45080000 	strmi	r0, [r8, #-0]
    2738:	00871102 	addeq	r1, r7, r2, lsl #2
    273c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2740:	08641518 	stmdaeq	r4!, {r3, r4, r8, sl, ip}^
    2744:	46080000 	strmi	r0, [r8], -r0
    2748:	00871102 	addeq	r1, r7, r2, lsl #2
    274c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2750:	0943151a 	stmdbeq	r3, {r1, r3, r4, r8, sl, ip}^
    2754:	47080000 	strmi	r0, [r8, -r0]
    2758:	00871102 	addeq	r1, r7, r2, lsl #2
    275c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2760:	0313151c 	tsteq	r3, #28, 10	@ 0x7000000
    2764:	48080000 	stmdami	r8, {}	@ <UNPREDICTABLE>
    2768:	0a9b1102 	beq	fe6c6b78 <BootRAM+0xd637319>
    276c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2770:	08ef151e 	stmiaeq	pc!, {r1, r2, r3, r4, r8, sl, ip}^	@ <UNPREDICTABLE>
    2774:	49080000 	stmdbmi	r8, {}	@ <UNPREDICTABLE>
    2778:	00871102 	addeq	r1, r7, r2, lsl #2
    277c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2780:	0a7a1540 	beq	1e87c88 <_Min_Stack_Size+0x1e87888>
    2784:	4a080000 	bmi	20278c <_Min_Stack_Size+0x20238c>
    2788:	00871102 	addeq	r1, r7, r2, lsl #2
    278c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2790:	052a1542 	streq	r1, [sl, #-1346]!	@ 0xfffffabe
    2794:	4b080000 	blmi	20279c <_Min_Stack_Size+0x20239c>
    2798:	00871102 	addeq	r1, r7, r2, lsl #2
    279c:	23020000 	movwcs	r0, #8192	@ 0x2000
    27a0:	087f1544 	ldmdaeq	pc!, {r2, r6, r8, sl, ip}^	@ <UNPREDICTABLE>
    27a4:	4c080000 	stcmi	0, cr0, [r8], {-0}
    27a8:	00871102 	addeq	r1, r7, r2, lsl #2
    27ac:	23020000 	movwcs	r0, #8192	@ 0x2000
    27b0:	4e461646 	cdpmi	6, 4, cr1, cr6, cr6, {2}
    27b4:	4d080052 	stcmi	0, cr0, [r8, #-328]	@ 0xfffffeb8
    27b8:	00871102 	addeq	r1, r7, r2, lsl #2
    27bc:	23020000 	movwcs	r0, #8192	@ 0x2000
    27c0:	08891548 	stmeq	r9, {r3, r6, r8, sl, ip}
    27c4:	4e080000 	cdpmi	0, 0, cr0, cr8, cr0, {0}
    27c8:	00871102 	addeq	r1, r7, r2, lsl #2
    27cc:	23020000 	movwcs	r0, #8192	@ 0x2000
    27d0:	05d2154a 	ldrbeq	r1, [r2, #1354]	@ 0x54a
    27d4:	4f080000 	svcmi	0x00080000
    27d8:	00871102 	addeq	r1, r7, r2, lsl #2
    27dc:	23020000 	movwcs	r0, #8192	@ 0x2000
    27e0:	0a90154c 	beq	fe407d18 <BootRAM+0xd3784b9>
    27e4:	50080000 	andpl	r0, r8, r0
    27e8:	00871102 	addeq	r1, r7, r2, lsl #2
    27ec:	23020000 	movwcs	r0, #8192	@ 0x2000
    27f0:	0a0b154e 	beq	2c7d30 <_Min_Stack_Size+0x2c7930>
    27f4:	51080000 	mrspl	r0, (UNDEF: 8)
    27f8:	00871102 	addeq	r1, r7, r2, lsl #2
    27fc:	23020000 	movwcs	r0, #8192	@ 0x2000
    2800:	0a9a1550 	beq	fe687d48 <BootRAM+0xd5f84e9>
    2804:	52080000 	andpl	r0, r8, #0
    2808:	00871102 	addeq	r1, r7, r2, lsl #2
    280c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2810:	87110052 			@ <UNDEFINED> instruction: 0x87110052
    2814:	9b000000 	blls	281c <_Min_Stack_Size+0x241c>
    2818:	1200000a 	andne	r0, r0, #10
    281c:	000000be 	strheq	r0, [r0], -lr
    2820:	8b040010 	blhi	102868 <_Min_Stack_Size+0x102468>
    2824:	1700000a 	strne	r0, [r0, -sl]
    2828:	000005c6 	andeq	r0, r0, r6, asr #11
    282c:	03025308 	movweq	r5, #8968	@ 0x2308
    2830:	000008e0 	andeq	r0, r0, r0, ror #17
    2834:	a6040802 	strge	r0, [r4], -r2, lsl #16
    2838:	1800000c 	stmdane	r0, {r2, r3}
    283c:	08010204 	stmdaeq	r1, {r2, r9}
    2840:	0000021f 	andeq	r0, r0, pc, lsl r2
    2844:	0003ed19 	andeq	lr, r3, r9, lsl sp
    2848:	1a050500 	bne	143c50 <_Min_Stack_Size+0x143850>
    284c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2850:	38110101 	ldmdacc	r1, {r0, r8}
    2854:	db000000 	blle	285c <_Min_Stack_Size+0x245c>
    2858:	1200000a 	andne	r0, r0, #10
    285c:	000000be 	strheq	r0, [r0], -lr
    2860:	cb04002b 	blgt	102914 <_Min_Stack_Size+0x102514>
    2864:	1a00000a 	bne	2894 <_Min_Stack_Size+0x2494>
    2868:	00000c04 	andeq	r0, r0, r4, lsl #24
    286c:	db120e02 	blle	48607c <_Min_Stack_Size+0x485c7c>
    2870:	0100000a 	tsteq	r0, sl
    2874:	007e0305 	rsbseq	r0, lr, r5, lsl #6
    2878:	401a2000 	andsmi	r2, sl, r0
    287c:	0200000d 	andeq	r0, r0, #13
    2880:	006a1210 	rsbeq	r1, sl, r0, lsl r2
    2884:	05010000 	streq	r0, [r1, #-0]
    2888:	00007c03 	andeq	r7, r0, r3, lsl #24
    288c:	0abd1a20 	beq	fef49114 <BootRAM+0xdeb98b5>
    2890:	56020000 	strpl	r0, [r2], -r0
    2894:	00006a12 	andeq	r6, r0, r2, lsl sl
    2898:	03050100 	movweq	r0, #20736	@ 0x5100
    289c:	200000da 	ldrdcs	r0, [r0], -sl
    28a0:	000ad01a 	andeq	sp, sl, sl, lsl r0
    28a4:	13570200 	cmpne	r7, #0, 4
    28a8:	00000087 	andeq	r0, r0, r7, lsl #1
    28ac:	dc030501 	cfstr32le	mvfx0, [r3], {1}
    28b0:	1b200000 	blne	8028b8 <_Min_Stack_Size+0x8024b8>
    28b4:	00000d67 	andeq	r0, r0, r7, ror #26
    28b8:	19090402 	stmdbne	r9, {r1, sl}
    28bc:	00000b49 	andeq	r0, r0, r9, asr #22
    28c0:	000ade0b 	andeq	sp, sl, fp, lsl #28
    28c4:	0c0a0400 	cfstrseq	mvf0, [sl], {-0}
    28c8:	0000007b 	andeq	r0, r0, fp, ror r0
    28cc:	00002302 	andeq	r2, r0, r2, lsl #6
    28d0:	000b2c04 	andeq	r2, fp, r4, lsl #24
    28d4:	0d720300 	ldcleq	3, cr0, [r2, #-0]
    28d8:	0b040000 	bleq	1028e0 <_Min_Stack_Size+0x1024e0>
    28dc:	000b4902 	andeq	r4, fp, r2, lsl #18
    28e0:	0ada1a00 	beq	ff6890e8 <BootRAM+0xe5f9889>
    28e4:	0c040000 	stceq	0, cr0, [r4], {-0}
    28e8:	000b4e0c 	andeq	r4, fp, ip, lsl #28
    28ec:	03050100 	movweq	r0, #20736	@ 0x5100
    28f0:	200000e0 	andcs	r0, r0, r0, ror #1
    28f4:	000b4b1c 	andeq	r4, fp, ip, lsl fp
    28f8:	1a0f0400 	bne	3c3900 <_Min_Stack_Size+0x3c3500>
    28fc:	000000a4 	andeq	r0, r0, r4, lsr #1
    2900:	00e40305 	rsceq	r0, r4, r5, lsl #6
    2904:	6f112000 	svcvs	0x00112000
    2908:	8f000000 	svchi	0x00000000
    290c:	1200000b 	andne	r0, r0, #11
    2910:	000000be 	strheq	r0, [r0], -lr
    2914:	7f050014 	svcvc	0x00050014
    2918:	1c00000b 	stcne	0, cr0, [r0], {11}
    291c:	00000b60 	andeq	r0, r0, r0, ror #22
    2920:	8f161104 	svchi	0x00161104
    2924:	0500000b 	streq	r0, [r0, #-11]
    2928:	0017c603 	andseq	ip, r7, r3, lsl #12
    292c:	0d0e1b08 	vstreq	d1, [lr, #-32]	@ 0xffffffe0
    2930:	01040000 	mrseq	r0, (UNDEF: 4)
    2934:	0be10112 	bleq	ff842d84 <BootRAM+0xe7b3525>
    2938:	4a0b0000 	bmi	2c2940 <_Min_Stack_Size+0x2c2540>
    293c:	0100000e 	tsteq	r0, lr
    2940:	005e0112 	subseq	r0, lr, r2, lsl r1
    2944:	23020000 	movwcs	r0, #8192	@ 0x2000
    2948:	0da80b00 			@ <UNDEFINED> instruction: 0x0da80b00
    294c:	12010000 	andne	r0, r1, #0
    2950:	00005e01 	andeq	r5, r0, r1, lsl #28
    2954:	01230200 			@ <UNDEFINED> instruction: 0x01230200
    2958:	000ce40b 	andeq	lr, ip, fp, lsl #8
    295c:	01120100 	tsteq	r2, r0, lsl #2
    2960:	00000be6 	andeq	r0, r0, r6, ror #23
    2964:	00022302 	andeq	r2, r2, r2, lsl #6
    2968:	000ba605 	andeq	sl, fp, r5, lsl #12
    296c:	007b1100 	rsbseq	r1, fp, r0, lsl #2
    2970:	0bf60000 	bleq	ffd82978 <BootRAM+0xecf3119>
    2974:	be120000 	cdplt	0, 1, cr0, cr2, cr0, {0}
    2978:	00000000 	andeq	r0, r0, r0
    297c:	0d0e1d00 	stceq	13, cr1, [lr, #-0]
    2980:	12010000 	andne	r0, r1, #0
    2984:	000be101 	andeq	lr, fp, r1, lsl #2
    2988:	03050200 	movweq	r0, #20992	@ 0x5200
    298c:	080017dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, ip}
    2990:	000db81b 	andeq	fp, sp, fp, lsl r8
    2994:	13011600 	movwne	r1, #5632	@ 0x1600
    2998:	000c4401 	andeq	r4, ip, r1, lsl #8
    299c:	0e4a0b00 	vmlaeq.f64	d16, d10, d0
    29a0:	13010000 	movwne	r0, #4096	@ 0x1000
    29a4:	00005e01 	andeq	r5, r0, r1, lsl #28
    29a8:	00230200 	eoreq	r0, r3, r0, lsl #4
    29ac:	000da80b 	andeq	sl, sp, fp, lsl #16
    29b0:	01130100 	tsteq	r3, r0, lsl #2
    29b4:	0000005e 	andeq	r0, r0, lr, asr r0
    29b8:	0b012302 	bleq	4b5c8 <_Min_Stack_Size+0x4b1c8>
    29bc:	00000ce4 	andeq	r0, r0, r4, ror #25
    29c0:	49011301 	stmdbmi	r1, {r0, r8, r9, ip}
    29c4:	0200000c 	andeq	r0, r0, #12
    29c8:	05000223 	streq	r0, [r0, #-547]	@ 0xfffffddd
    29cc:	00000c09 	andeq	r0, r0, r9, lsl #24
    29d0:	00007b11 	andeq	r7, r0, r1, lsl fp
    29d4:	000c5900 	andeq	r5, ip, r0, lsl #18
    29d8:	00be1200 	adcseq	r1, lr, r0, lsl #4
    29dc:	00090000 	andeq	r0, r9, r0
    29e0:	000db81d 	andeq	fp, sp, sp, lsl r8
    29e4:	01130100 	tsteq	r3, r0, lsl #2
    29e8:	00000c44 	andeq	r0, r0, r4, asr #24
    29ec:	e0030502 	and	r0, r3, r2, lsl #10
    29f0:	1b080017 	blne	202a54 <_Min_Stack_Size+0x202654>
    29f4:	00000df9 	strdeq	r0, [r0], -r9
    29f8:	01140122 	tsteq	r4, r2, lsr #2
    29fc:	00000ca7 	andeq	r0, r0, r7, lsr #25
    2a00:	000e4a0b 	andeq	r4, lr, fp, lsl #20
    2a04:	01140100 	tsteq	r4, r0, lsl #2
    2a08:	0000005e 	andeq	r0, r0, lr, asr r0
    2a0c:	0b002302 	bleq	b61c <_Min_Stack_Size+0xb21c>
    2a10:	00000da8 	andeq	r0, r0, r8, lsr #27
    2a14:	5e011401 	cdppl	4, 0, cr1, cr1, cr1, {0}
    2a18:	02000000 	andeq	r0, r0, #0
    2a1c:	e40b0123 	str	r0, [fp], #-291	@ 0xfffffedd
    2a20:	0100000c 	tsteq	r0, ip
    2a24:	0cac0114 	stfeqs	f0, [ip], #80	@ 0x50
    2a28:	23020000 	movwcs	r0, #8192	@ 0x2000
    2a2c:	6c050002 	stcvs	0, cr0, [r5], {2}
    2a30:	1100000c 	tstne	r0, ip
    2a34:	0000007b 	andeq	r0, r0, fp, ror r0
    2a38:	00000cbc 			@ <UNDEFINED> instruction: 0x00000cbc
    2a3c:	0000be12 	andeq	fp, r0, r2, lsl lr
    2a40:	1d000f00 	stcne	15, cr0, [r0, #-0]
    2a44:	00000df9 	strdeq	r0, [r0], -r9
    2a48:	a7011401 	strge	r1, [r1, -r1, lsl #8]
    2a4c:	0200000c 	andeq	r0, r0, #12
    2a50:	17f60305 	ldrbne	r0, [r6, r5, lsl #6]!
    2a54:	f31b0800 	vsub.i16	d0, d11, d0
    2a58:	0400000c 	streq	r0, [r0], #-12
    2a5c:	0a011501 	beq	47e68 <_Min_Stack_Size+0x47a68>
    2a60:	0b00000d 	bleq	2a9c <_Min_Stack_Size+0x269c>
    2a64:	00000e4a 	andeq	r0, r0, sl, asr #28
    2a68:	5e011501 	cfsh32pl	mvfx1, mvfx1, #1
    2a6c:	02000000 	andeq	r0, r0, #0
    2a70:	a80b0023 	stmdage	fp, {r0, r1, r5}
    2a74:	0100000d 	tsteq	r0, sp
    2a78:	005e0115 	subseq	r0, lr, r5, lsl r1
    2a7c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2a80:	0ce40b01 	fstmiaxeq	r4!, {d16-d15}	@ Deprecated
    2a84:	15010000 	strne	r0, [r1, #-0]
    2a88:	000be601 	andeq	lr, fp, r1, lsl #12
    2a8c:	02230200 	eoreq	r0, r3, #0, 4
    2a90:	0ccf0500 	cfstr64eq	mvdx0, [pc], {0}
    2a94:	f31d0000 	vhadd.u16	d0, d13, d0
    2a98:	0100000c 	tsteq	r0, ip
    2a9c:	0d0a0115 	stfeqs	f0, [sl, #-84]	@ 0xffffffac
    2aa0:	05020000 	streq	r0, [r2, #-0]
    2aa4:	00181803 	andseq	r1, r8, r3, lsl #16
    2aa8:	0dda1b08 	vldreq	d17, [sl, #32]
    2aac:	01120000 	tsteq	r2, r0
    2ab0:	0d5d0116 	ldfeqe	f0, [sp, #-88]	@ 0xffffffa8
    2ab4:	4a0b0000 	bmi	2c2abc <_Min_Stack_Size+0x2c26bc>
    2ab8:	0100000e 	tsteq	r0, lr
    2abc:	005e0116 	subseq	r0, lr, r6, lsl r1
    2ac0:	23020000 	movwcs	r0, #8192	@ 0x2000
    2ac4:	0da80b00 			@ <UNDEFINED> instruction: 0x0da80b00
    2ac8:	16010000 	strne	r0, [r1], -r0
    2acc:	00005e01 	andeq	r5, r0, r1, lsl #28
    2ad0:	01230200 			@ <UNDEFINED> instruction: 0x01230200
    2ad4:	000ce40b 	andeq	lr, ip, fp, lsl #8
    2ad8:	01160100 	tsteq	r6, r0, lsl #2
    2adc:	00000d62 	andeq	r0, r0, r2, ror #26
    2ae0:	00022302 	andeq	r2, r2, r2, lsl #6
    2ae4:	000d2205 	andeq	r2, sp, r5, lsl #4
    2ae8:	007b1100 	rsbseq	r1, fp, r0, lsl #2
    2aec:	0d720000 	ldcleq	0, cr0, [r2, #-0]
    2af0:	be120000 	cdplt	0, 1, cr0, cr2, cr0, {0}
    2af4:	07000000 	streq	r0, [r0, -r0]
    2af8:	0dda1d00 	ldcleq	13, cr1, [sl]
    2afc:	16010000 	strne	r0, [r1], -r0
    2b00:	000d5d01 	andeq	r5, sp, r1, lsl #26
    2b04:	03050200 	movweq	r0, #20992	@ 0x5200
    2b08:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
    2b0c:	000c0f1b 	andeq	r0, ip, fp, lsl pc
    2b10:	17011400 	strne	r1, [r1, -r0, lsl #8]
    2b14:	000dc001 	andeq	ip, sp, r1
    2b18:	0e4a0b00 	vmlaeq.f64	d16, d10, d0
    2b1c:	17010000 	strne	r0, [r1, -r0]
    2b20:	00005e01 	andeq	r5, r0, r1, lsl #28
    2b24:	00230200 	eoreq	r0, r3, r0, lsl #4
    2b28:	000da80b 	andeq	sl, sp, fp, lsl #16
    2b2c:	01170100 	tsteq	r7, r0, lsl #2
    2b30:	0000005e 	andeq	r0, r0, lr, asr r0
    2b34:	0b012302 	bleq	4b744 <_Min_Stack_Size+0x4b344>
    2b38:	00000ce4 	andeq	r0, r0, r4, ror #25
    2b3c:	c5011701 	strgt	r1, [r1, #-1793]	@ 0xfffff8ff
    2b40:	0200000d 	andeq	r0, r0, #13
    2b44:	05000223 	streq	r0, [r0, #-547]	@ 0xfffffddd
    2b48:	00000d85 	andeq	r0, r0, r5, lsl #27
    2b4c:	00007b11 	andeq	r7, r0, r1, lsl fp
    2b50:	000dd500 	andeq	sp, sp, r0, lsl #10
    2b54:	00be1200 	adcseq	r1, lr, r0, lsl #4
    2b58:	00080000 	andeq	r0, r8, r0
    2b5c:	000c0f1d 	andeq	r0, ip, sp, lsl pc
    2b60:	01170100 	tsteq	r7, r0, lsl #2
    2b64:	00000dc0 	andeq	r0, r0, r0, asr #27
    2b68:	2e030502 	cfsh32cs	mvfx0, mvfx3, #2
    2b6c:	1b080018 	blne	202bd4 <_Min_Stack_Size+0x2027d4>
    2b70:	00000e36 	andeq	r0, r0, r6, lsr lr
    2b74:	01180112 	tsteq	r8, r2, lsl r1
    2b78:	00000e23 	andeq	r0, r0, r3, lsr #28
    2b7c:	000e4a0b 	andeq	r4, lr, fp, lsl #20
    2b80:	01180100 	tsteq	r8, r0, lsl #2
    2b84:	0000005e 	andeq	r0, r0, lr, asr r0
    2b88:	0b002302 	bleq	b798 <_Min_Stack_Size+0xb398>
    2b8c:	00000da8 	andeq	r0, r0, r8, lsr #27
    2b90:	5e011801 	cdppl	8, 0, cr1, cr1, cr1, {0}
    2b94:	02000000 	andeq	r0, r0, #0
    2b98:	e40b0123 	str	r0, [fp], #-291	@ 0xfffffedd
    2b9c:	0100000c 	tsteq	r0, ip
    2ba0:	0d620118 	stfeqe	f0, [r2, #-96]!	@ 0xffffffa0
    2ba4:	23020000 	movwcs	r0, #8192	@ 0x2000
    2ba8:	e8050002 	stmda	r5, {r1}
    2bac:	1d00000d 	stcne	0, cr0, [r0, #-52]	@ 0xffffffcc
    2bb0:	00000e36 	andeq	r0, r0, r6, lsr lr
    2bb4:	23011801 	movwcs	r1, #6145	@ 0x1801
    2bb8:	0200000e 	andeq	r0, r0, #14
    2bbc:	18420305 	stmdane	r2, {r0, r2, r8, r9}^
    2bc0:	6f110800 	svcvs	0x00110800
    2bc4:	4b000000 	blmi	2bcc <_Min_Stack_Size+0x27cc>
    2bc8:	1200000e 	andne	r0, r0, #14
    2bcc:	000000be 	strheq	r0, [r0], -lr
    2bd0:	3b050011 	blcc	142c1c <_Min_Stack_Size+0x14281c>
    2bd4:	1c00000e 	stcne	0, cr0, [r0], {14}
    2bd8:	00000d7d 	andeq	r0, r0, sp, ror sp
    2bdc:	4b162601 	blmi	58c3e8 <_Min_Stack_Size+0x58bfe8>
    2be0:	0500000e 	streq	r0, [r0, #-14]
    2be4:	00185403 	andseq	r5, r8, r3, lsl #8
    2be8:	006f1108 	rsbeq	r1, pc, r8, lsl #2
    2bec:	0e720000 	cdpeq	0, 7, cr0, cr2, cr0, {0}
    2bf0:	be120000 	cdplt	0, 1, cr0, cr2, cr0, {0}
    2bf4:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    2bf8:	0e620500 	cdpeq	5, 6, cr0, cr2, cr0, {0}
    2bfc:	201c0000 	andscs	r0, ip, r0
    2c00:	0100000c 	tsteq	r0, ip
    2c04:	0e721639 	mrceq	6, 3, r1, cr2, cr9, {1}
    2c08:	03050000 	movweq	r0, #20480	@ 0x5000
    2c0c:	080019aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, fp, ip}
    2c10:	00006f11 	andeq	r6, r0, r1, lsl pc
    2c14:	000e9a00 	andeq	r9, lr, r0, lsl #20
    2c18:	00be1300 	adcseq	r1, lr, r0, lsl #6
    2c1c:	01430000 	mrseq	r0, (UNDEF: 67)
    2c20:	0e890500 	cdpeq	5, 8, cr0, cr9, cr0, {0}
    2c24:	be1c0000 	cdplt	0, 1, cr0, cr12, cr0, {0}
    2c28:	0100000b 	tsteq	r0, fp
    2c2c:	0e9a1647 	cdpeq	6, 9, cr1, cr10, cr7, {2}
    2c30:	03050000 	movweq	r0, #20480	@ 0x5000
    2c34:	08001866 	stmdaeq	r0, {r1, r2, r5, r6, fp, ip}
    2c38:	0c3e011e 	ldfeqs	f0, [lr], #-120	@ 0xffffff88
    2c3c:	0c090000 	stceq	0, cr0, [r9], {-0}
    2c40:	0ec10106 	poleqs	f0, f1, f6
    2c44:	001f0000 	andseq	r0, pc, r0
    2c48:	0c4b011e 	stfeqe	f0, [fp], {30}
    2c4c:	0a0a0000 	beq	282c54 <_Min_Stack_Size+0x282854>
    2c50:	0ed10106 	cdpeq	1, 13, cr0, cr1, cr6, {0}
    2c54:	001f0000 	andseq	r0, pc, r0
    2c58:	05820120 	streq	r0, [r2, #288]	@ 0x120
    2c5c:	b3030000 	movwlt	r0, #12288	@ 0x3000
    2c60:	f0010106 			@ <UNDEFINED> instruction: 0xf0010106
    2c64:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2c68:	0000005e 	andeq	r0, r0, lr, asr r0
    2c6c:	000ef009 	andeq	pc, lr, r9
    2c70:	007b0900 	rsbseq	r0, fp, r0, lsl #18
    2c74:	07000000 	streq	r0, [r0, -r0]
    2c78:	00008c04 	andeq	r8, r0, r4, lsl #24
    2c7c:	b5012000 	strlt	r2, [r1, #-0]
    2c80:	03000009 	movweq	r0, #9
    2c84:	0101062a 	tsteq	r1, sl, lsr #12
    2c88:	00000f1a 	andeq	r0, r0, sl, lsl pc
    2c8c:	00005e09 	andeq	r5, r0, r9, lsl #28
    2c90:	005e0900 	subseq	r0, lr, r0, lsl #18
    2c94:	7b090000 	blvc	242c9c <_Min_Stack_Size+0x24289c>
    2c98:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    2c9c:	000000c5 	andeq	r0, r0, r5, asr #1
    2ca0:	28011e00 	stmdacs	r1, {r9, sl, fp, ip}
    2ca4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2ca8:	2a01060b 	bcs	444dc <_Min_Stack_Size+0x440dc>
    2cac:	1f00000f 	svcne	0x0000000f
    2cb0:	e9011e00 	stmdb	r1, {r9, sl, fp, ip}
    2cb4:	0a00000d 	beq	2cf0 <_Min_Stack_Size+0x28f0>
    2cb8:	3a010609 	bcc	444e4 <_Min_Stack_Size+0x440e4>
    2cbc:	1f00000f 	svcne	0x0000000f
    2cc0:	7a012100 	bvc	4b0c8 <_Min_Stack_Size+0x4acc8>
    2cc4:	0900000c 	stmdbeq	r0, {r2, r3}
    2cc8:	b601060a 	strlt	r0, [r1], -sl, lsl #12
    2ccc:	0100000a 	tsteq	r0, sl
    2cd0:	00000f5d 	andeq	r0, r0, sp, asr pc
    2cd4:	000f5d09 	andeq	r5, pc, r9, lsl #26
    2cd8:	007b0900 	rsbseq	r0, fp, r0, lsl #18
    2cdc:	7b090000 	blvc	242ce4 <_Min_Stack_Size+0x2428e4>
    2ce0:	00000000 	andeq	r0, r0, r0
    2ce4:	01380407 	teqeq	r8, r7, lsl #8
    2ce8:	01210000 			@ <UNDEFINED> instruction: 0x01210000
    2cec:	00000b84 	andeq	r0, r0, r4, lsl #23
    2cf0:	0106080a 	tsteq	r6, sl, lsl #16
    2cf4:	00000ab6 			@ <UNDEFINED> instruction: 0x00000ab6
    2cf8:	000f8601 	andeq	r8, pc, r1, lsl #12
    2cfc:	0f5d0900 	svceq	0x005d0900
    2d00:	7b090000 	blvc	242d08 <_Min_Stack_Size+0x242908>
    2d04:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    2d08:	0000007b 	andeq	r0, r0, fp, ror r0
    2d0c:	97012100 	strls	r2, [r1, -r0, lsl #2]
    2d10:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    2d14:	b6010609 	strlt	r0, [r1], -r9, lsl #12
    2d18:	0100000a 	tsteq	r0, sl
    2d1c:	00000fa9 	andeq	r0, r0, r9, lsr #31
    2d20:	000f5d09 	andeq	r5, pc, r9, lsl #26
    2d24:	0fa90900 	svceq	0x00a90900
    2d28:	af090000 	svcge	0x00090000
    2d2c:	0000000f 	andeq	r0, r0, pc
    2d30:	0ab40407 	beq	fed03d54 <BootRAM+0xdc744f5>
    2d34:	04070000 	streq	r0, [r7], #-0
    2d38:	0000007b 	andeq	r0, r0, fp, ror r0
    2d3c:	0bac0121 	bleq	feb031c8 <BootRAM+0xda73969>
    2d40:	070a0000 	streq	r0, [sl, -r0]
    2d44:	0ab60106 	beq	fed83164 <BootRAM+0xdcf3905>
    2d48:	d8010000 	stmdale	r1, {}	@ <UNPREDICTABLE>
    2d4c:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2d50:	00000f5d 	andeq	r0, r0, sp, asr pc
    2d54:	000fa909 	andeq	sl, pc, r9, lsl #18
    2d58:	0faf0900 	svceq	0x00af0900
    2d5c:	21000000 	mrscs	r0, (UNDEF: 0)
    2d60:	0006d701 	andeq	sp, r6, r1, lsl #14
    2d64:	05c00300 	strbeq	r0, [r0, #768]	@ 0x300
    2d68:	0000b701 	andeq	fp, r0, r1, lsl #14
    2d6c:	0ff60100 	svceq	0x00f60100
    2d70:	5e090000 	cdppl	0, 0, cr0, cr9, cr0, {0}
    2d74:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    2d78:	00000faf 	andeq	r0, r0, pc, lsr #31
    2d7c:	e5012200 	str	r2, [r1, #-512]	@ 0xfffffe00
    2d80:	01000004 	tsteq	r0, r4
    2d84:	b6060238 			@ <UNDEFINED> instruction: 0xb6060238
    2d88:	ba08000e 	blt	202dc8 <_Min_Stack_Size+0x2029c8>
    2d8c:	0208000e 	andeq	r0, r8, #14
    2d90:	1b01007d 	blne	42f8c <_Min_Stack_Size+0x42b8c>
    2d94:	23000010 	movwcs	r0, #16
    2d98:	08000eba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, sl, fp}
    2d9c:	0013f901 	andseq	pc, r3, r1, lsl #18
    2da0:	01240000 			@ <UNDEFINED> instruction: 0x01240000
    2da4:	00000304 	andeq	r0, r0, r4, lsl #6
    2da8:	06023101 	streq	r3, [r2], -r1, lsl #2
    2dac:	08000ea4 	stmdaeq	r0, {r2, r5, r7, r9, sl, fp}
    2db0:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
    2db4:	00000fff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    2db8:	00105301 	andseq	r5, r0, r1, lsl #6
    2dbc:	0eaa2500 	cdpeq	5, 10, cr2, cr10, cr0, {0}
    2dc0:	130e0800 	movwne	r0, #59392	@ 0xe800
    2dc4:	ae250000 	cdpge	0, 2, cr0, cr5, cr0, {0}
    2dc8:	c108000e 	tstgt	r8, lr
    2dcc:	2300000e 	movwcs	r0, #14
    2dd0:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
    2dd4:	000eb101 	andeq	fp, lr, r1, lsl #2
    2dd8:	01240000 			@ <UNDEFINED> instruction: 0x01240000
    2ddc:	00000701 	andeq	r0, r0, r1, lsl #14
    2de0:	06022a01 	streq	r2, [r2], -r1, lsl #20
    2de4:	08000d88 	stmdaeq	r0, {r3, r7, r8, sl, fp}
    2de8:	08000ea4 	stmdaeq	r0, {r2, r5, r7, r9, sl, fp}
    2dec:	0000102b 	andeq	r1, r0, fp, lsr #32
    2df0:	00114601 	andseq	r4, r1, r1, lsl #12
    2df4:	153b2600 	ldrne	r2, [fp, #-1536]!	@ 0xfffffa00
    2df8:	0d8e0000 	stceq	0, cr0, [lr]
    2dfc:	8e010800 	cdphi	8, 0, cr0, cr1, cr0, {0}
    2e00:	7e08000d 	cdpvc	0, 0, cr0, cr8, cr13, {0}
    2e04:	0108000e 	tsteq	r8, lr
    2e08:	2903022c 	stmdbcs	r3, {r2, r3, r5, r9}
    2e0c:	27000011 	smladcs	r0, r1, r0, r0
    2e10:	00001548 	andeq	r1, r0, r8, asr #10
    2e14:	08000d9a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, fp}
    2e18:	08000dac 	stmdaeq	r0, {r2, r3, r5, r7, r8, sl, fp}
    2e1c:	000010a7 	andeq	r1, r0, r7, lsr #1
    2e20:	00154d28 	andseq	r4, r5, r8, lsr #26
    2e24:	00105f00 	andseq	r5, r0, r0, lsl #30
    2e28:	00105700 	andseq	r5, r0, r0, lsl #14
    2e2c:	5a290000 	bpl	a42e34 <_Min_Stack_Size+0xa42a34>
    2e30:	c8000015 	stmdagt	r0, {r0, r2, r4}
    2e34:	c2000001 	andgt	r0, r0, #1
    2e38:	28000010 	stmdacs	r0, {r4}
    2e3c:	0000155f 	andeq	r1, r0, pc, asr r5
    2e40:	000010a2 	andeq	r1, r0, r2, lsr #1
    2e44:	0000109c 	muleq	r0, ip, r0
    2e48:	16f32a00 	ldrbtne	r2, [r3], r0, lsl #20
    2e4c:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    2e50:	e0010800 	and	r0, r1, r0, lsl #16
    2e54:	02000001 	andeq	r0, r0, #1
    2e58:	10e5032f 	rscne	r0, r5, pc, lsr #6
    2e5c:	022b0000 	eoreq	r0, fp, #0
    2e60:	da000017 	ble	2ec4 <_Min_Stack_Size+0x2ac4>
    2e64:	d8000010 	stmdale	r0, {r4}
    2e68:	00000010 	andeq	r0, r0, r0, lsl r0
    2e6c:	00156a27 	andseq	r6, r5, r7, lsr #20
    2e70:	000e1400 	andeq	r1, lr, r0, lsl #8
    2e74:	000e2008 	andeq	r2, lr, r8
    2e78:	00110408 	andseq	r0, r1, r8, lsl #8
    2e7c:	156b2800 	strbne	r2, [fp, #-2048]!	@ 0xfffff800
    2e80:	10f60000 	rscsne	r0, r6, r0
    2e84:	10ee0000 	rscne	r0, lr, r0
    2e88:	2c000000 	stccs	0, cr0, [r0], {-0}
    2e8c:	08000d9a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, fp}
    2e90:	00000ef6 	strdeq	r0, [r0], -r6
    2e94:	0250012d 	subseq	r0, r0, #1073741835	@ 0x4000000b
    2e98:	012d8709 			@ <UNDEFINED> instruction: 0x012d8709
    2e9c:	2d310151 	ldfcss	f0, [r1, #-324]!	@ 0xfffffebc
    2ea0:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    2ea4:	53012d64 	movwpl	r2, #7524	@ 0x1d64
    2ea8:	0a050305 	beq	143ac4 <_Min_Stack_Size+0x1436c4>
    2eac:	00000800 	andeq	r0, r0, r0, lsl #16
    2eb0:	000d8e25 	andeq	r8, sp, r5, lsr #28
    2eb4:	00133d08 	andseq	r3, r3, r8, lsl #26
    2eb8:	0e822500 	cdpeq	5, 8, cr2, cr2, cr0, {0}
    2ebc:	0f2a0800 	svceq	0x002a0800
    2ec0:	8a230000 	bhi	8c2ec8 <_Min_Stack_Size+0x8c2ac8>
    2ec4:	0108000e 	tsteq	r8, lr
    2ec8:	00000f1a 	andeq	r0, r0, sl, lsl pc
    2ecc:	31012e00 	tstcc	r1, r0, lsl #28
    2ed0:	01000009 	tsteq	r0, r9
    2ed4:	01060222 	tsteq	r6, r2, lsr #4
    2ed8:	00000ab6 			@ <UNDEFINED> instruction: 0x00000ab6
    2edc:	08000d56 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, fp}
    2ee0:	08000d88 	stmdaeq	r0, {r3, r7, r8, sl, fp}
    2ee4:	00001138 	andeq	r1, r0, r8, lsr r1
    2ee8:	00120201 	andseq	r0, r2, r1, lsl #4
    2eec:	65722f00 	ldrbvs	r2, [r2, #-3840]!	@ 0xfffff100
    2ef0:	22010071 	andcs	r0, r1, #113	@ 0x71
    2ef4:	0f5d2702 	svceq	0x005d2702
    2ef8:	115c0000 	cmpne	ip, r0
    2efc:	11580000 	cmpne	r8, r0
    2f00:	21300000 	teqcs	r0, r0
    2f04:	01000006 	tsteq	r0, r6
    2f08:	7b350222 	blvc	d43798 <_Min_Stack_Size+0xd43398>
    2f0c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    2f10:	7a000011 	bvc	2f5c <_Min_Stack_Size+0x2b5c>
    2f14:	30000011 	andcc	r0, r0, r1, lsl r0
    2f18:	0000081b 	andeq	r0, r0, fp, lsl r8
    2f1c:	46022201 	strmi	r2, [r2], -r1, lsl #4
    2f20:	0000007b 	andeq	r0, r0, fp, ror r0
    2f24:	000011a3 	andeq	r1, r0, r3, lsr #3
    2f28:	0000119f 	muleq	r0, pc, r1	@ <UNPREDICTABLE>
    2f2c:	000d6231 	andeq	r6, sp, r1, lsr r2
    2f30:	00135208 	andseq	r5, r3, r8, lsl #4
    2f34:	0011c500 	andseq	ip, r1, r0, lsl #10
    2f38:	50012d00 	andpl	r2, r1, r0, lsl #26
    2f3c:	2d007402 	cfstrscs	mvf7, [r0, #-8]
    2f40:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    2f44:	52012d00 	andpl	r2, r1, #0, 26
    2f48:	00007602 	andeq	r7, r0, r2, lsl #12
    2f4c:	000d7231 	andeq	r7, sp, r1, lsr r2
    2f50:	000f6308 	andeq	r6, pc, r8, lsl #6
    2f54:	0011e500 	andseq	lr, r1, r0, lsl #10
    2f58:	50012d00 	andpl	r2, r1, r0, lsl #26
    2f5c:	2d007402 	cfstrscs	mvf7, [r0, #-8]
    2f60:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    2f64:	52012d00 	andpl	r2, r1, #0, 26
    2f68:	00007602 	andeq	r7, r0, r2, lsl #12
    2f6c:	000d802c 	andeq	r8, sp, ip, lsr #32
    2f70:	000f3a08 	andeq	r3, pc, r8, lsl #20
    2f74:	50012d00 	andpl	r2, r1, r0, lsl #26
    2f78:	2d007402 	cfstrscs	mvf7, [r0, #-8]
    2f7c:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    2f80:	52012d00 	andpl	r2, r1, #0, 26
    2f84:	00007602 	andeq	r7, r0, r2, lsl #12
    2f88:	e9012e00 	stmdb	r1, {r9, sl, fp, sp}
    2f8c:	01000007 	tsteq	r0, r7
    2f90:	0106021a 	tsteq	r6, sl, lsl r2
    2f94:	00000ab6 			@ <UNDEFINED> instruction: 0x00000ab6
    2f98:	08000d28 	stmdaeq	r0, {r3, r5, r8, sl, fp}
    2f9c:	08000d56 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, fp}
    2fa0:	000011c4 	andeq	r1, r0, r4, asr #3
    2fa4:	0012b201 	andseq	fp, r2, r1, lsl #4
    2fa8:	65722f00 	ldrbvs	r2, [r2, #-3840]!	@ 0xfffff100
    2fac:	1a010071 	bne	43178 <_Min_Stack_Size+0x42d78>
    2fb0:	0f5d2602 	svceq	0x005d2602
    2fb4:	11e80000 	mvnne	r0, r0
    2fb8:	11e40000 	mvnne	r0, r0
    2fbc:	de300000 	cdple	0, 3, cr0, cr0, cr0, {0}
    2fc0:	0100000a 	tsteq	r0, sl
    2fc4:	a932021a 	ldmdbge	r2!, {r1, r3, r4, r9}
    2fc8:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    2fcc:	06000012 			@ <UNDEFINED> instruction: 0x06000012
    2fd0:	30000012 	andcc	r0, r0, r2, lsl r0
    2fd4:	00000fe2 	andeq	r0, r0, r2, ror #31
    2fd8:	42021a01 	andmi	r1, r2, #4096	@ 0x1000
    2fdc:	00000faf 	andeq	r0, r0, pc, lsr #31
    2fe0:	0000124a 	andeq	r1, r0, sl, asr #4
    2fe4:	00001242 	andeq	r1, r0, r2, asr #4
    2fe8:	000d3431 	andeq	r3, sp, r1, lsr r4
    2fec:	00139808 	andseq	r9, r3, r8, lsl #16
    2ff0:	00128100 	andseq	r8, r2, r0, lsl #2
    2ff4:	50012d00 	andpl	r2, r1, r0, lsl #26
    2ff8:	2d007402 	cfstrscs	mvf7, [r0, #-8]
    2ffc:	71025101 	tstvc	r2, r1, lsl #2
    3000:	52012d00 	andpl	r2, r1, #0, 26
    3004:	00007202 	andeq	r7, r0, r2, lsl #4
    3008:	000d4031 	andeq	r4, sp, r1, lsr r0
    300c:	000fb508 	andeq	fp, pc, r8, lsl #10
    3010:	00129500 	andseq	r9, r2, r0, lsl #10
    3014:	50012d00 	andpl	r2, r1, r0, lsl #26
    3018:	00007402 	andeq	r7, r0, r2, lsl #8
    301c:	000d4e2c 	andeq	r4, sp, ip, lsr #28
    3020:	000f8608 	andeq	r8, pc, r8, lsl #12
    3024:	50012d00 	andpl	r2, r1, r0, lsl #26
    3028:	2d007402 	cfstrscs	mvf7, [r0, #-8]
    302c:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    3030:	52012d00 	andpl	r2, r1, #0, 26
    3034:	00007602 	andeq	r7, r0, r2, lsl #12
    3038:	ea013200 	b	4f840 <_Min_Stack_Size+0x4f440>
    303c:	01000005 	tsteq	r0, r5
    3040:	010601eb 	smlatteq	r6, fp, r1, r0
    3044:	08000c90 	stmdaeq	r0, {r4, r7, sl, fp}
    3048:	08000d28 	stmdaeq	r0, {r3, r5, r8, sl, fp}
    304c:	01007d02 	tsteq	r0, r2, lsl #26
    3050:	00001301 	andeq	r1, r0, r1, lsl #6
    3054:	0005fc30 	andeq	pc, r5, r0, lsr ip	@ <UNPREDICTABLE>
    3058:	01eb0100 	mvneq	r0, r0, lsl #2
    305c:	00007b27 	andeq	r7, r0, r7, lsr #22
    3060:	00128600 	andseq	r8, r2, r0, lsl #12
    3064:	00127e00 	andseq	r7, r2, r0, lsl #28
    3068:	0ade3300 	beq	ff78fc70 <BootRAM+0xe700411>
    306c:	eb010000 	bl	43074 <_Min_Stack_Size+0x42c74>
    3070:	13013b01 	movwne	r3, #6913	@ 0x1b01
    3074:	51010000 	mrspl	r0, (UNDEF: 1)
    3078:	000fe233 	andeq	lr, pc, r3, lsr r2	@ <UNPREDICTABLE>
    307c:	01eb0100 	mvneq	r0, r0, lsl #2
    3080:	000faf4b 	andeq	sl, pc, fp, asr #30
    3084:	00520100 	subseq	r0, r2, r0, lsl #2
    3088:	13070407 	movwne	r0, #29703	@ 0x7407
    308c:	04070000 	streq	r0, [r7], #-0
    3090:	0000130d 	andeq	r1, r0, sp, lsl #6
    3094:	c7013534 	smladxgt	r1, r4, r5, r3
    3098:	0400000a 	streq	r0, [r0], #-10
    309c:	0c740657 	ldcleq	6, cr0, [r4], #-348	@ 0xfffffea4
    30a0:	0c900800 	ldceq	8, cr0, [r0], {0}
    30a4:	7d020800 	stcvc	8, cr0, [r2, #-0]
    30a8:	133d0100 	teqne	sp, #0, 2
    30ac:	7b360000 	blvc	d830b4 <_Min_Stack_Size+0xd82cb4>
    30b0:	74000016 	strvc	r0, [r0], #-22	@ 0xffffffea
    30b4:	0208000c 	andeq	r0, r8, #12
    30b8:	08000c74 	stmdaeq	r0, {r2, r4, r5, r6, sl, fp}
    30bc:	08000c78 	stmdaeq	r0, {r3, r4, r5, r6, sl, fp}
    30c0:	00065804 	andeq	r5, r6, r4, lsl #16
    30c4:	0d480137 	stfeqe	f0, [r8, #-220]	@ 0xffffff24
    30c8:	4e040000 	cdpmi	0, 0, cr0, cr4, cr0, {0}
    30cc:	000c2806 	andeq	r2, ip, r6, lsl #16
    30d0:	000c7408 	andeq	r7, ip, r8, lsl #8
    30d4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    30d8:	2a013801 	bcs	510e4 <_Min_Stack_Size+0x50ce4>
    30dc:	0400000e 	streq	r0, [r0], #-14
    30e0:	b6010634 			@ <UNDEFINED> instruction: 0xb6010634
    30e4:	0100000a 	tsteq	r0, sl
    30e8:	00001398 	muleq	r0, r8, r3
    30ec:	71657239 	cmnvc	r5, r9, lsr r2
    30f0:	21340400 	teqcs	r4, r0, lsl #8
    30f4:	00000f5d 	andeq	r0, r0, sp, asr pc
    30f8:	0006213a 	andeq	r2, r6, sl, lsr r1
    30fc:	2f340400 	svccs	0x00340400
    3100:	0000007b 	andeq	r0, r0, fp, ror r0
    3104:	00081b3a 	andeq	r1, r8, sl, lsr fp
    3108:	40340400 	eorsmi	r0, r4, r0, lsl #8
    310c:	0000007b 	andeq	r0, r0, fp, ror r0
    3110:	002b3c3b 	eoreq	r3, fp, fp, lsr ip
    3114:	3d040000 	stccc	0, cr0, [r4, #-0]
    3118:	00007b10 	andeq	r7, r0, r0, lsl fp
    311c:	3d000000 	stccc	0, cr0, [r0, #-0]
    3120:	000d3501 	andeq	r3, sp, r1, lsl #10
    3124:	061d0400 	ldreq	r0, [sp], -r0, lsl #8
    3128:	000ab601 	andeq	fp, sl, r1, lsl #12
    312c:	000b8000 	andeq	r8, fp, r0
    3130:	000bc408 	andeq	ip, fp, r8, lsl #8
    3134:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3138:	0013f901 	andseq	pc, r3, r1, lsl #18
    313c:	65723e00 	ldrbvs	r3, [r2, #-3584]!	@ 0xfffff200
    3140:	1d040071 	stcne	0, cr0, [r4, #-452]	@ 0xfffffe3c
    3144:	000f5d20 	andeq	r5, pc, r0, lsr #26
    3148:	0012cc00 	andseq	ip, r2, r0, lsl #24
    314c:	0012c000 	andseq	ip, r2, r0
    3150:	0ade3f00 	beq	ff792d58 <BootRAM+0xe7034f9>
    3154:	1d040000 	stcne	0, cr0, [r4, #-0]
    3158:	000fa92c 	andeq	sl, pc, ip, lsr #18
    315c:	3f510100 	svccc	0x00510100
    3160:	00000fe2 	andeq	r0, r0, r2, ror #31
    3164:	af3c1d04 	svcge	0x003c1d04
    3168:	0100000f 	tsteq	r0, pc
    316c:	0b0f1c52 	bleq	3ca2bc <_Min_Stack_Size+0x3c9ebc>
    3170:	27040000 	strcs	r0, [r4, -r0]
    3174:	000b4e15 	andeq	r4, fp, r5, lsl lr
    3178:	de030500 	cfsh32le	mvfx0, mvfx3, #0
    317c:	00200000 	eoreq	r0, r0, r0
    3180:	0ae30137 	beq	ff8c3664 <BootRAM+0xe833e05>
    3184:	79020000 	stmdbvc	r2, {}	@ <UNPREDICTABLE>
    3188:	000b1006 	andeq	r1, fp, r6
    318c:	000b8008 	andeq	r8, fp, r8
    3190:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    3194:	96014001 	strls	r4, [r1], -r1
    3198:	0200000c 	andeq	r0, r0, #12
    319c:	0a7e0658 	beq	1f84b04 <_Min_Stack_Size+0x1f84704>
    31a0:	0b100800 	bleq	4051a8 <_Min_Stack_Size+0x404da8>
    31a4:	131f0800 	tstne	pc, #0, 16
    31a8:	85010000 	strhi	r0, [r1, #-0]
    31ac:	1c000014 	stcne	0, cr0, [r0], {20}
    31b0:	00000d27 	andeq	r0, r0, r7, lsr #26
    31b4:	5e125902 	vnmlspl.f16	s10, s4, s4	@ <UNPREDICTABLE>
    31b8:	05000000 	streq	r0, [r0, #-0]
    31bc:	0000d603 	andeq	sp, r0, r3, lsl #12
    31c0:	0cec1c20 	stcleq	12, cr1, [ip], #128	@ 0x80
    31c4:	5a020000 	bpl	831cc <_Min_Stack_Size+0x82dcc>
    31c8:	00007b13 	andeq	r7, r0, r3, lsl fp
    31cc:	d8030500 	stmdale	r3, {r8, sl}
    31d0:	41200000 			@ <UNDEFINED> instruction: 0x41200000
    31d4:	00000e45 	andeq	r0, r0, r5, asr #28
    31d8:	7b0c6402 	blvc	31c1e8 <_Min_Stack_Size+0x31bde8>
    31dc:	41000000 	mrsmi	r0, (UNDEF: 0)
    31e0:	3f000013 	svccc	0x00000013
    31e4:	41000013 	tstmi	r0, r3, lsl r0
    31e8:	00000c5b 	andeq	r0, r0, fp, asr ip
    31ec:	440b6502 	strmi	r6, [fp], #-1282	@ 0xfffffafe
    31f0:	5a000000 	bpl	31f8 <_Min_Stack_Size+0x2df8>
    31f4:	54000013 	strpl	r0, [r0], #-19	@ 0xffffffed
    31f8:	2c000013 	stccs	0, cr0, [r0], {19}
    31fc:	08000ac0 	stmdaeq	r0, {r6, r7, r9, fp}
    3200:	000014b1 			@ <UNDEFINED> instruction: 0x000014b1
    3204:	0250012d 	subseq	r0, r0, #1073741835	@ 0x4000000b
    3208:	00000074 	andeq	r0, r0, r4, ror r0
    320c:	0b720138 	bleq	1c836f4 <_Min_Stack_Size+0x1c832f4>
    3210:	50020000 	andpl	r0, r2, r0
    3214:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    3218:	b1010000 	mrslt	r0, (UNDEF: 1)
    321c:	3a000014 	bcc	3274 <_Min_Stack_Size+0x2e74>
    3220:	00000cec 	andeq	r0, r0, ip, ror #25
    3224:	7b205002 	blvc	817234 <_Min_Stack_Size+0x816e34>
    3228:	3c000000 	stccc	0, cr0, [r0], {-0}
    322c:	00000be1 	andeq	r0, r0, r1, ror #23
    3230:	98135102 	ldmdals	r3, {r1, r8, ip, lr}
    3234:	00000000 	andeq	r0, r0, r0
    3238:	0bde013d 	bleq	ff783734 <BootRAM+0xe6f3ed5>
    323c:	49020000 	stmdbmi	r2, {}	@ <UNPREDICTABLE>
    3240:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    3244:	0a640000 	beq	190324c <_Min_Stack_Size+0x1902e4c>
    3248:	0a7c0800 	beq	1f05250 <_Min_Stack_Size+0x1f04e50>
    324c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3250:	14f60100 	ldrbtne	r0, [r6], #256	@ 0x100
    3254:	ec420000 	mar	acc0, r0, r2
    3258:	0200000c 	andeq	r0, r0, #12
    325c:	007b1d49 	rsbseq	r1, fp, r9, asr #26
    3260:	13a90000 			@ <UNDEFINED> instruction: 0x13a90000
    3264:	13a50000 			@ <UNDEFINED> instruction: 0x13a50000
    3268:	e11c0000 	tst	ip, r0
    326c:	0200000b 	andeq	r0, r0, #11
    3270:	0098134a 	addseq	r1, r8, sl, asr #6
    3274:	03050000 	movweq	r0, #20480	@ 0x5000
    3278:	20000008 	andcs	r0, r0, r8
    327c:	52013d00 	andpl	r3, r1, #0, 26
    3280:	0200000e 	andeq	r0, r0, #14
    3284:	7b010a42 	blvc	45b94 <_Min_Stack_Size+0x45794>
    3288:	4c000000 	stcmi	0, cr0, [r0], {-0}
    328c:	6408000a 	strvs	r0, [r8], #-10
    3290:	0208000a 	andeq	r0, r8, #10
    3294:	3b01007d 	blcc	43490 <_Min_Stack_Size+0x43090>
    3298:	42000015 	andmi	r0, r0, #21
    329c:	00000cec 	andeq	r0, r0, ip, ror #25
    32a0:	7b214202 	blvc	853ab0 <_Min_Stack_Size+0x8536b0>
    32a4:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    32a8:	ca000013 	bgt	32fc <_Min_Stack_Size+0x2efc>
    32ac:	1c000013 	stcne	0, cr0, [r0], {19}
    32b0:	00000be1 	andeq	r0, r0, r1, ror #23
    32b4:	98134302 	ldmdals	r3, {r1, r8, r9, lr}
    32b8:	05000000 	streq	r0, [r0, #-0]
    32bc:	00000403 	andeq	r0, r0, r3, lsl #8
    32c0:	b2430020 	sublt	r0, r3, #32
    32c4:	0200000c 	andeq	r0, r0, #12
    32c8:	79010d1d 	stmdbvc	r1, {r0, r2, r3, r4, r8, sl, fp}
    32cc:	44000015 	strmi	r0, [r0], #-21	@ 0xffffffeb
    32d0:	0000155a 	andeq	r1, r0, sl, asr r5
    32d4:	00002b3c 	andeq	r2, r0, ip, lsr fp
    32d8:	031f0200 	tsteq	pc, #0, 4
    32dc:	00000098 	muleq	r0, r8, r0
    32e0:	156a4400 	strbne	r4, [sl, #-1024]!	@ 0xfffffc00
    32e4:	69450000 	stmdbvs	r5, {}^	@ <UNPREDICTABLE>
    32e8:	10220200 	eorne	r0, r2, r0, lsl #4
    32ec:	0000007b 	andeq	r0, r0, fp, ror r0
    32f0:	2b3c3b00 	blcs	f11ef8 <_Min_Stack_Size+0xf11af8>
    32f4:	02000000 	andeq	r0, r0, #0
    32f8:	0098032d 	addseq	r0, r8, sp, lsr #6
    32fc:	00000000 	andeq	r0, r0, r0
    3300:	000be846 	andeq	lr, fp, r6, asr #16
    3304:	0d120200 	lfmeq	f0, 4, [r2, #-0]
    3308:	000a0401 	andeq	r0, sl, r1, lsl #8
    330c:	000a4c08 	andeq	r4, sl, r8, lsl #24
    3310:	0013ef08 	andseq	lr, r3, r8, lsl #30
    3314:	16040100 	strne	r0, [r4], -r0, lsl #2
    3318:	21420000 	mrscs	r0, (UNDEF: 66)
    331c:	02000009 	andeq	r0, r0, #9
    3320:	005e2512 	subseq	r2, lr, r2, lsl r5
    3324:	14130000 	ldrne	r0, [r3], #-0
    3328:	140f0000 	strne	r0, [pc], #-0	@ 3330 <_Min_Stack_Size+0x2f30>
    332c:	b4470000 	strblt	r0, [r7], #-0
    3330:	1c000016 	stcne	0, cr0, [r0], {22}
    3334:	0008000a 	andeq	r0, r8, sl
    3338:	000001a0 	andeq	r0, r0, r0, lsr #3
    333c:	2b031302 	blcs	c7f4c <_Min_Stack_Size+0xc7b4c>
    3340:	000016ce 	andeq	r1, r0, lr, asr #13
    3344:	00001436 	andeq	r1, r0, r6, lsr r4
    3348:	00001434 	andeq	r1, r0, r4, lsr r4
    334c:	0016da2b 	andseq	sp, r6, fp, lsr #20
    3350:	00145000 	andseq	r5, r4, r0
    3354:	00144e00 	andseq	r4, r4, r0, lsl #28
    3358:	16c22b00 	strbne	r2, [r2], r0, lsl #22
    335c:	14720000 	ldrbtne	r0, [r2], #-0
    3360:	146c0000 	strbtne	r0, [ip], #-0
    3364:	a0480000 	subge	r0, r8, r0
    3368:	28000001 	stmdacs	r0, {r0}
    336c:	000016e6 	andeq	r1, r0, r6, ror #13
    3370:	000014a2 	andeq	r1, r0, r2, lsr #9
    3374:	0000149e 	muleq	r0, lr, r4
    3378:	000a422c 	andeq	r4, sl, ip, lsr #4
    337c:	000ed108 	andeq	sp, lr, r8, lsl #2
    3380:	51012d00 	tstpl	r1, r0, lsl #26
    3384:	00007602 	andeq	r7, r0, r2, lsl #12
    3388:	49000000 	stmdbmi	r0, {}	@ <UNPREDICTABLE>
    338c:	00000b57 	andeq	r0, r0, r7, asr fp
    3390:	010d0c02 	tsteq	sp, r2, lsl #24
    3394:	000d5b4a 	andeq	r5, sp, sl, asr #22
    3398:	0d0b0200 	sfmeq	f0, 4, [fp, #-0]
    339c:	000ab601 	andeq	fp, sl, r1, lsl #12
    33a0:	16440100 	strbne	r0, [r4], -r0, lsl #2
    33a4:	72390000 	eorsvc	r0, r9, #0
    33a8:	02007165 	andeq	r7, r0, #1073741849	@ 0x40000019
    33ac:	0f5d280b 	svceq	0x005d280b
    33b0:	213a0000 	teqcs	sl, r0
    33b4:	02000006 	andeq	r0, r0, #6
    33b8:	007b360b 	rsbseq	r3, fp, fp, lsl #12
    33bc:	1b3a0000 	blne	e833c4 <_Min_Stack_Size+0xe82fc4>
    33c0:	02000008 	andeq	r0, r0, #8
    33c4:	007b470b 	rsbseq	r4, fp, fp, lsl #14
    33c8:	4a000000 	bmi	33d0 <_Min_Stack_Size+0x2fd0>
    33cc:	00000cbb 			@ <UNDEFINED> instruction: 0x00000cbb
    33d0:	010d0a02 	tsteq	sp, r2, lsl #20
    33d4:	00000ab6 			@ <UNDEFINED> instruction: 0x00000ab6
    33d8:	00167b01 	andseq	r7, r6, r1, lsl #22
    33dc:	65723900 	ldrbvs	r3, [r2, #-2304]!	@ 0xfffff700
    33e0:	0a020071 	beq	835ac <_Min_Stack_Size+0x831ac>
    33e4:	000f5d27 	andeq	r5, pc, r7, lsr #26
    33e8:	0ade3a00 	beq	ff791bf0 <BootRAM+0xe702391>
    33ec:	0a020000 	beq	833f4 <_Min_Stack_Size+0x82ff4>
    33f0:	000fa933 	andeq	sl, pc, r3, lsr r9	@ <UNPREDICTABLE>
    33f4:	0fe23a00 	svceq	0x00e23a00
    33f8:	0a020000 	beq	83400 <_Min_Stack_Size+0x83000>
    33fc:	000faf43 	andeq	sl, pc, r3, asr #30
    3400:	014b0000 	mrseq	r0, (UNDEF: 75)
    3404:	00000bd3 	ldrdeq	r0, [r0], -r3
    3408:	98110605 	ldmdals	r1, {r0, r2, r9, sl}
    340c:	03000000 	movweq	r0, #0
    3410:	0006d84a 	andeq	sp, r6, sl, asr #16
    3414:	13c10300 	bicne	r0, r1, #0, 6
    3418:	0000b701 	andeq	fp, r0, r1, lsl #14
    341c:	16b40300 	ldrtne	r0, [r4], r0, lsl #6
    3420:	213a0000 	teqcs	sl, r0
    3424:	03000009 	movweq	r0, #9
    3428:	005e27c1 	subseq	r2, lr, r1, asr #15
    342c:	62390000 	eorsvs	r0, r9, #0
    3430:	03006675 	movweq	r6, #1653	@ 0x675
    3434:	0faf38c1 	svceq	0x00af38c1
    3438:	4c000000 	stcmi	0, cr0, [r0], {-0}
    343c:	00000aeb 	andeq	r0, r0, fp, ror #21
    3440:	0114b803 	tsteq	r4, r3, lsl #16
    3444:	0016f303 	andseq	pc, r6, r3, lsl #6
    3448:	09213a00 	stmdbeq	r1!, {r9, fp, ip, sp}
    344c:	b8030000 	stmdalt	r3, {}	@ <UNPREDICTABLE>
    3450:	00005e30 	andeq	r5, r0, r0, lsr lr
    3454:	75623900 	strbvc	r3, [r2, #-2304]!	@ 0xfffff700
    3458:	b8030066 	stmdalt	r3, {r1, r2, r5, r6}
    345c:	000ef047 	andeq	pc, lr, r7, asr #32
    3460:	0fe23a00 	svceq	0x00e23a00
    3464:	b8030000 	stmdalt	r3, {}	@ <UNPREDICTABLE>
    3468:	00007b55 	andeq	r7, r0, r5, asr fp
    346c:	64694500 	strbtvs	r4, [r9], #-1280	@ 0xfffffb00
    3470:	ba030078 	blt	c3658 <_Min_Stack_Size+0xc3258>
    3474:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3478:	ad4d0000 	stclge	0, cr0, [sp, #-0]
    347c:	06000005 	streq	r0, [r0], -r5
    3480:	011605de 			@ <UNDEFINED> instruction: 0x011605de
    3484:	00171003 	andseq	r1, r7, r3
    3488:	072a4e00 	streq	r4, [sl, -r0, lsl #28]!
    348c:	de060000 	cdple	0, 0, cr0, cr6, cr0, {0}
    3490:	02bb2f05 	adcseq	r2, fp, #5, 30
    3494:	4f000000 	svcmi	0x00000000
    3498:	00001485 	andeq	r1, r0, r5, lsl #9
    349c:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
    34a0:	08000a7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, fp}
    34a4:	01007d02 	tsteq	r0, r2, lsl #26
    34a8:	0000172d 	andeq	r1, r0, sp, lsr #14
    34ac:	00149850 	andseq	r9, r4, r0, asr r8
    34b0:	00500100 	subseq	r0, r0, r0, lsl #2
    34b4:	00135251 	andseq	r5, r3, r1, asr r2
    34b8:	000bc400 	andeq	ip, fp, r0, lsl #8
    34bc:	000c2808 	andeq	r2, ip, r8, lsl #16
    34c0:	0014c708 	andseq	ip, r4, r8, lsl #14
    34c4:	652b0100 	strvs	r0, [fp, #-256]!	@ 0xffffff00
    34c8:	ef000013 	svc	0x00000013
    34cc:	e7000014 	smlad	r0, r4, r0, r0
    34d0:	2b000014 	blcs	3528 <_Min_Stack_Size+0x3128>
    34d4:	00001371 	andeq	r1, r0, r1, ror r3
    34d8:	0000152f 	andeq	r1, r0, pc, lsr #10
    34dc:	00001529 	andeq	r1, r0, r9, lsr #10
    34e0:	00137d2b 	andseq	r7, r3, fp, lsr #26
    34e4:	00156100 	andseq	r6, r5, r0, lsl #2
    34e8:	00155b00 	andseq	r5, r5, r0, lsl #22
    34ec:	13525200 	cmpne	r2, #0, 4
    34f0:	0bd20000 	bleq	ff4834f8 <BootRAM+0xe3f3c99>
    34f4:	d2000800 	andle	r0, r0, #0, 16
    34f8:	1608000b 	strne	r0, [r8], -fp
    34fc:	0408000c 	streq	r0, [r8], #-12
    3500:	18210634 	stmdane	r1!, {r2, r4, r5, r9, sl}
    3504:	652b0000 	strvs	r0, [fp, #-0]!
    3508:	91000013 	tstls	r0, r3, lsl r0
    350c:	8d000015 	stchi	0, cr0, [r0, #-84]	@ 0xffffffac
    3510:	2b000015 	blcs	356c <_Min_Stack_Size+0x316c>
    3514:	00001371 	andeq	r1, r0, r1, ror r3
    3518:	000015b4 			@ <UNDEFINED> instruction: 0x000015b4
    351c:	000015b2 			@ <UNDEFINED> instruction: 0x000015b2
    3520:	00137d2b 	andseq	r7, r3, fp, lsr #26
    3524:	0015ce00 	andseq	ip, r5, r0, lsl #28
    3528:	0015ca00 	andseq	ip, r5, r0, lsl #20
    352c:	13895300 	orrne	r5, r9, #0, 6
    3530:	0bd20000 	bleq	ff483538 <BootRAM+0xe3f3cd9>
    3534:	0c160800 	ldceq	8, cr0, [r6], {-0}
    3538:	8a280800 	bhi	a05540 <_Min_Stack_Size+0xa05140>
    353c:	f7000013 			@ <UNDEFINED> instruction: 0xf7000013
    3540:	ef000015 	svc	0x00000015
    3544:	52000015 	andpl	r0, r0, #21
    3548:	00001689 	andeq	r1, r0, r9, lsl #13
    354c:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
    3550:	000bd801 	andeq	sp, fp, r1, lsl #16
    3554:	000be408 	andeq	lr, fp, r8, lsl #8
    3558:	073a0408 	ldreq	r0, [sl, -r8, lsl #8]!
    355c:	0000180a 	andeq	r1, r0, sl, lsl #16
    3560:	00169b2b 	andseq	r9, r6, fp, lsr #22
    3564:	00164500 	andseq	r4, r6, r0, lsl #10
    3568:	00164300 	andseq	r4, r6, r0, lsl #6
    356c:	16a72b00 	strtne	r2, [r7], r0, lsl #22
    3570:	165b0000 	ldrbne	r0, [fp], -r0
    3574:	16590000 	ldrbne	r0, [r9], -r0
    3578:	e42c0000 	strt	r0, [ip], #-0
    357c:	d808000b 	stmdale	r8, {r0, r1, r3}
    3580:	2d00000f 	stccs	0, cr0, [r0, #-60]	@ 0xffffffc4
    3584:	31015001 	tstcc	r1, r1
    3588:	0351012d 	cmpeq	r1, #1073741835	@ 0x4000000b
    358c:	0000e474 	andeq	lr, r0, r4, ror r4
    3590:	167b3600 	ldrbtne	r3, [fp], -r0, lsl #12
    3594:	0c0a0000 	stceq	0, cr0, [sl], {-0}
    3598:	0a010800 	beq	455a0 <_Min_Stack_Size+0x451a0>
    359c:	0e08000c 	cdpeq	0, 0, cr0, cr8, cr12, {0}
    35a0:	0408000c 	streq	r0, [r8], #-12
    35a4:	00001546 	andeq	r1, r0, r6, asr #10
    35a8:	00138953 	andseq	r8, r3, r3, asr r9
    35ac:	000c1800 	andeq	r1, ip, r0, lsl #16
    35b0:	000c2808 	andeq	r2, ip, r8, lsl #16
    35b4:	138a5408 	orrne	r5, sl, #8, 8	@ 0x8000000
    35b8:	00000000 	andeq	r0, r0, r0
    35bc:	00157100 	andseq	r7, r5, r0, lsl #2
    35c0:	e3000200 	movw	r0, #512	@ 0x200
    35c4:	0400000c 	streq	r0, [r0], #-12
    35c8:	00019301 	andeq	r9, r1, r1, lsl #6
    35cc:	0f460c00 	svceq	0x00460c00
    35d0:	00af0000 	adceq	r0, pc, r0
    35d4:	0ebc0000 	cdpeq	0, 11, cr0, cr12, cr0, {0}
    35d8:	14700800 	ldrbtne	r0, [r0], #-2048	@ 0xfffff800
    35dc:	16810800 	strne	r0, [r1], r0, lsl #16
    35e0:	01020000 	mrseq	r0, (UNDEF: 2)
    35e4:	00021806 	andeq	r1, r2, r6, lsl #16
    35e8:	05020200 	streq	r0, [r2, #-512]	@ 0xfffffe00
    35ec:	00000030 	andeq	r0, r0, r0, lsr r0
    35f0:	67050402 	strvs	r0, [r5, -r2, lsl #8]
    35f4:	02000000 	andeq	r0, r0, #0
    35f8:	00620508 	rsbeq	r0, r2, r8, lsl #10
    35fc:	10030000 	andne	r0, r3, r0
    3600:	06000007 	streq	r0, [r0], -r7
    3604:	0052182e 	subseq	r1, r2, lr, lsr #16
    3608:	41040000 	mrsmi	r0, (UNDEF: 4)
    360c:	02000000 	andeq	r0, r0, #0
    3610:	02160801 	andseq	r0, r6, #65536	@ 0x10000
    3614:	5f030000 	svcpl	0x00030000
    3618:	06000002 	streq	r0, [r0], -r2
    361c:	006f1931 	rsbeq	r1, pc, r1, lsr r9	@ <UNPREDICTABLE>
    3620:	59040000 	stmdbpl	r4, {}	@ <UNPREDICTABLE>
    3624:	05000000 	streq	r0, [r0, #-0]
    3628:	00000059 	andeq	r0, r0, r9, asr r0
    362c:	91070202 	tstls	r7, r2, lsl #4
    3630:	03000002 	movweq	r0, #2
    3634:	0000024f 	andeq	r0, r0, pc, asr #4
    3638:	87193406 	ldrhi	r3, [r9, -r6, lsl #8]
    363c:	04000000 	streq	r0, [r0], #-0
    3640:	00000076 	andeq	r0, r0, r6, ror r0
    3644:	3d070402 	cfstrscc	mvf0, [r7, #-8]
    3648:	02000002 	andeq	r0, r0, #2
    364c:	02380708 	eorseq	r0, r8, #8, 14	@ 0x200000
    3650:	04060000 	streq	r0, [r6], #-0
    3654:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
    3658:	07040200 	streq	r0, [r4, -r0, lsl #4]
    365c:	00000242 	andeq	r0, r0, r2, asr #4
    3660:	00077503 	andeq	r7, r7, r3, lsl #10
    3664:	0f1d0300 	svceq	0x001d0300
    3668:	000000af 	andeq	r0, r0, pc, lsr #1
    366c:	00b50407 	adcseq	r0, r5, r7, lsl #8
    3670:	01080000 	mrseq	r0, (UNDEF: 8)
    3674:	000000c1 	andeq	r0, r0, r1, asr #1
    3678:	00004109 	andeq	r4, r0, r9, lsl #2
    367c:	080a0000 	stmdaeq	sl, {}	@ <UNPREDICTABLE>
    3680:	16091e03 	strne	r1, [r9], -r3, lsl #28
    3684:	0b000001 	bleq	3690 <_Min_Stack_Size+0x3290>
    3688:	00000481 	andeq	r0, r0, r1, lsl #9
    368c:	410b1f03 	tstmi	fp, r3, lsl #30
    3690:	02000000 	andeq	r0, r0, #0
    3694:	dc0b0023 	stcle	0, cr0, [fp], {35}	@ 0x23
    3698:	03000008 	movweq	r0, #8
    369c:	00410b20 	subeq	r0, r1, r0, lsr #22
    36a0:	23020000 	movwcs	r0, #8192	@ 0x2000
    36a4:	05030b01 	streq	r0, [r3, #-2817]	@ 0xfffff4ff
    36a8:	21030000 	mrscs	r0, (UNDEF: 3)
    36ac:	0000590c 	andeq	r5, r0, ip, lsl #18
    36b0:	02230200 	eoreq	r0, r3, #0, 4
    36b4:	0004090b 	andeq	r0, r4, fp, lsl #18
    36b8:	0c220300 	stceq	3, cr0, [r2], #-0
    36bc:	00000059 	andeq	r0, r0, r9, asr r0
    36c0:	0b042302 	bleq	10c2d0 <_Min_Stack_Size+0x10bed0>
    36c4:	000008bf 			@ <UNDEFINED> instruction: 0x000008bf
    36c8:	590c2303 	stmdbpl	ip, {r0, r1, r8, r9, sp}
    36cc:	02000000 	andeq	r0, r0, #0
    36d0:	03000623 	movweq	r0, #1571	@ 0x623
    36d4:	00000948 	andeq	r0, r0, r8, asr #18
    36d8:	c1022403 	tstgt	r2, r3, lsl #8
    36dc:	0c000000 	stceq	0, cr0, [r0], {-0}
    36e0:	00250105 	eoreq	r0, r5, r5, lsl #2
    36e4:	58070000 	stmdapl	r7, {}	@ <UNPREDICTABLE>
    36e8:	00029901 	andeq	r9, r2, r1, lsl #18
    36ec:	08ab0d00 	stmiaeq	fp!, {r8, sl, fp}
    36f0:	0d720000 	ldcleq	0, cr0, [r2, #-0]
    36f4:	0000050a 	andeq	r0, r0, sl, lsl #10
    36f8:	07530d74 			@ <UNDEFINED> instruction: 0x07530d74
    36fc:	0d750000 	ldcleq	0, cr0, [r5, #-0]
    3700:	0000098e 	andeq	r0, r0, lr, lsl #19
    3704:	044f0d76 	strbeq	r0, [pc], #-3446	@ 370c <_Min_Stack_Size+0x330c>
    3708:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
    370c:	0000097c 	andeq	r0, r0, ip, ror r9
    3710:	04d90d7c 	ldrbeq	r0, [r9], #3452	@ 0xd7c
    3714:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
    3718:	00000914 	andeq	r0, r0, r4, lsl r9
    371c:	072f0e7f 			@ <UNDEFINED> instruction: 0x072f0e7f
    3720:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3724:	0000076c 	andeq	r0, r0, ip, ror #14
    3728:	052f0e01 	streq	r0, [pc, #-3585]!	@ 292f <_Min_Stack_Size+0x252f>
    372c:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    3730:	0000063b 	andeq	r0, r0, fp, lsr r6
    3734:	049c0e03 	ldreq	r0, [ip], #3587	@ 0xe03
    3738:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    373c:	000004fa 	strdeq	r0, [r0], -sl
    3740:	04b10e05 	ldrteq	r0, [r1], #3589	@ 0xe05
    3744:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    3748:	000008d1 	ldrdeq	r0, [r0], -r1
    374c:	06650e07 	strbteq	r0, [r5], -r7, lsl #28
    3750:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    3754:	00000a23 	andeq	r0, r0, r3, lsr #20
    3758:	07610e09 	strbeq	r0, [r1, -r9, lsl #28]!
    375c:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    3760:	000006ee 	andeq	r0, r0, lr, ror #13
    3764:	04620e0b 	strbteq	r0, [r2], #-3595	@ 0xfffff1f5
    3768:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    376c:	000007ad 	andeq	r0, r0, sp, lsr #15
    3770:	059a0e0d 	ldreq	r0, [sl, #3597]	@ 0xe0d
    3774:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    3778:	000009f8 	strdeq	r0, [r0], -r8
    377c:	06b10e0f 	ldrteq	r0, [r1], pc, lsl #28
    3780:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    3784:	0000042f 	andeq	r0, r0, pc, lsr #8
    3788:	06700e11 			@ <UNDEFINED> instruction: 0x06700e11
    378c:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
    3790:	00000970 	andeq	r0, r0, r0, ror r9
    3794:	0a840e13 	beq	fe106fe8 <BootRAM+0xd077789>
    3798:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
    379c:	00000a12 	andeq	r0, r0, r2, lsl sl
    37a0:	05bc0e15 	ldreq	r0, [ip, #3605]!	@ 0xe15
    37a4:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
    37a8:	000009c8 	andeq	r0, r0, r8, asr #19
    37ac:	04250e17 	strteq	r0, [r5], #-3607	@ 0xfffff1e9
    37b0:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    37b4:	00000724 	andeq	r0, r0, r4, lsr #14
    37b8:	03fe0e1a 	mvnseq	r0, #416	@ 0x1a0
    37bc:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    37c0:	00000927 	andeq	r0, r0, r7, lsr #18
    37c4:	06e40e1c 	usateq	r0, #4, ip, lsl #28
    37c8:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
    37cc:	00000458 	andeq	r0, r0, r8, asr r4
    37d0:	07ce0e1e 	bfieq	r0, lr, (invalid: 28:14)
    37d4:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
    37d8:	00000907 	andeq	r0, r0, r7, lsl #18
    37dc:	067a0e20 	ldrbteq	r0, [sl], -r0, lsr #28
    37e0:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
    37e4:	00000442 	andeq	r0, r0, r2, asr #8
    37e8:	05780e22 	ldrbeq	r0, [r8, #-3618]!	@ 0xfffff1de
    37ec:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
    37f0:	000009df 	ldrdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    37f4:	08930e24 	ldmeq	r3, {r2, r5, r9, sl, fp}
    37f8:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
    37fc:	00000615 	andeq	r0, r0, r5, lsl r6
    3800:	0a6e0e26 	beq	1b870a0 <_Min_Stack_Size+0x1b86ca0>
    3804:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
    3808:	000004bc 			@ <UNDEFINED> instruction: 0x000004bc
    380c:	080c0e28 	stmdaeq	ip, {r3, r5, r9, sl, fp}
    3810:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
    3814:	0000086e 	andeq	r0, r0, lr, ror #16
    3818:	05900e2a 	ldreq	r0, [r0, #3626]	@ 0xe2a
    381c:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
    3820:	000009ee 	andeq	r0, r0, lr, ror #19
    3824:	07a30e2c 	streq	r0, [r3, ip, lsr #28]!
    3828:	0e2e0000 	cdpeq	0, 2, cr0, cr14, cr0, {0}
    382c:	0000068c 	andeq	r0, r0, ip, lsl #13
    3830:	06c40e2f 	strbeq	r0, [r4], pc, lsr #28
    3834:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
    3838:	00000a5b 	andeq	r0, r0, fp, asr sl
    383c:	07900e33 			@ <UNDEFINED> instruction: 0x07900e33
    3840:	0e340000 	cdpeq	0, 3, cr0, cr4, cr0, {0}
    3844:	0000055c 	andeq	r0, r0, ip, asr r5
    3848:	08f40e35 	ldmeq	r4!, {r0, r2, r4, r5, r9, sl, fp}^
    384c:	0e360000 	cdpeq	0, 3, cr0, cr6, cr0, {0}
    3850:	000006a3 	andeq	r0, r0, r3, lsr #13
    3854:	02030038 	andeq	r0, r3, #56	@ 0x38
    3858:	07000006 	streq	r0, [r0, -r6]
    385c:	01220398 			@ <UNDEFINED> instruction: 0x01220398
    3860:	040f0000 	streq	r0, [pc], #-0	@ 3868 <_Min_Stack_Size+0x3468>
    3864:	0984050e 	stmibeq	r4, {r1, r2, r3, r8, sl}
    3868:	0000037d 	andeq	r0, r0, sp, ror r3
    386c:	0005410b 	andeq	r4, r5, fp, lsl #2
    3870:	11860500 	orrne	r0, r6, r0, lsl #10
    3874:	0000038d 	andeq	r0, r0, sp, lsl #7
    3878:	0b002302 	bleq	c488 <_Min_Stack_Size+0xc088>
    387c:	00000828 	andeq	r0, r0, r8, lsr #16
    3880:	92118705 	andsls	r8, r1, #1310720	@ 0x140000
    3884:	02000003 	andeq	r0, r0, #3
    3888:	da0b2023 	ble	2cb91c <_Min_Stack_Size+0x2cb51c>
    388c:	05000009 	streq	r0, [r0, #-9]
    3890:	038d1188 	orreq	r1, sp, #136, 2	@ 0x22
    3894:	23030000 	movwcs	r0, #12288	@ 0x3000
    3898:	6f0b0180 	svcvs	0x000b0180
    389c:	05000005 	streq	r0, [r0, #-5]
    38a0:	03921189 	orrseq	r1, r2, #1073741858	@ 0x40000022
    38a4:	23030000 	movwcs	r0, #12288	@ 0x3000
    38a8:	410b01a0 	smlatbmi	fp, r0, r1, r0
    38ac:	0500000a 	streq	r0, [r0, #-10]
    38b0:	038d118a 	orreq	r1, sp, #-2147483614	@ 0x80000022
    38b4:	23030000 	movwcs	r0, #12288	@ 0x3000
    38b8:	3c0b0280 	sfmcc	f0, 4, [fp], {128}	@ 0x80
    38bc:	05000008 	streq	r0, [r0, #-8]
    38c0:	0392118b 	orrseq	r1, r2, #-1073741790	@ 0xc0000022
    38c4:	23030000 	movwcs	r0, #12288	@ 0x3000
    38c8:	8b0b02a0 	blhi	2c4350 <_Min_Stack_Size+0x2c3f50>
    38cc:	05000007 	streq	r0, [r0, #-7]
    38d0:	038d118c 	orreq	r1, sp, #140, 2	@ 0x23
    38d4:	23030000 	movwcs	r0, #12288	@ 0x3000
    38d8:	460b0380 	strmi	r0, [fp], -r0, lsl #7
    38dc:	05000008 	streq	r0, [r0, #-8]
    38e0:	0392118d 	orrseq	r1, r2, #1073741859	@ 0x40000023
    38e4:	23030000 	movwcs	r0, #12288	@ 0x3000
    38e8:	e90b03a0 	stmdb	fp, {r5, r7, r8, r9}
    38ec:	05000009 	streq	r0, [r0, #-9]
    38f0:	038d118e 	orreq	r1, sp, #-2147483613	@ 0x80000023
    38f4:	23030000 	movwcs	r0, #12288	@ 0x3000
    38f8:	500b0480 	andpl	r0, fp, r0, lsl #9
    38fc:	05000008 	streq	r0, [r0, #-8]
    3900:	03a2118f 			@ <UNDEFINED> instruction: 0x03a2118f
    3904:	23030000 	movwcs	r0, #12288	@ 0x3000
    3908:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
    390c:	90050050 	andls	r0, r5, r0, asr r0
    3910:	0003c211 	andeq	ip, r3, r1, lsl r2
    3914:	80230300 	eorhi	r0, r3, r0, lsl #6
    3918:	085a0b06 	ldmdaeq	sl, {r1, r2, r8, r9, fp}^
    391c:	91050000 	mrsls	r0, (UNDEF: 5)
    3920:	0003c711 	andeq	ip, r3, r1, lsl r7
    3924:	f0230300 			@ <UNDEFINED> instruction: 0xf0230300
    3928:	08070b07 	stmdaeq	r7, {r0, r1, r2, r8, r9, fp}
    392c:	92050000 	andls	r0, r5, #0
    3930:	00008211 	andeq	r8, r0, r1, lsl r2
    3934:	80230300 	eorhi	r0, r3, r0, lsl #6
    3938:	8211001c 	andshi	r0, r1, #28
    393c:	8d000000 	stchi	0, cr0, [r0, #-0]
    3940:	12000003 	andne	r0, r0, #3
    3944:	0000009c 	muleq	r0, ip, r0
    3948:	7d040007 	stcvc	0, cr0, [r4, #-28]	@ 0xffffffe4
    394c:	11000003 	tstne	r0, r3
    3950:	00000076 	andeq	r0, r0, r6, ror r0
    3954:	000003a2 	andeq	r0, r0, r2, lsr #7
    3958:	00009c12 	andeq	r9, r0, r2, lsl ip
    395c:	11001700 	tstne	r0, r0, lsl #14
    3960:	00000076 	andeq	r0, r0, r6, ror r0
    3964:	000003b2 			@ <UNDEFINED> instruction: 0x000003b2
    3968:	00009c12 	andeq	r9, r0, r2, lsl ip
    396c:	11003700 	tstne	r0, r0, lsl #14
    3970:	0000004d 	andeq	r0, r0, sp, asr #32
    3974:	000003c2 	andeq	r0, r0, r2, asr #7
    3978:	00009c12 	andeq	r9, r0, r2, lsl ip
    397c:	0400ef00 	streq	lr, [r0], #-3840	@ 0xfffff100
    3980:	000003b2 			@ <UNDEFINED> instruction: 0x000003b2
    3984:	00007611 	andeq	r7, r0, r1, lsl r6
    3988:	0003d800 	andeq	sp, r3, r0, lsl #16
    398c:	009c1300 	addseq	r1, ip, r0, lsl #6
    3990:	02830000 	addeq	r0, r3, #0
    3994:	08e50300 	stmiaeq	r5!, {r8, r9}^
    3998:	93050000 	movwls	r0, #20480	@ 0x5000
    399c:	0002a504 	andeq	sl, r2, r4, lsl #10
    39a0:	072c1400 	streq	r1, [ip, -r0, lsl #8]!
    39a4:	8f09014f 	svchi	0x0009014f
    39a8:	15000004 	strne	r0, [r0, #-4]
    39ac:	00000167 	andeq	r0, r0, r7, ror #2
    39b0:	11015107 	tstne	r1, r7, lsl #2
    39b4:	00000082 	andeq	r0, r0, r2, lsl #1
    39b8:	15002302 	strne	r2, [r0, #-770]	@ 0xfffffcfe
    39bc:	00000104 	andeq	r0, r0, r4, lsl #2
    39c0:	11015207 	tstne	r1, r7, lsl #4
    39c4:	00000082 	andeq	r0, r0, r2, lsl #1
    39c8:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    39cc:	0000000d 	andeq	r0, r0, sp
    39d0:	11015307 	tstne	r1, r7, lsl #6
    39d4:	00000082 	andeq	r0, r0, r2, lsl #1
    39d8:	15082302 	strne	r2, [r8, #-770]	@ 0xfffffcfe
    39dc:	00000135 	andeq	r0, r0, r5, lsr r1
    39e0:	11015407 	tstne	r1, r7, lsl #8
    39e4:	00000082 	andeq	r0, r0, r2, lsl #1
    39e8:	160c2302 	strne	r2, [ip], -r2, lsl #6
    39ec:	00524449 	subseq	r4, r2, r9, asr #8
    39f0:	11015507 	tstne	r1, r7, lsl #10
    39f4:	00000082 	andeq	r0, r0, r2, lsl #1
    39f8:	16102302 	ldrne	r2, [r0], -r2, lsl #6
    39fc:	0052444f 	subseq	r4, r2, pc, asr #8
    3a00:	11015607 	tstne	r1, r7, lsl #12
    3a04:	00000082 	andeq	r0, r0, r2, lsl #1
    3a08:	15142302 	ldrne	r2, [r4, #-770]	@ 0xfffffcfe
    3a0c:	0000015b 	andeq	r0, r0, fp, asr r1
    3a10:	11015707 	tstne	r1, r7, lsl #14
    3a14:	00000082 	andeq	r0, r0, r2, lsl #1
    3a18:	15182302 	ldrne	r2, [r8, #-770]	@ 0xfffffcfe
    3a1c:	0000038b 	andeq	r0, r0, fp, lsl #7
    3a20:	11015807 	tstne	r1, r7, lsl #16
    3a24:	00000082 	andeq	r0, r0, r2, lsl #1
    3a28:	161c2302 	ldrne	r2, [ip], -r2, lsl #6
    3a2c:	00524641 	subseq	r4, r2, r1, asr #12
    3a30:	11015907 	tstne	r1, r7, lsl #18
    3a34:	0000049f 	muleq	r0, pc, r4	@ <UNPREDICTABLE>
    3a38:	16202302 	strtne	r2, [r0], -r2, lsl #6
    3a3c:	00525242 	subseq	r5, r2, r2, asr #4
    3a40:	11015a07 	tstne	r1, r7, lsl #20
    3a44:	00000082 	andeq	r0, r0, r2, lsl #1
    3a48:	00282302 	eoreq	r2, r8, r2, lsl #6
    3a4c:	00008211 	andeq	r8, r0, r1, lsl r2
    3a50:	00049f00 	andeq	r9, r4, r0, lsl #30
    3a54:	009c1200 	addseq	r1, ip, r0, lsl #4
    3a58:	00010000 	andeq	r0, r1, r0
    3a5c:	00048f04 	andeq	r8, r4, r4, lsl #30
    3a60:	00001700 	andeq	r1, r0, r0, lsl #14
    3a64:	5b070000 	blpl	1c3a6c <_Min_Stack_Size+0x1c366c>
    3a68:	03e40301 	mvneq	r0, #67108864	@ 0x4000000
    3a6c:	38140000 	ldmdacc	r4, {}	@ <UNPREDICTABLE>
    3a70:	09019307 	stmdbeq	r1, {r0, r1, r2, r8, r9, ip, pc}
    3a74:	0000059b 	muleq	r0, fp, r5
    3a78:	00524316 	subseq	r4, r2, r6, lsl r3
    3a7c:	11019507 	tstne	r1, r7, lsl #10
    3a80:	00000082 	andeq	r0, r0, r2, lsl #1
    3a84:	15002302 	strne	r2, [r0, #-770]	@ 0xfffffcfe
    3a88:	00000080 	andeq	r0, r0, r0, lsl #1
    3a8c:	11019607 	tstne	r1, r7, lsl #12
    3a90:	00000082 	andeq	r0, r0, r2, lsl #1
    3a94:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    3a98:	0000008f 	andeq	r0, r0, pc, lsl #1
    3a9c:	11019707 	tstne	r1, r7, lsl #14
    3aa0:	00000082 	andeq	r0, r0, r2, lsl #1
    3aa4:	16082302 	strne	r2, [r8], -r2, lsl #6
    3aa8:	00524943 	subseq	r4, r2, r3, asr #18
    3aac:	11019807 	tstne	r1, r7, lsl #16
    3ab0:	00000082 	andeq	r0, r0, r2, lsl #1
    3ab4:	150c2302 	strne	r2, [ip, #-770]	@ 0xfffffcfe
    3ab8:	00000126 	andeq	r0, r0, r6, lsr #2
    3abc:	11019907 	tstne	r1, r7, lsl #18
    3ac0:	00000082 	andeq	r0, r0, r2, lsl #1
    3ac4:	15102302 	ldrne	r2, [r0, #-770]	@ 0xfffffcfe
    3ac8:	0000016d 	andeq	r0, r0, sp, ror #2
    3acc:	11019a07 	tstne	r1, r7, lsl #20
    3ad0:	00000082 	andeq	r0, r0, r2, lsl #1
    3ad4:	15142302 	ldrne	r2, [r4, #-770]	@ 0xfffffcfe
    3ad8:	0000001b 	andeq	r0, r0, fp, lsl r0
    3adc:	11019b07 	tstne	r1, r7, lsl #22
    3ae0:	00000082 	andeq	r0, r0, r2, lsl #1
    3ae4:	15182302 	ldrne	r2, [r8, #-770]	@ 0xfffffcfe
    3ae8:	0000020f 	andeq	r0, r0, pc, lsl #4
    3aec:	11019c07 	tstne	r1, r7, lsl #24
    3af0:	00000082 	andeq	r0, r0, r2, lsl #1
    3af4:	151c2302 	ldrne	r2, [ip, #-770]	@ 0xfffffcfe
    3af8:	0000010b 	andeq	r0, r0, fp, lsl #2
    3afc:	11019d07 	tstne	r1, r7, lsl #26
    3b00:	00000082 	andeq	r0, r0, r2, lsl #1
    3b04:	15202302 	strne	r2, [r0, #-770]!	@ 0xfffffcfe
    3b08:	0000009b 	muleq	r0, fp, r0
    3b0c:	11019e07 	tstne	r1, r7, lsl #28
    3b10:	00000082 	andeq	r0, r0, r2, lsl #1
    3b14:	15242302 	strne	r2, [r4, #-770]!	@ 0xfffffcfe
    3b18:	00000070 	andeq	r0, r0, r0, ror r0
    3b1c:	11019f07 	tstne	r1, r7, lsl #30
    3b20:	00000082 	andeq	r0, r0, r2, lsl #1
    3b24:	15282302 	strne	r2, [r8, #-770]!	@ 0xfffffcfe
    3b28:	00000390 	muleq	r0, r0, r3
    3b2c:	1101a007 	tstne	r1, r7
    3b30:	00000082 	andeq	r0, r0, r2, lsl #1
    3b34:	152c2302 	strne	r2, [ip, #-770]!	@ 0xfffffcfe
    3b38:	000002a4 	andeq	r0, r0, r4, lsr #5
    3b3c:	1101a107 	tstne	r1, r7, lsl #2
    3b40:	00000082 	andeq	r0, r0, r2, lsl #1
    3b44:	16302302 	ldrtne	r2, [r0], -r2, lsl #6
    3b48:	00525343 	subseq	r5, r2, r3, asr #6
    3b4c:	1101a207 	tstne	r1, r7, lsl #4
    3b50:	00000082 	andeq	r0, r0, r2, lsl #1
    3b54:	00342302 	eorseq	r2, r4, r2, lsl #6
    3b58:	00014f17 	andeq	r4, r1, r7, lsl pc
    3b5c:	01a30700 			@ <UNDEFINED> instruction: 0x01a30700
    3b60:	0004b103 	andeq	fp, r4, r3, lsl #2
    3b64:	071c1400 	ldreq	r1, [ip, -r0, lsl #8]
    3b68:	21090228 	tstcs	r9, r8, lsr #4
    3b6c:	16000006 	strne	r0, [r0], -r6
    3b70:	07005253 	smlsdeq	r0, r3, r2, r5
    3b74:	8211022a 	andshi	r0, r1, #-1610612734	@ 0xa0000002
    3b78:	02000000 	andeq	r0, r0, #0
    3b7c:	44160023 	ldrmi	r0, [r6], #-35	@ 0xffffffdd
    3b80:	2b070052 	blcs	1c3cd0 <_Min_Stack_Size+0x1c38d0>
    3b84:	00821102 	addeq	r1, r2, r2, lsl #2
    3b88:	23020000 	movwcs	r0, #8192	@ 0x2000
    3b8c:	52421604 	subpl	r1, r2, #4, 12	@ 0x400000
    3b90:	2c070052 	stccs	0, cr0, [r7], {82}	@ 0x52
    3b94:	00821102 	addeq	r1, r2, r2, lsl #2
    3b98:	23020000 	movwcs	r0, #8192	@ 0x2000
    3b9c:	52431608 	subpl	r1, r3, #8, 12	@ 0x800000
    3ba0:	2d070031 	stccs	0, cr0, [r7, #-196]	@ 0xffffff3c
    3ba4:	00821102 	addeq	r1, r2, r2, lsl #2
    3ba8:	23020000 	movwcs	r0, #8192	@ 0x2000
    3bac:	5243160c 	subpl	r1, r3, #12, 12	@ 0xc00000
    3bb0:	2e070032 	mcrcs	0, 0, r0, cr7, cr2, {1}
    3bb4:	00821102 	addeq	r1, r2, r2, lsl #2
    3bb8:	23020000 	movwcs	r0, #8192	@ 0x2000
    3bbc:	52431610 	subpl	r1, r3, #16, 12	@ 0x1000000
    3bc0:	2f070033 	svccs	0x00070033
    3bc4:	00821102 	addeq	r1, r2, r2, lsl #2
    3bc8:	23020000 	movwcs	r0, #8192	@ 0x2000
    3bcc:	0eb31514 	mrceq	5, 5, r1, cr3, cr4, {0}
    3bd0:	30070000 	andcc	r0, r7, r0
    3bd4:	00821102 	addeq	r1, r2, r2, lsl #2
    3bd8:	23020000 	movwcs	r0, #8192	@ 0x2000
    3bdc:	e1170018 	tst	r7, r8, lsl r0
    3be0:	0700000e 	streq	r0, [r0, -lr]
    3be4:	a8030231 	stmdage	r3, {r0, r4, r5, r9}
    3be8:	14000005 	strne	r0, [r0], #-5
    3bec:	02370754 	eorseq	r0, r7, #84, 14	@ 0x1500000
    3bf0:	0007d909 	andeq	sp, r7, r9, lsl #18
    3bf4:	06361500 	ldrteq	r1, [r6], -r0, lsl #10
    3bf8:	39070000 	stmdbcc	r7, {}	@ <UNPREDICTABLE>
    3bfc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c00:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c04:	08281500 	stmdaeq	r8!, {r8, sl, ip}
    3c08:	3a070000 	bcc	1c3c10 <_Min_Stack_Size+0x1c3810>
    3c0c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c10:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c14:	06871502 	streq	r1, [r7], r2, lsl #10
    3c18:	3b070000 	blcc	1c3c20 <_Min_Stack_Size+0x1c3820>
    3c1c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c20:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c24:	08321504 	ldmdaeq	r2!, {r2, r8, sl, ip}
    3c28:	3c070000 	stccc	0, cr0, [r7], {-0}
    3c2c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c30:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c34:	071f1506 	ldreq	r1, [pc, -r6, lsl #10]
    3c38:	3d070000 	stccc	0, cr0, [r7, #-0]
    3c3c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c40:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c44:	083c1508 	ldmdaeq	ip!, {r3, r8, sl, ip}
    3c48:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    3c4c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c50:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c54:	074e150a 	strbeq	r1, [lr, -sl, lsl #10]
    3c58:	3f070000 	svccc	0x00070000
    3c5c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c60:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c64:	0846150c 	stmdaeq	r6, {r2, r3, r8, sl, ip}^
    3c68:	40070000 	andmi	r0, r7, r0
    3c6c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c70:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c74:	09d5150e 	ldmibeq	r5, {r1, r2, r3, r8, sl, ip}^
    3c78:	41070000 	mrsmi	r0, (UNDEF: 7)
    3c7c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c80:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c84:	08501510 	ldmdaeq	r0, {r4, r8, sl, ip}^
    3c88:	42070000 	andmi	r0, r7, #0
    3c8c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3c90:	23020000 	movwcs	r0, #8192	@ 0x2000
    3c94:	08231512 	stmdaeq	r3!, {r1, r4, r8, sl, ip}
    3c98:	43070000 	movwmi	r0, #28672	@ 0x7000
    3c9c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3ca0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3ca4:	085a1514 	ldmdaeq	sl, {r2, r4, r8, sl, ip}^
    3ca8:	44070000 	strmi	r0, [r7], #-0
    3cac:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3cb0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3cb4:	08c71516 	stmiaeq	r7, {r1, r2, r4, r8, sl, ip}^
    3cb8:	45070000 	strmi	r0, [r7, #-0]
    3cbc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3cc0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3cc4:	08641518 	stmdaeq	r4!, {r3, r4, r8, sl, ip}^
    3cc8:	46070000 	strmi	r0, [r7], -r0
    3ccc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3cd0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3cd4:	0943151a 	stmdbeq	r3, {r1, r3, r4, r8, sl, ip}^
    3cd8:	47070000 	strmi	r0, [r7, -r0]
    3cdc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3ce0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3ce4:	0313151c 	tsteq	r3, #28, 10	@ 0x7000000
    3ce8:	48070000 	stmdami	r7, {}	@ <UNPREDICTABLE>
    3cec:	07e91102 	strbeq	r1, [r9, r2, lsl #2]!
    3cf0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3cf4:	08ef151e 	stmiaeq	pc!, {r1, r2, r3, r4, r8, sl, ip}^	@ <UNPREDICTABLE>
    3cf8:	49070000 	stmdbmi	r7, {}	@ <UNPREDICTABLE>
    3cfc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d00:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d04:	0a7a1540 	beq	1e8920c <_Min_Stack_Size+0x1e88e0c>
    3d08:	4a070000 	bmi	1c3d10 <_Min_Stack_Size+0x1c3910>
    3d0c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d10:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d14:	052a1542 	streq	r1, [sl, #-1346]!	@ 0xfffffabe
    3d18:	4b070000 	blmi	1c3d20 <_Min_Stack_Size+0x1c3920>
    3d1c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d20:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d24:	087f1544 	ldmdaeq	pc!, {r2, r6, r8, sl, ip}^	@ <UNPREDICTABLE>
    3d28:	4c070000 	stcmi	0, cr0, [r7], {-0}
    3d2c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d30:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d34:	4e461646 	cdpmi	6, 4, cr1, cr6, cr6, {2}
    3d38:	4d070052 	stcmi	0, cr0, [r7, #-328]	@ 0xfffffeb8
    3d3c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d40:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d44:	08891548 	stmeq	r9, {r3, r6, r8, sl, ip}
    3d48:	4e070000 	cdpmi	0, 0, cr0, cr7, cr0, {0}
    3d4c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d50:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d54:	05d2154a 	ldrbeq	r1, [r2, #1354]	@ 0x54a
    3d58:	4f070000 	svcmi	0x00070000
    3d5c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d60:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d64:	0a90154c 	beq	fe40929c <BootRAM+0xd379a3d>
    3d68:	50070000 	andpl	r0, r7, r0
    3d6c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d70:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d74:	0a0b154e 	beq	2c92b4 <_Min_Stack_Size+0x2c8eb4>
    3d78:	51070000 	mrspl	r0, (UNDEF: 7)
    3d7c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d80:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d84:	0a9a1550 	beq	fe6892cc <BootRAM+0xd5f9a6d>
    3d88:	52070000 	andpl	r0, r7, #0
    3d8c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3d90:	23020000 	movwcs	r0, #8192	@ 0x2000
    3d94:	65110052 	ldrvs	r0, [r1, #-82]	@ 0xffffffae
    3d98:	e9000000 	stmdb	r0, {}	@ <UNPREDICTABLE>
    3d9c:	12000007 	andne	r0, r0, #7
    3da0:	0000009c 	muleq	r0, ip, r0
    3da4:	d9040010 	stmdble	r4, {r4}
    3da8:	17000007 	strne	r0, [r0, -r7]
    3dac:	000005c6 	andeq	r0, r0, r6, asr #11
    3db0:	03025307 	movweq	r5, #8967	@ 0x2307
    3db4:	0000062e 	andeq	r0, r0, lr, lsr #12
    3db8:	0201020f 	andeq	r0, r1, #-268435456	@ 0xf0000000
    3dbc:	0831093a 	ldmdaeq	r1!, {r1, r3, r4, r5, r8, fp}
    3dc0:	73100000 	tstvc	r0, #0
    3dc4:	3b020074 	blcc	83f9c <_Min_Stack_Size+0x83b9c>
    3dc8:	00004d14 	andeq	r4, r0, r4, lsl sp
    3dcc:	00230200 	eoreq	r0, r3, r0, lsl #4
    3dd0:	006e6510 	rsbeq	r6, lr, r0, lsl r5
    3dd4:	4d173b02 	vldrmi	d3, [r7, #-8]
    3dd8:	02000000 	andeq	r0, r0, #0
    3ddc:	61100123 	tstvs	r0, r3, lsr #2
    3de0:	02007272 	andeq	r7, r0, #536870919	@ 0x20000007
    3de4:	0841143c 	stmdaeq	r1, {r2, r3, r4, r5, sl, ip}^
    3de8:	23020000 	movwcs	r0, #8192	@ 0x2000
    3dec:	4d110002 	ldcmi	0, cr0, [r1, #-8]
    3df0:	41000000 	mrsmi	r0, (UNDEF: 0)
    3df4:	12000008 	andne	r0, r0, #8
    3df8:	0000009c 	muleq	r0, ip, r0
    3dfc:	310400ff 	strdcc	r0, [r4, -pc]
    3e00:	03000008 	movweq	r0, #8
    3e04:	00000f69 	andeq	r0, r0, r9, ror #30
    3e08:	fb023d02 	blx	9321a <_Min_Stack_Size+0x92e1a>
    3e0c:	18000007 	stmdane	r0, {r0, r1, r2}
    3e10:	00000ea1 	andeq	r0, r0, r1, lsr #29
    3e14:	46148b02 	ldrmi	r8, [r4], -r2, lsl #22
    3e18:	05000008 	streq	r0, [r0, #-8]
    3e1c:	0000e803 	andeq	lr, r0, r3, lsl #16
    3e20:	0f601820 	svceq	0x00601820
    3e24:	8c020000 	stchi	0, cr0, [r2], {-0}
    3e28:	00084614 	andeq	r4, r8, r4, lsl r6
    3e2c:	ea030500 	b	c5234 <_Min_Stack_Size+0xc4e34>
    3e30:	19200001 	stmdbne	r0!, {r0}
    3e34:	000003ed 	andeq	r0, r0, sp, ror #7
    3e38:	821a0504 	andshi	r0, sl, #4, 10	@ 0x1000000
    3e3c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e40:	0e881a01 	vdiveq.f32	s2, s16, s2
    3e44:	01070000 	mrseq	r0, (UNDEF: 7)
    3e48:	08ce0815 	stmiaeq	lr, {r0, r2, r4, fp}^
    3e4c:	680b0000 	stmdavs	fp, {}	@ <UNPREDICTABLE>
    3e50:	0100000e 	tsteq	r0, lr
    3e54:	00760c16 	rsbseq	r0, r6, r6, lsl ip
    3e58:	23020000 	movwcs	r0, #8192	@ 0x2000
    3e5c:	0f8d0b00 	svceq	0x008d0b00
    3e60:	17010000 	strne	r0, [r1, -r0]
    3e64:	0000410b 	andeq	r4, r0, fp, lsl #2
    3e68:	04230200 	strteq	r0, [r3], #-512	@ 0xfffffe00
    3e6c:	000f290b 	andeq	r2, pc, fp, lsl #18
    3e70:	0b180100 	bleq	604278 <_Min_Stack_Size+0x603e78>
    3e74:	00000041 	andeq	r0, r0, r1, asr #32
    3e78:	0b052302 	bleq	14ca88 <_Min_Stack_Size+0x14c688>
    3e7c:	00000f57 	andeq	r0, r0, r7, asr pc
    3e80:	410b1901 	tstmi	fp, r1, lsl #18
    3e84:	02000000 	andeq	r0, r0, #0
    3e88:	04000623 	streq	r0, [r0], #-1571	@ 0xfffff9dd
    3e8c:	00000884 	andeq	r0, r0, r4, lsl #17
    3e90:	000e601b 	andeq	r6, lr, fp, lsl r0
    3e94:	201c0100 	andscs	r0, ip, r0, lsl #2
    3e98:	000008ce 	andeq	r0, r0, lr, asr #17
    3e9c:	0c030501 	cfstr32eq	mvfx0, [r3], {1}
    3ea0:	1b200000 	blne	803ea8 <_Min_Stack_Size+0x803aa8>
    3ea4:	00000f83 	andeq	r0, r0, r3, lsl #31
    3ea8:	ce202201 	cdpgt	2, 2, cr2, cr0, cr1, {0}
    3eac:	01000008 	tsteq	r0, r8
    3eb0:	00130305 	andseq	r0, r3, r5, lsl #6
    3eb4:	3e1b2000 	cdpcc	0, 1, cr2, cr11, cr0, {0}
    3eb8:	0100000f 	tsteq	r0, pc
    3ebc:	09130f2c 	ldmdbeq	r3, {r2, r3, r5, r8, r9, sl, fp}
    3ec0:	05010000 	streq	r0, [r1, #-0]
    3ec4:	0002ec03 	andeq	lr, r2, r3, lsl #24
    3ec8:	08010220 	stmdaeq	r1, {r5, r9}
    3ecc:	0000021f 	andeq	r0, r0, pc, lsl r2
    3ed0:	00090c04 	andeq	r0, r9, r4, lsl #24
    3ed4:	0e7d1b00 	vaddeq.f64	d17, d13, d0
    3ed8:	2d010000 	stccs	0, cr0, [r1, #-0]
    3edc:	00008213 	andeq	r8, r0, r3, lsl r2
    3ee0:	03050100 	movweq	r0, #20736	@ 0x5100
    3ee4:	200002f0 	strdcs	r0, [r0], -r0	@ <UNPREDICTABLE>
    3ee8:	000eaa18 	andeq	sl, lr, r8, lsl sl
    3eec:	0d930100 	ldfeqs	f0, [r3]
    3ef0:	0000090c 	andeq	r0, r0, ip, lsl #18
    3ef4:	02f40305 	rscseq	r0, r4, #335544320	@ 0x14000000
    3ef8:	011c2000 	tsteq	ip, r0
    3efc:	00000582 	andeq	r0, r0, r2, lsl #11
    3f00:	0106b303 	tsteq	r6, r3, lsl #6
    3f04:	00095c01 	andeq	r5, r9, r1, lsl #24
    3f08:	00410900 	subeq	r0, r1, r0, lsl #18
    3f0c:	5c090000 	stcpl	0, cr0, [r9], {-0}
    3f10:	09000009 	stmdbeq	r0, {r0, r3}
    3f14:	00000059 	andeq	r0, r0, r9, asr r0
    3f18:	6a040700 	bvs	105b20 <_Min_Stack_Size+0x105720>
    3f1c:	1c000000 	stcne	0, cr0, [r0], {-0}
    3f20:	00089f01 	andeq	r9, r8, r1, lsl #30
    3f24:	06290300 	strteq	r0, [r9], -r0, lsl #6
    3f28:	09860101 	stmibeq	r6, {r0, r8}
    3f2c:	41090000 	mrsmi	r0, (UNDEF: 9)
    3f30:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    3f34:	00000041 	andeq	r0, r0, r1, asr #32
    3f38:	00005909 	andeq	r5, r0, r9, lsl #18
    3f3c:	00a30900 	adceq	r0, r3, r0, lsl #18
    3f40:	1d000000 	stcne	0, cr0, [r0, #-0]
    3f44:	0006d701 	andeq	sp, r6, r1, lsl #14
    3f48:	05c00300 	strbeq	r0, [r0, #768]	@ 0x300
    3f4c:	00009501 	andeq	r9, r0, r1, lsl #10
    3f50:	09a40100 	stmibeq	r4!, {r8}
    3f54:	41090000 	mrsmi	r0, (UNDEF: 9)
    3f58:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    3f5c:	000009a4 	andeq	r0, r0, r4, lsr #19
    3f60:	59040700 	stmdbpl	r4, {r8, r9, sl}
    3f64:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    3f68:	000e9701 	andeq	r9, lr, r1, lsl #14
    3f6c:	06d90100 	ldrbeq	r0, [r9], r0, lsl #2
    3f70:	00126001 	andseq	r6, r2, r1
    3f74:	00130008 	andseq	r0, r3, r8
    3f78:	00167308 	andseq	r7, r6, r8, lsl #6
    3f7c:	0a120100 	beq	484384 <_Min_Stack_Size+0x483f84>
    3f80:	621f0000 	andsvs	r0, pc, #0
    3f84:	01006675 	tsteq	r0, r5, ror r6
    3f88:	0a121ad9 	beq	48aaf4 <_Min_Stack_Size+0x48a6f4>
    3f8c:	16990000 	ldrne	r0, [r9], r0
    3f90:	16930000 	ldrne	r0, [r3], r0
    3f94:	e2200000 	eor	r0, r0, #0
    3f98:	0100000f 	tsteq	r0, pc
    3f9c:	009523d9 			@ <UNDEFINED> instruction: 0x009523d9
    3fa0:	16cd0000 	strbne	r0, [sp], r0
    3fa4:	16c70000 	strbne	r0, [r7], r0
    3fa8:	76210000 	strtvc	r0, [r1], -r0
    3fac:	01006c61 	tsteq	r0, r1, ror #24
    3fb0:	00410bdb 	ldrdeq	r0, [r1], #-187	@ 0xffffff45
    3fb4:	16ff0000 	ldrbtne	r0, [pc], r0
    3fb8:	16f90000 	ldrbtne	r0, [r9], r0
    3fbc:	a8220000 	stmdage	r2!, {}	@ <UNPREDICTABLE>
    3fc0:	23000002 	movwcs	r0, #2
    3fc4:	e1010069 	tst	r1, r9, rrx
    3fc8:	0000950b 	andeq	r9, r0, fp, lsl #10
    3fcc:	07000000 	streq	r0, [r0, -r0]
    3fd0:	00004104 	andeq	r4, r0, r4, lsl #2
    3fd4:	4b012400 	blmi	4cfdc <_Min_Stack_Size+0x4cbdc>
    3fd8:	0100000c 	tsteq	r0, ip
    3fdc:	130006a3 	movwne	r0, #1699	@ 0x6a3
    3fe0:	14700800 	ldrbtne	r0, [r0], #-2048	@ 0xfffff800
    3fe4:	17290800 	strne	r0, [r9, -r0, lsl #16]!
    3fe8:	32010000 	andcc	r0, r1, #0
    3fec:	2500000d 	strcs	r0, [r0, #-13]
    3ff0:	00667562 	rsbeq	r7, r6, r2, ror #10
    3ff4:	3215a501 	andscc	sl, r5, #4194304	@ 0x400000
    3ff8:	0200000d 	andeq	r0, r0, #13
    3ffc:	7fb09103 	svcvc	0x00b09103
    4000:	000fe226 	andeq	lr, pc, r6, lsr #4
    4004:	07a60100 	streq	r0, [r6, r0, lsl #2]!
    4008:	00000095 	muleq	r0, r5, r0
    400c:	00001777 	andeq	r1, r0, r7, ror r7
    4010:	0000176f 	andeq	r1, r0, pc, ror #14
    4014:	0013e627 	andseq	lr, r3, r7, lsr #12
    4018:	00130e00 	andseq	r0, r3, r0, lsl #28
    401c:	130e0308 	movwne	r0, #58120	@ 0xe308
    4020:	13140800 	tstne	r4, #0, 16
    4024:	a8010800 	stmdage	r1, {fp}
    4028:	000a7e0a 	andeq	r7, sl, sl, lsl #28
    402c:	13f92800 	mvnsne	r2, #0, 16
    4030:	17c20000 	strbne	r0, [r2, r0]
    4034:	17c00000 	strbne	r0, [r0, r0]
    4038:	27000000 	strcs	r0, [r0, -r0]
    403c:	00001431 	andeq	r1, r0, r1, lsr r4
    4040:	0800133c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, ip}
    4044:	00133c01 	andseq	r3, r3, r1, lsl #24
    4048:	00134208 	andseq	r4, r3, r8, lsl #4
    404c:	09af0108 	stmibeq	pc!, {r3, r8}	@ <UNPREDICTABLE>
    4050:	00000abf 			@ <UNDEFINED> instruction: 0x00000abf
    4054:	00145728 	andseq	r5, r4, r8, lsr #14
    4058:	0017dc00 	andseq	sp, r7, r0, lsl #24
    405c:	0017da00 	andseq	sp, r7, r0, lsl #20
    4060:	144b2800 	strbne	r2, [fp], #-2048	@ 0xfffff800
    4064:	17f10000 	ldrbne	r0, [r1, r0]!
    4068:	17ef0000 	strbne	r0, [pc, r0]!
    406c:	3f280000 	svccc	0x00280000
    4070:	06000014 			@ <UNDEFINED> instruction: 0x06000014
    4074:	04000018 	streq	r0, [r0], #-24	@ 0xffffffe8
    4078:	00000018 	andeq	r0, r0, r8, lsl r0
    407c:	00143129 	andseq	r3, r4, r9, lsr #2
    4080:	0013f000 	andseq	pc, r3, r0
    4084:	02c00108 	sbceq	r0, r0, #8, 2
    4088:	b4010000 	strlt	r0, [r1], #-0
    408c:	000b0509 	andeq	r0, fp, r9, lsl #10
    4090:	14572800 	ldrbne	r2, [r7], #-2048	@ 0xfffff800
    4094:	181d0000 	ldmdane	sp, {}	@ <UNPREDICTABLE>
    4098:	181b0000 	ldmdane	fp, {}	@ <UNPREDICTABLE>
    409c:	4b280000 	blmi	a040a4 <_Min_Stack_Size+0xa03ca4>
    40a0:	32000014 	andcc	r0, r0, #20
    40a4:	30000018 	andcc	r0, r0, r8, lsl r0
    40a8:	28000018 	stmdacs	r0, {r3, r4}
    40ac:	0000143f 	andeq	r1, r0, pc, lsr r4
    40b0:	00001847 	andeq	r1, r0, r7, asr #16
    40b4:	00001845 	andeq	r1, r0, r5, asr #16
    40b8:	0013462a 	andseq	r4, r3, sl, lsr #12
    40bc:	00093d08 	andeq	r3, r9, r8, lsl #26
    40c0:	d4290000 	strtle	r0, [r9], #-0
    40c4:	4600000e 	strmi	r0, [r0], -lr
    40c8:	02080013 	andeq	r0, r8, #19
    40cc:	000002d8 	ldrdeq	r0, [r0], -r8
    40d0:	be03bb01 	vmlalt.f64	d11, d3, d1
    40d4:	2800000c 	stmdacs	r0, {r2, r3}
    40d8:	00000ee2 	andeq	r0, r0, r2, ror #29
    40dc:	00001866 	andeq	r1, r0, r6, ror #16
    40e0:	0000185c 	andeq	r1, r0, ip, asr r8
    40e4:	0002d822 	andeq	sp, r2, r2, lsr #16
    40e8:	0eee2b00 	vfmaeq.f64	d18, d14, d0
    40ec:	91020000 	mrsls	r0, (UNDEF: 2)
    40f0:	0efa2c50 	mrceq	12, 7, r2, cr10, cr0, {2}
    40f4:	18ae0000 	stmiane	lr!, {}	@ <UNPREDICTABLE>
    40f8:	18a80000 	stmiane	r8!, {}	@ <UNPREDICTABLE>
    40fc:	06270000 	strteq	r0, [r7], -r0
    4100:	5c000014 	stcpl	0, cr0, [r0], {20}
    4104:	01080013 	tsteq	r8, r3, lsl r0
    4108:	0800135c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, ip}
    410c:	08001364 	stmdaeq	r0, {r2, r5, r6, r8, r9, ip}
    4110:	8a257f01 	bhi	963d1c <_Min_Stack_Size+0x96391c>
    4114:	2800000b 	stmdacs	r0, {r0, r1, r3}
    4118:	00001424 	andeq	r1, r0, r4, lsr #8
    411c:	000018dd 	ldrdeq	r1, [r0], -sp
    4120:	000018d7 	ldrdeq	r1, [r0], -r7
    4124:	00141828 	andseq	r1, r4, r8, lsr #16
    4128:	00190c00 	andseq	r0, r9, r0, lsl #24
    412c:	00190a00 	andseq	r0, r9, r0, lsl #20
    4130:	13642d00 	cmnne	r4, #0, 26
    4134:	09860800 	stmibeq	r6, {fp}
    4138:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    413c:	2e350150 	mrccs	1, 1, r0, cr5, cr0, {2}
    4140:	91025101 	tstls	r2, r1, lsl #2
    4144:	27000050 	smlsdcs	r0, r0, r0, r0
    4148:	000013e6 	andeq	r1, r0, r6, ror #7
    414c:	0800137a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, ip}
    4150:	00137a01 	andseq	r7, r3, r1, lsl #20
    4154:	00138408 	andseq	r8, r3, r8, lsl #8
    4158:	09890108 	stmibeq	r9, {r3, r8}
    415c:	00000bb1 			@ <UNDEFINED> instruction: 0x00000bb1
    4160:	0013f928 	andseq	pc, r3, r8, lsr #18
    4164:	00192200 	andseq	r2, r9, r0, lsl #4
    4168:	00192000 	andseq	r2, r9, r0
    416c:	06270000 	strteq	r0, [r7], -r0
    4170:	8e000014 	mcrhi	0, 0, r0, cr0, cr4, {0}
    4174:	01080013 	tsteq	r8, r3, lsl r0
    4178:	0800138e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, ip}
    417c:	08001398 	stmdaeq	r0, {r3, r4, r7, r8, r9, ip}
    4180:	f50e8a01 			@ <UNDEFINED> instruction: 0xf50e8a01
    4184:	2800000b 	stmdacs	r0, {r0, r1, r3}
    4188:	00001424 	andeq	r1, r0, r4, lsr #8
    418c:	00001940 	andeq	r1, r0, r0, asr #18
    4190:	0000193a 	andeq	r1, r0, sl, lsr r9
    4194:	00141828 	andseq	r1, r4, r8, lsr #16
    4198:	00196f00 	andseq	r6, r9, r0, lsl #30
    419c:	00196d00 	andseq	r6, r9, r0, lsl #26
    41a0:	13982d00 	orrsne	r2, r8, #0, 26
    41a4:	09860800 	stmibeq	r6, {fp}
    41a8:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    41ac:	50910251 	addspl	r0, r1, r1, asr r2
    41b0:	06270000 	strteq	r0, [r7], -r0
    41b4:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    41b8:	01080014 	tsteq	r8, r4, lsl r0
    41bc:	0800140e 	stmdaeq	r0, {r1, r2, r3, sl, ip}
    41c0:	08001416 	stmdaeq	r0, {r1, r2, r4, sl, ip}
    41c4:	3e258301 	cdpcc	3, 2, cr8, cr5, cr1, {0}
    41c8:	2800000c 	stmdacs	r0, {r2, r3}
    41cc:	00001424 	andeq	r1, r0, r4, lsr #8
    41d0:	00001988 	andeq	r1, r0, r8, lsl #19
    41d4:	00001982 	andeq	r1, r0, r2, lsl #19
    41d8:	00141828 	andseq	r1, r4, r8, lsr #16
    41dc:	0019b700 	andseq	fp, r9, r0, lsl #14
    41e0:	0019b500 	andseq	fp, r9, r0, lsl #10
    41e4:	14162d00 	ldrne	r2, [r6], #-3328	@ 0xfffff300
    41e8:	09860800 	stmibeq	r6, {fp}
    41ec:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    41f0:	2e330150 	mrccs	1, 1, r0, cr3, cr0, {2}
    41f4:	91025101 	tstls	r2, r1, lsl #2
    41f8:	2f000050 	svccs	0x00000050
    41fc:	00001134 	andeq	r1, r0, r4, lsr r1
    4200:	08001422 	stmdaeq	r0, {r1, r5, sl, ip}
    4204:	0002f002 	andeq	pc, r2, r2
    4208:	05850100 	streq	r0, [r5, #256]	@ 0x100
    420c:	00140627 	andseq	r0, r4, r7, lsr #12
    4210:	00143400 	andseq	r3, r4, r0, lsl #8
    4214:	14340108 	ldrtne	r0, [r4], #-264	@ 0xfffffef8
    4218:	143e0800 	ldrtne	r0, [lr], #-2048	@ 0xfffff800
    421c:	8e010800 	cdphi	8, 0, cr0, cr1, cr0, {0}
    4220:	000c980c 	andeq	r9, ip, ip, lsl #16
    4224:	14242800 	strtne	r2, [r4], #-2048	@ 0xfffff800
    4228:	19d10000 	ldmibne	r1, {}^	@ <UNPREDICTABLE>
    422c:	19cb0000 	stmibne	fp, {}^	@ <UNPREDICTABLE>
    4230:	18280000 	stmdane	r8!, {}	@ <UNPREDICTABLE>
    4234:	00000014 	andeq	r0, r0, r4, lsl r0
    4238:	fe00001a 	mcr2	0, 0, r0, cr0, cr10, {0}
    423c:	2d000019 	stccs	0, cr0, [r0, #-100]	@ 0xffffff9c
    4240:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
    4244:	00000986 	andeq	r0, r0, r6, lsl #19
    4248:	0150012e 	cmpeq	r0, lr, lsr #2
    424c:	51012e35 	tstpl	r1, r5, lsr lr
    4250:	00509102 	subseq	r9, r0, r2, lsl #2
    4254:	13a03000 	movne	r3, #0
    4258:	126f0800 	rsbne	r0, pc, #0, 16
    425c:	0cac0000 	stceq	0, cr0, [ip]
    4260:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4264:	50910250 	addspl	r0, r1, r0, asr r2
    4268:	14442d00 	strbne	r2, [r4], #-3328	@ 0xfffff300
    426c:	09aa0800 	stmibeq	sl!, {fp}
    4270:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4274:	50910250 	addspl	r0, r1, r0, asr r2
    4278:	31000000 	mrscc	r0, (UNDEF: 0)
    427c:	00001134 	andeq	r1, r0, r4, lsr r1
    4280:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
    4284:	0013a601 	andseq	sl, r3, r1, lsl #12
    4288:	0013aa08 	andseq	sl, r3, r8, lsl #20
    428c:	09bf0108 	ldmibeq	pc!, {r3, r8}	@ <UNPREDICTABLE>
    4290:	00133c30 	andseq	r3, r3, r0, lsr ip
    4294:	0011bf08 	andseq	fp, r1, r8, lsl #30
    4298:	000ced00 	andeq	lr, ip, r0, lsl #26
    429c:	50012e00 	andpl	r2, r1, r0, lsl #28
    42a0:	2e007d02 	cdpcs	13, 0, cr7, cr0, cr2, {0}
    42a4:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    42a8:	be300000 	cdplt	0, 3, cr0, cr0, cr0, {0}
    42ac:	bb080013 	bllt	204300 <_Min_Stack_Size+0x203f00>
    42b0:	01000010 	tsteq	r0, r0, lsl r0
    42b4:	2e00000d 	cdpcs	0, 0, cr0, cr0, cr13, {0}
    42b8:	70025001 	andvc	r5, r2, r1
    42bc:	f0300000 			@ <UNDEFINED> instruction: 0xf0300000
    42c0:	bf080013 	svclt	0x00080013
    42c4:	1b000011 	blne	4310 <_Min_Stack_Size+0x3f10>
    42c8:	2e00000d 	cdpcs	0, 0, cr0, cr0, cr13, {0}
    42cc:	7d025001 	stcvc	0, cr5, [r2, #-4]
    42d0:	51012e00 	tstpl	r1, r0, lsl #28
    42d4:	00007502 	andeq	r7, r0, r2, lsl #10
    42d8:	0014002d 	andseq	r0, r4, sp, lsr #32
    42dc:	0011bf08 	andseq	fp, r1, r8, lsl #30
    42e0:	50012e00 	andpl	r2, r1, r0, lsl #28
    42e4:	2e007d02 	cdpcs	13, 0, cr7, cr0, cr2, {0}
    42e8:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    42ec:	11000000 	mrsne	r0, (UNDEF: 0)
    42f0:	00000041 	andeq	r0, r0, r1, asr #32
    42f4:	00000d42 	andeq	r0, r0, r2, asr #26
    42f8:	00009c12 	andeq	r9, r0, r2, lsl ip
    42fc:	24001f00 	strcs	r1, [r0], #-3840	@ 0xfffff100
    4300:	000de901 	andeq	lr, sp, r1, lsl #18
    4304:	06950100 	ldreq	r0, [r5], r0, lsl #2
    4308:	08001170 	stmdaeq	r0, {r4, r5, r6, r8, ip}
    430c:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
    4310:	00001a14 	andeq	r1, r0, r4, lsl sl
    4314:	000ed401 	andeq	sp, lr, r1, lsl #8
    4318:	02783200 	rsbseq	r3, r8, #0, 4
    431c:	0d7a0000 	ldcleq	0, cr0, [sl, #-0]
    4320:	2b260000 	blcs	984328 <_Min_Stack_Size+0x983f28>
    4324:	01000000 	mrseq	r0, (UNDEF: 0)
    4328:	00760396 			@ <UNDEFINED> instruction: 0x00760396
    432c:	1a3c0000 	bne	f04334 <_Min_Stack_Size+0xf03f34>
    4330:	1a340000 	bne	d04338 <_Min_Stack_Size+0xd03f38>
    4334:	33000000 	movwcc	r0, #0
    4338:	080011a2 	stmdaeq	r0, {r1, r5, r7, r8, ip}
    433c:	080011c2 	stmdaeq	r0, {r1, r6, r7, r8, ip}
    4340:	00000d9c 	muleq	r0, ip, sp
    4344:	00002b26 	andeq	r2, r0, r6, lsr #22
    4348:	03960100 	orrseq	r0, r6, #0, 2
    434c:	00000076 	andeq	r0, r0, r6, ror r0
    4350:	00001a83 	andeq	r1, r0, r3, lsl #21
    4354:	00001a79 	andeq	r1, r0, r9, ror sl
    4358:	14642900 	strbtne	r2, [r4], #-2304	@ 0xfffff700
    435c:	11700000 	cmnne	r0, r0
    4360:	58030800 	stmdapl	r3, {fp}
    4364:	01000002 	tsteq	r0, r2
    4368:	0dbf0396 	ldceq	3, cr0, [pc, #600]!	@ 45c8 <_Min_Stack_Size+0x41c8>
    436c:	73280000 			@ <UNDEFINED> instruction: 0x73280000
    4370:	d0000014 	andle	r0, r0, r4, lsl r0
    4374:	ce00001a 	mcrgt	0, 0, r0, cr0, cr10, {0}
    4378:	0000001a 	andeq	r0, r0, sl, lsl r0
    437c:	00148127 	andseq	r8, r4, r7, lsr #2
    4380:	0011ec00 	andseq	lr, r1, r0, lsl #24
    4384:	11ec0108 	mvnne	r0, r8, lsl #2
    4388:	11ee0800 	mvnne	r0, r0, lsl #16
    438c:	96010800 	strls	r0, [r1], -r0, lsl #16
    4390:	000de603 	andeq	lr, sp, r3, lsl #12
    4394:	14902800 	ldrne	r2, [r0], #2048	@ 0x800
    4398:	1ae70000 	bne	ff9c43a0 <BootRAM+0xe934b41>
    439c:	1ae50000 	bne	ff9443a4 <BootRAM+0xe8b4b45>
    43a0:	30000000 	andcc	r0, r0, r0
    43a4:	080011f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, ip}
    43a8:	00001236 	andeq	r1, r0, r6, lsr r2
    43ac:	00000dfd 	strdeq	r0, [r0], -sp
    43b0:	0550012e 	ldrbeq	r0, [r0, #-302]	@ 0xfffffed2
    43b4:	0019b403 	andseq	fp, r9, r3, lsl #8
    43b8:	02300008 	eorseq	r0, r0, #8
    43bc:	62080012 	andvs	r0, r8, #18
    43c0:	21000009 	tstcs	r0, r9
    43c4:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    43c8:	09025001 	stmdbeq	r2, {r0, ip, lr}
    43cc:	51012e84 	smlabbpl	r1, r4, lr, r2
    43d0:	012e3301 			@ <UNDEFINED> instruction: 0x012e3301
    43d4:	2e380152 	mrccs	1, 1, r0, cr8, cr2, {2}
    43d8:	74025301 	strvc	r5, [r2], #-769	@ 0xfffffcff
    43dc:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
    43e0:	62080012 	andvs	r0, r8, #18
    43e4:	46000009 	strmi	r0, [r0], -r9
    43e8:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    43ec:	09025001 	stmdbeq	r2, {r0, ip, lr}
    43f0:	51012e81 	smlabbpl	r1, r1, lr, r2
    43f4:	012e3201 			@ <UNDEFINED> instruction: 0x012e3201
    43f8:	00760252 	rsbseq	r0, r6, r2, asr r2
    43fc:	0253012e 	subseq	r0, r3, #-2147483637	@ 0x8000000b
    4400:	30000074 	andcc	r0, r0, r4, ror r0
    4404:	0800121a 	stmdaeq	r0, {r1, r3, r4, r9, ip}
    4408:	00000962 	andeq	r0, r0, r2, ror #18
    440c:	00000e6a 	andeq	r0, r0, sl, ror #28
    4410:	0150012e 	cmpeq	r0, lr, lsr #2
    4414:	51012e31 	tstpl	r1, r1, lsr lr
    4418:	012e3201 			@ <UNDEFINED> instruction: 0x012e3201
    441c:	00760252 	rsbseq	r0, r6, r2, asr r2
    4420:	0253012e 	subseq	r0, r3, #-2147483637	@ 0x8000000b
    4424:	30000074 	andcc	r0, r0, r4, ror r0
    4428:	08001226 	stmdaeq	r0, {r1, r2, r5, r9, ip}
    442c:	00000962 	andeq	r0, r0, r2, ror #18
    4430:	00000e8e 	andeq	r0, r0, lr, lsl #29
    4434:	0250012e 	subseq	r0, r0, #-2147483637	@ 0x8000000b
    4438:	012e8509 			@ <UNDEFINED> instruction: 0x012e8509
    443c:	2e330151 	mrccs	1, 1, r0, cr3, cr1, {2}
    4440:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    4444:	0253012e 	subseq	r0, r3, #-2147483637	@ 0x8000000b
    4448:	30000074 	andcc	r0, r0, r4, ror r0
    444c:	08001232 	stmdaeq	r0, {r1, r4, r5, r9, ip}
    4450:	00000962 	andeq	r0, r0, r2, ror #18
    4454:	00000eb3 			@ <UNDEFINED> instruction: 0x00000eb3
    4458:	0250012e 	subseq	r0, r0, #-2147483637	@ 0x8000000b
    445c:	012e8209 			@ <UNDEFINED> instruction: 0x012e8209
    4460:	2e320151 	mrccs	1, 1, r0, cr2, cr1, {2}
    4464:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4468:	53012e00 	movwpl	r2, #7680	@ 0x1e00
    446c:	00007402 	andeq	r7, r0, r2, lsl #8
    4470:	00123e2d 	andseq	r3, r2, sp, lsr #28
    4474:	00096208 	andeq	r6, r9, r8, lsl #4
    4478:	50012e00 	andpl	r2, r1, r0, lsl #28
    447c:	012e3201 			@ <UNDEFINED> instruction: 0x012e3201
    4480:	2e320151 	mrccs	1, 1, r0, cr2, cr1, {2}
    4484:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4488:	53012e00 	movwpl	r2, #7680	@ 0x1e00
    448c:	00007402 	andeq	r7, r0, r2, lsl #8
    4490:	0ed93400 	cdpeq	4, 13, cr3, cr9, cr0, {0}
    4494:	79010000 	stmdbvc	r1, {}	@ <UNPREDICTABLE>
    4498:	0701010d 	streq	r0, [r1, -sp, lsl #2]
    449c:	3500000f 	strcc	r0, [r0, #-15]
    44a0:	00000921 	andeq	r0, r0, r1, lsr #18
    44a4:	411d7901 	tstmi	sp, r1, lsl #18
    44a8:	23000000 	movwcs	r0, #0
    44ac:	00667562 	rsbeq	r7, r6, r2, ror #10
    44b0:	320b7a01 	andcc	r7, fp, #4096	@ 0x1000
    44b4:	3600000d 	strcc	r0, [r0], -sp
    44b8:	00000fe2 	andeq	r0, r0, r2, ror #31
    44bc:	95077b01 	strls	r7, [r7, #-2817]	@ 0xfffff4ff
    44c0:	00000000 	andeq	r0, r0, r0
    44c4:	0b840137 	bleq	fe1049a8 <BootRAM+0xd075149>
    44c8:	57010000 	strpl	r0, [r1, -r0]
    44cc:	090c0106 	stmdbeq	ip, {r1, r2, r8}
    44d0:	10dc0000 	sbcsne	r0, ip, r0
    44d4:	11700800 	cmnne	r0, r0, lsl #16
    44d8:	1afc0800 	bne	fff064e0 <BootRAM+0xee76c81>
    44dc:	a5010000 	strge	r0, [r1, #-0]
    44e0:	1f000010 	svcne	0x00000010
    44e4:	00716572 	rsbseq	r6, r1, r2, ror r5
    44e8:	a5285701 	strge	r5, [r8, #-1793]!	@ 0xfffff8ff
    44ec:	4a000010 	bmi	4534 <_Min_Stack_Size+0x4134>
    44f0:	4200001b 	andmi	r0, r0, #27
    44f4:	2000001b 	andcs	r0, r0, fp, lsl r0
    44f8:	00000621 	andeq	r0, r0, r1, lsr #12
    44fc:	59365701 	ldmdbpl	r6!, {r0, r8, r9, sl, ip, lr}
    4500:	92000000 	andls	r0, r0, #0
    4504:	8400001b 	strhi	r0, [r0], #-27	@ 0xffffffe5
    4508:	2000001b 	andcs	r0, r0, fp, lsl r0
    450c:	0000081b 	andeq	r0, r0, fp, lsl r8
    4510:	59475701 	stmdbpl	r7, {r0, r8, r9, sl, ip, lr}^
    4514:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    4518:	f000001b 			@ <UNDEFINED> instruction: 0xf000001b
    451c:	3300001b 	movwcc	r0, #27
    4520:	08001156 	stmdaeq	r0, {r1, r2, r4, r6, r8, ip}
    4524:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
    4528:	00000fc6 	andeq	r0, r0, r6, asr #31
    452c:	66756238 			@ <UNDEFINED> instruction: 0x66756238
    4530:	116b0100 	cmnne	fp, r0, lsl #2
    4534:	000010ab 	andeq	r1, r0, fp, lsr #1
    4538:	7f949103 	svcvc	0x00949103
    453c:	00140639 	andseq	r0, r4, r9, lsr r6
    4540:	00115600 	andseq	r5, r1, r0, lsl #12
    4544:	11560308 	cmpne	r6, r8, lsl #6
    4548:	11600800 	cmnne	r0, r0, lsl #16
    454c:	6c010800 	stcvs	8, cr0, [r1], {-0}
    4550:	14242809 	strtne	r2, [r4], #-2057	@ 0xfffff7f7
    4554:	1c620000 	stclne	0, cr0, [r2], #-0
    4558:	1c5c0000 	mrane	r0, ip, acc0
    455c:	18280000 	stmdane	r8!, {}	@ <UNPREDICTABLE>
    4560:	93000014 	movwls	r0, #20
    4564:	9100001c 	tstls	r0, ip, lsl r0
    4568:	2d00001c 	stccs	0, cr0, [r0, #-112]	@ 0xffffff90
    456c:	0800115e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, ip}
    4570:	00000986 	andeq	r0, r0, r6, lsl #19
    4574:	0150012e 	cmpeq	r0, lr, lsr #2
    4578:	51012e31 	tstpl	r1, r1, lsr lr
    457c:	7f949103 	svcvc	0x00949103
    4580:	27000000 	strcs	r0, [r0, -r0]
    4584:	00001406 	andeq	r1, r0, r6, lsl #8
    4588:	080010f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, ip}
    458c:	0010f801 	andseq	pc, r0, r1, lsl #16
    4590:	0010fe08 	andseq	pc, r0, r8, lsl #28
    4594:	095c0108 	ldmdbeq	ip, {r3, r8}^
    4598:	0000100d 	andeq	r1, r0, sp
    459c:	00142428 	andseq	r2, r4, r8, lsr #8
    45a0:	001ca900 	andseq	sl, ip, r0, lsl #18
    45a4:	001ca700 	andseq	sl, ip, r0, lsl #14
    45a8:	14182800 	ldrne	r2, [r8], #-2048	@ 0xfffff800
    45ac:	1cc30000 	stclne	0, cr0, [r3], {0}
    45b0:	1cc10000 	stclne	0, cr0, [r1], {0}
    45b4:	fe2d0000 	cdp2	0, 2, cr0, cr13, cr0, {0}
    45b8:	86080010 			@ <UNDEFINED> instruction: 0x86080010
    45bc:	2e000009 	cdpcs	0, 0, cr0, cr0, cr9, {0}
    45c0:	03055101 	movweq	r5, #20737	@ 0x5101
    45c4:	2000000c 	andcs	r0, r0, ip
    45c8:	06270000 	strteq	r0, [r7], -r0
    45cc:	16000014 			@ <UNDEFINED> instruction: 0x16000014
    45d0:	01080011 	tsteq	r8, r1, lsl r0
    45d4:	08001116 	stmdaeq	r0, {r1, r2, r4, r8, ip}
    45d8:	08001120 	stmdaeq	r0, {r5, r8, ip}
    45dc:	56096101 	strpl	r6, [r9], -r1, lsl #2
    45e0:	28000010 	stmdacs	r0, {r4}
    45e4:	00001424 	andeq	r1, r0, r4, lsr #8
    45e8:	00001cd9 	ldrdeq	r1, [r0], -r9
    45ec:	00001cd7 	ldrdeq	r1, [r0], -r7
    45f0:	00141828 	andseq	r1, r4, r8, lsr #16
    45f4:	001cf300 	andseq	pc, ip, r0, lsl #6
    45f8:	001cf100 	andseq	pc, ip, r0, lsl #2
    45fc:	11202d00 			@ <UNDEFINED> instruction: 0x11202d00
    4600:	09860800 	stmibeq	r6, {fp}
    4604:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4608:	2e310150 	mrccs	1, 1, r0, cr1, cr0, {2}
    460c:	74025101 	strvc	r5, [r2], #-257	@ 0xfffffeff
    4610:	31000007 	tstcc	r0, r7
    4614:	00001134 	andeq	r1, r0, r4, lsr r1
    4618:	08001130 	stmdaeq	r0, {r4, r5, r8, ip}
    461c:	00113002 	andseq	r3, r1, r2
    4620:	00113408 	andseq	r3, r1, r8, lsl #8
    4624:	0b640108 	bleq	1904a4c <_Min_Stack_Size+0x190464c>
    4628:	00113431 	andseq	r3, r1, r1, lsr r4
    462c:	00115400 	andseq	r5, r1, r0, lsl #8
    4630:	11540208 	cmpne	r4, r8, lsl #4
    4634:	11560800 	cmpne	r6, r0, lsl #16
    4638:	68010800 	stmdavs	r1, {fp}
    463c:	110c300b 	tstne	ip, fp
    4640:	10bb0800 	adcsne	r0, fp, r0, lsl #16
    4644:	10940000 	addsne	r0, r4, r0
    4648:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    464c:	00700250 	rsbseq	r0, r0, r0, asr r2
    4650:	11542d00 	cmpne	r4, r0, lsl #26
    4654:	10bb0800 	adcsne	r0, fp, r0, lsl #16
    4658:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    465c:	00700250 	rsbseq	r0, r0, r0, asr r2
    4660:	04070000 	streq	r0, [r7], #-0
    4664:	00000116 	andeq	r0, r0, r6, lsl r1
    4668:	00004111 	andeq	r4, r0, r1, lsl r1
    466c:	0010bb00 	andseq	fp, r0, r0, lsl #22
    4670:	009c1200 	addseq	r1, ip, r0, lsl #4
    4674:	00630000 	rsbeq	r0, r3, r0
    4678:	0f15013a 	svceq	0x0015013a
    467c:	44010000 	strmi	r0, [r1], #-0
    4680:	d7010106 	strle	r0, [r1, -r6, lsl #2]
    4684:	3b000010 	blcc	46cc <_Min_Stack_Size+0x42cc>
    4688:	00676663 	rsbeq	r6, r7, r3, ror #12
    468c:	d7304401 	ldrle	r4, [r0, -r1, lsl #8]!
    4690:	00000010 	andeq	r0, r0, r0, lsl r0
    4694:	08ce0407 	stmiaeq	lr, {r0, r1, r2, sl}^
    4698:	013c0000 	teqeq	ip, r0
    469c:	00000bac 	andeq	r0, r0, ip, lsr #23
    46a0:	01063401 	tsteq	r6, r1, lsl #8
    46a4:	0000090c 	andeq	r0, r0, ip, lsl #18
    46a8:	08001030 	stmdaeq	r0, {r4, r5, ip}
    46ac:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
    46b0:	01007d02 	tsteq	r0, r2, lsl #26
    46b4:	0000112c 	andeq	r1, r0, ip, lsr #2
    46b8:	7165721f 	cmnvc	r5, pc, lsl r2
    46bc:	27340100 	ldrcs	r0, [r4, -r0, lsl #2]!
    46c0:	000010a5 	andeq	r1, r0, r5, lsr #1
    46c4:	00001d0f 	andeq	r1, r0, pc, lsl #26
    46c8:	00001d07 	andeq	r1, r0, r7, lsl #26
    46cc:	000ade3d 	andeq	sp, sl, sp, lsr lr
    46d0:	33340100 	teqcc	r4, #0, 2
    46d4:	0000112c 	andeq	r1, r0, ip, lsr #2
    46d8:	e23d5101 	eors	r5, sp, #1073741824	@ 0x40000000
    46dc:	0100000f 	tsteq	r0, pc
    46e0:	09a44334 	stmibeq	r4!, {r2, r4, r5, r8, r9, lr}
    46e4:	52010000 	andpl	r0, r1, #0
    46e8:	32040700 	andcc	r0, r4, #0, 14
    46ec:	3e000011 	mcrcc	0, 0, r0, cr0, cr1, {0}
    46f0:	d3013f04 	movwle	r3, #7940	@ 0x1f04
    46f4:	0400000b 	streq	r0, [r0], #-11
    46f8:	00761106 	rsbseq	r1, r6, r6, lsl #2
    46fc:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    4700:	000f0a01 	andeq	r0, pc, r1, lsl #20
    4704:	06a70200 	strteq	r0, [r7], r0, lsl #4
    4708:	000fd801 	andeq	sp, pc, r1, lsl #16
    470c:	00103008 	andseq	r3, r0, r8
    4710:	001d4908 	andseq	r4, sp, r8, lsl #18
    4714:	11b90100 			@ <UNDEFINED> instruction: 0x11b90100
    4718:	731f0000 	tstvc	pc, #0
    471c:	02007274 	andeq	r7, r0, #116, 4	@ 0x40000007
    4720:	11b917a7 			@ <UNDEFINED> instruction: 0x11b917a7
    4724:	1d730000 	ldclne	0, cr0, [r3, #-0]
    4728:	1d690000 	stclne	0, cr0, [r9, #-0]
    472c:	6c1f0000 	ldcvs	0, cr0, [pc], {-0}
    4730:	02006e65 	andeq	r6, r0, #1616	@ 0x650
    4734:	004124a7 	subeq	r2, r1, r7, lsr #9
    4738:	1db80000 	ldcne	0, cr0, [r8]
    473c:	1db20000 	ldcne	0, cr0, [r2]
    4740:	e6290000 	strt	r0, [r9], -r0
    4744:	04000013 	streq	r0, [r0], #-19	@ 0xffffffed
    4748:	02080010 	andeq	r0, r8, #16
    474c:	00000228 	andeq	r0, r0, r8, lsr #4
    4750:	a80ba902 	stmdage	fp, {r1, r8, fp, sp, pc}
    4754:	28000011 	stmdacs	r0, {r0, r4}
    4758:	000013f9 	strdeq	r1, [r0], -r9
    475c:	00001de5 	andeq	r1, r0, r5, ror #27
    4760:	00001de3 	andeq	r1, r0, r3, ror #27
    4764:	10182d00 	andsne	r2, r8, r0, lsl #26
    4768:	137c0800 	cmnne	ip, #0, 16
    476c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4770:	00760250 	rsbseq	r0, r6, r0, asr r2
    4774:	04070000 	streq	r0, [r7], #-0
    4778:	0000090c 	andeq	r0, r0, ip, lsl #18
    477c:	0f1e011e 	svceq	0x001e011e
    4780:	a0020000 	andge	r0, r2, r0
    4784:	0fac0106 	svceq	0x00ac0106
    4788:	0fd80800 	svceq	0x00d80800
    478c:	1dfd0800 	ldclne	8, cr0, [sp]
    4790:	36010000 	strcc	r0, [r1], -r0
    4794:	20000012 	andcs	r0, r0, r2, lsl r0
    4798:	00000ade 	ldrdeq	r0, [r0], -lr
    479c:	121aa002 	andsne	sl, sl, #2
    47a0:	2500000a 	strcs	r0, [r0, #-10]
    47a4:	1d00001e 	stcne	0, cr0, [r0, #-120]	@ 0xffffff88
    47a8:	1f00001e 	svcne	0x0000001e
    47ac:	006e656c 	rsbeq	r6, lr, ip, ror #10
    47b0:	4128a002 			@ <UNDEFINED> instruction: 0x4128a002
    47b4:	5d000000 	stcpl	0, cr0, [r0, #-0]
    47b8:	5b00001e 	blpl	4838 <_Min_Stack_Size+0x4438>
    47bc:	2900001e 	stmdbcs	r0, {r1, r2, r3, r4}
    47c0:	000013e6 	andeq	r1, r0, r6, ror #7
    47c4:	08000fba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl, fp}
    47c8:	00021002 	andeq	r1, r2, r2
    47cc:	0ba20200 	bleq	fe884fd4 <BootRAM+0xd7f5775>
    47d0:	00001225 	andeq	r1, r0, r5, lsr #4
    47d4:	0013f928 	andseq	pc, r3, r8, lsr #18
    47d8:	001e7200 	andseq	r7, lr, r0, lsl #4
    47dc:	001e7000 	andseq	r7, lr, r0
    47e0:	ce2d0000 	cdpgt	0, 2, cr0, cr13, cr0, {0}
    47e4:	7c08000f 	stcvc	0, cr0, [r8], {15}
    47e8:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    47ec:	76025001 	strvc	r5, [r2], -r1
    47f0:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    47f4:	000eff01 	andeq	pc, lr, r1, lsl #30
    47f8:	069c0200 	ldreq	r0, [ip], r0, lsl #4
    47fc:	000f8401 	andeq	r8, pc, r1, lsl #8
    4800:	000fac08 	andeq	sl, pc, r8, lsl #24
    4804:	001e8a08 	andseq	r8, lr, r8, lsl #20
    4808:	126f0100 	rsbne	r0, pc, #0, 2
    480c:	731f0000 	tstvc	pc, #0
    4810:	02007274 	andeq	r7, r0, #116, 4	@ 0x40000007
    4814:	11b9179c 			@ <UNDEFINED> instruction: 0x11b9179c
    4818:	1eb20000 	cdpne	0, 11, cr0, cr2, cr0, {0}
    481c:	1eaa0000 	cdpne	0, 10, cr0, cr10, cr0, {0}
    4820:	982a0000 	stmdals	sl!, {}	@ <UNPREDICTABLE>
    4824:	4e08000f 	cdpmi	0, 0, cr0, cr8, cr15, {0}
    4828:	00000013 	andeq	r0, r0, r3, lsl r0
    482c:	0e71011e 	mrceq	1, 3, r0, cr1, cr14, {0}
    4830:	98020000 	stmdals	r2, {}	@ <UNPREDICTABLE>
    4834:	0f580106 	svceq	0x00580106
    4838:	0f840800 	svceq	0x00840800
    483c:	1eea0800 	cdpne	8, 14, cr0, cr10, cr0, {0}
    4840:	c3010000 	movwgt	r0, #4096	@ 0x1000
    4844:	20000012 	andcs	r0, r0, r2, lsl r0
    4848:	00000ade 	ldrdeq	r0, [r0], -lr
    484c:	121b9802 	andsne	r9, fp, #131072	@ 0x20000
    4850:	1200000a 	andne	r0, r0, #10
    4854:	0a00001f 	beq	48d8 <_Min_Stack_Size+0x44d8>
    4858:	1f00001f 	svcne	0x0000001f
    485c:	006e656c 	rsbeq	r6, lr, ip, ror #10
    4860:	41299802 			@ <UNDEFINED> instruction: 0x41299802
    4864:	4a000000 	bmi	486c <_Min_Stack_Size+0x446c>
    4868:	4800001f 	stmdami	r0, {r0, r1, r2, r3, r4}
    486c:	2d00001f 	stccs	0, cr0, [r0, #-124]	@ 0xffffff84
    4870:	08000f70 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, fp}
    4874:	0000134e 	andeq	r1, r0, lr, asr #6
    4878:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    487c:	00000071 	andeq	r0, r0, r1, ror r0
    4880:	0ec7011e 	mcreq	1, 6, r0, cr7, cr14, {0}
    4884:	8e020000 	cdphi	0, 0, cr0, cr2, cr0, {0}
    4888:	0f0e0106 	svceq	0x000e0106
    488c:	0f580800 	svceq	0x00580800
    4890:	1f5d0800 	svcne	0x005d0800
    4894:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    4898:	32000013 	andcc	r0, r0, #19
    489c:	000001f8 	strdeq	r0, [r0], -r8
    48a0:	00001313 	andeq	r1, r0, r3, lsl r3
    48a4:	00002b26 	andeq	r2, r0, r6, lsr #22
    48a8:	0d900200 	lfmeq	f0, 4, [r0]
    48ac:	00000041 	andeq	r0, r0, r1, asr #32
    48b0:	00001f97 	muleq	r0, r7, pc	@ <UNPREDICTABLE>
    48b4:	00001f95 	muleq	r0, r5, pc	@ <UNPREDICTABLE>
    48b8:	000f2640 	andeq	r2, pc, r0, asr #12
    48bc:	134e0108 	movtne	r0, #57608	@ 0xe108
    48c0:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    48c4:	00700250 	rsbseq	r0, r0, r0, asr r2
    48c8:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    48cc:	00000071 	andeq	r0, r0, r1, ror r0
    48d0:	0013e627 	andseq	lr, r3, r7, lsr #12
    48d4:	000f2c00 	andeq	r2, pc, r0, lsl #24
    48d8:	0f2c0108 	svceq	0x002c0108
    48dc:	0f360800 	svceq	0x00360800
    48e0:	93020800 	movwls	r0, #10240	@ 0x2800
    48e4:	00133a08 	andseq	r3, r3, r8, lsl #20
    48e8:	13f92800 	mvnsne	r2, #0, 16
    48ec:	1fac0000 	svcne	0x00ac0000
    48f0:	1faa0000 	svcne	0x00aa0000
    48f4:	2d000000 	stccs	0, cr0, [r0, #-0]
    48f8:	08000f42 	stmdaeq	r0, {r1, r6, r8, r9, sl, fp}
    48fc:	0000137c 	andeq	r1, r0, ip, ror r3
    4900:	0550012e 	ldrbeq	r0, [r0, #-302]	@ 0xfffffed2
    4904:	0001ea03 	andeq	lr, r1, r3, lsl #20
    4908:	3a000020 	bcc	4990 <_Min_Stack_Size+0x4590>
    490c:	000eb801 	andeq	fp, lr, r1, lsl #16
    4910:	064c0200 	strbeq	r0, [ip], -r0, lsl #4
    4914:	13760101 	cmnne	r6, #1073741824	@ 0x40000000
    4918:	623b0000 	eorsvs	r0, fp, #0
    491c:	02006675 	andeq	r6, r0, #122683392	@ 0x7500000
    4920:	1376224c 	cmnne	r6, #76, 4	@ 0xc0000004
    4924:	643b0000 	ldrtvs	r0, [fp], #-0
    4928:	02007461 	andeq	r7, r0, #1627389952	@ 0x61000000
    492c:	00412f4c 	subeq	r2, r1, ip, asr #30
    4930:	07000000 	streq	r0, [r0, -r0]
    4934:	00084604 	andeq	r4, r8, r4, lsl #12
    4938:	75013c00 	strvc	r3, [r1, #-3072]	@ 0xfffff400
    493c:	0200000f 	andeq	r0, r0, #15
    4940:	41010943 	tstmi	r1, r3, asr #18
    4944:	c6000000 	strgt	r0, [r0], -r0
    4948:	ec08000e 	stc	0, cr0, [r8], {14}
    494c:	0208000e 	andeq	r0, r8, #14
    4950:	e601007d 			@ <UNDEFINED> instruction: 0xe601007d
    4954:	1f000013 	svcne	0x00000013
    4958:	00667562 	rsbeq	r7, r6, r2, ror #10
    495c:	76244302 	strtvc	r4, [r4], -r2, lsl #6
    4960:	cc000013 	stcgt	0, cr0, [r0], {19}
    4964:	c400001f 	strgt	r0, [r0], #-31	@ 0xffffffe1
    4968:	2100001f 	tstcs	r0, pc, lsl r0
    496c:	00736572 	rsbseq	r6, r3, r2, ror r5
    4970:	410b4402 	tstmi	fp, r2, lsl #8
    4974:	02000000 	andeq	r0, r0, #0
    4978:	00000020 	andeq	r0, r0, r0, lsr #32
    497c:	39000020 	stmdbcc	r0, {r5}
    4980:	000013e6 	andeq	r1, r0, r6, ror #7
    4984:	08000ec6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl, fp}
    4988:	000ec603 	andeq	ip, lr, r3, lsl #12
    498c:	000eca08 	andeq	ip, lr, r8, lsl #20
    4990:	06450208 	strbeq	r0, [r5], -r8, lsl #4
    4994:	0013f928 	andseq	pc, r3, r8, lsr #18
    4998:	00201700 	eoreq	r1, r0, r0, lsl #14
    499c:	00201500 	eoreq	r1, r0, r0, lsl #10
    49a0:	41000000 	mrsmi	r0, (UNDEF: 0)
    49a4:	000f3001 	andeq	r3, pc, r1
    49a8:	093f0200 	ldmdbeq	pc!, {r9}	@ <UNPREDICTABLE>
    49ac:	00004101 	andeq	r4, r0, r1, lsl #2
    49b0:	14060100 	strne	r0, [r6], #-256	@ 0xffffff00
    49b4:	623b0000 	eorsvs	r0, fp, #0
    49b8:	02006675 	andeq	r6, r0, #122683392	@ 0x7500000
    49bc:	1376243f 	cmnne	r6, #1056964608	@ 0x3f000000
    49c0:	42000000 	andmi	r0, r0, #0
    49c4:	000006d8 	ldrdeq	r0, [r0], -r8
    49c8:	0113c103 	tsteq	r3, r3, lsl #2
    49cc:	00000095 	muleq	r0, r5, r0
    49d0:	00143103 	andseq	r3, r4, r3, lsl #2
    49d4:	09213500 	stmdbeq	r1!, {r8, sl, ip, sp}
    49d8:	c1030000 	mrsgt	r0, (UNDEF: 3)
    49dc:	00004127 	andeq	r4, r0, r7, lsr #2
    49e0:	75623b00 	strbvc	r3, [r2, #-2816]!	@ 0xfffff500
    49e4:	c1030066 	tstgt	r3, r6, rrx
    49e8:	0009a438 	andeq	sl, r9, r8, lsr r4
    49ec:	83340000 	teqhi	r4, #0
    49f0:	03000005 	movweq	r0, #5
    49f4:	030114b4 	movweq	r1, #5300	@ 0x14b4
    49f8:	00001464 	andeq	r1, r0, r4, ror #8
    49fc:	00092135 	andeq	r2, r9, r5, lsr r1
    4a00:	29b40300 	ldmibcs	r4!, {r8, r9}
    4a04:	00000041 	andeq	r0, r0, r1, asr #32
    4a08:	6675623b 			@ <UNDEFINED> instruction: 0x6675623b
    4a0c:	40b40300 	adcsmi	r0, r4, r0, lsl #6
    4a10:	0000095c 	andeq	r0, r0, ip, asr r9
    4a14:	000fe235 	andeq	lr, pc, r5, lsr r2	@ <UNPREDICTABLE>
    4a18:	4eb40300 	cdpmi	3, 11, cr0, cr4, cr0, {0}
    4a1c:	00000059 	andeq	r0, r0, r9, asr r0
    4a20:	0eef4300 	cdpeq	3, 14, cr4, cr15, cr0, {0}
    4a24:	eb050000 	bl	144a2c <_Min_Stack_Size+0x14462c>
    4a28:	03011605 	movweq	r1, #5637	@ 0x1605
    4a2c:	00001481 	andeq	r1, r0, r1, lsl #9
    4a30:	00072a44 	andeq	r2, r7, r4, asr #20
    4a34:	05eb0500 	strbeq	r0, [fp, #1280]!	@ 0x500
    4a38:	00029930 	andeq	r9, r2, r0, lsr r9
    4a3c:	ad430000 	stclge	0, cr0, [r3, #-0]
    4a40:	05000005 	streq	r0, [r0, #-5]
    4a44:	011605de 			@ <UNDEFINED> instruction: 0x011605de
    4a48:	00149e03 	andseq	r9, r4, r3, lsl #28
    4a4c:	072a4400 	streq	r4, [sl, -r0, lsl #8]!
    4a50:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    4a54:	02992f05 	addseq	r2, r9, #5, 30
    4a58:	45000000 	strmi	r0, [r0, #-0]
    4a5c:	000013e6 	andeq	r1, r0, r6, ror #7
    4a60:	08000ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp}
    4a64:	08000ec6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl, fp}
    4a68:	01007d02 	tsteq	r0, r2, lsl #26
    4a6c:	000014c1 	andeq	r1, r0, r1, asr #9
    4a70:	0013f928 	andseq	pc, r3, r8, lsr #18
    4a74:	00202e00 	eoreq	r2, r0, r0, lsl #28
    4a78:	00202a00 	eoreq	r2, r0, r0, lsl #20
    4a7c:	4e450000 	cdpmi	0, 4, cr0, cr5, cr0, {0}
    4a80:	ec000013 	stc	0, cr0, [r0], {19}
    4a84:	0e08000e 	cdpeq	0, 0, cr0, cr8, cr14, {0}
    4a88:	0208000f 	andeq	r0, r8, #15
    4a8c:	3c01007d 	stccc	0, cr0, [r1], {125}	@ 0x7d
    4a90:	46000015 			@ <UNDEFINED> instruction: 0x46000015
    4a94:	0000135d 	andeq	r1, r0, sp, asr r3
    4a98:	69465001 	stmdbvs	r6, {r0, ip, lr}^
    4a9c:	01000013 	tsteq	r0, r3, lsl r0
    4aa0:	13e62751 	mvnne	r2, #21233664	@ 0x1440000
    4aa4:	0eec0000 	cdpeq	0, 14, cr0, cr12, cr0, {0}
    4aa8:	ec020800 	stc	8, cr0, [r2], {-0}
    4aac:	f208000e 	vhadd.s8	d0, d8, d14
    4ab0:	0208000e 	andeq	r0, r8, #14
    4ab4:	150b064d 	strne	r0, [fp, #-1613]	@ 0xfffff9b3
    4ab8:	f9280000 			@ <UNDEFINED> instruction: 0xf9280000
    4abc:	51000013 	tstpl	r0, r3, lsl r0
    4ac0:	4f000020 	svcmi	0x00000020
    4ac4:	00000020 	andeq	r0, r0, r0, lsr #32
    4ac8:	00134e39 	andseq	r4, r3, r9, lsr lr
    4acc:	000ef800 	andeq	pc, lr, r0, lsl #16
    4ad0:	0ef80008 	cdpeq	0, 15, cr0, cr8, cr8, {0}
    4ad4:	0f0c0800 	svceq	0x000c0800
    4ad8:	4c020800 	stcmi	8, cr0, [r2], {-0}
    4adc:	13692806 	cmnne	r9, #393216	@ 0x60000
    4ae0:	20660000 	rsbcs	r0, r6, r0
    4ae4:	20640000 	rsbcs	r0, r4, r0
    4ae8:	5d280000 	stcpl	0, cr0, [r8, #-0]
    4aec:	7b000013 	blvc	4b40 <_Min_Stack_Size+0x4740>
    4af0:	79000020 	stmdbvc	r0, {r5}
    4af4:	00000020 	andeq	r0, r0, r0, lsr #32
    4af8:	10bb4700 	adcsne	r4, fp, r0, lsl #14
    4afc:	10680000 	rsbne	r0, r8, r0
    4b00:	10dc0800 	sbcsne	r0, ip, r0, lsl #16
    4b04:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4b08:	ca460100 	bgt	1184f10 <_Min_Stack_Size+0x1184b10>
    4b0c:	01000010 	tsteq	r0, r0, lsl r0
    4b10:	10bb4850 	adcsne	r4, fp, r0, asr r8
    4b14:	10940000 	addsne	r0, r4, r0
    4b18:	40000800 	andmi	r0, r0, r0, lsl #16
    4b1c:	01000002 	tsteq	r0, r2
    4b20:	ca280644 	bgt	a06438 <_Min_Stack_Size+0xa06038>
    4b24:	90000010 	andls	r0, r0, r0, lsl r0
    4b28:	8e000020 	cdphi	0, 0, cr0, cr0, cr0, {1}
    4b2c:	00000020 	andeq	r0, r0, r0, lsr #32
    4b30:	09860000 	stmibeq	r6, {}	@ <UNPREDICTABLE>
    4b34:	00020000 	andeq	r0, r2, r0
    4b38:	00001161 	andeq	r1, r0, r1, ror #2
    4b3c:	01930104 	orrseq	r0, r3, r4, lsl #2
    4b40:	bd0c0000 	stclt	0, cr0, [ip, #-0]
    4b44:	af00000f 	svcge	0x0000000f
    4b48:	70000000 	andvc	r0, r0, r0
    4b4c:	70080014 	andvc	r0, r8, r4, lsl r0
    4b50:	03080016 	movweq	r0, #32790	@ 0x8016
    4b54:	02000020 	andeq	r0, r0, #32
    4b58:	02180601 	andseq	r0, r8, #1048576	@ 0x100000
    4b5c:	02020000 	andeq	r0, r2, #0
    4b60:	00003005 	andeq	r3, r0, r5
    4b64:	05040200 	streq	r0, [r4, #-512]	@ 0xfffffe00
    4b68:	00000067 	andeq	r0, r0, r7, rrx
    4b6c:	62050802 	andvs	r0, r5, #131072	@ 0x20000
    4b70:	03000000 	movweq	r0, #0
    4b74:	00000710 	andeq	r0, r0, r0, lsl r7
    4b78:	52182e03 	andspl	r2, r8, #3, 28	@ 0x30
    4b7c:	04000000 	streq	r0, [r0], #-0
    4b80:	00000041 	andeq	r0, r0, r1, asr #32
    4b84:	16080102 	strne	r0, [r8], -r2, lsl #2
    4b88:	03000002 	movweq	r0, #2
    4b8c:	0000025f 	andeq	r0, r0, pc, asr r2
    4b90:	6f193103 	svcvs	0x00193103
    4b94:	04000000 	streq	r0, [r0], #-0
    4b98:	00000059 	andeq	r0, r0, r9, asr r0
    4b9c:	00005905 	andeq	r5, r0, r5, lsl #18
    4ba0:	07020200 	streq	r0, [r2, -r0, lsl #4]
    4ba4:	00000291 	muleq	r0, r1, r2
    4ba8:	00024f03 	andeq	r4, r2, r3, lsl #30
    4bac:	19340300 	ldmdbne	r4!, {r8, r9}
    4bb0:	00000082 	andeq	r0, r0, r2, lsl #1
    4bb4:	3d070402 	cfstrscc	mvf0, [r7, #-8]
    4bb8:	02000002 	andeq	r0, r0, #2
    4bbc:	02380708 	eorseq	r0, r8, #8, 14	@ 0x200000
    4bc0:	04060000 	streq	r0, [r6], #-0
    4bc4:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
    4bc8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4bcc:	00000242 	andeq	r0, r0, r2, asr #4
    4bd0:	00077503 	andeq	r7, r7, r3, lsl #10
    4bd4:	0f1d0200 	svceq	0x001d0200
    4bd8:	000000aa 	andeq	r0, r0, sl, lsr #1
    4bdc:	00b00407 	adcseq	r0, r0, r7, lsl #8
    4be0:	01080000 	mrseq	r0, (UNDEF: 8)
    4be4:	000000bc 	strheq	r0, [r0], -ip
    4be8:	00004109 	andeq	r4, r0, r9, lsl #2
    4bec:	080a0000 	stmdaeq	sl, {}	@ <UNPREDICTABLE>
    4bf0:	11091e02 	tstne	r9, r2, lsl #28
    4bf4:	0b000001 	bleq	4c00 <_Min_Stack_Size+0x4800>
    4bf8:	00000481 	andeq	r0, r0, r1, lsl #9
    4bfc:	410b1f02 	tstmi	fp, r2, lsl #30
    4c00:	02000000 	andeq	r0, r0, #0
    4c04:	dc0b0023 	stcle	0, cr0, [fp], {35}	@ 0x23
    4c08:	02000008 	andeq	r0, r0, #8
    4c0c:	00410b20 	subeq	r0, r1, r0, lsr #22
    4c10:	23020000 	movwcs	r0, #8192	@ 0x2000
    4c14:	05030b01 	streq	r0, [r3, #-2817]	@ 0xfffff4ff
    4c18:	21020000 	mrscs	r0, (UNDEF: 2)
    4c1c:	0000590c 	andeq	r5, r0, ip, lsl #18
    4c20:	02230200 	eoreq	r0, r3, #0, 4
    4c24:	0004090b 	andeq	r0, r4, fp, lsl #18
    4c28:	0c220200 	sfmeq	f0, 4, [r2], #-0
    4c2c:	00000059 	andeq	r0, r0, r9, asr r0
    4c30:	0b042302 	bleq	10d840 <_Min_Stack_Size+0x10d440>
    4c34:	000008bf 			@ <UNDEFINED> instruction: 0x000008bf
    4c38:	590c2302 	stmdbpl	ip, {r1, r8, r9, sp}
    4c3c:	02000000 	andeq	r0, r0, #0
    4c40:	03000623 	movweq	r0, #1571	@ 0x623
    4c44:	00000948 	andeq	r0, r0, r8, asr #18
    4c48:	bc022402 	cfstrslt	mvf2, [r2], {2}
    4c4c:	0c000000 	stceq	0, cr0, [r0], {-0}
    4c50:	02370454 	eorseq	r0, r7, #84, 8	@ 0x54000000
    4c54:	0002c809 	andeq	ip, r2, r9, lsl #16
    4c58:	06360d00 	ldrteq	r0, [r6], -r0, lsl #26
    4c5c:	39040000 	stmdbcc	r4, {}	@ <UNPREDICTABLE>
    4c60:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4c64:	23020000 	movwcs	r0, #8192	@ 0x2000
    4c68:	08280d00 	stmdaeq	r8!, {r8, sl, fp}
    4c6c:	3a040000 	bcc	104c74 <_Min_Stack_Size+0x104874>
    4c70:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4c74:	23020000 	movwcs	r0, #8192	@ 0x2000
    4c78:	06870d02 	streq	r0, [r7], r2, lsl #26
    4c7c:	3b040000 	blcc	104c84 <_Min_Stack_Size+0x104884>
    4c80:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4c84:	23020000 	movwcs	r0, #8192	@ 0x2000
    4c88:	08320d04 	ldmdaeq	r2!, {r2, r8, sl, fp}
    4c8c:	3c040000 	stccc	0, cr0, [r4], {-0}
    4c90:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4c94:	23020000 	movwcs	r0, #8192	@ 0x2000
    4c98:	071f0d06 	ldreq	r0, [pc, -r6, lsl #26]
    4c9c:	3d040000 	stccc	0, cr0, [r4, #-0]
    4ca0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4ca4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4ca8:	083c0d08 	ldmdaeq	ip!, {r3, r8, sl, fp}
    4cac:	3e040000 	cdpcc	0, 0, cr0, cr4, cr0, {0}
    4cb0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4cb4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4cb8:	074e0d0a 	strbeq	r0, [lr, -sl, lsl #26]
    4cbc:	3f040000 	svccc	0x00040000
    4cc0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4cc4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4cc8:	08460d0c 	stmdaeq	r6, {r2, r3, r8, sl, fp}^
    4ccc:	40040000 	andmi	r0, r4, r0
    4cd0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4cd4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4cd8:	09d50d0e 	ldmibeq	r5, {r1, r2, r3, r8, sl, fp}^
    4cdc:	41040000 	mrsmi	r0, (UNDEF: 4)
    4ce0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4ce4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4ce8:	08500d10 	ldmdaeq	r0, {r4, r8, sl, fp}^
    4cec:	42040000 	andmi	r0, r4, #0
    4cf0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4cf4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4cf8:	08230d12 	stmdaeq	r3!, {r1, r4, r8, sl, fp}
    4cfc:	43040000 	movwmi	r0, #16384	@ 0x4000
    4d00:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d04:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d08:	085a0d14 	ldmdaeq	sl, {r2, r4, r8, sl, fp}^
    4d0c:	44040000 	strmi	r0, [r4], #-0
    4d10:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d14:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d18:	08c70d16 	stmiaeq	r7, {r1, r2, r4, r8, sl, fp}^
    4d1c:	45040000 	strmi	r0, [r4, #-0]
    4d20:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d24:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d28:	08640d18 	stmdaeq	r4!, {r3, r4, r8, sl, fp}^
    4d2c:	46040000 	strmi	r0, [r4], -r0
    4d30:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d34:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d38:	09430d1a 	stmdbeq	r3, {r1, r3, r4, r8, sl, fp}^
    4d3c:	47040000 	strmi	r0, [r4, -r0]
    4d40:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d44:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d48:	03130d1c 	tsteq	r3, #28, 26	@ 0x700
    4d4c:	48040000 	stmdami	r4, {}	@ <UNPREDICTABLE>
    4d50:	02d81102 	sbcseq	r1, r8, #-2147483648	@ 0x80000000
    4d54:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d58:	08ef0d1e 	stmiaeq	pc!, {r1, r2, r3, r4, r8, sl, fp}^	@ <UNPREDICTABLE>
    4d5c:	49040000 	stmdbmi	r4, {}	@ <UNPREDICTABLE>
    4d60:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d64:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d68:	0a7a0d40 	beq	1e88270 <_Min_Stack_Size+0x1e87e70>
    4d6c:	4a040000 	bmi	104d74 <_Min_Stack_Size+0x104974>
    4d70:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d74:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d78:	052a0d42 	streq	r0, [sl, #-3394]!	@ 0xfffff2be
    4d7c:	4b040000 	blmi	104d84 <_Min_Stack_Size+0x104984>
    4d80:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d84:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d88:	087f0d44 	ldmdaeq	pc!, {r2, r6, r8, sl, fp}^	@ <UNPREDICTABLE>
    4d8c:	4c040000 	stcmi	0, cr0, [r4], {-0}
    4d90:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4d94:	23020000 	movwcs	r0, #8192	@ 0x2000
    4d98:	4e460e46 	cdpmi	14, 4, cr0, cr6, cr6, {2}
    4d9c:	4d040052 	stcmi	0, cr0, [r4, #-328]	@ 0xfffffeb8
    4da0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4da4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4da8:	08890d48 	stmeq	r9, {r3, r6, r8, sl, fp}
    4dac:	4e040000 	cdpmi	0, 0, cr0, cr4, cr0, {0}
    4db0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4db4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4db8:	05d20d4a 	ldrbeq	r0, [r2, #3402]	@ 0xd4a
    4dbc:	4f040000 	svcmi	0x00040000
    4dc0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4dc4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4dc8:	0a900d4c 	beq	fe408300 <BootRAM+0xd378aa1>
    4dcc:	50040000 	andpl	r0, r4, r0
    4dd0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4dd4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4dd8:	0a0b0d4e 	beq	2c8318 <_Min_Stack_Size+0x2c7f18>
    4ddc:	51040000 	mrspl	r0, (UNDEF: 4)
    4de0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4de4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4de8:	0a9a0d50 	beq	fe688330 <BootRAM+0xd5f8ad1>
    4dec:	52040000 	andpl	r0, r4, #0
    4df0:	00651102 	rsbeq	r1, r5, r2, lsl #2
    4df4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4df8:	650f0052 	strvs	r0, [pc, #-82]	@ 4dae <_Min_Stack_Size+0x49ae>
    4dfc:	d8000000 	stmdale	r0, {}	@ <UNPREDICTABLE>
    4e00:	10000002 	andne	r0, r0, r2
    4e04:	00000097 	muleq	r0, r7, r0
    4e08:	c8040010 	stmdagt	r4, {r4}
    4e0c:	11000002 	tstne	r0, r2
    4e10:	000005c6 	andeq	r0, r0, r6, asr #11
    4e14:	03025304 	movweq	r5, #8964	@ 0x2304
    4e18:	0000011d 	andeq	r0, r0, sp, lsl r1
    4e1c:	01040412 	tsteq	r4, r2, lsl r4
    4e20:	03200a05 			@ <UNDEFINED> instruction: 0x03200a05
    4e24:	73130000 	tstvc	r3, #0
    4e28:	06010074 			@ <UNDEFINED> instruction: 0x06010074
    4e2c:	00006515 	andeq	r6, r0, r5, lsl r5
    4e30:	00230200 	eoreq	r0, r3, r0, lsl #4
    4e34:	006e6513 	rsbeq	r6, lr, r3, lsl r5
    4e38:	65180601 	ldrvs	r0, [r8, #-1537]	@ 0xfffff9ff
    4e3c:	02000000 	andeq	r0, r0, #0
    4e40:	61130223 	tstvs	r3, r3, lsr #4
    4e44:	01007272 	tsteq	r0, r2, ror r2
    4e48:	03361407 	teqeq	r6, #117440512	@ 0x7000000
    4e4c:	23020000 	movwcs	r0, #8192	@ 0x2000
    4e50:	ea040004 	b	104e68 <_Min_Stack_Size+0x104a68>
    4e54:	0f000002 	svceq	0x00000002
    4e58:	0000004d 	andeq	r0, r0, sp, asr #32
    4e5c:	00000336 	andeq	r0, r0, r6, lsr r3
    4e60:	00009714 	andeq	r9, r0, r4, lsl r7
    4e64:	0003ff00 	andeq	pc, r3, r0, lsl #30
    4e68:	00032504 	andeq	r2, r3, r4, lsl #10
    4e6c:	0fb81500 	svceq	0x00b81500
    4e70:	08010000 	stmdaeq	r1, {}	@ <UNPREDICTABLE>
    4e74:	00032002 	andeq	r2, r3, r2
    4e78:	03050100 	movweq	r0, #20736	@ 0x5100
    4e7c:	200002f6 	strdcs	r0, [r0], -r6
    4e80:	000e8816 	andeq	r8, lr, r6, lsl r8
    4e84:	3a010700 	bcc	46a8c <_Min_Stack_Size+0x4668c>
    4e88:	00039808 	andeq	r9, r3, r8, lsl #16
    4e8c:	0e680b00 	vmuleq.f64	d16, d8, d0
    4e90:	3b010000 	blcc	44e98 <_Min_Stack_Size+0x44a98>
    4e94:	0000760c 	andeq	r7, r0, ip, lsl #12
    4e98:	00230200 	eoreq	r0, r3, r0, lsl #4
    4e9c:	000f8d0b 	andeq	r8, pc, fp, lsl #26
    4ea0:	0b3c0100 	bleq	f052a8 <_Min_Stack_Size+0xf04ea8>
    4ea4:	00000041 	andeq	r0, r0, r1, asr #32
    4ea8:	0b042302 	bleq	10dab8 <_Min_Stack_Size+0x10d6b8>
    4eac:	00000f29 	andeq	r0, r0, r9, lsr #30
    4eb0:	410b3d01 	tstmi	fp, r1, lsl #26
    4eb4:	02000000 	andeq	r0, r0, #0
    4eb8:	570b0523 	strpl	r0, [fp, -r3, lsr #10]
    4ebc:	0100000f 	tsteq	r0, pc
    4ec0:	00410b3e 	subeq	r0, r1, lr, lsr fp
    4ec4:	23020000 	movwcs	r0, #8192	@ 0x2000
    4ec8:	4e040006 	cdpmi	0, 0, cr0, cr4, cr6, {0}
    4ecc:	15000003 	strne	r0, [r0, #-3]
    4ed0:	00000fa9 	andeq	r0, r0, r9, lsr #31
    4ed4:	98204101 	stmdals	r0!, {r0, r8, lr}
    4ed8:	01000003 	tsteq	r0, r3
    4edc:	001a0305 	andseq	r0, sl, r5, lsl #6
    4ee0:	01172000 	tsteq	r7, r0
    4ee4:	00000582 	andeq	r0, r0, r2, lsl #11
    4ee8:	0106b302 	tsteq	r6, r2, lsl #6
    4eec:	0003cf01 	andeq	ip, r3, r1, lsl #30
    4ef0:	00410900 	subeq	r0, r1, r0, lsl #18
    4ef4:	cf090000 	svcgt	0x00090000
    4ef8:	09000003 	stmdbeq	r0, {r0, r1}
    4efc:	00000059 	andeq	r0, r0, r9, asr r0
    4f00:	6a040700 	bvs	106b08 <_Min_Stack_Size+0x106708>
    4f04:	17000000 	strne	r0, [r0, -r0]
    4f08:	00089f01 	andeq	r9, r8, r1, lsl #30
    4f0c:	06290200 	strteq	r0, [r9], -r0, lsl #4
    4f10:	03f90101 	mvnseq	r0, #1073741824	@ 0x40000000
    4f14:	41090000 	mrsmi	r0, (UNDEF: 9)
    4f18:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    4f1c:	00000041 	andeq	r0, r0, r1, asr #32
    4f20:	00005909 	andeq	r5, r0, r9, lsl #18
    4f24:	009e0900 	addseq	r0, lr, r0, lsl #18
    4f28:	18000000 	stmdane	r0, {}	@ <UNPREDICTABLE>
    4f2c:	0006d701 	andeq	sp, r6, r1, lsl #14
    4f30:	05c00200 	strbeq	r0, [r0, #512]	@ 0x200
    4f34:	00009001 	andeq	r9, r0, r1
    4f38:	04170100 	ldreq	r0, [r7], #-256	@ 0xffffff00
    4f3c:	41090000 	mrsmi	r0, (UNDEF: 9)
    4f40:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    4f44:	00000417 	andeq	r0, r0, r7, lsl r4
    4f48:	59040700 	stmdbpl	r4, {r8, r9, sl}
    4f4c:	19000000 	stmdbne	r0, {}	@ <UNPREDICTABLE>
    4f50:	000c3e01 	andeq	r3, ip, r1, lsl #28
    4f54:	068c0100 	streq	r0, [ip], r0, lsl #2
    4f58:	0800162c 	stmdaeq	r0, {r2, r3, r5, r9, sl, ip}
    4f5c:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
    4f60:	000020a3 	andeq	r2, r0, r3, lsr #1
    4f64:	00051101 	andeq	r1, r5, r1, lsl #2
    4f68:	0fe21a00 	svceq	0x00e21a00
    4f6c:	8d010000 	stchi	0, cr0, [r1, #-0]
    4f70:	0000590c 	andeq	r5, r0, ip, lsl #18
    4f74:	0020df00 	eoreq	sp, r0, r0, lsl #30
    4f78:	0020db00 	eoreq	sp, r0, r0, lsl #22
    4f7c:	75621b00 	strbvc	r1, [r2, #-2816]!	@ 0xfffff500
    4f80:	8e010066 	cdphi	0, 0, cr0, cr1, cr6, {3}
    4f84:	00051115 	andeq	r1, r5, r5, lsl r1
    4f88:	91020200 	mrsls	r0, R10_usr
    4f8c:	090a1c58 	stmdbeq	sl, {r3, r4, r6, sl, fp, ip}
    4f90:	16440000 	strbne	r0, [r4], -r0
    4f94:	44010800 	strmi	r0, [r1], #-2048	@ 0xfffff800
    4f98:	4e080016 	mcrmi	0, 0, r0, cr8, cr6, {0}
    4f9c:	01080016 	tsteq	r8, r6, lsl r0
    4fa0:	04b10591 	ldrteq	r0, [r1], #1425	@ 0x591
    4fa4:	301d0000 	andscc	r0, sp, r0
    4fa8:	01000009 	tsteq	r0, r9
    4fac:	fd000021 	stc2	0, cr0, [r0, #-132]	@ 0xffffff7c
    4fb0:	1d000020 	stcne	0, cr0, [r0, #-128]	@ 0xffffff80
    4fb4:	00000924 	andeq	r0, r0, r4, lsr #18
    4fb8:	00002121 	andeq	r2, r0, r1, lsr #2
    4fbc:	0000211f 	andeq	r2, r0, pc, lsl r1
    4fc0:	0009181d 	andeq	r1, r9, sp, lsl r8
    4fc4:	00213600 	eoreq	r3, r1, r0, lsl #12
    4fc8:	00213400 	eoreq	r3, r1, r0, lsl #8
    4fcc:	164e1e00 	strbne	r1, [lr], -r0, lsl #28
    4fd0:	03b00800 	movseq	r0, #0, 16
    4fd4:	011f0000 	tsteq	pc, r0
    4fd8:	1f360150 	svcne	0x00360150
    4fdc:	7d025101 	stfvcs	f5, [r2, #-4]
    4fe0:	1c000000 	stcne	0, cr0, [r0], {-0}
    4fe4:	000008df 	ldrdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    4fe8:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
    4fec:	00165c01 	andseq	r5, r6, r1, lsl #24
    4ff0:	00166408 	andseq	r6, r6, r8, lsl #8
    4ff4:	05940108 	ldreq	r0, [r4, #264]	@ 0x108
    4ff8:	000004fa 	strdeq	r0, [r0], -sl
    4ffc:	0008fd1d 	andeq	pc, r8, sp, lsl sp	@ <UNPREDICTABLE>
    5000:	00214d00 	eoreq	r4, r1, r0, lsl #26
    5004:	00214b00 	eoreq	r4, r1, r0, lsl #22
    5008:	08f11d00 	ldmeq	r1!, {r8, sl, fp, ip}^
    500c:	21620000 	cmncs	r2, r0
    5010:	21600000 	cmncs	r0, r0
    5014:	641e0000 	ldrvs	r0, [lr], #-0
    5018:	f9080016 			@ <UNDEFINED> instruction: 0xf9080016
    501c:	1f000003 	svcne	0x00000003
    5020:	37015001 	strcc	r5, [r1, -r1]
    5024:	0251011f 	subseq	r0, r1, #-1073741817	@ 0xc0000007
    5028:	0000007d 	andeq	r0, r0, sp, ror r0
    502c:	0016441e 	andseq	r4, r6, lr, lsl r4
    5030:	0007dc08 	andeq	sp, r7, r8, lsl #24
    5034:	50011f00 	andpl	r1, r1, r0, lsl #30
    5038:	1f007d02 	svcne	0x00007d02
    503c:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    5040:	0f000020 	svceq	0x00000020
    5044:	00000041 	andeq	r0, r0, r1, asr #32
    5048:	00000521 	andeq	r0, r0, r1, lsr #10
    504c:	00009710 	andeq	r9, r0, r0, lsl r7
    5050:	20001f00 	andcs	r1, r0, r0, lsl #30
    5054:	000fcb01 	andeq	ip, pc, r1, lsl #22
    5058:	066f0100 	strbteq	r0, [pc], -r0, lsl #2
    505c:	00158c01 	andseq	r8, r5, r1, lsl #24
    5060:	00162c08 	andseq	r2, r6, r8, lsl #24
    5064:	00217608 	eoreq	r7, r1, r8, lsl #12
    5068:	06350100 	ldrteq	r0, [r5], -r0, lsl #2
    506c:	b1210000 			@ <UNDEFINED> instruction: 0xb1210000
    5070:	0100000f 	tsteq	r0, pc
    5074:	00411b6f 	subeq	r1, r1, pc, ror #22
    5078:	21b20000 			@ <UNDEFINED> instruction: 0x21b20000
    507c:	21ae0000 			@ <UNDEFINED> instruction: 0x21ae0000
    5080:	62220000 	eorvs	r0, r2, #0
    5084:	01006675 	tsteq	r0, r5, ror r6
    5088:	06352c6f 	ldrteq	r2, [r5], -pc, ror #24
    508c:	21dd0000 	bicscs	r0, sp, r0
    5090:	21d30000 	bicscs	r0, r3, r0
    5094:	e2210000 	eor	r0, r1, #0
    5098:	0100000f 	tsteq	r0, pc
    509c:	0090356f 	addseq	r3, r0, pc, ror #10
    50a0:	22290000 	eorcs	r0, r9, #0
    50a4:	221f0000 	andscs	r0, pc, #0
    50a8:	e7230000 	str	r0, [r3, -r0]!
    50ac:	0100000f 	tsteq	r0, pc
    50b0:	00411270 	subeq	r1, r1, r0, ror r2
    50b4:	03050000 	movweq	r0, #20480	@ 0x5000
    50b8:	20000021 	andcs	r0, r0, r1, lsr #32
    50bc:	00766124 	rsbseq	r6, r6, r4, lsr #2
    50c0:	590c7101 	stmdbpl	ip, {r0, r8, ip, sp, lr}
    50c4:	6d000000 	stcvs	0, cr0, [r0, #-0]
    50c8:	6b000022 	blvs	5158 <_Min_Stack_Size+0x4d58>
    50cc:	24000022 	strcs	r0, [r0], #-34	@ 0xffffffde
    50d0:	79010069 	stmdbvc	r1, {r0, r3, r5, r6}
    50d4:	0000590c 	andeq	r5, r0, ip, lsl #18
    50d8:	00228800 	eoreq	r8, r2, r0, lsl #16
    50dc:	00228600 	eoreq	r8, r2, r0, lsl #12
    50e0:	69702400 	ldmdbvs	r0!, {sl, sp}^
    50e4:	0f790100 	svceq	0x00790100
    50e8:	00000059 	andeq	r0, r0, r9, asr r0
    50ec:	000022a3 	andeq	r2, r0, r3, lsr #5
    50f0:	0000229d 	muleq	r0, sp, r2
    50f4:	00159625 	andseq	r9, r5, r5, lsr #12
    50f8:	0008c608 	andeq	ip, r8, r8, lsl #12
    50fc:	15b82600 	ldrne	r2, [r8, #1536]!	@ 0x600
    5100:	08530800 	ldmdaeq	r3, {fp}^
    5104:	05e70000 	strbeq	r0, [r7, #0]!
    5108:	011f0000 	tsteq	pc, r0
    510c:	c3030550 	movwgt	r0, #13648	@ 0x3550
    5110:	1f080019 	svcne	0x00080019
    5114:	33015101 	movwcc	r5, #4353	@ 0x1101
    5118:	15be2600 	ldrne	r2, [lr, #1536]!	@ 0x600
    511c:	063b0800 	ldrteq	r0, [fp], -r0, lsl #16
    5120:	05fb0000 	ldrbeq	r0, [fp, #0]!
    5124:	011f0000 	tsteq	pc, r0
    5128:	00750250 	rsbseq	r0, r5, r0, asr r2
    512c:	15de2700 	ldrbne	r2, [lr, #1792]	@ 0x700
    5130:	53010800 	movwpl	r0, #6144	@ 0x1800
    5134:	25000008 	strcs	r0, [r0, #-8]
    5138:	080015f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, ip}
    513c:	00000853 	andeq	r0, r0, r3, asr r8
    5140:	0015f825 	andseq	pc, r5, r5, lsr #16
    5144:	00085308 	andeq	r5, r8, r8, lsl #6
    5148:	15fe2600 	ldrbne	r2, [lr, #1536]!	@ 0x600
    514c:	063b0800 	ldrteq	r0, [fp], -r0, lsl #16
    5150:	062b0000 	strteq	r0, [fp], -r0
    5154:	011f0000 	tsteq	pc, r0
    5158:	00750250 	rsbseq	r0, r5, r0, asr r2
    515c:	16102500 	ldrne	r2, [r0], -r0, lsl #10
    5160:	08530800 	ldmdaeq	r3, {fp}^
    5164:	07000000 	streq	r0, [r0, -r0]
    5168:	00004104 	andeq	r4, r0, r4, lsl #2
    516c:	96012800 	strls	r2, [r1], -r0, lsl #16
    5170:	0100000f 	tsteq	r0, pc
    5174:	01010667 	tsteq	r1, r7, ror #12
    5178:	00000657 	andeq	r0, r0, r7, asr r6
    517c:	000fb129 	andeq	fp, pc, r9, lsr #2
    5180:	16670100 	strbtne	r0, [r7], -r0, lsl #2
    5184:	00000041 	andeq	r0, r0, r1, asr #32
    5188:	28011900 	stmdacs	r1, {r8, fp, ip}
    518c:	0100000b 	tsteq	r0, fp
    5190:	154c0661 	strbne	r0, [ip, #-1633]	@ 0xfffff99f
    5194:	15760800 	ldrbne	r0, [r6, #-2048]!	@ 0xfffff800
    5198:	22cc0800 	sbccs	r0, ip, #0, 16
    519c:	d9010000 	stmdble	r1, {}	@ <UNPREDICTABLE>
    51a0:	26000006 	strcs	r0, [r0], -r6
    51a4:	0800155a 	stmdaeq	r0, {r1, r3, r4, r6, r8, sl, ip}
    51a8:	000003d5 	ldrdeq	r0, [r0], -r5
    51ac:	00000694 	muleq	r0, r4, r6
    51b0:	0250011f 	subseq	r0, r0, #-1073741817	@ 0xc0000007
    51b4:	011f8609 	tsteq	pc, r9, lsl #12
    51b8:	1f330151 	svcne	0x00330151
    51bc:	38015201 	stmdacc	r1, {r0, r9, ip, lr}
    51c0:	0153011f 	cmpeq	r3, pc, lsl r1
    51c4:	66260030 			@ <UNDEFINED> instruction: 0x66260030
    51c8:	d5080015 	strle	r0, [r8, #-21]	@ 0xffffffeb
    51cc:	b8000003 	stmdalt	r0, {r0, r1}
    51d0:	1f000006 	svcne	0x00000006
    51d4:	09025001 	stmdbeq	r2, {r0, ip, lr}
    51d8:	51011f83 	smlabbpl	r1, r3, pc, r1	@ <UNPREDICTABLE>
    51dc:	011f3201 	tsteq	pc, r1, lsl #4
    51e0:	20080252 	andcs	r0, r8, r2, asr r2
    51e4:	0153011f 	cmpeq	r3, pc, lsl r1
    51e8:	762a0030 			@ <UNDEFINED> instruction: 0x762a0030
    51ec:	01080015 	tsteq	r8, r5, lsl r0
    51f0:	000003d5 	ldrdeq	r0, [r0], -r5
    51f4:	0150011f 	cmpeq	r0, pc, lsl r1
    51f8:	51011f33 	tstpl	r1, r3, lsr pc
    51fc:	011f3201 	tsteq	pc, r1, lsl #4
    5200:	20080252 	andcs	r0, r8, r2, asr r2
    5204:	0153011f 	cmpeq	r3, pc, lsl r1
    5208:	2b000030 	blcs	52d0 <_Min_Stack_Size+0x4ed0>
    520c:	000c7a01 	andeq	r7, ip, r1, lsl #20
    5210:	06550100 	ldrbeq	r0, [r5], -r0, lsl #2
    5214:	00077801 	andeq	r7, r7, r1, lsl #16
    5218:	00152000 	andseq	r2, r5, r0
    521c:	00154c08 	andseq	r4, r5, r8, lsl #24
    5220:	0022f808 	eoreq	pc, r2, r8, lsl #16
    5224:	07780100 	ldrbeq	r0, [r8, -r0, lsl #2]!
    5228:	72220000 	eorvc	r0, r2, #0
    522c:	01007165 	tsteq	r0, r5, ror #2
    5230:	077f2555 			@ <UNDEFINED> instruction: 0x077f2555
    5234:	231c0000 	tstcs	ip, #0
    5238:	23180000 	tstcs	r8, #0
    523c:	21210000 			@ <UNDEFINED> instruction: 0x21210000
    5240:	01000006 	tsteq	r0, r6
    5244:	00593355 	subseq	r3, r9, r5, asr r3
    5248:	23430000 	movtcs	r0, #12288	@ 0x3000
    524c:	233d0000 	teqcs	sp, #0
    5250:	1b210000 	blne	845258 <_Min_Stack_Size+0x844e58>
    5254:	01000008 	tsteq	r0, r8
    5258:	00594455 	subseq	r4, r9, r5, asr r4
    525c:	23750000 	cmncs	r5, #0
    5260:	236f0000 	cmncs	pc, #0
    5264:	df2c0000 	svcle	0x002c0000
    5268:	3a000008 	bcc	5290 <_Min_Stack_Size+0x4e90>
    526c:	01080015 	tsteq	r8, r5, lsl r0
    5270:	0800153a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, ip}
    5274:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    5278:	1d095a01 	vstrne	s10, [r9, #-4]
    527c:	000008fd 	strdeq	r0, [r0], -sp
    5280:	000023a3 	andeq	r2, r0, r3, lsr #7
    5284:	000023a1 	andeq	r2, r0, r1, lsr #7
    5288:	0008f11d 	andeq	pc, r8, sp, lsl r1	@ <UNPREDICTABLE>
    528c:	0023bd00 	eoreq	fp, r3, r0, lsl #26
    5290:	0023bb00 	eoreq	fp, r3, r0, lsl #22
    5294:	15401e00 	strbne	r1, [r0, #-3584]	@ 0xfffff200
    5298:	03f90800 	mvnseq	r0, #0, 16
    529c:	011f0000 	tsteq	pc, r0
    52a0:	1a030551 	bne	c67ec <_Min_Stack_Size+0xc63ec>
    52a4:	00200000 	eoreq	r0, r0, r0
    52a8:	01020000 	mrseq	r0, (UNDEF: 2)
    52ac:	00021f08 	andeq	r1, r2, r8, lsl #30
    52b0:	11040700 	tstne	r4, r0, lsl #14
    52b4:	2d000001 	stccs	0, cr0, [r0, #-4]
    52b8:	000b9701 	andeq	r9, fp, r1, lsl #14
    52bc:	06480100 	strbeq	r0, [r8], -r0, lsl #2
    52c0:	00077801 	andeq	r7, r7, r1, lsl #16
    52c4:	0014f400 	andseq	pc, r4, r0, lsl #8
    52c8:	00152008 	andseq	r2, r5, r8
    52cc:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    52d0:	0007d401 	andeq	sp, r7, r1, lsl #8
    52d4:	65722200 	ldrbvs	r2, [r2, #-512]!	@ 0xfffffe00
    52d8:	48010071 	stmdami	r1, {r0, r4, r5, r6}
    52dc:	00077f24 	andeq	r7, r7, r4, lsr #30
    52e0:	0023d900 	eoreq	sp, r3, r0, lsl #18
    52e4:	0023d100 	eoreq	sp, r3, r0, lsl #2
    52e8:	0ade2e00 	beq	ff790af0 <BootRAM+0xe701291>
    52ec:	48010000 	stmdami	r1, {}	@ <UNPREDICTABLE>
    52f0:	0007d430 	andeq	sp, r7, r0, lsr r4
    52f4:	2e510100 	rdfcss	f0, f1, f0
    52f8:	00000fe2 	andeq	r0, r0, r2, ror #31
    52fc:	17404801 	strbne	r4, [r0, -r1, lsl #16]
    5300:	01000004 	tsteq	r0, r4
    5304:	04070052 	streq	r0, [r7], #-82	@ 0xffffffae
    5308:	000007da 	ldrdeq	r0, [r0], -sl
    530c:	012b042f 			@ <UNDEFINED> instruction: 0x012b042f
    5310:	00000ff0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    5314:	01051d01 	tsteq	r5, r1, lsl #26
    5318:	00000090 	muleq	r0, r0, r0
    531c:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
    5320:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
    5324:	00002413 	andeq	r2, r0, r3, lsl r4
    5328:	00085301 	andeq	r5, r8, r1, lsl #6
    532c:	75622200 	strbvc	r2, [r2, #-512]!	@ 0xfffffe00
    5330:	1d010066 	stcne	0, cr0, [r1, #-408]	@ 0xfffffe68
    5334:	00063518 	andeq	r3, r6, r8, lsl r5
    5338:	00243b00 	eoreq	r3, r4, r0, lsl #22
    533c:	00243300 	eoreq	r3, r4, r0, lsl #6
    5340:	0fe22100 	svceq	0x00e22100
    5344:	1d010000 	stcne	0, cr0, [r1, #-0]
    5348:	00009021 	andeq	r9, r0, r1, lsr #32
    534c:	00247500 	eoreq	r7, r4, r0, lsl #10
    5350:	00247100 	eoreq	r7, r4, r0, lsl #2
    5354:	76612400 	strbtvc	r2, [r1], -r0, lsl #8
    5358:	0c1e0100 	ldfeqs	f0, [lr], {-0}
    535c:	00000059 	andeq	r0, r0, r9, asr r0
    5360:	00002499 	muleq	r0, r9, r4
    5364:	00002493 	muleq	r0, r3, r4
    5368:	00747324 	rsbseq	r7, r4, r4, lsr #6
    536c:	590c1f01 	stmdbpl	ip, {r0, r8, r9, sl, fp, ip}
    5370:	c9000000 	stmdbgt	r0, {}	@ <UNPREDICTABLE>
    5374:	c5000024 	strgt	r0, [r0, #-36]	@ 0xffffffdc
    5378:	25000024 	strcs	r0, [r0, #-36]	@ 0xffffffdc
    537c:	080014c8 	stmdaeq	r0, {r3, r6, r7, sl, ip}
    5380:	000008c6 	andeq	r0, r0, r6, asr #17
    5384:	9e012000 	cdpls	0, 0, cr2, cr1, cr0, {0}
    5388:	0100000f 	tsteq	r0, pc
    538c:	8401060f 	strhi	r0, [r1], #-1551	@ 0xfffff9f1
    5390:	c0080014 	andgt	r0, r8, r4, lsl r0
    5394:	e7080014 	smlad	r8, r4, r0, r0
    5398:	01000024 	tsteq	r0, r4, lsr #32
    539c:	000008c6 	andeq	r0, r0, r6, asr #17
    53a0:	66756222 	ldrbtvs	r6, [r5], -r2, lsr #4
    53a4:	1a0f0100 	bne	3c57ac <_Min_Stack_Size+0x3c53ac>
    53a8:	00000635 	andeq	r0, r0, r5, lsr r6
    53ac:	0000250f 	andeq	r2, r0, pc, lsl #10
    53b0:	00002507 	andeq	r2, r0, r7, lsl #10
    53b4:	000fe221 	andeq	lr, pc, r1, lsr #4
    53b8:	230f0100 	movwcs	r0, #61696	@ 0xf100
    53bc:	00000090 	muleq	r0, r0, r0
    53c0:	00002549 	andeq	r2, r0, r9, asr #10
    53c4:	00002545 	andeq	r2, r0, r5, asr #10
    53c8:	006e6524 	rsbeq	r6, lr, r4, lsr #10
    53cc:	590c1001 	stmdbpl	ip, {r0, ip}
    53d0:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    53d4:	6a000025 	bvs	5470 <_Min_Stack_Size+0x5070>
    53d8:	24000025 	strcs	r0, [r0], #-37	@ 0xffffffdb
    53dc:	01007661 	tsteq	r0, r1, ror #12
    53e0:	00590c11 	subseq	r0, r9, r1, lsl ip
    53e4:	25900000 	ldrcs	r0, [r0]
    53e8:	258c0000 	strcs	r0, [ip]
    53ec:	90250000 	eorls	r0, r5, r0
    53f0:	c6080014 			@ <UNDEFINED> instruction: 0xc6080014
    53f4:	00000008 	andeq	r0, r0, r8
    53f8:	0fd80130 	svceq	0x00d80130
    53fc:	0a010000 	beq	45404 <_Min_Stack_Size+0x45004>
    5400:	0000590a 	andeq	r5, r0, sl, lsl #18
    5404:	00147000 	andseq	r7, r4, r0
    5408:	00148408 	andseq	r8, r4, r8, lsl #8
    540c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    5410:	06d83101 	ldrbeq	r3, [r8], r1, lsl #2
    5414:	c1020000 	mrsgt	r0, (UNDEF: 2)
    5418:	00900113 	addseq	r0, r0, r3, lsl r1
    541c:	0a030000 	beq	c5424 <_Min_Stack_Size+0xc5024>
    5420:	29000009 	stmdbcs	r0, {r0, r3}
    5424:	00000921 	andeq	r0, r0, r1, lsr #18
    5428:	4127c102 			@ <UNDEFINED> instruction: 0x4127c102
    542c:	32000000 	andcc	r0, r0, #0
    5430:	00667562 	rsbeq	r7, r6, r2, ror #10
    5434:	1738c102 	ldrne	ip, [r8, -r2, lsl #2]!
    5438:	00000004 	andeq	r0, r0, r4
    543c:	00058333 	andeq	r8, r5, r3, lsr r3
    5440:	14b40200 	ldrtne	r0, [r4], #512	@ 0x200
    5444:	093d0301 	ldmdbeq	sp!, {r0, r8, r9}
    5448:	21290000 			@ <UNDEFINED> instruction: 0x21290000
    544c:	02000009 	andeq	r0, r0, #9
    5450:	004129b4 	strheq	r2, [r1], #-148	@ 0xffffff6c
    5454:	62320000 	eorsvs	r0, r2, #0
    5458:	02006675 	andeq	r6, r0, #122683392	@ 0x7500000
    545c:	03cf40b4 	biceq	r4, pc, #180	@ 0xb4
    5460:	e2290000 	eor	r0, r9, #0
    5464:	0200000f 	andeq	r0, r0, #15
    5468:	00594eb4 	ldrheq	r4, [r9], #-228	@ 0xffffff1c
    546c:	34000000 	strcc	r0, [r0], #-0
    5470:	0000063b 	andeq	r0, r0, fp, lsr r6
    5474:	08001576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, ip}
    5478:	0800158c 	stmdaeq	r0, {r2, r3, r7, r8, sl, ip}
    547c:	01007d02 	tsteq	r0, r2, lsl #26
    5480:	00064a1d 	andeq	r4, r6, sp, lsl sl
    5484:	0025b900 	eoreq	fp, r5, r0, lsl #18
    5488:	0025b100 	eoreq	fp, r5, r0, lsl #2
    548c:	063b3500 	ldrteq	r3, [fp], -r0, lsl #10
    5490:	157a0000 	ldrbne	r0, [sl, #-0]!
    5494:	08000800 	stmdaeq	r0, {fp}
    5498:	01000003 	tsteq	r0, r3
    549c:	097e0667 	ldmdbeq	lr!, {r0, r1, r2, r5, r6, r9, sl}^
    54a0:	4a1d0000 	bmi	7454a8 <_Min_Stack_Size+0x7450a8>
    54a4:	f5000006 			@ <UNDEFINED> instruction: 0xf5000006
    54a8:	f3000025 	vhadd.u8	d0, d0, d21
    54ac:	00000025 	andeq	r0, r0, r5, lsr #32
    54b0:	00158027 	andseq	r8, r5, r7, lsr #32
    54b4:	08530108 	ldmdaeq	r3, {r3, r8}^
    54b8:	00000000 	andeq	r0, r0, r0
    54bc:	00000116 	andeq	r0, r0, r6, lsl r1
    54c0:	14cb0004 	strbne	r0, [fp], #4
    54c4:	01040000 	mrseq	r0, (UNDEF: 4)
    54c8:	0000103c 	andeq	r1, r0, ip, lsr r0
    54cc:	00112c0c 	andseq	r2, r1, ip, lsl #24
    54d0:	0010ab00 	andseq	sl, r0, r0, lsl #22
    54d4:	00167000 	andseq	r7, r6, r0
    54d8:	00004808 	andeq	r4, r0, r8, lsl #16
    54dc:	00234b00 	eoreq	r4, r3, r0, lsl #22
    54e0:	06010200 	streq	r0, [r1], -r0, lsl #4
    54e4:	00000218 	andeq	r0, r0, r8, lsl r2
    54e8:	16080102 	strne	r0, [r8], -r2, lsl #2
    54ec:	02000002 	andeq	r0, r0, #2
    54f0:	00300502 	eorseq	r0, r0, r2, lsl #10
    54f4:	02020000 	andeq	r0, r2, #0
    54f8:	00029107 	andeq	r9, r2, r7, lsl #2
    54fc:	05040200 	streq	r0, [r4, #-512]	@ 0xfffffe00
    5500:	00000067 	andeq	r0, r0, r7, rrx
    5504:	3d070402 	cfstrscc	mvf0, [r7, #-8]
    5508:	02000002 	andeq	r0, r0, #2
    550c:	00620508 	rsbeq	r0, r2, r8, lsl #10
    5510:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
    5514:	00023807 	andeq	r3, r2, r7, lsl #16
    5518:	05040300 	streq	r0, [r4, #-768]	@ 0xfffffd00
    551c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    5520:	42070402 	andmi	r0, r7, #33554432	@ 0x2000000
    5524:	04000002 	streq	r0, [r0], #-2
    5528:	0000100d 	andeq	r1, r0, sp
    552c:	6417d102 	ldrvs	sp, [r7], #-258	@ 0xfffffefe
    5530:	02000000 	andeq	r0, r0, #0
    5534:	0ca60408 	cfstrseq	mvf0, [r6], #32
    5538:	01020000 	mrseq	r0, (UNDEF: 2)
    553c:	00021f08 	andeq	r1, r2, r8, lsl #30
    5540:	00900500 	addseq	r0, r0, r0, lsl #10
    5544:	00900000 	addseq	r0, r0, r0
    5548:	00060000 	andeq	r0, r6, r0
    554c:	00960407 	addseq	r0, r6, r7, lsl #8
    5550:	09080000 	stmdbeq	r8, {}	@ <UNPREDICTABLE>
    5554:	00001026 	andeq	r1, r0, r6, lsr #32
    5558:	850f1301 	strhi	r1, [pc, #-769]	@ 525f <_Min_Stack_Size+0x4e5f>
    555c:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    5560:	00001107 	andeq	r1, r0, r7, lsl #2
    5564:	850f1401 	strhi	r1, [pc, #-1025]	@ 516b <_Min_Stack_Size+0x4d6b>
    5568:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    556c:	00000ffa 	strdeq	r0, [r0], -sl
    5570:	850f1501 	strhi	r1, [pc, #-1281]	@ 5077 <_Min_Stack_Size+0x4c77>
    5574:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    5578:	0000111b 	andeq	r1, r0, fp, lsl r1
    557c:	850f1601 	strhi	r1, [pc, #-1537]	@ 4f83 <_Min_Stack_Size+0x4b83>
    5580:	0a000000 	beq	5588 <_Min_Stack_Size+0x5188>
    5584:	00001014 	andeq	r1, r0, r4, lsl r0
    5588:	70011e01 	andvc	r1, r1, r1, lsl #28
    558c:	48080016 	stmdami	r8, {r1, r2, r4}
    5590:	01000000 	mrseq	r0, (UNDEF: 0)
    5594:	00010d9c 	muleq	r1, ip, sp
    5598:	05240b00 	streq	r0, [r4, #-2816]!	@ 0xfffff500
    559c:	20010000 	andcs	r0, r1, r0
    55a0:	00006b0a 	andeq	r6, r0, sl, lsl #22
    55a4:	00261000 	eoreq	r1, r6, r0
    55a8:	00260800 	eoreq	r0, r6, r0, lsl #16
    55ac:	00690c00 	rsbeq	r0, r9, r0, lsl #24
    55b0:	6b0a2101 	blvs	28d9bc <_Min_Stack_Size+0x28d5bc>
    55b4:	5c000000 	stcpl	0, cr0, [r0], {-0}
    55b8:	4c000026 	stcmi	0, cr0, [r0], {38}	@ 0x26
    55bc:	0d000026 	stceq	0, cr0, [r0, #-152]	@ 0xffffff68
    55c0:	08001692 	stmdaeq	r0, {r1, r4, r7, r9, sl, ip}
    55c4:	0000010d 	andeq	r0, r0, sp, lsl #2
    55c8:	0cb50e00 	ldceq	14, cr0, [r5]
    55cc:	0cb50000 	ldceq	0, cr0, [r5]
    55d0:	19010000 	stmdbne	r1, {}	@ <UNPREDICTABLE>
    55d4:	Address 0x55d4 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	@ 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	@ 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	@ 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	@ 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Stack_Size+0xf8284c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	@ 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Stack_Size+0x2ce464>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	@ 0xffffffed
      30:	13490035 	movtne	r0, #36917	@ 0x9035
      34:	24050000 	strcs	r0, [r5], #-0
      38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      3c:	0008030b 	andeq	r0, r8, fp, lsl #6
      40:	01130600 	tsteq	r3, r0, lsl #12
      44:	0b3a0b0b 	bleq	e82c78 <_Min_Stack_Size+0xe82878>
      48:	0b39053b 	bleq	e4153c <_Min_Stack_Size+0xe4113c>
      4c:	00001301 	andeq	r1, r0, r1, lsl #6
      50:	03000d07 	movweq	r0, #3335	@ 0xd07
      54:	3b0b3a08 	blcc	2ce87c <_Min_Stack_Size+0x2ce47c>
      58:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      5c:	000a3813 	andeq	r3, sl, r3, lsl r8
      60:	000d0800 	andeq	r0, sp, r0, lsl #16
      64:	0b3a0e03 	bleq	e83878 <_Min_Stack_Size+0xe83478>
      68:	0b39053b 	bleq	e4155c <_Min_Stack_Size+0xe4115c>
      6c:	0a381349 	beq	e04d98 <_Min_Stack_Size+0xe04998>
      70:	01090000 	mrseq	r0, (UNDEF: 9)
      74:	01134901 	tsteq	r3, r1, lsl #18
      78:	0a000013 	beq	cc <_Min_Heap_Size+0xcc>
      7c:	13490021 	movtne	r0, #36897	@ 0x9021
      80:	00000b2f 	andeq	r0, r0, pc, lsr #22
      84:	0300160b 	movweq	r1, #1547	@ 0x60b
      88:	3b0b3a0e 	blcc	2ce8c8 <_Min_Stack_Size+0x2ce4c8>
      8c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      90:	0c000013 	stceq	0, cr0, [r0], {19}
      94:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ ffffffe4 <BootRAM+0xef70785>
      98:	0b3a0e03 	bleq	e838ac <_Min_Stack_Size+0xe834ac>
      9c:	0b390b3b 	bleq	e42d90 <_Min_Stack_Size+0xe42990>
      a0:	13010c3c 	movwne	r0, #7228	@ 0x1c3c
      a4:	180d0000 	stmdane	sp, {}	@ <UNPREDICTABLE>
      a8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
      ac:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ fffffffc <BootRAM+0xef7079d>
      b0:	0b3a0e03 	bleq	e838c4 <_Min_Stack_Size+0xe834c4>
      b4:	0b390b3b 	bleq	e42da8 <_Min_Stack_Size+0xe429a8>
      b8:	13490c27 	movtne	r0, #39975	@ 0x9c27
      bc:	01120111 	tsteq	r2, r1, lsl r1
      c0:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
      c4:	0013010c 	andseq	r0, r3, ip, lsl #2
      c8:	010b0f00 	tsteq	fp, r0, lsl #30
      cc:	01120111 	tsteq	r2, r1, lsl r1
      d0:	00001301 	andeq	r1, r0, r1, lsl #6
      d4:	03003410 	movweq	r3, #1040	@ 0x410
      d8:	3b0b3a0e 	blcc	2ce918 <_Min_Stack_Size+0x2ce518>
      dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      e0:	b7060213 	smladlt	r6, r3, r2, r0
      e4:	00000642 	andeq	r0, r0, r2, asr #12
      e8:	31001d11 	tstcc	r0, r1, lsl sp
      ec:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
      f0:	01110b42 	tsteq	r1, r2, asr #22
      f4:	0b580112 	bleq	1600544 <_Min_Stack_Size+0x1600144>
      f8:	0b570b59 	bleq	15c2e64 <_Min_Stack_Size+0x15c2a64>
      fc:	89120000 	ldmdbhi	r2, {}	@ <UNPREDICTABLE>
     100:	11010182 	smlabbne	r1, r2, r1, r0
     104:	01133101 	tsteq	r3, r1, lsl #2
     108:	13000013 	movwne	r0, #19
     10c:	0001828a 	andeq	r8, r1, sl, lsl #5
     110:	42910a02 	addsmi	r0, r1, #8192	@ 0x2000
     114:	1400000a 	strne	r0, [r0], #-10
     118:	00018289 	andeq	r8, r1, r9, lsl #5
     11c:	13310111 	teqne	r1, #1073741828	@ 0x40000004
     120:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     124:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     128:	3b0b3a0e 	blcc	2ce968 <_Min_Stack_Size+0x2ce568>
     12c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     130:	1201110c 	andne	r1, r1, #12, 2
     134:	970a4001 	strls	r4, [sl, -r1]
     138:	13010c42 	movwne	r0, #7234	@ 0x1c42
     13c:	05160000 	ldreq	r0, [r6, #-0]
     140:	3a0e0300 	bcc	380d48 <_Min_Stack_Size+0x380948>
     144:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     148:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     14c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     150:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     154:	030c3f00 	movweq	r3, #52992	@ 0xcf00
     158:	3b0b3a0e 	blcc	2ce998 <_Min_Stack_Size+0x2ce598>
     15c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     160:	1201110c 	andne	r1, r1, #12, 2
     164:	970a4001 	strls	r4, [sl, -r1]
     168:	00000c42 	andeq	r0, r0, r2, asr #24
     16c:	3f002e18 	svccc	0x00002e18
     170:	3a0e030c 	bcc	380da8 <_Min_Stack_Size+0x3809a8>
     174:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     178:	000c270b 	andeq	r2, ip, fp, lsl #14
     17c:	012e1900 			@ <UNDEFINED> instruction: 0x012e1900
     180:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     184:	0b3b0b3a 	bleq	ec2e74 <_Min_Stack_Size+0xec2a74>
     188:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     18c:	01111349 	tsteq	r1, r9, asr #6
     190:	0a400112 	beq	10005e0 <_Min_Stack_Size+0x10001e0>
     194:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     198:	1a000013 	bne	1ec <_Min_Heap_Size+0x1ec>
     19c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     1a0:	0b3b0b3a 	bleq	ec2e90 <_Min_Stack_Size+0xec2a90>
     1a4:	13490b39 	movtne	r0, #39737	@ 0x9b39
     1a8:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     1ac:	1b000006 	blne	1cc <_Min_Heap_Size+0x1cc>
     1b0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     1b4:	00001301 	andeq	r1, r0, r1, lsl #6
     1b8:	55010b1c 	strpl	r0, [r1, #-2844]	@ 0xfffff4e4
     1bc:	1d000006 	stcne	0, cr0, [r0, #-24]	@ 0xffffffe8
     1c0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ 110 <_Min_Heap_Size+0x110>
     1c4:	0b3a0e03 	bleq	e839d8 <_Min_Stack_Size+0xe835d8>
     1c8:	0b390b3b 	bleq	e42ebc <_Min_Stack_Size+0xe42abc>
     1cc:	01120111 	tsteq	r2, r1, lsl r1
     1d0:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     1d4:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
     1d8:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     1dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     1e0:	0b200b39 	bleq	802ecc <_Min_Stack_Size+0x802acc>
     1e4:	01000000 	mrseq	r0, (UNDEF: 0)
     1e8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     1ec:	0e030b13 	vmoveq.32	d3[0], r0
     1f0:	01110e1b 	tsteq	r1, fp, lsl lr
     1f4:	06100112 			@ <UNDEFINED> instruction: 0x06100112
     1f8:	24020000 	strcs	r0, [r2], #-0
     1fc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     200:	000e030b 	andeq	r0, lr, fp, lsl #6
     204:	00160300 	andseq	r0, r6, r0, lsl #6
     208:	0b3a0e03 	bleq	e83a1c <_Min_Stack_Size+0xe8361c>
     20c:	0b390b3b 	bleq	e42f00 <_Min_Stack_Size+0xe42b00>
     210:	00001349 	andeq	r1, r0, r9, asr #6
     214:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     218:	05000013 	streq	r0, [r0, #-19]	@ 0xffffffed
     21c:	13490026 	movtne	r0, #36902	@ 0x9026
     220:	24060000 	strcs	r0, [r6], #-0
     224:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     228:	0008030b 	andeq	r0, r8, fp, lsl #6
     22c:	01130700 	tsteq	r3, r0, lsl #14
     230:	0b3a0b0b 	bleq	e82e64 <_Min_Stack_Size+0xe82a64>
     234:	0b39053b 	bleq	e41728 <_Min_Stack_Size+0xe41328>
     238:	00001301 	andeq	r1, r0, r1, lsl #6
     23c:	03000d08 	movweq	r0, #3336	@ 0xd08
     240:	3b0b3a0e 	blcc	2cea80 <_Min_Stack_Size+0x2ce680>
     244:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     248:	000a3813 	andeq	r3, sl, r3, lsl r8
     24c:	000d0900 	andeq	r0, sp, r0, lsl #18
     250:	0b3a0803 	bleq	e82264 <_Min_Stack_Size+0xe81e64>
     254:	0b39053b 	bleq	e41748 <_Min_Stack_Size+0xe41348>
     258:	0a381349 	beq	e04f84 <_Min_Stack_Size+0xe04b84>
     25c:	160a0000 	strne	r0, [sl], -r0
     260:	3a0e0300 	bcc	380e68 <_Min_Stack_Size+0x380a68>
     264:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     268:	0013490b 	andseq	r4, r3, fp, lsl #18
     26c:	00340b00 	eorseq	r0, r4, r0, lsl #22
     270:	0b3a0e03 	bleq	e83a84 <_Min_Stack_Size+0xe83684>
     274:	0b390b3b 	bleq	e42f68 <_Min_Stack_Size+0xe42b68>
     278:	0c3f1349 	ldceq	3, cr1, [pc], #-292	@ 15c <_Min_Heap_Size+0x15c>
     27c:	00000c3c 	andeq	r0, r0, ip, lsr ip
     280:	4700340c 	strmi	r3, [r0, -ip, lsl #8]
     284:	3b0b3a13 	blcc	2cead8 <_Min_Stack_Size+0x2ce6d8>
     288:	020b390b 	andeq	r3, fp, #180224	@ 0x2c000
     28c:	0d00000a 	stceq	0, cr0, [r0, #-40]	@ 0xffffffd8
     290:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ 1e0 <_Min_Heap_Size+0x1e0>
     294:	0b3a0e03 	bleq	e83aa8 <_Min_Stack_Size+0xe836a8>
     298:	0b390b3b 	bleq	e42f8c <_Min_Stack_Size+0xe42b8c>
     29c:	01120111 	tsteq	r2, r1, lsl r1
     2a0:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     2a4:	0000000c 	andeq	r0, r0, ip
     2a8:	25011101 	strcs	r1, [r1, #-257]	@ 0xfffffeff
     2ac:	030b130e 	movweq	r1, #45838	@ 0xb30e
     2b0:	110e1b0e 	tstne	lr, lr, lsl #22
     2b4:	10011201 	andne	r1, r1, r1, lsl #4
     2b8:	02000006 	andeq	r0, r0, #6
     2bc:	0b0b0024 	bleq	2c0354 <_Min_Stack_Size+0x2bff54>
     2c0:	0e030b3e 	vmoveq.16	d3[0], r0
     2c4:	16030000 	strne	r0, [r3], -r0
     2c8:	3a0e0300 	bcc	380ed0 <_Min_Stack_Size+0x380ad0>
     2cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2d0:	0013490b 	andseq	r4, r3, fp, lsl #18
     2d4:	00350400 	eorseq	r0, r5, r0, lsl #8
     2d8:	00001349 	andeq	r1, r0, r9, asr #6
     2dc:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     2e0:	06000013 			@ <UNDEFINED> instruction: 0x06000013
     2e4:	0b0b0024 	bleq	2c037c <_Min_Stack_Size+0x2bff7c>
     2e8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     2ec:	0f070000 	svceq	0x00070000
     2f0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     2f4:	08000013 	stmdaeq	r0, {r0, r1, r4}
     2f8:	0c270115 	stfeqs	f0, [r7], #-84	@ 0xffffffac
     2fc:	00001301 	andeq	r1, r0, r1, lsl #6
     300:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
     304:	0a000013 	beq	358 <_Min_Heap_Size+0x358>
     308:	0b0b0113 	bleq	2c075c <_Min_Stack_Size+0x2c035c>
     30c:	0b3b0b3a 	bleq	ec2ffc <_Min_Stack_Size+0xec2bfc>
     310:	13010b39 	movwne	r0, #6969	@ 0x1b39
     314:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     318:	3a0e0300 	bcc	380f20 <_Min_Stack_Size+0x380b20>
     31c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     320:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     324:	0c00000a 	stceq	0, cr0, [r0], {10}
     328:	0b3e0104 	bleq	f80740 <_Min_Stack_Size+0xf80340>
     32c:	13490b0b 	movtne	r0, #39691	@ 0x9b0b
     330:	0b3b0b3a 	bleq	ec3020 <_Min_Stack_Size+0xec2c20>
     334:	13010b39 	movwne	r0, #6969	@ 0x1b39
     338:	280d0000 	stmdacs	sp, {}	@ <UNPREDICTABLE>
     33c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     340:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
     344:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     348:	00000b1c 	andeq	r0, r0, ip, lsl fp
     34c:	0b01130f 	bleq	44f90 <_Min_Stack_Size+0x44b90>
     350:	3b0b3a05 	blcc	2ceb6c <_Min_Stack_Size+0x2ce76c>
     354:	010b390b 	tsteq	fp, fp, lsl #18
     358:	10000013 	andne	r0, r0, r3, lsl r0
     35c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     360:	0b3b0b3a 	bleq	ec3050 <_Min_Stack_Size+0xec2c50>
     364:	13490b39 	movtne	r0, #39737	@ 0x9b39
     368:	00000a38 	andeq	r0, r0, r8, lsr sl
     36c:	49010111 	stmdbmi	r1, {r0, r4, r8}
     370:	00130113 	andseq	r0, r3, r3, lsl r1
     374:	00211200 	eoreq	r1, r1, r0, lsl #4
     378:	0b2f1349 	bleq	bc50a4 <_Min_Stack_Size+0xbc4ca4>
     37c:	21130000 	tstcs	r3, r0
     380:	2f134900 	svccs	0x00134900
     384:	14000005 	strne	r0, [r0], #-5
     388:	0b0b0113 	bleq	2c07dc <_Min_Stack_Size+0x2c03dc>
     38c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     390:	13010b39 	movwne	r0, #6969	@ 0x1b39
     394:	0d150000 	ldceq	0, cr0, [r5, #-0]
     398:	3a0e0300 	bcc	380fa0 <_Min_Stack_Size+0x380ba0>
     39c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3a0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     3a4:	1600000a 	strne	r0, [r0], -sl
     3a8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     3ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     3b0:	13490b39 	movtne	r0, #39737	@ 0x9b39
     3b4:	00000a38 	andeq	r0, r0, r8, lsr sl
     3b8:	03001617 	movweq	r1, #1559	@ 0x617
     3bc:	3b0b3a0e 	blcc	2cebfc <_Min_Stack_Size+0x2ce7fc>
     3c0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3c4:	18000013 	stmdane	r0, {r0, r1, r4}
     3c8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     3cc:	0b3b0b3a 	bleq	ec30bc <_Min_Stack_Size+0xec2cbc>
     3d0:	13490b39 	movtne	r0, #39737	@ 0x9b39
     3d4:	0b0d0b0b 	bleq	343008 <_Min_Stack_Size+0x342c08>
     3d8:	0a380b0c 	beq	e03010 <_Min_Stack_Size+0xe02c10>
     3dc:	17190000 	ldrne	r0, [r9, -r0]
     3e0:	3a0b0b01 	bcc	2c2fec <_Min_Stack_Size+0x2c2bec>
     3e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e8:	0013010b 	andseq	r0, r3, fp, lsl #2
     3ec:	000d1a00 	andeq	r1, sp, r0, lsl #20
     3f0:	0b3a0e03 	bleq	e83c04 <_Min_Stack_Size+0xe83804>
     3f4:	0b390b3b 	bleq	e430e8 <_Min_Stack_Size+0xe42ce8>
     3f8:	00001349 	andeq	r1, r0, r9, asr #6
     3fc:	49000d1b 	stmdbmi	r0, {r0, r1, r3, r4, r8, sl, fp}
     400:	1c000013 	stcne	0, cr0, [r0], {19}
     404:	1349000d 	movtne	r0, #36877	@ 0x900d
     408:	00000a38 	andeq	r0, r0, r8, lsr sl
     40c:	0300341d 	movweq	r3, #1053	@ 0x41d
     410:	3b0b3a0e 	blcc	2cec50 <_Min_Stack_Size+0x2ce850>
     414:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     418:	020c3f13 	andeq	r3, ip, #19, 30	@ 0x4c
     41c:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     420:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     424:	0b3b0b3a 	bleq	ec3114 <_Min_Stack_Size+0xec2d14>
     428:	13490b39 	movtne	r0, #39737	@ 0x9b39
     42c:	00000a02 	andeq	r0, r0, r2, lsl #20
     430:	03000d1f 	movweq	r0, #3359	@ 0xd1f
     434:	3b0b3a0e 	blcc	2cec74 <_Min_Stack_Size+0x2ce874>
     438:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     43c:	0d0b0b13 	vstreq	d0, [fp, #-76]	@ 0xffffffb4
     440:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
     444:	2000000a 	andcs	r0, r0, sl
     448:	0b0b0117 	bleq	2c08ac <_Min_Stack_Size+0x2c04ac>
     44c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     450:	13010b39 	movwne	r0, #6969	@ 0x1b39
     454:	0d210000 	stceq	0, cr0, [r1, #-0]
     458:	3a0e0300 	bcc	381060 <_Min_Stack_Size+0x380c60>
     45c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     460:	0013490b 	andseq	r4, r3, fp, lsl #18
     464:	012e2200 			@ <UNDEFINED> instruction: 0x012e2200
     468:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     46c:	0b3b0b3a 	bleq	ec315c <_Min_Stack_Size+0xec2d5c>
     470:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     474:	13010c3c 	movwne	r0, #7228	@ 0x1c3c
     478:	26230000 	strtcs	r0, [r3], -r0
     47c:	24000000 	strcs	r0, [r0], #-0
     480:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 3d0 <_Min_Heap_Size+0x3d0>
     484:	0b3a0e03 	bleq	e83c98 <_Min_Stack_Size+0xe83898>
     488:	0b39053b 	bleq	e4197c <_Min_Stack_Size+0xe4157c>
     48c:	13490c27 	movtne	r0, #39975	@ 0x9c27
     490:	01120111 	tsteq	r2, r1, lsl r1
     494:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
     498:	0013010c 	andseq	r0, r3, ip, lsl #2
     49c:	00052500 	andeq	r2, r5, r0, lsl #10
     4a0:	0b3a0803 	bleq	e824b4 <_Min_Stack_Size+0xe820b4>
     4a4:	0b39053b 	bleq	e41998 <_Min_Stack_Size+0xe41598>
     4a8:	06021349 	streq	r1, [r2], -r9, asr #6
     4ac:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     4b0:	00342600 	eorseq	r2, r4, r0, lsl #12
     4b4:	0b3a0e03 	bleq	e83cc8 <_Min_Stack_Size+0xe838c8>
     4b8:	0b39053b 	bleq	e419ac <_Min_Stack_Size+0xe415ac>
     4bc:	06021349 	streq	r1, [r2], -r9, asr #6
     4c0:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     4c4:	00342700 	eorseq	r2, r4, r0, lsl #14
     4c8:	0b3a0803 	bleq	e824dc <_Min_Stack_Size+0xe820dc>
     4cc:	0b39053b 	bleq	e419c0 <_Min_Stack_Size+0xe415c0>
     4d0:	06021349 	streq	r1, [r2], -r9, asr #6
     4d4:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     4d8:	010b2800 	tsteq	fp, r0, lsl #16
     4dc:	01120111 	tsteq	r2, r1, lsl r1
     4e0:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     4e4:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     4e8:	3b0b3a0e 	blcc	2ced28 <_Min_Stack_Size+0x2ce928>
     4ec:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     4f0:	1201110c 	andne	r1, r1, #12, 2
     4f4:	97064001 	strls	r4, [r6, -r1]
     4f8:	13010c42 	movwne	r0, #7234	@ 0x1c42
     4fc:	052a0000 	streq	r0, [sl, #-0]!
     500:	3a080300 	bcc	201108 <_Min_Stack_Size+0x200d08>
     504:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     508:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     50c:	2b00000a 	blcs	53c <_Min_Stack_Size+0x13c>
     510:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     514:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     518:	13490b39 	movtne	r0, #39737	@ 0x9b39
     51c:	00000a02 	andeq	r0, r0, r2, lsl #20
     520:	55010b2c 	strpl	r0, [r1, #-2860]	@ 0xfffff4d4
     524:	2d000006 	stccs	0, cr0, [r0, #-24]	@ 0xffffffe8
     528:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 478 <_Min_Stack_Size+0x78>
     52c:	0b3a0e03 	bleq	e83d40 <_Min_Stack_Size+0xe83940>
     530:	0b39053b 	bleq	e41a24 <_Min_Stack_Size+0xe41624>
     534:	01120111 	tsteq	r2, r1, lsl r1
     538:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
     53c:	0013010c 	andseq	r0, r3, ip, lsl #2
     540:	010b2e00 	tsteq	fp, r0, lsl #28
     544:	13010655 	movwne	r0, #5717	@ 0x1655
     548:	892f0000 	stmdbhi	pc!, {}	@ <UNPREDICTABLE>
     54c:	11010182 	smlabbne	r1, r2, r1, r0
     550:	00130101 	andseq	r0, r3, r1, lsl #2
     554:	828a3000 	addhi	r3, sl, #0
     558:	0a020001 	beq	80564 <_Min_Stack_Size+0x80164>
     55c:	000a4291 	muleq	sl, r1, r2
     560:	82893100 	addhi	r3, r9, #0, 2
     564:	01110101 	tsteq	r1, r1, lsl #2
     568:	89320000 	ldmdbhi	r2!, {}	@ <UNPREDICTABLE>
     56c:	11000182 	smlabbne	r0, r2, r1, r0
     570:	00133101 	andseq	r3, r3, r1, lsl #2
     574:	82893300 	addhi	r3, r9, #0, 6
     578:	01110101 	tsteq	r1, r1, lsl #2
     57c:	13011331 	movwne	r1, #4913	@ 0x1331
     580:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
     584:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     588:	3b0b3a0e 	blcc	2cedc8 <_Min_Stack_Size+0x2ce9c8>
     58c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     590:	1201110c 	andne	r1, r1, #12, 2
     594:	97064001 	strls	r4, [r6, -r1]
     598:	13010c42 	movwne	r0, #7234	@ 0x1c42
     59c:	05350000 	ldreq	r0, [r5, #-0]!
     5a0:	3a0e0300 	bcc	3811a8 <_Min_Stack_Size+0x380da8>
     5a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5a8:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     5ac:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     5b0:	05360000 	ldreq	r0, [r6, #-0]!
     5b4:	3a0e0300 	bcc	3811bc <_Min_Stack_Size+0x380dbc>
     5b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5bc:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     5c0:	3700000a 	strcc	r0, [r0, -sl]
     5c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     5c8:	0b3b0b3a 	bleq	ec32b8 <_Min_Stack_Size+0xec2eb8>
     5cc:	13490b39 	movtne	r0, #39737	@ 0x9b39
     5d0:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     5d4:	38000006 	stmdacc	r0, {r1, r2}
     5d8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5dc:	0b3b0b3a 	bleq	ec32cc <_Min_Stack_Size+0xec2ecc>
     5e0:	13490b39 	movtne	r0, #39737	@ 0x9b39
     5e4:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     5e8:	39000006 	stmdbcc	r0, {r1, r2}
     5ec:	0e03012e 	adfeqsp	f0, f3, #0.5
     5f0:	0b3b0b3a 	bleq	ec32e0 <_Min_Stack_Size+0xec2ee0>
     5f4:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     5f8:	01120111 	tsteq	r2, r1, lsl r1
     5fc:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
     600:	0013010c 	andseq	r0, r3, ip, lsl #2
     604:	00343a00 	eorseq	r3, r4, r0, lsl #20
     608:	0b3a0e03 	bleq	e83e1c <_Min_Stack_Size+0xe83a1c>
     60c:	0b390b3b 	bleq	e43300 <_Min_Stack_Size+0xe42f00>
     610:	00001349 	andeq	r1, r0, r9, asr #6
     614:	11010b3b 	tstne	r1, fp, lsr fp
     618:	01011201 	tsteq	r1, r1, lsl #4
     61c:	3c000013 	stccc	0, cr0, [r0], {19}
     620:	01018289 	smlabbeq	r1, r9, r2, r8
     624:	13310111 	teqne	r1, #1073741828	@ 0x40000004
     628:	1d3d0000 	ldcne	0, cr0, [sp, #-0]
     62c:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     630:	0b42b801 	bleq	10ae63c <_Min_Stack_Size+0x10ae23c>
     634:	01120111 	tsteq	r2, r1, lsl r1
     638:	0b590b58 	bleq	16433a0 <_Min_Stack_Size+0x1642fa0>
     63c:	13010b57 	movwne	r0, #6999	@ 0x1b57
     640:	053e0000 	ldreq	r0, [lr, #-0]!
     644:	02133100 	andseq	r3, r3, #0, 2
     648:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     64c:	1d3f0000 	ldcne	0, cr0, [pc, #-0]	@ 654 <_Min_Stack_Size+0x254>
     650:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     654:	0b42b801 	bleq	10ae660 <_Min_Stack_Size+0x10ae260>
     658:	0b580655 	bleq	1601fb4 <_Min_Stack_Size+0x1601bb4>
     65c:	0b570b59 	bleq	15c33c8 <_Min_Stack_Size+0x15c2fc8>
     660:	00001301 	andeq	r1, r0, r1, lsl #6
     664:	31011d40 	tstcc	r1, r0, asr #26
     668:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     66c:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     670:	0b590b58 	bleq	16433d8 <_Min_Stack_Size+0x1642fd8>
     674:	00000b57 	andeq	r0, r0, r7, asr fp
     678:	01828941 	orreq	r8, r2, r1, asr #18
     67c:	95011100 	strls	r1, [r1, #-256]	@ 0xffffff00
     680:	13310c42 	teqne	r1, #16896	@ 0x4200
     684:	0f420000 	svceq	0x00420000
     688:	000b0b00 	andeq	r0, fp, r0, lsl #22
     68c:	012e4300 			@ <UNDEFINED> instruction: 0x012e4300
     690:	0b3a0e03 	bleq	e83ea4 <_Min_Stack_Size+0xe83aa4>
     694:	0b390b3b 	bleq	e43388 <_Min_Stack_Size+0xe42f88>
     698:	0b200c27 	bleq	80373c <_Min_Stack_Size+0x80333c>
     69c:	00001301 	andeq	r1, r0, r1, lsl #6
     6a0:	03000544 	movweq	r0, #1348	@ 0x544
     6a4:	3b0b3a08 	blcc	2ceecc <_Min_Stack_Size+0x2ceacc>
     6a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6ac:	45000013 	strmi	r0, [r0, #-19]	@ 0xffffffed
     6b0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     6b4:	0b3b0b3a 	bleq	ec33a4 <_Min_Stack_Size+0xec2fa4>
     6b8:	13490b39 	movtne	r0, #39737	@ 0x9b39
     6bc:	2e460000 	cdpcs	0, 4, cr0, cr6, cr0, {0}
     6c0:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     6c4:	3b0b3a0e 	blcc	2cef04 <_Min_Stack_Size+0x2ceb04>
     6c8:	110b390b 	tstne	fp, fp, lsl #18
     6cc:	40011201 	andmi	r1, r1, r1, lsl #4
     6d0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     6d4:	00001301 	andeq	r1, r0, r1, lsl #6
     6d8:	31011d47 	tstcc	r1, r7, asr #26
     6dc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     6e0:	01110b42 	tsteq	r1, r2, asr #22
     6e4:	0b580112 	bleq	1600b34 <_Min_Stack_Size+0x1600734>
     6e8:	0b570b59 	bleq	15c3454 <_Min_Stack_Size+0x15c3054>
     6ec:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
     6f0:	3a0e0301 	bcc	3812fc <_Min_Stack_Size+0x380efc>
     6f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6f8:	110c270b 	tstne	ip, fp, lsl #14
     6fc:	40011201 	andmi	r1, r1, r1, lsl #4
     700:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     704:	00001301 	andeq	r1, r0, r1, lsl #6
     708:	3f012e49 	svccc	0x00012e49
     70c:	3a0e030c 	bcc	381344 <_Min_Stack_Size+0x380f44>
     710:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     714:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     718:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
     71c:	970a4001 	strls	r4, [sl, -r1]
     720:	13010c42 	movwne	r0, #7234	@ 0x1c42
     724:	054a0000 	strbeq	r0, [sl, #-0]
     728:	3a080300 	bcc	201330 <_Min_Stack_Size+0x200f30>
     72c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     730:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     734:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     738:	2e4b0000 	cdpcs	0, 4, cr0, cr11, cr0, {0}
     73c:	030c3f00 	movweq	r3, #52992	@ 0xcf00
     740:	3b0b3a0e 	blcc	2cef80 <_Min_Stack_Size+0x2ceb80>
     744:	000b390b 	andeq	r3, fp, fp, lsl #18
     748:	002e4c00 	eoreq	r4, lr, r0, lsl #24
     74c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     750:	0b3b0b3a 	bleq	ec3440 <_Min_Stack_Size+0xec3040>
     754:	0b200b39 	bleq	803440 <_Min_Stack_Size+0x803040>
     758:	2e4d0000 	cdpcs	0, 4, cr0, cr13, cr0, {0}
     75c:	3a0e0301 	bcc	381368 <_Min_Stack_Size+0x380f68>
     760:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     764:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     768:	010b2013 	tsteq	fp, r3, lsl r0
     76c:	4e000013 	mcrmi	0, 0, r0, cr0, cr3, {0}
     770:	0e03012e 	adfeqsp	f0, f3, #0.5
     774:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     778:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     77c:	13010b20 	movwne	r0, #6944	@ 0x1b20
     780:	054f0000 	strbeq	r0, [pc, #-0]	@ 788 <_Min_Stack_Size+0x388>
     784:	3a0e0300 	bcc	38138c <_Min_Stack_Size+0x380f8c>
     788:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     78c:	0013490b 	andseq	r4, r3, fp, lsl #18
     790:	002e5000 	eoreq	r5, lr, r0
     794:	01111331 	tsteq	r1, r1, lsr r3
     798:	0a400112 	beq	1000be8 <_Min_Stack_Size+0x10007e8>
     79c:	000c4297 	muleq	ip, r7, r2
     7a0:	11010000 	mrsne	r0, (UNDEF: 1)
     7a4:	130e2501 	movwne	r2, #58625	@ 0xe501
     7a8:	1b0e030b 	blne	3813dc <_Min_Stack_Size+0x380fdc>
     7ac:	1201110e 	andne	r1, r1, #-2147483645	@ 0x80000003
     7b0:	00061001 	andeq	r1, r6, r1
     7b4:	00240200 	eoreq	r0, r4, r0, lsl #4
     7b8:	0b3e0b0b 	bleq	f833ec <_Min_Stack_Size+0xf82fec>
     7bc:	00000e03 	andeq	r0, r0, r3, lsl #28
     7c0:	03001603 	movweq	r1, #1539	@ 0x603
     7c4:	3b0b3a0e 	blcc	2cf004 <_Min_Stack_Size+0x2cec04>
     7c8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     7cc:	04000013 	streq	r0, [r0], #-19	@ 0xffffffed
     7d0:	13490035 	movtne	r0, #36917	@ 0x9035
     7d4:	26050000 	strcs	r0, [r5], -r0
     7d8:	00134900 	andseq	r4, r3, r0, lsl #18
     7dc:	00240600 	eoreq	r0, r4, r0, lsl #12
     7e0:	0b3e0b0b 	bleq	f83414 <_Min_Stack_Size+0xf83014>
     7e4:	00000803 	andeq	r0, r0, r3, lsl #16
     7e8:	0b000f07 	bleq	440c <_Min_Stack_Size+0x400c>
     7ec:	0013490b 	andseq	r4, r3, fp, lsl #18
     7f0:	01150800 	tsteq	r5, r0, lsl #16
     7f4:	13010c27 	movwne	r0, #7207	@ 0x1c27
     7f8:	05090000 	streq	r0, [r9, #-0]
     7fc:	00134900 	andseq	r4, r3, r0, lsl #18
     800:	01130a00 	tsteq	r3, r0, lsl #20
     804:	0b3a0b0b 	bleq	e83438 <_Min_Stack_Size+0xe83038>
     808:	0b390b3b 	bleq	e434fc <_Min_Stack_Size+0xe430fc>
     80c:	00001301 	andeq	r1, r0, r1, lsl #6
     810:	03000d0b 	movweq	r0, #3339	@ 0xd0b
     814:	3b0b3a0e 	blcc	2cf054 <_Min_Stack_Size+0x2cec54>
     818:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     81c:	000a3813 	andeq	r3, sl, r3, lsl r8
     820:	01040c00 	tsteq	r4, r0, lsl #24
     824:	0b0b0b3e 	bleq	2c3524 <_Min_Stack_Size+0x2c3124>
     828:	0b3a1349 	bleq	e85554 <_Min_Stack_Size+0xe85154>
     82c:	0b390b3b 	bleq	e43520 <_Min_Stack_Size+0xe43120>
     830:	00001301 	andeq	r1, r0, r1, lsl #6
     834:	0300280d 	movweq	r2, #2061	@ 0x80d
     838:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     83c:	00280e00 	eoreq	r0, r8, r0, lsl #28
     840:	0b1c0e03 	bleq	704054 <_Min_Stack_Size+0x703c54>
     844:	130f0000 	movwne	r0, #61440	@ 0xf000
     848:	3a050b01 	bcc	143454 <_Min_Stack_Size+0x143054>
     84c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     850:	0013010b 	andseq	r0, r3, fp, lsl #2
     854:	000d1000 	andeq	r1, sp, r0
     858:	0b3a0803 	bleq	e8286c <_Min_Stack_Size+0xe8246c>
     85c:	0b390b3b 	bleq	e43550 <_Min_Stack_Size+0xe43150>
     860:	0a381349 	beq	e0558c <_Min_Stack_Size+0xe0518c>
     864:	01110000 	tsteq	r1, r0
     868:	01134901 	tsteq	r3, r1, lsl #18
     86c:	12000013 	andne	r0, r0, #19
     870:	13490021 	movtne	r0, #36897	@ 0x9021
     874:	00000b2f 	andeq	r0, r0, pc, lsr #22
     878:	49002113 	stmdbmi	r0, {r0, r1, r4, r8, sp}
     87c:	00052f13 	andeq	r2, r5, r3, lsl pc
     880:	01131400 	tsteq	r3, r0, lsl #8
     884:	0b3a0b0b 	bleq	e834b8 <_Min_Stack_Size+0xe830b8>
     888:	0b39053b 	bleq	e41d7c <_Min_Stack_Size+0xe4197c>
     88c:	00001301 	andeq	r1, r0, r1, lsl #6
     890:	03000d15 	movweq	r0, #3349	@ 0xd15
     894:	3b0b3a0e 	blcc	2cf0d4 <_Min_Stack_Size+0x2cecd4>
     898:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     89c:	000a3813 	andeq	r3, sl, r3, lsl r8
     8a0:	000d1600 	andeq	r1, sp, r0, lsl #12
     8a4:	0b3a0803 	bleq	e828b8 <_Min_Stack_Size+0xe824b8>
     8a8:	0b39053b 	bleq	e41d9c <_Min_Stack_Size+0xe4199c>
     8ac:	0a381349 	beq	e055d8 <_Min_Stack_Size+0xe051d8>
     8b0:	16170000 	ldrne	r0, [r7], -r0
     8b4:	3a0e0300 	bcc	3814bc <_Min_Stack_Size+0x3810bc>
     8b8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8bc:	0013490b 	andseq	r4, r3, fp, lsl #18
     8c0:	000f1800 	andeq	r1, pc, r0, lsl #16
     8c4:	00000b0b 	andeq	r0, r0, fp, lsl #22
     8c8:	03003419 	movweq	r3, #1049	@ 0x419
     8cc:	3b0b3a0e 	blcc	2cf10c <_Min_Stack_Size+0x2ced0c>
     8d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8d4:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     8d8:	1a00000c 	bne	910 <_Min_Stack_Size+0x510>
     8dc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     8e0:	0b3b0b3a 	bleq	ec35d0 <_Min_Stack_Size+0xec31d0>
     8e4:	13490b39 	movtne	r0, #39737	@ 0x9b39
     8e8:	0a020c3f 	beq	839ec <_Min_Stack_Size+0x835ec>
     8ec:	131b0000 	tstne	fp, #0
     8f0:	0b0e0301 	bleq	3814fc <_Min_Stack_Size+0x3810fc>
     8f4:	3b0b3a0b 	blcc	2cf128 <_Min_Stack_Size+0x2ced28>
     8f8:	010b390b 	tsteq	fp, fp, lsl #18
     8fc:	1c000013 	stcne	0, cr0, [r0], {19}
     900:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     904:	0b3b0b3a 	bleq	ec35f4 <_Min_Stack_Size+0xec31f4>
     908:	13490b39 	movtne	r0, #39737	@ 0x9b39
     90c:	00000a02 	andeq	r0, r0, r2, lsl #20
     910:	0300341d 	movweq	r3, #1053	@ 0x41d
     914:	3b0b3a0e 	blcc	2cf154 <_Min_Stack_Size+0x2ced54>
     918:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     91c:	0b018813 	bleq	62970 <_Min_Stack_Size+0x62570>
     920:	00000a02 	andeq	r0, r0, r2, lsl #20
     924:	3f012e1e 	svccc	0x00012e1e
     928:	3a0e030c 	bcc	381560 <_Min_Stack_Size+0x381160>
     92c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     930:	010c3c0b 	tsteq	ip, fp, lsl #24
     934:	1f000013 	svcne	0x00000013
     938:	00000018 	andeq	r0, r0, r8, lsl r0
     93c:	3f012e20 	svccc	0x00012e20
     940:	3a0e030c 	bcc	381578 <_Min_Stack_Size+0x381178>
     944:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     948:	3c0c270b 	stccc	7, cr2, [ip], {11}
     94c:	0013010c 	andseq	r0, r3, ip, lsl #2
     950:	012e2100 			@ <UNDEFINED> instruction: 0x012e2100
     954:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     958:	0b3b0b3a 	bleq	ec3648 <_Min_Stack_Size+0xec3248>
     95c:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     960:	0c3c1349 	ldceq	3, cr1, [ip], #-292	@ 0xfffffedc
     964:	00001301 	andeq	r1, r0, r1, lsl #6
     968:	3f012e22 	svccc	0x00012e22
     96c:	3a0e030c 	bcc	3815a4 <_Min_Stack_Size+0x3811a4>
     970:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     974:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
     978:	970a4001 	strls	r4, [sl, -r1]
     97c:	13010c42 	movwne	r0, #7234	@ 0x1c42
     980:	89230000 	stmdbhi	r3!, {}	@ <UNPREDICTABLE>
     984:	11000182 	smlabbne	r0, r2, r1, r0
     988:	0c429501 	cfstr64eq	mvdx9, [r2], {1}
     98c:	00001331 	andeq	r1, r0, r1, lsr r3
     990:	3f012e24 	svccc	0x00012e24
     994:	3a0e030c 	bcc	3815cc <_Min_Stack_Size+0x3811cc>
     998:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     99c:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
     9a0:	97064001 	strls	r4, [r6, -r1]
     9a4:	13010c42 	movwne	r0, #7234	@ 0x1c42
     9a8:	89250000 	stmdbhi	r5!, {}	@ <UNPREDICTABLE>
     9ac:	11000182 	smlabbne	r0, r2, r1, r0
     9b0:	00133101 	andseq	r3, r3, r1, lsl #2
     9b4:	011d2600 	tsteq	sp, r0, lsl #12
     9b8:	01521331 	cmpeq	r2, r1, lsr r3
     9bc:	110b42b8 			@ <UNDEFINED> instruction: 0x110b42b8
     9c0:	58011201 	stmdapl	r1, {r0, r9, ip}
     9c4:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     9c8:	0013010b 	andseq	r0, r3, fp, lsl #2
     9cc:	010b2700 	tsteq	fp, r0, lsl #14
     9d0:	01111331 	tsteq	r1, r1, lsr r3
     9d4:	13010112 	movwne	r0, #4370	@ 0x1112
     9d8:	34280000 	strtcc	r0, [r8], #-0
     9dc:	02133100 	andseq	r3, r3, #0, 2
     9e0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     9e4:	0b290000 	bleq	a409ec <_Min_Stack_Size+0xa405ec>
     9e8:	55133101 	ldrpl	r3, [r3, #-257]	@ 0xfffffeff
     9ec:	00130106 	andseq	r0, r3, r6, lsl #2
     9f0:	011d2a00 	tsteq	sp, r0, lsl #20
     9f4:	01521331 	cmpeq	r2, r1, lsr r3
     9f8:	550b42b8 	strpl	r4, [fp, #-696]	@ 0xfffffd48
     9fc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     a00:	010b570b 	tsteq	fp, fp, lsl #14
     a04:	2b000013 	blcs	a58 <_Min_Stack_Size+0x658>
     a08:	13310005 	teqne	r1, #5
     a0c:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     a10:	2c000006 	stccs	0, cr0, [r0], {6}
     a14:	01018289 	smlabbeq	r1, r9, r2, r8
     a18:	13310111 	teqne	r1, #1073741828	@ 0x40000004
     a1c:	8a2d0000 	bhi	b40a24 <_Min_Stack_Size+0xb40624>
     a20:	02000182 	andeq	r0, r0, #-2147483616	@ 0x80000020
     a24:	0a42910a 	beq	10a4e54 <_Min_Stack_Size+0x10a4a54>
     a28:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
     a2c:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     a30:	3b0b3a0e 	blcc	2cf270 <_Min_Stack_Size+0x2cee70>
     a34:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a38:	1113490c 	tstne	r3, ip, lsl #18
     a3c:	40011201 	andmi	r1, r1, r1, lsl #4
     a40:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     a44:	00001301 	andeq	r1, r0, r1, lsl #6
     a48:	0300052f 	movweq	r0, #1327	@ 0x52f
     a4c:	3b0b3a08 	blcc	2cf274 <_Min_Stack_Size+0x2cee74>
     a50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a54:	b7060213 	smladlt	r6, r3, r2, r0
     a58:	00000642 	andeq	r0, r0, r2, asr #12
     a5c:	03000530 	movweq	r0, #1328	@ 0x530
     a60:	3b0b3a0e 	blcc	2cf2a0 <_Min_Stack_Size+0x2ceea0>
     a64:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a68:	b7060213 	smladlt	r6, r3, r2, r0
     a6c:	00000642 	andeq	r0, r0, r2, asr #12
     a70:	01828931 	orreq	r8, r2, r1, lsr r9
     a74:	31011101 	tstcc	r1, r1, lsl #2
     a78:	00130113 	andseq	r0, r3, r3, lsl r1
     a7c:	012e3200 			@ <UNDEFINED> instruction: 0x012e3200
     a80:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     a84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     a88:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     a8c:	01120111 	tsteq	r2, r1, lsl r1
     a90:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     a94:	0013010c 	andseq	r0, r3, ip, lsl #2
     a98:	00053300 	andeq	r3, r5, r0, lsl #6
     a9c:	0b3a0e03 	bleq	e842b0 <_Min_Stack_Size+0xe83eb0>
     aa0:	0b39053b 	bleq	e41f94 <_Min_Stack_Size+0xe41b94>
     aa4:	0a021349 	beq	857d0 <_Min_Stack_Size+0x853d0>
     aa8:	26340000 	ldrtcs	r0, [r4], -r0
     aac:	35000000 	strcc	r0, [r0, #-0]
     ab0:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ a00 <_Min_Stack_Size+0x600>
     ab4:	0b3a0e03 	bleq	e842c8 <_Min_Stack_Size+0xe83ec8>
     ab8:	0b390b3b 	bleq	e437ac <_Min_Stack_Size+0xe433ac>
     abc:	01120111 	tsteq	r2, r1, lsl r1
     ac0:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     ac4:	0013010c 	andseq	r0, r3, ip, lsl #2
     ac8:	001d3600 	andseq	r3, sp, r0, lsl #12
     acc:	01521331 	cmpeq	r2, r1, lsr r3
     ad0:	110b42b8 			@ <UNDEFINED> instruction: 0x110b42b8
     ad4:	58011201 	stmdapl	r1, {r0, r9, ip}
     ad8:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     adc:	3700000b 	strcc	r0, [r0, -fp]
     ae0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ a30 <_Min_Stack_Size+0x630>
     ae4:	0b3a0e03 	bleq	e842f8 <_Min_Stack_Size+0xe83ef8>
     ae8:	0b390b3b 	bleq	e437dc <_Min_Stack_Size+0xe433dc>
     aec:	01120111 	tsteq	r2, r1, lsl r1
     af0:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     af4:	3800000c 	stmdacc	r0, {r2, r3}
     af8:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ a48 <_Min_Stack_Size+0x648>
     afc:	0b3a0e03 	bleq	e84310 <_Min_Stack_Size+0xe83f10>
     b00:	0b390b3b 	bleq	e437f4 <_Min_Stack_Size+0xe433f4>
     b04:	13490c27 	movtne	r0, #39975	@ 0x9c27
     b08:	13010b20 	movwne	r0, #6944	@ 0x1b20
     b0c:	05390000 	ldreq	r0, [r9, #-0]!
     b10:	3a080300 	bcc	201718 <_Min_Stack_Size+0x201318>
     b14:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b18:	0013490b 	andseq	r4, r3, fp, lsl #18
     b1c:	00053a00 	andeq	r3, r5, r0, lsl #20
     b20:	0b3a0e03 	bleq	e84334 <_Min_Stack_Size+0xe83f34>
     b24:	0b390b3b 	bleq	e43818 <_Min_Stack_Size+0xe43418>
     b28:	00001349 	andeq	r1, r0, r9, asr #6
     b2c:	00010b3b 	andeq	r0, r1, fp, lsr fp
     b30:	00343c00 	eorseq	r3, r4, r0, lsl #24
     b34:	0b3a0e03 	bleq	e84348 <_Min_Stack_Size+0xe83f48>
     b38:	0b390b3b 	bleq	e4382c <_Min_Stack_Size+0xe4342c>
     b3c:	00001349 	andeq	r1, r0, r9, asr #6
     b40:	3f012e3d 	svccc	0x00012e3d
     b44:	3a0e030c 	bcc	38177c <_Min_Stack_Size+0x38137c>
     b48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b4c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     b50:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
     b54:	970a4001 	strls	r4, [sl, -r1]
     b58:	13010c42 	movwne	r0, #7234	@ 0x1c42
     b5c:	053e0000 	ldreq	r0, [lr, #-0]!
     b60:	3a080300 	bcc	201768 <_Min_Stack_Size+0x201368>
     b64:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b68:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     b6c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     b70:	053f0000 	ldreq	r0, [pc, #-0]!	@ b78 <_Min_Stack_Size+0x778>
     b74:	3a0e0300 	bcc	38177c <_Min_Stack_Size+0x38137c>
     b78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b7c:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     b80:	4000000a 	andmi	r0, r0, sl
     b84:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ ad4 <_Min_Stack_Size+0x6d4>
     b88:	0b3a0e03 	bleq	e8439c <_Min_Stack_Size+0xe83f9c>
     b8c:	0b390b3b 	bleq	e43880 <_Min_Stack_Size+0xe43480>
     b90:	01120111 	tsteq	r2, r1, lsl r1
     b94:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
     b98:	0013010c 	andseq	r0, r3, ip, lsl #2
     b9c:	00344100 	eorseq	r4, r4, r0, lsl #2
     ba0:	0b3a0e03 	bleq	e843b4 <_Min_Stack_Size+0xe83fb4>
     ba4:	0b390b3b 	bleq	e43898 <_Min_Stack_Size+0xe43498>
     ba8:	06021349 	streq	r1, [r2], -r9, asr #6
     bac:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     bb0:	00054200 	andeq	r4, r5, r0, lsl #4
     bb4:	0b3a0e03 	bleq	e843c8 <_Min_Stack_Size+0xe83fc8>
     bb8:	0b390b3b 	bleq	e438ac <_Min_Stack_Size+0xe434ac>
     bbc:	06021349 	streq	r1, [r2], -r9, asr #6
     bc0:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     bc4:	012e4300 			@ <UNDEFINED> instruction: 0x012e4300
     bc8:	0b3a0e03 	bleq	e843dc <_Min_Stack_Size+0xe83fdc>
     bcc:	0b390b3b 	bleq	e438c0 <_Min_Stack_Size+0xe434c0>
     bd0:	13010b20 	movwne	r0, #6944	@ 0x1b20
     bd4:	0b440000 	bleq	1100bdc <_Min_Stack_Size+0x11007dc>
     bd8:	00130101 	andseq	r0, r3, r1, lsl #2
     bdc:	00344500 	eorseq	r4, r4, r0, lsl #10
     be0:	0b3a0803 	bleq	e82bf4 <_Min_Stack_Size+0xe827f4>
     be4:	0b390b3b 	bleq	e438d8 <_Min_Stack_Size+0xe434d8>
     be8:	00001349 	andeq	r1, r0, r9, asr #6
     bec:	03012e46 	movweq	r2, #7750	@ 0x1e46
     bf0:	3b0b3a0e 	blcc	2cf430 <_Min_Stack_Size+0x2cf030>
     bf4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     bf8:	1201110c 	andne	r1, r1, #12, 2
     bfc:	97064001 	strls	r4, [r6, -r1]
     c00:	13010c42 	movwne	r0, #7234	@ 0x1c42
     c04:	1d470000 	stclne	0, cr0, [r7, #-0]
     c08:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     c0c:	0b42b801 	bleq	10aec18 <_Min_Stack_Size+0x10ae818>
     c10:	0b580655 	bleq	160256c <_Min_Stack_Size+0x160216c>
     c14:	0b570b59 	bleq	15c3980 <_Min_Stack_Size+0x15c3580>
     c18:	0b480000 	bleq	1200c20 <_Min_Stack_Size+0x1200820>
     c1c:	00065501 	andeq	r5, r6, r1, lsl #10
     c20:	002e4900 	eoreq	r4, lr, r0, lsl #18
     c24:	0b3a0e03 	bleq	e84438 <_Min_Stack_Size+0xe84038>
     c28:	0b390b3b 	bleq	e4391c <_Min_Stack_Size+0xe4351c>
     c2c:	00000b20 	andeq	r0, r0, r0, lsr #22
     c30:	03012e4a 	movweq	r2, #7754	@ 0x1e4a
     c34:	3b0b3a0e 	blcc	2cf474 <_Min_Stack_Size+0x2cf074>
     c38:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c3c:	2013490c 	andscs	r4, r3, ip, lsl #18
     c40:	0013010b 	andseq	r0, r3, fp, lsl #2
     c44:	002e4b00 	eoreq	r4, lr, r0, lsl #22
     c48:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c4c:	0b3b0b3a 	bleq	ec393c <_Min_Stack_Size+0xec353c>
     c50:	13490b39 	movtne	r0, #39737	@ 0x9b39
     c54:	00000b20 	andeq	r0, r0, r0, lsr #22
     c58:	03012e4c 	movweq	r2, #7756	@ 0x1e4c
     c5c:	3b0b3a0e 	blcc	2cf49c <_Min_Stack_Size+0x2cf09c>
     c60:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c64:	010b200c 	tsteq	fp, ip
     c68:	4d000013 	stcmi	0, cr0, [r0, #-76]	@ 0xffffffb4
     c6c:	0e03012e 	adfeqsp	f0, f3, #0.5
     c70:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     c74:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     c78:	13010b20 	movwne	r0, #6944	@ 0x1b20
     c7c:	054e0000 	strbeq	r0, [lr, #-0]
     c80:	3a0e0300 	bcc	381888 <_Min_Stack_Size+0x381488>
     c84:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c88:	0013490b 	andseq	r4, r3, fp, lsl #18
     c8c:	012e4f00 			@ <UNDEFINED> instruction: 0x012e4f00
     c90:	01111331 	tsteq	r1, r1, lsr r3
     c94:	0a400112 	beq	10010e4 <_Min_Stack_Size+0x1000ce4>
     c98:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     c9c:	50000013 	andpl	r0, r0, r3, lsl r0
     ca0:	13310005 	teqne	r1, #5
     ca4:	00000a02 	andeq	r0, r0, r2, lsl #20
     ca8:	31012e51 	tstcc	r1, r1, asr lr
     cac:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
     cb0:	97064001 	strls	r4, [r6, -r1]
     cb4:	00000c42 	andeq	r0, r0, r2, asr #24
     cb8:	31011d52 	tstcc	r1, r2, asr sp
     cbc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     cc0:	01110b42 	tsteq	r1, r2, asr #22
     cc4:	0b580112 	bleq	1601114 <_Min_Stack_Size+0x1600d14>
     cc8:	0b570b59 	bleq	15c3a34 <_Min_Stack_Size+0x15c3634>
     ccc:	00001301 	andeq	r1, r0, r1, lsl #6
     cd0:	31010b53 	tstcc	r1, r3, asr fp
     cd4:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
     cd8:	54000001 	strpl	r0, [r0], #-1
     cdc:	13310034 	teqne	r1, #52	@ 0x34
     ce0:	01000000 	mrseq	r0, (UNDEF: 0)
     ce4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     ce8:	0e030b13 	vmoveq.32	d3[0], r0
     cec:	01110e1b 	tsteq	r1, fp, lsl lr
     cf0:	06100112 			@ <UNDEFINED> instruction: 0x06100112
     cf4:	24020000 	strcs	r0, [r2], #-0
     cf8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     cfc:	000e030b 	andeq	r0, lr, fp, lsl #6
     d00:	00160300 	andseq	r0, r6, r0, lsl #6
     d04:	0b3a0e03 	bleq	e84518 <_Min_Stack_Size+0xe84118>
     d08:	0b390b3b 	bleq	e439fc <_Min_Stack_Size+0xe435fc>
     d0c:	00001349 	andeq	r1, r0, r9, asr #6
     d10:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     d14:	05000013 	streq	r0, [r0, #-19]	@ 0xffffffed
     d18:	13490026 	movtne	r0, #36902	@ 0x9026
     d1c:	24060000 	strcs	r0, [r6], #-0
     d20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     d24:	0008030b 	andeq	r0, r8, fp, lsl #6
     d28:	000f0700 	andeq	r0, pc, r0, lsl #14
     d2c:	13490b0b 	movtne	r0, #39691	@ 0x9b0b
     d30:	15080000 	strne	r0, [r8, #-0]
     d34:	010c2701 	tsteq	ip, r1, lsl #14
     d38:	09000013 	stmdbeq	r0, {r0, r1, r4}
     d3c:	13490005 	movtne	r0, #36869	@ 0x9005
     d40:	130a0000 	movwne	r0, #40960	@ 0xa000
     d44:	3a0b0b01 	bcc	2c3950 <_Min_Stack_Size+0x2c3550>
     d48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d4c:	0013010b 	andseq	r0, r3, fp, lsl #2
     d50:	000d0b00 	andeq	r0, sp, r0, lsl #22
     d54:	0b3a0e03 	bleq	e84568 <_Min_Stack_Size+0xe84168>
     d58:	0b390b3b 	bleq	e43a4c <_Min_Stack_Size+0xe4364c>
     d5c:	0a381349 	beq	e05a88 <_Min_Stack_Size+0xe05688>
     d60:	040c0000 	streq	r0, [ip], #-0
     d64:	0b0b3e01 	bleq	2d0570 <_Min_Stack_Size+0x2d0170>
     d68:	3a13490b 	bcc	4d319c <_Min_Stack_Size+0x4d2d9c>
     d6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d70:	0013010b 	andseq	r0, r3, fp, lsl #2
     d74:	00280d00 	eoreq	r0, r8, r0, lsl #26
     d78:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     d7c:	280e0000 	stmdacs	lr, {}	@ <UNPREDICTABLE>
     d80:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     d84:	0f00000b 	svceq	0x0000000b
     d88:	050b0113 	streq	r0, [fp, #-275]	@ 0xfffffeed
     d8c:	0b3b0b3a 	bleq	ec3a7c <_Min_Stack_Size+0xec367c>
     d90:	13010b39 	movwne	r0, #6969	@ 0x1b39
     d94:	0d100000 	ldceq	0, cr0, [r0, #-0]
     d98:	3a080300 	bcc	2019a0 <_Min_Stack_Size+0x2015a0>
     d9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     da0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     da4:	1100000a 	tstne	r0, sl
     da8:	13490101 	movtne	r0, #37121	@ 0x9101
     dac:	00001301 	andeq	r1, r0, r1, lsl #6
     db0:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
     db4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     db8:	00211300 	eoreq	r1, r1, r0, lsl #6
     dbc:	052f1349 	streq	r1, [pc, #-841]!	@ a7b <_Min_Stack_Size+0x67b>
     dc0:	13140000 	tstne	r4, #0
     dc4:	3a0b0b01 	bcc	2c39d0 <_Min_Stack_Size+0x2c35d0>
     dc8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     dcc:	0013010b 	andseq	r0, r3, fp, lsl #2
     dd0:	000d1500 	andeq	r1, sp, r0, lsl #10
     dd4:	0b3a0e03 	bleq	e845e8 <_Min_Stack_Size+0xe841e8>
     dd8:	0b39053b 	bleq	e422cc <_Min_Stack_Size+0xe41ecc>
     ddc:	0a381349 	beq	e05b08 <_Min_Stack_Size+0xe05708>
     de0:	0d160000 	ldceq	0, cr0, [r6, #-0]
     de4:	3a080300 	bcc	2019ec <_Min_Stack_Size+0x2015ec>
     de8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     dec:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     df0:	1700000a 	strne	r0, [r0, -sl]
     df4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     df8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     dfc:	13490b39 	movtne	r0, #39737	@ 0x9b39
     e00:	34180000 	ldrcc	r0, [r8], #-0
     e04:	3a0e0300 	bcc	381a0c <_Min_Stack_Size+0x38160c>
     e08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e0c:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     e10:	1900000a 	stmdbne	r0, {r1, r3}
     e14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e18:	0b3b0b3a 	bleq	ec3b08 <_Min_Stack_Size+0xec3708>
     e1c:	13490b39 	movtne	r0, #39737	@ 0x9b39
     e20:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	@ 0xffffff04
     e24:	131a0000 	tstne	sl, #0
     e28:	0b0e0301 	bleq	381a34 <_Min_Stack_Size+0x381634>
     e2c:	3b0b3a0b 	blcc	2cf660 <_Min_Stack_Size+0x2cf260>
     e30:	010b390b 	tsteq	fp, fp, lsl #18
     e34:	1b000013 	blne	e88 <_Min_Stack_Size+0xa88>
     e38:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e3c:	0b3b0b3a 	bleq	ec3b2c <_Min_Stack_Size+0xec372c>
     e40:	13490b39 	movtne	r0, #39737	@ 0x9b39
     e44:	0a020c3f 	beq	83f48 <_Min_Stack_Size+0x83b48>
     e48:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     e4c:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     e50:	3b0b3a0e 	blcc	2cf690 <_Min_Stack_Size+0x2cf290>
     e54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     e58:	010c3c0c 	tsteq	ip, ip, lsl #24
     e5c:	1d000013 	stcne	0, cr0, [r0, #-76]	@ 0xffffffb4
     e60:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ db0 <_Min_Stack_Size+0x9b0>
     e64:	0b3a0e03 	bleq	e84678 <_Min_Stack_Size+0xe84278>
     e68:	0b390b3b 	bleq	e43b5c <_Min_Stack_Size+0xe4375c>
     e6c:	13490c27 	movtne	r0, #39975	@ 0x9c27
     e70:	13010c3c 	movwne	r0, #7228	@ 0x1c3c
     e74:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
     e78:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     e7c:	3b0b3a0e 	blcc	2cf6bc <_Min_Stack_Size+0x2cf2bc>
     e80:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     e84:	1201110c 	andne	r1, r1, #12, 2
     e88:	97064001 	strls	r4, [r6, -r1]
     e8c:	13010c42 	movwne	r0, #7234	@ 0x1c42
     e90:	051f0000 	ldreq	r0, [pc, #-0]	@ e98 <_Min_Stack_Size+0xa98>
     e94:	3a080300 	bcc	201a9c <_Min_Stack_Size+0x20169c>
     e98:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e9c:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     ea0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     ea4:	05200000 	streq	r0, [r0, #-0]!
     ea8:	3a0e0300 	bcc	381ab0 <_Min_Stack_Size+0x3816b0>
     eac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     eb0:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     eb4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     eb8:	34210000 	strtcc	r0, [r1], #-0
     ebc:	3a080300 	bcc	201ac4 <_Min_Stack_Size+0x2016c4>
     ec0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ec4:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     ec8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     ecc:	0b220000 	bleq	880ed4 <_Min_Stack_Size+0x880ad4>
     ed0:	00065501 	andeq	r5, r6, r1, lsl #10
     ed4:	00342300 	eorseq	r2, r4, r0, lsl #6
     ed8:	0b3a0803 	bleq	e82eec <_Min_Stack_Size+0xe82aec>
     edc:	0b390b3b 	bleq	e43bd0 <_Min_Stack_Size+0xe437d0>
     ee0:	00001349 	andeq	r1, r0, r9, asr #6
     ee4:	3f012e24 	svccc	0x00012e24
     ee8:	3a0e030c 	bcc	381b20 <_Min_Stack_Size+0x381720>
     eec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ef0:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
     ef4:	97064001 	strls	r4, [r6, -r1]
     ef8:	13010c42 	movwne	r0, #7234	@ 0x1c42
     efc:	34250000 	strtcc	r0, [r5], #-0
     f00:	3a080300 	bcc	201b08 <_Min_Stack_Size+0x201708>
     f04:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f08:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
     f0c:	0a020b01 	beq	83b18 <_Min_Stack_Size+0x83718>
     f10:	34260000 	strtcc	r0, [r6], #-0
     f14:	3a0e0300 	bcc	381b1c <_Min_Stack_Size+0x38171c>
     f18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f1c:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
     f20:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     f24:	1d270000 	stcne	0, cr0, [r7, #-0]
     f28:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     f2c:	0b42b801 	bleq	10aef38 <_Min_Stack_Size+0x10aeb38>
     f30:	01120111 	tsteq	r2, r1, lsl r1
     f34:	0b590b58 	bleq	1643c9c <_Min_Stack_Size+0x164389c>
     f38:	13010b57 	movwne	r0, #6999	@ 0x1b57
     f3c:	05280000 	streq	r0, [r8, #-0]!
     f40:	02133100 	andseq	r3, r3, #0, 2
     f44:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     f48:	1d290000 	stcne	0, cr0, [r9, #-0]
     f4c:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     f50:	0b42b801 	bleq	10aef5c <_Min_Stack_Size+0x10aeb5c>
     f54:	0b580655 	bleq	16028b0 <_Min_Stack_Size+0x16024b0>
     f58:	0b570b59 	bleq	15c3cc4 <_Min_Stack_Size+0x15c38c4>
     f5c:	00001301 	andeq	r1, r0, r1, lsl #6
     f60:	0182892a 	orreq	r8, r2, sl, lsr #18
     f64:	31011100 	mrscc	r1, (UNDEF: 17)
     f68:	2b000013 	blcs	fbc <_Min_Stack_Size+0xbbc>
     f6c:	13310034 	teqne	r1, #52	@ 0x34
     f70:	00000a02 	andeq	r0, r0, r2, lsl #20
     f74:	3100342c 	tstcc	r0, ip, lsr #8
     f78:	b7060213 	smladlt	r6, r3, r2, r0
     f7c:	00000642 	andeq	r0, r0, r2, asr #12
     f80:	0182892d 	orreq	r8, r2, sp, lsr #18
     f84:	31011101 	tstcc	r1, r1, lsl #2
     f88:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     f8c:	0001828a 	andeq	r8, r1, sl, lsl #5
     f90:	42910a02 	addsmi	r0, r1, #8192	@ 0x2000
     f94:	2f00000a 	svccs	0x0000000a
     f98:	1331001d 	teqne	r1, #29
     f9c:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
     fa0:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     fa4:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     fa8:	3000000b 	andcc	r0, r0, fp
     fac:	01018289 	smlabbeq	r1, r9, r2, r8
     fb0:	13310111 	teqne	r1, #1073741828	@ 0x40000004
     fb4:	00001301 	andeq	r1, r0, r1, lsl #6
     fb8:	31001d31 	tstcc	r0, r1, lsr sp
     fbc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     fc0:	01110b42 	tsteq	r1, r2, asr #22
     fc4:	0b580112 	bleq	1601414 <_Min_Stack_Size+0x1601014>
     fc8:	0b570b59 	bleq	15c3d34 <_Min_Stack_Size+0x15c3934>
     fcc:	0b320000 	bleq	c80fd4 <_Min_Stack_Size+0xc80bd4>
     fd0:	01065501 	tsteq	r6, r1, lsl #10
     fd4:	33000013 	movwcc	r0, #19
     fd8:	0111010b 	tsteq	r1, fp, lsl #2
     fdc:	13010112 	movwne	r0, #4370	@ 0x1112
     fe0:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
     fe4:	3a0e0301 	bcc	381bf0 <_Min_Stack_Size+0x3817f0>
     fe8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fec:	200c270b 	andcs	r2, ip, fp, lsl #14
     ff0:	0013010b 	andseq	r0, r3, fp, lsl #2
     ff4:	00053500 	andeq	r3, r5, r0, lsl #10
     ff8:	0b3a0e03 	bleq	e8480c <_Min_Stack_Size+0xe8440c>
     ffc:	0b390b3b 	bleq	e43cf0 <_Min_Stack_Size+0xe438f0>
    1000:	00001349 	andeq	r1, r0, r9, asr #6
    1004:	03003436 	movweq	r3, #1078	@ 0x436
    1008:	3b0b3a0e 	blcc	2cf848 <_Min_Stack_Size+0x2cf448>
    100c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1010:	37000013 	smladcc	r0, r3, r0, r0
    1014:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ f64 <_Min_Stack_Size+0xb64>
    1018:	0b3a0e03 	bleq	e8482c <_Min_Stack_Size+0xe8442c>
    101c:	0b390b3b 	bleq	e43d10 <_Min_Stack_Size+0xe43910>
    1020:	13490c27 	movtne	r0, #39975	@ 0x9c27
    1024:	01120111 	tsteq	r2, r1, lsl r1
    1028:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
    102c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1030:	00343800 	eorseq	r3, r4, r0, lsl #16
    1034:	0b3a0803 	bleq	e83048 <_Min_Stack_Size+0xe82c48>
    1038:	0b390b3b 	bleq	e43d2c <_Min_Stack_Size+0xe4392c>
    103c:	0a021349 	beq	85d68 <_Min_Stack_Size+0x85968>
    1040:	1d390000 	ldcne	0, cr0, [r9, #-0]
    1044:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
    1048:	0b42b801 	bleq	10af054 <_Min_Stack_Size+0x10aec54>
    104c:	01120111 	tsteq	r2, r1, lsl r1
    1050:	0b590b58 	bleq	1643db8 <_Min_Stack_Size+0x16439b8>
    1054:	00000b57 	andeq	r0, r0, r7, asr fp
    1058:	3f012e3a 	svccc	0x00012e3a
    105c:	3a0e030c 	bcc	381c94 <_Min_Stack_Size+0x381894>
    1060:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1064:	200c270b 	andcs	r2, ip, fp, lsl #14
    1068:	0013010b 	andseq	r0, r3, fp, lsl #2
    106c:	00053b00 	andeq	r3, r5, r0, lsl #22
    1070:	0b3a0803 	bleq	e83084 <_Min_Stack_Size+0xe82c84>
    1074:	0b390b3b 	bleq	e43d68 <_Min_Stack_Size+0xe43968>
    1078:	00001349 	andeq	r1, r0, r9, asr #6
    107c:	3f012e3c 	svccc	0x00012e3c
    1080:	3a0e030c 	bcc	381cb8 <_Min_Stack_Size+0x3818b8>
    1084:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1088:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    108c:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
    1090:	970a4001 	strls	r4, [sl, -r1]
    1094:	13010c42 	movwne	r0, #7234	@ 0x1c42
    1098:	053d0000 	ldreq	r0, [sp, #-0]!
    109c:	3a0e0300 	bcc	381ca4 <_Min_Stack_Size+0x3818a4>
    10a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a4:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
    10a8:	3e00000a 	cdpcc	0, 0, cr0, cr0, cr10, {0}
    10ac:	0b0b000f 	bleq	2c10f0 <_Min_Stack_Size+0x2c0cf0>
    10b0:	2e3f0000 	cdpcs	0, 3, cr0, cr15, cr0, {0}
    10b4:	030c3f00 	movweq	r3, #52992	@ 0xcf00
    10b8:	3b0b3a0e 	blcc	2cf8f8 <_Min_Stack_Size+0x2cf4f8>
    10bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    10c0:	000b2013 	andeq	r2, fp, r3, lsl r0
    10c4:	82894000 	addhi	r4, r9, #0
    10c8:	01110101 	tsteq	r1, r1, lsl #2
    10cc:	310c4295 			@ <UNDEFINED> instruction: 0x310c4295
    10d0:	41000013 	tstmi	r0, r3, lsl r0
    10d4:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 1024 <_Min_Stack_Size+0xc24>
    10d8:	0b3a0e03 	bleq	e848ec <_Min_Stack_Size+0xe844ec>
    10dc:	0b390b3b 	bleq	e43dd0 <_Min_Stack_Size+0xe439d0>
    10e0:	13490c27 	movtne	r0, #39975	@ 0x9c27
    10e4:	13010b20 	movwne	r0, #6944	@ 0x1b20
    10e8:	2e420000 	cdpcs	0, 4, cr0, cr2, cr0, {0}
    10ec:	3a0e0301 	bcc	381cf8 <_Min_Stack_Size+0x3818f8>
    10f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10f4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    10f8:	010b2013 	tsteq	fp, r3, lsl r0
    10fc:	43000013 	movwmi	r0, #19
    1100:	0e03012e 	adfeqsp	f0, f3, #0.5
    1104:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
    1108:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
    110c:	13010b20 	movwne	r0, #6944	@ 0x1b20
    1110:	05440000 	strbeq	r0, [r4, #-0]
    1114:	3a0e0300 	bcc	381d1c <_Min_Stack_Size+0x38191c>
    1118:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    111c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1120:	012e4500 			@ <UNDEFINED> instruction: 0x012e4500
    1124:	01111331 	tsteq	r1, r1, lsr r3
    1128:	0a400112 	beq	1001578 <_Min_Stack_Size+0x1001178>
    112c:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
    1130:	46000013 			@ <UNDEFINED> instruction: 0x46000013
    1134:	13310005 	teqne	r1, #5
    1138:	00000a02 	andeq	r0, r0, r2, lsl #20
    113c:	31012e47 	tstcc	r1, r7, asr #28
    1140:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
    1144:	970a4001 	strls	r4, [sl, -r1]
    1148:	00000c42 	andeq	r0, r0, r2, asr #24
    114c:	31011d48 	tstcc	r1, r8, asr #26
    1150:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1154:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    1158:	0b590b58 	bleq	1643ec0 <_Min_Stack_Size+0x1643ac0>
    115c:	00000b57 	andeq	r0, r0, r7, asr fp
    1160:	01110100 	tsteq	r1, r0, lsl #2
    1164:	0b130e25 	bleq	4c4a00 <_Min_Stack_Size+0x4c4600>
    1168:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    116c:	01120111 	tsteq	r2, r1, lsl r1
    1170:	00000610 	andeq	r0, r0, r0, lsl r6
    1174:	0b002402 	bleq	a184 <_Min_Stack_Size+0x9d84>
    1178:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
    117c:	0300000e 	movweq	r0, #14
    1180:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1184:	0b3b0b3a 	bleq	ec3e74 <_Min_Stack_Size+0xec3a74>
    1188:	13490b39 	movtne	r0, #39737	@ 0x9b39
    118c:	35040000 	strcc	r0, [r4, #-0]
    1190:	00134900 	andseq	r4, r3, r0, lsl #18
    1194:	00260500 	eoreq	r0, r6, r0, lsl #10
    1198:	00001349 	andeq	r1, r0, r9, asr #6
    119c:	0b002406 	bleq	a1bc <_Min_Stack_Size+0x9dbc>
    11a0:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
    11a4:	07000008 	streq	r0, [r0, -r8]
    11a8:	0b0b000f 	bleq	2c11ec <_Min_Stack_Size+0x2c0dec>
    11ac:	00001349 	andeq	r1, r0, r9, asr #6
    11b0:	27011508 	strcs	r1, [r1, -r8, lsl #10]
    11b4:	0013010c 	andseq	r0, r3, ip, lsl #2
    11b8:	00050900 	andeq	r0, r5, r0, lsl #18
    11bc:	00001349 	andeq	r1, r0, r9, asr #6
    11c0:	0b01130a 	bleq	45df0 <_Min_Stack_Size+0x459f0>
    11c4:	3b0b3a0b 	blcc	2cf9f8 <_Min_Stack_Size+0x2cf5f8>
    11c8:	010b390b 	tsteq	fp, fp, lsl #18
    11cc:	0b000013 	bleq	1220 <_Min_Stack_Size+0xe20>
    11d0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    11d4:	0b3b0b3a 	bleq	ec3ec4 <_Min_Stack_Size+0xec3ac4>
    11d8:	13490b39 	movtne	r0, #39737	@ 0x9b39
    11dc:	00000a38 	andeq	r0, r0, r8, lsr sl
    11e0:	0b01130c 	bleq	45e18 <_Min_Stack_Size+0x45a18>
    11e4:	3b0b3a0b 	blcc	2cfa18 <_Min_Stack_Size+0x2cf618>
    11e8:	010b3905 	tsteq	fp, r5, lsl #18
    11ec:	0d000013 	stceq	0, cr0, [r0, #-76]	@ 0xffffffb4
    11f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    11f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
    11f8:	13490b39 	movtne	r0, #39737	@ 0x9b39
    11fc:	00000a38 	andeq	r0, r0, r8, lsr sl
    1200:	03000d0e 	movweq	r0, #3342	@ 0xd0e
    1204:	3b0b3a08 	blcc	2cfa2c <_Min_Stack_Size+0x2cf62c>
    1208:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    120c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1210:	01010f00 	tsteq	r1, r0, lsl #30
    1214:	13011349 	movwne	r1, #4937	@ 0x1349
    1218:	21100000 	tstcs	r0, r0
    121c:	2f134900 	svccs	0x00134900
    1220:	1100000b 	tstne	r0, fp
    1224:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1228:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
    122c:	13490b39 	movtne	r0, #39737	@ 0x9b39
    1230:	13120000 	tstne	r2, #0
    1234:	3a050b01 	bcc	143e40 <_Min_Stack_Size+0x143a40>
    1238:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    123c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1240:	000d1300 	andeq	r1, sp, r0, lsl #6
    1244:	0b3a0803 	bleq	e83258 <_Min_Stack_Size+0xe82e58>
    1248:	0b390b3b 	bleq	e43f3c <_Min_Stack_Size+0xe43b3c>
    124c:	0a381349 	beq	e05f78 <_Min_Stack_Size+0xe05b78>
    1250:	21140000 	tstcs	r4, r0
    1254:	2f134900 	svccs	0x00134900
    1258:	15000005 	strne	r0, [r0, #-5]
    125c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1260:	0b3b0b3a 	bleq	ec3f50 <_Min_Stack_Size+0xec3b50>
    1264:	13490b39 	movtne	r0, #39737	@ 0x9b39
    1268:	0a020c3f 	beq	8436c <_Min_Stack_Size+0x83f6c>
    126c:	13160000 	tstne	r6, #0
    1270:	0b0e0301 	bleq	381e7c <_Min_Stack_Size+0x381a7c>
    1274:	3b0b3a0b 	blcc	2cfaa8 <_Min_Stack_Size+0x2cf6a8>
    1278:	010b390b 	tsteq	fp, fp, lsl #18
    127c:	17000013 	smladne	r0, r3, r0, r0
    1280:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 11d0 <_Min_Stack_Size+0xdd0>
    1284:	0b3a0e03 	bleq	e84a98 <_Min_Stack_Size+0xe84698>
    1288:	0b390b3b 	bleq	e43f7c <_Min_Stack_Size+0xe43b7c>
    128c:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	@ 0xffffff64
    1290:	00001301 	andeq	r1, r0, r1, lsl #6
    1294:	3f012e18 	svccc	0x00012e18
    1298:	3a0e030c 	bcc	381ed0 <_Min_Stack_Size+0x381ad0>
    129c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12a0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    12a4:	010c3c13 	tsteq	ip, r3, lsl ip
    12a8:	19000013 	stmdbne	r0, {r0, r1, r4}
    12ac:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 11fc <_Min_Stack_Size+0xdfc>
    12b0:	0b3a0e03 	bleq	e84ac4 <_Min_Stack_Size+0xe846c4>
    12b4:	0b390b3b 	bleq	e43fa8 <_Min_Stack_Size+0xe43ba8>
    12b8:	01120111 	tsteq	r2, r1, lsl r1
    12bc:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
    12c0:	0013010c 	andseq	r0, r3, ip, lsl #2
    12c4:	00341a00 	eorseq	r1, r4, r0, lsl #20
    12c8:	0b3a0e03 	bleq	e84adc <_Min_Stack_Size+0xe846dc>
    12cc:	0b390b3b 	bleq	e43fc0 <_Min_Stack_Size+0xe43bc0>
    12d0:	06021349 	streq	r1, [r2], -r9, asr #6
    12d4:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
    12d8:	00341b00 	eorseq	r1, r4, r0, lsl #22
    12dc:	0b3a0803 	bleq	e832f0 <_Min_Stack_Size+0xe82ef0>
    12e0:	0b390b3b 	bleq	e43fd4 <_Min_Stack_Size+0xe43bd4>
    12e4:	01881349 	orreq	r1, r8, r9, asr #6
    12e8:	000a020b 	andeq	r0, sl, fp, lsl #4
    12ec:	011d1c00 	tsteq	sp, r0, lsl #24
    12f0:	01521331 	cmpeq	r2, r1, lsr r3
    12f4:	110b42b8 			@ <UNDEFINED> instruction: 0x110b42b8
    12f8:	58011201 	stmdapl	r1, {r0, r9, ip}
    12fc:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1300:	0013010b 	andseq	r0, r3, fp, lsl #2
    1304:	00051d00 	andeq	r1, r5, r0, lsl #26
    1308:	06021331 			@ <UNDEFINED> instruction: 0x06021331
    130c:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
    1310:	82891e00 	addhi	r1, r9, #0, 28
    1314:	01110101 	tsteq	r1, r1, lsl #2
    1318:	00001331 	andeq	r1, r0, r1, lsr r3
    131c:	01828a1f 	orreq	r8, r2, pc, lsl sl
    1320:	910a0200 	mrsls	r0, R10_fiq
    1324:	00000a42 	andeq	r0, r0, r2, asr #20
    1328:	3f012e20 	svccc	0x00012e20
    132c:	3a0e030c 	bcc	381f64 <_Min_Stack_Size+0x381b64>
    1330:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1334:	110c270b 	tstne	ip, fp, lsl #14
    1338:	40011201 	andmi	r1, r1, r1, lsl #4
    133c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1340:	00001301 	andeq	r1, r0, r1, lsl #6
    1344:	03000521 	movweq	r0, #1313	@ 0x521
    1348:	3b0b3a0e 	blcc	2cfb88 <_Min_Stack_Size+0x2cf788>
    134c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1350:	b7060213 	smladlt	r6, r3, r2, r0
    1354:	00000642 	andeq	r0, r0, r2, asr #12
    1358:	03000522 	movweq	r0, #1314	@ 0x522
    135c:	3b0b3a08 	blcc	2cfb84 <_Min_Stack_Size+0x2cf784>
    1360:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1364:	b7060213 	smladlt	r6, r3, r2, r0
    1368:	00000642 	andeq	r0, r0, r2, asr #12
    136c:	03003423 	movweq	r3, #1059	@ 0x423
    1370:	3b0b3a0e 	blcc	2cfbb0 <_Min_Stack_Size+0x2cf7b0>
    1374:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1378:	000a0213 	andeq	r0, sl, r3, lsl r2
    137c:	00342400 	eorseq	r2, r4, r0, lsl #8
    1380:	0b3a0803 	bleq	e83394 <_Min_Stack_Size+0xe82f94>
    1384:	0b390b3b 	bleq	e44078 <_Min_Stack_Size+0xe43c78>
    1388:	06021349 	streq	r1, [r2], -r9, asr #6
    138c:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
    1390:	82892500 	addhi	r2, r9, #0, 10
    1394:	01110001 	tsteq	r1, r1
    1398:	00001331 	andeq	r1, r0, r1, lsr r3
    139c:	01828926 	orreq	r8, r2, r6, lsr #18
    13a0:	31011101 	tstcc	r1, r1, lsl #2
    13a4:	00130113 	andseq	r0, r3, r3, lsl r1
    13a8:	82892700 	addhi	r2, r9, #0, 14
    13ac:	01110001 	tsteq	r1, r1
    13b0:	310c4295 			@ <UNDEFINED> instruction: 0x310c4295
    13b4:	28000013 	stmdacs	r0, {r0, r1, r4}
    13b8:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 1308 <_Min_Stack_Size+0xf08>
    13bc:	0b3a0e03 	bleq	e84bd0 <_Min_Stack_Size+0xe847d0>
    13c0:	0b390b3b 	bleq	e440b4 <_Min_Stack_Size+0xe43cb4>
    13c4:	0b200c27 	bleq	804468 <_Min_Stack_Size+0x804068>
    13c8:	00001301 	andeq	r1, r0, r1, lsl #6
    13cc:	03000529 	movweq	r0, #1321	@ 0x529
    13d0:	3b0b3a0e 	blcc	2cfc10 <_Min_Stack_Size+0x2cf810>
    13d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13d8:	2a000013 	bcs	142c <_Min_Stack_Size+0x102c>
    13dc:	01018289 	smlabbeq	r1, r9, r2, r8
    13e0:	42950111 	addsmi	r0, r5, #1073741828	@ 0x40000004
    13e4:	0013310c 	andseq	r3, r3, ip, lsl #2
    13e8:	012e2b00 			@ <UNDEFINED> instruction: 0x012e2b00
    13ec:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    13f0:	0b3b0b3a 	bleq	ec40e0 <_Min_Stack_Size+0xec3ce0>
    13f4:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
    13f8:	01111349 	tsteq	r1, r9, asr #6
    13fc:	06400112 			@ <UNDEFINED> instruction: 0x06400112
    1400:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
    1404:	2c000013 	stccs	0, cr0, [r0], {19}
    1408:	1331011d 	teqne	r1, #1073741831	@ 0x40000007
    140c:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
    1410:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
    1414:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1418:	000b570b 	andeq	r5, fp, fp, lsl #14
    141c:	012e2d00 			@ <UNDEFINED> instruction: 0x012e2d00
    1420:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1424:	0b3b0b3a 	bleq	ec4114 <_Min_Stack_Size+0xec3d14>
    1428:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
    142c:	01111349 	tsteq	r1, r9, asr #6
    1430:	0a400112 	beq	1001880 <_Min_Stack_Size+0x1001480>
    1434:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
    1438:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    143c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1440:	0b3b0b3a 	bleq	ec4130 <_Min_Stack_Size+0xec3d30>
    1444:	13490b39 	movtne	r0, #39737	@ 0x9b39
    1448:	00000a02 	andeq	r0, r0, r2, lsl #20
    144c:	0b000f2f 	bleq	5110 <_Min_Stack_Size+0x4d10>
    1450:	3000000b 	andcc	r0, r0, fp
    1454:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ 13a4 <_Min_Stack_Size+0xfa4>
    1458:	0b3a0e03 	bleq	e84c6c <_Min_Stack_Size+0xe8486c>
    145c:	0b390b3b 	bleq	e44150 <_Min_Stack_Size+0xe43d50>
    1460:	01111349 	tsteq	r1, r9, asr #6
    1464:	0a400112 	beq	10018b4 <_Min_Stack_Size+0x10014b4>
    1468:	000c4297 	muleq	ip, r7, r2
    146c:	012e3100 			@ <UNDEFINED> instruction: 0x012e3100
    1470:	0b3a0e03 	bleq	e84c84 <_Min_Stack_Size+0xe84884>
    1474:	0b390b3b 	bleq	e44168 <_Min_Stack_Size+0xe43d68>
    1478:	13490c27 	movtne	r0, #39975	@ 0x9c27
    147c:	13010b20 	movwne	r0, #6944	@ 0x1b20
    1480:	05320000 	ldreq	r0, [r2, #-0]!
    1484:	3a080300 	bcc	20208c <_Min_Stack_Size+0x201c8c>
    1488:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    148c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1490:	012e3300 			@ <UNDEFINED> instruction: 0x012e3300
    1494:	0b3a0e03 	bleq	e84ca8 <_Min_Stack_Size+0xe848a8>
    1498:	0b390b3b 	bleq	e4418c <_Min_Stack_Size+0xe43d8c>
    149c:	0b200c27 	bleq	804540 <_Min_Stack_Size+0x804140>
    14a0:	00001301 	andeq	r1, r0, r1, lsl #6
    14a4:	31012e34 	tstcc	r1, r4, lsr lr
    14a8:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
    14ac:	970a4001 	strls	r4, [sl, -r1]
    14b0:	00000c42 	andeq	r0, r0, r2, asr #24
    14b4:	31011d35 	tstcc	r1, r5, lsr sp
    14b8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    14bc:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    14c0:	0b590b58 	bleq	1644228 <_Min_Stack_Size+0x1643e28>
    14c4:	13010b57 	movwne	r0, #6999	@ 0x1b57
    14c8:	01000000 	mrseq	r0, (UNDEF: 0)
    14cc:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    14d0:	0e030b13 	vmoveq.32	d3[0], r0
    14d4:	01110e1b 	tsteq	r1, fp, lsl lr
    14d8:	17100612 			@ <UNDEFINED> instruction: 0x17100612
    14dc:	24020000 	strcs	r0, [r2], #-0
    14e0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    14e4:	000e030b 	andeq	r0, lr, fp, lsl #6
    14e8:	00240300 	eoreq	r0, r4, r0, lsl #6
    14ec:	0b3e0b0b 	bleq	f84120 <_Min_Stack_Size+0xf83d20>
    14f0:	00000803 	andeq	r0, r0, r3, lsl #16
    14f4:	03001604 	movweq	r1, #1540	@ 0x604
    14f8:	3b0b3a0e 	blcc	2cfd38 <_Min_Stack_Size+0x2cf938>
    14fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1500:	05000013 	streq	r0, [r0, #-19]	@ 0xffffffed
    1504:	13490101 	movtne	r0, #37121	@ 0x9101
    1508:	00001301 	andeq	r1, r0, r1, lsl #6
    150c:	00002106 	andeq	r2, r0, r6, lsl #2
    1510:	000f0700 	andeq	r0, pc, r0, lsl #14
    1514:	13490b0b 	movtne	r0, #39691	@ 0x9b0b
    1518:	15080000 	strne	r0, [r8, #-0]
    151c:	00192700 	andseq	r2, r9, r0, lsl #14
    1520:	00340900 	eorseq	r0, r4, r0, lsl #18
    1524:	0b3a0e03 	bleq	e84d38 <_Min_Stack_Size+0xe84938>
    1528:	0b390b3b 	bleq	e4421c <_Min_Stack_Size+0xe43e1c>
    152c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	@ <UNPREDICTABLE>
    1530:	0000193c 	andeq	r1, r0, ip, lsr r9
    1534:	3f012e0a 	svccc	0x00012e0a
    1538:	3a0e0319 	bcc	3821a4 <_Min_Stack_Size+0x381da4>
    153c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1540:	1119270b 	tstne	r9, fp, lsl #14
    1544:	40061201 	andmi	r1, r6, r1, lsl #4
    1548:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    154c:	00001301 	andeq	r1, r0, r1, lsl #6
    1550:	0300340b 	movweq	r3, #1035	@ 0x40b
    1554:	3b0b3a0e 	blcc	2cfd94 <_Min_Stack_Size+0x2cf994>
    1558:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    155c:	b7170213 			@ <UNDEFINED> instruction: 0xb7170213
    1560:	00001742 	andeq	r1, r0, r2, asr #14
    1564:	0300340c 	movweq	r3, #1036	@ 0x40c
    1568:	3b0b3a08 	blcc	2cfd90 <_Min_Stack_Size+0x2cf990>
    156c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1570:	b7170213 			@ <UNDEFINED> instruction: 0xb7170213
    1574:	00001742 	andeq	r1, r0, r2, asr #14
    1578:	0182890d 	orreq	r8, r2, sp, lsl #18
    157c:	31011100 	mrscc	r1, (UNDEF: 17)
    1580:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1584:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	@ <UNPREDICTABLE>
    1588:	0e6e193c 			@ <UNDEFINED> instruction: 0x0e6e193c
    158c:	0b3a0e03 	bleq	e84da0 <_Min_Stack_Size+0xe849a0>
    1590:	0b390b3b 	bleq	e44284 <_Min_Stack_Size+0xe43e84>
    1594:	Address 0x1594 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
       4:	08001706 	stmdaeq	r0, {r1, r2, r8, r9, sl, ip}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	08001706 	stmdaeq	r0, {r1, r2, r8, r9, sl, ip}
      10:	080017c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, ip}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00010100 	andeq	r0, r1, r0, lsl #2
      24:	00000000 	andeq	r0, r0, r0
      28:	0800171e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, ip}
      2c:	0800172a 	stmdaeq	r0, {r1, r3, r5, r8, r9, sl, ip}
      30:	2a520001 	bcs	148003c <_Min_Stack_Size+0x147fc3c>
      34:	2e080017 	mcrcs	0, 0, r0, cr8, cr7, {0}
      38:	07080017 	smladeq	r8, r7, r0, r0
      3c:	0b007200 	bleq	1c844 <_Min_Stack_Size+0x1c444>
      40:	9f1af3ff 	svcls	0x001af3ff
      44:	0800172e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, sl, ip}
      48:	08001732 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl, ip}
      4c:	32520001 	subscc	r0, r2, #1
      50:	3c080017 	stccc	0, cr0, [r8], {23}
      54:	02080017 	andeq	r0, r8, #23
      58:	00087300 	andeq	r7, r8, r0, lsl #6
	...
      64:	00000101 	andeq	r0, r0, r1, lsl #2
      68:	32000000 	andcc	r0, r0, #0
      6c:	3e080017 	mcrcc	0, 0, r0, cr8, cr7, {0}
      70:	01080017 	tsteq	r8, r7, lsl r0
      74:	173e5200 	ldrne	r5, [lr, -r0, lsl #4]!
      78:	17420800 	strbne	r0, [r2, -r0, lsl #16]
      7c:	00070800 	andeq	r0, r7, r0, lsl #16
      80:	ff0b0072 			@ <UNDEFINED> instruction: 0xff0b0072
      84:	429f1acf 	addsmi	r1, pc, #847872	@ 0xcf000
      88:	46080017 			@ <UNDEFINED> instruction: 0x46080017
      8c:	01080017 	tsteq	r8, r7, lsl r0
      90:	17465200 	strbne	r5, [r6, -r0, lsl #4]
      94:	17500800 	ldrbne	r0, [r0, -r0, lsl #16]
      98:	00020800 	andeq	r0, r2, r0, lsl #16
      9c:	00000873 	andeq	r0, r0, r3, ror r8
      a0:	00000000 	andeq	r0, r0, r0
      a4:	01000000 	mrseq	r0, (UNDEF: 0)
      a8:	00000001 	andeq	r0, r0, r1
      ac:	17460000 	strbne	r0, [r6, -r0]
      b0:	17520800 	ldrbne	r0, [r2, -r0, lsl #16]
      b4:	00010800 	andeq	r0, r1, r0, lsl #16
      b8:	00175252 	andseq	r5, r7, r2, asr r2
      bc:	00175608 	andseq	r5, r7, r8, lsl #12
      c0:	72000708 	andvc	r0, r0, #8, 14	@ 0x200000
      c4:	fcff0b00 	ldc2l	11, cr0, [pc]	@ cc <_Min_Heap_Size+0xcc>	@ <UNPREDICTABLE>
      c8:	17569f1a 	smmlane	r6, sl, pc, r9	@ <UNPREDICTABLE>
      cc:	175a0800 	ldrbne	r0, [sl, -r0, lsl #16]
      d0:	00010800 	andeq	r0, r1, r0, lsl #16
      d4:	00175a52 	andseq	r5, r7, r2, asr sl
      d8:	00176008 	andseq	r6, r7, r8
      dc:	73000208 	movwvc	r0, #520	@ 0x208
      e0:	00000008 	andeq	r0, r0, r8
      e4:	00000000 	andeq	r0, r0, r0
      e8:	01010000 	mrseq	r0, (UNDEF: 1)
      ec:	00000000 	andeq	r0, r0, r0
      f0:	00175a00 	andseq	r5, r7, r0, lsl #20
      f4:	00175a08 	andseq	r5, r7, r8, lsl #20
      f8:	52000108 	andpl	r0, r0, #8, 2
      fc:	0800175a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, sl, ip}
     100:	0800175e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sl, ip}
     104:	00720006 	rsbseq	r0, r2, r6
     108:	9f1afc09 	svcls	0x001afc09
     10c:	0800175e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sl, ip}
     110:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
     114:	6a520001 	bvs	1480120 <_Min_Stack_Size+0x147fd20>
     118:	76080017 			@ <UNDEFINED> instruction: 0x76080017
     11c:	02080017 	andeq	r0, r8, #23
     120:	00087300 	andeq	r7, r8, r0, lsl #6
	...
     12c:	00000101 	andeq	r0, r0, r1, lsl #2
     130:	6c000000 	stcvs	0, cr0, [r0], {-0}
     134:	78080017 	stmdavc	r8, {r0, r1, r2, r4}
     138:	01080017 	tsteq	r8, r7, lsl r0
     13c:	17785100 	ldrbne	r5, [r8, -r0, lsl #2]!
     140:	177c0800 	ldrbne	r0, [ip, -r0, lsl #16]!
     144:	00080800 	andeq	r0, r8, r0, lsl #16
     148:	ff110071 			@ <UNDEFINED> instruction: 0xff110071
     14c:	9f1a73ff 	svcls	0x001a73ff
     150:	0800177c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, ip}
     154:	08001780 	stmdaeq	r0, {r7, r8, r9, sl, ip}
     158:	80510001 	subshi	r0, r1, r1
     15c:	8a080017 	bhi	2001c0 <_Min_Stack_Size+0x1ffdc0>
     160:	02080017 	andeq	r0, r8, #23
     164:	00087200 	andeq	r7, r8, r0, lsl #4
	...
     170:	00000101 	andeq	r0, r0, r1, lsl #2
     174:	80000000 	andhi	r0, r0, r0
     178:	8c080017 	stchi	0, cr0, [r8], {23}
     17c:	01080017 	tsteq	r8, r7, lsl r0
     180:	178c5100 	strne	r5, [ip, r0, lsl #2]
     184:	17900800 	ldrne	r0, [r0, r0, lsl #16]
     188:	00070800 	andeq	r0, r7, r0, lsl #16
     18c:	3f0b0071 	svccc	0x000b0071
     190:	909f1aff 			@ <UNDEFINED> instruction: 0x909f1aff
     194:	94080017 	strls	r0, [r8], #-23	@ 0xffffffe9
     198:	01080017 	tsteq	r8, r7, lsl r0
     19c:	17945100 	ldrne	r5, [r4, r0, lsl #2]
     1a0:	17960800 	ldrne	r0, [r6, r0, lsl #16]
     1a4:	00020800 	andeq	r0, r2, r0, lsl #16
     1a8:	00000873 	andeq	r0, r0, r3, ror r8
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	02000000 	andeq	r0, r0, #0
     1b4:	00030302 	andeq	r0, r3, r2, lsl #6
     1b8:	035c0000 	cmpeq	ip, #0
     1bc:	035c0800 	cmpeq	ip, #0, 16
     1c0:	00010800 	andeq	r0, r1, r0, lsl #16
     1c4:	00035c50 	andeq	r5, r3, r0, asr ip
     1c8:	00035c08 	andeq	r5, r3, r8, lsl #24
     1cc:	50000108 	andpl	r0, r0, r8, lsl #2
     1d0:	0800035c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9}
     1d4:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
     1d8:	7f700003 	svcvc	0x00700003
     1dc:	0003649f 	muleq	r3, pc, r4	@ <UNPREDICTABLE>
     1e0:	00036608 	andeq	r6, r3, r8, lsl #12
     1e4:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     1f4:	01e80000 	mvneq	r0, r0
     1f8:	02140800 	andseq	r0, r4, #0, 16
     1fc:	00010800 	andeq	r0, r1, r0, lsl #16
     200:	00021450 	andeq	r1, r2, r0, asr r4
     204:	00021608 	andeq	r1, r2, r8, lsl #12
     208:	f3000408 	vshl.u8	d0, d8, d0
     20c:	c29f5001 	addsgt	r5, pc, #1
     210:	1a080002 	bne	200220 <_Min_Stack_Size+0x1ffe20>
     214:	01080003 	tsteq	r8, r3
     218:	00005000 	andeq	r5, r0, r0
     21c:	00000000 	andeq	r0, r0, r0
     220:	00010000 	andeq	r0, r1, r0
     224:	00010100 	andeq	r0, r1, r0, lsl #2
     228:	01000001 	tsteq	r0, r1
     22c:	01000001 	tsteq	r0, r1
     230:	00000001 	andeq	r0, r0, r1
     234:	01000000 	mrseq	r0, (UNDEF: 0)
     238:	01000001 	tsteq	r0, r1
     23c:	01000001 	tsteq	r0, r1
     240:	00010001 	andeq	r0, r1, r1
     244:	00010100 	andeq	r0, r1, r0, lsl #2
     248:	080001f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8}
     24c:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
     250:	9f300002 	svcls	0x00300002
     254:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
     258:	08000208 	stmdaeq	r0, {r3, r9}
     25c:	ff0a0007 			@ <UNDEFINED> instruction: 0xff0a0007
     260:	1c00720f 	sfmne	f7, 4, [r0], {15}
     264:	0002089f 	muleq	r2, pc, r8	@ <UNPREDICTABLE>
     268:	00020a08 	andeq	r0, r2, r8, lsl #20
     26c:	0a000708 	beq	1e94 <_Min_Stack_Size+0x1a94>
     270:	00721000 	rsbseq	r1, r2, r0
     274:	02629f1c 	rsbeq	r9, r2, #28, 30	@ 0x70
     278:	02680800 	rsbeq	r0, r8, #0, 16
     27c:	00020800 	andeq	r0, r2, r0, lsl #16
     280:	02689f30 	rsbeq	r9, r8, #48, 30	@ 0xc0
     284:	02780800 	rsbseq	r0, r8, #0, 16
     288:	00070800 	andeq	r0, r7, r0, lsl #16
     28c:	730fff0a 	movwvc	pc, #65290	@ 0xff0a	@ <UNPREDICTABLE>
     290:	789f1c00 	ldmvc	pc, {sl, fp, ip}	@ <UNPREDICTABLE>
     294:	7a080002 	bvc	2002a4 <_Min_Stack_Size+0x1ffea4>
     298:	07080002 	streq	r0, [r8, -r2]
     29c:	10000a00 	andne	r0, r0, r0, lsl #20
     2a0:	9f1c0073 	svcls	0x001c0073
     2a4:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
     2a8:	0800029c 	stmdaeq	r0, {r2, r3, r4, r7, r9}
     2ac:	ff0a0007 			@ <UNDEFINED> instruction: 0xff0a0007
     2b0:	1c00730f 	stcne	3, cr7, [r0], {15}
     2b4:	00029c9f 	muleq	r2, pc, ip	@ <UNPREDICTABLE>
     2b8:	00029e08 	andeq	r9, r2, r8, lsl #28
     2bc:	0a000708 	beq	1ee4 <_Min_Stack_Size+0x1ae4>
     2c0:	00731000 	rsbseq	r1, r3, r0
     2c4:	02a49f1c 	adceq	r9, r4, #28, 30	@ 0x70
     2c8:	02aa0800 	adceq	r0, sl, #0, 16
     2cc:	00070800 	andeq	r0, r7, r0, lsl #16
     2d0:	730fff0a 	movwvc	pc, #65290	@ 0xff0a	@ <UNPREDICTABLE>
     2d4:	aa9f1c00 	bge	fe7c72dc <BootRAM+0xd737a7d>
     2d8:	b0080002 	andlt	r0, r8, r2
     2dc:	04080002 	streq	r0, [r8], #-2
     2e0:	1fff0a00 	svcne	0x00ff0a00
     2e4:	0002b29f 	muleq	r2, pc, r2	@ <UNPREDICTABLE>
     2e8:	0002bc08 	andeq	fp, r2, r8, lsl #24
     2ec:	0a000408 	beq	1314 <_Min_Stack_Size+0xf14>
     2f0:	bc9f1fff 	ldclt	15, cr1, [pc], {255}	@ 0xff
     2f4:	c2080002 	andgt	r0, r8, #2
     2f8:	02080002 	andeq	r0, r8, #2
     2fc:	c29f3000 	addsgt	r3, pc, #0
     300:	fe080002 	cdp2	0, 0, cr0, cr8, cr2, {0}
     304:	04080002 	streq	r0, [r8], #-2
     308:	1fff0a00 	svcne	0x00ff0a00
     30c:	0002fe9f 	muleq	r2, pc, lr	@ <UNPREDICTABLE>
     310:	00030208 	andeq	r0, r3, r8, lsl #4
     314:	30000208 	andcc	r0, r0, r8, lsl #4
     318:	0003029f 	muleq	r3, pc, r2	@ <UNPREDICTABLE>
     31c:	00031208 	andeq	r1, r3, r8, lsl #4
     320:	0a000708 	beq	1f48 <_Min_Stack_Size+0x1b48>
     324:	00730fff 	ldrshteq	r0, [r3], #-255	@ 0xffffff01
     328:	03129f1c 	tsteq	r2, #28, 30	@ 0x70
     32c:	03140800 	tsteq	r4, #0, 16
     330:	00070800 	andeq	r0, r7, r0, lsl #16
     334:	7310000a 	tstvc	r0, #10
     338:	249f1c00 	ldrcs	r1, [pc], #3072	@ 340 <_Min_Heap_Size+0x340>
     33c:	28080003 	stmdacs	r8, {r0, r1}
     340:	02080003 	andeq	r0, r8, #3
     344:	289f3000 	ldmcs	pc, {ip, sp}	@ <UNPREDICTABLE>
     348:	3a080003 	bcc	20035c <_Min_Stack_Size+0x1fff5c>
     34c:	07080003 	streq	r0, [r8, -r3]
     350:	0fff0a00 	svceq	0x00ff0a00
     354:	9f1c0073 	svcls	0x001c0073
     358:	0800033a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9}
     35c:	0800033c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9}
     360:	000a0007 	andeq	r0, sl, r7
     364:	1c007310 	stcne	3, cr7, [r0], {16}
     368:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
     374:	01010000 	mrseq	r0, (UNDEF: 1)
     378:	00000202 	andeq	r0, r0, r2, lsl #4
     37c:	03030101 	movweq	r0, #12545	@ 0x3101
     380:	00000000 	andeq	r0, r0, r0
     384:	00000202 	andeq	r0, r0, r2, lsl #4
     388:	00000000 	andeq	r0, r0, r0
     38c:	00000101 	andeq	r0, r0, r1, lsl #2
     390:	00000000 	andeq	r0, r0, r0
     394:	0001ec00 	andeq	lr, r1, r0, lsl #24
     398:	0001f608 	andeq	pc, r1, r8, lsl #12
     39c:	52000108 	andpl	r0, r0, #8, 2
     3a0:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
     3a4:	08000216 	stmdaeq	r0, {r1, r2, r4, r9}
     3a8:	08730002 	ldmdaeq	r3!, {r1}^
     3ac:	0800023e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9}
     3b0:	08000250 	stmdaeq	r0, {r4, r6, r9}
     3b4:	50530001 	subspl	r0, r3, r1
     3b8:	50080002 	andpl	r0, r8, r2
     3bc:	07080002 	streq	r0, [r8, -r2]
     3c0:	40007300 	andmi	r7, r0, r0, lsl #6
     3c4:	9f21243c 	svcls	0x0021243c
     3c8:	08000250 	stmdaeq	r0, {r4, r6, r9}
     3cc:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
     3d0:	00730007 	rsbseq	r0, r3, r7
     3d4:	21244041 			@ <UNDEFINED> instruction: 0x21244041
     3d8:	0002549f 	muleq	r2, pc, r4	@ <UNPREDICTABLE>
     3dc:	00025408 	andeq	r5, r2, r8, lsl #8
     3e0:	53000108 	movwpl	r0, #264	@ 0x108
     3e4:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
     3e8:	08000254 	stmdaeq	r0, {r2, r4, r6, r9}
     3ec:	00730007 	rsbseq	r0, r3, r7
     3f0:	1aff0f0b 	bne	fffc4024 <BootRAM+0xef347c5>
     3f4:	0002549f 	muleq	r2, pc, r4	@ <UNPREDICTABLE>
     3f8:	00025808 	andeq	r5, r2, r8, lsl #16
     3fc:	73000708 	movwvc	r0, #1800	@ 0x708
     400:	c70f0b00 	strgt	r0, [pc, -r0, lsl #22]
     404:	02589f1a 	subseq	r9, r8, #26, 30	@ 0x68
     408:	02680800 	rsbeq	r0, r8, #0, 16
     40c:	00010800 	andeq	r0, r1, r0, lsl #16
     410:	00028651 	andeq	r8, r2, r1, asr r6
     414:	00028608 	andeq	r8, r2, r8, lsl #12
     418:	53000108 	movwpl	r0, #264	@ 0x108
     41c:	08000286 	stmdaeq	r0, {r1, r2, r7, r9}
     420:	0800028a 	stmdaeq	r0, {r1, r3, r7, r9}
     424:	00730007 	rsbseq	r0, r3, r7
     428:	21243f40 			@ <UNDEFINED> instruction: 0x21243f40
     42c:	00028a9f 	muleq	r2, pc, sl	@ <UNPREDICTABLE>
     430:	00028c08 	andeq	r8, r2, r8, lsl #24
     434:	53000108 	movwpl	r0, #264	@ 0x108
     438:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
     43c:	080002b2 	stmdaeq	r0, {r1, r4, r5, r7, r9}
     440:	08710002 	ldmdaeq	r1!, {r1}^
     444:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
     448:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
     44c:	b4530001 	ldrblt	r0, [r3], #-1
     450:	ba080002 	blt	200460 <_Min_Stack_Size+0x200060>
     454:	06080002 	streq	r0, [r8], -r2
     458:	09007300 	stmdbeq	r0, {r8, r9, ip, sp, lr}
     45c:	ba9f1afc 	blt	fe7c7054 <BootRAM+0xd7377f5>
     460:	c0080002 	andgt	r0, r8, r2
     464:	01080002 	tsteq	r8, r2
     468:	02c05300 	sbceq	r5, r0, #0, 6
     46c:	02c20800 	sbceq	r0, r2, #0, 16
     470:	00020800 	andeq	r0, r2, r0, lsl #16
     474:	02c20871 	sbceq	r0, r2, #7405568	@ 0x710000
     478:	02ca0800 	sbceq	r0, sl, #0, 16
     47c:	00020800 	andeq	r0, r2, r0, lsl #16
     480:	00000873 	andeq	r0, r0, r3, ror r8
     484:	00000000 	andeq	r0, r0, r0
     488:	01000000 	mrseq	r0, (UNDEF: 0)
     48c:	01000001 	tsteq	r0, r1
     490:	00000001 	andeq	r0, r0, r1
     494:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
     498:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
     49c:	e80a0004 	stmda	sl, {r2}
     4a0:	01f69f03 	mvnseq	r9, r3, lsl #30
     4a4:	01fa0800 	mvnseq	r0, r0, lsl #16
     4a8:	00040800 	andeq	r0, r4, r0, lsl #16
     4ac:	9f03e70a 	svcls	0x0003e70a
     4b0:	080001fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8}
     4b4:	080001fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8}
     4b8:	7f710003 	svcvc	0x00710003
     4bc:	0001fc9f 	muleq	r1, pc, ip	@ <UNPREDICTABLE>
     4c0:	0001fe08 	andeq	pc, r1, r8, lsl #28
     4c4:	71000308 	tstvc	r0, r8, lsl #6
     4c8:	01fe9f7e 	mvnseq	r9, lr, ror pc
     4cc:	02020800 	andeq	r0, r2, #0, 16
     4d0:	00030800 	andeq	r0, r3, r0, lsl #16
     4d4:	009f7f71 	addseq	r7, pc, r1, ror pc	@ <UNPREDICTABLE>
	...
     4e0:	00000101 	andeq	r0, r0, r1, lsl #2
     4e4:	00000101 	andeq	r0, r0, r1, lsl #2
     4e8:	00030200 	andeq	r0, r3, r0, lsl #4
     4ec:	00030208 	andeq	r0, r3, r8, lsl #4
     4f0:	0a000408 	beq	1518 <_Min_Stack_Size+0x1118>
     4f4:	029f03e8 	addseq	r0, pc, #232, 6	@ 0xa0000003
     4f8:	06080003 	streq	r0, [r8], -r3
     4fc:	04080003 	streq	r0, [r8], #-3
     500:	03e70a00 	mvneq	r0, #0, 20
     504:	0003069f 	muleq	r3, pc, r6	@ <UNPREDICTABLE>
     508:	00030808 	andeq	r0, r3, r8, lsl #16
     50c:	72000308 	andvc	r0, r0, #8, 6	@ 0x20000000
     510:	03089f7f 	movweq	r9, #36735	@ 0x8f7f
     514:	030a0800 	movweq	r0, #43008	@ 0xa800
     518:	00030800 	andeq	r0, r3, r0, lsl #16
     51c:	0a9f7e72 	beq	fe7dfeec <BootRAM+0xd75068d>
     520:	0e080003 	cdpeq	0, 0, cr0, cr8, cr3, {0}
     524:	03080003 	movweq	r0, #32771	@ 0x8003
     528:	9f7f7200 	svcls	0x007f7200
	...
     534:	00010100 	andeq	r0, r1, r0, lsl #2
     538:	00010100 	andeq	r0, r1, r0, lsl #2
     53c:	03280000 			@ <UNDEFINED> instruction: 0x03280000
     540:	03280800 			@ <UNDEFINED> instruction: 0x03280800
     544:	00040800 	andeq	r0, r4, r0, lsl #16
     548:	9f03e80a 	svcls	0x0003e80a
     54c:	08000328 	stmdaeq	r0, {r3, r5, r8, r9}
     550:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
     554:	e70a0004 	str	r0, [sl, -r4]
     558:	032c9f03 			@ <UNDEFINED> instruction: 0x032c9f03
     55c:	032e0800 			@ <UNDEFINED> instruction: 0x032e0800
     560:	00030800 	andeq	r0, r3, r0, lsl #16
     564:	2e9f7f70 	mrccs	15, 4, r7, cr15, cr0, {3}
     568:	30080003 	andcc	r0, r8, r3
     56c:	03080003 	movweq	r0, #32771	@ 0x8003
     570:	9f7e7000 	svcls	0x007e7000
     574:	08000330 	stmdaeq	r0, {r4, r5, r8, r9}
     578:	08000346 	stmdaeq	r0, {r1, r2, r6, r8, r9}
     57c:	7f700003 	svcvc	0x00700003
     580:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     584:	00000000 	andeq	r0, r0, r0
     588:	01010000 	mrseq	r0, (UNDEF: 1)
     58c:	01010000 	mrseq	r0, (UNDEF: 1)
     590:	68000000 	stmdavs	r0, {}	@ <UNPREDICTABLE>
     594:	68080002 	stmdavs	r8, {r1}
     598:	04080002 	streq	r0, [r8], #-2
     59c:	03e80a00 	mvneq	r0, #0, 20
     5a0:	0002689f 	muleq	r2, pc, r8	@ <UNPREDICTABLE>
     5a4:	00026c08 	andeq	r6, r2, r8, lsl #24
     5a8:	0a000408 	beq	15d0 <_Min_Stack_Size+0x11d0>
     5ac:	6c9f03e7 	ldcvs	3, cr0, [pc], {231}	@ 0xe7
     5b0:	6e080002 	cdpvs	0, 0, cr0, cr8, cr2, {0}
     5b4:	03080002 	movweq	r0, #32770	@ 0x8002
     5b8:	9f7f7100 	svcls	0x007f7100
     5bc:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
     5c0:	08000270 	stmdaeq	r0, {r4, r5, r6, r9}
     5c4:	7e710003 	cdpvc	0, 7, cr0, cr1, cr3, {0}
     5c8:	0002709f 	muleq	r2, pc, r0	@ <UNPREDICTABLE>
     5cc:	00027408 	andeq	r7, r2, r8, lsl #8
     5d0:	71000308 	tstvc	r0, r8, lsl #6
     5d4:	00009f7f 	andeq	r9, r0, pc, ror pc
     5d8:	00000000 	andeq	r0, r0, r0
     5dc:	01000000 	mrseq	r0, (UNDEF: 0)
     5e0:	00000001 	andeq	r0, r0, r1
     5e4:	00010100 	andeq	r0, r1, r0, lsl #2
     5e8:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
     5ec:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     5f0:	7f720003 	svcvc	0x00720003
     5f4:	00028e9f 	muleq	r2, pc, lr	@ <UNPREDICTABLE>
     5f8:	00029008 	andeq	r9, r2, r8
     5fc:	72000308 	andvc	r0, r0, #8, 6	@ 0x20000000
     600:	02909f7e 	addseq	r9, r0, #504	@ 0x1f8
     604:	02940800 	addseq	r0, r4, #0, 16
     608:	00030800 	andeq	r0, r3, r0, lsl #16
     60c:	a49f7f72 	ldrge	r7, [pc], #3954	@ 614 <_Min_Stack_Size+0x214>
     610:	a4080002 	strge	r0, [r8], #-2
     614:	04080002 	streq	r0, [r8], #-2
     618:	03e80a00 	mvneq	r0, #0, 20
     61c:	0002a49f 	muleq	r2, pc, r4	@ <UNPREDICTABLE>
     620:	0002aa08 	andeq	sl, r2, r8, lsl #20
     624:	0a000408 	beq	164c <_Min_Stack_Size+0x124c>
     628:	009f03e7 	addseq	r0, pc, r7, ror #7
     62c:	00000000 	andeq	r0, r0, r0
     630:	c0000000 	andgt	r0, r0, r0
     634:	c2000004 	andgt	r0, r0, #4
     638:	02000004 	andeq	r0, r0, #4
     63c:	c2007d00 	andgt	r7, r0, #0, 26
     640:	1c000004 	stcne	0, cr0, [r0], {4}
     644:	02000005 	andeq	r0, r0, #5
     648:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     654:	c0000000 	andgt	r0, r0, r0
     658:	d0000004 	andle	r0, r0, r4
     65c:	01000004 	tsteq	r0, r4
     660:	04d05000 	ldrbeq	r5, [r0], #0
     664:	051c0000 	ldreq	r0, [ip, #-0]
     668:	00040000 	andeq	r0, r4, r0
     66c:	9f5001f3 	svcls	0x005001f3
	...
     67c:	04c00000 	strbeq	r0, [r0], #0
     680:	04ea0000 	strbteq	r0, [sl], #0
     684:	00010000 	andeq	r0, r1, r0
     688:	0004ea51 	andeq	lr, r4, r1, asr sl
     68c:	0004ee00 	andeq	lr, r4, r0, lsl #28
     690:	71000300 	mrsvc	r0, LR_irq
     694:	04ee9f02 	strbteq	r9, [lr], #3842	@ 0xf02
     698:	051c0000 	ldreq	r0, [ip, #-0]
     69c:	00040000 	andeq	r0, r4, r0
     6a0:	9f5101f3 	svcls	0x005101f3
	...
     6b0:	000004cc 	andeq	r0, r0, ip, asr #9
     6b4:	000004da 	ldrdeq	r0, [r0], -sl
     6b8:	da520001 	ble	14806c4 <_Min_Stack_Size+0x14802c4>
     6bc:	fc000004 	stc2	0, cr0, [r0], {4}
     6c0:	0b000004 	bleq	6d8 <_Min_Stack_Size+0x2d8>
     6c4:	33007300 	movwcc	r7, #768	@ 0x300
     6c8:	c0802324 	addgt	r2, r0, r4, lsr #6
     6cc:	9f048081 	svcls	0x00048081
	...
     6d8:	04d40000 	ldrbeq	r0, [r4], #0
     6dc:	051c0000 	ldreq	r0, [ip, #-0]
     6e0:	00010000 	andeq	r0, r1, r0
     6e4:	00000050 	andeq	r0, r0, r0, asr r0
     6e8:	00000000 	andeq	r0, r0, r0
     6ec:	00000100 	andeq	r0, r0, r0, lsl #2
     6f0:	d6020000 	strle	r0, [r2], -r0
     6f4:	e0000004 	and	r0, r0, r4
     6f8:	05000004 	streq	r0, [r0, #-4]
     6fc:	31017000 	mrscc	r7, (UNDEF: 1)
     700:	04e09f26 	strbteq	r9, [r0], #3878	@ 0xf26
     704:	04e60000 	strbteq	r0, [r6], #0
     708:	00010000 	andeq	r0, r1, r0
     70c:	0004e652 	andeq	lr, r4, r2, asr r6
     710:	00051a00 	andeq	r1, r5, r0, lsl #20
     714:	70000500 	andvc	r0, r0, r0, lsl #10
     718:	9f263101 	svcls	0x00263101
	...
     724:	01000000 	mrseq	r0, (UNDEF: 0)
     728:	04e80201 	strbteq	r0, [r8], #513	@ 0x201
     72c:	04f20000 	ldrbteq	r0, [r2], #0
     730:	00010000 	andeq	r0, r1, r0
     734:	0004f255 	andeq	pc, r4, r5, asr r2	@ <UNPREDICTABLE>
     738:	0004f800 	andeq	pc, r4, r0, lsl #16
     73c:	75000300 	strvc	r0, [r0, #-768]	@ 0xfffffd00
     740:	04f89f7c 	ldrbteq	r9, [r8], #3964	@ 0xf7c
     744:	051a0000 	ldreq	r0, [sl, #-0]
     748:	00010000 	andeq	r0, r1, r0
     74c:	00000055 	andeq	r0, r0, r5, asr r0
     750:	00000000 	andeq	r0, r0, r0
     754:	e8000200 	stmda	r0, {r9}
     758:	ee000004 	cdp	0, 0, cr0, cr0, cr4, {0}
     75c:	02000004 	andeq	r0, r0, #4
     760:	009f3000 	addseq	r3, pc, r0
     764:	00000000 	andeq	r0, r0, r0
     768:	34000000 	strcc	r0, [r0], #-0
     76c:	36000004 	strcc	r0, [r0], -r4
     770:	02000004 	andeq	r0, r0, #4
     774:	36007d00 	strcc	r7, [r0], -r0, lsl #26
     778:	88000004 	stmdahi	r0, {r2}
     77c:	02000004 	andeq	r0, r0, #4
     780:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     790:	00043400 	andeq	r3, r4, r0, lsl #8
     794:	00045a00 	andeq	r5, r4, r0, lsl #20
     798:	50000100 	andpl	r0, r0, r0, lsl #2
     79c:	0000045a 	andeq	r0, r0, sl, asr r4
     7a0:	0000047c 	andeq	r0, r0, ip, ror r4
     7a4:	01f30004 	mvnseq	r0, r4
     7a8:	047c9f50 	ldrbteq	r9, [ip], #-3920	@ 0xfffff0b0
     7ac:	04880000 	streq	r0, [r8], #0
     7b0:	00010000 	andeq	r0, r1, r0
     7b4:	00000050 	andeq	r0, r0, r0, asr r0
     7b8:	00000000 	andeq	r0, r0, r0
     7bc:	42000000 	andmi	r0, r0, #0
     7c0:	88000004 	stmdahi	r0, {r2}
     7c4:	01000004 	tsteq	r0, r4
     7c8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     7d4:	00000450 	andeq	r0, r0, r0, asr r4
     7d8:	00000488 	andeq	r0, r0, r8, lsl #9
     7dc:	00560001 	subseq	r0, r6, r1
     7e0:	00000000 	andeq	r0, r0, r0
     7e4:	01000000 	mrseq	r0, (UNDEF: 0)
     7e8:	00045000 	andeq	r5, r4, r0
     7ec:	00048800 	andeq	r8, r4, r0, lsl #16
     7f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     7fc:	00020200 	andeq	r0, r2, r0, lsl #4
     800:	04520100 	ldrbeq	r0, [r2], #-256	@ 0xffffff00
     804:	04520000 	ldrbeq	r0, [r2], #-0
     808:	00010000 	andeq	r0, r1, r0
     80c:	00045253 	andeq	r5, r4, r3, asr r2
     810:	00046800 	andeq	r6, r4, r0, lsl #16
     814:	75000800 	strvc	r0, [r0, #-2048]	@ 0xfffff800
     818:	73243200 			@ <UNDEFINED> instruction: 0x73243200
     81c:	7c9f2200 	lfmvc	f2, 4, [pc], {0}
     820:	84000004 	strhi	r0, [r0], #-4
     824:	08000004 	stmdaeq	r0, {r2}
     828:	32007500 	andcc	r7, r0, #0, 10
     82c:	22007324 	andcs	r7, r0, #36, 6	@ 0x90000000
     830:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     834:	00000000 	andeq	r0, r0, r0
     838:	01010200 	mrseq	r0, R9_usr
     83c:	00045200 	andeq	r5, r4, r0, lsl #4
     840:	00048400 	andeq	r8, r4, r0, lsl #8
     844:	55000100 	strpl	r0, [r0, #-256]	@ 0xffffff00
     848:	00000484 	andeq	r0, r0, r4, lsl #9
     84c:	00000486 	andeq	r0, r0, r6, lsl #9
     850:	01750003 	cmneq	r5, r3
     854:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     858:	00000000 	andeq	r0, r0, r0
     85c:	0002ec00 	andeq	lr, r2, r0, lsl #24
     860:	0002f000 	andeq	pc, r2, r0
     864:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     868:	0002f000 	andeq	pc, r2, r0
     86c:	00043400 	andeq	r3, r4, r0, lsl #8
     870:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     874:	00000018 	andeq	r0, r0, r8, lsl r0
     878:	00000000 	andeq	r0, r0, r0
     87c:	06000000 	streq	r0, [r0], -r0
     880:	56000003 	strpl	r0, [r0], -r3
     884:	01000003 	tsteq	r0, r3
     888:	00005600 	andeq	r5, r0, r0, lsl #12
     88c:	00000000 	andeq	r0, r0, r0
     890:	00020000 	andeq	r0, r2, r0
     894:	03920000 	orrseq	r0, r2, #0
     898:	039c0000 	orrseq	r0, ip, #0
     89c:	00020000 	andeq	r0, r2, r0
     8a0:	039c9f30 	orrseq	r9, ip, #48, 30	@ 0xc0
     8a4:	039e0000 	orrseq	r0, lr, #0
     8a8:	00050000 	andeq	r0, r5, r0
     8ac:	1c007438 	cfstrsne	mvf7, [r0], {56}	@ 0x38
     8b0:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     8b4:	00000000 	andeq	r0, r0, r0
     8b8:	0001a800 	andeq	sl, r1, r0, lsl #16
     8bc:	0001ae00 	andeq	sl, r1, r0, lsl #28
     8c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8c4:	0001ae00 	andeq	sl, r1, r0, lsl #28
     8c8:	0002ec00 	andeq	lr, r2, r0, lsl #24
     8cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     8d0:	00000014 	andeq	r0, r0, r4, lsl r0
     8d4:	00000000 	andeq	r0, r0, r0
     8d8:	02020000 	andeq	r0, r2, #0
     8dc:	0001a800 	andeq	sl, r1, r0, lsl #16
     8e0:	0001be00 	andeq	fp, r1, r0, lsl #28
     8e4:	50000100 	andpl	r0, r0, r0, lsl #2
     8e8:	000001be 			@ <UNDEFINED> instruction: 0x000001be
     8ec:	000002ec 	andeq	r0, r0, ip, ror #5
     8f0:	00550001 	subseq	r0, r5, r1
	...
     900:	a8000000 	stmdage	r0, {}	@ <UNPREDICTABLE>
     904:	14000001 	strne	r0, [r0], #-1
     908:	01000002 	tsteq	r0, r2
     90c:	02145100 	andseq	r5, r4, #0, 2
     910:	02580000 	subseq	r0, r8, #0
     914:	00040000 	andeq	r0, r4, r0
     918:	9f5101f3 	svcls	0x005101f3
     91c:	00000258 	andeq	r0, r0, r8, asr r2
     920:	0000026a 	andeq	r0, r0, sl, ror #4
     924:	6a510001 	bvs	1440930 <_Min_Stack_Size+0x1440530>
     928:	ec000002 	stc	0, cr0, [r0], {2}
     92c:	04000002 	streq	r0, [r0], #-2
     930:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
     934:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
     940:	0001a800 	andeq	sl, r1, r0, lsl #16
     944:	0001be00 	andeq	fp, r1, r0, lsl #28
     948:	53000100 	movwpl	r0, #256	@ 0x100
     94c:	000001be 			@ <UNDEFINED> instruction: 0x000001be
     950:	000002ec 	andeq	r0, r0, ip, ror #5
     954:	00570001 	subseq	r0, r7, r1
     958:	00000000 	andeq	r0, r0, r0
     95c:	01000000 	mrseq	r0, (UNDEF: 0)
     960:	00000000 	andeq	r0, r0, r0
     964:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
     968:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
     96c:	06000002 	streq	r0, [r0], -r2
     970:	09007000 	stmdbeq	r0, {ip, sp, lr}
     974:	1e9f1a80 	vfnmsne.f32	s2, s31, s0
     978:	58000002 	stmdapl	r0, {r1}
     97c:	07000002 	streq	r0, [r0, -r2]
     980:	5001f300 	andpl	pc, r1, r0, lsl #6
     984:	9f1a8009 	svcls	0x001a8009
     988:	00000258 	andeq	r0, r0, r8, asr r2
     98c:	0000026a 	andeq	r0, r0, sl, ror #4
     990:	00700006 	rsbseq	r0, r0, r6
     994:	9f1a8009 	svcls	0x001a8009
     998:	0000026a 	andeq	r0, r0, sl, ror #4
     99c:	000002ec 	andeq	r0, r0, ip, ror #5
     9a0:	01f30007 	mvnseq	r0, r7
     9a4:	1a800950 	bne	fe002eec <BootRAM+0xcf7368d>
     9a8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     9ac:	00000000 	andeq	r0, r0, r0
     9b0:	01010000 	mrseq	r0, (UNDEF: 1)
     9b4:	00000202 	andeq	r0, r0, r2, lsl #4
	...
     9c4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
     9c8:	f4000001 	vst4.8	{d0-d3}, [r0], r1
     9cc:	01000001 	tsteq	r0, r1
     9d0:	01f45300 	mvnseq	r5, r0, lsl #6
     9d4:	01f40000 	mvnseq	r0, r0
     9d8:	000b0000 	andeq	r0, fp, r0
     9dc:	0f0a0073 	svceq	0x000a0073
     9e0:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     9e4:	f49f2180 			@ <UNDEFINED> instruction: 0xf49f2180
     9e8:	f8000001 			@ <UNDEFINED> instruction: 0xf8000001
     9ec:	11000001 	tstne	r0, r1
     9f0:	0a007300 	beq	1d5f8 <_Min_Stack_Size+0x1d1f8>
     9f4:	751a0f00 	ldrvc	r0, [sl, #-3840]	@ 0xfffff100
     9f8:	1aff0800 	bne	fffc2a00 <BootRAM+0xef331a1>
     9fc:	80800b21 	addhi	r0, r0, r1, lsr #22
     a00:	01fc9f21 	mvnseq	r9, r1, lsr #30
     a04:	02080000 	andeq	r0, r8, #0
     a08:	00070000 	andeq	r0, r7, r0
     a0c:	800b0073 	andhi	r0, fp, r3, ror r0
     a10:	109f2180 	addsne	r2, pc, r0, lsl #3
     a14:	18000002 	stmdane	r0, {r1}
     a18:	01000002 	tsteq	r0, r2
     a1c:	02185300 	andseq	r5, r8, #0, 6
     a20:	022c0000 	eoreq	r0, ip, #0
     a24:	00020000 	andeq	r0, r2, r0
     a28:	02360074 	eorseq	r0, r6, #116	@ 0x74
     a2c:	023a0000 	eorseq	r0, sl, #0
     a30:	00010000 	andeq	r0, r1, r0
     a34:	00025853 	andeq	r5, r2, r3, asr r8
     a38:	00025c00 	andeq	r5, r2, r0, lsl #24
     a3c:	73000700 	movwvc	r0, #1792	@ 0x700
     a40:	80800b00 	addhi	r0, r0, r0, lsl #22
     a44:	025e9f21 	subseq	r9, lr, #33, 30	@ 0x84
     a48:	02620000 	rsbeq	r0, r2, #0
     a4c:	00070000 	andeq	r0, r7, r0
     a50:	800b0073 	andhi	r0, fp, r3, ror r0
     a54:	649f2180 	ldrvs	r2, [pc], #384	@ a5c <_Min_Stack_Size+0x65c>
     a58:	68000002 	stmdavs	r0, {r1}
     a5c:	07000002 	streq	r0, [r0, -r2]
     a60:	0b007300 	bleq	1d668 <_Min_Stack_Size+0x1d268>
     a64:	9f218080 	svcls	0x00218080
     a68:	0000026a 	andeq	r0, r0, sl, ror #4
     a6c:	0000026c 	andeq	r0, r0, ip, ror #4
     a70:	00740002 	rsbseq	r0, r4, r2
	...
     a7c:	000000a4 	andeq	r0, r0, r4, lsr #1
     a80:	000000a6 	andeq	r0, r0, r6, lsr #1
     a84:	007d0002 	rsbseq	r0, sp, r2
     a88:	000000a6 	andeq	r0, r0, r6, lsr #1
     a8c:	000001a8 	andeq	r0, r0, r8, lsr #3
     a90:	147d0002 	ldrbtne	r0, [sp], #-2
	...
     a9c:	00020200 	andeq	r0, r2, r0, lsl #4
     aa0:	000000a4 	andeq	r0, r0, r4, lsr #1
     aa4:	000000b8 	strheq	r0, [r0], -r8
     aa8:	b8500001 	ldmdalt	r0, {r0}^
     aac:	a8000000 	stmdage	r0, {}	@ <UNPREDICTABLE>
     ab0:	01000001 	tsteq	r0, r1
     ab4:	00005700 	andeq	r5, r0, r0, lsl #14
	...
     ac4:	00a40000 	adceq	r0, r4, r0
     ac8:	01260000 			@ <UNDEFINED> instruction: 0x01260000
     acc:	00010000 	andeq	r0, r1, r0
     ad0:	00012651 	andeq	r2, r1, r1, asr r6
     ad4:	00014a00 	andeq	r4, r1, r0, lsl #20
     ad8:	f3000400 	vshl.u8	d0, d0, d0
     adc:	4a9f5101 	bmi	fe7d4ee8 <BootRAM+0xd745689>
     ae0:	5a000001 	bpl	aec <_Min_Stack_Size+0x6ec>
     ae4:	01000001 	tsteq	r0, r1
     ae8:	015a5100 	cmpeq	sl, r0, lsl #2
     aec:	01a80000 			@ <UNDEFINED> instruction: 0x01a80000
     af0:	00040000 	andeq	r0, r4, r0
     af4:	9f5101f3 	svcls	0x005101f3
	...
     b04:	00a40000 	adceq	r0, r4, r0
     b08:	01440000 	mrseq	r0, (UNDEF: 68)
     b0c:	00010000 	andeq	r0, r1, r0
     b10:	00014452 	andeq	r4, r1, r2, asr r4
     b14:	00014600 	andeq	r4, r1, r0, lsl #12
     b18:	f3000400 	vshl.u8	d0, d0, d0
     b1c:	4a9f5201 	bmi	fe7d5328 <BootRAM+0xd745ac9>
     b20:	a8000001 	stmdage	r0, {r0}
     b24:	01000001 	tsteq	r0, r1
     b28:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     b34:	00a40000 	adceq	r0, r4, r0
     b38:	00b80000 	adcseq	r0, r8, r0
     b3c:	00010000 	andeq	r0, r1, r0
     b40:	0000b853 	andeq	fp, r0, r3, asr r8
     b44:	0001a800 	andeq	sl, r1, r0, lsl #16
     b48:	5e000100 	adfpls	f0, f0, f0
	...
     b54:	00000001 	andeq	r0, r0, r1
     b58:	000000b8 	strheq	r0, [r0], -r8
     b5c:	00000116 	andeq	r0, r0, r6, lsl r1
     b60:	00700006 	rsbseq	r0, r0, r6
     b64:	9f1a8009 	svcls	0x001a8009
     b68:	00000116 	andeq	r0, r0, r6, lsl r1
     b6c:	000001a8 	andeq	r0, r0, r8, lsr #3
     b70:	01f30007 	mvnseq	r0, r7
     b74:	1a800950 	bne	fe0030bc <BootRAM+0xcf7385d>
     b78:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     b7c:	00000000 	andeq	r0, r0, r0
     b80:	01010000 	mrseq	r0, (UNDEF: 1)
     b84:	00000202 	andeq	r0, r0, r2, lsl #4
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	e6000000 	str	r0, [r0], -r0
     b90:	e6000000 	str	r0, [r0], -r0
     b94:	01000000 	mrseq	r0, (UNDEF: 0)
     b98:	00e65300 	rsceq	r5, r6, r0, lsl #6
     b9c:	00e60000 	rsceq	r0, r6, r0
     ba0:	000b0000 	andeq	r0, fp, r0
     ba4:	0f0a0073 	svceq	0x000a0073
     ba8:	800b1a0f 	andhi	r1, fp, pc, lsl #20
     bac:	e69f2180 	ldr	r2, [pc], r0, lsl #3
     bb0:	ec000000 	stc	0, cr0, [r0], {-0}
     bb4:	11000000 	mrsne	r0, (UNDEF: 0)
     bb8:	0a007300 	beq	1d7c0 <_Min_Stack_Size+0x1d3c0>
     bbc:	771a0f00 	ldrvc	r0, [sl, -r0, lsl #30]
     bc0:	1aff0800 	bne	fffc2bc8 <BootRAM+0xef33369>
     bc4:	80800b21 	addhi	r0, r0, r1, lsr #22
     bc8:	00f09f21 	rscseq	r9, r0, r1, lsr #30
     bcc:	00fc0000 	rscseq	r0, ip, r0
     bd0:	00070000 	andeq	r0, r7, r0
     bd4:	800b0073 	andhi	r0, fp, r3, ror r0
     bd8:	fe9f2180 	cdp2	1, 9, cr2, cr15, cr0, {4}
     bdc:	02000000 	andeq	r0, r0, #0
     be0:	07000001 	streq	r0, [r0, -r1]
     be4:	0b007300 	bleq	1d7ec <_Min_Stack_Size+0x1d3ec>
     be8:	9f218080 	svcls	0x00218080
     bec:	0000014a 	andeq	r0, r0, sl, asr #2
     bf0:	0000014e 	andeq	r0, r0, lr, asr #2
     bf4:	00730007 	rsbseq	r0, r3, r7
     bf8:	2180800b 	orrcs	r8, r0, fp
     bfc:	0001509f 	muleq	r1, pc, r0	@ <UNPREDICTABLE>
     c00:	00015400 	andeq	r5, r1, r0, lsl #8
     c04:	73000700 	movwvc	r0, #1792	@ 0x700
     c08:	80800b00 	addhi	r0, r0, r0, lsl #22
     c0c:	00009f21 	andeq	r9, r0, r1, lsr #30
     c10:	00000000 	andeq	r0, r0, r0
     c14:	051c0000 	ldreq	r0, [ip, #-0]
     c18:	051e0000 	ldreq	r0, [lr, #-0]
     c1c:	00020000 	andeq	r0, r2, r0
     c20:	051e007d 	ldreq	r0, [lr, #-125]	@ 0xffffff83
     c24:	05400000 	strbeq	r0, [r0, #-0]
     c28:	00020000 	andeq	r0, r2, r0
     c2c:	0540187d 	strbeq	r1, [r0, #-2173]	@ 0xfffff783
     c30:	05420000 	strbeq	r0, [r2, #-0]
     c34:	00020000 	andeq	r0, r2, r0
     c38:	05420c7d 	strbeq	r0, [r2, #-3197]	@ 0xfffff383
     c3c:	057c0000 	ldrbeq	r0, [ip, #-0]!
     c40:	00020000 	andeq	r0, r2, r0
     c44:	057c187d 	ldrbeq	r1, [ip, #-2173]!	@ 0xfffff783
     c48:	05800000 	streq	r0, [r0]
     c4c:	00020000 	andeq	r0, r2, r0
     c50:	05800c7d 	streq	r0, [r0, #3197]	@ 0xc7d
     c54:	05840000 	streq	r0, [r4]
     c58:	00020000 	andeq	r0, r2, r0
     c5c:	0584007d 	streq	r0, [r4, #125]	@ 0x7d
     c60:	06800000 	streq	r0, [r0], r0
     c64:	00020000 	andeq	r0, r2, r0
     c68:	0000187d 	andeq	r1, r0, sp, ror r8
	...
     c74:	051c0000 	ldreq	r0, [ip, #-0]
     c78:	052e0000 	streq	r0, [lr, #-0]!
     c7c:	00010000 	andeq	r0, r1, r0
     c80:	00052e50 	andeq	r2, r5, r0, asr lr
     c84:	00068000 	andeq	r8, r6, r0
     c88:	f3000400 	vshl.u8	d0, d0, d0
     c8c:	009f5001 	addseq	r5, pc, r1
     c90:	00000000 	andeq	r0, r0, r0
     c94:	01000000 	mrseq	r0, (UNDEF: 0)
     c98:	5a000000 	bpl	ca0 <_Min_Stack_Size+0x8a0>
     c9c:	7a000005 	bvc	cb8 <_Min_Stack_Size+0x8b8>
     ca0:	02000005 	andeq	r0, r0, #5
     ca4:	be9f3000 	cdplt	0, 9, cr3, cr15, cr0, {0}
     ca8:	16000005 	strne	r0, [r0], -r5
     cac:	02000006 	andeq	r0, r0, #6
     cb0:	009f3000 	addseq	r3, pc, r0
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     cc4:	3a000000 	bcc	ccc <_Min_Stack_Size+0x8cc>
     cc8:	3e000005 	cdpcc	0, 0, cr0, cr0, cr5, {0}
     ccc:	06000005 	streq	r0, [r0], -r5
     cd0:	08007000 	stmdaeq	r0, {ip, sp, lr}
     cd4:	5e9f1a7f 			@ <UNDEFINED> instruction: 0x5e9f1a7f
     cd8:	7a000005 	bvc	cf4 <_Min_Stack_Size+0x8f4>
     cdc:	01000005 	tsteq	r0, r5
     ce0:	05be5000 	ldreq	r5, [lr, #0]!
     ce4:	05cc0000 	strbeq	r0, [ip]
     ce8:	00010000 	andeq	r0, r1, r0
     cec:	0005cc50 	andeq	ip, r5, r0, asr ip
     cf0:	0005d300 	andeq	sp, r5, r0, lsl #6
     cf4:	03000b00 	movweq	r0, #2816	@ 0xb00
     cf8:	2000006e 	andcs	r0, r0, lr, rrx
     cfc:	7f080194 	svcvc	0x00080194
     d00:	05f89f1a 	ldrbeq	r9, [r8, #3866]!	@ 0xf1a
     d04:	060c0000 	streq	r0, [ip], -r0
     d08:	00010000 	andeq	r0, r1, r0
     d0c:	00060c50 	andeq	r0, r6, r0, asr ip
     d10:	00061300 	andeq	r1, r6, r0, lsl #6
     d14:	03000b00 	movweq	r0, #2816	@ 0xb00
     d18:	2000006e 	andcs	r0, r0, lr, rrx
     d1c:	7f080194 	svcvc	0x00080194
     d20:	00009f1a 	andeq	r9, r0, sl, lsl pc
     d24:	00000000 	andeq	r0, r0, r0
     d28:	00010000 	andeq	r0, r1, r0
     d2c:	00000576 	andeq	r0, r0, r6, ror r5
     d30:	0000057a 	andeq	r0, r0, sl, ror r5
     d34:	9f320002 	svcls	0x00320002
	...
     d40:	05760001 	ldrbeq	r0, [r6, #-1]!
     d44:	057a0000 	ldrbeq	r0, [sl, #-0]!
     d48:	00060000 	andeq	r0, r6, r0
     d4c:	0017c403 	andseq	ip, r7, r3, lsl #8
     d50:	00009f08 	andeq	r9, r0, r8, lsl #30
     d54:	00000000 	andeq	r0, r0, r0
     d58:	00010000 	andeq	r0, r1, r0
     d5c:	00000576 	andeq	r0, r0, r6, ror r5
     d60:	0000057a 	andeq	r0, r0, sl, ror r5
     d64:	9f300002 	svcls	0x00300002
	...
     d70:	05e60001 	strbeq	r0, [r6, #1]!
     d74:	05f50000 	ldrbeq	r0, [r5, #0]!
     d78:	00020000 	andeq	r0, r2, r0
     d7c:	00006a91 	muleq	r0, r1, sl
     d80:	00000000 	andeq	r0, r0, r0
     d84:	00010000 	andeq	r0, r1, r0
     d88:	000005e6 	andeq	r0, r0, r6, ror #11
     d8c:	000005f5 	strdeq	r0, [r0], -r5
     d90:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
     d9c:	05f80001 	ldrbeq	r0, [r8, #1]!
     da0:	05fe0000 	ldrbeq	r0, [lr, #0]!
     da4:	00020000 	andeq	r0, r2, r0
     da8:	00009f31 	andeq	r9, r0, r1, lsr pc
     dac:	00000000 	andeq	r0, r0, r0
     db0:	00010000 	andeq	r0, r1, r0
     db4:	000005f8 	strdeq	r0, [r0], -r8
     db8:	000005fe 	strdeq	r0, [r0], -lr
     dbc:	78030006 	stmdavc	r3, {r1, r2}
     dc0:	9f200000 	svcls	0x00200000
	...
     dcc:	05f80001 	ldrbeq	r0, [r8, #1]!
     dd0:	05fe0000 	ldrbeq	r0, [lr, #0]!
     dd4:	00020000 	andeq	r0, r2, r0
     dd8:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     de4:	000005a4 	andeq	r0, r0, r4, lsr #11
     de8:	000005b8 			@ <UNDEFINED> instruction: 0x000005b8
     dec:	00540001 	subseq	r0, r4, r1
     df0:	00000000 	andeq	r0, r0, r0
     df4:	01000000 	mrseq	r0, (UNDEF: 0)
     df8:	0005a400 	andeq	sl, r5, r0, lsl #8
     dfc:	0005aa00 	andeq	sl, r5, r0, lsl #20
     e00:	30000200 	andcc	r0, r0, r0, lsl #4
     e04:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     e08:	00000000 	andeq	r0, r0, r0
     e0c:	46000200 	strmi	r0, [r0], -r0, lsl #4
     e10:	52000005 	andpl	r0, r0, #5
     e14:	02000005 	andeq	r0, r0, #5
     e18:	009f3000 	addseq	r3, pc, r0
     e1c:	00000000 	andeq	r0, r0, r0
     e20:	02000000 	andeq	r0, r0, #0
     e24:	00054600 	andeq	r4, r5, r0, lsl #12
     e28:	00055200 	andeq	r5, r5, r0, lsl #4
     e2c:	03000600 	movweq	r0, #1536	@ 0x600
     e30:	2000006e 	andcs	r0, r0, lr, rrx
     e34:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     e38:	00000000 	andeq	r0, r0, r0
     e3c:	22000500 	andcs	r0, r0, #0, 10
     e40:	2a000006 	bcs	e60 <_Min_Stack_Size+0xa60>
     e44:	02000006 	andeq	r0, r0, #6
     e48:	009f3000 	addseq	r3, pc, r0
     e4c:	00000000 	andeq	r0, r0, r0
     e50:	01000000 	mrseq	r0, (UNDEF: 0)
     e54:	00062203 	andeq	r2, r6, r3, lsl #4
     e58:	00062200 	andeq	r2, r6, r0, lsl #4
     e5c:	30000200 	andcc	r0, r0, r0, lsl #4
     e60:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     e64:	00000000 	andeq	r0, r0, r0
     e68:	00048800 	andeq	r8, r4, r0, lsl #16
     e6c:	00048a00 	andeq	r8, r4, r0, lsl #20
     e70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     e74:	00048a00 	andeq	r8, r4, r0, lsl #20
     e78:	0004c000 	andeq	ip, r4, r0
     e7c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     e80:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     e8c:	00048800 	andeq	r8, r4, r0, lsl #16
     e90:	00049600 	andeq	r9, r4, r0, lsl #12
     e94:	50000100 	andpl	r0, r0, r0, lsl #2
     e98:	00000496 	muleq	r0, r6, r4
     e9c:	000004c0 	andeq	r0, r0, r0, asr #9
     ea0:	01f30004 	mvnseq	r0, r4
     ea4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     eb4:	00000494 	muleq	r0, r4, r4
     eb8:	0000049e 	muleq	r0, lr, r4
     ebc:	9e550001 	cdpls	0, 5, cr0, cr5, cr1, {0}
     ec0:	ac000004 	stcge	0, cr0, [r0], {4}
     ec4:	01000004 	tsteq	r0, r4
     ec8:	04ac5200 	strteq	r5, [ip], #512	@ 0x200
     ecc:	04ba0000 	ldrteq	r0, [sl], #0
     ed0:	00150000 	andseq	r0, r5, r0
     ed4:	75007538 	strvc	r7, [r0, #-1336]	@ 0xfffffac8
     ed8:	244b4000 	strbcs	r4, [fp], #-0
     edc:	00080c22 	andeq	r0, r8, r2, lsr #24
     ee0:	282a8000 	stmdacs	sl!, {pc}
     ee4:	13160001 	tstne	r6, #1
     ee8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     eec:	00000000 	andeq	r0, r0, r0
     ef0:	9e000100 	adflss	f0, f0, f0
     ef4:	a2000004 	andge	r0, r0, #4
     ef8:	01000004 	tsteq	r0, r4
     efc:	00005200 	andeq	r5, r0, r0, lsl #4
     f00:	00000000 	andeq	r0, r0, r0
     f04:	00010000 	andeq	r0, r1, r0
     f08:	0000049e 	muleq	r0, lr, r4
     f0c:	000004a2 	andeq	r0, r0, r2, lsr #9
     f10:	00510001 	subseq	r0, r1, r1
     f14:	00000000 	andeq	r0, r0, r0
     f18:	01000000 	mrseq	r0, (UNDEF: 0)
     f1c:	00049e00 	andeq	r9, r4, r0, lsl #28
     f20:	0004a200 	andeq	sl, r4, r0, lsl #4
     f24:	30000200 	andcc	r0, r0, r0, lsl #4
     f28:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     f2c:	00000000 	andeq	r0, r0, r0
     f30:	00000200 	andeq	r0, r0, r0, lsl #4
     f34:	00003800 	andeq	r3, r0, r0, lsl #16
     f38:	00004000 	andeq	r4, r0, r0
     f3c:	30000200 	andcc	r0, r0, r0, lsl #4
     f40:	0000409f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     f44:	00004200 	andeq	r4, r0, r0, lsl #4
     f48:	38000500 	stmdacc	r0, {r8, sl}
     f4c:	9f1c0073 	svcls	0x001c0073
	...
     f58:	00010100 	andeq	r0, r1, r0, lsl #2
     f5c:	00520000 	subseq	r0, r2, r0
     f60:	00540000 	subseq	r0, r4, r0
     f64:	00090000 	andeq	r0, r9, r0
     f68:	0186a00c 	orreq	sl, r6, ip
     f6c:	1c007300 	stcne	3, cr7, [r0], {-0}
     f70:	0000549f 	muleq	r0, pc, r4	@ <UNPREDICTABLE>
     f74:	00005600 	andeq	r5, r0, r0, lsl #12
     f78:	0c000900 			@ <UNDEFINED> instruction: 0x0c000900
     f7c:	000186a1 	andeq	r8, r1, r1, lsr #13
     f80:	9f1c0073 	svcls	0x001c0073
     f84:	00000056 	andeq	r0, r0, r6, asr r0
     f88:	0000006e 	andeq	r0, r0, lr, rrx
     f8c:	a00c0009 	andge	r0, ip, r9
     f90:	73000186 	movwvc	r0, #390	@ 0x186
     f94:	009f1c00 	addseq	r1, pc, r0, lsl #24
     f98:	00000000 	andeq	r0, r0, r0
     f9c:	01000000 	mrseq	r0, (UNDEF: 0)
     fa0:	00007200 	andeq	r7, r0, r0, lsl #4
     fa4:	00007a00 	andeq	r7, r0, r0, lsl #20
     fa8:	44000200 	strmi	r0, [r0], #-512	@ 0xfffffe00
     fac:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
     fb8:	00000e00 	andeq	r0, r0, r0, lsl #28
     fbc:	00001000 	andeq	r1, r0, r0
     fc0:	50000100 	andpl	r0, r0, r0, lsl #2
     fc4:	00000010 	andeq	r0, r0, r0, lsl r0
     fc8:	00000012 	andeq	r0, r0, r2, lsl r0
     fcc:	01f30004 	mvnseq	r0, r4
     fd0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     fdc:	000a0000 	andeq	r0, sl, r0
     fe0:	000c0000 	andeq	r0, ip, r0
     fe4:	00010000 	andeq	r0, r1, r0
     fe8:	00000c50 	andeq	r0, r0, r0, asr ip
     fec:	00000e00 	andeq	r0, r0, r0, lsl #28
     ff0:	f3000400 	vshl.u8	d0, d0, d0
     ff4:	009f5001 	addseq	r5, pc, r1
     ff8:	00000000 	andeq	r0, r0, r0
     ffc:	a0000000 	andge	r0, r0, r0
    1000:	a2000004 	andge	r0, r0, #4
    1004:	02000004 	andeq	r0, r0, #4
    1008:	a2007d00 	andge	r7, r0, #0, 26
    100c:	ae000004 	cdpge	0, 0, cr0, cr0, cr4, {0}
    1010:	02000004 	andeq	r0, r0, #4
    1014:	ae087d00 	cdpge	13, 0, cr7, cr8, cr0, {0}
    1018:	b2000004 	andlt	r0, r0, #4
    101c:	02000004 	andeq	r0, r0, #4
    1020:	00007d00 	andeq	r7, r0, r0, lsl #26
    1024:	00000000 	andeq	r0, r0, r0
    1028:	84000000 	strhi	r0, [r0], #-0
    102c:	86000003 	strhi	r0, [r0], -r3
    1030:	02000003 	andeq	r0, r0, #3
    1034:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    1038:	82000003 	andhi	r0, r0, #3
    103c:	02000004 	andeq	r0, r0, #4
    1040:	82087d00 	andhi	r7, r8, #0, 26
    1044:	a0000004 	andge	r0, r0, r4
    1048:	02000004 	andeq	r0, r0, #4
    104c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    1058:	00000101 	andeq	r0, r0, r1, lsl #2
    105c:	9a000000 	bls	1064 <_Min_Stack_Size+0xc64>
    1060:	9a000003 	bls	1074 <_Min_Stack_Size+0xc74>
    1064:	01000003 	tsteq	r0, r3
    1068:	039a5200 	orrseq	r5, sl, #0, 4
    106c:	039e0000 	orrseq	r0, lr, #0
    1070:	00060000 	andeq	r0, r6, r0
    1074:	fc090072 	stc2	0, cr0, [r9], {114}	@ 0x72
    1078:	039e9f1a 	orrseq	r9, lr, #26, 30	@ 0x68
    107c:	03ae0000 			@ <UNDEFINED> instruction: 0x03ae0000
    1080:	00010000 	andeq	r0, r1, r0
    1084:	0003ae52 	andeq	sl, r3, r2, asr lr
    1088:	0003b400 	andeq	fp, r3, r0, lsl #8
    108c:	0c000500 	cfstr32eq	mvfx0, [r0], {-0}
    1090:	40020408 	andmi	r0, r2, r8, lsl #8
	...
    109c:	01000002 	tsteq	r0, r2
    10a0:	03b40001 			@ <UNDEFINED> instruction: 0x03b40001
    10a4:	03b80000 			@ <UNDEFINED> instruction: 0x03b80000
    10a8:	00020000 	andeq	r0, r2, r0
    10ac:	03b89f30 			@ <UNDEFINED> instruction: 0x03b89f30
    10b0:	03be0000 			@ <UNDEFINED> instruction: 0x03be0000
    10b4:	00070000 	andeq	r0, r7, r0
    10b8:	720fff0a 	andvc	pc, pc, #10, 30	@ 0x28
    10bc:	be9f1c00 	cdplt	12, 9, cr1, cr15, cr0, {0}
    10c0:	c0000003 	andgt	r0, r0, r3
    10c4:	07000003 	streq	r0, [r0, -r3]
    10c8:	10000a00 	andne	r0, r0, r0, lsl #20
    10cc:	9f1c0072 	svcls	0x001c0072
	...
    10d8:	04240001 	strteq	r0, [r4], #-1
    10dc:	04280000 	strteq	r0, [r8], #-0
    10e0:	00020000 	andeq	r0, r2, r0
    10e4:	00009f42 	andeq	r9, r0, r2, asr #30
    10e8:	00000000 	andeq	r0, r0, r0
    10ec:	02000000 	andeq	r0, r0, #0
    10f0:	00000002 	andeq	r0, r0, r2
    10f4:	04120000 	ldreq	r0, [r2], #-0
    10f8:	04120000 	ldreq	r0, [r2], #-0
    10fc:	00010000 	andeq	r0, r1, r0
    1100:	00041252 	andeq	r1, r4, r2, asr r2
    1104:	00041600 	andeq	r1, r4, r0, lsl #12
    1108:	72000e00 	andvc	r0, r0, #0, 28
    110c:	ffff1100 			@ <UNDEFINED> instruction: 0xffff1100
    1110:	1a7f87ff 	bne	1fe3114 <_Min_Stack_Size+0x1fe2d14>
    1114:	21244548 			@ <UNDEFINED> instruction: 0x21244548
    1118:	00041a9f 	muleq	r4, pc, sl	@ <UNPREDICTABLE>
    111c:	00041e00 	andeq	r1, r4, r0, lsl #28
    1120:	52000100 	andpl	r0, r0, #0, 2
    1124:	0000041e 	andeq	r0, r0, lr, lsl r4
    1128:	00000424 	andeq	r0, r0, r4, lsr #8
    112c:	08730002 	ldmdaeq	r3!, {r1}^
	...
    1138:	00000352 	andeq	r0, r0, r2, asr r3
    113c:	00000354 	andeq	r0, r0, r4, asr r3
    1140:	007d0002 	rsbseq	r0, sp, r2
    1144:	00000354 	andeq	r0, r0, r4, asr r3
    1148:	00000384 	andeq	r0, r0, r4, lsl #7
    114c:	107d0002 	rsbsne	r0, sp, r2
	...
    115c:	00000352 	andeq	r0, r0, r2, asr r3
    1160:	0000035d 	andeq	r0, r0, sp, asr r3
    1164:	5d500001 	ldclpl	0, cr0, [r0, #-4]
    1168:	84000003 	strhi	r0, [r0], #-3
    116c:	01000003 	tsteq	r0, r3
    1170:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    117c:	03520000 	cmpeq	r2, #0
    1180:	035d0000 	cmpeq	sp, #0
    1184:	00010000 	andeq	r0, r1, r0
    1188:	00035d51 	andeq	r5, r3, r1, asr sp
    118c:	00038400 	andeq	r8, r3, r0, lsl #8
    1190:	f3000400 	vshl.u8	d0, d0, d0
    1194:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    11a0:	52000000 	andpl	r0, r0, #0
    11a4:	5d000003 	stcpl	0, cr0, [r0, #-12]
    11a8:	01000003 	tsteq	r0, r3
    11ac:	035d5200 	cmpeq	sp, #0, 4
    11b0:	03840000 	orreq	r0, r4, #0
    11b4:	00040000 	andeq	r0, r4, r0
    11b8:	9f5201f3 	svcls	0x005201f3
	...
    11c4:	00000324 	andeq	r0, r0, r4, lsr #6
    11c8:	00000326 	andeq	r0, r0, r6, lsr #6
    11cc:	007d0002 	rsbseq	r0, sp, r2
    11d0:	00000326 	andeq	r0, r0, r6, lsr #6
    11d4:	00000352 	andeq	r0, r0, r2, asr r3
    11d8:	107d0002 	rsbsne	r0, sp, r2
	...
    11e8:	00000324 	andeq	r0, r0, r4, lsr #6
    11ec:	0000032f 	andeq	r0, r0, pc, lsr #6
    11f0:	2f500001 	svccs	0x00500001
    11f4:	52000003 	andpl	r0, r0, #3
    11f8:	01000003 	tsteq	r0, r3
    11fc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    120c:	03240000 			@ <UNDEFINED> instruction: 0x03240000
    1210:	03320000 	teqeq	r2, #0
    1214:	00010000 	andeq	r0, r1, r0
    1218:	00033251 	andeq	r3, r3, r1, asr r2
    121c:	00033600 	andeq	r3, r3, r0, lsl #12
    1220:	55000100 	strpl	r0, [r0, #-256]	@ 0xffffff00
    1224:	00000336 	andeq	r0, r0, r6, lsr r3
    1228:	0000033b 	andeq	r0, r0, fp, lsr r3
    122c:	3b510001 	blcc	1441238 <_Min_Stack_Size+0x1440e38>
    1230:	52000003 	andpl	r0, r0, #3
    1234:	01000003 	tsteq	r0, r3
    1238:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    1248:	03240000 			@ <UNDEFINED> instruction: 0x03240000
    124c:	03320000 	teqeq	r2, #0
    1250:	00010000 	andeq	r0, r1, r0
    1254:	00033252 	andeq	r3, r3, r2, asr r2
    1258:	00033600 	andeq	r3, r3, r0, lsl #12
    125c:	56000100 	strpl	r0, [r0], -r0, lsl #2
    1260:	00000336 	andeq	r0, r0, r6, lsr r3
    1264:	0000033b 	andeq	r0, r0, fp, lsr r3
    1268:	3b520001 	blcc	1481274 <_Min_Stack_Size+0x1480e74>
    126c:	52000003 	andpl	r0, r0, #3
    1270:	01000003 	tsteq	r0, r3
    1274:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    1284:	028c0000 	addeq	r0, ip, #0
    1288:	02b40000 	adcseq	r0, r4, #0
    128c:	00010000 	andeq	r0, r1, r0
    1290:	0002b450 	andeq	fp, r2, r0, asr r4
    1294:	0002b800 	andeq	fp, r2, r0, lsl #16
    1298:	f3000400 	vshl.u8	d0, d0, d0
    129c:	b89f5001 	ldmlt	pc, {r0, ip, lr}	@ <UNPREDICTABLE>
    12a0:	cc000002 	stcgt	0, cr0, [r0], {2}
    12a4:	01000002 	tsteq	r0, r2
    12a8:	02cc5000 	sbceq	r5, ip, #0
    12ac:	03240000 			@ <UNDEFINED> instruction: 0x03240000
    12b0:	00040000 	andeq	r0, r4, r0
    12b4:	9f5001f3 	svcls	0x005001f3
	...
    12cc:	0000017c 	andeq	r0, r0, ip, ror r1
    12d0:	00000192 	muleq	r0, r2, r1
    12d4:	92500001 	subsls	r0, r0, #1
    12d8:	94000001 	strls	r0, [r0], #-1
    12dc:	04000001 	streq	r0, [r0], #-1
    12e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    12e4:	0001949f 	muleq	r1, pc, r4	@ <UNPREDICTABLE>
    12e8:	0001a000 	andeq	sl, r1, r0
    12ec:	50000100 	andpl	r0, r0, r0, lsl #2
    12f0:	000001a0 	andeq	r0, r0, r0, lsr #3
    12f4:	000001b0 			@ <UNDEFINED> instruction: 0x000001b0
    12f8:	01f30004 	mvnseq	r0, r4
    12fc:	01b09f50 	asrseq	r9, r0, pc
    1300:	01b20000 			@ <UNDEFINED> instruction: 0x01b20000
    1304:	00010000 	andeq	r0, r1, r0
    1308:	0001b250 	andeq	fp, r1, r0, asr r2
    130c:	0001c000 	andeq	ip, r1, r0
    1310:	f3000400 	vshl.u8	d0, d0, d0
    1314:	009f5001 	addseq	r5, pc, r1
    1318:	00000000 	andeq	r0, r0, r0
    131c:	7a000000 	bvc	1324 <_Min_Stack_Size+0xf24>
    1320:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1324:	02000000 	andeq	r0, r0, #0
    1328:	7c007d00 	stcvc	13, cr7, [r0], {-0}
    132c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1330:	02000001 	andeq	r0, r0, #1
    1334:	00087d00 	andeq	r7, r8, r0, lsl #26
    1338:	00000000 	andeq	r0, r0, r0
    133c:	01000000 	mrseq	r0, (UNDEF: 0)
    1340:	0000b800 	andeq	fp, r0, r0, lsl #16
    1344:	0000c600 	andeq	ip, r0, r0, lsl #12
    1348:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
	...
    1354:	02010100 	andeq	r0, r1, #0, 2
    1358:	00bc0002 	adcseq	r0, ip, r2
    135c:	00bc0000 	adcseq	r0, ip, r0
    1360:	00070000 	andeq	r0, r7, r0
    1364:	ff0a0070 			@ <UNDEFINED> instruction: 0xff0a0070
    1368:	bc9f1aff 	vldmialt	pc, {s2-s256}
    136c:	bc000000 	stclt	0, cr0, [r0], {-0}
    1370:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1374:	0a007400 	beq	1e37c <_Min_Stack_Size+0x1df7c>
    1378:	701affff 			@ <UNDEFINED> instruction: 0x701affff
    137c:	ffff0a00 			@ <UNDEFINED> instruction: 0xffff0a00
    1380:	bc9f1c1a 	ldclt	12, cr1, [pc], {26}
    1384:	c6000000 	strgt	r0, [r0], -r0
    1388:	10000000 	andne	r0, r0, r0
    138c:	0a007400 	beq	1e394 <_Min_Stack_Size+0x1df94>
    1390:	701affff 			@ <UNDEFINED> instruction: 0x701affff
    1394:	ffff0a00 			@ <UNDEFINED> instruction: 0xffff0a00
    1398:	24331c1a 	ldrtcs	r1, [r3], #-3098	@ 0xfffff3e6
    139c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    13a8:	00006000 	andeq	r6, r0, r0
    13ac:	00006a00 	andeq	r6, r0, r0, lsl #20
    13b0:	50000100 	andpl	r0, r0, r0, lsl #2
    13b4:	0000006a 	andeq	r0, r0, sl, rrx
    13b8:	00000078 	andeq	r0, r0, r8, ror r0
    13bc:	01f30004 	mvnseq	r0, r4
    13c0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    13cc:	00480000 	subeq	r0, r8, r0
    13d0:	00540000 	subseq	r0, r4, r0
    13d4:	00010000 	andeq	r0, r1, r0
    13d8:	00005450 	andeq	r5, r0, r0, asr r4
    13dc:	00006000 	andeq	r6, r0, r0
    13e0:	f3000400 	vshl.u8	d0, d0, d0
    13e4:	009f5001 	addseq	r5, pc, r1
	...
    13f0:	02000000 	andeq	r0, r0, #0
    13f4:	02000000 	andeq	r0, r0, #0
    13f8:	02007d00 	andeq	r7, r0, #0, 26
    13fc:	48000000 	stmdami	r0, {}	@ <UNPREDICTABLE>
    1400:	02000000 	andeq	r0, r0, #0
    1404:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    1414:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
    1418:	01000000 	mrseq	r0, (UNDEF: 0)
    141c:	00085000 	andeq	r5, r8, r0
    1420:	00480000 	subeq	r0, r8, r0
    1424:	00040000 	andeq	r0, r4, r0
    1428:	9f5001f3 	svcls	0x005001f3
	...
    1434:	00180001 	andseq	r0, r8, r1
    1438:	003e0000 	eorseq	r0, lr, r0
    143c:	00060000 	andeq	r0, r6, r0
    1440:	00007e03 	andeq	r7, r0, r3, lsl #28
    1444:	00009f20 	andeq	r9, r0, r0, lsr #30
	...
    1450:	00000018 	andeq	r0, r0, r8, lsl r0
    1454:	00000032 	andeq	r0, r0, r2, lsr r0
    1458:	0072000a 	rsbseq	r0, r2, sl
    145c:	231aff08 	tstcs	sl, #8, 30	@ <UNPREDICTABLE>
    1460:	9f243101 	svcls	0x00243101
	...
    146c:	02000002 	andeq	r0, r0, #2
    1470:	00000002 	andeq	r0, r0, r2
    1474:	00080000 	andeq	r0, r8, r0
    1478:	00010000 	andeq	r0, r1, r0
    147c:	00000850 	andeq	r0, r0, r0, asr r8
    1480:	00001800 	andeq	r1, r0, r0, lsl #16
    1484:	f3000400 	vshl.u8	d0, d0, d0
    1488:	189f5001 	ldmne	pc, {r0, ip, lr}	@ <UNPREDICTABLE>
    148c:	3a000000 	bcc	1494 <_Min_Stack_Size+0x1094>
    1490:	01000000 	mrseq	r0, (UNDEF: 0)
    1494:	00005000 	andeq	r5, r0, r0
    1498:	00000000 	andeq	r0, r0, r0
    149c:	01000000 	mrseq	r0, (UNDEF: 0)
    14a0:	00200001 	eoreq	r0, r0, r1
    14a4:	00200000 	eoreq	r0, r0, r0
    14a8:	00010000 	andeq	r0, r1, r0
    14ac:	00002055 	andeq	r2, r0, r5, asr r0
    14b0:	00003a00 	andeq	r3, r0, r0, lsl #20
    14b4:	70000800 	andvc	r0, r0, r0, lsl #16
    14b8:	75243100 	strvc	r3, [r4, #-256]!	@ 0xffffff00
    14bc:	009f2200 	addseq	r2, pc, r0, lsl #4
    14c0:	00000000 	andeq	r0, r0, r0
    14c4:	c0000000 	andgt	r0, r0, r0
    14c8:	c2000001 	andgt	r0, r0, #1
    14cc:	02000001 	andeq	r0, r0, #1
    14d0:	c2007d00 	andgt	r7, r0, #0, 26
    14d4:	24000001 	strcs	r0, [r0], #-1
    14d8:	02000002 	andeq	r0, r0, #2
    14dc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    14ec:	c0000000 	andgt	r0, r0, r0
    14f0:	d8000001 	stmdale	r0, {r0}
    14f4:	01000001 	tsteq	r0, r1
    14f8:	01d85000 	bicseq	r5, r8, r0
    14fc:	02140000 	andseq	r0, r4, #0
    1500:	00040000 	andeq	r0, r4, r0
    1504:	9f5001f3 	svcls	0x005001f3
    1508:	00000214 	andeq	r0, r0, r4, lsl r2
    150c:	00000216 	andeq	r0, r0, r6, lsl r2
    1510:	16500001 	ldrbne	r0, [r0], -r1
    1514:	24000002 	strcs	r0, [r0], #-2
    1518:	04000002 	streq	r0, [r0], #-2
    151c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1520:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    152c:	c0000000 	andgt	r0, r0, r0
    1530:	dc000001 	stcle	0, cr0, [r0], {1}
    1534:	01000001 	tsteq	r0, r1
    1538:	01dc5100 	bicseq	r5, ip, r0, lsl #2
    153c:	02140000 	andseq	r0, r4, #0
    1540:	00040000 	andeq	r0, r4, r0
    1544:	9f5101f3 	svcls	0x005101f3
    1548:	00000214 	andeq	r0, r0, r4, lsl r2
    154c:	00000224 	andeq	r0, r0, r4, lsr #4
    1550:	00510001 	subseq	r0, r1, r1
	...
    1560:	0001c000 	andeq	ip, r1, r0
    1564:	0001df00 	andeq	sp, r1, r0, lsl #30
    1568:	52000100 	andpl	r0, r0, #0, 2
    156c:	000001df 	ldrdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    1570:	00000214 	andeq	r0, r0, r4, lsl r2
    1574:	01f30004 	mvnseq	r0, r4
    1578:	02149f52 	andseq	r9, r4, #328	@ 0x148
    157c:	02240000 	eoreq	r0, r4, #0
    1580:	00010000 	andeq	r0, r1, r0
    1584:	00000052 	andeq	r0, r0, r2, asr r0
    1588:	00000000 	andeq	r0, r0, r0
    158c:	00000100 	andeq	r0, r0, r0, lsl #2
    1590:	0001ce00 	andeq	ip, r1, r0, lsl #28
    1594:	0001d800 	andeq	sp, r1, r0, lsl #16
    1598:	50000100 	andpl	r0, r0, r0, lsl #2
    159c:	000001d8 	ldrdeq	r0, [r0], -r8
    15a0:	00000212 	andeq	r0, r0, r2, lsl r2
    15a4:	01f30004 	mvnseq	r0, r4
    15a8:	00009f50 	andeq	r9, r0, r0, asr pc
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00010000 	andeq	r0, r1, r0
    15b4:	000001ce 	andeq	r0, r0, lr, asr #3
    15b8:	00000212 	andeq	r0, r0, r2, lsl r2
    15bc:	01f30004 	mvnseq	r0, r4
    15c0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    15cc:	01ce0000 	biceq	r0, lr, r0
    15d0:	01df0000 	bicseq	r0, pc, r0
    15d4:	00010000 	andeq	r0, r1, r0
    15d8:	0001df52 	andeq	sp, r1, r2, asr pc
    15dc:	00021200 	andeq	r1, r2, r0, lsl #4
    15e0:	f3000400 	vshl.u8	d0, d0, d0
    15e4:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    15f4:	e4000000 	str	r0, [r0], #-0
    15f8:	e8000001 	stmda	r0, {r0}
    15fc:	01000001 	tsteq	r0, r1
    1600:	01e85300 	mvneq	r5, r0, lsl #6
    1604:	01ec0000 	mvneq	r0, r0
    1608:	000d0000 	andeq	r0, sp, r0
    160c:	ff080072 			@ <UNDEFINED> instruction: 0xff080072
    1610:	0b00731a 	bleq	1e280 <_Min_Stack_Size+0x1de80>
    1614:	211aff00 	tstcs	sl, r0, lsl #30	@ <UNPREDICTABLE>
    1618:	0001f69f 	muleq	r1, pc, r6	@ <UNPREDICTABLE>
    161c:	0001fa00 	andeq	pc, r1, r0, lsl #20
    1620:	52000100 	andpl	r0, r0, #0, 2
    1624:	000001fa 	strdeq	r0, [r0], -sl
    1628:	000001fc 	strdeq	r0, [r0], -ip
    162c:	0073000d 	rsbseq	r0, r3, sp
    1630:	1aff000b 	bne	fffc1664 <BootRAM+0xef31e05>
    1634:	ff080072 			@ <UNDEFINED> instruction: 0xff080072
    1638:	009f211a 	addseq	r2, pc, sl, lsl r1	@ <UNPREDICTABLE>
    163c:	00000000 	andeq	r0, r0, r0
    1640:	02000000 	andeq	r0, r0, #0
    1644:	0001d400 	andeq	sp, r1, r0, lsl #8
    1648:	0001e000 	andeq	lr, r1, r0
    164c:	30000200 	andcc	r0, r0, r0, lsl #4
    1650:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1654:	00000000 	andeq	r0, r0, r0
    1658:	d4000200 	strle	r0, [r0], #-512	@ 0xfffffe00
    165c:	e0000001 	and	r0, r0, r1
    1660:	06000001 	streq	r0, [r0], -r1
    1664:	00e00300 	rsceq	r0, r0, r0, lsl #6
    1668:	009f2000 	addseq	r2, pc, r0
    166c:	00000000 	andeq	r0, r0, r0
    1670:	a4000000 	strge	r0, [r0], #-0
    1674:	a6000003 	strge	r0, [r0], -r3
    1678:	02000003 	andeq	r0, r0, #3
    167c:	a6007d00 	strge	r7, [r0], -r0, lsl #26
    1680:	44000003 	strmi	r0, [r0], #-3
    1684:	02000004 	andeq	r0, r0, #4
    1688:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    1698:	0003a400 	andeq	sl, r3, r0, lsl #8
    169c:	0003c800 	andeq	ip, r3, r0, lsl #16
    16a0:	50000100 	andpl	r0, r0, r0, lsl #2
    16a4:	000003c8 	andeq	r0, r0, r8, asr #7
    16a8:	000003ca 	andeq	r0, r0, sl, asr #7
    16ac:	01740003 	cmneq	r4, r3
    16b0:	0003ca9f 	muleq	r3, pc, sl	@ <UNPREDICTABLE>
    16b4:	00044400 	andeq	r4, r4, r0, lsl #8
    16b8:	f3000400 	vshl.u8	d0, d0, d0
    16bc:	009f5001 	addseq	r5, pc, r1
	...
    16cc:	0003a400 	andeq	sl, r3, r0, lsl #8
    16d0:	0003f000 	andeq	pc, r3, r0
    16d4:	51000100 	mrspl	r0, (UNDEF: 16)
    16d8:	000003f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    16dc:	00000406 	andeq	r0, r0, r6, lsl #8
    16e0:	01f30004 	mvnseq	r0, r4
    16e4:	04069f51 	streq	r9, [r6], #-3921	@ 0xfffff0af
    16e8:	04440000 	strbeq	r0, [r4], #-0
    16ec:	00010000 	andeq	r0, r1, r0
    16f0:	00000051 	andeq	r0, r0, r1, asr r0
    16f4:	00000000 	andeq	r0, r0, r0
    16f8:	00000200 	andeq	r0, r0, r0, lsl #4
    16fc:	a4000000 	strge	r0, [r0], #-0
    1700:	b8000003 	stmdalt	r0, {r0, r1}
    1704:	02000003 	andeq	r0, r0, #3
    1708:	b89f3000 	ldmlt	pc, {ip, sp}	@ <UNPREDICTABLE>
    170c:	f6000003 			@ <UNDEFINED> instruction: 0xf6000003
    1710:	01000003 	tsteq	r0, r3
    1714:	04065300 	streq	r5, [r6], #-768	@ 0xfffffd00
    1718:	04440000 	strbeq	r0, [r4], #-0
    171c:	00010000 	andeq	r0, r1, r0
    1720:	00000053 	andeq	r0, r0, r3, asr r0
    1724:	00000000 	andeq	r0, r0, r0
    1728:	00044400 	andeq	r4, r4, r0, lsl #8
    172c:	00044600 	andeq	r4, r4, r0, lsl #12
    1730:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1734:	00044600 	andeq	r4, r4, r0, lsl #12
    1738:	00044a00 	andeq	r4, r4, r0, lsl #20
    173c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1740:	00044a0c 	andeq	r4, r4, ip, lsl #20
    1744:	00051800 	andeq	r1, r5, r0, lsl #16
    1748:	7d000300 	stcvc	3, cr0, [r0, #-0]
    174c:	051800d0 	ldreq	r0, [r8, #-208]	@ 0xffffff30
    1750:	051a0000 	ldreq	r0, [sl, #-0]
    1754:	00020000 	andeq	r0, r2, r0
    1758:	051a0c7d 	ldreq	r0, [sl, #-3197]	@ 0xfffff383
    175c:	05b40000 	ldreq	r0, [r4, #0]!
    1760:	00030000 	andeq	r0, r3, r0
    1764:	0000d07d 	andeq	sp, r0, sp, ror r0
	...
    1774:	58000000 	stmdapl	r0, {}	@ <UNPREDICTABLE>
    1778:	5c000004 	stcpl	0, cr0, [r0], {4}
    177c:	06000004 	streq	r0, [r0], -r4
    1780:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
    1784:	5c9f1aff 	vldmiapl	pc, {s2-s256}
    1788:	68000004 	stmdavs	r0, {r2}
    178c:	11000004 	tstne	r0, r4
    1790:	00e90300 	rsceq	r0, r9, r0, lsl #6
    1794:	01942000 	orrseq	r2, r4, r0
    1798:	731aff08 	tstvc	sl, #8, 30	@ <UNPREDICTABLE>
    179c:	ff081c00 			@ <UNDEFINED> instruction: 0xff081c00
    17a0:	04689f1a 	strbteq	r9, [r8], #-3866	@ 0xfffff0e6
    17a4:	048a0000 	streq	r0, [sl], #0
    17a8:	00010000 	andeq	r0, r1, r0
    17ac:	00051a55 	andeq	r1, r5, r5, asr sl
    17b0:	00054600 	andeq	r4, r5, r0, lsl #12
    17b4:	55000100 	strpl	r0, [r0, #-256]	@ 0xffffff00
	...
    17c0:	04520503 	ldrbeq	r0, [r2], #-1283	@ 0xfffffafd
    17c4:	04520000 	ldrbeq	r0, [r2], #-0
    17c8:	00060000 	andeq	r0, r6, r0
    17cc:	0000e803 	andeq	lr, r0, r3, lsl #16
    17d0:	00009f20 	andeq	r9, r0, r0, lsr #30
    17d4:	00000000 	andeq	r0, r0, r0
    17d8:	00010000 	andeq	r0, r1, r0
    17dc:	00000480 	andeq	r0, r0, r0, lsl #9
    17e0:	00000486 	andeq	r0, r0, r6, lsl #9
    17e4:	00550001 	subseq	r0, r5, r1
    17e8:	00000000 	andeq	r0, r0, r0
    17ec:	01000000 	mrseq	r0, (UNDEF: 0)
    17f0:	00048000 	andeq	r8, r4, r0
    17f4:	00048600 	andeq	r8, r4, r0, lsl #12
    17f8:	5d000100 	stfpls	f0, [r0, #-0]
	...
    1804:	04800001 	streq	r0, [r0], #1
    1808:	04860000 	streq	r0, [r6], #0
    180c:	00030000 	andeq	r0, r3, r0
    1810:	009f8109 	addseq	r8, pc, r9, lsl #2
    1814:	00000000 	andeq	r0, r0, r0
    1818:	01000000 	mrseq	r0, (UNDEF: 0)
    181c:	00053400 	andeq	r3, r5, r0, lsl #8
    1820:	00053c00 	andeq	r3, r5, r0, lsl #24
    1824:	55000100 	strpl	r0, [r0, #-256]	@ 0xffffff00
	...
    1830:	05340001 	ldreq	r0, [r4, #-1]!
    1834:	053c0000 	ldreq	r0, [ip, #-0]!
    1838:	00010000 	andeq	r0, r1, r0
    183c:	0000005d 	andeq	r0, r0, sp, asr r0
    1840:	00000000 	andeq	r0, r0, r0
    1844:	34000100 	strcc	r0, [r0], #-256	@ 0xffffff00
    1848:	3c000005 	stccc	0, cr0, [r0], {5}
    184c:	03000005 	movweq	r0, #5
    1850:	9f820900 	svcls	0x00820900
	...
    185c:	00000003 	andeq	r0, r0, r3
    1860:	00010100 	andeq	r0, r1, r0, lsl #2
    1864:	048a0000 	streq	r0, [sl], #0
    1868:	04b60000 	ldrteq	r0, [r6], #0
    186c:	00020000 	andeq	r0, r2, r0
    1870:	04b69f31 	ldrteq	r9, [r6], #3889	@ 0xf31
    1874:	04d40000 	ldrbeq	r0, [r4], #0
    1878:	00010000 	andeq	r0, r1, r0
    187c:	00054650 	andeq	r4, r5, r0, asr r6
    1880:	00054600 	andeq	r4, r5, r0, lsl #12
    1884:	31000200 	mrscc	r0, R8_usr
    1888:	0005469f 	muleq	r5, pc, r6	@ <UNPREDICTABLE>
    188c:	00057800 	andeq	r7, r5, r0, lsl #16
    1890:	32000200 	andcc	r0, r0, #0, 4
    1894:	0005789f 	muleq	r5, pc, r8	@ <UNPREDICTABLE>
    1898:	00057c00 	andeq	r7, r5, r0, lsl #24
    189c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    18ac:	04dc0000 	ldrbeq	r0, [ip], #0
    18b0:	04e00000 	strbteq	r0, [r0], #0
    18b4:	00010000 	andeq	r0, r1, r0
    18b8:	00058250 	andeq	r8, r5, r0, asr r2
    18bc:	00058400 	andeq	r8, r5, r0, lsl #8
    18c0:	50000100 	andpl	r0, r0, r0, lsl #2
    18c4:	00000584 	andeq	r0, r0, r4, lsl #11
    18c8:	00000587 	andeq	r0, r0, r7, lsl #11
    18cc:	00510001 	subseq	r0, r1, r1
    18d0:	00000000 	andeq	r0, r0, r0
    18d4:	01000000 	mrseq	r0, (UNDEF: 0)
    18d8:	00000000 	andeq	r0, r0, r0
    18dc:	0004a000 	andeq	sl, r4, r0
    18e0:	0004a400 	andeq	sl, r4, r0, lsl #8
    18e4:	91000300 	mrsls	r0, LR_irq
    18e8:	04a49f50 	strteq	r9, [r4], #3920	@ 0xf50
    18ec:	04a70000 	strteq	r0, [r7], #0
    18f0:	00010000 	andeq	r0, r1, r0
    18f4:	0004a751 	andeq	sl, r4, r1, asr r7
    18f8:	0004a800 	andeq	sl, r4, r0, lsl #16
    18fc:	91000300 	mrsls	r0, LR_irq
    1900:	00009f50 	andeq	r9, r0, r0, asr pc
    1904:	00000000 	andeq	r0, r0, r0
    1908:	00010000 	andeq	r0, r1, r0
    190c:	000004a0 	andeq	r0, r0, r0, lsr #9
    1910:	000004a8 	andeq	r0, r0, r8, lsr #9
    1914:	9f320002 	svcls	0x00320002
	...
    1920:	04be0301 	ldrteq	r0, [lr], #769	@ 0x301
    1924:	04be0000 	ldrteq	r0, [lr], #0
    1928:	00060000 	andeq	r0, r6, r0
    192c:	0001ea03 	andeq	lr, r1, r3, lsl #20
    1930:	00009f20 	andeq	r9, r0, r0, lsr #30
    1934:	00000000 	andeq	r0, r0, r0
    1938:	00010000 	andeq	r0, r1, r0
    193c:	00000000 	andeq	r0, r0, r0
    1940:	000004d2 	ldrdeq	r0, [r0], -r2
    1944:	000004d6 	ldrdeq	r0, [r0], -r6
    1948:	50910003 	addspl	r0, r1, r3
    194c:	0004d69f 	muleq	r4, pc, r6	@ <UNPREDICTABLE>
    1950:	0004db00 	andeq	sp, r4, r0, lsl #22
    1954:	51000100 	mrspl	r0, (UNDEF: 16)
    1958:	000004db 	ldrdeq	r0, [r0], -fp
    195c:	000004dc 	ldrdeq	r0, [r0], -ip
    1960:	50910003 	addspl	r0, r1, r3
    1964:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1968:	00000000 	andeq	r0, r0, r0
    196c:	d2000100 	andle	r0, r0, #0, 2
    1970:	d4000004 	strle	r0, [r0], #-4
    1974:	01000004 	tsteq	r0, r4
    1978:	00005000 	andeq	r5, r0, r0
    197c:	00000000 	andeq	r0, r0, r0
    1980:	00010000 	andeq	r0, r1, r0
    1984:	00000000 	andeq	r0, r0, r0
    1988:	00000552 	andeq	r0, r0, r2, asr r5
    198c:	00000556 	andeq	r0, r0, r6, asr r5
    1990:	50910003 	addspl	r0, r1, r3
    1994:	0005569f 	muleq	r5, pc, r6	@ <UNPREDICTABLE>
    1998:	00055900 	andeq	r5, r5, r0, lsl #18
    199c:	51000100 	mrspl	r0, (UNDEF: 16)
    19a0:	00000559 	andeq	r0, r0, r9, asr r5
    19a4:	0000055a 	andeq	r0, r0, sl, asr r5
    19a8:	50910003 	addspl	r0, r1, r3
    19ac:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    19b0:	00000000 	andeq	r0, r0, r0
    19b4:	52000100 	andpl	r0, r0, #0, 2
    19b8:	5a000005 	bpl	19d4 <_Min_Stack_Size+0x15d4>
    19bc:	02000005 	andeq	r0, r0, #5
    19c0:	009f3100 	addseq	r3, pc, r0, lsl #2
    19c4:	00000000 	andeq	r0, r0, r0
    19c8:	01000000 	mrseq	r0, (UNDEF: 0)
    19cc:	00000000 	andeq	r0, r0, r0
    19d0:	00057800 	andeq	r7, r5, r0, lsl #16
    19d4:	00057a00 	andeq	r7, r5, r0, lsl #20
    19d8:	91000300 	mrsls	r0, LR_irq
    19dc:	057a9f50 	ldrbeq	r9, [sl, #-3920]!	@ 0xfffff0b0
    19e0:	057f0000 	ldrbeq	r0, [pc, #-0]!	@ 19e8 <_Min_Stack_Size+0x15e8>
    19e4:	00010000 	andeq	r0, r1, r0
    19e8:	00057f51 	andeq	r7, r5, r1, asr pc
    19ec:	00058000 	andeq	r8, r5, r0
    19f0:	91000300 	mrsls	r0, LR_irq
    19f4:	00009f50 	andeq	r9, r0, r0, asr pc
    19f8:	00000000 	andeq	r0, r0, r0
    19fc:	00010000 	andeq	r0, r1, r0
    1a00:	00000578 	andeq	r0, r0, r8, ror r5
    1a04:	00000580 	andeq	r0, r0, r0, lsl #11
    1a08:	9f320002 	svcls	0x00320002
	...
    1a14:	000002b4 			@ <UNDEFINED> instruction: 0x000002b4
    1a18:	000002b6 			@ <UNDEFINED> instruction: 0x000002b6
    1a1c:	007d0002 	rsbseq	r0, sp, r2
    1a20:	000002b6 			@ <UNDEFINED> instruction: 0x000002b6
    1a24:	000003a4 	andeq	r0, r0, r4, lsr #7
    1a28:	107d0002 	rsbsne	r0, sp, r2
	...
    1a34:	00010100 	andeq	r0, r1, r0, lsl #2
    1a38:	00000000 	andeq	r0, r0, r0
    1a3c:	000002c2 	andeq	r0, r0, r2, asr #5
    1a40:	000002d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1a44:	d0520001 	subsle	r0, r2, r1
    1a48:	d6000002 	strle	r0, [r0], -r2
    1a4c:	09000002 	stmdbeq	r0, {r1}
    1a50:	11007200 	mrsne	r7, R8_usr
    1a54:	7ebfffff 	mrcvc	15, 5, APSR_nzcv, cr15, cr15, {7}
    1a58:	02d69f1a 	sbcseq	r9, r6, #26, 30	@ 0x68
    1a5c:	02e80000 	rsceq	r0, r8, #0
    1a60:	00010000 	andeq	r0, r1, r0
    1a64:	0002e852 	andeq	lr, r2, r2, asr r8
    1a68:	0002f200 	andeq	pc, r2, r0, lsl #4
    1a6c:	73000200 	movwvc	r0, #512	@ 0x200
    1a70:	00000024 	andeq	r0, r0, r4, lsr #32
    1a74:	00000000 	andeq	r0, r0, r0
    1a78:	01010000 	mrseq	r0, (UNDEF: 1)
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	e8000000 	stmda	r0, {}	@ <UNPREDICTABLE>
    1a84:	f4000002 	vst4.8	{d0-d3}, [r0], r2
    1a88:	01000002 	tsteq	r0, r2
    1a8c:	02f45200 	rscseq	r5, r4, #0, 4
    1a90:	02f80000 	rscseq	r0, r8, #0
    1a94:	00080000 	andeq	r0, r8, r0
    1a98:	ff110072 			@ <UNDEFINED> instruction: 0xff110072
    1a9c:	9f1a4fff 	svcls	0x001a4fff
    1aa0:	000002f8 	strdeq	r0, [r0], -r8
    1aa4:	00000308 	andeq	r0, r0, r8, lsl #6
    1aa8:	08520001 	ldmdaeq	r2, {r0}^
    1aac:	0a000003 	beq	1ac0 <_Min_Stack_Size+0x16c0>
    1ab0:	02000003 	andeq	r0, r0, #3
    1ab4:	0a247300 	beq	91e6bc <_Min_Stack_Size+0x91e2bc>
    1ab8:	10000003 	andne	r0, r0, r3
    1abc:	05000003 	streq	r0, [r0, #-3]
    1ac0:	00240c00 	eoreq	r0, r4, r0, lsl #24
    1ac4:	00004002 	andeq	r4, r0, r2
    1ac8:	00000000 	andeq	r0, r0, r0
    1acc:	00030000 	andeq	r0, r3, r0
    1ad0:	000002b4 			@ <UNDEFINED> instruction: 0x000002b4
    1ad4:	000002c0 	andeq	r0, r0, r0, asr #5
    1ad8:	25080003 	strcs	r0, [r8, #-3]
    1adc:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	30000100 	andcc	r0, r0, r0, lsl #2
    1ae8:	32000003 	andcc	r0, r0, #3
    1aec:	03000003 	movweq	r0, #3
    1af0:	9f250800 	svcls	0x00250800
	...
    1afc:	00000220 	andeq	r0, r0, r0, lsr #4
    1b00:	00000222 	andeq	r0, r0, r2, lsr #4
    1b04:	007d0002 	rsbseq	r0, sp, r2
    1b08:	00000222 	andeq	r0, r0, r2, lsr #4
    1b0c:	00000226 	andeq	r0, r0, r6, lsr #4
    1b10:	087d0002 	ldmdaeq	sp!, {r1}^
    1b14:	00000226 	andeq	r0, r0, r6, lsr #4
    1b18:	00000254 	andeq	r0, r0, r4, asr r2
    1b1c:	f07d0003 			@ <UNDEFINED> instruction: 0xf07d0003
    1b20:	00025400 	andeq	r5, r2, r0, lsl #8
    1b24:	00025600 	andeq	r5, r2, r0, lsl #12
    1b28:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1b2c:	00025608 	andeq	r5, r2, r8, lsl #12
    1b30:	0002b400 	andeq	fp, r2, r0, lsl #8
    1b34:	7d000300 	stcvc	3, cr0, [r0, #-0]
    1b38:	000000f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
	...
    1b48:	02200000 	eoreq	r0, r0, #0
    1b4c:	02380000 	eorseq	r0, r8, #0
    1b50:	00010000 	andeq	r0, r1, r0
    1b54:	00023850 	andeq	r3, r2, r0, asr r8
    1b58:	0002a400 	andeq	sl, r2, r0, lsl #8
    1b5c:	f3000400 	vshl.u8	d0, d0, d0
    1b60:	a49f5001 	ldrge	r5, [pc], #1	@ 1b68 <_Min_Stack_Size+0x1768>
    1b64:	a6000002 	strge	r0, [r0], -r2
    1b68:	01000002 	tsteq	r0, r2
    1b6c:	02a65000 	adceq	r5, r6, #0
    1b70:	02b40000 	adcseq	r0, r4, #0
    1b74:	00040000 	andeq	r0, r4, r0
    1b78:	9f5001f3 	svcls	0x005001f3
	...
    1b90:	02200000 	eoreq	r0, r0, #0
    1b94:	023e0000 	eorseq	r0, lr, #0
    1b98:	00010000 	andeq	r0, r1, r0
    1b9c:	00023e51 	andeq	r3, r2, r1, asr lr
    1ba0:	00025600 	andeq	r5, r2, r0, lsl #12
    1ba4:	f3000400 	vshl.u8	d0, d0, d0
    1ba8:	569f5101 	ldrpl	r5, [pc], r1, lsl #2
    1bac:	60000002 	andvs	r0, r0, r2
    1bb0:	01000002 	tsteq	r0, r2
    1bb4:	02605100 	rsbeq	r5, r0, #0, 2
    1bb8:	029a0000 	addseq	r0, sl, #0
    1bbc:	00040000 	andeq	r0, r4, r0
    1bc0:	9f5101f3 	svcls	0x005101f3
    1bc4:	0000029a 	muleq	r0, sl, r2
    1bc8:	0000029c 	muleq	r0, ip, r2
    1bcc:	9c510001 	mrrcls	0, 0, r0, r1, cr1
    1bd0:	a4000002 	strge	r0, [r0], #-2
    1bd4:	04000002 	streq	r0, [r0], #-2
    1bd8:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
    1bdc:	0002a49f 	muleq	r2, pc, r4	@ <UNPREDICTABLE>
    1be0:	0002b400 	andeq	fp, r2, r0, lsl #8
    1be4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1bfc:	02200000 	eoreq	r0, r0, #0
    1c00:	02410000 	subeq	r0, r1, #0
    1c04:	00010000 	andeq	r0, r1, r0
    1c08:	00024152 	andeq	r4, r2, r2, asr r1
    1c0c:	00025600 	andeq	r5, r2, r0, lsl #12
    1c10:	f3000400 	vshl.u8	d0, d0, d0
    1c14:	569f5201 	ldrpl	r5, [pc], r1, lsl #4
    1c18:	63000002 	movwvs	r0, #2
    1c1c:	01000002 	tsteq	r0, r2
    1c20:	02635200 	rsbeq	r5, r3, #0, 4
    1c24:	029a0000 	addseq	r0, sl, #0
    1c28:	00040000 	andeq	r0, r4, r0
    1c2c:	9f5201f3 	svcls	0x005201f3
    1c30:	0000029a 	muleq	r0, sl, r2
    1c34:	000002a1 	andeq	r0, r0, r1, lsr #5
    1c38:	a1520001 	cmpge	r2, r1
    1c3c:	a4000002 	strge	r0, [r0], #-2
    1c40:	04000002 	streq	r0, [r0], #-2
    1c44:	5201f300 	andpl	pc, r1, #0, 6
    1c48:	0002a49f 	muleq	r2, pc, r4	@ <UNPREDICTABLE>
    1c4c:	0002b400 	andeq	fp, r2, r0, lsl #8
    1c50:	52000100 	andpl	r0, r0, #0, 2
	...
    1c5c:	00000003 	andeq	r0, r0, r3
    1c60:	029a0000 	addseq	r0, sl, #0
    1c64:	029c0000 	addseq	r0, ip, #0
    1c68:	00040000 	andeq	r0, r4, r0
    1c6c:	9f7f9491 	svcls	0x007f9491
    1c70:	0000029c 	muleq	r0, ip, r2
    1c74:	000002a1 	andeq	r0, r0, r1, lsr #5
    1c78:	a1510001 	cmpge	r1, r1
    1c7c:	a2000002 	andge	r0, r0, #2
    1c80:	04000002 	streq	r0, [r0], #-2
    1c84:	7f949100 	svcvc	0x00949100
    1c88:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1c8c:	00000000 	andeq	r0, r0, r0
    1c90:	9a000300 	bls	2898 <_Min_Stack_Size+0x2498>
    1c94:	a2000002 	andge	r0, r0, #2
    1c98:	02000002 	andeq	r0, r0, #2
    1c9c:	009f3000 	addseq	r3, pc, r0
    1ca0:	00000000 	andeq	r0, r0, r0
    1ca4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ca8:	00023c00 	andeq	r3, r2, r0, lsl #24
    1cac:	00024200 	andeq	r4, r2, r0, lsl #4
    1cb0:	03000600 	movweq	r0, #1536	@ 0x600
    1cb4:	2000000c 	andcs	r0, r0, ip
    1cb8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1cbc:	00000000 	andeq	r0, r0, r0
    1cc0:	3c000100 	stfccs	f0, [r0], {-0}
    1cc4:	42000002 	andmi	r0, r0, #2
    1cc8:	02000002 	andeq	r0, r0, #2
    1ccc:	009f3000 	addseq	r3, pc, r0
    1cd0:	00000000 	andeq	r0, r0, r0
    1cd4:	01000000 	mrseq	r0, (UNDEF: 0)
    1cd8:	00025a00 	andeq	r5, r2, r0, lsl #20
    1cdc:	00026400 	andeq	r6, r2, r0, lsl #8
    1ce0:	03000600 	movweq	r0, #1536	@ 0x600
    1ce4:	20000013 	andcs	r0, r0, r3, lsl r0
    1ce8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1cec:	00000000 	andeq	r0, r0, r0
    1cf0:	5a000100 	bpl	20f8 <_Min_Stack_Size+0x1cf8>
    1cf4:	64000002 	strvs	r0, [r0], #-2
    1cf8:	02000002 	andeq	r0, r0, #2
    1cfc:	009f3000 	addseq	r3, pc, r0
	...
    1d0c:	74000000 	strvc	r0, [r0], #-0
    1d10:	9a000001 	bls	1d1c <_Min_Stack_Size+0x191c>
    1d14:	01000001 	tsteq	r0, r1
    1d18:	019a5000 	orrseq	r5, sl, r0
    1d1c:	019c0000 	orrseq	r0, ip, r0
    1d20:	00040000 	andeq	r0, r4, r0
    1d24:	9f5001f3 	svcls	0x005001f3
    1d28:	0000019c 	muleq	r0, ip, r1
    1d2c:	000001a2 	andeq	r0, r0, r2, lsr #3
    1d30:	a2500001 	subsge	r0, r0, #1
    1d34:	ac000001 	stcge	0, cr0, [r0], {1}
    1d38:	04000001 	streq	r0, [r0], #-1
    1d3c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1d40:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1d44:	00000000 	andeq	r0, r0, r0
    1d48:	00011c00 	andeq	r1, r1, r0, lsl #24
    1d4c:	00011e00 	andeq	r1, r1, r0, lsl #28
    1d50:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1d54:	00011e00 	andeq	r1, r1, r0, lsl #28
    1d58:	00017400 	andeq	r7, r1, r0, lsl #8
    1d5c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1d60:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    1d70:	1c000000 	stcne	0, cr0, [r0], {-0}
    1d74:	26000001 	strcs	r0, [r0], -r1
    1d78:	01000001 	tsteq	r0, r1
    1d7c:	012a5000 			@ <UNDEFINED> instruction: 0x012a5000
    1d80:	012c0000 			@ <UNDEFINED> instruction: 0x012c0000
    1d84:	00010000 	andeq	r0, r1, r0
    1d88:	00012c55 	andeq	r2, r1, r5, asr ip
    1d8c:	00014800 	andeq	r4, r1, r0, lsl #16
    1d90:	57000100 	strpl	r0, [r0, -r0, lsl #2]
    1d94:	00000148 	andeq	r0, r0, r8, asr #2
    1d98:	00000160 	andeq	r0, r0, r0, ror #2
    1d9c:	60550001 	subsvs	r0, r5, r1
    1da0:	74000001 	strvc	r0, [r0], #-1
    1da4:	01000001 	tsteq	r0, r1
    1da8:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    1db4:	00010100 	andeq	r0, r1, r0, lsl #2
    1db8:	0000011c 	andeq	r0, r0, ip, lsl r1
    1dbc:	00000126 	andeq	r0, r0, r6, lsr #2
    1dc0:	2a510001 	bcs	1441dcc <_Min_Stack_Size+0x14419cc>
    1dc4:	2a000001 	bcs	1dd0 <_Min_Stack_Size+0x19d0>
    1dc8:	03000001 	movweq	r0, #1
    1dcc:	9f017400 	svcls	0x00017400
    1dd0:	0000012a 	andeq	r0, r0, sl, lsr #2
    1dd4:	0000016e 	andeq	r0, r0, lr, ror #2
    1dd8:	00540001 	subseq	r0, r4, r1
    1ddc:	00000000 	andeq	r0, r0, r0
    1de0:	02000000 	andeq	r0, r0, #0
    1de4:	00014804 	andeq	r4, r1, r4, lsl #16
    1de8:	00014800 	andeq	r4, r1, r0, lsl #16
    1dec:	03000600 	movweq	r0, #1536	@ 0x600
    1df0:	200000e8 	andcs	r0, r0, r8, ror #1
    1df4:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1df8:	00000000 	andeq	r0, r0, r0
    1dfc:	0000f000 	andeq	pc, r0, r0
    1e00:	0000f200 	andeq	pc, r0, r0, lsl #4
    1e04:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1e08:	0000f200 	andeq	pc, r0, r0, lsl #4
    1e0c:	00011c00 	andeq	r1, r1, r0, lsl #24
    1e10:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1e14:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    1e20:	00000101 	andeq	r0, r0, r1, lsl #2
    1e24:	0000f000 	andeq	pc, r0, r0
    1e28:	0000f800 	andeq	pc, r0, r0, lsl #16
    1e2c:	50000100 	andpl	r0, r0, r0, lsl #2
    1e30:	000000f8 	strdeq	r0, [r0], -r8
    1e34:	0000010c 	andeq	r0, r0, ip, lsl #2
    1e38:	0c540001 	mrrceq	0, 0, r0, r4, cr1
    1e3c:	16000001 	strne	r0, [r0], -r1
    1e40:	03000001 	movweq	r0, #1
    1e44:	9f017400 	svcls	0x00017400
    1e48:	00000116 	andeq	r0, r0, r6, lsl r1
    1e4c:	0000011c 	andeq	r0, r0, ip, lsl r1
    1e50:	00540001 	subseq	r0, r4, r1
	...
    1e5c:	0000f000 	andeq	pc, r0, r0
    1e60:	0000f800 	andeq	pc, r0, r0, lsl #16
    1e64:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1e70:	00fe0402 	rscseq	r0, lr, r2, lsl #8
    1e74:	00fe0000 	rscseq	r0, lr, r0
    1e78:	00060000 	andeq	r0, r6, r0
    1e7c:	0000e803 	andeq	lr, r0, r3, lsl #16
    1e80:	00009f20 	andeq	r9, r0, r0, lsr #30
    1e84:	00000000 	andeq	r0, r0, r0
    1e88:	00c80000 	sbceq	r0, r8, r0
    1e8c:	00ca0000 	sbceq	r0, sl, r0
    1e90:	00020000 	andeq	r0, r2, r0
    1e94:	00ca007d 	sbceq	r0, sl, sp, ror r0
    1e98:	00f00000 	rscseq	r0, r0, r0
    1e9c:	00020000 	andeq	r0, r2, r0
    1ea0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    1eac:	02000000 	andeq	r0, r0, #0
    1eb0:	00c80002 	sbceq	r0, r8, r2
    1eb4:	00d00000 	sbcseq	r0, r0, r0
    1eb8:	00010000 	andeq	r0, r1, r0
    1ebc:	0000d050 	andeq	sp, r0, r0, asr r0
    1ec0:	0000d400 	andeq	sp, r0, r0, lsl #8
    1ec4:	74000300 	strvc	r0, [r0], #-768	@ 0xfffffd00
    1ec8:	00d49f01 	sbcseq	r9, r4, r1, lsl #30
    1ecc:	00d80000 	sbcseq	r0, r8, r0
    1ed0:	00010000 	andeq	r0, r1, r0
    1ed4:	0000d854 	andeq	sp, r0, r4, asr r8
    1ed8:	0000f000 	andeq	pc, r0, r0
    1edc:	74000300 	strvc	r0, [r0], #-768	@ 0xfffffd00
    1ee0:	00009f01 	andeq	r9, r0, r1, lsl #30
    1ee4:	00000000 	andeq	r0, r0, r0
    1ee8:	009c0000 	addseq	r0, ip, r0
    1eec:	009e0000 	addseq	r0, lr, r0
    1ef0:	00020000 	andeq	r0, r2, r0
    1ef4:	009e007d 	addseq	r0, lr, sp, ror r0
    1ef8:	00c80000 	sbceq	r0, r8, r0
    1efc:	00020000 	andeq	r0, r2, r0
    1f00:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    1f0c:	00020200 	andeq	r0, r2, r0, lsl #4
    1f10:	009c0000 	addseq	r0, ip, r0
    1f14:	00a60000 	adceq	r0, r6, r0
    1f18:	00010000 	andeq	r0, r1, r0
    1f1c:	0000a650 	andeq	sl, r0, r0, asr r6
    1f20:	0000ac00 	andeq	sl, r0, r0, lsl #24
    1f24:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
    1f28:	000000ac 	andeq	r0, r0, ip, lsr #1
    1f2c:	000000b0 	strheq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1f30:	01740003 	cmneq	r4, r3
    1f34:	0000b09f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1f38:	0000c800 	andeq	ip, r0, r0, lsl #16
    1f3c:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
	...
    1f48:	009c0000 	addseq	r0, ip, r0
    1f4c:	00a60000 	adceq	r0, r6, r0
    1f50:	00010000 	andeq	r0, r1, r0
    1f54:	00000051 	andeq	r0, r0, r1, asr r0
    1f58:	00000000 	andeq	r0, r0, r0
    1f5c:	00005200 	andeq	r5, r0, r0, lsl #4
    1f60:	00005400 	andeq	r5, r0, r0, lsl #8
    1f64:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1f68:	00005400 	andeq	r5, r0, r0, lsl #8
    1f6c:	00006600 	andeq	r6, r0, r0, lsl #12
    1f70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1f74:	00006608 	andeq	r6, r0, r8, lsl #12
    1f78:	00006a00 	andeq	r6, r0, r0, lsl #20
    1f7c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1f80:	00006a00 	andeq	r6, r0, r0, lsl #20
    1f84:	00009c00 	andeq	r9, r0, r0, lsl #24
    1f88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1f8c:	00000008 	andeq	r0, r0, r8
    1f90:	00000000 	andeq	r0, r0, r0
    1f94:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    1f98:	6a000000 	bvs	1fa0 <_Min_Stack_Size+0x1ba0>
    1f9c:	01000000 	mrseq	r0, (UNDEF: 0)
    1fa0:	00005100 	andeq	r5, r0, r0, lsl #2
    1fa4:	00000000 	andeq	r0, r0, r0
    1fa8:	03010000 	movweq	r0, #4096	@ 0x1000
    1fac:	00000070 	andeq	r0, r0, r0, ror r0
    1fb0:	00000070 	andeq	r0, r0, r0, ror r0
    1fb4:	ea030006 	b	c1fd4 <_Min_Stack_Size+0xc1bd4>
    1fb8:	9f200001 	svcls	0x00200001
	...
    1fcc:	0000000a 	andeq	r0, r0, sl
    1fd0:	0000001a 	andeq	r0, r0, sl, lsl r0
    1fd4:	1a500001 	bne	1401fe0 <_Min_Stack_Size+0x1401be0>
    1fd8:	2c000000 	stccs	0, cr0, [r0], {-0}
    1fdc:	01000000 	mrseq	r0, (UNDEF: 0)
    1fe0:	002c5300 	eoreq	r5, ip, r0, lsl #6
    1fe4:	002e0000 	eoreq	r0, lr, r0
    1fe8:	00010000 	andeq	r0, r1, r0
    1fec:	00002e50 	andeq	r2, r0, r0, asr lr
    1ff0:	00003000 	andeq	r3, r0, r0
    1ff4:	53000100 	movwpl	r0, #256	@ 0x100
	...
    2000:	001e0000 	andseq	r0, lr, r0
    2004:	002c0000 	eoreq	r0, ip, r0
    2008:	00010000 	andeq	r0, r1, r0
    200c:	00000050 	andeq	r0, r0, r0, asr r0
    2010:	00000000 	andeq	r0, r0, r0
    2014:	0a050300 	beq	142c1c <_Min_Stack_Size+0x14281c>
    2018:	0a000000 	beq	2020 <_Min_Stack_Size+0x1c20>
    201c:	01000000 	mrseq	r0, (UNDEF: 0)
    2020:	00005000 	andeq	r5, r0, r0
	...
    2030:	00060000 	andeq	r0, r6, r0
    2034:	00010000 	andeq	r0, r1, r0
    2038:	00000650 	andeq	r0, r0, r0, asr r6
    203c:	00000a00 	andeq	r0, r0, r0, lsl #20
    2040:	f3000400 	vshl.u8	d0, d0, d0
    2044:	009f5001 	addseq	r5, pc, r1
    2048:	00000000 	andeq	r0, r0, r0
    204c:	02000000 	andeq	r0, r0, #0
    2050:	00003004 	andeq	r3, r0, r4
    2054:	00003000 	andeq	r3, r0, r0
    2058:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2064:	003c0000 	eorseq	r0, ip, r0
    2068:	00500000 	subseq	r0, r0, r0
    206c:	00010000 	andeq	r0, r1, r0
    2070:	00000051 	andeq	r0, r0, r1, asr r0
    2074:	00000000 	andeq	r0, r0, r0
    2078:	3c000000 	stccc	0, cr0, [r0], {-0}
    207c:	50000000 	andpl	r0, r0, r0
    2080:	01000000 	mrseq	r0, (UNDEF: 0)
    2084:	00005000 	andeq	r5, r0, r0
	...
    2090:	000001d8 	ldrdeq	r0, [r0], -r8
    2094:	00000220 	andeq	r0, r0, r0, lsr #4
    2098:	00500001 	subseq	r0, r0, r1
    209c:	00000000 	andeq	r0, r0, r0
    20a0:	bc000000 	stclt	0, cr0, [r0], {-0}
    20a4:	c0000001 	andgt	r0, r0, r1
    20a8:	02000001 	andeq	r0, r0, #1
    20ac:	c0007d00 	andgt	r7, r0, r0, lsl #26
    20b0:	c4000001 	strgt	r0, [r0], #-1
    20b4:	02000001 	andeq	r0, r0, #1
    20b8:	c4047d00 	strgt	r7, [r4], #-3328	@ 0xfffff300
    20bc:	f6000001 			@ <UNDEFINED> instruction: 0xf6000001
    20c0:	02000001 	andeq	r0, r0, #1
    20c4:	f6287d00 			@ <UNDEFINED> instruction: 0xf6287d00
    20c8:	00000001 	andeq	r0, r0, r1
    20cc:	02000002 	andeq	r0, r0, #2
    20d0:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    20dc:	d4000000 	strle	r0, [r0], #-0
    20e0:	da000001 	ble	20ec <_Min_Stack_Size+0x1cec>
    20e4:	01000001 	tsteq	r0, r1
    20e8:	01da5000 	bicseq	r5, sl, r0
    20ec:	01dd0000 	bicseq	r0, sp, r0
    20f0:	00010000 	andeq	r0, r1, r0
    20f4:	00000052 	andeq	r0, r0, r2, asr r0
    20f8:	00000000 	andeq	r0, r0, r0
    20fc:	00000100 	andeq	r0, r0, r0, lsl #2
    2100:	0001d400 	andeq	sp, r1, r0, lsl #8
    2104:	0001da00 	andeq	sp, r1, r0, lsl #20
    2108:	50000100 	andpl	r0, r0, r0, lsl #2
    210c:	000001da 	ldrdeq	r0, [r0], -sl
    2110:	000001dd 	ldrdeq	r0, [r0], -sp
    2114:	00520001 	subseq	r0, r2, r1
    2118:	00000000 	andeq	r0, r0, r0
    211c:	01000000 	mrseq	r0, (UNDEF: 0)
    2120:	0001d400 	andeq	sp, r1, r0, lsl #8
    2124:	0001de00 	andeq	sp, r1, r0, lsl #28
    2128:	5d000100 	stfpls	f0, [r0, #-0]
	...
    2134:	01d40001 	bicseq	r0, r4, r1
    2138:	01de0000 	bicseq	r0, lr, r0
    213c:	00030000 	andeq	r0, r3, r0
    2140:	009f8309 	addseq	r8, pc, r9, lsl #6
    2144:	00000000 	andeq	r0, r0, r0
    2148:	01000000 	mrseq	r0, (UNDEF: 0)
    214c:	0001ec00 	andeq	lr, r1, r0, lsl #24
    2150:	0001f400 	andeq	pc, r1, r0, lsl #8
    2154:	5d000100 	stfpls	f0, [r0, #-0]
	...
    2160:	01ec0001 	mvneq	r0, r1
    2164:	01f40000 	mvnseq	r0, r0
    2168:	00020000 	andeq	r0, r2, r0
    216c:	00009f33 	andeq	r9, r0, r3, lsr pc
    2170:	00000000 	andeq	r0, r0, r0
    2174:	011c0000 	tsteq	ip, r0
    2178:	01200000 			@ <UNDEFINED> instruction: 0x01200000
    217c:	00020000 	andeq	r0, r2, r0
    2180:	0120007d 			@ <UNDEFINED> instruction: 0x0120007d
    2184:	01680000 	cmneq	r8, r0
    2188:	00020000 	andeq	r0, r2, r0
    218c:	0168207d 	smceq	33293	@ 0x820d
    2190:	016e0000 	cmneq	lr, r0
    2194:	00020000 	andeq	r0, r2, r0
    2198:	016e007d 	smceq	57357	@ 0xe00d
    219c:	01bc0000 			@ <UNDEFINED> instruction: 0x01bc0000
    21a0:	00020000 	andeq	r0, r2, r0
    21a4:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    21b0:	011c0000 	tsteq	ip, r0
    21b4:	01250000 			@ <UNDEFINED> instruction: 0x01250000
    21b8:	00010000 	andeq	r0, r1, r0
    21bc:	00012550 	andeq	r2, r1, r0, asr r5
    21c0:	0001bc00 	andeq	fp, r1, r0, lsl #24
    21c4:	f3000400 	vshl.u8	d0, d0, d0
    21c8:	009f5001 	addseq	r5, pc, r1
	...
    21dc:	00011c00 	andeq	r1, r1, r0, lsl #24
    21e0:	00014200 	andeq	r4, r1, r0, lsl #4
    21e4:	51000100 	mrspl	r0, (UNDEF: 16)
    21e8:	00000142 	andeq	r0, r0, r2, asr #2
    21ec:	00000168 	andeq	r0, r0, r8, ror #2
    21f0:	68560001 	ldmdavs	r6, {r0}^
    21f4:	6e000001 	cdpvs	0, 0, cr0, cr0, cr1, {0}
    21f8:	04000001 	streq	r0, [r0], #-1
    21fc:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
    2200:	00016e9f 	muleq	r1, pc, lr	@ <UNPREDICTABLE>
    2204:	0001a600 	andeq	sl, r1, r0, lsl #12
    2208:	56000100 	strpl	r0, [r0], -r0, lsl #2
    220c:	000001a6 	andeq	r0, r0, r6, lsr #3
    2210:	000001bc 			@ <UNDEFINED> instruction: 0x000001bc
    2214:	00510001 	subseq	r0, r1, r1
	...
    2228:	00011c00 	andeq	r1, r1, r0, lsl #24
    222c:	00013a00 	andeq	r3, r1, r0, lsl #20
    2230:	52000100 	andpl	r0, r0, #0, 2
    2234:	0000013a 	andeq	r0, r0, sl, lsr r1
    2238:	00000168 	andeq	r0, r0, r8, ror #2
    223c:	68570001 	ldmdavs	r7, {r0}^
    2240:	6e000001 	cdpvs	0, 0, cr0, cr0, cr1, {0}
    2244:	04000001 	streq	r0, [r0], #-1
    2248:	5201f300 	andpl	pc, r1, #0, 6
    224c:	00016e9f 	muleq	r1, pc, lr	@ <UNPREDICTABLE>
    2250:	0001a600 	andeq	sl, r1, r0, lsl #12
    2254:	57000100 	strpl	r0, [r0, -r0, lsl #2]
    2258:	000001a6 	andeq	r0, r0, r6, lsr #3
    225c:	000001bc 			@ <UNDEFINED> instruction: 0x000001bc
    2260:	00520001 	subseq	r0, r2, r1
	...
    226c:	00012600 	andeq	r2, r1, r0, lsl #12
    2270:	00012a00 	andeq	r2, r1, r0, lsl #20
    2274:	0a000700 	beq	3e7c <_Min_Stack_Size+0x3a7c>
    2278:	007003ff 	ldrshteq	r0, [r0], #-63	@ 0xffffffc1
    227c:	00009f1c 	andeq	r9, r0, ip, lsl pc
    2280:	00000000 	andeq	r0, r0, r0
    2284:	00010000 	andeq	r0, r1, r0
    2288:	00000190 	muleq	r0, r0, r1
    228c:	00000194 	muleq	r0, r4, r1
    2290:	01740003 	cmneq	r4, r3
    2294:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    22a0:	5a000000 	bpl	22a8 <_Min_Stack_Size+0x1ea8>
    22a4:	6d000001 	stcvs	0, cr0, [r0, #-4]
    22a8:	01000001 	tsteq	r0, r1
    22ac:	016e5200 	cmneq	lr, r0, lsl #4
    22b0:	017f0000 	cmneq	pc, r0
    22b4:	00010000 	andeq	r0, r1, r0
    22b8:	00019052 	andeq	r9, r1, r2, asr r0
    22bc:	00019f00 	andeq	r9, r1, r0, lsl #30
    22c0:	52000100 	andpl	r0, r0, #0, 2
	...
    22cc:	000000dc 	ldrdeq	r0, [r0], -ip
    22d0:	000000de 	ldrdeq	r0, [r0], -lr
    22d4:	007d0002 	rsbseq	r0, sp, r2
    22d8:	000000de 	ldrdeq	r0, [r0], -lr
    22dc:	000000fa 	strdeq	r0, [r0], -sl
    22e0:	087d0002 	ldmdaeq	sp!, {r1}^
    22e4:	000000fa 	strdeq	r0, [r0], -sl
    22e8:	00000106 	andeq	r0, r0, r6, lsl #2
    22ec:	007d0002 	rsbseq	r0, sp, r2
	...
    22f8:	000000b0 	strheq	r0, [r0], -r0	@ <UNPREDICTABLE>
    22fc:	000000b2 	strheq	r0, [r0], -r2
    2300:	007d0002 	rsbseq	r0, sp, r2
    2304:	000000b2 	strheq	r0, [r0], -r2
    2308:	000000dc 	ldrdeq	r0, [r0], -ip
    230c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    231c:	000000b0 	strheq	r0, [r0], -r0	@ <UNPREDICTABLE>
    2320:	000000c6 	andeq	r0, r0, r6, asr #1
    2324:	c6500001 	ldrbgt	r0, [r0], -r1
    2328:	dc000000 	stcle	0, cr0, [r0], {-0}
    232c:	04000000 	streq	r0, [r0], #-0
    2330:	5001f300 	andpl	pc, r1, r0, lsl #6
    2334:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    2340:	b0000000 	andlt	r0, r0, r0
    2344:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2348:	01000000 	mrseq	r0, (UNDEF: 0)
    234c:	00cc5100 	sbceq	r5, ip, r0, lsl #2
    2350:	00d40000 	sbcseq	r0, r4, r0
    2354:	00040000 	andeq	r0, r4, r0
    2358:	9f5101f3 	svcls	0x005101f3
    235c:	000000d4 	ldrdeq	r0, [r0], -r4
    2360:	000000dc 	ldrdeq	r0, [r0], -ip
    2364:	00510001 	subseq	r0, r1, r1
	...
    2374:	0000b000 	andeq	fp, r0, r0
    2378:	0000cf00 	andeq	ip, r0, r0, lsl #30
    237c:	52000100 	andpl	r0, r0, #0, 2
    2380:	000000cf 	andeq	r0, r0, pc, asr #1
    2384:	000000d4 	ldrdeq	r0, [r0], -r4
    2388:	01f30004 	mvnseq	r0, r4
    238c:	00d49f52 	sbcseq	r9, r4, r2, asr pc
    2390:	00dc0000 	sbcseq	r0, ip, r0
    2394:	00010000 	andeq	r0, r1, r0
    2398:	00000052 	andeq	r0, r0, r2, asr r0
    239c:	00000000 	andeq	r0, r0, r0
    23a0:	ca000100 	bgt	27a8 <_Min_Stack_Size+0x23a8>
    23a4:	d0000000 	andle	r0, r0, r0
    23a8:	06000000 	streq	r0, [r0], -r0
    23ac:	001a0300 	andseq	r0, sl, r0, lsl #6
    23b0:	009f2000 	addseq	r2, pc, r0
    23b4:	00000000 	andeq	r0, r0, r0
    23b8:	01000000 	mrseq	r0, (UNDEF: 0)
    23bc:	0000ca00 	andeq	ip, r0, r0, lsl #20
    23c0:	0000d000 	andeq	sp, r0, r0
    23c4:	30000200 	andcc	r0, r0, r0, lsl #4
    23c8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    23d8:	00008400 	andeq	r8, r0, r0, lsl #8
    23dc:	00009e00 	andeq	r9, r0, r0, lsl #28
    23e0:	50000100 	andpl	r0, r0, r0, lsl #2
    23e4:	0000009e 	muleq	r0, lr, r0
    23e8:	000000a6 	andeq	r0, r0, r6, lsr #1
    23ec:	01f30004 	mvnseq	r0, r4
    23f0:	00a69f50 	adceq	r9, r6, r0, asr pc
    23f4:	00a80000 	adceq	r0, r8, r0
    23f8:	00010000 	andeq	r0, r1, r0
    23fc:	0000a850 	andeq	sl, r0, r0, asr r8
    2400:	0000b000 	andeq	fp, r0, r0
    2404:	f3000400 	vshl.u8	d0, d0, d0
    2408:	009f5001 	addseq	r5, pc, r1
    240c:	00000000 	andeq	r0, r0, r0
    2410:	50000000 	andpl	r0, r0, r0
    2414:	52000000 	andpl	r0, r0, #0
    2418:	02000000 	andeq	r0, r0, #0
    241c:	52007d00 	andpl	r7, r0, #0, 26
    2420:	84000000 	strhi	r0, [r0], #-0
    2424:	02000000 	andeq	r0, r0, #0
    2428:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    2438:	50000101 	andpl	r0, r0, r1, lsl #2
    243c:	57000000 	strpl	r0, [r0, -r0]
    2440:	01000000 	mrseq	r0, (UNDEF: 0)
    2444:	00575000 	subseq	r5, r7, r0
    2448:	00780000 	rsbseq	r0, r8, r0
    244c:	00010000 	andeq	r0, r1, r0
    2450:	00007852 	andeq	r7, r0, r2, asr r8
    2454:	00007800 	andeq	r7, r0, r0, lsl #16
    2458:	72000300 	andvc	r0, r0, #0, 6
    245c:	00789f7f 	rsbseq	r9, r8, pc, ror pc
    2460:	00840000 	addeq	r0, r4, r0
    2464:	00010000 	andeq	r0, r1, r0
    2468:	00000052 	andeq	r0, r0, r2, asr r0
    246c:	00000000 	andeq	r0, r0, r0
    2470:	03030000 	movweq	r0, #12288	@ 0x3000
    2474:	00005000 	andeq	r5, r0, r0
    2478:	00006400 	andeq	r6, r0, r0, lsl #8
    247c:	51000100 	mrspl	r0, (UNDEF: 16)
    2480:	00000064 	andeq	r0, r0, r4, rrx
    2484:	00000084 	andeq	r0, r0, r4, lsl #1
    2488:	00500001 	subseq	r0, r0, r1
	...
    2494:	00000200 	andeq	r0, r0, r0, lsl #4
    2498:	00005800 	andeq	r5, r0, r0, lsl #16
    249c:	00006200 	andeq	r6, r0, r0, lsl #4
    24a0:	50000100 	andpl	r0, r0, r0, lsl #2
    24a4:	00000064 	andeq	r0, r0, r4, rrx
    24a8:	00000066 	andeq	r0, r0, r6, rrx
    24ac:	66510001 	ldrbvs	r0, [r1], -r1
    24b0:	84000000 	strhi	r0, [r0], #-0
    24b4:	04000000 	streq	r0, [r0], #-0
    24b8:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
    24bc:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    24c8:	00006400 	andeq	r6, r0, r0, lsl #8
    24cc:	00007400 	andeq	r7, r0, r0, lsl #8
    24d0:	53000100 	movwpl	r0, #256	@ 0x100
    24d4:	0000007c 	andeq	r0, r0, ip, ror r0
    24d8:	00000084 	andeq	r0, r0, r4, lsl #1
    24dc:	00530001 	subseq	r0, r3, r1
    24e0:	00000000 	andeq	r0, r0, r0
    24e4:	14000000 	strne	r0, [r0], #-0
    24e8:	16000000 	strne	r0, [r0], -r0
    24ec:	02000000 	andeq	r0, r0, #0
    24f0:	16007d00 	strne	r7, [r0], -r0, lsl #26
    24f4:	50000000 	andpl	r0, r0, r0
    24f8:	02000000 	andeq	r0, r0, #0
    24fc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    250c:	14000101 	strne	r0, [r0], #-257	@ 0xfffffeff
    2510:	1f000000 	svcne	0x00000000
    2514:	01000000 	mrseq	r0, (UNDEF: 0)
    2518:	001f5000 	andseq	r5, pc, r0
    251c:	003e0000 	eorseq	r0, lr, r0
    2520:	00010000 	andeq	r0, r1, r0
    2524:	00003e54 	andeq	r3, r0, r4, asr lr
    2528:	00004800 	andeq	r4, r0, r0, lsl #16
    252c:	74000300 	strvc	r0, [r0], #-768	@ 0xfffffd00
    2530:	00489f7f 	subeq	r9, r8, pc, ror pc
    2534:	00500000 	subseq	r0, r0, r0
    2538:	00010000 	andeq	r0, r1, r0
    253c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2548:	00001400 	andeq	r1, r0, r0, lsl #8
    254c:	00003200 	andeq	r3, r0, r0, lsl #4
    2550:	51000100 	mrspl	r0, (UNDEF: 16)
    2554:	00000032 	andeq	r0, r0, r2, lsr r0
    2558:	00000050 	andeq	r0, r0, r0, asr r0
    255c:	01f30004 	mvnseq	r0, r4
    2560:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    256c:	00300000 	eorseq	r0, r0, r0
    2570:	00420000 	subeq	r0, r2, r0
    2574:	00010000 	andeq	r0, r1, r0
    2578:	00004852 	andeq	r4, r0, r2, asr r8
    257c:	00005000 	andeq	r5, r0, r0
    2580:	52000100 	andpl	r0, r0, #0, 2
	...
    258c:	00000003 	andeq	r0, r0, r3
    2590:	00000030 	andeq	r0, r0, r0, lsr r0
    2594:	00000032 	andeq	r0, r0, r2, lsr r0
    2598:	32510001 	subscc	r0, r1, #1
    259c:	50000000 	andpl	r0, r0, r0
    25a0:	04000000 	streq	r0, [r0], #-0
    25a4:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
    25a8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    25b8:	00010600 	andeq	r0, r1, r0, lsl #12
    25bc:	00010c00 	andeq	r0, r1, r0, lsl #24
    25c0:	50000100 	andpl	r0, r0, r0, lsl #2
    25c4:	0000010c 	andeq	r0, r0, ip, lsl #2
    25c8:	00000110 	andeq	r0, r0, r0, lsl r1
    25cc:	01f30004 	mvnseq	r0, r4
    25d0:	01109f50 	tsteq	r0, r0, asr pc
    25d4:	01120000 	tsteq	r2, r0
    25d8:	00010000 	andeq	r0, r1, r0
    25dc:	00011250 	andeq	r1, r1, r0, asr r2
    25e0:	00011c00 	andeq	r1, r1, r0, lsl #24
    25e4:	f3000400 	vshl.u8	d0, d0, d0
    25e8:	009f5001 	addseq	r5, pc, r1
    25ec:	00000000 	andeq	r0, r0, r0
    25f0:	01000000 	mrseq	r0, (UNDEF: 0)
    25f4:	00010a00 	andeq	r0, r1, r0, lsl #20
    25f8:	00010c00 	andeq	r0, r1, r0, lsl #24
    25fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2610:	00000008 	andeq	r0, r0, r8
    2614:	0000000a 	andeq	r0, r0, sl
    2618:	00760005 	rsbseq	r0, r6, r5
    261c:	0a9f2632 	beq	fe7cbeec <BootRAM+0xd73c68d>
    2620:	1c000000 	stcne	0, cr0, [r0], {-0}
    2624:	01000000 	mrseq	r0, (UNDEF: 0)
    2628:	00245600 	eoreq	r5, r4, r0, lsl #12
    262c:	00260000 	eoreq	r0, r6, r0
    2630:	00050000 	andeq	r0, r5, r0
    2634:	26320076 			@ <UNDEFINED> instruction: 0x26320076
    2638:	0000269f 	muleq	r0, pc, r6	@ <UNPREDICTABLE>
    263c:	00003800 	andeq	r3, r0, r0, lsl #16
    2640:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    264c:	00000001 	andeq	r0, r0, r1
    2650:	00010100 	andeq	r0, r1, r0, lsl #2
    2654:	00000001 	andeq	r0, r0, r1
    2658:	00010100 	andeq	r0, r1, r0, lsl #2
    265c:	00000008 	andeq	r0, r0, r8
    2660:	0000000e 	andeq	r0, r0, lr
    2664:	9f300002 	svcls	0x00300002
    2668:	0000000e 	andeq	r0, r0, lr
    266c:	00000014 	andeq	r0, r0, r4, lsl r0
    2670:	14540001 	ldrbne	r0, [r4], #-1
    2674:	16000000 	strne	r0, [r0], -r0
    2678:	03000000 	movweq	r0, #0
    267c:	9f7f7400 	svcls	0x007f7400
    2680:	00000016 	andeq	r0, r0, r6, lsl r0
    2684:	0000001a 	andeq	r0, r0, sl, lsl r0
    2688:	24540001 	ldrbcs	r0, [r4], #-1
    268c:	2a000000 	bcs	2694 <_Min_Stack_Size+0x2294>
    2690:	02000000 	andeq	r0, r0, #0
    2694:	2a9f3000 	bcs	fe7ce69c <BootRAM+0xd73ee3d>
    2698:	30000000 	andcc	r0, r0, r0
    269c:	01000000 	mrseq	r0, (UNDEF: 0)
    26a0:	00305400 	eorseq	r5, r0, r0, lsl #8
    26a4:	00320000 	eorseq	r0, r2, r0
    26a8:	00030000 	andeq	r0, r3, r0
    26ac:	329f7f74 	addscc	r7, pc, #116, 30	@ 0x1d0
    26b0:	36000000 	strcc	r0, [r0], -r0
    26b4:	01000000 	mrseq	r0, (UNDEF: 0)
    26b8:	00005400 	andeq	r5, r0, r0, lsl #8
    26bc:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000150 	stmdaeq	r0, {r4, r6, r8}
  14:	00000216 	andeq	r0, r0, r6, lsl r2
  18:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
  1c:	000000c0 	andeq	r0, r0, r0, asr #1
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	09830002 	stmibeq	r3, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0aa30002 	beq	fe8c005c <BootRAM+0xd8307fd>
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
  5c:	00000680 	andeq	r0, r0, r0, lsl #13
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	1d870002 	stcne	0, cr0, [r7, #8]
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000a04 	stmdaeq	r0, {r2, r9, fp}
  7c:	000004b6 			@ <UNDEFINED> instruction: 0x000004b6
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	35bd0002 	ldrcc	r0, [sp, #2]!
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	08000ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp}
  9c:	000005b4 			@ <UNDEFINED> instruction: 0x000005b4
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	4b320002 	blmi	c800bc <_Min_Stack_Size+0xc7fcbc>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	08001470 	stmdaeq	r0, {r4, r5, r6, sl, ip}
  bc:	00000200 	andeq	r0, r0, r0, lsl #4
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	54bc0002 	ldrtpl	r0, [ip], #2
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
  dc:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
   4:	080001f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8}
   8:	080001fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8}
   c:	08000200 	stmdaeq	r0, {r9}
	...
  18:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  1c:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
  20:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
  24:	08000272 	stmdaeq	r0, {r1, r4, r5, r6, r9}
	...
  30:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
  34:	08000292 	stmdaeq	r0, {r1, r4, r7, r9}
  38:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
  3c:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
	...
  48:	08000302 	stmdaeq	r0, {r1, r8, r9}
  4c:	08000302 	stmdaeq	r0, {r1, r8, r9}
  50:	08000306 	stmdaeq	r0, {r1, r2, r8, r9}
  54:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
	...
  60:	08000328 	stmdaeq	r0, {r3, r5, r8, r9}
  64:	08000328 	stmdaeq	r0, {r3, r5, r8, r9}
  68:	0800032c 	stmdaeq	r0, {r2, r3, r5, r8, r9}
  6c:	08000332 	stmdaeq	r0, {r1, r4, r5, r8, r9}
	...
  78:	08000150 	stmdaeq	r0, {r4, r6, r8}
  7c:	08000366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9}
  80:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
  84:	080017c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, ip}
	...
  90:	00000014 	andeq	r0, r0, r4, lsl r0
  94:	00000016 	andeq	r0, r0, r6, lsl r0
  98:	00000038 	andeq	r0, r0, r8, lsr r0
  9c:	00000038 	andeq	r0, r0, r8, lsr r0
  a0:	00000040 	andeq	r0, r0, r0, asr #32
  a4:	00000052 	andeq	r0, r0, r2, asr r0
	...
  b0:	000002fa 	strdeq	r0, [r0], -sl
  b4:	000002fe 	strdeq	r0, [r0], -lr
  b8:	000002fe 	strdeq	r0, [r0], -lr
  bc:	0000034e 	andeq	r0, r0, lr, asr #6
	...
  c8:	00000388 	andeq	r0, r0, r8, lsl #7
  cc:	0000038a 	andeq	r0, r0, sl, lsl #7
  d0:	00000392 	muleq	r0, r2, r3
  d4:	00000394 	muleq	r0, r4, r3
  d8:	0000039c 	muleq	r0, ip, r3
  dc:	000003ac 	andeq	r0, r0, ip, lsr #7
	...
  e8:	00000436 	andeq	r0, r0, r6, lsr r4
  ec:	00000438 	andeq	r0, r0, r8, lsr r4
  f0:	00000452 	andeq	r0, r0, r2, asr r4
  f4:	00000458 	andeq	r0, r0, r8, asr r4
  f8:	0000047c 	andeq	r0, r0, ip, ror r4
  fc:	00000488 	andeq	r0, r0, r8, lsl #9
	...
 108:	00000494 	muleq	r0, r4, r4
 10c:	00000496 	muleq	r0, r6, r4
 110:	0000049e 	muleq	r0, lr, r4
 114:	000004a2 	andeq	r0, r0, r2, lsr #9
	...
 120:	00000546 	andeq	r0, r0, r6, asr #10
 124:	00000546 	andeq	r0, r0, r6, asr #10
 128:	00000548 	andeq	r0, r0, r8, asr #10
 12c:	00000552 	andeq	r0, r0, r2, asr r5
	...
 138:	00000562 	andeq	r0, r0, r2, ror #10
 13c:	0000057a 	andeq	r0, r0, sl, ror r5
 140:	000005be 			@ <UNDEFINED> instruction: 0x000005be
 144:	000005f6 	strdeq	r0, [r0], -r6
 148:	000005f8 	strdeq	r0, [r0], -r8
 14c:	00000616 	andeq	r0, r0, r6, lsl r6
	...
 158:	000005dc 	ldrdeq	r0, [r0], -ip
 15c:	000005de 	ldrdeq	r0, [r0], -lr
 160:	000005e6 	andeq	r0, r0, r6, ror #11
 164:	000005f6 	strdeq	r0, [r0], -r6
	...
 170:	00000580 	andeq	r0, r0, r0, lsl #11
 174:	00000584 	andeq	r0, r0, r4, lsl #11
 178:	00000622 	andeq	r0, r0, r2, lsr #12
 17c:	0000062a 	andeq	r0, r0, sl, lsr #12
	...
 188:	0000059c 	muleq	r0, ip, r5
 18c:	000005a0 	andeq	r0, r0, r0, lsr #11
 190:	000005a4 	andeq	r0, r0, r4, lsr #11
 194:	000005a8 	andeq	r0, r0, r8, lsr #11
	...
 1a0:	00000004 	andeq	r0, r0, r4
 1a4:	00000008 	andeq	r0, r0, r8
 1a8:	0000000a 	andeq	r0, r0, sl
 1ac:	00000014 	andeq	r0, r0, r4, lsl r0
 1b0:	00000018 	andeq	r0, r0, r8, lsl r0
 1b4:	00000030 	andeq	r0, r0, r0, lsr r0
 1b8:	00000032 	andeq	r0, r0, r2, lsr r0
 1bc:	0000003e 	andeq	r0, r0, lr, lsr r0
	...
 1c8:	000003b4 			@ <UNDEFINED> instruction: 0x000003b4
 1cc:	000003b4 			@ <UNDEFINED> instruction: 0x000003b4
 1d0:	000003b8 			@ <UNDEFINED> instruction: 0x000003b8
 1d4:	000003c6 	andeq	r0, r0, r6, asr #7
	...
 1e0:	00000404 	andeq	r0, r0, r4, lsl #8
 1e4:	00000408 	andeq	r0, r0, r8, lsl #8
 1e8:	00000424 	andeq	r0, r0, r4, lsr #8
 1ec:	00000428 	andeq	r0, r0, r8, lsr #8
	...
 1f8:	0000005c 	andeq	r0, r0, ip, asr r0
 1fc:	00000062 	andeq	r0, r0, r2, rrx
 200:	00000066 	andeq	r0, r0, r6, rrx
 204:	0000006a 	andeq	r0, r0, sl, rrx
	...
 210:	000000f4 	strdeq	r0, [r0], -r4
 214:	000000f8 	strdeq	r0, [r0], -r8
 218:	000000fe 	strdeq	r0, [r0], -lr
 21c:	00000102 	andeq	r0, r0, r2, lsl #2
	...
 228:	00000122 	andeq	r0, r0, r2, lsr #2
 22c:	00000126 	andeq	r0, r0, r6, lsr #2
 230:	00000148 	andeq	r0, r0, r8, asr #2
 234:	0000014c 	andeq	r0, r0, ip, asr #2
	...
 240:	000001d4 	ldrdeq	r0, [r0], -r4
 244:	000001d6 	ldrdeq	r0, [r0], -r6
 248:	000001d8 	ldrdeq	r0, [r0], -r8
 24c:	00000220 	andeq	r0, r0, r0, lsr #4
	...
 258:	000002b4 			@ <UNDEFINED> instruction: 0x000002b4
 25c:	000002b4 			@ <UNDEFINED> instruction: 0x000002b4
 260:	000002b6 			@ <UNDEFINED> instruction: 0x000002b6
 264:	000002ba 			@ <UNDEFINED> instruction: 0x000002ba
 268:	000002bc 			@ <UNDEFINED> instruction: 0x000002bc
 26c:	000002c0 	andeq	r0, r0, r0, asr #5
	...
 278:	000002ba 			@ <UNDEFINED> instruction: 0x000002ba
 27c:	000002bc 			@ <UNDEFINED> instruction: 0x000002bc
 280:	000002c0 	andeq	r0, r0, r0, asr #5
 284:	000002c2 	andeq	r0, r0, r2, asr #5
 288:	000002c4 	andeq	r0, r0, r4, asr #5
 28c:	000002d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 290:	000002d2 	ldrdeq	r0, [r0], -r2
 294:	000002da 	ldrdeq	r0, [r0], -sl
 298:	000002dc 	ldrdeq	r0, [r0], -ip
 29c:	000002e6 	andeq	r0, r0, r6, ror #5
	...
 2a8:	000003c0 	andeq	r0, r0, r0, asr #7
 2ac:	000003e6 	andeq	r0, r0, r6, ror #7
 2b0:	00000406 	andeq	r0, r0, r6, lsl #8
 2b4:	00000444 	andeq	r0, r0, r4, asr #8
	...
 2c0:	00000486 	andeq	r0, r0, r6, lsl #9
 2c4:	0000048a 	andeq	r0, r0, sl, lsl #9
 2c8:	00000534 	andeq	r0, r0, r4, lsr r5
 2cc:	0000053c 	andeq	r0, r0, ip, lsr r5
	...
 2d8:	0000048a 	andeq	r0, r0, sl, lsl #9
 2dc:	000004e4 	andeq	r0, r0, r4, ror #9
 2e0:	00000546 	andeq	r0, r0, r6, asr #10
 2e4:	0000058a 	andeq	r0, r0, sl, lsl #11
	...
 2f0:	00000566 	andeq	r0, r0, r6, ror #10
 2f4:	00000568 	andeq	r0, r0, r8, ror #10
 2f8:	0000056a 	andeq	r0, r0, sl, ror #10
 2fc:	0000056c 	andeq	r0, r0, ip, ror #10
	...
 308:	00000106 	andeq	r0, r0, r6, lsl #2
 30c:	00000108 	andeq	r0, r0, r8, lsl #2
 310:	0000010a 	andeq	r0, r0, sl, lsl #2
 314:	0000010c 	andeq	r0, r0, ip, lsl #2
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000005d9 	ldrdeq	r0, [r0], -r9
       4:	00a70003 	adceq	r0, r7, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	@ 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	@ 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	@ <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	@ 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	@ 0xb400000
      44:	32312f69 	eorscc	r2, r1, #420	@ 0x1a4
      48:	312e322e 			@ <UNDEFINED> instruction: 0x312e322e
      4c:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
      50:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
      54:	616d0000 	cmnvs	sp, r0
      58:	632e6e69 			@ <UNDEFINED> instruction: 0x632e6e69
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	636f6c63 	cmnvs	pc, #25344	@ 0x6300
      64:	00682e6b 	rsbeq	r2, r8, fp, ror #28
      68:	63000001 	movwvs	r0, #1
      6c:	5f65726f 	svcpl	0x0065726f
      70:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
      74:	00020068 	andeq	r0, r2, r8, rrx
      78:	64747300 	ldrbtvs	r7, [r4], #-768	@ 0xfffffd00
      7c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
      80:	00030068 	andeq	r0, r3, r8, rrx
      84:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      88:	316c3233 	cmncc	ip, r3, lsr r2
      8c:	63783135 	cmnvs	r8, #1073741837	@ 0x4000000d
      90:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
      94:	73750000 	cmnvc	r5, #0
      98:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
      9c:	00682e62 	rsbeq	r2, r8, r2, ror #28
      a0:	73000001 	movwvc	r0, #1
      a4:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
      a8:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      ac:	00000100 	andeq	r0, r0, r0, lsl #2
      b0:	05020400 	streq	r0, [r2, #-1024]	@ 0xfffffc00
      b4:	0205000e 	andeq	r0, r5, #14
      b8:	08000150 	stmdaeq	r0, {r4, r6, r8}
      bc:	05011503 	streq	r1, [r1, #-1283]	@ 0xfffffafd
      c0:	06051303 	streq	r1, [r5], -r3, lsl #6
      c4:	1f210106 	svcne	0x00210106
      c8:	05201005 	streq	r1, [r0, #-5]!
      cc:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
      d0:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
      d4:	0305200b 	movweq	r2, #20491	@ 0x500b
      d8:	06053e06 	streq	r3, [r5], -r6, lsl #28
      dc:	0c050106 	stfeqs	f0, [r5], {6}
      e0:	06030520 	streq	r0, [r3], -r0, lsr #10
      e4:	0606053d 			@ <UNDEFINED> instruction: 0x0606053d
      e8:	200c0501 	andcs	r0, ip, r1, lsl #10
      ec:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
      f0:	01060605 	tsteq	r6, r5, lsl #12
      f4:	05200c05 	streq	r0, [r0, #-3077]!	@ 0xfffff3fb
      f8:	053c061e 	ldreq	r0, [ip, #-1566]!	@ 0xfffff9e2
      fc:	04020042 	streq	r0, [r2], #-66	@ 0xffffffbe
     100:	24050102 	strcs	r0, [r5], #-258	@ 0xfffffefe
     104:	02040200 	andeq	r0, r4, #0, 4
     108:	00290501 	eoreq	r0, r9, r1, lsl #10
     10c:	06020402 	streq	r0, [r2], -r2, lsl #8
     110:	00240501 	eoreq	r0, r4, r1, lsl #10
     114:	20020402 	andcs	r0, r2, r2, lsl #8
     118:	31060305 	tstcc	r6, r5, lsl #6
     11c:	01060605 	tsteq	r6, r5, lsl #12
     120:	05200c05 	streq	r0, [r0, #-3077]!	@ 0xfffff3fb
     124:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
     128:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
     12c:	0305200c 	movweq	r2, #20492	@ 0x500c
     130:	06053d06 	streq	r3, [r5], -r6, lsl #26
     134:	0c050106 	stfeqs	f0, [r5], {6}
     138:	06030520 	streq	r0, [r3], -r0, lsr #10
     13c:	060c053e 			@ <UNDEFINED> instruction: 0x060c053e
     140:	06030501 	streq	r0, [r3], -r1, lsl #10
     144:	060c053d 			@ <UNDEFINED> instruction: 0x060c053d
     148:	06030501 	streq	r0, [r3], -r1, lsl #10
     14c:	0606052f 	streq	r0, [r6], -pc, lsr #10
     150:	200c0501 	andcs	r0, ip, r1, lsl #10
     154:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
     158:	02002605 	andeq	r2, r0, #5242880	@ 0x500000
     15c:	05010104 	streq	r0, [r1, #-260]	@ 0xfffffefc
     160:	04020009 	streq	r0, [r2], #-9
     164:	0e050101 	adfeqs	f0, f5, f1
     168:	01040200 	mrseq	r0, R12_usr
     16c:	09050106 	stmdbeq	r5, {r1, r2, r8}
     170:	01040200 	mrseq	r0, R12_usr
     174:	06030520 	streq	r0, [r3], -r0, lsr #10
     178:	06060530 			@ <UNDEFINED> instruction: 0x06060530
     17c:	200d0501 	andcs	r0, sp, r1, lsl #10
     180:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
     184:	01060605 	tsteq	r6, r5, lsl #12
     188:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
     18c:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
     190:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
     194:	0305200d 	movweq	r2, #20493	@ 0x500d
     198:	06054106 	streq	r4, [r5], -r6, lsl #2
     19c:	0c050106 	stfeqs	f0, [r5], {6}
     1a0:	06030520 	streq	r0, [r3], -r0, lsr #10
     1a4:	060c053d 			@ <UNDEFINED> instruction: 0x060c053d
     1a8:	2f010501 	svccs	0x00010501
     1ac:	94061f05 	strls	r1, [r6], #-3845	@ 0xfffff0fb
     1b0:	13130305 	tstne	r3, #335544320	@ 0x14000000
     1b4:	06070515 			@ <UNDEFINED> instruction: 0x06070515
     1b8:	06030501 	streq	r0, [r3], -r1, lsl #10
     1bc:	0607052f 	streq	r0, [r7], -pc, lsr #10
     1c0:	06030501 	streq	r0, [r3], -r1, lsl #10
     1c4:	0d05132f 	stceq	3, cr1, [r5, #-188]	@ 0xffffff44
     1c8:	03050106 	movweq	r0, #20742	@ 0x5106
     1cc:	0c052106 	stfeqs	f2, [r5], {6}
     1d0:	060d0501 	streq	r0, [sp], -r1, lsl #10
     1d4:	06050511 			@ <UNDEFINED> instruction: 0x06050511
     1d8:	05010630 	streq	r0, [r1, #-1584]	@ 0xfffff9d0
     1dc:	0176031f 	cmneq	r6, pc, lsl r3
     1e0:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
     1e4:	03060304 	movweq	r0, #25348	@ 0x6304
     1e8:	02002e0a 	andeq	r2, r0, #10, 28	@ 0xa0
     1ec:	00200304 	eoreq	r0, r0, r4, lsl #6
     1f0:	06030402 	streq	r0, [r3], -r2, lsl #8
     1f4:	04020001 	streq	r0, [r2], #-1
     1f8:	02002003 	andeq	r2, r0, #3
     1fc:	20060404 	andcs	r0, r6, r4, lsl #8
     200:	04040200 	streq	r0, [r4], #-512	@ 0xfffffe00
     204:	000c0513 	andeq	r0, ip, r3, lsl r5
     208:	06040402 	streq	r0, [r4], -r2, lsl #8
     20c:	00070501 	andeq	r0, r7, r1, lsl #10
     210:	20040402 	andcs	r0, r4, r2, lsl #8
     214:	02001505 	andeq	r1, r0, #20971520	@ 0x1400000
     218:	3a060204 	bcc	180a30 <_Min_Stack_Size+0x180630>
     21c:	02000c05 	andeq	r0, r0, #1280	@ 0x500
     220:	00010204 	andeq	r0, r1, r4, lsl #4
     224:	06020402 	streq	r0, [r2], -r2, lsl #8
     228:	40190520 	andsmi	r0, r9, r0, lsr #10
     22c:	0603052e 	streq	r0, [r3], -lr, lsr #10
     230:	05201f03 	streq	r1, [r0, #-3843]!	@ 0xfffff0fd
     234:	05010608 	streq	r0, [r1, #-1544]	@ 0xfffff9f8
     238:	08052507 	stmdaeq	r5, {r0, r1, r2, r8, sl, sp}
     23c:	200e051b 	andcs	r0, lr, fp, lsl r5
     240:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
     244:	01060805 	tsteq	r6, r5, lsl #16
     248:	05200e05 	streq	r0, [r0, #-3589]!	@ 0xfffff1fb
     24c:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
     250:	05010608 	streq	r0, [r1, #-1544]	@ 0xfffff9f8
     254:	0305200e 	movweq	r2, #20494	@ 0x500e
     258:	06053e06 	streq	r3, [r5], -r6, lsl #28
     25c:	10050106 	andne	r0, r5, r6, lsl #2
     260:	0603052e 	streq	r0, [r3], -lr, lsr #10
     264:	0607053d 			@ <UNDEFINED> instruction: 0x0607053d
     268:	06030501 	streq	r0, [r3], -r1, lsl #10
     26c:	06070521 	streq	r0, [r7], -r1, lsr #10
     270:	06030501 	streq	r0, [r3], -r1, lsl #10
     274:	0607052f 	streq	r0, [r7], -pc, lsr #10
     278:	06030501 	streq	r0, [r3], -r1, lsl #10
     27c:	060b052f 	streq	r0, [fp], -pc, lsr #10
     280:	06030501 	streq	r0, [r3], -r1, lsl #10
     284:	06070523 	streq	r0, [r7], -r3, lsr #10
     288:	06030501 	streq	r0, [r3], -r1, lsl #10
     28c:	06070521 	streq	r0, [r7], -r1, lsr #10
     290:	06030501 	streq	r0, [r3], -r1, lsl #10
     294:	06050530 			@ <UNDEFINED> instruction: 0x06050530
     298:	13210601 			@ <UNDEFINED> instruction: 0x13210601
     29c:	06090513 			@ <UNDEFINED> instruction: 0x06090513
     2a0:	06030501 	streq	r0, [r3], -r1, lsl #10
     2a4:	13141335 	tstne	r4, #-738197504	@ 0xd4000000
     2a8:	06070514 			@ <UNDEFINED> instruction: 0x06070514
     2ac:	06030501 	streq	r0, [r3], -r1, lsl #10
     2b0:	0d05142f 	cfstrseq	mvf1, [r5, #-188]	@ 0xffffff44
     2b4:	03050106 	movweq	r0, #20742	@ 0x5106
     2b8:	06052206 	streq	r2, [r5], -r6, lsl #4
     2bc:	0b050106 	bleq	1406dc <_Min_Stack_Size+0x1402dc>
     2c0:	06030520 	streq	r0, [r3], -r0, lsr #10
     2c4:	010c053d 	tsteq	ip, sp, lsr r5
     2c8:	11060b05 	tstne	r6, r5, lsl #22
     2cc:	06050531 			@ <UNDEFINED> instruction: 0x06050531
     2d0:	0001061f 	andeq	r0, r1, pc, lsl r6
     2d4:	06030402 	streq	r0, [r3], -r2, lsl #8
     2d8:	0402002e 	streq	r0, [r2], #-46	@ 0xffffffd2
     2dc:	02002003 	andeq	r2, r0, #3
     2e0:	01060304 	tsteq	r6, r4, lsl #6
     2e4:	03040200 	movweq	r0, #16896	@ 0x4200
     2e8:	04020020 	streq	r0, [r2], #-32	@ 0xffffffe0
     2ec:	00200604 	eoreq	r0, r0, r4, lsl #12
     2f0:	13040402 	movwne	r0, #17410	@ 0x4402
     2f4:	02000b05 	andeq	r0, r0, #5120	@ 0x1400
     2f8:	01060404 	tsteq	r6, r4, lsl #8
     2fc:	02000705 	andeq	r0, r0, #1310720	@ 0x140000
     300:	05200404 	streq	r0, [r0, #-1028]!	@ 0xfffffbfc
     304:	04020015 	streq	r0, [r2], #-21	@ 0xffffffeb
     308:	052c0602 	streq	r0, [ip, #-1538]!	@ 0xfffff9fe
     30c:	0402000c 	streq	r0, [r2], #-12
     310:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
     314:	20060204 	andcs	r0, r6, r4, lsl #4
     318:	05401905 	strbeq	r1, [r0, #-2309]	@ 0xfffff6fb
     31c:	6b030605 	blvs	c1b38 <_Min_Stack_Size+0xc1738>
     320:	0513133c 	ldreq	r1, [r3, #-828]	@ 0xfffffcc4
     324:	2e010609 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx9
     328:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
     32c:	03060304 	movweq	r0, #25348	@ 0x6304
     330:	0200201a 	andeq	r2, r0, #26
     334:	00200304 	eoreq	r0, r0, r4, lsl #6
     338:	06030402 	streq	r0, [r3], -r2, lsl #8
     33c:	04020001 	streq	r0, [r2], #-1
     340:	02002003 	andeq	r2, r0, #3
     344:	20060404 	andcs	r0, r6, r4, lsl #8
     348:	04040200 	streq	r0, [r4], #-512	@ 0xfffffe00
     34c:	000c0513 	andeq	r0, ip, r3, lsl r5
     350:	06040402 	streq	r0, [r4], -r2, lsl #8
     354:	00130501 	andseq	r0, r3, r1, lsl #10
     358:	20040402 	andcs	r0, r4, r2, lsl #8
     35c:	02000705 	andeq	r0, r0, #1310720	@ 0x140000
     360:	052e0404 	streq	r0, [lr, #-1028]!	@ 0xfffffbfc
     364:	04020015 	streq	r0, [r2], #-21	@ 0xffffffeb
     368:	052c0602 	streq	r0, [ip, #-1538]!	@ 0xfffff9fe
     36c:	0402000c 	streq	r0, [r2], #-12
     370:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
     374:	20060204 	andcs	r0, r6, r4, lsl #4
     378:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
     37c:	0b050106 	bleq	14079c <_Min_Stack_Size+0x14039c>
     380:	05017403 	streq	r7, [r1, #-1027]	@ 0xfffffbfd
     384:	0f030603 	svceq	0x00030603
     388:	0505143c 	streq	r1, [r5, #-1084]	@ 0xfffffbc4
     38c:	01050106 	tsteq	r5, r6, lsl #2
     390:	0603053e 			@ <UNDEFINED> instruction: 0x0603053e
     394:	14207203 	strtne	r7, [r0], #-515	@ 0xfffffdfd
     398:	01060705 	tsteq	r6, r5, lsl #14
     39c:	21060305 	tstcs	r6, r5, lsl #6
     3a0:	060c0513 			@ <UNDEFINED> instruction: 0x060c0513
     3a4:	1c070516 	cfstr32ne	mvfx0, [r7], {22}
     3a8:	2f060305 	svccs	0x00060305
     3ac:	01060d05 	tsteq	r6, r5, lsl #26
     3b0:	21060305 	tstcs	r6, r5, lsl #6
     3b4:	05010c05 	streq	r0, [r1, #-3077]	@ 0xfffff3fb
     3b8:	2e11060d 	cfmsub32cs	mvax0, mvfx0, mvfx1, mvfx13
     3bc:	03060305 	movweq	r0, #25349	@ 0x6305
     3c0:	15207fb4 	strne	r7, [r0, #-4020]!	@ 0xfffff04c
     3c4:	01060605 	tsteq	r6, r5, lsl #12
     3c8:	05200b05 	streq	r0, [r0, #-2821]!	@ 0xfffff4fb
     3cc:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
     3d0:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
     3d4:	0305200b 	movweq	r2, #20491	@ 0x500b
     3d8:	06053d06 	streq	r3, [r5], -r6, lsl #26
     3dc:	0b050106 	bleq	1407fc <_Min_Stack_Size+0x1403fc>
     3e0:	06030520 	streq	r0, [r3], -r0, lsr #10
     3e4:	0606053d 			@ <UNDEFINED> instruction: 0x0606053d
     3e8:	200b0501 	andcs	r0, fp, r1, lsl #10
     3ec:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
     3f0:	01060605 	tsteq	r6, r5, lsl #12
     3f4:	05200b05 	streq	r0, [r0, #-2821]!	@ 0xfffff4fb
     3f8:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
     3fc:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
     400:	0305200b 	movweq	r2, #20491	@ 0x500b
     404:	05053f06 	streq	r3, [r5, #-3846]	@ 0xfffff0fa
     408:	21060106 	tstcs	r6, r6, lsl #2
     40c:	01060805 	tsteq	r6, r5, lsl #16
     410:	1d230d05 	stcne	13, cr0, [r3, #-20]!	@ 0xffffffec
     414:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
     418:	05010e05 	streq	r0, [r1, #-3589]	@ 0xfffff1fb
     41c:	0511060d 	ldreq	r0, [r1, #-1549]	@ 0xfffff9f3
     420:	06300607 	ldrteq	r0, [r0], -r7, lsl #12
     424:	030d0501 	movweq	r0, #54529	@ 0xd501
     428:	0705016d 	streq	r0, [r5, -sp, ror #2]
     42c:	03040200 	movweq	r0, #16896	@ 0x4200
     430:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
     434:	03040200 	movweq	r0, #16896	@ 0x4200
     438:	04020020 	streq	r0, [r2], #-32	@ 0xffffffe0
     43c:	00010603 	andeq	r0, r1, r3, lsl #12
     440:	20030402 	andcs	r0, r3, r2, lsl #8
     444:	04040200 	streq	r0, [r4], #-512	@ 0xfffffe00
     448:	02002006 	andeq	r2, r0, #6
     44c:	05130404 	ldreq	r0, [r3, #-1028]	@ 0xfffffbfc
     450:	0402000d 	streq	r0, [r2], #-13
     454:	05010604 	streq	r0, [r1, #-1540]	@ 0xfffff9fc
     458:	04020009 	streq	r0, [r2], #-9
     45c:	17052004 	strne	r2, [r5, -r4]
     460:	02040200 	andeq	r0, r4, #0, 4
     464:	0e052c06 	cdpeq	12, 0, cr2, cr5, cr6, {0}
     468:	02040200 	andeq	r0, r4, #0, 4
     46c:	04020001 	streq	r0, [r2], #-1
     470:	05200602 	streq	r0, [r0, #-1538]!	@ 0xfffff9fe
     474:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     478:	0608053c 			@ <UNDEFINED> instruction: 0x0608053c
     47c:	2e0d0501 	cfsh32cs	mvfx0, mvfx13, #1
     480:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
     484:	05010e05 	streq	r0, [r1, #-3589]	@ 0xfffff1fb
     488:	0511060d 	ldreq	r0, [r1, #-1549]	@ 0xfffff9f3
     48c:	06300607 	ldrteq	r0, [r0], -r7, lsl #12
     490:	030d0501 	movweq	r0, #54529	@ 0xd501
     494:	07050174 	smlsdxeq	r5, r4, r1, r0
     498:	03040200 	movweq	r0, #16896	@ 0x4200
     49c:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
     4a0:	03040200 	movweq	r0, #16896	@ 0x4200
     4a4:	04020020 	streq	r0, [r2], #-32	@ 0xffffffe0
     4a8:	00010603 	andeq	r0, r1, r3, lsl #12
     4ac:	20030402 	andcs	r0, r3, r2, lsl #8
     4b0:	04040200 	streq	r0, [r4], #-512	@ 0xfffffe00
     4b4:	02002006 	andeq	r2, r0, #6
     4b8:	05130404 	ldreq	r0, [r3, #-1028]	@ 0xfffffbfc
     4bc:	0402000d 	streq	r0, [r2], #-13
     4c0:	05010604 	streq	r0, [r1, #-1540]	@ 0xfffff9fc
     4c4:	04020009 	streq	r0, [r2], #-9
     4c8:	17052004 	strne	r2, [r5, -r4]
     4cc:	02040200 	andeq	r0, r4, #0, 4
     4d0:	0e053a06 	vmlaeq.f32	s6, s10, s12
     4d4:	02040200 	andeq	r0, r4, #0, 4
     4d8:	04020001 	streq	r0, [r2], #-1
     4dc:	05200602 	streq	r0, [r0, #-1538]!	@ 0xfffff9fe
     4e0:	042e401b 	strteq	r4, [lr], #-27	@ 0xffffffe5
     4e4:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
     4e8:	907faa03 	rsbsls	sl, pc, r3, lsl #20
     4ec:	05212c05 	streq	r2, [r1, #-3077]!	@ 0xfffff3fb
     4f0:	1a05012d 	bne	1409ac <_Min_Stack_Size+0x1405ac>
     4f4:	13030522 	movwne	r0, #13602	@ 0x3522
     4f8:	02000905 	andeq	r0, r0, #81920	@ 0x14000
     4fc:	00010104 	andeq	r0, r1, r4, lsl #2
     500:	06010402 	streq	r0, [r1], -r2, lsl #8
     504:	21010501 	tstcs	r1, r1, lsl #10
     508:	02001005 	andeq	r1, r0, #5
     50c:	1f060204 	svcne	0x00060204
     510:	02040200 	andeq	r0, r4, #0, 4
     514:	01022e06 	tsteq	r2, r6, lsl #28
     518:	05010100 	streq	r0, [r1, #-256]	@ 0xffffff00
     51c:	0205000f 	andeq	r0, r5, #15
     520:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
     524:	05010e03 	streq	r0, [r1, #-3587]	@ 0xfffff1fd
     528:	0f051303 	svceq	0x00051303
     52c:	03051106 	movweq	r1, #20742	@ 0x5106
     530:	2f3d0621 	svccs	0x003d0621
     534:	01060605 	tsteq	r6, r5, lsl #12
     538:	052e0f05 	streq	r0, [lr, #-3845]!	@ 0xfffff0fb
     53c:	013e0603 	teqeq	lr, r3, lsl #12
     540:	202e2e2e 	eorcs	r2, lr, lr, lsr #28
     544:	202e0120 	eorcs	r0, lr, r0, lsr #2
     548:	16050101 	strne	r0, [r5], -r1, lsl #2
     54c:	2e200101 	sufcss	f0, f0, f1
     550:	0120202e 			@ <UNDEFINED> instruction: 0x0120202e
     554:	0101202e 	tsteq	r1, lr, lsr #32
     558:	01012905 	tsteq	r1, r5, lsl #18
     55c:	202e2e20 	eorcs	r2, lr, r0, lsr #28
     560:	202e0120 	eorcs	r0, lr, r0, lsr #2
     564:	03050101 	movweq	r0, #20737	@ 0x5101
     568:	01200113 			@ <UNDEFINED> instruction: 0x01200113
     56c:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
     570:	01012001 	tsteq	r1, r1
     574:	01011805 	tsteq	r1, r5, lsl #16
     578:	20062006 	andcs	r2, r6, r6
     57c:	20202e2e 	eorcs	r2, r0, lr, lsr #28
     580:	01202e01 			@ <UNDEFINED> instruction: 0x01202e01
     584:	012c0501 			@ <UNDEFINED> instruction: 0x012c0501
     588:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
     58c:	2e012020 	cdpcs	0, 0, cr2, cr1, cr0, {1}
     590:	05010120 	streq	r0, [r1, #-288]	@ 0xfffffee0
     594:	06011403 	streq	r1, [r1], -r3, lsl #8
     598:	05200620 	streq	r0, [r0, #-1568]!	@ 0xfffff9e0
     59c:	2e010112 	mcrcs	1, 0, r0, cr1, cr2, {0}
     5a0:	01012105 	tsteq	r1, r5, lsl #2
     5a4:	1303052e 	movwne	r0, #13614	@ 0x352e
     5a8:	13053c01 	movwne	r3, #23553	@ 0x5c01
     5ac:	053c0101 	ldreq	r0, [ip, #-257]!	@ 0xfffffeff
     5b0:	042f1403 	strteq	r1, [pc], #-1027	@ 5b8 <_Min_Stack_Size+0x1b8>
     5b4:	03160503 	tsteq	r6, #12582912	@ 0xc00000
     5b8:	05010999 	streq	r0, [r1, #-2457]	@ 0xfffff667
     5bc:	01040135 	tsteq	r4, r5, lsr r1
     5c0:	02000305 	andeq	r0, r0, #335544320	@ 0x14000000
     5c4:	eb030104 	bl	c09dc <_Min_Stack_Size+0xc05dc>
     5c8:	05052076 	streq	r2, [r5, #-118]	@ 0xffffff8a
     5cc:	01040200 	mrseq	r0, R12_usr
     5d0:	00080513 	andeq	r0, r8, r3, lsl r5
     5d4:	2d010402 	cfstrscs	mvf0, [r1, #-8]
     5d8:	01000802 	tsteq	r0, r2, lsl #16
     5dc:	0000b901 	andeq	fp, r0, r1, lsl #18
     5e0:	81000300 	mrshi	r0, LR_irq
     5e4:	02000000 	andeq	r0, r0, #0
     5e8:	0d0efb01 	vstreq	d15, [lr, #-4]
     5ec:	01010100 	mrseq	r0, (UNDEF: 17)
     5f0:	00000001 	andeq	r0, r0, r1
     5f4:	01000001 	tsteq	r0, r1
     5f8:	00637273 	rsbeq	r7, r3, r3, ror r2
     5fc:	2f62696c 	svccs	0x0062696c
     600:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
     604:	00656475 	rsbeq	r6, r5, r5, ror r4
     608:	7273752f 	rsbsvc	r7, r3, #197132288	@ 0xbc00000
     60c:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
     610:	6363672f 	cmnvs	r3, #12320768	@ 0xbc0000
     614:	6d72612f 	ldfvse	f6, [r2, #-188]!	@ 0xffffff44
     618:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     61c:	61652d65 	cmnvs	r5, r5, ror #26
     620:	312f6962 			@ <UNDEFINED> instruction: 0x312f6962
     624:	2e322e32 	mrccs	14, 1, r2, cr2, cr2, {1}
     628:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
     62c:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
     630:	73000065 	movwvc	r0, #101	@ 0x65
     634:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     638:	632e6b63 			@ <UNDEFINED> instruction: 0x632e6b63
     63c:	00000100 	andeq	r0, r0, r0, lsl #2
     640:	65726f63 	ldrbvs	r6, [r2, #-3939]!	@ 0xfffff09d
     644:	336d635f 	cmncc	sp, #2080374785	@ 0x7c000001
     648:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
     64c:	74730000 	ldrbtvc	r0, [r3], #-0
     650:	746e6964 	strbtvc	r6, [lr], #-2404	@ 0xfffff69c
     654:	0300682e 	movweq	r6, #2094	@ 0x82e
     658:	79730000 	ldmdbvc	r3!, {}^	@ <UNPREDICTABLE>
     65c:	63697473 	cmnvs	r9, #1929379840	@ 0x73000000
     660:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     664:	00000001 	andeq	r0, r0, r1
     668:	05001405 	streq	r1, [r0, #-1029]	@ 0xfffffbfb
     66c:	00036802 	andeq	r6, r3, r2, lsl #16
     670:	03051708 	movweq	r1, #22280	@ 0x5708
     674:	061a0514 			@ <UNDEFINED> instruction: 0x061a0514
     678:	3c110501 	cfldr32cc	mvfx0, [r1], {1}
     67c:	21060305 	tstcs	r6, r5, lsl #6
     680:	01061105 	tsteq	r6, r5, lsl #2
     684:	052f0105 	streq	r0, [pc, #-261]!	@ 587 <_Min_Stack_Size+0x187>
     688:	05220617 	streq	r0, [r2, #-1559]!	@ 0xfffff9e9
     68c:	13051303 	movwne	r1, #21251	@ 0x5303
     690:	01050106 	tsteq	r5, r6, lsl #2
     694:	0003024b 	andeq	r0, r3, fp, asr #4
     698:	08f70101 	ldmeq	r7!, {r0, r8}^
     69c:	00030000 	andeq	r0, r3, r0
     6a0:	00000092 	muleq	r0, r2, r0
     6a4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     6a8:	0101000d 	tsteq	r1, sp
     6ac:	00000101 	andeq	r0, r0, r1, lsl #2
     6b0:	00000100 	andeq	r0, r0, r0, lsl #2
     6b4:	63727301 	cmnvs	r2, #67108864	@ 0x4000000
     6b8:	62696c00 	rsbvs	r6, r9, #0, 24
     6bc:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
     6c0:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
     6c4:	73752f00 	cmnvc	r5, #0, 30
     6c8:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     6cc:	63672f62 	cmnvs	r7, #392	@ 0x188
     6d0:	72612f63 	rsbvc	r2, r1, #396	@ 0x18c
     6d4:	6f6e2d6d 	svcvs	0x006e2d6d
     6d8:	652d656e 	strvs	r6, [sp, #-1390]!	@ 0xfffffa92
     6dc:	2f696261 	svccs	0x00696261
     6e0:	322e3231 	eorcc	r3, lr, #268435459	@ 0x10000003
     6e4:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	@ <UNPREDICTABLE>
     6e8:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
     6ec:	00006564 	andeq	r6, r0, r4, ror #10
     6f0:	5f627375 	svcpl	0x00627375
     6f4:	2e62696c 	vnmulcs.f16	s13, s4, s25	@ <UNPREDICTABLE>
     6f8:	00010063 	andeq	r0, r1, r3, rrx
     6fc:	726f6300 	rsbvc	r6, pc, #0, 6
     700:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	@ 0xfffffe6c
     704:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     708:	75000002 	strvc	r0, [r0, #-2]
     70c:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	@ 0x73
     710:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     714:	00000100 	andeq	r0, r0, r0, lsl #2
     718:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     71c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     720:	00000300 	andeq	r0, r0, r0, lsl #6
     724:	336d7473 	cmncc	sp, #1929379840	@ 0x73000000
     728:	35316c32 	ldrcc	r6, [r1, #-3122]!	@ 0xfffff3ce
     72c:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
     730:	00020068 	andeq	r0, r2, r8, rrx
     734:	31050000 	mrscc	r0, (UNDEF: 5)
     738:	84020500 	strhi	r0, [r2], #-1280	@ 0xfffffb00
     73c:	03080003 	movweq	r0, #32771	@ 0x8003
     740:	32050122 	andcc	r0, r5, #-2147483640	@ 0x80000008
     744:	032b0501 			@ <UNDEFINED> instruction: 0x032b0501
     748:	2c052079 	stccs	0, cr2, [r5], {121}	@ 0x79
     74c:	211b0501 	tstcs	fp, r1, lsl #10
     750:	5c052121 	stfpls	f2, [r5], {33}	@ 0x21
     754:	015d0521 	cmpeq	sp, r1, lsr #10
     758:	01066605 	tsteq	r6, r5, lsl #12
     75c:	06630520 	strbteq	r0, [r3], -r0, lsr #10
     760:	01640521 	cmneq	r4, r1, lsr #10
     764:	01066d05 	tsteq	r6, r5, lsl #26
     768:	06110520 	ldreq	r0, [r1], -r0, lsr #10
     76c:	05202003 	streq	r2, [r0, #-3]!
     770:	06051303 	streq	r1, [r5], -r3, lsl #6
     774:	47050106 	strmi	r0, [r5, -r6, lsl #2]
     778:	05201603 	streq	r1, [r0, #-1539]!	@ 0xfffff9fd
     77c:	206a0306 	rsbcs	r0, sl, r6, lsl #6
     780:	05201005 	streq	r1, [r0, #-5]!
     784:	053e0603 	ldreq	r0, [lr, #-1539]!	@ 0xfffff9fd
     788:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
     78c:	03052010 	movweq	r2, #20496	@ 0x5010
     790:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     794:	0f050106 	svceq	0x00050106
     798:	0603052e 	streq	r0, [r3], -lr, lsr #10
     79c:	053c1103 	ldreq	r1, [ip, #-259]!	@ 0xfffffefd
     7a0:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     7a4:	054c0603 	strbeq	r0, [ip, #-1539]	@ 0xfffff9fd
     7a8:	15050107 	strne	r0, [r5, #-263]	@ 0xfffffef9
     7ac:	060d0501 	streq	r0, [sp], -r1, lsl #10
     7b0:	002a0510 	eoreq	r0, sl, r0, lsl r5
     7b4:	06030402 	streq	r0, [r3], -r2, lsl #8
     7b8:	0015054c 	andseq	r0, r5, ip, asr #10
     7bc:	06030402 	streq	r0, [r3], -r2, lsl #8
     7c0:	04020001 	streq	r0, [r2], #-1
     7c4:	47052003 	strmi	r2, [r5, -r3]
     7c8:	03040200 	movweq	r0, #16896	@ 0x4200
     7cc:	0037052e 	eorseq	r0, r7, lr, lsr #10
     7d0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     7d4:	02002705 	andeq	r2, r0, #1310720	@ 0x140000
     7d8:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
     7dc:	02001505 	andeq	r1, r0, #20971520	@ 0x1400000
     7e0:	00010304 	andeq	r0, r1, r4, lsl #6
     7e4:	06030402 	streq	r0, [r3], -r2, lsl #8
     7e8:	002e052e 	eoreq	r0, lr, lr, lsr #10
     7ec:	06030402 	streq	r0, [r3], -r2, lsl #8
     7f0:	00270513 	eoreq	r0, r7, r3, lsl r5
     7f4:	20030402 	andcs	r0, r3, r2, lsl #8
     7f8:	02001d05 	andeq	r1, r0, #320	@ 0x140
     7fc:	00010304 	andeq	r0, r1, r4, lsl #6
     800:	06030402 	streq	r0, [r3], -r2, lsl #8
     804:	06030520 	streq	r0, [r3], -r0, lsr #10
     808:	060f0521 	streq	r0, [pc], -r1, lsr #10
     80c:	06030501 	streq	r0, [r3], -r1, lsl #10
     810:	060f053d 			@ <UNDEFINED> instruction: 0x060f053d
     814:	06030501 	streq	r0, [r3], -r1, lsl #10
     818:	060f052f 	streq	r0, [pc], -pc, lsr #10
     81c:	06030501 	streq	r0, [r3], -r1, lsl #10
     820:	060f052f 	streq	r0, [pc], -pc, lsr #10
     824:	06030501 	streq	r0, [r3], -r1, lsl #10
     828:	060f052f 	streq	r0, [pc], -pc, lsr #10
     82c:	03052e01 	movweq	r2, #24065	@ 0x5e01
     830:	02042f06 	andeq	r2, r4, #6, 30
     834:	ff031605 			@ <UNDEFINED> instruction: 0xff031605
     838:	0305010a 	movweq	r0, #20746	@ 0x510a
     83c:	06270514 			@ <UNDEFINED> instruction: 0x06270514
     840:	01044a01 	tsteq	r4, r1, lsl #20
     844:	03060305 	movweq	r0, #25349	@ 0x6305
     848:	05017581 	streq	r7, [r1, #-1409]	@ 0xfffffa7f
     84c:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
     850:	01052e0f 	tsteq	r5, pc, lsl #28
     854:	064f0542 	strbeq	r0, [pc], -r2, asr #10
     858:	f200e203 	vhsub.s8	d14, d0, d3
     85c:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
     860:	0511064f 	ldreq	r0, [r1, #-1615]	@ 0xfffff9b1
     864:	18052309 	stmdane	r5, {r0, r3, r8, r9, sp}
     868:	2505052c 	strcs	r0, [r5, #-1324]	@ 0xfffffad4
     86c:	05291805 	streq	r1, [r9, #-2053]!	@ 0xfffff7fb
     870:	134b0603 	movtne	r0, #46595	@ 0xb603
     874:	06050514 			@ <UNDEFINED> instruction: 0x06050514
     878:	21066513 	tstcs	r6, r3, lsl r5
     87c:	2c3e0601 	ldccs	6, cr0, [lr], #-4
     880:	30061e22 	andcc	r1, r6, r2, lsr #28
     884:	03056601 	movweq	r6, #22017	@ 0x5601
     888:	060c0515 			@ <UNDEFINED> instruction: 0x060c0515
     88c:	06030501 	streq	r0, [r3], -r1, lsl #10
     890:	06141321 	ldreq	r1, [r4], -r1, lsr #6
     894:	2e063c13 	mcrcs	12, 0, r3, cr6, cr3, {0}
     898:	054b1905 	strbeq	r1, [fp, #-2309]	@ 0xfffff6fb
     89c:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     8a0:	051e0705 	ldreq	r0, [lr, #-1797]	@ 0xfffff8fb
     8a4:	03053312 	movweq	r3, #21266	@ 0x5312
     8a8:	23053006 	movwcs	r3, #20486	@ 0x5006
     8ac:	12051506 	andne	r1, r5, #25165824	@ 0x1800000
     8b0:	0603051d 			@ <UNDEFINED> instruction: 0x0603051d
     8b4:	060f0522 	streq	r0, [pc], -r2, lsr #10
     8b8:	3b050513 	blcc	141d0c <_Min_Stack_Size+0x14190c>
     8bc:	05212305 	streq	r2, [r1, #-773]!	@ 0xfffffcfb
     8c0:	05052e0f 	streq	r2, [r5, #-3599]	@ 0xfffff1f1
     8c4:	0521062d 	streq	r0, [r1, #-1581]!	@ 0xfffff9d3
     8c8:	05010623 	streq	r0, [r1, #-1571]	@ 0xfffff9dd
     8cc:	05210605 	streq	r0, [r1, #-1541]!	@ 0xfffff9fb
     8d0:	2e2f0607 	cfmadda32cs	mvax0, mvax0, mvfx15, mvfx7
     8d4:	1e160521 	cfmul64ne	mvdx0, mvdx6, mvdx1
     8d8:	05220705 	streq	r0, [r2, #-1797]!	@ 0xfffff8fb
     8dc:	05054816 	streq	r4, [r5, #-2070]	@ 0xfffff7ea
     8e0:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     8e4:	013e0113 	teqeq	lr, r3, lsl r1
     8e8:	03060c05 	movweq	r0, #27653	@ 0x6c05
     8ec:	05052e0f 	streq	r2, [r5, #-3599]	@ 0xfffff1f1
     8f0:	0520061e 	streq	r0, [r0, #-1566]!	@ 0xfffff9e2
     8f4:	0c051403 	cfstrseq	mvf1, [r5], {3}
     8f8:	01050106 	tsteq	r5, r6, lsl #2
     8fc:	06190521 	ldreq	r0, [r9], -r1, lsr #10
     900:	05206503 	streq	r6, [r0, #-1283]!	@ 0xfffffafd
     904:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     908:	21060e05 	tstcs	r6, r5, lsl #28
     90c:	01061205 	tsteq	r6, r5, lsl #4
     910:	0605052e 	streq	r0, [r5], -lr, lsr #10
     914:	05200d03 	streq	r0, [r0, #-3331]!	@ 0xfffff2fd
     918:	05010623 	streq	r0, [r1, #-1571]	@ 0xfffff9dd
     91c:	05210605 	streq	r0, [r1, #-1541]!	@ 0xfffff9fb
     920:	05130626 	ldreq	r0, [r3, #-1574]	@ 0xfffff9da
     924:	21061f07 	tstcs	r6, r7, lsl #30
     928:	15062605 	strne	r2, [r6, #-1541]	@ 0xfffff9fb
     92c:	051d3139 	ldreq	r3, [sp, #-313]	@ 0xfffffec7
     930:	05210607 	streq	r0, [r1, #-1543]!	@ 0xfffff9f9
     934:	05160627 	ldreq	r0, [r6, #-1575]	@ 0xfffff9d9
     938:	2e052e33 	mcrcs	14, 0, r2, cr5, cr3, {1}
     93c:	0607052a 	streq	r0, [r7], -sl, lsr #10
     940:	05131330 	ldreq	r1, [r3, #-816]	@ 0xfffffcd0
     944:	05010633 	streq	r0, [r1, #-1587]	@ 0xfffff9cd
     948:	05052e27 	streq	r2, [r5, #-3623]	@ 0xfffff1d9
     94c:	13064c06 	movwne	r4, #27654	@ 0x6c06
     950:	051f1705 	ldreq	r1, [pc, #-1797]	@ 253 <_Min_Heap_Size+0x253>
     954:	012f0605 			@ <UNDEFINED> instruction: 0x012f0605
     958:	05f75605 	ldrbeq	r5, [r7, #1541]!	@ 0x605
     95c:	16061303 	strne	r1, [r6], -r3, lsl #6
     960:	05295605 	streq	r5, [r9, #-1541]!	@ 0xfffff9fb
     964:	09052118 	stmdbeq	r5, {r3, r4, r8, sp}
     968:	30030522 	andcc	r0, r3, r2, lsr #10
     96c:	051c1805 	ldreq	r1, [ip, #-2053]	@ 0xfffff7fb
     970:	134b0603 	movtne	r0, #46595	@ 0xb603
     974:	60060114 	andvs	r0, r6, r4, lsl r1
     978:	06207803 	strteq	r7, [r0], -r3, lsl #16
     97c:	ac011390 	stcge	3, cr1, [r1], {144}	@ 0x90
     980:	060c0514 			@ <UNDEFINED> instruction: 0x060c0514
     984:	06030501 	streq	r0, [r3], -r1, lsl #10
     988:	06141321 	ldreq	r1, [r4], -r1, lsr #6
     98c:	052f062e 	streq	r0, [pc, #-1582]!	@ 366 <_Min_Heap_Size+0x366>
     990:	1d054b19 	vstrne	d4, [r5, #-100]	@ 0xffffff9c
     994:	23050106 	movwcs	r0, #20742	@ 0x5106
     998:	052e0a03 	streq	r0, [lr, #-2563]!	@ 0xfffff5fd
     99c:	2e790312 	mrccs	3, 3, r0, cr9, cr2, {0}
     9a0:	30060305 	andcc	r0, r6, r5, lsl #6
     9a4:	17062305 	strne	r2, [r6, -r5, lsl #6]
     9a8:	05291205 	streq	r1, [r9, #-517]!	@ 0xfffffdfb
     9ac:	05240603 	streq	r0, [r4, #-1539]!	@ 0xfffff9fd
     9b0:	2013060f 	andscs	r0, r3, pc, lsl #12
     9b4:	052d0505 	streq	r0, [sp, #-1285]!	@ 0xfffffafb
     9b8:	2e05210f 	adfcss	f2, f5, #10.0
     9bc:	2b050530 	blcs	141e84 <_Min_Stack_Size+0x141a84>
     9c0:	24052106 	strcs	r2, [r5], #-262	@ 0xfffffefa
     9c4:	23051306 	movwcs	r1, #21254	@ 0x5306
     9c8:	0605051f 			@ <UNDEFINED> instruction: 0x0605051f
     9cc:	06240521 	strteq	r0, [r4], -r1, lsr #10
     9d0:	06050501 	streq	r0, [r5], -r1, lsl #10
     9d4:	06230521 	strteq	r0, [r3], -r1, lsr #10
     9d8:	06050501 	streq	r0, [r5], -r1, lsl #10
     9dc:	0624052f 	strteq	r0, [r4], -pc, lsr #10
     9e0:	06050501 	streq	r0, [r5], -r1, lsl #10
     9e4:	06090522 	streq	r0, [r9], -r2, lsr #10
     9e8:	06050501 	streq	r0, [r5], -r1, lsl #10
     9ec:	062e0521 	strteq	r0, [lr], -r1, lsr #10
     9f0:	05052e01 	streq	r2, [r5, #-3585]	@ 0xfffff1ff
     9f4:	064a0d03 	strbeq	r0, [sl], -r3, lsl #26
     9f8:	14030520 	strne	r0, [r3], #-1312	@ 0xfffffae0
     9fc:	01061405 	tsteq	r6, r5, lsl #8
     a00:	05230c05 	streq	r0, [r3, #-3077]!	@ 0xfffff3fb
     a04:	03052b14 	movweq	r2, #23316	@ 0x5b14
     a08:	14052f06 	strne	r2, [r5], #-3846	@ 0xfffff0fa
     a0c:	03050106 	movweq	r0, #20742	@ 0x5106
     a10:	0c053006 	stceq	0, cr3, [r5], {6}
     a14:	01050106 	tsteq	r5, r6, lsl #2
     a18:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
     a1c:	05205e03 	streq	r5, [r0, #-3587]!	@ 0xfffff1fd
     a20:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
     a24:	21061905 	tstcs	r6, r5, lsl #18
     a28:	01061d05 	tsteq	r6, r5, lsl #26
     a2c:	060e052e 	streq	r0, [lr], -lr, lsr #10
     a30:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     a34:	05052e01 	streq	r2, [r5, #-3585]	@ 0xfffff1ff
     a38:	200f0306 	andcs	r0, pc, r6, lsl #6
     a3c:	01062305 	tsteq	r6, r5, lsl #6
     a40:	21060505 	tstcs	r6, r5, lsl #10
     a44:	13060705 	movwne	r0, #26373	@ 0x6705
     a48:	051f2305 	ldreq	r2, [pc, #-773]	@ 74b <_Min_Stack_Size+0x34b>
     a4c:	052f0605 	streq	r0, [pc, #-1541]!	@ 44f <_Min_Stack_Size+0x4f>
     a50:	05130647 	ldreq	r0, [r3, #-1607]	@ 0xfffff9b9
     a54:	21061f07 	tstcs	r6, r7, lsl #30
     a58:	01064705 	tsteq	r6, r5, lsl #14
     a5c:	053c2605 	ldreq	r2, [ip, #-1541]!	@ 0xfffff9fb
     a60:	054b0607 	strbeq	r0, [fp, #-1543]	@ 0xfffff9f9
     a64:	05010650 	streq	r0, [r1, #-1616]	@ 0xfffff9b0
     a68:	27053249 	strcs	r3, [r5, -r9, asr #4]
     a6c:	06050566 	streq	r0, [r5], -r6, ror #10
     a70:	139e0168 	orrsne	r0, lr, #104, 2
     a74:	99070501 	stmdbls	r7, {r0, r8, sl}
     a78:	01064705 	tsteq	r6, r5, lsl #14
     a7c:	053c2605 	ldreq	r2, [ip, #-1541]!	@ 0xfffff9fb
     a80:	134b0607 	movtne	r0, #46599	@ 0xb607
     a84:	01065505 	tsteq	r6, r5, lsl #10
     a88:	03061905 	movweq	r1, #26885	@ 0x6905
     a8c:	0305ac0d 	movweq	sl, #23565	@ 0x5c0d
     a90:	06190513 			@ <UNDEFINED> instruction: 0x06190513
     a94:	2f090511 	svccs	0x00090511
     a98:	053c0505 	ldreq	r0, [ip, #-1285]!	@ 0xfffffafb
     a9c:	05053213 	streq	r3, [r5, #-531]	@ 0xfffffded
     aa0:	07052b06 	streq	r2, [r5, -r6, lsl #22]
     aa4:	061a0513 			@ <UNDEFINED> instruction: 0x061a0513
     aa8:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
     aac:	2f060705 	svccs	0x00060705
     ab0:	01060a05 	tsteq	r6, r5, lsl #20
     ab4:	06660905 	strbteq	r0, [r6], -r5, lsl #18
     ab8:	00014b2f 	andeq	r4, r1, pc, lsr #22
     abc:	82010402 	andhi	r0, r1, #33554432	@ 0x2000000
     ac0:	02000705 	andeq	r0, r0, #1310720	@ 0x140000
     ac4:	05140104 	ldreq	r0, [r4, #-260]	@ 0xfffffefc
     ac8:	0402000a 	streq	r0, [r2], #-10
     acc:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
     ad0:	04020009 	streq	r0, [r2], #-9
     ad4:	2f062001 	svccs	0x00062001
     ad8:	01061205 	tsteq	r6, r5, lsl #4
     adc:	06200905 	strteq	r0, [r0], -r5, lsl #18
     ae0:	0200014b 	andeq	r0, r0, #-1073741806	@ 0xc0000012
     ae4:	05820104 	streq	r0, [r2, #260]	@ 0x104
     ae8:	0402000c 	streq	r0, [r2], #-12
     aec:	0f051401 	svceq	0x00051401
     af0:	01040200 	mrseq	r0, R12_usr
     af4:	0c050106 	stfeqs	f0, [r5], {6}
     af8:	01040200 	mrseq	r0, R12_usr
     afc:	0301052e 	movweq	r0, #5422	@ 0x152e
     b00:	03052e27 	movweq	r2, #24103	@ 0x5e27
     b04:	2e5d0306 	cdpcs	3, 5, cr0, cr13, cr6, {0}
     b08:	01060905 	tsteq	r6, r5, lsl #18
     b0c:	062e0505 	strteq	r0, [lr], -r5, lsl #10
     b10:	0f052f2f 	svceq	0x00052f2f
     b14:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     b18:	03054b06 	movweq	r4, #23302	@ 0x5b06
     b1c:	06090523 	streq	r0, [r9], -r3, lsr #10
     b20:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
     b24:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     b28:	06110530 			@ <UNDEFINED> instruction: 0x06110530
     b2c:	320e0501 	andcc	r0, lr, #4194304	@ 0x400000
     b30:	051c1105 	ldreq	r1, [ip, #-261]	@ 0xfffffefb
     b34:	05320605 	ldreq	r0, [r2, #-1541]!	@ 0xfffff9fb
     b38:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
     b3c:	0e052249 	cdpeq	2, 0, cr2, cr5, cr9, {2}
     b40:	0605051e 			@ <UNDEFINED> instruction: 0x0605051e
     b44:	06100521 	ldreq	r0, [r0], -r1, lsr #10
     b48:	06050501 	streq	r0, [r5], -r1, lsl #10
     b4c:	0109053d 	tsteq	r9, sp, lsr r5
     b50:	05011705 	streq	r1, [r1, #-1797]	@ 0xfffff8fb
     b54:	051f0610 	ldreq	r0, [pc, #-1552]	@ 54c <_Min_Stack_Size+0x14c>
     b58:	0402002c 	streq	r0, [r2], #-44	@ 0xffffffd4
     b5c:	054b0603 	strbeq	r0, [fp, #-1539]	@ 0xfffff9fd
     b60:	04020017 	streq	r0, [r2], #-23	@ 0xffffffe9
     b64:	00010603 	andeq	r0, r1, r3, lsl #12
     b68:	20030402 	andcs	r0, r3, r2, lsl #8
     b6c:	02004905 	andeq	r4, r0, #81920	@ 0x14000
     b70:	052e0304 	streq	r0, [lr, #-772]!	@ 0xfffffcfc
     b74:	04020039 	streq	r0, [r2], #-57	@ 0xffffffc7
     b78:	29052e03 	stmdbcs	r5, {r0, r1, r9, sl, fp, sp}
     b7c:	03040200 	movweq	r0, #16896	@ 0x4200
     b80:	17052e06 	strne	r2, [r5, -r6, lsl #28]
     b84:	03040200 	movweq	r0, #16896	@ 0x4200
     b88:	23050501 	movwcs	r0, #21761	@ 0x5501
     b8c:	01060f05 	tsteq	r6, r5, lsl #30
     b90:	053d0505 	ldreq	r0, [sp, #-1285]!	@ 0xfffffafb
     b94:	05051f0f 	streq	r1, [r5, #-3855]	@ 0xfffff0f1
     b98:	67592f06 	ldrbvs	r2, [r9, -r6, lsl #30]
     b9c:	01060d05 	tsteq	r6, r5, lsl #26
     ba0:	21060505 	tstcs	r6, r5, lsl #10
     ba4:	05310305 	ldreq	r0, [r1, #-773]!	@ 0xfffffcfb
     ba8:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
     bac:	2f063c05 	svccs	0x00063c05
     bb0:	0608052f 	streq	r0, [r8], -pc, lsr #10
     bb4:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
     bb8:	4b060505 	blmi	181fd4 <_Min_Stack_Size+0x181bd4>
     bbc:	01060f05 	tsteq	r6, r5, lsl #30
     bc0:	4d060305 	stcmi	3, cr0, [r6, #-20]	@ 0xffffffec
     bc4:	01060905 	tsteq	r6, r5, lsl #18
     bc8:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     bcc:	0608052f 	streq	r0, [r8], -pc, lsr #10
     bd0:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
     bd4:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     bd8:	01060f05 	tsteq	r6, r5, lsl #30
     bdc:	03064405 	movweq	r4, #25605	@ 0x6405
     be0:	05120811 	ldreq	r0, [r2, #-2065]	@ 0xfffff7ef
     be4:	44051303 	strmi	r1, [r5], #-771	@ 0xfffffcfd
     be8:	03051106 	movweq	r1, #20742	@ 0x5106
     bec:	1b330526 	blne	cc208c <_Min_Stack_Size+0xcc1c8c>
     bf0:	05201005 	streq	r1, [r0, #-5]!
     bf4:	054b0603 	strbeq	r0, [fp, #-1539]	@ 0xfffff9fd
     bf8:	05150651 	ldreq	r0, [r5, #-1617]	@ 0xfffff9af
     bfc:	4a051d17 	bmi	148060 <_Min_Stack_Size+0x147c60>
     c00:	470c0523 	strmi	r0, [ip, -r3, lsr #10]
     c04:	22060305 	andcs	r0, r6, #335544320	@ 0x14000000
     c08:	064a0513 			@ <UNDEFINED> instruction: 0x064a0513
     c0c:	06030501 	streq	r0, [r3], -r1, lsl #10
     c10:	01070521 	tsteq	r7, r1, lsr #10
     c14:	02001905 	andeq	r1, r0, #81920	@ 0x14000
     c18:	05010104 	streq	r0, [r1, #-260]	@ 0xfffffefc
     c1c:	14063f03 	strne	r3, [r6], #-3843	@ 0xfffff0fd
     c20:	3a100520 	bcc	4020a8 <_Min_Stack_Size+0x401ca8>
     c24:	22060305 	andcs	r0, r6, #335544320	@ 0x14000000
     c28:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
     c2c:	06010590 			@ <UNDEFINED> instruction: 0x06010590
     c30:	00050513 	andeq	r0, r5, r3, lsl r5
     c34:	06030402 	streq	r0, [r3], -r2, lsl #8
     c38:	0011051b 	andseq	r0, r1, fp, lsl r5
     c3c:	06030402 	streq	r0, [r3], -r2, lsl #8
     c40:	000a0501 	andeq	r0, sl, r1, lsl #10
     c44:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     c48:	02002205 	andeq	r2, r0, #1342177280	@ 0x50000000
     c4c:	2d060304 	stccs	3, cr0, [r6, #-16]
     c50:	03040200 	movweq	r0, #16896	@ 0x4200
     c54:	02000106 	andeq	r0, r0, #-2147483647	@ 0x80000001
     c58:	06200304 	strteq	r0, [r0], -r4, lsl #6
     c5c:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
     c60:	03080008 	movweq	r0, #32776	@ 0x8008
     c64:	05017df6 	streq	r7, [r1, #-3574]	@ 0xfffff20a
     c68:	22051303 	andcs	r1, r5, #201326592	@ 0xc000000
     c6c:	0e051106 	adfeqs	f1, f5, f6
     c70:	2e050521 	cfsh32cs	mvfx0, mvfx5, #17
     c74:	21060305 	tstcs	r6, r5, lsl #6
     c78:	01060c05 	tsteq	r6, r5, lsl #24
     c7c:	2f060305 	svccs	0x00060305
     c80:	03060304 	movweq	r0, #25348	@ 0x6304
     c84:	200100c6 	andcs	r0, r1, r6, asr #1
     c88:	05050104 	streq	r0, [r5, #-260]	@ 0xfffffefc
     c8c:	017fba03 	cmneq	pc, r3, lsl #20
     c90:	4b060305 	blmi	1818ac <_Min_Stack_Size+0x1814ac>
     c94:	14050304 	strne	r0, [r5], #-772	@ 0xfffffcfc
     c98:	0100c403 	tsteq	r0, r3, lsl #8
     c9c:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     ca0:	0601042e 	streq	r0, [r1], -lr, lsr #8
     ca4:	017fbd03 	cmneq	pc, r3, lsl #26
     ca8:	15060505 	strne	r0, [r6, #-1285]	@ 0xfffffafb
     cac:	2a210d05 	bcs	8440c8 <_Min_Stack_Size+0x843cc8>
     cb0:	052f0b05 	streq	r0, [pc, #-2821]!	@ 1b3 <_Min_Heap_Size+0x1b3>
     cb4:	03052d0d 	movweq	r2, #23821	@ 0x5d0d
     cb8:	05142f06 	ldreq	r2, [r4, #-3846]	@ 0xfffff0fa
     cbc:	0510060b 	ldreq	r0, [r0, #-1547]	@ 0xfffff9f5
     cc0:	05310605 	ldreq	r0, [r1, #-1541]!	@ 0xfffff9fb
     cc4:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     cc8:	2d052201 	sfmcs	f2, 4, [r5, #-4]
     ccc:	02860306 	addeq	r0, r6, #402653184	@ 0x18000000
     cd0:	1303053c 	movwne	r0, #13628	@ 0x353c
     cd4:	11062d05 	tstne	r6, r5, lsl #26
     cd8:	05213305 	streq	r3, [r1, #-773]!	@ 0xfffffcfb
     cdc:	03052010 	movweq	r2, #20496	@ 0x5010
     ce0:	2d054b06 	vstrcs	d4, [r5, #-24]	@ 0xffffffe8
     ce4:	11051006 	tstne	r5, r6
     ce8:	03052022 	movweq	r2, #20514	@ 0x5022
     cec:	05052f06 	streq	r2, [r5, #-3846]	@ 0xfffff0fa
     cf0:	03050106 	movweq	r0, #20742	@ 0x5106
     cf4:	05132106 	ldreq	r2, [r3, #-262]	@ 0xfffffefa
     cf8:	05010650 	streq	r0, [r1, #-1616]	@ 0xfffff9b0
     cfc:	49051f0f 	stmdbmi	r5, {r0, r1, r2, r3, r8, r9, sl, fp, ip}
     d00:	2d070521 	cfstr32cs	mvfx0, [r7, #-132]	@ 0xffffff7c
     d04:	3c214905 			@ <UNDEFINED> instruction: 0x3c214905
     d08:	21060305 	tstcs	r6, r5, lsl #6
     d0c:	05010705 	streq	r0, [r1, #-1797]	@ 0xfffff8fb
     d10:	20060114 	andcs	r0, r6, r4, lsl r1
     d14:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
     d18:	2f060304 	svccs	0x00060304
     d1c:	02000e05 	andeq	r0, r0, #5, 28	@ 0x50
     d20:	01060304 	tsteq	r6, r4, lsl #6
     d24:	02001405 	andeq	r1, r0, #83886080	@ 0x5000000
     d28:	052d0304 	streq	r0, [sp, #-772]!	@ 0xfffffcfc
     d2c:	0402000c 	streq	r0, [r2], #-12
     d30:	1c052103 	stfnes	f2, [r5], {3}
     d34:	03040200 	movweq	r0, #16896	@ 0x4200
     d38:	14052d06 	strne	r2, [r5], #-3334	@ 0xfffff2fa
     d3c:	03040200 	movweq	r0, #16896	@ 0x4200
     d40:	23030501 	movwcs	r0, #13569	@ 0x3501
     d44:	06200601 	strteq	r0, [r0], -r1, lsl #12
     d48:	010513e4 	smlatteq	r5, r4, r3, r1
     d4c:	23051306 	movwcs	r1, #21254	@ 0x5306
     d50:	7df90306 	ldclvc	3, cr0, [r9, #24]!
     d54:	13030520 	movwne	r0, #13600	@ 0x3520
     d58:	06230513 			@ <UNDEFINED> instruction: 0x06230513
     d5c:	1d052210 	sfmne	f2, 4, [r5, #-64]	@ 0xffffffc0
     d60:	05201103 	streq	r1, [r0, #-259]!	@ 0xfffffefd
     d64:	206f0323 	rsbcs	r0, pc, r3, lsr #6
     d68:	05211605 	streq	r1, [r1, #-1541]!	@ 0xfffff9fb
     d6c:	3c10031d 	ldccc	3, cr0, [r0], {29}
     d70:	72030505 	andvc	r0, r3, #20971520	@ 0x1400000
     d74:	0306052e 	movweq	r0, #25902	@ 0x652e
     d78:	23052010 	movwcs	r2, #20496	@ 0x5010
     d7c:	052e6d03 	streq	r6, [lr, #-3331]!	@ 0xfffff2fd
     d80:	142f0603 	strtne	r0, [pc], #-1539	@ d88 <_Min_Stack_Size+0x988>
     d84:	01060505 	tsteq	r6, r5, lsl #10
     d88:	03060305 	movweq	r0, #25349	@ 0x6305
     d8c:	0514200e 	ldreq	r2, [r4, #-14]
     d90:	05010605 	streq	r0, [r1, #-1541]	@ 0xfffff9fb
     d94:	2e2f0301 	cdpcs	3, 2, cr0, cr15, cr1, {0}
     d98:	03060505 	movweq	r0, #25861	@ 0x6505
     d9c:	07052e42 	streq	r2, [r5, -r2, asr #28]
     da0:	09050106 	stmdbeq	r5, {r1, r2, r8}
     da4:	03043406 	movweq	r3, #17414	@ 0x4406
     da8:	33031305 	movwcc	r1, #13061	@ 0x3305
     dac:	13030501 	movwne	r0, #13569	@ 0x3501
     db0:	13050104 	movwne	r0, #20740	@ 0x5104
     db4:	014d0306 	cmpeq	sp, r6, lsl #6
     db8:	0a050304 	beq	1419d0 <_Min_Stack_Size+0x1415d0>
     dbc:	58203303 	stmdapl	r0!, {r0, r1, r8, r9, ip, sp}
     dc0:	09050104 	stmdbeq	r5, {r2, r8}
     dc4:	014d0306 	cmpeq	sp, r6, lsl #6
     dc8:	18061d05 	stmdane	r6, {r0, r2, r8, sl, fp, ip}
     dcc:	7a031305 	bvc	c59e8 <_Min_Stack_Size+0xc55e8>
     dd0:	0609052e 	streq	r0, [r9], -lr, lsr #10
     dd4:	1703052f 	strne	r0, [r3, -pc, lsr #10]
     dd8:	01060b05 	tsteq	r6, r5, lsl #22
     ddc:	30060305 	andcc	r0, r6, r5, lsl #6
     de0:	01060505 	tsteq	r6, r5, lsl #10
     de4:	07053106 	streq	r3, [r5, -r6, lsl #2]
     de8:	2f060106 	svccs	0x00060106
     dec:	01061a05 	tsteq	r6, r5, lsl #20
     df0:	052e0705 	streq	r0, [lr, #-1797]!	@ 0xfffff8fb
     df4:	0a03060b 	beq	c2628 <_Min_Stack_Size+0xc2228>
     df8:	05030466 	streq	r0, [r3, #-1126]	@ 0xfffffb9a
     dfc:	010f0314 	tsteq	pc, r4, lsl r3	@ <UNPREDICTABLE>
     e00:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     e04:	0501042e 	streq	r0, [r1, #-1070]	@ 0xfffffbd2
     e08:	01110301 	tsteq	r1, r1, lsl #6
     e0c:	03050304 	movweq	r0, #21252	@ 0x5304
     e10:	2e3c6f03 	cdpcs	15, 3, cr6, cr12, cr3, {0}
     e14:	07050104 	streq	r0, [r5, -r4, lsl #2]
     e18:	01580306 	cmpeq	r8, r6, lsl #6
     e1c:	01060905 	tsteq	r6, r5, lsl #18
     e20:	03060505 	movweq	r0, #25861	@ 0x6505
     e24:	07056626 	streq	r6, [r5, -r6, lsr #12]
     e28:	2f060106 	svccs	0x00060106
     e2c:	01061605 	tsteq	r6, r5, lsl #12
     e30:	062e0905 	strteq	r0, [lr], -r5, lsl #18
     e34:	0503042f 	streq	r0, [r3, #-1071]	@ 0xfffffbd1
     e38:	04010603 	streq	r0, [r1], #-1539	@ 0xfffff9fd
     e3c:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
     e40:	2f060905 	svccs	0x00060905
     e44:	14050304 	strne	r0, [r5], #-772	@ 0xfffffcfc
     e48:	13030510 	movwne	r0, #13584	@ 0x3510
     e4c:	11050104 	tstne	r5, r4, lsl #2
     e50:	42053006 	andmi	r3, r5, #6
     e54:	01040200 	mrseq	r0, R12_usr
     e58:	2d052006 	stccs	0, cr2, [r5, #-24]	@ 0xffffffe8
     e5c:	01040200 	mrseq	r0, R12_usr
     e60:	00110501 	andseq	r0, r1, r1, lsl #10
     e64:	06010402 	streq	r0, [r1], -r2, lsl #8
     e68:	002d0501 	eoreq	r0, sp, r1, lsl #10
     e6c:	20010402 	andcs	r0, r1, r2, lsl #8
     e70:	4b060905 	blmi	18328c <_Min_Stack_Size+0x182e8c>
     e74:	01061405 	tsteq	r6, r5, lsl #8
     e78:	0609052e 	streq	r0, [r9], -lr, lsr #10
     e7c:	0520062f 	streq	r0, [r0, #-1583]!	@ 0xfffff9d1
     e80:	6403060b 	strvs	r0, [r3], #-1547	@ 0xfffff9f5
     e84:	06170501 	ldreq	r0, [r7], -r1, lsl #10
     e88:	21140501 	tstcs	r4, r1, lsl #10
     e8c:	4a2f0b05 	bmi	bc3aa8 <_Min_Stack_Size+0xbc36a8>
     e90:	051e1705 	ldreq	r1, [lr, #-1797]	@ 0xfffff8fb
     e94:	1321060b 			@ <UNDEFINED> instruction: 0x1321060b
     e98:	0305052f 	movweq	r0, #21807	@ 0x552f
     e9c:	1405010f 	strne	r0, [r5], #-271	@ 0xfffffef1
     ea0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ea4:	0303052e 	movweq	r0, #13614	@ 0x352e
     ea8:	07052e4e 	streq	r2, [r5, -lr, asr #28]
     eac:	05203203 	streq	r3, [r0, #-515]!	@ 0xfffffdfd
     eb0:	05200625 	streq	r0, [r0, #-1573]!	@ 0xfffff9db
     eb4:	0501062a 	streq	r0, [r1, #-1578]	@ 0xfffff9d6
     eb8:	053d0605 	ldreq	r0, [sp, #-1541]!	@ 0xfffff9fb
     ebc:	014a0314 	cmpeq	sl, r4, lsl r3
     ec0:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
     ec4:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     ec8:	054b0603 	strbeq	r0, [fp, #-1539]	@ 0xfffff9fd
     ecc:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
     ed0:	062f0603 	strteq	r0, [pc], -r3, lsl #12
     ed4:	060b052e 	streq	r0, [fp], -lr, lsr #10
     ed8:	04202b03 	strteq	r2, [r0], #-2819	@ 0xfffff4fd
     edc:	03140503 	tsteq	r4, #12582912	@ 0xc00000
     ee0:	0305010c 	movweq	r0, #20748	@ 0x510c
     ee4:	043c0613 	ldrteq	r0, [ip], #-1555	@ 0xfffff9ed
     ee8:	06050501 	streq	r0, [r5], -r1, lsl #10
     eec:	05017703 	streq	r7, [r1, #-1795]	@ 0xfffff8fd
     ef0:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
     ef4:	052f0605 	streq	r0, [pc, #-1541]!	@ 8f7 <_Min_Stack_Size+0x4f7>
     ef8:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
     efc:	0e052105 	adfeqs	f2, f5, f5
     f00:	06050549 	streq	r0, [r5], -r9, asr #10
     f04:	202e062f 	eorcs	r0, lr, pc, lsr #12
     f08:	03060d05 	movweq	r0, #27909	@ 0x6d05
     f0c:	0f05010c 	svceq	0x0005010c
     f10:	09050106 	stmdbeq	r5, {r1, r2, r8}
     f14:	17052f06 	strne	r2, [r5, -r6, lsl #30]
     f18:	09050106 	stmdbeq	r5, {r1, r2, r8}
     f1c:	03044b06 	movweq	r4, #19206	@ 0x4b06
     f20:	78031405 	stmdavc	r3, {r0, r2, sl, ip}
     f24:	13030501 	movwne	r0, #13569	@ 0x3501
     f28:	01040106 	tsteq	r4, r6, lsl #2
     f2c:	03062c05 	movweq	r2, #27653	@ 0x6c05
     f30:	0304010f 	movweq	r0, #16655	@ 0x410f
     f34:	70031405 	andvc	r1, r3, r5, lsl #8
     f38:	13030501 	movwne	r0, #13569	@ 0x3501
     f3c:	01044a06 	tsteq	r4, r6, lsl #20
     f40:	03060505 	movweq	r0, #25861	@ 0x6505
     f44:	0905010b 	stmdbeq	r5, {r0, r1, r3, r8}
     f48:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f4c:	01210666 			@ <UNDEFINED> instruction: 0x01210666
     f50:	01040200 	mrseq	r0, R12_usr
     f54:	000505ac 	andeq	r0, r5, ip, lsr #11
     f58:	14010402 	strne	r0, [r1], #-1026	@ 0xfffffbfe
     f5c:	02000f05 	andeq	r0, r0, #5, 30
     f60:	01060104 	tsteq	r6, r4, lsl #2
     f64:	02000705 	andeq	r0, r0, #1310720	@ 0x140000
     f68:	053d0104 	ldreq	r0, [sp, #-260]!	@ 0xfffffefc
     f6c:	0402000f 	streq	r0, [r2], #-15
     f70:	07052d01 	streq	r2, [r5, -r1, lsl #26]
     f74:	01040200 	mrseq	r0, R12_usr
     f78:	000f0521 	andeq	r0, pc, r1, lsr #10
     f7c:	1f010402 	svcne	0x00010402
     f80:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
     f84:	2f060104 	svccs	0x00060104
     f88:	02000705 	andeq	r0, r0, #1310720	@ 0x140000
     f8c:	01060104 	tsteq	r6, r4, lsl #2
     f90:	01001002 	tsteq	r0, r2
     f94:	0006e801 	andeq	lr, r6, r1, lsl #16
     f98:	dc000300 	stcle	3, cr0, [r0], {-0}
     f9c:	02000000 	andeq	r0, r0, #0
     fa0:	0d0efb01 	vstreq	d15, [lr, #-4]
     fa4:	01010100 	mrseq	r0, (UNDEF: 17)
     fa8:	00000001 	andeq	r0, r0, r1
     fac:	01000001 	tsteq	r0, r1
     fb0:	00637273 	rsbeq	r7, r3, r3, ror r2
     fb4:	2f62696c 	svccs	0x0062696c
     fb8:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
     fbc:	00656475 	rsbeq	r6, r5, r5, ror r4
     fc0:	7273752f 	rsbsvc	r7, r3, #197132288	@ 0xbc00000
     fc4:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
     fc8:	6363672f 	cmnvs	r3, #12320768	@ 0xbc0000
     fcc:	6d72612f 	ldfvse	f6, [r2, #-188]!	@ 0xffffff44
     fd0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     fd4:	61652d65 	cmnvs	r5, r5, ror #26
     fd8:	312f6962 			@ <UNDEFINED> instruction: 0x312f6962
     fdc:	2e322e32 	mrccs	14, 1, r2, cr2, cr2, {1}
     fe0:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
     fe4:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
     fe8:	75000065 	strvc	r0, [r0, #-101]	@ 0xffffff9b
     fec:	635f6273 	cmpvs	pc, #805306375	@ 0x30000007
     ff0:	7373616c 	cmnvc	r3, #108, 2
     ff4:	0100632e 	tsteq	r0, lr, lsr #6
     ff8:	6c630000 	stclvs	0, cr0, [r3], #-0
     ffc:	5f737361 	svcpl	0x00737361
    1000:	2e63696d 	vnmulcs.f16	s13, s6, s27	@ <UNPREDICTABLE>
    1004:	00010068 	andeq	r0, r1, r8, rrx
    1008:	62737500 	rsbsvs	r7, r3, #0, 10
    100c:	62696c5f 	rsbvs	r6, r9, #24320	@ 0x5f00
    1010:	0100682e 	tsteq	r0, lr, lsr #16
    1014:	6c630000 	stclvs	0, cr0, [r3], #-0
    1018:	5f737361 	svcpl	0x00737361
    101c:	2e646968 	vnmulcs.f16	s13, s8, s17	@ <UNPREDICTABLE>
    1020:	00010068 	andeq	r0, r1, r8, rrx
    1024:	73797300 	cmnvc	r9, #0, 6
    1028:	6b636974 	blvs	18db600 <_Min_Stack_Size+0x18db200>
    102c:	0100682e 	tsteq	r0, lr, lsr #16
    1030:	6f630000 	svcvs	0x00630000
    1034:	635f6572 	cmpvs	pc, #478150656	@ 0x1c800000
    1038:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
    103c:	00000200 	andeq	r0, r0, r0, lsl #4
    1040:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1044:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1048:	00000300 	andeq	r0, r0, r0, lsl #6
    104c:	336d7473 	cmncc	sp, #1929379840	@ 0x73000000
    1050:	35316c32 	ldrcc	r6, [r1, #-3122]!	@ 0xfffff3ce
    1054:	2e637831 	mcrcs	8, 3, r7, cr3, cr1, {1}
    1058:	00020068 	andeq	r0, r2, r8, rrx
    105c:	62737500 	rsbsvs	r7, r3, #0, 10
    1060:	676f6c5f 			@ <UNDEFINED> instruction: 0x676f6c5f
    1064:	0100682e 	tsteq	r0, lr, lsr #16
    1068:	72700000 	rsbsvc	r0, r0, #0
    106c:	6172676f 	cmnvs	r2, pc, ror #14
    1070:	72656d6d 	rsbvc	r6, r5, #6976	@ 0x1b40
    1074:	0100682e 	tsteq	r0, lr, lsr #16
    1078:	04000000 	streq	r0, [r0], #-0
    107c:	002b0502 	eoreq	r0, fp, r2, lsl #10
    1080:	0a040205 	beq	10189c <_Min_Stack_Size+0x10149c>
    1084:	11030800 	tstne	r3, r0, lsl #16
    1088:	13030501 	movwne	r0, #13569	@ 0x3501
    108c:	11062b05 	tstne	r6, r5, lsl #22
    1090:	04213a05 	strteq	r3, [r1], #-2565	@ 0xfffff5fb
    1094:	03090503 	movweq	r0, #38147	@ 0x9503
    1098:	2e2001a6 	sufcsdp	f0, f0, f6
    109c:	3a050204 	bcc	1418b4 <_Min_Stack_Size+0x1414b4>
    10a0:	017eda03 	cmneq	lr, r3, lsl #20
    10a4:	15050304 	strne	r0, [r5, #-772]	@ 0xfffffcfc
    10a8:	2001a703 	andcs	sl, r1, r3, lsl #14
    10ac:	3a050204 	bcc	1418c4 <_Min_Stack_Size+0x1414c4>
    10b0:	587ed903 	ldmdapl	lr!, {r0, r1, r8, fp, ip, lr, pc}^
    10b4:	14050304 	strne	r0, [r5], #-772	@ 0xfffffcfc
    10b8:	01a50306 			@ <UNDEFINED> instruction: 0x01a50306
    10bc:	1303052e 	movwne	r0, #13614	@ 0x352e
    10c0:	06150513 			@ <UNDEFINED> instruction: 0x06150513
    10c4:	22030501 	andcs	r0, r3, #4194304	@ 0x400000
    10c8:	051e0b05 	ldreq	r0, [lr, #-2821]	@ 0xfffff4fb
    10cc:	132f0603 			@ <UNDEFINED> instruction: 0x132f0603
    10d0:	05020401 	streq	r0, [r2, #-1025]	@ 0xfffffbff
    10d4:	d703063a 	smladxle	r3, sl, r6, r0
    10d8:	0304827e 	movweq	r8, #17022	@ 0x427e
    10dc:	a9030305 	stmdbge	r3, {r0, r2, r8, r9}
    10e0:	20062001 	andcs	r2, r6, r1
    10e4:	2e3c0613 	mrccs	6, 1, r0, cr12, cr3, {0}
    10e8:	03060204 	movweq	r0, #25092	@ 0x6204
    10ec:	05017ed7 	streq	r7, [r1, #-3799]	@ 0xfffff129
    10f0:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
    10f4:	28052f01 	stmdacs	r5, {r0, r8, r9, sl, fp, sp}
    10f8:	3c2d0306 	stccc	3, cr0, [sp], #-24	@ 0xffffffe8
    10fc:	13130305 	tstne	r3, #335544320	@ 0x14000000
    1100:	01062f05 	tsteq	r6, r5, lsl #30
    1104:	4a2e0a05 	bmi	b83920 <_Min_Stack_Size+0xb83520>
    1108:	21060305 	tstcs	r6, r5, lsl #6
    110c:	13060105 	movwne	r0, #24837	@ 0x6105
    1110:	5b062405 	blpl	18a12c <_Min_Stack_Size+0x189d2c>
    1114:	13130305 	tstne	r3, #335544320	@ 0x14000000
    1118:	01061d05 	tsteq	r6, r5, lsl #26
    111c:	3c2e0a05 			@ <UNDEFINED> instruction: 0x3c2e0a05
    1120:	21060305 	tstcs	r6, r5, lsl #6
    1124:	13060105 	movwne	r0, #24837	@ 0x6105
    1128:	69062705 	stmdbvs	r6, {r0, r2, r8, r9, sl, sp}
    112c:	13130305 	tstne	r3, #335544320	@ 0x14000000
    1130:	06010513 			@ <UNDEFINED> instruction: 0x06010513
    1134:	06170513 			@ <UNDEFINED> instruction: 0x06170513
    1138:	13030524 	movwne	r0, #13604	@ 0x3524
    113c:	17051513 	smladne	r5, r3, r5, r1
    1140:	14050d06 	strne	r0, [r5], #-3334	@ 0xfffff2fa
    1144:	4a050525 	bmi	1425e0 <_Min_Stack_Size+0x1421e0>
    1148:	02001905 	andeq	r1, r0, #81920	@ 0x14000
    114c:	20060104 	andcs	r0, r6, r4, lsl #2
    1150:	02000305 	andeq	r0, r0, #335544320	@ 0x14000000
    1154:	05130104 	ldreq	r0, [r3, #-260]	@ 0xfffffefc
    1158:	04020011 	streq	r0, [r2], #-17	@ 0xffffffef
    115c:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
    1160:	0402000a 	streq	r0, [r2], #-10
    1164:	03052001 	movweq	r2, #20481	@ 0x5001
    1168:	01040200 	mrseq	r0, R12_usr
    116c:	10052f06 	andne	r2, r5, r6, lsl #30
    1170:	01040200 	mrseq	r0, R12_usr
    1174:	05200106 	streq	r0, [r0, #-262]!	@ 0xfffffefa
    1178:	2e180301 	cdpcs	3, 1, cr0, cr8, cr1, {0}
    117c:	03060305 	movweq	r0, #25349	@ 0x6305
    1180:	11052067 	tstne	r5, r7, rrx
    1184:	0a050106 	beq	1415a4 <_Min_Stack_Size+0x1411a4>
    1188:	2f100520 	svccs	0x00100520
    118c:	051f0a05 	ldreq	r0, [pc, #-2565]	@ 78f <_Min_Stack_Size+0x38f>
    1190:	0a052110 	beq	1495d8 <_Min_Stack_Size+0x1491d8>
    1194:	2205051f 	andcs	r0, r5, #130023424	@ 0x7c00000
    1198:	051e0a05 	ldreq	r0, [lr, #-2565]	@ 0xfffff5fb
    119c:	132f0603 			@ <UNDEFINED> instruction: 0x132f0603
    11a0:	01060505 	tsteq	r6, r5, lsl #10
    11a4:	21060305 	tstcs	r6, r5, lsl #6
    11a8:	01061105 	tsteq	r6, r5, lsl #2
    11ac:	05210a05 	streq	r0, [r1, #-2565]!	@ 0xfffff5fb
    11b0:	11052314 	tstne	r5, r4, lsl r3
    11b4:	0603051c 			@ <UNDEFINED> instruction: 0x0603051c
    11b8:	060a052f 	streq	r0, [sl], -pc, lsr #10
    11bc:	06030501 	streq	r0, [r3], -r1, lsl #10
    11c0:	14051330 	strne	r1, [r5], #-816	@ 0xfffffcd0
    11c4:	03050106 	movweq	r0, #20742	@ 0x5106
    11c8:	16142f06 	ldrne	r2, [r4], -r6, lsl #30
    11cc:	01060e05 	tsteq	r6, r5, lsl #28
    11d0:	06200505 	strteq	r0, [r0], -r5, lsl #10
    11d4:	060f052f 	streq	r0, [pc], -pc, lsr #10
    11d8:	030a0501 	movweq	r0, #42241	@ 0xa501
    11dc:	05222079 	streq	r2, [r2, #-121]!	@ 0xffffff87
    11e0:	05052519 	streq	r2, [r5, #-1305]	@ 0xfffffae7
    11e4:	0c054b06 			@ <UNDEFINED> instruction: 0x0c054b06
    11e8:	03050106 	movweq	r0, #20742	@ 0x5106
    11ec:	0f054f06 	svceq	0x00054f06
    11f0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    11f4:	1d050531 	cfstr32ne	mvfx0, [r5, #-196]	@ 0xffffff3c
    11f8:	20061405 	andcs	r1, r6, r5, lsl #8
    11fc:	01061d05 	tsteq	r6, r5, lsl #26
    1200:	75060305 	strvc	r0, [r6, #-773]	@ 0xfffffcfb
    1204:	01061305 	tsteq	r6, r5, lsl #6
    1208:	053c0d05 	ldreq	r0, [ip, #-3333]!	@ 0xfffff2fb
    120c:	053e0603 	ldreq	r0, [lr, #-1539]!	@ 0xfffff9fd
    1210:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    1214:	0f05200c 	svceq	0x0005200c
    1218:	03058506 	movweq	r8, #21766	@ 0x5506
    121c:	06100513 			@ <UNDEFINED> instruction: 0x06100513
    1220:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    1224:	0c052f06 	stceq	15, cr2, [r5], {6}
    1228:	07050106 	streq	r0, [r5, -r6, lsl #2]
    122c:	0541063c 	strbeq	r0, [r1, #-1596]	@ 0xfffff9c4
    1230:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
    1234:	05222010 	streq	r2, [r2, #-16]!
    1238:	7a030609 	bvc	c2a64 <_Min_Stack_Size+0xc2664>
    123c:	0616052e 	ldreq	r0, [r6], -lr, lsr #10
    1240:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    1244:	4b060505 	blmi	182660 <_Min_Stack_Size+0x182260>
    1248:	01060c05 	tsteq	r6, r5, lsl #24
    124c:	06200705 	strteq	r0, [r0], -r5, lsl #14
    1250:	060b0533 			@ <UNDEFINED> instruction: 0x060b0533
    1254:	20100501 	andscs	r0, r0, r1, lsl #10
    1258:	2b060505 	blcs	182674 <_Min_Stack_Size+0x182274>
    125c:	01061205 	tsteq	r6, r5, lsl #4
    1260:	052e1905 	streq	r1, [lr, #-2309]!	@ 0xfffff6fb
    1264:	07052012 	smladeq	r5, r2, r0, r2
    1268:	060b0520 	streq	r0, [fp], -r0, lsr #10
    126c:	0618053e 			@ <UNDEFINED> instruction: 0x0618053e
    1270:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    1274:	05201805 	streq	r1, [r0, #-2053]!	@ 0xfffff7fb
    1278:	0d052024 	stceq	0, cr2, [r5, #-144]	@ 0xffffff70
    127c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1280:	060d0540 	streq	r0, [sp], -r0, asr #10
    1284:	06030501 	streq	r0, [r3], -r1, lsl #10
    1288:	0607054b 	streq	r0, [r7], -fp, asr #10
    128c:	200d0501 	andcs	r0, sp, r1, lsl #10
    1290:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
    1294:	01060d05 	tsteq	r6, r5, lsl #26
    1298:	042f0105 	strteq	r0, [pc], #-261	@ 12a0 <_Min_Stack_Size+0xea0>
    129c:	06410504 	strbeq	r0, [r1], -r4, lsl #10
    12a0:	3c7f9503 	cfldr64cc	mvdx9, [pc], #-12	@ 129c <_Min_Stack_Size+0xe9c>
    12a4:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    12a8:	0501060a 	streq	r0, [r1, #-1546]	@ 0xfffff9f6
    12ac:	2f062005 	svccs	0x00062005
    12b0:	01060705 	tsteq	r6, r5, lsl #14
    12b4:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    12b8:	0a050106 	beq	1416d8 <_Min_Stack_Size+0x1412d8>
    12bc:	054a1103 	strbeq	r1, [sl, #-259]	@ 0xfffffefd
    12c0:	03052101 	movweq	r2, #20737	@ 0x5101
    12c4:	20750306 	rsbscs	r0, r5, r6, lsl #6
    12c8:	06050513 			@ <UNDEFINED> instruction: 0x06050513
    12cc:	052f0601 	streq	r0, [pc, #-1537]!	@ cd3 <_Min_Stack_Size+0x8d3>
    12d0:	06010607 	streq	r0, [r1], -r7, lsl #12
    12d4:	0614053d 			@ <UNDEFINED> instruction: 0x0614053d
    12d8:	07052001 	streq	r2, [r5, -r1]
    12dc:	13133e06 	tstne	r3, #6, 28	@ 0x60
    12e0:	01060e05 	tsteq	r6, r5, lsl #28
    12e4:	211e0d05 	tstcs	lr, r5, lsl #26
    12e8:	76031005 	strvc	r1, [r3], -r5
    12ec:	05202e20 	streq	r2, [r0, #-3616]!	@ 0xfffff1e0
    12f0:	05000648 	streq	r0, [r0, #-1608]	@ 0xfffff9b8
    12f4:	000bc402 	andeq	ip, fp, r2, lsl #8
    12f8:	01110308 	tsteq	r1, r8, lsl #6
    12fc:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1300:	05110648 	ldreq	r0, [r1, #-1608]	@ 0xfffff9b8
    1304:	3d062105 	stfccs	f2, [r6, #-20]	@ 0xffffffec
    1308:	01060705 	tsteq	r6, r5, lsl #14
    130c:	3a060605 	bcc	182b28 <_Min_Stack_Size+0x182728>
    1310:	05150705 	ldreq	r0, [r5, #-1797]	@ 0xfffff8fb
    1314:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1318:	05220607 	streq	r0, [r2, #-1543]!	@ 0xfffff9f9
    131c:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1320:	042f0607 	strteq	r0, [pc], #-1543	@ 1328 <_Min_Stack_Size+0xf28>
    1324:	03130503 	tsteq	r3, #12582912	@ 0xc00000
    1328:	05010187 	streq	r0, [r1, #-391]	@ 0xfffffe79
    132c:	0a051303 	beq	145f40 <_Min_Stack_Size+0x145b40>
    1330:	2e2e0106 	sufcse	f0, f6, f6
    1334:	0504042e 	streq	r0, [r4, #-1070]	@ 0xfffffbd2
    1338:	fb030607 	blx	c2b5e <_Min_Stack_Size+0xc275e>
    133c:	1c05017e 	stfnes	f0, [r5], {126}	@ 0x7e
    1340:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1344:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    1348:	07050106 	streq	r0, [r5, -r6, lsl #2]
    134c:	0c052f06 	stceq	15, cr2, [r5], {6}
    1350:	052e1106 	streq	r1, [lr, #-262]!	@ 0xfffffefa
    1354:	07052112 	smladeq	r5, r2, r1, r2
    1358:	13053006 	movwne	r3, #20486	@ 0x5006
    135c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1360:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    1364:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1368:	14052f06 	strne	r2, [r5], #-3846	@ 0xfffff0fa
    136c:	0c051106 	stfeqs	f1, [r5], {6}
    1370:	2f120520 	svccs	0x00120520
    1374:	3f060705 	svccc	0x00060705
    1378:	11050504 	tstne	r5, r4, lsl #10
    137c:	05014003 	streq	r4, [r1, #-3]
    1380:	2505011e 	strcs	r0, [r5, #-286]	@ 0xfffffee2
    1384:	04040106 	streq	r0, [r4], #-262	@ 0xfffffefa
    1388:	c0032205 	andgt	r2, r3, r5, lsl #4
    138c:	13052e00 	movwne	r2, #24064	@ 0x5e00
    1390:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1394:	061e0522 	ldreq	r0, [lr], -r2, lsr #10
    1398:	20016f03 	andcs	r6, r1, r3, lsl #30
    139c:	15030105 	strne	r0, [r3, #-261]	@ 0xfffffefb
    13a0:	032d0501 			@ <UNDEFINED> instruction: 0x032d0501
    13a4:	0520206d 	streq	r2, [r0, #-109]!	@ 0xffffff93
    13a8:	05000610 	streq	r0, [r0, #-1552]	@ 0xfffff9f0
    13ac:	000c2802 	andeq	r2, ip, r2, lsl #16
    13b0:	01150308 	tsteq	r5, r8, lsl #6
    13b4:	05140305 	ldreq	r0, [r4, #-773]	@ 0xfffffcfb
    13b8:	05010618 	streq	r0, [r1, #-1560]	@ 0xfffff9e8
    13bc:	1805213c 	stmdane	r5, {r2, r3, r4, r5, r8, sp}
    13c0:	2020051f 	eorcs	r0, r0, pc, lsl r5
    13c4:	052e3805 	streq	r3, [lr, #-2053]!	@ 0xfffff7fb
    13c8:	03054a10 	movweq	r4, #23056	@ 0x5a10
    13cc:	1a052106 	bne	1497ec <_Min_Stack_Size+0x1493ec>
    13d0:	3c050106 	stfccs	f0, [r5], {6}
    13d4:	58120520 	ldmdapl	r2, {r5, r8, sl}
    13d8:	22060305 	andcs	r0, r6, #335544320	@ 0x14000000
    13dc:	01061805 	tsteq	r6, r5, lsl #16
    13e0:	052e2005 	streq	r2, [lr, #-5]!
    13e4:	10052039 	andne	r2, r5, r9, lsr r0
    13e8:	0603054a 	streq	r0, [r3], -sl, asr #10
    13ec:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    13f0:	2e240501 	cfsh64cs	mvdx0, mvdx4, #1
    13f4:	05203d05 	streq	r3, [r0, #-3333]!	@ 0xfffff2fb
    13f8:	01052012 	tsteq	r5, r2, lsl r0
    13fc:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    1400:	13030568 	movwne	r0, #13672	@ 0x3568
    1404:	11050504 	tstne	r5, r4, lsl #10
    1408:	017fae03 	cmneq	pc, r3, lsl #28
    140c:	05011e05 	streq	r1, [r1, #-3589]	@ 0xfffff1fb
    1410:	04010625 	streq	r0, [r1], #-1573	@ 0xfffff9db
    1414:	03130504 	tsteq	r3, #4, 10	@ 0x1000000
    1418:	052e00d2 	streq	r0, [lr, #-210]!	@ 0xffffff2e
    141c:	21062e05 	tstcs	r6, r5, lsl #28
    1420:	01061105 	tsteq	r6, r5, lsl #2
    1424:	044d0105 	strbeq	r0, [sp], #-261	@ 0xfffffefb
    1428:	06500501 	ldrbeq	r0, [r0], -r1, lsl #10
    142c:	58038f03 	stmdapl	r3, {r0, r1, r8, r9, sl, fp, pc}
    1430:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1434:	05140807 	ldreq	r0, [r4, #-2055]	@ 0xfffff7f9
    1438:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
    143c:	052f0607 	streq	r0, [pc, #-1543]!	@ e3d <_Min_Stack_Size+0xa3d>
    1440:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
    1444:	20240320 	eorcs	r0, r4, r0, lsr #6
    1448:	21060705 	tstcs	r6, r5, lsl #14
    144c:	16060105 	strne	r0, [r6], -r5, lsl #2
    1450:	03060705 	movweq	r0, #26373	@ 0x6705
    1454:	0d05205a 	stceq	0, cr2, [r5, #-360]	@ 0xfffffe98
    1458:	07050106 	streq	r0, [r5, -r6, lsl #2]
    145c:	0d052f06 	stceq	15, cr2, [r5, #-24]	@ 0xffffffe8
    1460:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1464:	0d053f06 	stceq	15, cr3, [r5, #-24]	@ 0xffffffe8
    1468:	07050106 	streq	r0, [r5, -r6, lsl #2]
    146c:	0d052f06 	stceq	15, cr2, [r5, #-24]	@ 0xffffffe8
    1470:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1474:	20063106 	andcs	r3, r6, r6, lsl #2
    1478:	05921105 	ldreq	r1, [r2, #261]	@ 0x105
    147c:	17030607 	strne	r0, [r3, -r7, lsl #12]
    1480:	06200520 	strteq	r0, [r0], -r0, lsr #10
    1484:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1488:	132e6f03 			@ <UNDEFINED> instruction: 0x132e6f03
    148c:	13301330 	teqne	r0, #48, 6	@ 0xc0000000
    1490:	13301330 	teqne	r0, #48, 6	@ 0xc0000000
    1494:	05004705 	streq	r4, [r0, #-1797]	@ 0xfffff8fb
    1498:	000d2802 	andeq	r2, sp, r2, lsl #16
    149c:	010b0308 	tsteq	fp, r8, lsl #6
    14a0:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    14a4:	20110647 	andscs	r0, r1, r7, asr #12
    14a8:	053d0705 	ldreq	r0, [sp, #-1797]!	@ 0xfffff8fb
    14ac:	2d052e05 	stccs	14, cr2, [r5, #-20]	@ 0xffffffec
    14b0:	25010520 	strcs	r0, [r1, #-1312]	@ 0xfffffae0
    14b4:	1c060305 	stcne	3, cr0, [r6], {5}
    14b8:	06070513 			@ <UNDEFINED> instruction: 0x06070513
    14bc:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    14c0:	2f060305 	svccs	0x00060305
    14c4:	01060705 	tsteq	r6, r5, lsl #14
    14c8:	05580505 	ldrbeq	r0, [r8, #-1285]	@ 0xfffffafb
    14cc:	0500064e 	streq	r0, [r0, #-1614]	@ 0xfffff9b2
    14d0:	000d5602 	andeq	r5, sp, r2, lsl #12
    14d4:	03051608 	movweq	r1, #22024	@ 0x5608
    14d8:	064e0513 			@ <UNDEFINED> instruction: 0x064e0513
    14dc:	07052011 	smladeq	r5, r1, r0, r2
    14e0:	2e05053d 	mcrcs	5, 0, r0, cr5, cr13, {1}
    14e4:	05203305 	streq	r3, [r0, #-773]!	@ 0xfffffcfb
    14e8:	03052501 	movweq	r2, #21761	@ 0x5501
    14ec:	05131c06 	ldreq	r1, [r3, #-3078]	@ 0xfffff3fa
    14f0:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    14f4:	03055805 	movweq	r5, #22533	@ 0x5805
    14f8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
    14fc:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1500:	06160558 			@ <UNDEFINED> instruction: 0x06160558
    1504:	88020500 	stmdahi	r2, {r8, sl}
    1508:	1608000d 	strne	r0, [r8], -sp
    150c:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1510:	05110616 	ldreq	r0, [r1, #-1558]	@ 0xfffff9ea
    1514:	2f062103 	svccs	0x00062103
    1518:	0d050204 	sfmeq	f0, 4, [r5, #-16]
    151c:	017bf103 	cmneq	fp, r3, lsl #2	@ <UNPREDICTABLE>
    1520:	67130305 	ldrvs	r0, [r3, -r5, lsl #6]
    1524:	2e012e01 	cdpcs	14, 0, cr2, cr1, cr1, {0}
    1528:	012e2020 			@ <UNDEFINED> instruction: 0x012e2020
    152c:	14010120 	strne	r0, [r1], #-288	@ 0xfffffee0
    1530:	01060605 	tsteq	r6, r5, lsl #12
    1534:	053c0b05 	ldreq	r0, [ip, #-2821]!	@ 0xfffff4fb
    1538:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
    153c:	15050107 	strne	r0, [r5, #-263]	@ 0xfffffef9
    1540:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1544:	06050511 			@ <UNDEFINED> instruction: 0x06050511
    1548:	060b0530 			@ <UNDEFINED> instruction: 0x060b0530
    154c:	20070501 	andcs	r0, r7, r1, lsl #10
    1550:	2d061e05 	stccs	14, cr1, [r6, #-20]	@ 0xffffffec
    1554:	06011505 	streq	r1, [r1], -r5, lsl #10
    1558:	03053c20 	movweq	r3, #23584	@ 0x5c20
    155c:	06051606 	streq	r1, [r5], -r6, lsl #12
    1560:	10050106 	andne	r0, r5, r6, lsl #2
    1564:	06030520 	streq	r0, [r3], -r0, lsr #10
    1568:	0606053d 			@ <UNDEFINED> instruction: 0x0606053d
    156c:	31030501 	tstcc	r3, r1, lsl #10
    1570:	052b0c05 	streq	r0, [fp, #-3077]!	@ 0xfffff3fb
    1574:	014b0603 	cmpeq	fp, r3, lsl #12
    1578:	4a011466 	bmi	46718 <_Min_Stack_Size+0x46318>
    157c:	05013e05 	streq	r3, [r1, #-3589]	@ 0xfffff1fb
    1580:	01011303 	tsteq	r1, r3, lsl #6
    1584:	01010166 	tsteq	r1, r6, ror #2
    1588:	0401133c 	streq	r1, [r1], #-828	@ 0xfffffcc4
    158c:	06270506 	strteq	r0, [r7], -r6, lsl #10
    1590:	010bb403 	tsteq	fp, r3, lsl #8
    1594:	03050204 	movweq	r0, #20996	@ 0x5204
    1598:	2e74cc03 	cdpcs	12, 7, cr12, cr4, cr3, {0}
    159c:	01134a06 	tsteq	r3, r6, lsl #20
    15a0:	01010120 	tsteq	r1, r0, lsr #2
    15a4:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    15a8:	1320012e 			@ <UNDEFINED> instruction: 0x1320012e
    15ac:	01060705 	tsteq	r6, r5, lsl #14
    15b0:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
    15b4:	043d0603 	ldrteq	r0, [sp], #-1539	@ 0xfffff9fd
    15b8:	03160506 	tsteq	r6, #25165824	@ 0x1800000
    15bc:	05010baf 	streq	r0, [r1, #-2991]	@ 0xfffff451
    15c0:	27051403 	strcs	r1, [r5, -r3, lsl #8]
    15c4:	042e0106 	strteq	r0, [lr], #-262	@ 0xfffffefa
    15c8:	06030502 	streq	r0, [r3], -r2, lsl #10
    15cc:	0174d103 	cmneq	r4, r3, lsl #2
    15d0:	01060705 	tsteq	r6, r5, lsl #14
    15d4:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
    15d8:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
    15dc:	05010610 	streq	r0, [r1, #-1552]	@ 0xfffff9f0
    15e0:	05200627 	streq	r0, [r0, #-1575]!	@ 0xfffff9d9
    15e4:	10050109 	andne	r0, r5, r9, lsl #2
    15e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15ec:	06030520 	streq	r0, [r3], -r0, lsr #10
    15f0:	06060531 			@ <UNDEFINED> instruction: 0x06060531
    15f4:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    15f8:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
    15fc:	01060d05 	tsteq	r6, r5, lsl #26
    1600:	4b060305 	blmi	18221c <_Min_Stack_Size+0x181e1c>
    1604:	01060d05 	tsteq	r6, r5, lsl #26
    1608:	2f060305 	svccs	0x00060305
    160c:	01060705 	tsteq	r6, r5, lsl #14
    1610:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
    1614:	013d0603 	teqeq	sp, r3, lsl #12
    1618:	0e051366 	cdpeq	3, 0, cr1, cr5, cr6, {3}
    161c:	03050106 	movweq	r0, #20742	@ 0x5106
    1620:	07052f06 	streq	r2, [r5, -r6, lsl #30]
    1624:	0f050106 	svceq	0x00050106
    1628:	06030520 	streq	r0, [r3], -r0, lsr #10
    162c:	060e053d 			@ <UNDEFINED> instruction: 0x060e053d
    1630:	06030501 	streq	r0, [r3], -r1, lsl #10
    1634:	0607052f 	streq	r0, [r7], -pc, lsr #10
    1638:	200d0501 	andcs	r0, sp, r1, lsl #10
    163c:	0501043c 	streq	r0, [r1, #-1084]	@ 0xfffffbc4
    1640:	f0030603 			@ <UNDEFINED> instruction: 0xf0030603
    1644:	052f0103 	streq	r0, [pc, #-259]!	@ 1549 <_Min_Stack_Size+0x1149>
    1648:	05130601 	ldreq	r0, [r3, #-1537]	@ 0xfffff9ff
    164c:	16052d03 	strne	r2, [r5], -r3, lsl #26
    1650:	02050006 	andeq	r0, r5, #6
    1654:	08000ea4 	stmdaeq	r0, {r2, r5, r7, r9, sl, fp}
    1658:	13030515 	movwne	r0, #13589	@ 0x3515
    165c:	11061605 	tstne	r6, r5, lsl #12
    1660:	06210305 	strteq	r0, [r1], -r5, lsl #6
    1664:	052f132f 	streq	r1, [pc, #-815]!	@ 133d <_Min_Stack_Size+0xf3d>
    1668:	05130601 	ldreq	r0, [r3, #-1537]	@ 0xfffff9ff
    166c:	15052d03 	strne	r2, [r5, #-3331]	@ 0xfffff2fd
    1670:	02050006 	andeq	r0, r5, #6
    1674:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
    1678:	13030515 	movwne	r0, #13589	@ 0x3515
    167c:	01000202 	tsteq	r0, r2, lsl #4
    1680:	00097e01 	andeq	r7, r9, r1, lsl #28
    1684:	ac000300 	stcge	3, cr0, [r0], {-0}
    1688:	02000000 	andeq	r0, r0, #0
    168c:	0d0efb01 	vstreq	d15, [lr, #-4]
    1690:	01010100 	mrseq	r0, (UNDEF: 17)
    1694:	00000001 	andeq	r0, r0, r1
    1698:	01000001 	tsteq	r0, r1
    169c:	00637273 	rsbeq	r7, r3, r3, ror r2
    16a0:	2f62696c 	svccs	0x0062696c
    16a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
    16a8:	00656475 	rsbeq	r6, r5, r5, ror r4
    16ac:	7273752f 	rsbsvc	r7, r3, #197132288	@ 0xbc00000
    16b0:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
    16b4:	6363672f 	cmnvs	r3, #12320768	@ 0xbc0000
    16b8:	6d72612f 	ldfvse	f6, [r2, #-188]!	@ 0xffffff44
    16bc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    16c0:	61652d65 	cmnvs	r5, r5, ror #26
    16c4:	312f6962 			@ <UNDEFINED> instruction: 0x312f6962
    16c8:	2e322e32 	mrccs	14, 1, r2, cr2, cr2, {1}
    16cc:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    16d0:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
    16d4:	70000065 	andvc	r0, r0, r5, rrx
    16d8:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
    16dc:	656d6d61 	strbvs	r6, [sp, #-3425]!	@ 0xfffff29f
    16e0:	00632e72 	rsbeq	r2, r3, r2, ror lr
    16e4:	75000001 	strvc	r0, [r0, #-1]
    16e8:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    16ec:	00010068 	andeq	r0, r1, r8, rrx
    16f0:	62737500 	rsbsvs	r7, r3, #0, 10
    16f4:	62696c5f 	rsbvs	r6, r9, #24320	@ 0x5f00
    16f8:	0100682e 	tsteq	r0, lr, lsr #16
    16fc:	79730000 	ldmdbvc	r3!, {}^	@ <UNPREDICTABLE>
    1700:	63697473 	cmnvs	r9, #1929379840	@ 0x73000000
    1704:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    1708:	63000001 	movwvs	r0, #1
    170c:	5f65726f 	svcpl	0x0065726f
    1710:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
    1714:	00020068 	andeq	r0, r2, r8, rrx
    1718:	64747300 	ldrbtvs	r7, [r4], #-768	@ 0xfffffd00
    171c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1720:	00030068 	andeq	r0, r3, r8, rrx
    1724:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1728:	316c3233 	cmncc	ip, r3, lsr r2
    172c:	63783135 	cmnvs	r8, #1073741837	@ 0x4000000d
    1730:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
    1734:	04000000 	streq	r0, [r0], #-0
    1738:	00280502 	eoreq	r0, r8, r2, lsl #10
    173c:	0ebc0205 	cdpeq	2, 11, cr0, cr12, cr5, {0}
    1740:	3e030800 	cdpcc	8, 0, cr0, cr3, cr0, {0}
    1744:	13030501 	movwne	r0, #13569	@ 0x3501
    1748:	01060f05 	tsteq	r6, r5, lsl #30
    174c:	05201905 	streq	r1, [r0, #-2309]!	@ 0xfffff6fb
    1750:	0105201f 	tsteq	r5, pc, lsl r0
    1754:	06280521 	strteq	r0, [r8], -r1, lsr #10
    1758:	13030530 	movwne	r0, #13616	@ 0x3530
    175c:	03090513 	movweq	r0, #38163	@ 0x9513
    1760:	0305017a 	movweq	r0, #20858	@ 0x517a
    1764:	060f0513 			@ <UNDEFINED> instruction: 0x060f0513
    1768:	20190501 	andscs	r0, r9, r1, lsl #10
    176c:	05232805 	streq	r2, [r3, #-2053]!	@ 0xfffff7fb
    1770:	03052205 	movweq	r2, #20997	@ 0x5205
    1774:	15052f06 	strne	r2, [r5, #-3846]	@ 0xfffff0fa
    1778:	07050106 	streq	r0, [r5, -r6, lsl #2]
    177c:	2f060520 	svccs	0x00060520
    1780:	051f0705 	ldreq	r0, [pc, #-1797]	@ 1083 <_Min_Stack_Size+0xc83>
    1784:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
    1788:	0501060a 	streq	r0, [r1, #-1546]	@ 0xfffff9f6
    178c:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
    1790:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
    1794:	03052e0b 	movweq	r2, #24075	@ 0x5e0b
    1798:	0a052106 	beq	149bb8 <_Min_Stack_Size+0x1497b8>
    179c:	25050106 	strcs	r0, [r5, #-262]	@ 0xfffffefa
    17a0:	2501051c 	strcs	r0, [r1, #-1308]	@ 0xfffffae4
    17a4:	22063305 	andcs	r3, r6, #335544320	@ 0x14000000
    17a8:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    17ac:	01720309 	cmneq	r2, r9, lsl #6
    17b0:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    17b4:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    17b8:	1f052019 	svcne	0x00052019
    17bc:	03050520 	movweq	r0, #21792	@ 0x5520
    17c0:	0605200d 	streq	r2, [r5], -sp
    17c4:	05053b06 	streq	r3, [r5, #-2822]	@ 0xfffff4fa
    17c8:	06110514 			@ <UNDEFINED> instruction: 0x06110514
    17cc:	20160501 	andscs	r0, r6, r1, lsl #10
    17d0:	2f060505 	svccs	0x00060505
    17d4:	01060805 	tsteq	r6, r5, lsl #16
    17d8:	05200c05 	streq	r0, [r0, #-3077]!	@ 0xfffff3fb
    17dc:	053c0610 	ldreq	r0, [ip, #-1552]!	@ 0xfffff9f0
    17e0:	05010613 	streq	r0, [r1, #-1555]	@ 0xfffff9ed
    17e4:	05202e18 	streq	r2, [r0, #-3608]!	@ 0xfffff1e8
    17e8:	1d051401 	cfstrsne	mvf1, [r5, #-4]
    17ec:	203d0306 	eorscs	r0, sp, r6, lsl #6
    17f0:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    17f4:	0511061d 	ldreq	r0, [r1, #-1565]	@ 0xfffff9e3
    17f8:	0505210d 	streq	r2, [r5, #-269]	@ 0xfffffef3
    17fc:	052f062e 	streq	r0, [pc, #-1582]!	@ 11d6 <_Min_Stack_Size+0xdd6>
    1800:	0501061a 	streq	r0, [r1, #-1562]	@ 0xfffff9e6
    1804:	06210605 	strteq	r0, [r1], -r5, lsl #12
    1808:	1701052e 	strne	r0, [r1, -lr, lsr #10]
    180c:	2e290505 	cfsh64cs	mvdx0, mvdx9, #5
    1810:	13060905 	movwne	r0, #26885	@ 0x6905
    1814:	01061305 	tsteq	r6, r5, lsl #6
    1818:	05200b05 	streq	r0, [r0, #-2821]!	@ 0xfffff4fb
    181c:	052f0605 	streq	r0, [pc, #-1541]!	@ 121f <_Min_Stack_Size+0xe1f>
    1820:	7fac0309 	svcvc	0x00ac0309
    1824:	13030501 	movwne	r0, #13569	@ 0x3501
    1828:	01060f05 	tsteq	r6, r5, lsl #30
    182c:	053c1905 	ldreq	r1, [ip, #-2309]!	@ 0xfffff6fb
    1830:	00d30307 	sbcseq	r0, r3, r7, lsl #6
    1834:	0026052e 	eoreq	r0, r6, lr, lsr #10
    1838:	06010402 	streq	r0, [r1], -r2, lsl #8
    183c:	0033052e 	eorseq	r0, r3, lr, lsr #10
    1840:	06010402 	streq	r0, [r1], -r2, lsl #8
    1844:	00310501 	eorseq	r0, r1, r1, lsl #10
    1848:	4a010402 	bmi	42858 <_Min_Stack_Size+0x42458>
    184c:	05230105 	streq	r0, [r3, #-261]!	@ 0xfffffefb
    1850:	051e060c 	ldreq	r0, [lr, #-1548]	@ 0xfffff9f4
    1854:	05010612 	streq	r0, [r1, #-1554]	@ 0xfffff9ee
    1858:	01052018 	tsteq	r5, r8, lsl r0
    185c:	062d053e 			@ <UNDEFINED> instruction: 0x062d053e
    1860:	58020500 	stmdapl	r2, {r8, sl}
    1864:	1408000f 	strne	r0, [r8], #-15
    1868:	05200106 	streq	r0, [r0, #-262]!	@ 0xfffffefa
    186c:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
    1870:	0020060f 	eoreq	r0, r0, pc, lsl #12
    1874:	06010402 	streq	r0, [r1], -r2, lsl #8
    1878:	0009052e 	andeq	r0, r9, lr, lsr #10
    187c:	01010402 	tsteq	r1, r2, lsl #8
    1880:	01040200 	mrseq	r0, R12_usr
    1884:	01050106 	tsteq	r5, r6, lsl #2
    1888:	000f052f 	andeq	r0, pc, pc, lsr #10
    188c:	06020402 	streq	r0, [r2], -r2, lsl #8
    1890:	0402001f 	streq	r0, [r2], #-31	@ 0xffffffe1
    1894:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
    1898:	01060204 	tsteq	r6, r4, lsl #4
    189c:	02040200 	andeq	r0, r4, #0, 4
    18a0:	0402002e 	streq	r0, [r2], #-46	@ 0xffffffd2
    18a4:	052e0602 	streq	r0, [lr, #-1538]!	@ 0xfffff9fe
    18a8:	0205001b 	andeq	r0, r5, #27
    18ac:	08000f84 	stmdaeq	r0, {r2, r7, r8, r9, sl, fp}
    18b0:	13030515 	movwne	r0, #13589	@ 0x3515
    18b4:	11061b05 	tstne	r6, r5, lsl #22
    18b8:	002f1505 	eoreq	r1, pc, r5, lsl #10
    18bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    18c0:	0010052e 	andseq	r0, r0, lr, lsr #10
    18c4:	01010402 	tsteq	r1, r2, lsl #8
    18c8:	02000c05 	andeq	r0, r0, #1280	@ 0x500
    18cc:	01060104 	tsteq	r6, r4, lsl #2
    18d0:	02001005 	andeq	r1, r0, #5
    18d4:	052e0104 	streq	r0, [lr, #-260]!	@ 0xfffffefc
    18d8:	15052101 	strne	r2, [r5, #-257]	@ 0xfffffeff
    18dc:	02040200 	andeq	r0, r4, #0, 4
    18e0:	02001f06 	andeq	r1, r0, #6, 30
    18e4:	00010204 	andeq	r0, r1, r4, lsl #4
    18e8:	06020402 	streq	r0, [r2], -r2, lsl #8
    18ec:	04020001 	streq	r0, [r2], #-1
    18f0:	052e0602 	streq	r0, [lr, #-1538]!	@ 0xfffff9fe
    18f4:	0205002c 	andeq	r0, r5, #44	@ 0x2c
    18f8:	08000fac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, fp}
    18fc:	20010615 	andcs	r0, r1, r5, lsl r6
    1900:	21060305 	tstcs	r6, r5, lsl #6
    1904:	03060f05 	movweq	r0, #28421	@ 0x6f05
    1908:	2e017f9f 	mcrcs	15, 0, r7, cr1, cr15, {4}
    190c:	03060905 	movweq	r0, #26885	@ 0x6905
    1910:	060100e1 	streq	r0, [r1], -r1, ror #1
    1914:	32010501 	andcc	r0, r1, #4194304	@ 0x400000
    1918:	02002205 	andeq	r2, r0, #1342177280	@ 0x50000000
    191c:	1d060104 	stfnes	f0, [r6, #-16]
    1920:	02001c05 	andeq	r1, r0, #1280	@ 0x500
    1924:	05010104 	streq	r0, [r1, #-260]	@ 0xfffffefc
    1928:	04020009 	streq	r0, [r2], #-9
    192c:	7f9d0301 	svcvc	0x009d0301
    1930:	00030501 	andeq	r0, r3, r1, lsl #10
    1934:	13010402 	movwne	r0, #5122	@ 0x1402
    1938:	02000f05 	andeq	r0, r0, #5, 30
    193c:	01060104 	tsteq	r6, r4, lsl #2
    1940:	02001905 	andeq	r1, r0, #81920	@ 0x14000
    1944:	05200104 	streq	r0, [r0, #-260]!	@ 0xfffffefc
    1948:	0402001c 	streq	r0, [r2], #-28	@ 0xffffffe4
    194c:	00e20301 	rsceq	r0, r2, r1, lsl #6
    1950:	06050520 	streq	r0, [r5], -r0, lsr #10
    1954:	06110559 			@ <UNDEFINED> instruction: 0x06110559
    1958:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    195c:	0628052e 	strteq	r0, [r8], -lr, lsr #10
    1960:	d8020500 	stmdale	r2, {r8, sl}
    1964:	1608000f 	strne	r0, [r8], -pc
    1968:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    196c:	05110628 	ldreq	r0, [r1, #-1576]	@ 0xfffff9d8
    1970:	7f99030f 	svcvc	0x0099030f
    1974:	09052e3c 	stmdbeq	r5, {r2, r3, r4, r5, r9, sl, fp, sp}
    1978:	0100e803 	tsteq	r0, r3, lsl #16
    197c:	01062e06 	tsteq	r6, r6, lsl #28
    1980:	26060305 	strcs	r0, [r6], -r5, lsl #6
    1984:	01060505 	tsteq	r6, r5, lsl #10
    1988:	07052f06 	streq	r2, [r5, -r6, lsl #30]
    198c:	10050106 	andne	r0, r5, r6, lsl #2
    1990:	14052006 	strne	r2, [r5], #-6
    1994:	23051306 	movwcs	r1, #21254	@ 0x5306
    1998:	1f17053c 	svcne	0x0017053c
    199c:	05212305 	streq	r2, [r1, #-773]!	@ 0xfffffcfb
    19a0:	17052e32 	smladxne	r5, r2, lr, r2
    19a4:	060d051f 			@ <UNDEFINED> instruction: 0x060d051f
    19a8:	011c0521 	tsteq	ip, r1, lsr #10
    19ac:	05012b05 	streq	r2, [r1, #-2821]	@ 0xfffff4fb
    19b0:	05010632 	streq	r0, [r1, #-1586]	@ 0xfffff9ce
    19b4:	22052201 	andcs	r2, r5, #268435456	@ 0x10000000
    19b8:	01040200 	mrseq	r0, R12_usr
    19bc:	20770306 	rsbscs	r0, r7, r6, lsl #6
    19c0:	02001c05 	andeq	r1, r0, #1280	@ 0x500
    19c4:	05010104 	streq	r0, [r1, #-260]	@ 0xfffffefc
    19c8:	04020009 	streq	r0, [r2], #-9
    19cc:	7f960301 	svcvc	0x00960301
    19d0:	00030501 	andeq	r0, r3, r1, lsl #10
    19d4:	13010402 	movwne	r0, #5122	@ 0x1402
    19d8:	02000f05 	andeq	r0, r0, #5, 30
    19dc:	01060104 	tsteq	r6, r4, lsl #2
    19e0:	02001905 	andeq	r1, r0, #81920	@ 0x14000
    19e4:	05200104 	streq	r0, [r0, #-260]!	@ 0xfffffefc
    19e8:	0402001c 	streq	r0, [r2], #-28	@ 0xffffffe4
    19ec:	00e90301 	rsceq	r0, r9, r1, lsl #6
    19f0:	06050520 	streq	r0, [r5], -r0, lsr #10
    19f4:	060e0559 			@ <UNDEFINED> instruction: 0x060e0559
    19f8:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    19fc:	2f060505 	svccs	0x00060505
    1a00:	01060705 	tsteq	r6, r5, lsl #14
    1a04:	02001405 	andeq	r1, r0, #83886080	@ 0x5000000
    1a08:	002e0104 	eoreq	r0, lr, r4, lsl #2
    1a0c:	58010402 	stmdapl	r1, {r1, sl}
    1a10:	48050104 	stmdami	r5, {r2, r8}
    1a14:	02050006 	andeq	r0, r5, #6
    1a18:	08001030 	stmdaeq	r0, {r4, r5, ip}
    1a1c:	017f8903 	cmneq	pc, r3, lsl #18
    1a20:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1a24:	06010605 	streq	r0, [r1], -r5, lsl #12
    1a28:	06070559 			@ <UNDEFINED> instruction: 0x06070559
    1a2c:	053d0601 	ldreq	r0, [sp, #-1537]!	@ 0xfffff9ff
    1a30:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
    1a34:	2f062009 	svccs	0x00062009
    1a38:	01060f05 	tsteq	r6, r5, lsl #30
    1a3c:	06090523 	streq	r0, [r9], -r3, lsr #10
    1a40:	060f0521 	streq	r0, [pc], -r1, lsr #10
    1a44:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1a48:	060f053a 			@ <UNDEFINED> instruction: 0x060f053a
    1a4c:	320e0501 	andcc	r0, lr, #4194304	@ 0x400000
    1a50:	06090520 	streq	r0, [r9], -r0, lsr #10
    1a54:	060f051d 			@ <UNDEFINED> instruction: 0x060f051d
    1a58:	340a0501 	strcc	r0, [sl], #-1281	@ 0xfffffaff
    1a5c:	05210105 	streq	r0, [r1, #-261]!	@ 0xfffffefb
    1a60:	055a0635 	ldrbeq	r0, [sl, #-1589]	@ 0xfffff9cb
    1a64:	01011303 	tsteq	r1, r3, lsl #6
    1a68:	05166658 	ldreq	r6, [r6, #-1624]	@ 0xfffff9a8
    1a6c:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1a70:	21062005 	tstcs	r6, r5
    1a74:	01060b05 	tsteq	r6, r5, lsl #22
    1a78:	05201105 	streq	r1, [r0, #-261]!	@ 0xfffffefb
    1a7c:	053d0605 	ldreq	r0, [sp, #-1541]!	@ 0xfffff9fb
    1a80:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
    1a84:	05362011 	ldreq	r2, [r6, #-17]!	@ 0xffffffef
    1a88:	06052201 	streq	r2, [r5], -r1, lsl #4
    1a8c:	206f0306 	rsbcs	r0, pc, r6, lsl #6
    1a90:	051a0905 	ldreq	r0, [sl, #-2309]	@ 0xfffff6fb
    1a94:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1a98:	0505200b 	streq	r2, [r5, #-11]
    1a9c:	0b052f06 	bleq	14d6bc <_Min_Stack_Size+0x14d2bc>
    1aa0:	11050106 	tstne	r5, r6, lsl #2
    1aa4:	06050520 	streq	r0, [r5], -r0, lsr #10
    1aa8:	060b053d 			@ <UNDEFINED> instruction: 0x060b053d
    1aac:	20110501 	andscs	r0, r1, r1, lsl #10
    1ab0:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
    1ab4:	01060b05 	tsteq	r6, r5, lsl #22
    1ab8:	05201105 	streq	r1, [r0, #-261]!	@ 0xfffffefb
    1abc:	053d0609 	ldreq	r0, [sp, #-1545]!	@ 0xfffff9f7
    1ac0:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1ac4:	0505200b 	streq	r2, [r5, #-11]
    1ac8:	0b052f06 	bleq	14d6e8 <_Min_Stack_Size+0x14d2e8>
    1acc:	11050106 	tstne	r5, r6, lsl #2
    1ad0:	06050520 	streq	r0, [r5], -r0, lsr #10
    1ad4:	060b053d 			@ <UNDEFINED> instruction: 0x060b053d
    1ad8:	20110501 	andscs	r0, r1, r1, lsl #10
    1adc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
    1ae0:	01060b05 	tsteq	r6, r5, lsl #22
    1ae4:	05201105 	streq	r1, [r0, #-261]!	@ 0xfffffefb
    1ae8:	0594064f 	ldreq	r0, [r4, #1615]	@ 0x64f
    1aec:	4f051303 	svcmi	0x00051303
    1af0:	05051106 	streq	r1, [r5, #-262]	@ 0xfffffefa
    1af4:	1f4f0521 	svcne	0x004f0521
    1af8:	06210505 	strteq	r0, [r1], -r5, lsl #10
    1afc:	0607054b 	streq	r0, [r7], -fp, asr #10
    1b00:	053d0601 	ldreq	r0, [sp, #-1537]!	@ 0xfffff9ff
    1b04:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1b08:	05210607 	streq	r0, [r1, #-1543]!	@ 0xfffff9f9
    1b0c:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
    1b10:	2f062009 	svccs	0x00062009
    1b14:	13050304 	movwne	r0, #21252	@ 0x5304
    1b18:	0100e503 	tsteq	r0, r3, lsl #10
    1b1c:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1b20:	2001060a 	andcs	r0, r1, sl, lsl #12
    1b24:	0501042e 	streq	r0, [r1, #-1070]	@ 0xfffffbd2
    1b28:	9b030609 	blls	c3354 <_Min_Stack_Size+0xc2f54>
    1b2c:	1405017f 	strne	r0, [r5], #-383	@ 0xfffffe81
    1b30:	0b050106 	bleq	141f50 <_Min_Stack_Size+0x141b50>
    1b34:	0521063c 	streq	r0, [r1, #-1596]!	@ 0xfffff9c4
    1b38:	0538061e 	ldreq	r0, [r8, #-1566]!	@ 0xfffff9e2
    1b3c:	201d0301 	andscs	r0, sp, r1, lsl #6
    1b40:	03060d05 	movweq	r0, #27909	@ 0x6d05
    1b44:	0f052e69 	svceq	0x00052e69
    1b48:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b4c:	03042f06 	movweq	r2, #20230	@ 0x4f06
    1b50:	e0031305 	and	r1, r3, r5, lsl #6
    1b54:	03050100 	movweq	r0, #20736	@ 0x5100
    1b58:	060a0513 			@ <UNDEFINED> instruction: 0x060a0513
    1b5c:	042e3c01 	strteq	r3, [lr], #-3073	@ 0xfffff3ff
    1b60:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b64:	017fa003 	cmneq	pc, r3
    1b68:	01061605 	tsteq	r6, r5, lsl #12
    1b6c:	063c0b05 	ldrteq	r0, [ip], -r5, lsl #22
    1b70:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1b74:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1b78:	0404013d 	streq	r0, [r4], #-317	@ 0xfffffec3
    1b7c:	a2031105 	andge	r1, r3, #1073741825	@ 0x40000001
    1b80:	1e05017f 	mcrne	1, 0, r0, cr5, cr15, {3}
    1b84:	06250501 	strteq	r0, [r5], -r1, lsl #10
    1b88:	05010401 	streq	r0, [r1, #-1025]	@ 0xfffffbff
    1b8c:	00de030b 	sbcseq	r0, lr, fp, lsl #6
    1b90:	0558062e 	ldrbeq	r0, [r8, #-1582]	@ 0xfffff9d2
    1b94:	1b05210f 	blne	149fd8 <_Min_Stack_Size+0x149bd8>
    1b98:	11050106 	tstne	r5, r6, lsl #2
    1b9c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1ba0:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1ba4:	210b0501 	tstcs	fp, r1, lsl #10
    1ba8:	051f1305 	ldreq	r1, [pc, #-773]	@ 18ab <_Min_Stack_Size+0x14ab>
    1bac:	2f2f060b 	svccs	0x002f060b
    1bb0:	05040401 	streq	r0, [r4, #-1025]	@ 0xfffffbff
    1bb4:	7f9e0311 	svcvc	0x009e0311
    1bb8:	011e0501 	tsteq	lr, r1, lsl #10
    1bbc:	01042006 	tsteq	r4, r6
    1bc0:	03060905 	movweq	r0, #26885	@ 0x6905
    1bc4:	130100e5 	movwne	r0, #4325	@ 0x10e5
    1bc8:	13050304 	movwne	r0, #21252	@ 0x5304
    1bcc:	0100d503 	tsteq	r0, r3, lsl #10
    1bd0:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1bd4:	2001060a 	andcs	r0, r1, sl, lsl #12
    1bd8:	0104203c 	tsteq	r4, ip, lsr r0
    1bdc:	017fb403 	cmneq	pc, r3, lsl #8
    1be0:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    1be4:	70020500 	andvc	r0, r2, r0, lsl #10
    1be8:	03080011 	movweq	r0, #32785	@ 0x8011
    1bec:	0305011f 	movweq	r0, #20767	@ 0x511f
    1bf0:	05040113 	streq	r0, [r4, #-275]	@ 0xfffffeed
    1bf4:	d5031605 	strle	r1, [r3, #-1541]	@ 0xfffff9fb
    1bf8:	0305010a 	movweq	r0, #20746	@ 0x510a
    1bfc:	05010414 	streq	r0, [r1, #-1044]	@ 0xfffffbec
    1c00:	a8030617 	stmdage	r3, {r0, r1, r2, r4, r9, sl}
    1c04:	05040175 	streq	r0, [r4, #-373]	@ 0xfffffe8b
    1c08:	d8032705 	stmdale	r3, {r0, r2, r8, r9, sl, sp}
    1c0c:	0104200a 	tsteq	r4, sl
    1c10:	a9030305 	stmdbge	r3, {r0, r2, r8, r9}
    1c14:	05042e75 	streq	r2, [r4, #-3701]	@ 0xfffff18b
    1c18:	d7032705 	strle	r2, [r3, -r5, lsl #14]
    1c1c:	042e200a 	strteq	r2, [lr], #-10
    1c20:	06030501 	streq	r0, [r3], -r1, lsl #10
    1c24:	0175a903 	cmneq	r5, r3, lsl #18
    1c28:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    1c2c:	3c012020 	stccc	0, cr2, [r1], {32}
    1c30:	01010120 	tsteq	r1, r0, lsr #2
    1c34:	1f130620 	svcne	0x00130620
    1c38:	202e2e06 	eorcs	r2, lr, r6, lsl #28
    1c3c:	2e200101 	sufcss	f0, f0, f1
    1c40:	0120202e 			@ <UNDEFINED> instruction: 0x0120202e
    1c44:	0101202e 	tsteq	r1, lr, lsr #32
    1c48:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    1c4c:	01010120 	tsteq	r1, r0, lsr #2
    1c50:	06202006 	strteq	r2, [r0], -r6
    1c54:	3c014a3c 			@ <UNDEFINED> instruction: 0x3c014a3c
    1c58:	20202020 	eorcs	r2, r0, r0, lsr #32
    1c5c:	042e2e20 	strteq	r2, [lr], #-3616	@ 0xfffff1e0
    1c60:	03160505 	tsteq	r6, #20971520	@ 0x1400000
    1c64:	05010ac8 	streq	r0, [r1, #-2760]	@ 0xfffff538
    1c68:	27051403 	strcs	r1, [r5, -r3, lsl #8]
    1c6c:	04200106 	strteq	r0, [r0], #-262	@ 0xfffffefa
    1c70:	06030501 	streq	r0, [r3], -r1, lsl #10
    1c74:	0175b603 	cmneq	r5, r3, lsl #12
    1c78:	13062f13 	movwne	r2, #28435	@ 0x6f13
    1c7c:	05490b05 	strbeq	r0, [r9, #-2821]	@ 0xfffff4fb
    1c80:	2f2f0603 	svccs	0x002f0603
    1c84:	67676867 	strbvs	r6, [r7, -r7, ror #16]!
    1c88:	060c0567 	streq	r0, [ip], -r7, ror #10
    1c8c:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
    1c90:	03062805 	movweq	r2, #26629	@ 0x6805
    1c94:	0305d638 	movweq	sp, #22072	@ 0x5638
    1c98:	28051314 	stmdacs	r5, {r2, r4, r8, r9, ip}
    1c9c:	07050f06 	streq	r0, [r5, -r6, lsl #30]
    1ca0:	211f2123 	tstcs	pc, r3, lsr #2
    1ca4:	2f1f0505 	svccs	0x001f0505
    1ca8:	0603051f 			@ <UNDEFINED> instruction: 0x0603051f
    1cac:	0605052f 	streq	r0, [r5], -pc, lsr #10
    1cb0:	00160501 	andseq	r0, r6, r1, lsl #10
    1cb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1cb8:	001a0520 	andseq	r0, sl, r0, lsr #10
    1cbc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1cc0:	04020001 	streq	r0, [r2], #-1
    1cc4:	21052e01 	tstcs	r5, r1, lsl #28
    1cc8:	01040200 	mrseq	r0, R12_usr
    1ccc:	00110525 	andseq	r0, r1, r5, lsr #10
    1cd0:	2d010402 	cfstrscs	mvf0, [r1, #-8]
    1cd4:	01040200 	mrseq	r0, R12_usr
    1cd8:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1cdc:	06070521 	streq	r0, [r7], -r1, lsr #10
    1ce0:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    1ce4:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    1ce8:	06050501 	streq	r0, [r5], -r1, lsl #10
    1cec:	060b053d 			@ <UNDEFINED> instruction: 0x060b053d
    1cf0:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    1cf4:	2e061605 	cfmadd32cs	mvax0, mvfx1, mvfx6, mvfx5
    1cf8:	01061a05 	tsteq	r6, r5, lsl #20
    1cfc:	2f060505 	svccs	0x00060505
    1d00:	05141313 	ldreq	r1, [r4, #-787]	@ 0xfffffced
    1d04:	04020011 	streq	r0, [r2], #-17	@ 0xffffffef
    1d08:	01790301 	cmneq	r9, r1, lsl #6
    1d0c:	01040200 	mrseq	r0, R12_usr
    1d10:	03053c06 	movweq	r3, #23558	@ 0x5c06
    1d14:	01090306 	tsteq	r9, r6, lsl #6
    1d18:	01060505 	tsteq	r6, r5, lsl #10
    1d1c:	052e1805 	streq	r1, [lr, #-2053]!	@ 0xfffff7fb
    1d20:	05053c2c 	streq	r3, [r5, #-3116]	@ 0xfffff3d4
    1d24:	2019052f 	andscs	r0, r9, pc, lsr #10
    1d28:	052e2d05 	streq	r2, [lr, #-3333]!	@ 0xfffff2fb
    1d2c:	013b0618 	teqeq	fp, r8, lsl r6
    1d30:	01012c05 	tsteq	r1, r5, lsl #24
    1d34:	13030520 	movwne	r0, #13600	@ 0x3520
    1d38:	01011905 	tsteq	r1, r5, lsl #18
    1d3c:	01012d05 	tsteq	r1, r5, lsl #26
    1d40:	06010520 	streq	r0, [r1], -r0, lsr #10
    1d44:	06050516 			@ <UNDEFINED> instruction: 0x06050516
    1d48:	05207503 	streq	r7, [r0, #-1283]!	@ 0xfffffafd
    1d4c:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    1d50:	052e0616 	streq	r0, [lr, #-1558]!	@ 0xfffff9ea
    1d54:	0501061a 	streq	r0, [r1, #-1562]	@ 0xfffff9e6
    1d58:	132f0605 			@ <UNDEFINED> instruction: 0x132f0605
    1d5c:	051d1313 	ldreq	r1, [sp, #-787]	@ 0xfffffced
    1d60:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    1d64:	04020016 	streq	r0, [r2], #-22	@ 0xffffffea
    1d68:	052e0601 	streq	r0, [lr, #-1537]!	@ 0xfffff9ff
    1d6c:	0402001a 	streq	r0, [r2], #-26	@ 0xffffffe6
    1d70:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
    1d74:	04020005 	streq	r0, [r2], #-5
    1d78:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1d7c:	13010402 	movwne	r0, #5122	@ 0x1402
    1d80:	01040200 	mrseq	r0, R12_usr
    1d84:	07051e13 	smladeq	r5, r3, lr, r1
    1d88:	16050106 	strne	r0, [r5], -r6, lsl #2
    1d8c:	01040200 	mrseq	r0, R12_usr
    1d90:	1a052e06 	bne	14d5b0 <_Min_Stack_Size+0x14d1b0>
    1d94:	01040200 	mrseq	r0, R12_usr
    1d98:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1d9c:	01040200 	mrseq	r0, R12_usr
    1da0:	02002f06 	andeq	r2, r0, #6, 30
    1da4:	1f130104 	svcne	0x00130104
    1da8:	01060705 	tsteq	r6, r5, lsl #14
    1dac:	02001605 	andeq	r1, r0, #5242880	@ 0x500000
    1db0:	2e060104 	adfcss	f0, f6, f4
    1db4:	02001a05 	andeq	r1, r0, #20480	@ 0x5000
    1db8:	01060104 	tsteq	r6, r4, lsl #2
    1dbc:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
    1dc0:	2f060104 	svccs	0x00060104
    1dc4:	06070520 	streq	r0, [r7], -r0, lsr #10
    1dc8:	00160501 	andseq	r0, r6, r1, lsl #10
    1dcc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dd0:	001a052e 	andseq	r0, sl, lr, lsr #10
    1dd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dd8:	00190501 	andseq	r0, r9, r1, lsl #10
    1ddc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1de0:	052e7903 	streq	r7, [lr, #-2307]!	@ 0xfffff6fd
    1de4:	02050017 	andeq	r0, r5, #23
    1de8:	08001300 	stmdaeq	r0, {r8, r9, ip}
    1dec:	05014203 	streq	r4, [r1, #-515]	@ 0xfffffdfd
    1df0:	17051303 	strne	r1, [r5, -r3, lsl #6]
    1df4:	06051106 	streq	r1, [r5], -r6, lsl #2
    1df8:	1f170521 	svcne	0x00170521
    1dfc:	05210505 	streq	r0, [r1, #-1285]!	@ 0xfffffafb
    1e00:	134b0603 	movtne	r0, #46595	@ 0xb603
    1e04:	05020414 	streq	r0, [r2, #-1044]	@ 0xfffffbec
    1e08:	7f970309 	svcvc	0x00970309
    1e0c:	13030501 	movwne	r0, #13569	@ 0x3501
    1e10:	01060f05 	tsteq	r6, r5, lsl #30
    1e14:	2e201905 	vmulcs.f16	s2, s0, s10	@ <UNPREDICTABLE>
    1e18:	03050104 	movweq	r0, #20740	@ 0x5104
    1e1c:	00e90306 	rsceq	r0, r9, r6, lsl #6
    1e20:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e24:	21062e01 	tstcs	r6, r1, lsl #28
    1e28:	14061105 	strne	r1, [r6], #-261	@ 0xfffffefb
    1e2c:	052c0705 	streq	r0, [ip, #-1797]!	@ 0xfffff8fb
    1e30:	053e0605 	ldreq	r0, [lr, #-1541]!	@ 0xfffff9fb
    1e34:	06200607 	strteq	r0, [r0], -r7, lsl #12
    1e38:	060a052f 	streq	r0, [sl], -pc, lsr #10
    1e3c:	20090501 	andcs	r0, r9, r1, lsl #10
    1e40:	044b4b06 	strbeq	r4, [fp], #-2822	@ 0xfffff4fa
    1e44:	17140503 	ldrne	r0, [r4, -r3, lsl #10]
    1e48:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1e4c:	01042e3c 	tsteq	r4, ip, lsr lr
    1e50:	0d051806 	stceq	8, cr1, [r5, #-24]	@ 0xffffffe8
    1e54:	017fbe03 	cmneq	pc, r3, lsl #28
    1e58:	13130305 	tstne	r3, #335544320	@ 0x14000000
    1e5c:	060e0514 			@ <UNDEFINED> instruction: 0x060e0514
    1e60:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    1e64:	05132f06 	ldreq	r2, [r3, #-3846]	@ 0xfffff0fa
    1e68:	05010608 	streq	r0, [r1, #-1544]	@ 0xfffff9f8
    1e6c:	25052007 	strcs	r2, [r5, #-7]
    1e70:	03045806 	movweq	r5, #18438	@ 0x4806
    1e74:	c2031305 	andgt	r1, r3, #335544320	@ 0x14000000
    1e78:	03050100 	movweq	r0, #20736	@ 0x5100
    1e7c:	060a0513 			@ <UNDEFINED> instruction: 0x060a0513
    1e80:	042e2e01 	strteq	r2, [lr], #-3585	@ 0xfffff1ff
    1e84:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e88:	017fbe03 	cmneq	pc, r3, lsl #28
    1e8c:	01060905 	tsteq	r6, r5, lsl #18
    1e90:	05200705 	streq	r0, [r0, #-1797]!	@ 0xfffff8fb
    1e94:	0505560b 	streq	r5, [r5, #-1547]	@ 0xfffff9f5
    1e98:	03052706 	movweq	r2, #22278	@ 0x5706
    1e9c:	060e0515 			@ <UNDEFINED> instruction: 0x060e0515
    1ea0:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    1ea4:	02042f06 	andeq	r2, r4, #6, 30
    1ea8:	b6030905 	strlt	r0, [r3], -r5, lsl #18
    1eac:	0305017f 	movweq	r0, #20863	@ 0x517f
    1eb0:	060f0513 			@ <UNDEFINED> instruction: 0x060f0513
    1eb4:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    1eb8:	042e1f05 	strteq	r1, [lr], #-3845	@ 0xfffff0fb
    1ebc:	03090501 	movweq	r0, #38145	@ 0x9501
    1ec0:	052000c9 	streq	r0, [r0, #-201]!	@ 0xffffff37
    1ec4:	2f063c07 	svccs	0x00063c07
    1ec8:	13050304 	movwne	r0, #21252	@ 0x5304
    1ecc:	05013703 	streq	r3, [r1, #-1795]	@ 0xfffff8fd
    1ed0:	0a051303 	beq	146ae4 <_Min_Stack_Size+0x1466e4>
    1ed4:	20200106 	eorcs	r0, r0, r6, lsl #2
    1ed8:	0501043c 	streq	r0, [r1, #-1084]	@ 0xfffffbc4
    1edc:	49030607 	stmdbmi	r3, {r0, r1, r2, r9, sl}
    1ee0:	2e2e0601 	cfmadda32cs	mvax0, mvax0, mvfx14, mvfx1
    1ee4:	03060305 	movweq	r0, #25349	@ 0x6305
    1ee8:	0f050133 	svceq	0x00050133
    1eec:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1ef0:	0421062e 	strteq	r0, [r1], #-1582	@ 0xfffff9d2
    1ef4:	03110504 	tsteq	r1, #4, 10	@ 0x1000000
    1ef8:	05017ec7 	streq	r7, [r1, #-3783]	@ 0xfffff139
    1efc:	2505011e 	strcs	r0, [r5, #-286]	@ 0xfffffee2
    1f00:	01040106 	tsteq	r4, r6, lsl #2
    1f04:	b9031605 	stmdblt	r3, {r0, r2, r9, sl, ip}
    1f08:	07052e01 	streq	r2, [r5, -r1, lsl #28]
    1f0c:	052f062e 	streq	r0, [pc, #-1582]!	@ 18e6 <_Min_Stack_Size+0x14e6>
    1f10:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1f14:	0f052107 	svceq	0x00052107
    1f18:	0607051f 			@ <UNDEFINED> instruction: 0x0607051f
    1f1c:	3303052f 	movwcc	r0, #13615	@ 0x352f
    1f20:	01060f05 	tsteq	r6, r5, lsl #30
    1f24:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
    1f28:	053c012f 	ldreq	r0, [ip, #-303]!	@ 0xfffffed1
    1f2c:	06010113 			@ <UNDEFINED> instruction: 0x06010113
    1f30:	22010524 	andcs	r0, r1, #36, 10	@ 0x9000000
    1f34:	03060b05 	movweq	r0, #27397	@ 0x6b05
    1f38:	17052e64 	strne	r2, [r5, -r4, ror #28]
    1f3c:	0d050106 	stfeqs	f0, [r5, #-24]	@ 0xffffffe8
    1f40:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1f44:	060a052f 	streq	r0, [sl], -pc, lsr #10
    1f48:	20090501 	andcs	r0, r9, r1, lsl #10
    1f4c:	044b4b06 	strbeq	r4, [fp], #-2822	@ 0xfffff4fa
    1f50:	01140503 	tsteq	r4, r3, lsl #10
    1f54:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1f58:	0501044a 	streq	r0, [r1, #-1098]	@ 0xfffffbb6
    1f5c:	05140607 	ldreq	r0, [r4, #-1543]	@ 0xfffff9f9
    1f60:	584b0305 	stmdapl	fp, {r0, r2, r8, r9}^
    1f64:	06080513 			@ <UNDEFINED> instruction: 0x06080513
    1f68:	20070501 	andcs	r0, r7, r1, lsl #10
    1f6c:	58062505 	stmdapl	r6, {r0, r2, r8, sl, sp}
    1f70:	13050304 	movwne	r0, #21252	@ 0x5304
    1f74:	05013e03 	streq	r3, [r1, #-3587]	@ 0xfffff1fd
    1f78:	0a051303 	beq	146b8c <_Min_Stack_Size+0x14678c>
    1f7c:	2e2e0106 	sufcse	f0, f6, f6
    1f80:	05050104 	streq	r0, [r5, #-260]	@ 0xfffffefc
    1f84:	01420306 	cmpeq	r2, r6, lsl #6
    1f88:	01060905 	tsteq	r6, r5, lsl #18
    1f8c:	05200705 	streq	r0, [r0, #-1797]!	@ 0xfffff8fb
    1f90:	01590605 	cmpeq	r9, r5, lsl #12
    1f94:	11050404 	tstne	r5, r4, lsl #8
    1f98:	017f8103 	cmneq	pc, r3, lsl #2
    1f9c:	05011e05 	streq	r1, [r1, #-3589]	@ 0xfffff1fb
    1fa0:	04010625 	streq	r0, [r1], #-1573	@ 0xfffff9db
    1fa4:	030b0501 	movweq	r0, #46337	@ 0xb501
    1fa8:	042000fc 	strteq	r0, [r0], #-252	@ 0xffffff04
    1fac:	03250504 			@ <UNDEFINED> instruction: 0x03250504
    1fb0:	04207f84 	strteq	r7, [r0], #-3972	@ 0xfffff07c
    1fb4:	03050501 	movweq	r0, #21761	@ 0x5501
    1fb8:	062000ff 			@ <UNDEFINED> instruction: 0x062000ff
    1fbc:	04660903 	strbteq	r0, [r6], #-2307	@ 0xfffff6fd
    1fc0:	03130503 	tsteq	r3, #12582912	@ 0xc00000
    1fc4:	03050133 	movweq	r0, #20787	@ 0x5133
    1fc8:	060a0513 			@ <UNDEFINED> instruction: 0x060a0513
    1fcc:	2e202001 	cdpcs	0, 2, cr2, cr0, cr1, {0}
    1fd0:	05010420 	streq	r0, [r1, #-1056]	@ 0xfffffbe0
    1fd4:	4d030605 	stcmi	6, cr0, [r3, #-20]	@ 0xffffffec
    1fd8:	2e200601 	cfmadda32cs	mvax0, mvax0, mvfx0, mvfx1
    1fdc:	06090520 	streq	r0, [r9], -r0, lsr #10
    1fe0:	05013903 	streq	r3, [r1, #-2307]	@ 0xfffff6fd
    1fe4:	05010615 	streq	r0, [r1, #-1557]	@ 0xfffff9eb
    1fe8:	05052e0b 	streq	r2, [r5, #-3595]	@ 0xfffff1f5
    1fec:	0120063d 			@ <UNDEFINED> instruction: 0x0120063d
    1ff0:	01130501 	tsteq	r3, r1, lsl #10
    1ff4:	30050501 	andcc	r0, r5, r1, lsl #10
    1ff8:	13050101 	movwne	r0, #20737	@ 0x5101
    1ffc:	0d020101 	stfeqs	f0, [r2, #-4]
    2000:	44010100 	strmi	r0, [r1], #-256	@ 0xffffff00
    2004:	03000003 	movweq	r0, #3
    2008:	00008400 	andeq	r8, r0, r0, lsl #8
    200c:	fb010200 	blx	42816 <_Min_Stack_Size+0x42416>
    2010:	01000d0e 	tsteq	r0, lr, lsl #26
    2014:	00010101 	andeq	r0, r1, r1, lsl #2
    2018:	00010000 	andeq	r0, r1, r0
    201c:	72730100 	rsbsvc	r0, r3, #0, 2
    2020:	752f0063 	strvc	r0, [pc, #-99]!	@ 1fc5 <_Min_Stack_Size+0x1bc5>
    2024:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	@ 1e60 <_Min_Stack_Size+0x1a60>
    2028:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    202c:	612f6363 			@ <UNDEFINED> instruction: 0x612f6363
    2030:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2034:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	@ 0xfffffe44
    2038:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    203c:	2e32312f 	rsfcssp	f3, f2, #10.0
    2040:	2f312e32 	svccs	0x00312e32
    2044:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
    2048:	00656475 	rsbeq	r6, r5, r5, ror r4
    204c:	2f62696c 	svccs	0x0062696c
    2050:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
    2054:	00656475 	rsbeq	r6, r5, r5, ror r4
    2058:	62737500 	rsbsvs	r7, r3, #0, 10
    205c:	676f6c5f 			@ <UNDEFINED> instruction: 0x676f6c5f
    2060:	0100632e 	tsteq	r0, lr, lsr #6
    2064:	73750000 	cmnvc	r5, #0
    2068:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    206c:	00682e62 	rsbeq	r2, r8, r2, ror #28
    2070:	73000001 	movwvc	r0, #1
    2074:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    2078:	00682e74 	rsbeq	r2, r8, r4, ror lr
    207c:	73000002 	movwvc	r0, #2
    2080:	32336d74 	eorscc	r6, r3, #116, 26	@ 0x1d00
    2084:	3135316c 	teqcc	r5, ip, ror #2
    2088:	682e6378 	stmdavs	lr!, {r3, r4, r5, r6, r8, r9, sp, lr}
    208c:	00000300 	andeq	r0, r0, r0, lsl #6
    2090:	001a0500 	andseq	r0, sl, r0, lsl #10
    2094:	14700205 	ldrbtne	r0, [r0], #-517	@ 0xfffffdfb
    2098:	09030800 	stmdbeq	r3, {fp}
    209c:	13030501 	movwne	r0, #13569	@ 0x3501
    20a0:	01061005 	tsteq	r6, r5
    20a4:	052e1a05 	streq	r1, [lr, #-2565]!	@ 0xfffff5fb
    20a8:	0105201f 	tsteq	r5, pc, lsl r0
    20ac:	06280521 	strteq	r0, [r8], -r1, lsr #10
    20b0:	13030569 	movwne	r0, #13673	@ 0x3569
    20b4:	11062805 	tstne	r6, r5, lsl #16
    20b8:	05210c05 	streq	r0, [r1, #-3077]!	@ 0xfffff3fb
    20bc:	0c051f28 	stceq	15, cr1, [r5], {40}	@ 0x28
    20c0:	21110521 	tstcs	r1, r1, lsr #10
    20c4:	052e0c05 	streq	r0, [lr, #-3077]!	@ 0xfffff3fb
    20c8:	13054b05 	movwne	r4, #23301	@ 0x5b05
    20cc:	2c0c0520 	cfstr32cs	mvfx0, [ip], {32}
    20d0:	21060305 	tstcs	r6, r5, lsl #6
    20d4:	01100513 	tsteq	r0, r3, lsl r5
    20d8:	0d050106 	stfeqs	f0, [r5, #-24]	@ 0xffffffe8
    20dc:	03052106 	movweq	r2, #20742	@ 0x5106
    20e0:	060b0534 			@ <UNDEFINED> instruction: 0x060b0534
    20e4:	21010501 	tstcs	r1, r1, lsl #10
    20e8:	03060505 	movweq	r0, #25861	@ 0x6505
    20ec:	1705207a 	smlsdxne	r5, sl, r0, r2
    20f0:	12050106 	andne	r0, r5, #-2147483647	@ 0x80000001
    20f4:	210e052e 	tstcs	lr, lr, lsr #10
    20f8:	051f1205 	ldreq	r1, [pc, #-517]	@ 1efb <_Min_Stack_Size+0x1afb>
    20fc:	05210605 	streq	r0, [r1, #-1541]!	@ 0xfffff9fb
    2100:	05010608 	streq	r0, [r1, #-1544]	@ 0xfffff9f8
    2104:	132f0605 			@ <UNDEFINED> instruction: 0x132f0605
    2108:	26050106 	strcs	r0, [r5], -r6, lsl #2
    210c:	02050006 	andeq	r0, r5, #6
    2110:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
    2114:	13030518 	movwne	r0, #13592	@ 0x3518
    2118:	11062605 	tstne	r6, r5, lsl #12
    211c:	21110520 	tstcs	r1, r0, lsr #10
    2120:	2f060305 	svccs	0x00060305
    2124:	01060c05 	tsteq	r6, r5, lsl #24
    2128:	05210505 	streq	r0, [r1, #-1285]!	@ 0xfffffafb
    212c:	13051f0c 	movwne	r1, #24332	@ 0x5f0c
    2130:	2d0c0521 	cfstr32cs	mvfx0, [ip, #-132]	@ 0xffffff7c
    2134:	21060305 	tstcs	r6, r5, lsl #6
    2138:	05011005 	streq	r1, [r1, #-5]
    213c:	05131303 	ldreq	r1, [r3, #-771]	@ 0xfffffcfd
    2140:	0305200d 	movweq	r2, #20493	@ 0x500d
    2144:	060b0534 			@ <UNDEFINED> instruction: 0x060b0534
    2148:	06030501 	streq	r0, [r3], -r1, lsl #10
    214c:	06010521 	streq	r0, [r1], -r1, lsr #10
    2150:	06050513 			@ <UNDEFINED> instruction: 0x06050513
    2154:	05207903 	streq	r7, [r0, #-2307]!	@ 0xfffff6fd
    2158:	05010616 	streq	r0, [r1, #-1558]	@ 0xfffff9ea
    215c:	0c05300e 	stceq	0, cr3, [r5], {14}
    2160:	0605051e 			@ <UNDEFINED> instruction: 0x0605051e
    2164:	0805132f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    2168:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    216c:	01062f06 	tsteq	r6, r6, lsl #30
    2170:	00064505 	andeq	r4, r6, r5, lsl #10
    2174:	14f40205 	ldrbtne	r0, [r4], #517	@ 0x205
    2178:	22030800 	andcs	r0, r3, #0, 16
    217c:	13030501 	movwne	r0, #13569	@ 0x3501
    2180:	01060505 	tsteq	r6, r5, lsl #10
    2184:	07055906 	streq	r5, [r5, -r6, lsl #18]
    2188:	3d060106 	stfccs	f0, [r6, #-24]	@ 0xffffffe8
    218c:	01060905 	tsteq	r6, r5, lsl #18
    2190:	0f053d06 	svceq	0x00053d06
    2194:	10050106 	andne	r0, r5, r6, lsl #2
    2198:	1e0f0522 	cfsh32ne	mvfx0, mvfx15, #18
    219c:	21060905 	tstcs	r6, r5, lsl #18
    21a0:	01060f05 	tsteq	r6, r5, lsl #30
    21a4:	2f060905 	svccs	0x00060905
    21a8:	01061005 	tsteq	r6, r5
    21ac:	05240a05 	streq	r0, [r4, #-2565]!	@ 0xfffff5fb
    21b0:	4c052101 	stfmis	f2, [r5], {1}
    21b4:	03054c06 	movweq	r4, #23558	@ 0x5c06
    21b8:	064c0513 			@ <UNDEFINED> instruction: 0x064c0513
    21bc:	21050511 	tstcs	r5, r1, lsl r5
    21c0:	07055906 	streq	r5, [r5, -r6, lsl #18]
    21c4:	3d060106 	stfccs	f0, [r6, #-24]	@ 0xffffffe8
    21c8:	01060905 	tsteq	r6, r5, lsl #18
    21cc:	21060705 	tstcs	r6, r5, lsl #14
    21d0:	01060905 	tsteq	r6, r5, lsl #18
    21d4:	042f0620 	strteq	r0, [pc], #-1568	@ 21dc <_Min_Stack_Size+0x1ddc>
    21d8:	03130502 	tsteq	r3, #8388608	@ 0x800000
    21dc:	050100e7 	streq	r0, [r1, #-231]	@ 0xffffff19
    21e0:	0a051303 	beq	146df4 <_Min_Stack_Size+0x1469f4>
    21e4:	2e200106 	sufcss	f0, f0, f6
    21e8:	1e050104 	adfnes	f0, f5, f4
    21ec:	017f9603 	cmneq	pc, r3, lsl #12
    21f0:	05280105 	streq	r0, [r8, #-261]!	@ 0xfffffefb
    21f4:	14051f0a 	strne	r1, [r5], #-3850	@ 0xfffff0f6
    21f8:	02050006 	andeq	r0, r5, #6
    21fc:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    2200:	13030514 	movwne	r0, #13588	@ 0x3514
    2204:	11061405 	tstne	r6, r5, lsl #8
    2208:	06210305 	strteq	r0, [r1], -r5, lsl #6
    220c:	01056767 	tsteq	r5, r7, ror #14
    2210:	03051306 	movweq	r1, #21254	@ 0x5306
    2214:	061d052d 	ldreq	r0, [sp], -sp, lsr #10
    2218:	76020500 	strvc	r0, [r2], -r0, lsl #10
    221c:	15080015 	strne	r0, [r8, #-21]	@ 0xffffffeb
    2220:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    2224:	1f130605 	svcne	0x00130605
    2228:	1f060605 	svcne	0x00060605
    222c:	06140505 	ldreq	r0, [r4], -r5, lsl #10
    2230:	2e061420 	cfcpydcs	mvd1, mvd6
    2234:	3a052006 	bcc	14a254 <_Min_Stack_Size+0x149e54>
    2238:	02050006 	andeq	r0, r5, #6
    223c:	0800158c 	stmdaeq	r0, {r2, r3, r7, r8, sl, ip}
    2240:	13030516 	movwne	r0, #13590	@ 0x3516
    2244:	063a0513 			@ <UNDEFINED> instruction: 0x063a0513
    2248:	11052e10 	tstne	r5, r0, lsl lr
    224c:	06030522 	streq	r0, [r3], -r2, lsr #10
    2250:	060c052f 	streq	r0, [ip], -pc, lsr #10
    2254:	05052e11 	streq	r2, [r5, #-3601]	@ 0xfffff1ef
    2258:	2b3a0521 	blcs	e836e4 <_Min_Stack_Size+0xe832e4>
    225c:	05310505 	ldreq	r0, [r1, #-1285]!	@ 0xfffffafb
    2260:	05220603 	streq	r0, [r2, #-1539]!	@ 0xfffff9fd
    2264:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    2268:	06202005 	strteq	r2, [r0], -r5
    226c:	0513062f 	ldreq	r0, [r3, #-1583]	@ 0xfffff9d1
    2270:	05052d0e 	streq	r2, [r5, #-3342]	@ 0xfffff2f2
    2274:	052f2106 	streq	r2, [pc, #-262]!	@ 2176 <_Min_Stack_Size+0x1d76>
    2278:	0402003a 	streq	r0, [r2], #-58	@ 0xffffffc6
    227c:	78030601 	stmdavc	r3, {r0, r9, sl}
    2280:	0007053c 	andeq	r0, r7, ip, lsr r5
    2284:	03010402 	movweq	r0, #5122	@ 0x1402
    2288:	02002e12 	andeq	r2, r0, #288	@ 0x120
    228c:	052a0104 	streq	r0, [sl, #-260]!	@ 0xfffffefc
    2290:	0402000d 	streq	r0, [r2], #-13
    2294:	052b0601 	streq	r0, [fp, #-1537]!	@ 0xfffff9ff
    2298:	04020007 	streq	r0, [r2], #-7
    229c:	05300601 	ldreq	r0, [r0, #-1537]!	@ 0xfffff9ff
    22a0:	0402000d 	streq	r0, [r2], #-13
    22a4:	03052c01 	movweq	r2, #23553	@ 0x5c01
    22a8:	200f0306 	andcs	r0, pc, r6, lsl #6
    22ac:	13060105 	movwne	r0, #24837	@ 0x6105
    22b0:	052d0305 	streq	r0, [sp, #-773]!	@ 0xfffffcfb
    22b4:	72030605 	andvc	r0, r3, #5242880	@ 0x500000
    22b8:	060b053c 			@ <UNDEFINED> instruction: 0x060b053c
    22bc:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
    22c0:	063d3d06 	ldrteq	r3, [sp], -r6, lsl #26
    22c4:	052f0632 	streq	r0, [pc, #-1586]!	@ 1c9a <_Min_Stack_Size+0x189a>
    22c8:	08054105 	stmdaeq	r5, {r0, r2, r8, lr}
    22cc:	15050106 	strne	r0, [r5, #-262]	@ 0xfffffefa
    22d0:	02040200 	andeq	r0, r4, #0, 4
    22d4:	20730306 	rsbscs	r0, r3, r6, lsl #6
    22d8:	02040200 	andeq	r0, r4, #0, 4
    22dc:	0b050106 	bleq	1426fc <_Min_Stack_Size+0x1422fc>
    22e0:	0d053306 	stceq	3, cr3, [r5, #-24]	@ 0xffffffe8
    22e4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    22e8:	053d3d06 	ldreq	r3, [sp, #-3334]!	@ 0xfffff2fa
    22ec:	09030601 	stmdbeq	r3, {r0, r9, sl}
    22f0:	0614053c 			@ <UNDEFINED> instruction: 0x0614053c
    22f4:	130305ae 	movwne	r0, #13742	@ 0x35ae
    22f8:	06051313 			@ <UNDEFINED> instruction: 0x06051313
    22fc:	14050106 	strne	r0, [r5], #-262	@ 0xfffffefa
    2300:	2306051d 	movwcs	r0, #25885	@ 0x651d
    2304:	051d1405 	ldreq	r1, [sp, #-1029]	@ 0xfffffbfb
    2308:	4b062305 	blmi	18af24 <_Min_Stack_Size+0x18ab24>
    230c:	01060c05 	tsteq	r6, r5, lsl #24
    2310:	4b060505 	blmi	18372c <_Min_Stack_Size+0x18332c>
    2314:	14050204 	strne	r0, [r5], #-516	@ 0xfffffdfc
    2318:	05012303 	streq	r2, [r1, #-771]	@ 0xfffffcfd
    231c:	3c061303 	stccc	3, cr1, [r6], {3}
    2320:	0601042e 	streq	r0, [r1], -lr, lsr #8
    2324:	05015e03 	streq	r5, [r1, #-3587]	@ 0xfffff1fd
    2328:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
    232c:	59062e05 	stmdbpl	r6, {r0, r2, r9, sl, fp, sp}
    2330:	13050204 	movwne	r0, #20996	@ 0x5204
    2334:	05012d03 	streq	r2, [r1, #-3331]	@ 0xfffff2fd
    2338:	0a051303 	beq	146f4c <_Min_Stack_Size+0x146b4c>
    233c:	044a0106 	strbeq	r0, [sl], #-262	@ 0xfffffefa
    2340:	03010501 	movweq	r0, #5377	@ 0x1501
    2344:	06020154 			@ <UNDEFINED> instruction: 0x06020154
    2348:	3b010100 	blcc	42750 <_Min_Stack_Size+0x42350>
    234c:	03000001 	movweq	r0, #1
    2350:	00007c00 	andeq	r7, r0, r0, lsl #24
    2354:	fb010200 	blx	42b5e <_Min_Stack_Size+0x4275e>
    2358:	01000d0e 	tsteq	r0, lr, lsl #26
    235c:	00010101 	andeq	r0, r1, r1, lsl #2
    2360:	00010000 	andeq	r0, r1, r0
    2364:	2e2e0100 	sufcse	f0, f6, f0
    2368:	2f2e2e2f 	svccs	0x002e2e2f
    236c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2370:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2374:	2f2e2e2f 	svccs	0x002e2e2f
    2378:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    237c:	656e2f2e 	strbvs	r2, [lr, #-3886]!	@ 0xfffff0d2
    2380:	62696c77 	rsbvs	r6, r9, #30464	@ 0x7700
    2384:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
    2388:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    238c:	2f006373 	svccs	0x00006373
    2390:	2f727375 	svccs	0x00727375
    2394:	2f62696c 	svccs	0x0062696c
    2398:	2f636367 	svccs	0x00636367
    239c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	@ 0xfffffe7c
    23a0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
    23a4:	6261652d 	rsbvs	r6, r1, #188743680	@ 0xb400000
    23a8:	30312f69 	eorscc	r2, r1, r9, ror #30
    23ac:	312e332e 			@ <UNDEFINED> instruction: 0x312e332e
    23b0:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
    23b4:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
    23b8:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    23bc:	632e7469 			@ <UNDEFINED> instruction: 0x632e7469
    23c0:	00000100 	andeq	r0, r0, r0, lsl #2
    23c4:	64647473 	strbtvs	r7, [r4], #-1139	@ 0xfffffb8d
    23c8:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    23cc:	00000200 	andeq	r0, r0, r0, lsl #4
    23d0:	00010500 	andeq	r0, r1, r0, lsl #10
    23d4:	16700205 	ldrbtne	r0, [r0], -r5, lsl #4
    23d8:	1e030800 	cdpne	8, 0, cr0, cr3, cr0, {0}
    23dc:	13030501 	movwne	r0, #13569	@ 0x3501
    23e0:	01051413 	tsteq	r5, r3, lsl r4
    23e4:	1f050e06 	svcne	0x00050e06
    23e8:	06030524 	streq	r0, [r3], -r4, lsr #10
    23ec:	010f053d 	tsteq	pc, sp, lsr r5	@ <UNPREDICTABLE>
    23f0:	01060305 	tsteq	r6, r5, lsl #6
    23f4:	200a0520 	andcs	r0, sl, r0, lsr #10
    23f8:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
    23fc:	21060304 	tstcs	r6, r4, lsl #6
    2400:	02001a05 	andeq	r1, r0, #20480	@ 0x5000
    2404:	01060304 	tsteq	r6, r4, lsl #6
    2408:	02001b05 	andeq	r1, r0, #5120	@ 0x1400
    240c:	052d0304 	streq	r0, [sp, #-772]!	@ 0xfffffcfc
    2410:	04020005 	streq	r0, [r2], #-5
    2414:	1a052103 	bne	14a828 <_Min_Stack_Size+0x14a428>
    2418:	03040200 	movweq	r0, #16896	@ 0x4200
    241c:	0f051f06 	svceq	0x00051f06
    2420:	03040200 	movweq	r0, #16896	@ 0x4200
    2424:	00030501 	andeq	r0, r3, r1, lsl #10
    2428:	06030402 	streq	r0, [r3], -r2, lsl #8
    242c:	05320601 	ldreq	r0, [r2, #-1537]!	@ 0xfffff9ff
    2430:	2015061c 	andscs	r0, r5, ip, lsl r6
    2434:	061d0305 	ldreq	r0, [sp], -r5, lsl #6
    2438:	061c0531 			@ <UNDEFINED> instruction: 0x061c0531
    243c:	06030501 	streq	r0, [r3], -r1, lsl #10
    2440:	010f0521 	tsteq	pc, r1, lsr #10
    2444:	01060305 	tsteq	r6, r5, lsl #6
    2448:	200a0520 	andcs	r0, sl, r0, lsr #10
    244c:	02000505 	andeq	r0, r0, #20971520	@ 0x1400000
    2450:	21060304 	tstcs	r6, r4, lsl #6
    2454:	02001705 	andeq	r1, r0, #1310720	@ 0x140000
    2458:	01060304 	tsteq	r6, r4, lsl #6
    245c:	02001b05 	andeq	r1, r0, #5120	@ 0x1400
    2460:	052d0304 	streq	r0, [sp, #-772]!	@ 0xfffffcfc
    2464:	04020005 	streq	r0, [r2], #-5
    2468:	1a052103 	bne	14a87c <_Min_Stack_Size+0x14a47c>
    246c:	03040200 	movweq	r0, #16896	@ 0x4200
    2470:	0f051f06 	svceq	0x00051f06
    2474:	03040200 	movweq	r0, #16896	@ 0x4200
    2478:	00030501 	andeq	r0, r3, r1, lsl #10
    247c:	06030402 	streq	r0, [r3], -r2, lsl #8
    2480:	30010501 	andcc	r0, r1, r1, lsl #10
    2484:	00080220 	andeq	r0, r8, r0, lsr #4
    2488:	Address 0x2488 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	4f495047 	svcmi	0x00495047
       4:	7079545f 	rsbsvc	r5, r9, pc, asr r4
       8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
       c:	50534f00 	subspl	r4, r3, r0, lsl #30
      10:	52444545 	subpl	r4, r4, #289406976	@ 0x11400000
      14:	504b4200 	subpl	r4, fp, r0, lsl #4
      18:	41005232 	tstmi	r0, r2, lsr r2
      1c:	52314250 	eorspl	r4, r1, #80, 4
      20:	00525453 	subseq	r5, r2, r3, asr r4
      24:	32504b42 	subscc	r4, r0, #67584	@ 0x10800
      28:	74005233 	strvc	r5, [r0], #-563	@ 0xfffffdcd
      2c:	00706d65 	rsbseq	r6, r0, r5, ror #26
      30:	726f6873 	rsbvc	r6, pc, #7536640	@ 0x730000
      34:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
      38:	4b420074 	blmi	1080210 <_Min_Stack_Size+0x107fe10>
      3c:	00523650 	subseq	r3, r2, r0, asr r6
      40:	52434550 	subpl	r4, r3, #80, 10	@ 0x14000000
      44:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
      48:	55570052 	ldrbpl	r0, [r7, #-82]	@ 0xffffffae
      4c:	42005254 	andmi	r5, r0, #84, 4	@ 0x40000005
      50:	3033504b 	eorscc	r5, r3, fp, asr #32
      54:	57500052 			@ <UNDEFINED> instruction: 0x57500052
      58:	79545f52 	ldmdbvc	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
      5c:	65446570 	strbvs	r6, [r4, #-1392]	@ 0xfffffa90
      60:	6f6c0066 	svcvs	0x006c0066
      64:	6c20676e 	stcvs	7, cr6, [r0], #-440	@ 0xfffffe48
      68:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      6c:	00746e69 	rsbseq	r6, r4, r9, ror #28
      70:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
      74:	524e4550 	subpl	r4, lr, #80, 10	@ 0x14000000
      78:	504b4200 	subpl	r4, fp, r0, lsl #4
      7c:	00523331 	subseq	r3, r2, r1, lsr r3
      80:	43534349 	cmpmi	r3, #603979777	@ 0x24000001
      84:	6c630052 	stclvs	0, cr0, [r3], #-328	@ 0xfffffeb8
      88:	5f6b636f 	svcpl	0x006b636f
      8c:	43005348 	movwmi	r5, #840	@ 0x348
      90:	00524746 	subseq	r4, r2, r6, asr #14
      94:	31504b42 	cmpcc	r0, r2, asr #22
      98:	41005237 	tstmi	r0, r7, lsr r2
      9c:	45314250 	ldrmi	r4, [r1, #-592]!	@ 0xfffffdb0
      a0:	5400524e 	strpl	r5, [r0], #-590	@ 0xfffffdb2
      a4:	00524453 	subseq	r4, r2, r3, asr r4
      a8:	32504b42 	subscc	r4, r0, #67584	@ 0x10800
      ac:	2f005230 	svccs	0x00005230
      b0:	6964656d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
      b4:	78652f61 	stmdavc	r5!, {r0, r5, r6, r8, r9, sl, fp, sp}^
      b8:	65642f74 	strbvs	r2, [r4, #-3956]!	@ 0xfffff08c
      bc:	72702f76 	rsbsvc	r2, r0, #472	@ 0x1d8
      c0:	312f676f 			@ <UNDEFINED> instruction: 0x312f676f
      c4:	7369722d 	cmnvc	r9, #-805306366	@ 0xd0000002
      c8:	69722f63 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
      cc:	2d766373 	ldclcs	3, cr6, [r6, #-460]!	@ 0xfffffe34
      d0:	2f6d7361 	svccs	0x006d7361
      d4:	6172614b 	cmnvs	r2, fp, asr #2
      d8:	6974616b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, sp, lr}^
      dc:	2f617374 	svccs	0x00617374
      e0:	6172614b 	cmnvs	r2, fp, asr #2
      e4:	6974616b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, sp, lr}^
      e8:	5f617374 	svcpl	0x00617374
      ec:	69662f31 	stmdbvs	r6!, {r0, r4, r5, r8, r9, sl, fp, sp}^
      f0:	61776d72 	cmnvs	r7, r2, ror sp
      f4:	54006572 	strpl	r6, [r0], #-1394	@ 0xfffffa8e
      f8:	52434641 	subpl	r4, r3, #68157440	@ 0x4100000
      fc:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     100:	00323374 	eorseq	r3, r2, r4, ror r3
     104:	5059544f 	subspl	r5, r9, pc, asr #8
     108:	41005245 	tstmi	r0, r5, asr #4
     10c:	45324250 	ldrmi	r4, [r2, #-592]!	@ 0xfffffdb0
     110:	5000524e 	andpl	r5, r0, lr, asr #4
     114:	00524552 	subseq	r4, r2, r2, asr r5
     118:	33504b42 	cmpcc	r0, #67584	@ 0x10800
     11c:	504f0052 	subpl	r0, pc, r2, asr r0	@ <UNPREDICTABLE>
     120:	59454b54 	stmdbpl	r5, {r2, r4, r6, r8, r9, fp, lr}^
     124:	48410052 	stmdami	r1, {r1, r4, r6}^
     128:	54535242 	ldrbpl	r5, [r3], #-578	@ 0xfffffdbe
     12c:	4b420052 	blmi	108027c <_Min_Stack_Size+0x107fe7c>
     130:	52343250 	eorspl	r3, r4, #80, 4
     134:	50555000 	subspl	r5, r5, r0
     138:	43005244 	movwmi	r5, #580	@ 0x244
     13c:	42494c41 	submi	r4, r9, #16640	@ 0x4100
     140:	4b420052 	blmi	1080290 <_Min_Stack_Size+0x107fe90>
     144:	52303150 	eorspl	r3, r0, #80, 2
     148:	504b4200 	subpl	r4, fp, r0, lsl #4
     14c:	52005237 	andpl	r5, r0, #1879048195	@ 0x70000003
     150:	545f4343 	ldrbpl	r4, [pc], #-835	@ 158 <_Min_Heap_Size+0x158>
     154:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
     158:	42006665 	andmi	r6, r0, #105906176	@ 0x6500000
     15c:	00525253 	subseq	r5, r2, r3, asr r2
     160:	32504b42 	subscc	r4, r0, #67584	@ 0x10800
     164:	4d005238 	sfmmi	f5, 4, [r0, #-224]	@ 0xffffff20
     168:	5245444f 	subpl	r4, r5, #1325400064	@ 0x4f000000
     16c:	42504100 	subsmi	r4, r0, #0, 2
     170:	54535232 	ldrbpl	r5, [r3], #-562	@ 0xfffffdce
     174:	4b420052 	blmi	10802c4 <_Min_Stack_Size+0x107fec4>
     178:	52313350 	eorspl	r3, r1, #80, 6	@ 0x40000001
     17c:	655f5f00 	ldrbvs	r5, [pc, #-3840]	@ fffff284 <BootRAM+0xef6fa25>
     180:	6c62616e 	stfvse	f6, [r2], #-440	@ 0xfffffe48
     184:	72695f65 	rsbvc	r5, r9, #404	@ 0x194
     188:	4c410071 	mcrrmi	0, 7, r0, r1, cr1
     18c:	53414d52 	movtpl	r4, #7506	@ 0x1d52
     190:	47005253 	smlsdmi	r0, r3, r2, r5
     194:	4320554e 			@ <UNDEFINED> instruction: 0x4320554e
     198:	31203731 			@ <UNDEFINED> instruction: 0x31203731
     19c:	2e322e32 	mrccs	14, 1, r2, cr2, cr2, {1}
     1a0:	30322031 	eorscc	r2, r2, r1, lsr r0
     1a4:	32313232 	eorscc	r3, r1, #536870915	@ 0x20000003
     1a8:	2d203530 	cfstr32cs	mvfx3, [r0, #-192]!	@ 0xffffff40
     1ac:	7568746d 	strbvc	r7, [r8, #-1133]!	@ 0xfffffb93
     1b0:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	@ 0xfffffe4c
     1b4:	7570636d 	ldrbvc	r6, [r0, #-877]!	@ 0xfffffc93
     1b8:	726f633d 	rsbvc	r6, pc, #-201326592	@ 0xf4000000
     1bc:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	@ 0xfffffe30
     1c0:	2d20336d 	stccs	3, cr3, [r0, #-436]!	@ 0xfffffe4c
     1c4:	6f6c666d 	svcvs	0x006c666d
     1c8:	612d7461 			@ <UNDEFINED> instruction: 0x612d7461
     1cc:	733d6962 	teqvc	sp, #1605632	@ 0x188000
     1d0:	2074666f 	rsbscs	r6, r4, pc, ror #12
     1d4:	72616d2d 	rsbvc	r6, r1, #2880	@ 0xb40
     1d8:	613d6863 	teqvs	sp, r3, ror #16
     1dc:	37766d72 			@ <UNDEFINED> instruction: 0x37766d72
     1e0:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	@ 0xffffff4c
     1e4:	61776467 	cmnvs	r7, r7, ror #8
     1e8:	322d6672 	eorcc	r6, sp, #119537664	@ 0x7200000
     1ec:	734f2d20 	movtvc	r2, #64800	@ 0xfd20
     1f0:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     1f4:	75622d6f 	strbvc	r2, [r2, #-3439]!	@ 0xfffff291
     1f8:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
     1fc:	4b42006e 	blmi	10803bc <_Min_Stack_Size+0x107ffbc>
     200:	52343150 	eorspl	r3, r4, #80, 2
     204:	42535500 	subsmi	r5, r3, #0, 10
     208:	7465735f 	strbtvc	r7, [r5], #-863	@ 0xfffffca1
     20c:	41007075 	tstmi	r0, r5, ror r0
     210:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
     214:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
     218:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
     21c:	63206465 			@ <UNDEFINED> instruction: 0x63206465
     220:	00726168 	rsbseq	r6, r2, r8, ror #2
     224:	72617571 	rsbvc	r7, r1, #473956352	@ 0x1c400000
     228:	50007a74 	andpl	r7, r0, r4, ror sl
     22c:	59454b45 	stmdbpl	r5, {r0, r2, r6, r8, r9, fp, lr}^
     230:	4b420052 	blmi	1080380 <_Min_Stack_Size+0x107ff80>
     234:	00523050 	subseq	r3, r2, r0, asr r0
     238:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     23c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     240:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
     244:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
     248:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     24c:	7500746e 	strvc	r7, [r0, #-1134]	@ 0xfffffb92
     250:	33746e69 	cmncc	r4, #1680	@ 0x690
     254:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     258:	4d524c41 	ldclmi	12, cr4, [r2, #-260]	@ 0xfffffefc
     25c:	75005241 	strvc	r5, [r0, #-577]	@ 0xfffffdbf
     260:	31746e69 	cmncc	r4, r9, ror #28
     264:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     268:	46494853 			@ <UNDEFINED> instruction: 0x46494853
     26c:	42005254 	andmi	r5, r0, #84, 4	@ 0x40000005
     270:	5234504b 	eorspl	r5, r4, #75	@ 0x4b
     274:	54535400 	ldrbpl	r5, [r3], #-1024	@ 0xfffffc00
     278:	69740052 	ldmdbvs	r4!, {r1, r4, r6}^
     27c:	4200656d 	andmi	r6, r0, #457179136	@ 0x1b400000
     280:	3532504b 	ldrcc	r5, [r2, #-75]!	@ 0xffffffb5
     284:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
     288:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	@ 0xfffffe34
     28c:	74696e49 	strbtvc	r6, [r9], #-3657	@ 0xfffff1b7
     290:	6f687300 	svcvs	0x00687300
     294:	75207472 	strvc	r7, [r0, #-1138]!	@ 0xfffffb8e
     298:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     29c:	2064656e 	rsbcs	r6, r4, lr, ror #10
     2a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     2a4:	31425041 	cmpcc	r2, r1, asr #32
     2a8:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     2ac:	52570052 	subspl	r0, r7, #82	@ 0x52
     2b0:	00315250 	eorseq	r5, r1, r0, asr r2
     2b4:	31504b42 	cmpcc	r0, r2, asr #22
     2b8:	42005231 	andmi	r5, r0, #268435459	@ 0x10000003
     2bc:	5238504b 	eorspl	r5, r8, #75	@ 0x4b
     2c0:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     2c4:	4b42006e 	blmi	1080484 <_Min_Stack_Size+0x1080084>
     2c8:	52393250 	eorspl	r3, r9, #80, 4
     2cc:	524c4100 	subpl	r4, ip, #0, 2
     2d0:	5353424d 	cmppl	r3, #-805306364	@ 0xd0000004
     2d4:	4b420052 	blmi	1080424 <_Min_Stack_Size+0x1080024>
     2d8:	52383150 	eorspl	r3, r8, #80, 2
     2dc:	504b4200 	subpl	r4, fp, r0, lsl #4
     2e0:	00523531 	subseq	r3, r2, r1, lsr r5
     2e4:	5f435452 	svcpl	0x00435452
     2e8:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
     2ec:	00666544 	rsbeq	r6, r6, r4, asr #10
     2f0:	32504b42 	subscc	r4, r0, #67584	@ 0x10800
     2f4:	73005231 	movwvc	r5, #561	@ 0x231
     2f8:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     2fc:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	@ <UNPREDICTABLE>
     300:	0074696e 	rsbseq	r6, r4, lr, ror #18
     304:	5f627375 	svcpl	0x00627375
     308:	73616c63 	cmnvc	r1, #25344	@ 0x6300
     30c:	6f705f73 	svcvs	0x00705f73
     310:	52006c6c 	andpl	r6, r0, #108, 24	@ 0x6c00
     314:	52455345 	subpl	r5, r5, #335544321	@ 0x14000001
     318:	37444556 	smlsldcc	r4, r4, r6, r5	@ <UNPREDICTABLE>
     31c:	504b4200 	subpl	r4, fp, r0, lsl #4
     320:	00523931 	subseq	r3, r2, r1, lsr r9
     324:	31504b42 	cmpcc	r0, r2, asr #22
     328:	4b420052 	blmi	1080478 <_Min_Stack_Size+0x1080078>
     32c:	52323250 	eorspl	r3, r2, #80, 4
     330:	47525000 	ldrbmi	r5, [r2, -r0]
     334:	5259454b 	subspl	r4, r9, #314572800	@ 0x12c00000
     338:	524c4100 	subpl	r4, ip, #0, 2
     33c:	0052424d 	subseq	r4, r2, sp, asr #4
     340:	35504b42 	ldrbcc	r4, [r0, #-2882]	@ 0xfffff4be
     344:	4b420052 	blmi	1080494 <_Min_Stack_Size+0x1080094>
     348:	52363250 	eorspl	r3, r6, #80, 4
     34c:	50525700 	subspl	r5, r2, r0, lsl #14
     350:	50003252 	andpl	r3, r0, r2, asr r2
     354:	59454b44 	stmdbpl	r5, {r2, r6, r8, r9, fp, lr}^
     358:	53540052 	cmppl	r4, #82	@ 0x52
     35c:	00525353 	subseq	r5, r2, r3, asr r3
     360:	31504b42 	cmpcc	r0, r2, asr #22
     364:	52005232 	andpl	r5, r0, #536870915	@ 0x20000003
     368:	52455345 	subpl	r5, r5, #335544321	@ 0x14000001
     36c:	00444556 	subeq	r4, r4, r6, asr r5
     370:	39504b42 	ldmdbcc	r0, {r1, r6, r8, r9, fp, lr}^
     374:	4c460052 	mcrrmi	0, 5, r0, r6, cr2
     378:	5f485341 	svcpl	0x00485341
     37c:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
     380:	00666544 	rsbeq	r6, r6, r4, asr #10
     384:	32504b42 	subscc	r4, r0, #67584	@ 0x10800
     388:	4c005237 	sfmmi	f5, 4, [r0], {55}	@ 0x37
     38c:	00524b43 	subseq	r4, r2, r3, asr #22
     390:	32425041 	subcc	r5, r2, #65	@ 0x41
     394:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     398:	72730052 	rsbsvc	r0, r3, #82	@ 0x52
     39c:	616d2f63 	cmnvs	sp, r3, ror #30
     3a0:	632e6e69 			@ <UNDEFINED> instruction: 0x632e6e69
     3a4:	504b4200 	subpl	r4, fp, r0, lsl #4
     3a8:	00523631 	subseq	r3, r2, r1, lsr r6
     3ac:	65656c73 	strbvs	r6, [r5, #-3187]!	@ 0xfffff38d
     3b0:	72730070 	rsbsvc	r0, r3, #112	@ 0x70
     3b4:	79732f63 	ldmdbvc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
     3b8:	63697473 	cmnvs	r9, #1929379840	@ 0x73000000
     3bc:	00632e6b 	rsbeq	r2, r3, fp, ror #28
     3c0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
     3c4:	54430042 	strbpl	r0, [r3], #-66	@ 0xffffffbe
     3c8:	4c004c52 	stcmi	12, cr4, [r0], {82}	@ 0x52
     3cc:	0044414f 	subeq	r4, r4, pc, asr #2
     3d0:	54737953 	ldrbtpl	r7, [r3], #-2387	@ 0xfffff6ad
     3d4:	5f6b6369 	svcpl	0x006b6369
     3d8:	646e6148 	strbtvs	r6, [lr], #-328	@ 0xfffffeb8
     3dc:	0072656c 	rsbseq	r6, r2, ip, ror #10
     3e0:	54737953 	ldrbtpl	r7, [r3], #-2387	@ 0xfffff6ad
     3e4:	5f6b6369 	svcpl	0x006b6369
     3e8:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
     3ec:	73797300 	cmnvc	r9, #0, 6
     3f0:	6b636974 	blvs	18da9c8 <_Min_Stack_Size+0x18da5c8>
     3f4:	746e695f 	strbtvc	r6, [lr], #-2399	@ 0xfffff6a1
     3f8:	616e7265 	cmnvs	lr, r5, ror #4
     3fc:	4954006c 	ldmdbmi	r4, {r2, r3, r5, r6}^
     400:	5f31314d 	svcpl	0x0031314d
     404:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     408:	6e497700 	cdpvs	7, 4, cr7, cr9, cr0, {0}
     40c:	00786564 	rsbseq	r6, r8, r4, ror #10
     410:	43535953 	cmpmi	r3, #1359872	@ 0x14c000
     414:	545f4746 	ldrbpl	r4, [pc], #-1862	@ 41c <_Min_Stack_Size+0x1c>
     418:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
     41c:	62006665 	andvs	r6, r0, #105906176	@ 0x6500000
     420:	36316675 			@ <UNDEFINED> instruction: 0x36316675
     424:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     428:	52495f39 	subpl	r5, r9, #57, 30	@ 0xe4
     42c:	44006e51 	strmi	r6, [r0], #-3665	@ 0xfffff1af
     430:	5f31414d 	svcpl	0x0031414d
     434:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     438:	376c656e 	strbcc	r6, [ip, -lr, ror #10]!
     43c:	5152495f 	cmppl	r2, pc, asr r9
     440:	3249006e 	subcc	r0, r9, #110	@ 0x6e
     444:	455f3243 	ldrbmi	r3, [pc, #-579]	@ 209 <_Min_Heap_Size+0x209>
     448:	52495f52 	subpl	r5, r9, #328	@ 0x148
     44c:	53006e51 	movwpl	r6, #3665	@ 0xe51
     450:	495f4356 	ldmdbmi	pc, {r1, r2, r4, r6, r8, r9, lr}^	@ <UNPREDICTABLE>
     454:	006e5152 	rsbeq	r5, lr, r2, asr r1
     458:	344d4954 	strbcc	r4, [sp], #-2388	@ 0xfffff6ac
     45c:	5152495f 	cmppl	r2, pc, asr r9
     460:	4d44006e 	stclmi	0, cr0, [r4, #-440]	@ 0xfffffe48
     464:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
     468:	6e6e6168 	powvsez	f6, f6, #0.0
     46c:	5f326c65 	svcpl	0x00326c65
     470:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     474:	616d7000 	cmnvs	sp, r0
     478:	7365645f 	cmnvc	r5, #1593835520	@ 0x5f000000
     47c:	745f7263 	ldrbvc	r7, [pc], #-611	@ 484 <_Min_Stack_Size+0x84>
     480:	526d6200 	rsbpl	r6, sp, #0, 4
     484:	65757165 	ldrbvs	r7, [r5, #-357]!	@ 0xfffffe9b
     488:	79547473 	ldmdbvc	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     48c:	73006570 	movwvc	r6, #1392	@ 0x570
     490:	70757465 	rsbsvc	r7, r5, r5, ror #8
     494:	6361705f 	cmnvs	r1, #95	@ 0x5f
     498:	0074656b 	rsbseq	r6, r4, fp, ror #10
     49c:	53414c46 	movtpl	r4, #7238	@ 0x1c46
     4a0:	52495f48 	subpl	r5, r9, #72, 30	@ 0x120
     4a4:	62006e51 	andvs	r6, r0, #1296	@ 0x510
     4a8:	73657479 	cmnvc	r5, #2030043136	@ 0x79000000
     4ac:	64616572 	strbtvs	r6, [r1], #-1394	@ 0xfffffa8e
     4b0:	54584500 	ldrbpl	r4, [r8], #-1280	@ 0xfffffb00
     4b4:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	@ <UNPREDICTABLE>
     4b8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4bc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     4c0:	315f3531 	cmpcc	pc, r1, lsr r5	@ <UNPREDICTABLE>
     4c4:	52495f30 	subpl	r5, r9, #48, 30	@ 0xc0
     4c8:	66006e51 			@ <UNDEFINED> instruction: 0x66006e51
     4cc:	00636e75 	rsbeq	r6, r3, r5, ror lr
     4d0:	7473616c 	ldrbtvc	r6, [r3], #-364	@ 0xfffffe94
     4d4:	72646461 	rsbvc	r6, r4, #1627389952	@ 0x61000000
     4d8:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
     4dc:	5f565364 	svcpl	0x00565364
     4e0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4e4:	62737500 	rsbsvs	r7, r3, #0, 10
     4e8:	616c635f 	cmnvs	ip, pc, asr r3
     4ec:	735f7373 	cmpvc	pc, #-872415231	@ 0xcc000001
     4f0:	4d00666f 	stcmi	6, cr6, [r0, #-444]	@ 0xfffffe44
     4f4:	4d524d45 	ldclmi	13, cr4, [r2, #-276]	@ 0xfffffeec
     4f8:	43520050 	cmpmi	r2, #80	@ 0x50
     4fc:	52495f43 	subpl	r5, r9, #268	@ 0x10c
     500:	77006e51 	smlsdvc	r0, r1, lr, r6
     504:	756c6156 	strbvc	r6, [ip, #-342]!	@ 0xfffffeaa
     508:	654d0065 	strbvs	r0, [sp, #-101]	@ 0xffffff9b
     50c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     510:	616e614d 	cmnvs	lr, sp, asr #2
     514:	656d6567 	strbvs	r6, [sp, #-1383]!	@ 0xfffffa99
     518:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
     51c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     520:	5f307065 	svcpl	0x00307065
     524:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     528:	53490074 	movtpl	r0, #36980	@ 0x9074
     52c:	54005254 	strpl	r5, [r0], #-596	@ 0xfffffdac
     530:	45504d41 	ldrbmi	r4, [r0, #-3393]	@ 0xfffff2bf
     534:	54535f52 	ldrbpl	r5, [r3], #-3922	@ 0xfffff0ae
     538:	5f504d41 	svcpl	0x00504d41
     53c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     540:	45534900 	ldrbmi	r4, [r3, #-2304]	@ 0xfffff700
     544:	6e650052 	mcrvs	0, 3, r0, cr5, cr2, {2}
     548:	635f7064 	cmpvs	pc, #100	@ 0x64
     54c:	626c6c61 	rsbvs	r6, ip, #24832	@ 0x6100
     550:	5f6b6361 	svcpl	0x006b6361
     554:	61666564 	cmnvs	r6, r4, ror #10
     558:	00746c75 	rsbseq	r6, r4, r5, ror ip
     55c:	32414d44 	subcc	r4, r1, #68, 26	@ 0x1100
     560:	6168435f 	cmnvs	r8, pc, asr r3
     564:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
     568:	52495f34 	subpl	r5, r9, #52, 30	@ 0xd0
     56c:	52006e51 	andpl	r6, r0, #1296	@ 0x510
     570:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     574:	00314445 	eorseq	r4, r1, r5, asr #8
     578:	31495053 	qdaddcc	r5, r3, r9
     57c:	5152495f 	cmppl	r2, pc, asr r9
     580:	755f006e 	ldrbvc	r0, [pc, #-110]	@ 51a <_Min_Stack_Size+0x11a>
     584:	655f6273 	ldrbvs	r6, [pc, #-627]	@ 319 <_Min_Heap_Size+0x319>
     588:	72775f70 	rsbsvc	r5, r7, #112, 30	@ 0x1c0
     58c:	00657469 	rsbeq	r7, r5, r9, ror #8
     590:	364d4954 			@ <UNDEFINED> instruction: 0x364d4954
     594:	5152495f 	cmppl	r2, pc, asr r9
     598:	4d44006e 	stclmi	0, cr0, [r4, #-440]	@ 0xfffffe48
     59c:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
     5a0:	6e6e6168 	powvsez	f6, f6, #0.0
     5a4:	5f346c65 	svcpl	0x00346c65
     5a8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5ac:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     5b0:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
     5b4:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
     5b8:	00515249 	subseq	r5, r1, r9, asr #4
     5bc:	504d4f43 	subpl	r4, sp, r3, asr #30
     5c0:	5152495f 	cmppl	r2, pc, asr r9
     5c4:	5355006e 	cmppl	r5, #110	@ 0x6e
     5c8:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     5cc:	65446570 	strbvs	r6, [r4, #-1392]	@ 0xfffffa90
     5d0:	41440066 	cmpmi	r4, r6, rrx
     5d4:	00524444 	subseq	r4, r2, r4, asr #8
     5d8:	5f425355 	svcpl	0x00425355
     5dc:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	@ <UNPREDICTABLE>
     5e0:	61485152 	cmpvs	r8, r2, asr r1
     5e4:	656c646e 	strbvs	r6, [ip, #-1134]!	@ 0xfffffb92
     5e8:	73750072 	cmnvc	r5, #114	@ 0x72
     5ec:	6c635f62 	stclvs	15, cr5, [r3], #-392	@ 0xfffffe78
     5f0:	5f737361 	svcpl	0x00737361
     5f4:	5f746567 	svcpl	0x00746567
     5f8:	5f647473 	svcpl	0x00647473
     5fc:	63736564 	cmnvs	r3, #100, 10	@ 0x19000000
     600:	52490072 	subpl	r0, r9, #114	@ 0x72
     604:	545f6e51 	ldrbpl	r6, [pc], #-3665	@ 60c <_Min_Stack_Size+0x20c>
     608:	00657079 	rsbeq	r7, r5, r9, ror r0
     60c:	5f307065 	svcpl	0x00307065
     610:	646e6573 	strbtvs	r6, [lr], #-1395	@ 0xfffffa8d
     614:	41535500 	cmpmi	r3, r0, lsl #10
     618:	5f325452 	svcpl	0x00325452
     61c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     620:	66666f00 	strbtvs	r6, [r6], -r0, lsl #30
     624:	00746573 	rsbseq	r6, r4, r3, ror r5
     628:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     62c:	72756769 	rsbsvc	r6, r5, #27525120	@ 0x1a40000
     630:	6f697461 	svcvs	0x00697461
     634:	5045006e 	subpl	r0, r5, lr, rrx
     638:	52005230 	andpl	r5, r0, #48, 4
     63c:	575f4354 			@ <UNDEFINED> instruction: 0x575f4354
     640:	5f50554b 	svcpl	0x0050554b
     644:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     648:	42535500 	subsmi	r5, r3, #0, 10
     64c:	6464415f 	strbtvs	r4, [r4], #-351	@ 0xfffffea1
     650:	70650072 	rsbvc	r0, r5, r2, ror r0
     654:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
     658:	74756f5f 	ldrbtvc	r6, [r5], #-3935	@ 0xfffff0a1
     65c:	30706500 	rsbscc	r6, r0, r0, lsl #10
     660:	6675625f 			@ <UNDEFINED> instruction: 0x6675625f
     664:	54584500 	ldrbpl	r4, [r8], #-1280	@ 0xfffffb00
     668:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	@ <UNPREDICTABLE>
     66c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     670:	31434441 	cmpcc	r3, r1, asr #8
     674:	5152495f 	cmppl	r2, pc, asr r9
     678:	3249006e 	subcc	r0, r9, #110	@ 0x6e
     67c:	455f3243 	ldrbmi	r3, [pc, #-579]	@ 441 <_Min_Stack_Size+0x41>
     680:	52495f56 	subpl	r5, r9, #344	@ 0x158
     684:	45006e51 	strmi	r6, [r0, #-3665]	@ 0xfffff1af
     688:	00523150 	subseq	r3, r2, r0, asr r1
     68c:	33495053 	movtcc	r5, #36947	@ 0x9053
     690:	5152495f 	cmppl	r2, pc, asr r9
     694:	7375006e 	cmnvc	r5, #110	@ 0x6e
     698:	70655f62 	rsbvc	r5, r5, r2, ror #30
     69c:	61746164 	cmnvs	r4, r4, ror #2
     6a0:	4300745f 	movwmi	r7, #1119	@ 0x45f
     6a4:	5f504d4f 	svcpl	0x00504d4f
     6a8:	5f514341 	svcpl	0x00514341
     6ac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6b0:	414d4400 	cmpmi	sp, r0, lsl #8
     6b4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     6b8:	656e6e61 	strbvs	r6, [lr, #-3681]!	@ 0xfffff19f
     6bc:	495f366c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, sl, ip, sp}^	@ <UNPREDICTABLE>
     6c0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6c4:	32414d44 	subcc	r4, r1, #68, 26	@ 0x1100
     6c8:	6168435f 	cmnvs	r8, pc, asr r3
     6cc:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
     6d0:	52495f31 	subpl	r5, r9, #49, 30	@ 0xc4
     6d4:	5f006e51 	svcpl	0x00006e51
     6d8:	5f627375 	svcpl	0x00627375
     6dc:	725f7065 	subsvc	r7, pc, #101	@ 0x65
     6e0:	00646165 	rsbeq	r6, r4, r5, ror #2
     6e4:	334d4954 	movtcc	r4, #55636	@ 0xd954
     6e8:	5152495f 	cmppl	r2, pc, asr r9
     6ec:	4d44006e 	stclmi	0, cr0, [r4, #-440]	@ 0xfffffe48
     6f0:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
     6f4:	6e6e6168 	powvsez	f6, f6, #0.0
     6f8:	5f316c65 	svcpl	0x00316c65
     6fc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     700:	62737500 	rsbsvs	r7, r3, #0, 10
     704:	616c635f 	cmnvs	ip, pc, asr r3
     708:	695f7373 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	@ <UNPREDICTABLE>
     70c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     710:	746e6975 	strbtvc	r6, [lr], #-2421	@ 0xfffff68b
     714:	00745f38 	rsbseq	r5, r4, r8, lsr pc
     718:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     71c:	45005243 	strmi	r5, [r0, #-579]	@ 0xfffffdbd
     720:	00523250 	subseq	r3, r2, r0, asr r2
     724:	314d4954 	cmpcc	sp, r4, asr r9
     728:	52495f30 	subpl	r5, r9, #48, 30	@ 0xc0
     72c:	57006e51 	smlsdpl	r0, r1, lr, r6
     730:	5f474457 	svcpl	0x00474457
     734:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     738:	62737500 	rsbsvs	r7, r3, #0, 10
     73c:	616c635f 	cmnvs	ip, pc, asr r3
     740:	645f7373 	ldrbvs	r7, [pc], #-883	@ 748 <_Min_Stack_Size+0x348>
     744:	6f637369 	svcvs	0x00637369
     748:	63656e6e 	cmnvs	r5, #1760	@ 0x6e0
     74c:	50450074 	subpl	r0, r5, r4, ror r0
     750:	42005233 	andmi	r5, r0, #805306371	@ 0x30000003
     754:	61467375 	hvcvs	26421	@ 0x6735
     758:	5f746c75 	svcpl	0x00746c75
     75c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     760:	54584500 	ldrbpl	r4, [r8], #-1280	@ 0xfffffb00
     764:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	@ <UNPREDICTABLE>
     768:	006e5152 	rsbeq	r5, lr, r2, asr r1
     76c:	5f445650 	svcpl	0x00445650
     770:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     774:	66706500 	ldrbtvs	r6, [r0], -r0, lsl #10
     778:	5f636e75 	svcpl	0x00636e75
     77c:	73750074 	cmnvc	r5, #116	@ 0x74
     780:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     784:	756f635f 	strbvc	r6, [pc, #-863]!	@ 42d <_Min_Stack_Size+0x2d>
     788:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     78c:	00525043 	subseq	r5, r2, r3, asr #32
     790:	32414d44 	subcc	r4, r1, #68, 26	@ 0x1100
     794:	6168435f 	cmnvs	r8, pc, asr r3
     798:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
     79c:	52495f33 	subpl	r5, r9, #51, 30	@ 0xcc
     7a0:	54006e51 	strpl	r6, [r0], #-3665	@ 0xfffff1af
     7a4:	5f354d49 	svcpl	0x00354d49
     7a8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7ac:	414d4400 	cmpmi	sp, r0, lsl #8
     7b0:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     7b4:	656e6e61 	strbvs	r6, [lr, #-3681]!	@ 0xfffff19f
     7b8:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	@ <UNPREDICTABLE>
     7bc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     7c0:	2f637273 	svccs	0x00637273
     7c4:	5f627375 	svcpl	0x00627375
     7c8:	2e62696c 	vnmulcs.f16	s13, s4, s25	@ <UNPREDICTABLE>
     7cc:	32490063 	subcc	r0, r9, #99	@ 0x63
     7d0:	455f3143 	ldrbmi	r3, [pc, #-323]	@ 695 <_Min_Stack_Size+0x295>
     7d4:	52495f56 	subpl	r5, r9, #344	@ 0x158
     7d8:	72006e51 	andvc	r6, r0, #1296	@ 0x510
     7dc:	756e5f78 	strbvc	r5, [lr, #-3960]!	@ 0xfffff088
     7e0:	6c625f6d 	stclvs	15, cr5, [r2], #-436	@ 0xfffffe4c
     7e4:	736b636f 	cmnvc	fp, #-1140850687	@ 0xbc000001
     7e8:	62737500 	rsbsvs	r7, r3, #0, 10
     7ec:	616c635f 	cmnvs	ip, pc, asr r3
     7f0:	655f7373 	ldrbvs	r7, [pc, #-883]	@ 485 <_Min_Stack_Size+0x85>
     7f4:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	@ <UNPREDICTABLE>
     7f8:	7874006e 	ldmdavc	r4!, {r1, r2, r3, r5, r6}^
     7fc:	6f6c625f 	svcvs	0x006c625f
     800:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     804:	5300657a 	movwpl	r6, #1402	@ 0x57a
     808:	00524954 	subseq	r4, r2, r4, asr r9
     80c:	5f435452 	svcpl	0x00435452
     810:	72616c41 	rsbvc	r6, r1, #16640	@ 0x4100
     814:	52495f6d 	subpl	r5, r9, #436	@ 0x1b4
     818:	72006e51 	andvc	r6, r0, #1296	@ 0x510
     81c:	69735f78 	ldmdbvs	r3!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     820:	4500657a 	strmi	r6, [r0, #-1402]	@ 0xfffffa86
     824:	00523550 	subseq	r3, r2, r0, asr r5
     828:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
     82c:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
     830:	45520030 	ldrbmi	r0, [r2, #-48]	@ 0xffffffd0
     834:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     838:	00314445 	eorseq	r4, r1, r5, asr #8
     83c:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
     840:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
     844:	45520032 	ldrbmi	r0, [r2, #-50]	@ 0xffffffce
     848:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     84c:	00334445 	eorseq	r4, r3, r5, asr #8
     850:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
     854:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
     858:	45520034 	ldrbmi	r0, [r2, #-52]	@ 0xffffffcc
     85c:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     860:	00354445 	eorseq	r4, r5, r5, asr #8
     864:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
     868:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
     86c:	53550036 	cmppl	r5, #54	@ 0x36
     870:	53465f42 	movtpl	r5, #28482	@ 0x6f42
     874:	554b575f 	strbpl	r5, [fp, #-1887]	@ 0xfffff8a1
     878:	52495f50 	subpl	r5, r9, #80, 30	@ 0x140
     87c:	52006e51 	andpl	r6, r0, #1296	@ 0x510
     880:	52455345 	subpl	r5, r5, #335544321	@ 0x14000001
     884:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     888:	53455200 	movtpl	r5, #20992	@ 0x5200
     88c:	45565245 	ldrbmi	r5, [r6, #-581]	@ 0xfffffdbb
     890:	55004144 	strpl	r4, [r0, #-324]	@ 0xfffffebc
     894:	54524153 	ldrbpl	r4, [r2], #-339	@ 0xfffffead
     898:	52495f31 	subpl	r5, r9, #49, 30	@ 0xc4
     89c:	75006e51 	strvc	r6, [r0, #-3665]	@ 0xfffff1af
     8a0:	655f6273 	ldrbvs	r6, [pc, #-627]	@ 635 <_Min_Stack_Size+0x235>
     8a4:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     8a8:	4e007469 	cdpmi	4, 0, cr7, cr0, cr9, {3}
     8ac:	614d6e6f 	cmpvs	sp, pc, ror #28
     8b0:	62616b73 	rsbvs	r6, r1, #117760	@ 0x1cc00
     8b4:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     8b8:	52495f74 	subpl	r5, r9, #116, 30	@ 0x1d0
     8bc:	77006e51 	smlsdvc	r0, r1, lr, r6
     8c0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     8c4:	45006874 	strmi	r6, [r0, #-2164]	@ 0xfffff78c
     8c8:	00523650 	subseq	r3, r2, r0, asr r6
     8cc:	7466656c 	strbtvc	r6, [r6], #-1388	@ 0xfffffa94
     8d0:	54584500 	ldrbpl	r4, [r8], #-1280	@ 0xfffffb00
     8d4:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
     8d8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     8dc:	71655262 	cmnvc	r5, r2, ror #4
     8e0:	74736575 	ldrbtvc	r6, [r3], #-1397	@ 0xfffffa8b
     8e4:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     8e8:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     8ec:	43006570 	movwmi	r6, #1392	@ 0x570
     8f0:	0052544e 	subseq	r5, r2, lr, asr #8
     8f4:	32414d44 	subcc	r4, r1, #68, 26	@ 0x1100
     8f8:	6168435f 	cmnvs	r8, pc, asr r3
     8fc:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
     900:	52495f35 	subpl	r5, r9, #53, 30	@ 0xd4
     904:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     908:	5f314332 	svcpl	0x00314332
     90c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	@ <UNPREDICTABLE>
     910:	006e5152 	rsbeq	r5, lr, r2, asr r1
     914:	54737953 	ldrbtpl	r7, [r3], #-2387	@ 0xfffff6ad
     918:	5f6b6369 	svcpl	0x006b6369
     91c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     920:	6e706500 	cdpvs	5, 7, cr6, cr0, cr0, {0}
     924:	54006d75 	strpl	r6, [r0], #-3445	@ 0xfffff28b
     928:	5f324d49 	svcpl	0x00324d49
     92c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     930:	62737500 	rsbsvs	r7, r3, #0, 10
     934:	616c635f 	cmnvs	ip, pc, asr r3
     938:	655f7373 	ldrbvs	r7, [pc, #-883]	@ 5cd <_Min_Stack_Size+0x1cd>
     93c:	6f5f3070 	svcvs	0x005f3070
     940:	45007475 	strmi	r7, [r0, #-1141]	@ 0xfffffb8b
     944:	00523750 	subseq	r3, r2, r0, asr r7
     948:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
     94c:	705f6769 	subsvc	r6, pc, r9, ror #14
     950:	5f6b6361 	svcpl	0x006b6361
     954:	73750074 	cmnvc	r5, #116	@ 0x74
     958:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     95c:	6464615f 	strbtvs	r6, [r4], #-351	@ 0xfffffea1
     960:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     964:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	@ 0xfffffe84
     968:	6f6c625f 	svcvs	0x006c625f
     96c:	00736b63 	rsbseq	r6, r3, r3, ror #22
     970:	5f425355 	svcpl	0x00425355
     974:	495f5048 	ldmdbmi	pc, {r3, r6, ip, lr}^	@ <UNPREDICTABLE>
     978:	006e5152 	rsbeq	r5, lr, r2, asr r1
     97c:	75626544 	strbvc	r6, [r2, #-1348]!	@ 0xfffffabc
     980:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     984:	726f7469 	rsbvc	r7, pc, #1761607680	@ 0x69000000
     988:	5152495f 	cmppl	r2, pc, asr r9
     98c:	7355006e 	cmpvc	r5, #110	@ 0x6e
     990:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     994:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
     998:	5152495f 	cmppl	r2, pc, asr r9
     99c:	7872006e 	ldmdavc	r2!, {r1, r2, r3, r5, r6}^
     9a0:	6f6c625f 	svcvs	0x006c625f
     9a4:	69736b63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     9a8:	6500657a 	strvs	r6, [r0, #-1402]	@ 0xfffffa86
     9ac:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
     9b0:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     9b4:	62737500 	rsbsvs	r7, r3, #0, 10
     9b8:	5f70655f 	svcpl	0x0070655f
     9bc:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
     9c0:	756f645f 	strbvc	r6, [pc, #-1119]!	@ 569 <_Min_Stack_Size+0x169>
     9c4:	00656c62 	rsbeq	r6, r5, r2, ror #24
     9c8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     9cc:	5f355f39 	svcpl	0x00355f39
     9d0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9d4:	34504500 	ldrbcc	r4, [r0], #-1280	@ 0xfffffb00
     9d8:	43490052 	movtmi	r0, #36946	@ 0x9052
     9dc:	53005245 	movwpl	r5, #581	@ 0x245
     9e0:	5f324950 	svcpl	0x00324950
     9e4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9e8:	42414900 	submi	r4, r1, #0, 18
     9ec:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     9f0:	495f374d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, sl, ip, sp}^	@ <UNPREDICTABLE>
     9f4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9f8:	31414d44 	cmpcc	r1, r4, asr #26
     9fc:	6168435f 	cmnvs	r8, pc, asr r3
     a00:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
     a04:	52495f35 	subpl	r5, r9, #53, 30	@ 0xd4
     a08:	42006e51 	andmi	r6, r0, #1296	@ 0x510
     a0c:	4c424154 	stfmie	f4, [r2], {84}	@ 0x54
     a10:	41440045 	cmpmi	r4, r5, asr #32
     a14:	52495f43 	subpl	r5, r9, #268	@ 0x10c
     a18:	65006e51 	strvs	r6, [r0, #-3665]	@ 0xfffff1af
     a1c:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     a20:	45006570 	strmi	r6, [r0, #-1392]	@ 0xfffffa90
     a24:	33495458 	movtcc	r5, #37976	@ 0x9458
     a28:	5152495f 	cmppl	r2, pc, asr r9
     a2c:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
     a30:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     a34:	62737500 	rsbsvs	r7, r3, #0, 10
     a38:	5f78745f 	svcpl	0x0078745f
     a3c:	72646461 	rsbvc	r6, r4, #1627389952	@ 0x61000000
     a40:	50534900 	subspl	r4, r3, r0, lsl #18
     a44:	73750052 	cmnvc	r5, #82	@ 0x52
     a48:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     a4c:	756f635f 	strbvc	r6, [pc, #-863]!	@ 6f5 <_Min_Stack_Size+0x2f5>
     a50:	7200746e 	andvc	r7, r0, #1845493760	@ 0x6e000000
     a54:	756f6378 	strbvc	r6, [pc, #-888]!	@ 6e4 <_Min_Stack_Size+0x2e4>
     a58:	4400746e 	strmi	r7, [r0], #-1134	@ 0xfffffb92
     a5c:	5f32414d 	svcpl	0x0032414d
     a60:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     a64:	326c656e 	rsbcc	r6, ip, #461373440	@ 0x1b800000
     a68:	5152495f 	cmppl	r2, pc, asr r9
     a6c:	5355006e 	cmppl	r5, #110	@ 0x6e
     a70:	33545241 	cmpcc	r4, #268435460	@ 0x10000004
     a74:	5152495f 	cmppl	r2, pc, asr r9
     a78:	4552006e 	ldrbmi	r0, [r2, #-110]	@ 0xffffff92
     a7c:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     a80:	00384445 	eorseq	r4, r8, r5, asr #8
     a84:	5f425355 	svcpl	0x00425355
     a88:	495f504c 	ldmdbmi	pc, {r2, r3, r6, ip, lr}^	@ <UNPREDICTABLE>
     a8c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a90:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
     a94:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
     a98:	45520042 	ldrbmi	r0, [r2, #-66]	@ 0xffffffbe
     a9c:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     aa0:	00434445 	subeq	r4, r3, r5, asr #8
     aa4:	31525153 	cmpcc	r2, r3, asr r1
     aa8:	52515300 	subspl	r5, r1, #0, 6
     aac:	51530032 	cmppl	r3, r2, lsr r0
     ab0:	53003352 	movwpl	r3, #850	@ 0x352
     ab4:	00345251 	eorseq	r5, r4, r1, asr r2
     ab8:	35525153 	ldrbcc	r5, [r2, #-339]	@ 0xfffffead
     abc:	63646100 	cmnvs	r4, #0, 2
     ac0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	@ 0xfffffe84
     ac4:	68004865 	stmdavs	r0, {r0, r2, r5, r6, fp, lr}
     ac8:	705f6469 	subsvc	r6, pc, r9, ror #8
     acc:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     ad0:	5f636461 	svcpl	0x00636461
     ad4:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
     ad8:	6968004c 	stmdbvs	r8!, {r2, r3, r6}^
     adc:	61645f64 	cmnvs	r4, r4, ror #30
     ae0:	6d006174 	stfvss	f6, [r0, #-464]	@ 0xfffffe30
     ae4:	735f6369 	cmpvc	pc, #-1543503871	@ 0xa4000001
     ae8:	7500666f 	strvc	r6, [r0, #-1647]	@ 0xfffff991
     aec:	655f6273 	ldrbvs	r6, [pc, #-627]	@ 881 <_Min_Stack_Size+0x481>
     af0:	72775f70 	rsbsvc	r5, r7, #112, 30	@ 0x1c0
     af4:	5f657469 	svcpl	0x00657469
     af8:	62756f64 	rsbsvs	r6, r5, #100, 30	@ 0x190
     afc:	7300656c 	movwvc	r6, #1388	@ 0x56c
     b00:	752f6372 	strvc	r6, [pc, #-882]!	@ 796 <_Min_Stack_Size+0x396>
     b04:	635f6273 	cmpvs	pc, #805306375	@ 0x30000007
     b08:	7373616c 	cmnvc	r3, #108, 2
     b0c:	7200632e 	andvc	r6, r0, #-1207959552	@ 0xb8000000
     b10:	61647365 	cmnvs	r4, r5, ror #6
     b14:	54006174 	strpl	r6, [r0], #-372	@ 0xfffffe8c
     b18:	545f4d49 	ldrbpl	r4, [pc], #-3401	@ b20 <_Min_Stack_Size+0x720>
     b1c:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
     b20:	43006665 	movwmi	r6, #1637	@ 0x665
     b24:	00524543 	subseq	r4, r2, r3, asr #10
     b28:	5f627375 	svcpl	0x00627375
     b2c:	5f676f6c 	svcpl	0x00676f6c
     b30:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
     b34:	52434300 	subpl	r4, r3, #0, 6
     b38:	43430031 	movtmi	r0, #12337	@ 0x3031
     b3c:	43003252 	movwmi	r3, #594	@ 0x252
     b40:	31524d43 	cmpcc	r2, r3, asr #26
     b44:	4d434300 	stclmi	3, cr4, [r3, #-0]
     b48:	68003252 	stmdavs	r0, {r1, r4, r6, r9, ip, sp}
     b4c:	745f6469 	ldrbvc	r6, [pc], #-1129	@ b54 <_Min_Stack_Size+0x754>
     b50:	6f656d69 	svcvs	0x00656d69
     b54:	6d007475 	cfstrsvs	mvf7, [r0, #-468]	@ 0xfffffe2c
     b58:	705f6369 	subsvc	r6, pc, r9, ror #6
     b5c:	006c6c6f 	rsbeq	r6, ip, pc, ror #24
     b60:	5f425355 	svcpl	0x00425355
     b64:	44444948 	strbmi	r4, [r4], #-2376	@ 0xfffff6b8
     b68:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
     b6c:	6f747069 	svcvs	0x00747069
     b70:	64610072 	strbtvs	r0, [r1], #-114	@ 0xffffff8e
     b74:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     b78:	746c6966 	strbtvc	r6, [ip], #-2406	@ 0xfffff69a
     b7c:	44007265 	strmi	r7, [r0], #-613	@ 0xfffffd9b
     b80:	00524549 	subseq	r4, r2, r9, asr #10
     b84:	676f7270 			@ <UNDEFINED> instruction: 0x676f7270
     b88:	6d6d6172 	stfvse	f6, [sp, #-456]!	@ 0xfffffe38
     b8c:	655f7265 	ldrbvs	r7, [pc, #-613]	@ 92f <_Min_Stack_Size+0x52f>
     b90:	6f5f3070 	svcvs	0x005f3070
     b94:	75007475 	strvc	r7, [r0, #-1141]	@ 0xfffffb8b
     b98:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	@ 0x73
     b9c:	655f676f 	ldrbvs	r6, [pc, #-1903]	@ 435 <_Min_Stack_Size+0x35>
     ba0:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	@ <UNPREDICTABLE>
     ba4:	4d53006e 	ldclmi	0, cr0, [r3, #-440]	@ 0xfffffe48
     ba8:	00335250 	eorseq	r5, r3, r0, asr r2
     bac:	676f7270 			@ <UNDEFINED> instruction: 0x676f7270
     bb0:	6d6d6172 	stfvse	f6, [sp, #-456]!	@ 0xfffffe38
     bb4:	655f7265 	ldrbvs	r7, [pc, #-613]	@ 957 <_Min_Stack_Size+0x557>
     bb8:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	@ <UNPREDICTABLE>
     bbc:	5355006e 	cmppl	r5, #110	@ 0x6e
     bc0:	6f435f42 	svcvs	0x00435f42
     bc4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     bc8:	63736544 	cmnvs	r3, #68, 10	@ 0x11000000
     bcc:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
     bd0:	7300726f 	movwvc	r7, #623	@ 0x26f
     bd4:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     bd8:	6d5f6b63 	vldrvs	d22, [pc, #-396]	@ a54 <_Min_Stack_Size+0x654>
     bdc:	696d0073 	stmdbvs	sp!, {r0, r1, r4, r5, r6}^
     be0:	6c696664 	stclvs	6, cr6, [r9], #-400	@ 0xfffffe70
     be4:	00726574 	rsbseq	r6, r2, r4, ror r5
     be8:	5f63696d 	svcpl	0x0063696d
     bec:	635f6e69 	cmpvs	pc, #1680	@ 0x690
     bf0:	626c6c61 	rsbvs	r6, ip, #24832	@ 0x6100
     bf4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     bf8:	5f434441 	svcpl	0x00434441
     bfc:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
     c00:	00666544 	rsbeq	r6, r6, r4, asr #10
     c04:	5f636461 	svcpl	0x00636461
     c08:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     c0c:	55007265 	strpl	r7, [r0, #-613]	@ 0xfffffd9b
     c10:	535f4253 	cmppl	pc, #805306373	@ 0x30000005
     c14:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     c18:	52505f67 	subspl	r5, r0, #412	@ 0x19c
     c1c:	0052474f 	subseq	r4, r2, pc, asr #14
     c20:	5f425355 	svcpl	0x00425355
     c24:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     c28:	75516563 	ldrbvc	r6, [r1, #-1379]	@ 0xfffffa9d
     c2c:	66696c61 	strbtvs	r6, [r9], -r1, ror #24
     c30:	44726569 	ldrbtmi	r6, [r2], #-1385	@ 0xfffffa97
     c34:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
     c38:	6f747069 	svcvs	0x00747069
     c3c:	73750072 	cmnvc	r5, #114	@ 0x72
     c40:	6f6c5f62 	svcvs	0x006c5f62
     c44:	6f705f67 	svcvs	0x00705f67
     c48:	70006c6c 	andvc	r6, r0, ip, ror #24
     c4c:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
     c50:	656d6d61 	strbvs	r6, [sp, #-3425]!	@ 0xfffff29f
     c54:	6f705f72 	svcvs	0x00705f72
     c58:	6d006c6c 	stcvs	12, cr6, [r0, #-432]	@ 0xfffffe50
     c5c:	61766469 	cmnvs	r6, r9, ror #8
     c60:	534a006c 	movtpl	r0, #41068	@ 0xa06c
     c64:	41005251 	tstmi	r0, r1, asr r2
     c68:	435f4344 	cmpmi	pc, #68, 6	@ 0x10000001
     c6c:	6f6d6d6f 	svcvs	0x006d6d6f
     c70:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c74:	65446570 	strbvs	r6, [r4, #-1392]	@ 0xfffffa90
     c78:	73750066 	cmnvc	r5, #102	@ 0x66
     c7c:	6f6c5f62 	svcvs	0x006c5f62
     c80:	70655f67 	rsbvc	r5, r5, r7, ror #30
     c84:	756f5f30 	strbvc	r5, [pc, #-3888]!	@ fffffd5c <BootRAM+0xef704fd>
     c88:	4d530074 	ldclmi	0, cr0, [r3, #-464]	@ 0xfffffe30
     c8c:	00315250 	eorseq	r5, r1, r0, asr r2
     c90:	52504d53 	subspl	r4, r0, #5312	@ 0x14c0
     c94:	44410032 	strbmi	r0, [r1], #-50	@ 0xffffffce
     c98:	495f3143 	ldmdbmi	pc, {r0, r1, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
     c9c:	61485152 	cmpvs	r8, r2, asr r1
     ca0:	656c646e 	strbvs	r6, [ip, #-1134]!	@ 0xfffffb92
     ca4:	6f6c0072 	svcvs	0x006c0072
     ca8:	6420676e 	strtvs	r6, [r0], #-1902	@ 0xfffff892
     cac:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	@ 0xfffffe44
     cb0:	696d0065 	stmdbvs	sp!, {r0, r2, r5, r6}^
     cb4:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
     cb8:	6d007469 	cfstrsvs	mvf7, [r0, #-420]	@ 0xfffffe5c
     cbc:	655f6369 	ldrbvs	r6, [pc, #-873]	@ 95b <_Min_Stack_Size+0x55b>
     cc0:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	@ <UNPREDICTABLE>
     cc4:	444a006e 	strbmi	r0, [sl], #-110	@ 0xffffff92
     cc8:	4a003152 	bmi	d218 <_Min_Stack_Size+0xce18>
     ccc:	00325244 	eorseq	r5, r2, r4, asr #4
     cd0:	3352444a 	cmpcc	r2, #1241513984	@ 0x4a000000
     cd4:	52444a00 	subpl	r4, r4, #0, 20
     cd8:	4d530034 	ldclmi	0, cr0, [r3, #-208]	@ 0xffffff30
     cdc:	44005243 	strmi	r5, [r0], #-579	@ 0xfffffdbd
     ce0:	0052414d 	subseq	r4, r2, sp, asr #2
     ce4:	72745362 	rsbsvc	r5, r4, #-2013265919	@ 0x88000001
     ce8:	00676e69 	rsbeq	r6, r7, r9, ror #28
     cec:	76727563 	ldrbtvc	r7, [r2], -r3, ror #10
     cf0:	55006c61 	strpl	r6, [r0, #-3169]	@ 0xfffff39f
     cf4:	535f4253 	cmppl	pc, #805306373	@ 0x30000005
     cf8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     cfc:	72655367 	rsbvc	r5, r5, #-1677721599	@ 0x9c000001
     d00:	446c6169 	strbtmi	r6, [ip], #-361	@ 0xfffffe97
     d04:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
     d08:	6f747069 	svcvs	0x00747069
     d0c:	53550072 	cmppl	r5, #114	@ 0x72
     d10:	74535f42 	ldrbvc	r5, [r3], #-3906	@ 0xfffff0be
     d14:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
     d18:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
     d1c:	63736544 	cmnvs	r3, #68, 10	@ 0x11000000
     d20:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
     d24:	6f00726f 	svcvs	0x0000726f
     d28:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
     d2c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	@ 0xfffffe7c
     d30:	746e635f 	strbtvc	r6, [lr], #-863	@ 0xfffffca1
     d34:	64696800 	strbtvs	r6, [r9], #-2048	@ 0xfffff800
     d38:	3070655f 	rsbscc	r6, r0, pc, asr r5
     d3c:	006e695f 	rsbeq	r6, lr, pc, asr r9
     d40:	5f636461 	svcpl	0x00636461
     d44:	00786469 	rsbseq	r6, r8, r9, ror #8
     d48:	5f646968 	svcpl	0x00646968
     d4c:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
     d50:	52434300 	subpl	r4, r3, #0, 6
     d54:	43430033 	movtmi	r0, #12339	@ 0x3033
     d58:	6d003452 	cfstrsvs	mvf3, [r0, #-328]	@ 0xfffffeb8
     d5c:	655f6369 	ldrbvs	r6, [pc, #-873]	@ 9fb <_Min_Stack_Size+0x5fb>
     d60:	6f5f3070 	svcvs	0x005f3070
     d64:	68007475 	stmdavs	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
     d68:	645f6469 	ldrbvs	r6, [pc], #-1129	@ d70 <_Min_Stack_Size+0x970>
     d6c:	5f617461 	svcpl	0x00617461
     d70:	69680073 	stmdbvs	r8!, {r0, r1, r4, r5, r6}^
     d74:	61645f64 	cmnvs	r4, r4, ror #30
     d78:	745f6174 	ldrbvc	r6, [pc], #-372	@ d80 <_Min_Stack_Size+0x980>
     d7c:	42535500 	subsmi	r5, r3, #0, 10
     d80:	7665445f 			@ <UNDEFINED> instruction: 0x7665445f
     d84:	44656369 	strbtmi	r6, [r5], #-873	@ 0xfffffc97
     d88:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
     d8c:	6f747069 	svcvs	0x00747069
     d90:	45520072 	ldrbmi	r0, [r2, #-114]	@ 0xffffff8e
     d94:	56524553 			@ <UNDEFINED> instruction: 0x56524553
     d98:	32314445 	eorscc	r4, r1, #1157627904	@ 0x45000000
     d9c:	53455200 	movtpl	r5, #20992	@ 0x5200
     da0:	45565245 	ldrbmi	r5, [r6, #-581]	@ 0xfffffdbb
     da4:	00373144 	eorseq	r3, r7, r4, asr #2
     da8:	73654462 	cmnvc	r5, #1644167168	@ 0x62000000
     dac:	70697263 	rsbvc	r7, r9, r3, ror #4
     db0:	54726f74 	ldrbtpl	r6, [r2], #-3956	@ 0xfffff08c
     db4:	00657079 	rsbeq	r7, r5, r9, ror r0
     db8:	5f425355 	svcpl	0x00425355
     dbc:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     dc0:	614d676e 	cmpvs	sp, lr, ror #14
     dc4:	6166756e 	cmnvs	r6, lr, ror #10
     dc8:	72757463 	rsbsvc	r7, r5, #1660944384	@ 0x63000000
     dcc:	44676e69 	strbtmi	r6, [r7], #-3689	@ 0xfffff197
     dd0:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
     dd4:	6f747069 	svcvs	0x00747069
     dd8:	53550072 	cmppl	r5, #114	@ 0x72
     ddc:	74535f42 	ldrbvc	r5, [r3], #-3906	@ 0xfffff0be
     de0:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
     de4:	5954545f 	ldmdbpl	r4, {r0, r1, r2, r3, r4, r6, sl, ip, lr}^
     de8:	6f727000 	svcvs	0x00727000
     dec:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	@ 0xfffffe64
     df0:	5f72656d 	svcpl	0x0072656d
     df4:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
     df8:	42535500 	subsmi	r5, r3, #0, 10
     dfc:	7274535f 	rsbsvc	r5, r4, #2080374785	@ 0x7c000001
     e00:	50676e69 	rsbpl	r6, r7, r9, ror #28
     e04:	44646f72 	strbtmi	r6, [r4], #-3954	@ 0xfffff08e
     e08:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
     e0c:	6f747069 	svcvs	0x00747069
     e10:	4f4a0072 	svcmi	0x004a0072
     e14:	00315246 	eorseq	r5, r1, r6, asr #4
     e18:	52464f4a 	subpl	r4, r6, #296	@ 0x128
     e1c:	4f4a0032 	svcmi	0x004a0032
     e20:	00335246 	eorseq	r5, r3, r6, asr #4
     e24:	52464f4a 	subpl	r4, r6, #296	@ 0x128
     e28:	69680034 	stmdbvs	r8!, {r2, r4, r5}^
     e2c:	70655f64 	rsbvc	r5, r5, r4, ror #30
     e30:	756f5f30 	strbvc	r5, [pc, #-3888]!	@ ffffff08 <BootRAM+0xef706a9>
     e34:	53550074 	cmppl	r5, #116	@ 0x74
     e38:	74535f42 	ldrbvc	r5, [r3], #-3906	@ 0xfffff0be
     e3c:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
     e40:	474f4c5f 	smlsldmi	r4, pc, pc, ip	@ <UNPREDICTABLE>
     e44:	61766300 	cmnvs	r6, r0, lsl #6
     e48:	4c62006c 	stclmi	0, cr0, [r2], #-432	@ 0xfffffe50
     e4c:	74676e65 	strbtvc	r6, [r7], #-3685	@ 0xfffff19b
     e50:	64610068 	strbtvs	r0, [r1], #-104	@ 0xffffff98
     e54:	756f5f63 	strbvc	r5, [pc, #-3939]!	@ fffffef9 <BootRAM+0xef7069a>
     e58:	6c696674 	stclvs	6, cr6, [r9], #-464	@ 0xfffffe30
     e5c:	00726574 	rsbseq	r6, r2, r4, ror r5
     e60:	5f797474 	svcpl	0x00797474
     e64:	00676663 	rsbeq	r6, r7, r3, ror #12
     e68:	64756162 	ldrbtvs	r6, [r5], #-354	@ 0xfffffe9e
     e6c:	65746172 	ldrbvs	r6, [r4, #-370]!	@ 0xfffffe8e
     e70:	52415500 	subpl	r5, r1, #0, 10
     e74:	775f3154 			@ <UNDEFINED> instruction: 0x775f3154
     e78:	65746972 	ldrbvs	r6, [r4, #-2418]!	@ 0xfffff68e
     e7c:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
     e80:	74756f65 	ldrbtvc	r6, [r5], #-3941	@ 0xfffff09b
     e84:	00736d5f 	rsbseq	r6, r3, pc, asr sp
     e88:	5f636463 	svcpl	0x00636463
     e8c:	656e696c 	strbvs	r6, [lr, #-2412]!	@ 0xfffff694
     e90:	69646f63 	stmdbvs	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
     e94:	7500676e 	strvc	r6, [r0, #-1902]	@ 0xfffff892
     e98:	5f747261 	svcpl	0x00747261
     e9c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	@ 0xfffffe74
     ea0:	72617500 	rsbvc	r7, r1, #0, 10
     ea4:	725f3174 	subsvc	r3, pc, #116, 2
     ea8:	6e690078 	mcrvs	0, 3, r0, cr9, cr8, {3}
     eac:	6c667469 	cfstrdvs	mvd7, [r6], #-420	@ 0xfffffe5c
     eb0:	47006761 	strmi	r6, [r0, -r1, ror #14]
     eb4:	00525054 	subseq	r5, r2, r4, asr r0
     eb8:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
     ebc:	6675625f 			@ <UNDEFINED> instruction: 0x6675625f
     ec0:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     ec4:	55006574 	strpl	r6, [r0, #-1396]	@ 0xfffffa8c
     ec8:	54524153 	ldrbpl	r4, [r2], #-339	@ 0xfffffead
     ecc:	52495f31 	subpl	r5, r9, #49, 30	@ 0xc4
     ed0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ed4:	72656c64 	rsbvc	r6, r5, #100, 24	@ 0x6400
     ed8:	63646300 	cmnvs	r4, #0, 6
     edc:	74756f5f 	ldrbtvc	r6, [r5], #-3935	@ 0xfffff0a1
     ee0:	41535500 	cmpmi	r3, r0, lsl #10
     ee4:	545f5452 	ldrbpl	r5, [pc], #-1106	@ eec <_Min_Stack_Size+0xaec>
     ee8:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
     eec:	4e006665 	cfmadd32mi	mvax3, mvfx6, mvfx0, mvfx5
     ef0:	5f434956 	svcpl	0x00434956
     ef4:	61736944 	cmnvs	r3, r4, asr #18
     ef8:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     efc:	55005152 	strpl	r5, [r0, #-338]	@ 0xfffffeae
     f00:	31545241 	cmpcc	r4, r1, asr #4
     f04:	7475705f 	ldrbtvc	r7, [r5], #-95	@ 0xffffffa1
     f08:	41550073 	cmpmi	r5, r3, ror r0
     f0c:	5f315452 	svcpl	0x00315452
     f10:	73746567 	cmnvc	r4, #432013312	@ 0x19c00000
     f14:	72617500 	rsbvc	r7, r1, #0, 10
     f18:	66635f74 	uqsub16vs	r5, r3, r4
     f1c:	41550067 	cmpmi	r5, r7, rrx
     f20:	5f315452 	svcpl	0x00315452
     f24:	64616572 	strbtvs	r6, [r1], #-1394	@ 0xfffffa8e
     f28:	72617000 	rsbvc	r7, r1, #0
     f2c:	00797469 	rsbseq	r7, r9, r9, ror #8
     f30:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
     f34:	6675625f 			@ <UNDEFINED> instruction: 0x6675625f
     f38:	7a69735f 	bvc	1a5dcbc <_Min_Stack_Size+0x1a5d8bc>
     f3c:	74740065 	ldrbtvc	r0, [r4], #-101	@ 0xffffff9b
     f40:	646f6d79 	strbtvs	r6, [pc], #-3449	@ f48 <_Min_Stack_Size+0xb48>
     f44:	72730065 	rsbsvc	r0, r3, #101	@ 0x65
     f48:	72702f63 	rsbsvc	r2, r0, #396	@ 0x18c
     f4c:	6172676f 	cmnvs	r2, pc, ror #14
     f50:	72656d6d 	rsbvc	r6, r5, #6976	@ 0x1b40
     f54:	7700632e 	strvc	r6, [r0, -lr, lsr #6]
     f58:	7364726f 	cmnvc	r4, #-268435450	@ 0xf0000006
     f5c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     f60:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
     f64:	78745f31 	ldmdavc	r4!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     f68:	72617500 	rsbvc	r7, r1, #0, 10
     f6c:	75625f74 	strbvc	r5, [r2, #-3956]!	@ 0xfffff08c
     f70:	72656666 	rsbvc	r6, r5, #106954752	@ 0x6600000
     f74:	72617500 	rsbvc	r7, r1, #0, 10
     f78:	75625f74 	strbvc	r5, [r2, #-3956]!	@ 0xfffff08c
     f7c:	65725f66 	ldrbvs	r5, [r2, #-3942]!	@ 0xfffff09a
     f80:	70006461 	andvc	r6, r0, r1, ror #8
     f84:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
     f88:	6766635f 			@ <UNDEFINED> instruction: 0x6766635f
     f8c:	6f747300 	svcvs	0x00747300
     f90:	74696270 	strbtvc	r6, [r9], #-624	@ 0xfffffd90
     f94:	6f6c0073 	svcvs	0x006c0073
     f98:	69645f67 	stmdbvs	r4!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     f9c:	69660072 	stmdbvs	r6!, {r1, r4, r5, r6}^
     fa0:	775f6f66 	ldrbvc	r6, [pc, -r6, ror #30]
     fa4:	65746972 	ldrbvs	r6, [r4, #-2418]!	@ 0xfffff68e
     fa8:	676f6c00 	strbvs	r6, [pc, -r0, lsl #24]!
     fac:	6766635f 			@ <UNDEFINED> instruction: 0x6766635f
     fb0:	72696400 	rsbvc	r6, r9, #0, 8
     fb4:	0078745f 	rsbseq	r7, r8, pc, asr r4
     fb8:	6f666966 	svcvs	0x00666966
     fbc:	63727300 	cmnvs	r2, #0, 6
     fc0:	6273752f 	rsbsvs	r7, r3, #197132288	@ 0xbc00000
     fc4:	676f6c5f 			@ <UNDEFINED> instruction: 0x676f6c5f
     fc8:	7500632e 	strvc	r6, [r0, #-814]	@ 0xfffffcd2
     fcc:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	@ 0x73
     fd0:	675f676f 	ldrbvs	r6, [pc, -pc, ror #14]
     fd4:	00626172 	rsbeq	r6, r2, r2, ror r1
     fd8:	6f666966 	svcvs	0x00666966
     fdc:	7461645f 	strbtvc	r6, [r1], #-1119	@ 0xfffffba1
     fe0:	69735f61 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     fe4:	6400657a 	strvs	r6, [r0], #-1402	@ 0xfffffa86
     fe8:	705f7269 	subsvc	r7, pc, r9, ror #4
     fec:	00766572 	rsbseq	r6, r6, r2, ror r5
     ff0:	6f666966 	svcvs	0x00666966
     ff4:	6165725f 	cmnvs	r5, pc, asr r2
     ff8:	5f5f0064 	svcpl	0x005f0064
     ffc:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
    1000:	7272615f 	rsbsvc	r6, r2, #-1073741801	@ 0xc0000017
    1004:	735f7961 	cmpvc	pc, #1589248	@ 0x184000
    1008:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
    100c:	7a697300 	bvc	1a5dc14 <_Min_Stack_Size+0x1a5d814>
    1010:	00745f65 	rsbseq	r5, r4, r5, ror #30
    1014:	696c5f5f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1018:	695f6362 	ldmdbvs	pc, {r1, r5, r6, r8, r9, sp, lr}^	@ <UNPREDICTABLE>
    101c:	5f74696e 	svcpl	0x0074696e
    1020:	61727261 	cmnvs	r2, r1, ror #4
    1024:	5f5f0079 	svcpl	0x005f0079
    1028:	69657270 	stmdbvs	r5!, {r4, r5, r6, r9, ip, sp, lr}^
    102c:	5f74696e 	svcpl	0x0074696e
    1030:	61727261 	cmnvs	r2, r1, ror #4
    1034:	74735f79 	ldrbtvc	r5, [r3], #-3961	@ 0xfffff087
    1038:	00747261 	rsbseq	r7, r4, r1, ror #4
    103c:	20554e47 	subscs	r4, r5, r7, asr #28
    1040:	20373143 	eorscs	r3, r7, r3, asr #2
    1044:	332e3031 			@ <UNDEFINED> instruction: 0x332e3031
    1048:	3220312e 	eorcc	r3, r0, #-2147483637	@ 0x8000000b
    104c:	30313230 	eorscc	r3, r1, r0, lsr r2
    1050:	20313236 	eorscs	r3, r1, r6, lsr r2
    1054:	6c657228 	sfmvs	f7, 2, [r5], #-160	@ 0xffffff60
    1058:	65736165 	ldrbvs	r6, [r3, #-357]!	@ 0xfffffe9b
    105c:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	@ 0xffffff5c
    1060:	616f6c66 	cmnvs	pc, r6, ror #24
    1064:	62612d74 	rsbvs	r2, r1, #116, 26	@ 0x1d00
    1068:	6f733d69 	svcvs	0x00733d69
    106c:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	@ 0xfffffe68
    1070:	7568746d 	strbvc	r7, [r8, #-1133]!	@ 0xfffffb93
    1074:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	@ 0xfffffe4c
    1078:	6f6c666d 	svcvs	0x006c666d
    107c:	612d7461 			@ <UNDEFINED> instruction: 0x612d7461
    1080:	733d6962 	teqvc	sp, #1605632	@ 0x188000
    1084:	2074666f 	rsbscs	r6, r4, pc, ror #12
    1088:	72616d2d 	rsbvc	r6, r1, #2880	@ 0xb40
    108c:	613d6863 	teqvs	sp, r3, ror #16
    1090:	37766d72 			@ <UNDEFINED> instruction: 0x37766d72
    1094:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	@ 0xffffff4c
    1098:	4f2d2067 	svcmi	0x002d2067
    109c:	662d2032 			@ <UNDEFINED> instruction: 0x662d2032
    10a0:	622d6f6e 	eorvs	r6, sp, #440	@ 0x1b8
    10a4:	746c6975 	strbtvc	r6, [ip], #-2421	@ 0xfffff68b
    10a8:	2f006e69 	svccs	0x00006e69
    10ac:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	@ 0xfffffe78
    10b0:	656e2f64 	strbvs	r2, [lr, #-3940]!	@ 0xfffff09c
    10b4:	62696c77 	rsbvs	r6, r9, #30464	@ 0x7700
    10b8:	4966612d 	stmdbmi	r6!, {r0, r2, r3, r5, r8, sp, lr}^
    10bc:	2f7a4862 	svccs	0x007a4862
    10c0:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	@ 0xfffffe48
    10c4:	332d6269 			@ <UNDEFINED> instruction: 0x332d6269
    10c8:	302e332e 	eorcc	r3, lr, lr, lsr #6
    10cc:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    10d0:	6e5f646c 	cdpvs	4, 5, cr6, cr15, cr12, {3}
    10d4:	2f6f6e61 	svccs	0x006f6e61
    10d8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	@ 0xfffffe7c
    10dc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
    10e0:	6261652d 	rsbvs	r6, r1, #188743680	@ 0xb400000
    10e4:	68742f69 	ldmdavs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp}^
    10e8:	2f626d75 	svccs	0x00626d75
    10ec:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	@ 0xfffffe28
    10f0:	666f6e2f 	strbtvs	r6, [pc], -pc, lsr #28
    10f4:	656e2f70 	strbvs	r2, [lr, #-3952]!	@ 0xfffff090
    10f8:	62696c77 	rsbvs	r6, r9, #30464	@ 0x7700
    10fc:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
    1100:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    1104:	5f006373 	svcpl	0x00006373
    1108:	6572705f 	ldrbvs	r7, [r2, #-95]!	@ 0xffffffa1
    110c:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
    1110:	7272615f 	rsbsvc	r6, r2, #-1073741801	@ 0xc0000017
    1114:	655f7961 	ldrbvs	r7, [pc, #-2401]	@ 7bb <_Min_Stack_Size+0x3bb>
    1118:	5f00646e 	svcpl	0x0000646e
    111c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1120:	72615f74 	rsbvc	r5, r1, #116, 30	@ 0x1d0
    1124:	5f796172 	svcpl	0x00796172
    1128:	00646e65 	rsbeq	r6, r4, r5, ror #28
    112c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1130:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1134:	2f2e2e2f 	svccs	0x002e2e2f
    1138:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    113c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1140:	2f2e2e2f 	svccs	0x002e2e2f
    1144:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	@ 0xfffffe48
    1148:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	@ fac <_Min_Stack_Size+0xbac>
    114c:	2f636269 	svccs	0x00636269
    1150:	6373696d 	cmnvs	r3, #1785856	@ 0x1b4000
    1154:	696e692f 	stmdbvs	lr!, {r0, r1, r2, r3, r5, r8, fp, sp, lr}^
    1158:	00632e74 	rsbeq	r2, r3, r4, ror lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	@ 0xfffff7e0
   8:	2e32313a 	mrccs	1, 1, r3, cr2, cr10, {1}
   c:	65722e32 	ldrbvs	r2, [r2, #-3634]!	@ 0xfffff1ce
  10:	312d316c 			@ <UNDEFINED> instruction: 0x312d316c
  14:	32312029 	eorscc	r2, r1, #41	@ 0x29
  18:	312e322e 			@ <UNDEFINED> instruction: 0x312e322e
  1c:	32303220 	eorscc	r3, r0, #32, 4
  20:	30323132 	eorscc	r3, r2, r2, lsr r1
  24:	43470035 	movtmi	r0, #28725	@ 0x7035
  28:	28203a43 	stmdacs	r0!, {r0, r1, r6, r9, fp, ip, sp}
  2c:	313a3531 	teqcc	sl, r1, lsr r5
  30:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	@ 0xffffff40
  34:	31323032 	teqcc	r2, r2, lsr r0
  38:	2d37302e 	ldccs	0, cr3, [r7, #-184]!	@ 0xffffff48
  3c:	31202934 			@ <UNDEFINED> instruction: 0x31202934
  40:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  44:	30322031 	eorscc	r2, r2, r1, lsr r0
  48:	36303132 			@ <UNDEFINED> instruction: 0x36303132
  4c:	28203132 	stmdacs	r0!, {r1, r4, r5, r8, ip, sp}
  50:	656c6572 	strbvs	r6, [ip, #-1394]!	@ 0xfffffa8e
  54:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000150 	stmdaeq	r0, {r4, r6, r8}
  1c:	00000098 	muleq	r0, r8, r0
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  2c:	00000170 	andeq	r0, r0, r0, ror r1
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	08000358 	stmdaeq	r0, {r3, r4, r6, r8, r9}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	0800035a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9}
  4c:	00000002 	andeq	r0, r0, r2
  50:	0000000c 	andeq	r0, r0, ip
  54:	00000000 	andeq	r0, r0, r0
  58:	0800035c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9}
  5c:	0000000a 	andeq	r0, r0, sl
  60:	00000014 	andeq	r0, r0, r4, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
  6c:	000000c0 	andeq	r0, r0, r0, asr #1
  70:	83080e41 	movwhi	r0, #36417	@ 0x8e41
  74:	00018e02 	andeq	r8, r1, r2, lsl #28
  78:	0000000c 	andeq	r0, r0, ip
  7c:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
  80:	7c020001 	stcvc	0, cr0, [r2], {1}
  84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  88:	0000000c 	andeq	r0, r0, ip
  8c:	00000078 	andeq	r0, r0, r8, ror r0
  90:	08000368 	stmdaeq	r0, {r3, r5, r6, r8, r9}
  94:	0000000e 	andeq	r0, r0, lr
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000078 	andeq	r0, r0, r8, ror r0
  a0:	08000376 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9}
  a4:	0000000e 	andeq	r0, r0, lr
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
  b0:	7c020001 	stcvc	0, cr0, [r2], {1}
  b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	000000a8 	andeq	r0, r0, r8, lsr #1
  c0:	08000384 	stmdaeq	r0, {r2, r7, r8, r9}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	000000a8 	andeq	r0, r0, r8, lsr #1
  d0:	08000386 	stmdaeq	r0, {r1, r2, r7, r8, r9}
  d4:	00000002 	andeq	r0, r0, r2
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	000000a8 	andeq	r0, r0, r8, lsr #1
  e0:	08000388 	stmdaeq	r0, {r3, r7, r8, r9}
  e4:	00000002 	andeq	r0, r0, r2
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	000000a8 	andeq	r0, r0, r8, lsr #1
  f0:	0800038a 	stmdaeq	r0, {r1, r3, r7, r8, r9}
  f4:	00000002 	andeq	r0, r0, r2
  f8:	0000000c 	andeq	r0, r0, ip
  fc:	000000a8 	andeq	r0, r0, r8, lsr #1
 100:	0800038c 	stmdaeq	r0, {r2, r3, r7, r8, r9}
 104:	00000002 	andeq	r0, r0, r2
 108:	0000000c 	andeq	r0, r0, ip
 10c:	000000a8 	andeq	r0, r0, r8, lsr #1
 110:	0800038e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9}
 114:	00000004 	andeq	r0, r0, r4
 118:	0000000c 	andeq	r0, r0, ip
 11c:	000000a8 	andeq	r0, r0, r8, lsr #1
 120:	08000392 	stmdaeq	r0, {r1, r4, r7, r8, r9}
 124:	00000004 	andeq	r0, r0, r4
 128:	0000000c 	andeq	r0, r0, ip
 12c:	000000a8 	andeq	r0, r0, r8, lsr #1
 130:	08000396 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9}
 134:	00000092 	muleq	r0, r2, r0
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	000000a8 	andeq	r0, r0, r8, lsr #1
 140:	08000428 	stmdaeq	r0, {r3, r5, sl}
 144:	00000104 	andeq	r0, r0, r4, lsl #2
 148:	84140e41 	ldrhi	r0, [r4], #-3649	@ 0xfffff1bf
 14c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 150:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 154:	00000001 	andeq	r0, r0, r1
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	000000a8 	andeq	r0, r0, r8, lsr #1
 160:	0800052c 	stmdaeq	r0, {r2, r3, r5, r8, sl}
 164:	00000144 	andeq	r0, r0, r4, asr #2
 168:	84140e43 	ldrhi	r0, [r4], #-3651	@ 0xfffff1bd
 16c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 170:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 174:	00000001 	andeq	r0, r0, r1
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	000000a8 	andeq	r0, r0, r8, lsr #1
 180:	08000670 	stmdaeq	r0, {r4, r5, r6, r9, sl}
 184:	00000148 	andeq	r0, r0, r8, asr #2
 188:	84180e42 	ldrhi	r0, [r8], #-3650	@ 0xfffff1be
 18c:	86058506 	strhi	r8, [r5], -r6, lsl #10
 190:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 194:	00018e02 	andeq	r8, r1, r2, lsl #28
 198:	0000001c 	andeq	r0, r0, ip, lsl r0
 19c:	000000a8 	andeq	r0, r0, r8, lsr #1
 1a0:	080007b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, sl}
 1a4:	00000054 	andeq	r0, r0, r4, asr r0
 1a8:	84140e41 	ldrhi	r0, [r4], #-3649	@ 0xfffff1bf
 1ac:	86048505 	strhi	r8, [r4], -r5, lsl #10
 1b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	00000018 	andeq	r0, r0, r8, lsl r0
 1bc:	000000a8 	andeq	r0, r0, r8, lsr #1
 1c0:	0800080c 	stmdaeq	r0, {r2, r3, fp}
 1c4:	00000038 	andeq	r0, r0, r8, lsr r0
 1c8:	83100e41 	tsthi	r0, #1040	@ 0x410
 1cc:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 1d0:	00018e02 	andeq	r8, r1, r2, lsl #28
 1d4:	00000018 	andeq	r0, r0, r8, lsl r0
 1d8:	000000a8 	andeq	r0, r0, r8, lsr #1
 1dc:	08000844 	stmdaeq	r0, {r2, r6, fp}
 1e0:	0000005c 	andeq	r0, r0, ip, asr r0
 1e4:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
 1e8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000028 	andeq	r0, r0, r8, lsr #32
 1f4:	000000a8 	andeq	r0, r0, r8, lsr #1
 1f8:	080008a0 	stmdaeq	r0, {r5, r7, fp}
 1fc:	00000164 	andeq	r0, r0, r4, ror #2
 200:	84180e41 	ldrhi	r0, [r8], #-3649	@ 0xfffff1bf
 204:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 208:	0e0a5101 	adfeqe	f5, f2, f1
 20c:	5d0b410c 	stfpls	f4, [fp, #-48]	@ 0xffffffd0
 210:	420c0e0a 	andmi	r0, ip, #10, 28	@ 0xa0
 214:	0ec4c5ce 	cdpeq	5, 12, cr12, cr4, cr14, {6}
 218:	000b4200 	andeq	r4, fp, r0, lsl #4
 21c:	0000000c 	andeq	r0, r0, ip
 220:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 224:	7c020001 	stcvc	0, cr0, [r2], {1}
 228:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 22c:	00000018 	andeq	r0, r0, r8, lsl r0
 230:	0000021c 	andeq	r0, r0, ip, lsl r2
 234:	08000a04 	stmdaeq	r0, {r2, r9, fp}
 238:	00000048 	andeq	r0, r0, r8, asr #32
 23c:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 240:	86038504 	strhi	r8, [r3], -r4, lsl #10
 244:	00018e02 	andeq	r8, r1, r2, lsl #28
 248:	0000000c 	andeq	r0, r0, ip
 24c:	0000021c 	andeq	r0, r0, ip, lsl r2
 250:	08000a4c 	stmdaeq	r0, {r2, r3, r6, r9, fp}
 254:	00000018 	andeq	r0, r0, r8, lsl r0
 258:	0000000c 	andeq	r0, r0, ip
 25c:	0000021c 	andeq	r0, r0, ip, lsl r2
 260:	08000a64 	stmdaeq	r0, {r2, r5, r6, r9, fp}
 264:	00000018 	andeq	r0, r0, r8, lsl r0
 268:	0000000c 	andeq	r0, r0, ip
 26c:	0000021c 	andeq	r0, r0, ip, lsl r2
 270:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 274:	00000002 	andeq	r0, r0, r2
 278:	00000014 	andeq	r0, r0, r4, lsl r0
 27c:	0000021c 	andeq	r0, r0, ip, lsl r2
 280:	08000a7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, fp}
 284:	00000092 	muleq	r0, r2, r0
 288:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 28c:	00018e02 	andeq	r8, r1, r2, lsl #28
 290:	0000000c 	andeq	r0, r0, ip
 294:	0000021c 	andeq	r0, r0, ip, lsl r2
 298:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 29c:	00000070 	andeq	r0, r0, r0, ror r0
 2a0:	0000000c 	andeq	r0, r0, ip
 2a4:	0000021c 	andeq	r0, r0, ip, lsl r2
 2a8:	08000b80 	stmdaeq	r0, {r7, r8, r9, fp}
 2ac:	00000044 	andeq	r0, r0, r4, asr #32
 2b0:	00000014 	andeq	r0, r0, r4, lsl r0
 2b4:	0000021c 	andeq	r0, r0, ip, lsl r2
 2b8:	08000bc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, fp}
 2bc:	00000064 	andeq	r0, r0, r4, rrx
 2c0:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 2c4:	00018e02 	andeq	r8, r1, r2, lsl #28
 2c8:	0000000c 	andeq	r0, r0, ip
 2cc:	0000021c 	andeq	r0, r0, ip, lsl r2
 2d0:	08000c28 	stmdaeq	r0, {r3, r5, sl, fp}
 2d4:	0000004c 	andeq	r0, r0, ip, asr #32
 2d8:	0000000c 	andeq	r0, r0, ip
 2dc:	0000021c 	andeq	r0, r0, ip, lsl r2
 2e0:	08000c74 	stmdaeq	r0, {r2, r4, r5, r6, sl, fp}
 2e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e8:	0000000c 	andeq	r0, r0, ip
 2ec:	0000021c 	andeq	r0, r0, ip, lsl r2
 2f0:	08000c90 	stmdaeq	r0, {r4, r7, sl, fp}
 2f4:	00000098 	muleq	r0, r8, r0
 2f8:	00000018 	andeq	r0, r0, r8, lsl r0
 2fc:	0000021c 	andeq	r0, r0, ip, lsl r2
 300:	08000d28 	stmdaeq	r0, {r3, r5, r8, sl, fp}
 304:	0000002e 	andeq	r0, r0, lr, lsr #32
 308:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 30c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 310:	00018e02 	andeq	r8, r1, r2, lsl #28
 314:	00000018 	andeq	r0, r0, r8, lsl r0
 318:	0000021c 	andeq	r0, r0, ip, lsl r2
 31c:	08000d56 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, fp}
 320:	00000032 	andeq	r0, r0, r2, lsr r0
 324:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 328:	86038504 	strhi	r8, [r3], -r4, lsl #10
 32c:	00018e02 	andeq	r8, r1, r2, lsl #28
 330:	0000001c 	andeq	r0, r0, ip, lsl r0
 334:	0000021c 	andeq	r0, r0, ip, lsl r2
 338:	08000d88 	stmdaeq	r0, {r3, r7, r8, sl, fp}
 33c:	0000011c 	andeq	r0, r0, ip, lsl r1
 340:	83080e41 	movwhi	r0, #36417	@ 0x8e41
 344:	02018e02 	andeq	r8, r1, #2, 28
 348:	0ec3ce7e 	mcreq	14, 6, ip, cr3, cr14, {3}
 34c:	00000000 	andeq	r0, r0, r0
 350:	00000018 	andeq	r0, r0, r8, lsl r0
 354:	0000021c 	andeq	r0, r0, ip, lsl r2
 358:	08000ea4 	stmdaeq	r0, {r2, r5, r7, r9, sl, fp}
 35c:	00000012 	andeq	r0, r0, r2, lsl r0
 360:	83080e41 	movwhi	r0, #36417	@ 0x8e41
 364:	46018e02 	strmi	r8, [r1], -r2, lsl #28
 368:	000ec3ce 	andeq	ip, lr, lr, asr #7
 36c:	0000000c 	andeq	r0, r0, ip
 370:	0000021c 	andeq	r0, r0, ip, lsl r2
 374:	08000eb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, sl, fp}
 378:	00000004 	andeq	r0, r0, r4
 37c:	0000000c 	andeq	r0, r0, ip
 380:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 384:	7c020001 	stcvc	0, cr0, [r2], {1}
 388:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 38c:	0000000c 	andeq	r0, r0, ip
 390:	0000037c 	andeq	r0, r0, ip, ror r3
 394:	08000ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp}
 398:	0000000a 	andeq	r0, r0, sl
 39c:	0000000c 	andeq	r0, r0, ip
 3a0:	0000037c 	andeq	r0, r0, ip, ror r3
 3a4:	08000ec6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl, fp}
 3a8:	00000026 	andeq	r0, r0, r6, lsr #32
 3ac:	0000000c 	andeq	r0, r0, ip
 3b0:	0000037c 	andeq	r0, r0, ip, ror r3
 3b4:	08000eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp}
 3b8:	00000022 	andeq	r0, r0, r2, lsr #32
 3bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c0:	0000037c 	andeq	r0, r0, ip, ror r3
 3c4:	08000f0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, fp}
 3c8:	0000004a 	andeq	r0, r0, sl, asr #32
 3cc:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 3d0:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
 3d4:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 3d8:	000b4200 	andeq	r4, fp, r0, lsl #4
 3dc:	00000018 	andeq	r0, r0, r8, lsl r0
 3e0:	0000037c 	andeq	r0, r0, ip, ror r3
 3e4:	08000f58 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, fp}
 3e8:	0000002c 	andeq	r0, r0, ip, lsr #32
 3ec:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 3f0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 3f4:	00018e02 	andeq	r8, r1, r2, lsl #28
 3f8:	00000018 	andeq	r0, r0, r8, lsl r0
 3fc:	0000037c 	andeq	r0, r0, ip, ror r3
 400:	08000f84 	stmdaeq	r0, {r2, r7, r8, r9, sl, fp}
 404:	00000028 	andeq	r0, r0, r8, lsr #32
 408:	83100e41 	tsthi	r0, #1040	@ 0x410
 40c:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 410:	00018e02 	andeq	r8, r1, r2, lsl #28
 414:	00000018 	andeq	r0, r0, r8, lsl r0
 418:	0000037c 	andeq	r0, r0, ip, ror r3
 41c:	08000fac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, fp}
 420:	0000002c 	andeq	r0, r0, ip, lsr #32
 424:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 428:	86038504 	strhi	r8, [r3], -r4, lsl #10
 42c:	00018e02 	andeq	r8, r1, r2, lsl #28
 430:	0000001c 	andeq	r0, r0, ip, lsl r0
 434:	0000037c 	andeq	r0, r0, ip, ror r3
 438:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
 43c:	00000058 	andeq	r0, r0, r8, asr r0
 440:	83180e41 	tsthi	r8, #1040	@ 0x410
 444:	85058406 	strhi	r8, [r5, #-1030]	@ 0xfffffbfa
 448:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 44c:	00018e02 	andeq	r8, r1, r2, lsl #28
 450:	0000000c 	andeq	r0, r0, ip
 454:	0000037c 	andeq	r0, r0, ip, ror r3
 458:	08001030 	stmdaeq	r0, {r4, r5, ip}
 45c:	00000038 	andeq	r0, r0, r8, lsr r0
 460:	0000000c 	andeq	r0, r0, ip
 464:	0000037c 	andeq	r0, r0, ip, ror r3
 468:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
 46c:	00000074 	andeq	r0, r0, r4, ror r0
 470:	0000001c 	andeq	r0, r0, ip, lsl r0
 474:	0000037c 	andeq	r0, r0, ip, ror r3
 478:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
 47c:	00000094 	muleq	r0, r4, r0
 480:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 484:	42018e02 	andmi	r8, r1, #2, 28
 488:	0a57700e 	beq	15dc4c8 <_Min_Stack_Size+0x15dc0c8>
 48c:	0b41080e 	bleq	10424cc <_Min_Stack_Size+0x10420cc>
 490:	00000018 	andeq	r0, r0, r8, lsl r0
 494:	0000037c 	andeq	r0, r0, ip, ror r3
 498:	08001170 	stmdaeq	r0, {r4, r5, r6, r8, ip}
 49c:	000000f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 4a0:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 4a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 4a8:	00018e02 	andeq	r8, r1, r2, lsl #28
 4ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 4b0:	0000037c 	andeq	r0, r0, ip, ror r3
 4b4:	08001260 	stmdaeq	r0, {r5, r6, r9, ip}
 4b8:	000000a0 	andeq	r0, r0, r0, lsr #1
 4bc:	84140e41 	ldrhi	r0, [r4], #-3649	@ 0xfffff1bf
 4c0:	86048505 	strhi	r8, [r4], -r5, lsl #10
 4c4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000020 	andeq	r0, r0, r0, lsr #32
 4d0:	0000037c 	andeq	r0, r0, ip, ror r3
 4d4:	08001300 	stmdaeq	r0, {r8, r9, ip}
 4d8:	00000170 	andeq	r0, r0, r0, ror r1
 4dc:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
 4e0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 4e4:	500e4201 	andpl	r4, lr, r1, lsl #4
 4e8:	0e0a6702 	cdpeq	7, 0, cr6, cr10, cr2, {0}
 4ec:	000b410c 	andeq	r4, fp, ip, lsl #2
 4f0:	0000000c 	andeq	r0, r0, ip
 4f4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 4f8:	7c020001 	stcvc	0, cr0, [r2], {1}
 4fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 500:	0000000c 	andeq	r0, r0, ip
 504:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 508:	08001470 	stmdaeq	r0, {r4, r5, r6, sl, ip}
 50c:	00000014 	andeq	r0, r0, r4, lsl r0
 510:	00000018 	andeq	r0, r0, r8, lsl r0
 514:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 518:	08001484 	stmdaeq	r0, {r2, r7, sl, ip}
 51c:	0000003c 	andeq	r0, r0, ip, lsr r0
 520:	83100e41 	tsthi	r0, #1040	@ 0x410
 524:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 528:	00018e02 	andeq	r8, r1, r2, lsl #28
 52c:	00000018 	andeq	r0, r0, r8, lsl r0
 530:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 534:	080014c0 	stmdaeq	r0, {r6, r7, sl, ip}
 538:	00000034 	andeq	r0, r0, r4, lsr r0
 53c:	83100e41 	tsthi	r0, #1040	@ 0x410
 540:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 544:	00018e02 	andeq	r8, r1, r2, lsl #28
 548:	0000000c 	andeq	r0, r0, ip
 54c:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 550:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
 554:	0000002c 	andeq	r0, r0, ip, lsr #32
 558:	00000014 	andeq	r0, r0, r4, lsl r0
 55c:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 560:	08001520 	stmdaeq	r0, {r5, r8, sl, ip}
 564:	0000002c 	andeq	r0, r0, ip, lsr #32
 568:	83080e41 	movwhi	r0, #36417	@ 0x8e41
 56c:	00018e02 	andeq	r8, r1, r2, lsl #28
 570:	00000018 	andeq	r0, r0, r8, lsl r0
 574:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 578:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
 57c:	0000002a 	andeq	r0, r0, sl, lsr #32
 580:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 584:	4e018e02 	cdpmi	14, 0, cr8, cr1, cr2, {0}
 588:	000ec4ce 	andeq	ip, lr, lr, asr #9
 58c:	0000000c 	andeq	r0, r0, ip
 590:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 594:	08001576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, ip}
 598:	00000016 	andeq	r0, r0, r6, lsl r0
 59c:	00000030 	andeq	r0, r0, r0, lsr r0
 5a0:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 5a4:	0800158c 	stmdaeq	r0, {r2, r3, r7, r8, sl, ip}
 5a8:	000000a0 	andeq	r0, r0, r0, lsr #1
 5ac:	83200e42 			@ <UNDEFINED> instruction: 0x83200e42
 5b0:	85078408 	strhi	r8, [r7, #-1032]	@ 0xfffffbf8
 5b4:	87058606 	strhi	r8, [r5, -r6, lsl #12]
 5b8:	89038804 	stmdbhi	r3, {r2, fp, pc}
 5bc:	64018e02 	strvs	r8, [r1], #-3586	@ 0xfffff1fe
 5c0:	c8c9ce0a 	stmiagt	r9, {r1, r3, r9, sl, fp, lr, pc}^
 5c4:	c4c5c6c7 	strbgt	ip, [r5], #1735	@ 0x6c7
 5c8:	43000ec3 	movwmi	r0, #3779	@ 0xec3
 5cc:	0000000b 	andeq	r0, r0, fp
 5d0:	00000018 	andeq	r0, r0, r8, lsl r0
 5d4:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 5d8:	0800162c 	stmdaeq	r0, {r2, r3, r5, r9, sl, ip}
 5dc:	00000044 	andeq	r0, r0, r4, asr #32
 5e0:	8e040e42 	cdphi	14, 0, cr0, cr4, cr2, {2}
 5e4:	280e4201 	stmdacs	lr, {r0, r9, lr}
 5e8:	00040e59 	andeq	r0, r4, r9, asr lr
 5ec:	0000000c 	andeq	r0, r0, ip
 5f0:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 5f4:	7c020001 	stcvc	0, cr0, [r2], {1}
 5f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5fc:	00000018 	andeq	r0, r0, r8, lsl r0
 600:	000005ec 	andeq	r0, r0, ip, ror #11
 604:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
 608:	00000048 	andeq	r0, r0, r8, asr #32
 60c:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 610:	86038504 	strhi	r8, [r3], -r4, lsl #10
 614:	00018e02 	andeq	r8, r1, r2, lsl #28
