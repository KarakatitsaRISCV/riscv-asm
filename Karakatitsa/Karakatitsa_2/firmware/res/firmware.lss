
res/firmware.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	08001535 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, ip}
 8000008:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800000c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000010:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000014:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000018:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
	...
 800002c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000030:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800003c:	08000fbf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, fp}
 8000040:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000044:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000048:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800004c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000050:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000054:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000058:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800005c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000060:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000064:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000068:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800006c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000070:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000074:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000078:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800007c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000080:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000084:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000088:	080008ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, fp}
 800008c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000090:	080004e1 	stmdaeq	r0, {r0, r5, r6, r7, sl}
 8000094:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 8000098:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 800009c:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000a0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000a4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000a8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000ac:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000b0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000b4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000b8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000bc:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000c0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000c4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000c8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000cc:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000d0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000d4:	0800101f 	stmdaeq	r0, {r0, r1, r2, r3, r4, ip}
 80000d8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000dc:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000e0:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000e4:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
 80000e8:	08001579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip}
	...
 8000108:	f108f85f 			@ <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800010c <SysClockMax-0x14>:
 800010c:	080017ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, ip}
 8000110:	20000000 	andcs	r0, r0, r0
 8000114:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000118:	2000001c 	andcs	r0, r0, ip, lsl r0
 800011c:	200002f8 	strdcs	r0, [r0], -r8

08000120 <SysClockMax>:
//F_HSE = 8 MHz
int8_t SysClockMax(){
  uint32_t i;
  uint32_t tmp;

  RCC->CR &=~RCC_CR_HSEON;
 8000120:	4b27      	ldr	r3, [pc, #156]	@ (80001c0 <SysClockMax+0xa0>)
 8000122:	681a      	ldr	r2, [r3, #0]
 8000124:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8000128:	601a      	str	r2, [r3, #0]
  RCC->CR &=~RCC_CR_HSEBYP;
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8000130:	601a      	str	r2, [r3, #0]
  RCC->CR |= RCC_CR_HSEON;
 8000132:	681a      	ldr	r2, [r3, #0]
 8000134:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8000138:	601a      	str	r2, [r3, #0]
 800013a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  for(i=0;i<0x0FFFF;i++){
    if(RCC->CR & RCC_CR_HSERDY){i=0x1FFFF; break;}
 800013e:	6819      	ldr	r1, [r3, #0]
 8000140:	0388      	lsls	r0, r1, #14
 8000142:	d416      	bmi.n	8000172 <SysClockMax+0x52>
  for(i=0;i<0x0FFFF;i++){
 8000144:	3a01      	subs	r2, #1
 8000146:	d1fa      	bne.n	800013e <SysClockMax+0x1e>
  }
  if(i != 0x1FFFF)return SCME_HSE; //can not start HSE
 8000148:	2001      	movs	r0, #1
 800014a:	4770      	bx	lr
  for(i=0;i<0x0FFFF;i++){
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFFF; break;}
  }
  if(i != 0x1FFFF)return SCME_SW;

  return SCME_OK;
 800014c:	2000      	movs	r0, #0
}
 800014e:	4770      	bx	lr
  tmp = RCC->CFGR;
 8000150:	685a      	ldr	r2, [r3, #4]
  tmp &=~RCC_CFGR_SW;
 8000152:	f022 0203 	bic.w	r2, r2, #3
  tmp |= RCC_CFGR_SW_PLL;
 8000156:	f042 0202 	orr.w	r2, r2, #2
  RCC->CFGR = tmp;
 800015a:	605a      	str	r2, [r3, #4]
 800015c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
    if((RCC->CFGR & RCC_CFGR_SWS)==RCC_CFGR_SWS_PLL){i=0x1FFFF; break;}
 8000160:	6859      	ldr	r1, [r3, #4]
 8000162:	f001 010c 	and.w	r1, r1, #12
 8000166:	2908      	cmp	r1, #8
 8000168:	d0f0      	beq.n	800014c <SysClockMax+0x2c>
  for(i=0;i<0x0FFFF;i++){
 800016a:	3a01      	subs	r2, #1
 800016c:	d1f8      	bne.n	8000160 <SysClockMax+0x40>
  if(i != 0x1FFFF)return SCME_SW;
 800016e:	2003      	movs	r0, #3
 8000170:	4770      	bx	lr
  FLASH->ACR &=~FLASH_ACR_PRFTBE;
 8000172:	4a14      	ldr	r2, [pc, #80]	@ (80001c4 <SysClockMax+0xa4>)
 8000174:	6811      	ldr	r1, [r2, #0]
 8000176:	f021 0110 	bic.w	r1, r1, #16
 800017a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_PRFTBE;
 800017c:	6811      	ldr	r1, [r2, #0]
 800017e:	f041 0110 	orr.w	r1, r1, #16
 8000182:	6011      	str	r1, [r2, #0]
  FLASH->ACR &=~FLASH_ACR_LATENCY;
 8000184:	6811      	ldr	r1, [r2, #0]
 8000186:	f021 0107 	bic.w	r1, r1, #7
 800018a:	6011      	str	r1, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_2;
 800018c:	6811      	ldr	r1, [r2, #0]
 800018e:	f041 0104 	orr.w	r1, r1, #4
 8000192:	6011      	str	r1, [r2, #0]
  tmp = RCC->CFGR;
 8000194:	6859      	ldr	r1, [r3, #4]
  tmp &=~RCC_CFGR_PPRE1;
 8000196:	4a0c      	ldr	r2, [pc, #48]	@ (80001c8 <SysClockMax+0xa8>)
 8000198:	400a      	ands	r2, r1
  tmp |= RCC_CFGR_PPRE1_DIV2;
 800019a:	f442 12e8 	orr.w	r2, r2, #1900544	@ 0x1d0000
 800019e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
  RCC->CFGR = tmp;
 80001a2:	605a      	str	r2, [r3, #4]
  RCC->CR |= RCC_CR_PLLON;
 80001a4:	681a      	ldr	r2, [r3, #0]
 80001a6:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 80001aa:	601a      	str	r2, [r3, #0]
 80001ac:	f64f 72ff 	movw	r2, #65535	@ 0xffff
    if(RCC->CR & RCC_CR_PLLRDY){i=0x1FFFF; break;}
 80001b0:	6819      	ldr	r1, [r3, #0]
 80001b2:	0189      	lsls	r1, r1, #6
 80001b4:	d4cc      	bmi.n	8000150 <SysClockMax+0x30>
  for(i=0;i<0x0FFFF;i++){
 80001b6:	3a01      	subs	r2, #1
 80001b8:	d1fa      	bne.n	80001b0 <SysClockMax+0x90>
  if(i != 0x1FFFF)return SCME_PLL; //can not enable PLL
 80001ba:	2002      	movs	r0, #2
 80001bc:	4770      	bx	lr
 80001be:	bf00      	nop
 80001c0:	40021000 	andmi	r1, r2, r0
 80001c4:	40022000 	andmi	r2, r2, r0
 80001c8:	ffc2c00f 			@ <UNDEFINED> instruction: 0xffc2c00f

080001cc <_init>:
#include "pinmacro.h"
#include "usb_lib.h"
#include "clock.h"
#include "systick.h"

void __attribute__((weak)) _init(void){}
 80001cc:	4770      	bx	lr

080001ce <SystemInit>:
void __attribute__((weak)) SystemInit(void){}
 80001ce:	4770      	bx	lr

080001d0 <sleep>:

void sleep(uint32_t time){
  while(time--)asm volatile("nop");
 80001d0:	b900      	cbnz	r0, 80001d4 <sleep+0x4>
}
 80001d2:	4770      	bx	lr
  while(time--)asm volatile("nop");
 80001d4:	bf00      	nop
 80001d6:	3801      	subs	r0, #1
 80001d8:	e7fa      	b.n	80001d0 <sleep>
 80001da:	bf00      	nop

080001dc <endp_callback_default>:
__attribute__((weak))void usb_class_poll(){}
__attribute__((weak))void usb_class_sof(){}
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}

static void endp_callback_default(uint8_t epnum){}
 80001dc:	4770      	bx	lr
__attribute__((weak))void usb_class_init(){}
 80001de:	4770      	bx	lr

080001e0 <usb_class_disconnect>:
__attribute__((weak))void usb_class_disconnect(){}
 80001e0:	4770      	bx	lr
__attribute__((weak))void usb_class_poll(){}
 80001e2:	4770      	bx	lr
__attribute__((weak))void usb_class_sof(){}
 80001e4:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){return 0;}
 80001e6:	2000      	movs	r0, #0
 80001e8:	4770      	bx	lr
__attribute__((weak))char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){return 0;}
 80001ea:	2000      	movs	r0, #0
 80001ec:	4770      	bx	lr

080001ee <USB_setup>:
static config_pack_t setup_packet;

//USB_PULLUP may be defined in "hardware.h"

void USB_setup(){
  RCC->APB1ENR |= RCC_APB1ENR_USBEN;
 80001ee:	4a24      	ldr	r2, [pc, #144]	@ (8000280 <USB_setup+0x92>)
 80001f0:	69d3      	ldr	r3, [r2, #28]
 80001f2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80001f6:	61d3      	str	r3, [r2, #28]
  GPIO_config( USB_PULLUP );
  GPO_OFF( USB_PULLUP );
#elif defined EXTEN_USBD_PU_EN //compatibilyty with CH32F1 (thx Олег Свиридов, my_xfiles@mail.ru)
  EXTEN->EXTEN_CTR &= ~EXTEN_USBD_PU_EN;
#elif defined USB_DP
  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 80001f8:	2201      	movs	r2, #1
 80001fa:	4b22      	ldr	r3, [pc, #136]	@ (8000284 <USB_setup+0x96>)
 80001fc:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
  USB->CNTR = USB_CNTR_PDWN;
 8000200:	2202      	movs	r2, #2
 8000202:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
  GPIO_manual( USB_DP, GPIO_OD50 );
 8000206:	f503 432c 	add.w	r3, r3, #44032	@ 0xac00
 800020a:	685a      	ldr	r2, [r3, #4]
 800020c:	f422 2270 	bic.w	r2, r2, #983040	@ 0xf0000
 8000210:	f442 22e0 	orr.w	r2, r2, #458752	@ 0x70000
 8000214:	605a      	str	r2, [r3, #4]
  GPO_OFF(USB_DP);
 8000216:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800021a:	611a      	str	r2, [r3, #16]
 800021c:	4a1a      	ldr	r2, [pc, #104]	@ (8000288 <USB_setup+0x9a>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 800021e:	bf00      	nop
 8000220:	3a01      	subs	r2, #1
 8000222:	d1fc      	bne.n	800021e <USB_setup+0x30>
  GPIO_manual( USB_DP, GPIO_HIZ );
 8000224:	685a      	ldr	r2, [r3, #4]
  #warning USB_PULLUP undefined
#endif

  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
  //Initialization of callback functions (thx Олег Свиридов, my_xfiles@mail.ru)
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000226:	4819      	ldr	r0, [pc, #100]	@ (800028c <USB_setup+0x9e>)
  GPIO_manual( USB_DP, GPIO_HIZ );
 8000228:	f422 2270 	bic.w	r2, r2, #983040	@ 0xf0000
 800022c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8000230:	605a      	str	r2, [r3, #4]
  USB->CNTR = USB_CNTR_FRES; // Force USB Reset
 8000232:	2201      	movs	r2, #1
 8000234:	4b13      	ldr	r3, [pc, #76]	@ (8000284 <USB_setup+0x96>)
 8000236:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 800023a:	2308      	movs	r3, #8
 800023c:	4a14      	ldr	r2, [pc, #80]	@ (8000290 <USB_setup+0xa2>)
 800023e:	f102 0120 	add.w	r1, r2, #32
  for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000242:	3b01      	subs	r3, #1
 8000244:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 8000248:	f842 0b04 	str.w	r0, [r2], #4
 800024c:	f841 0b04 	str.w	r0, [r1], #4
 8000250:	d1f7      	bne.n	8000242 <USB_setup+0x54>
 8000252:	4b0d      	ldr	r3, [pc, #52]	@ (8000288 <USB_setup+0x9a>)
  for(uint32_t ctr = 0; ctr < 100000; ++ctr) asm volatile("nop"); // wait >1ms
 8000254:	bf00      	nop
 8000256:	3b01      	subs	r3, #1
 8000258:	d1fc      	bne.n	8000254 <USB_setup+0x66>
  USB->CNTR   = 0;
 800025a:	4a0a      	ldr	r2, [pc, #40]	@ (8000284 <USB_setup+0x96>)
 800025c:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
  USB->BTABLE = 0;
 8000260:	f8a2 3050 	strh.w	r3, [r2, #80]	@ 0x50
  USB->DADDR  = 0;
 8000264:	f8a2 304c 	strh.w	r3, [r2, #76]	@ 0x4c
  USB->ISTR   = 0;
 8000268:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
  USB->CNTR   = USB_CNTR_RESETM | USB_CNTR_WKUPM;
 800026c:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000270:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8000274:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8000278:	4b06      	ldr	r3, [pc, #24]	@ (8000294 <USB_setup+0xa6>)
 800027a:	601a      	str	r2, [r3, #0]
#elif defined EXTEN_USBD_PU_EN
  EXTEN->EXTEN_CTR |= EXTEN_USBD_PU_EN;
#elif defined USB_PULLUP
  GPO_ON( USB_PULLUP );
#endif
}
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop
 8000280:	40021000 	andmi	r1, r2, r0
 8000284:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000288:	000186a0 	andeq	r8, r1, r0, lsr #13
 800028c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000290:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000294:	e000e100 	and	lr, r0, r0, lsl #2

08000298 <usb_ep_init>:
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
  }
}

static uint16_t lastaddr = LASTADDR_DEFAULT;
void usb_ep_init(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 8000298:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
 800029a:	f000 070f 	and.w	r7, r0, #15
  if(func == NULL)func = endp_callback_default;
 800029e:	4c3c      	ldr	r4, [pc, #240]	@ (8000390 <usb_ep_init+0xf8>)
  
  if(dir_in){
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80002a0:	ea4f 0c87 	mov.w	ip, r7, lsl #2
  if(func == NULL)func = endp_callback_default;
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	bf14      	ite	ne
 80002a8:	469e      	movne	lr, r3
 80002aa:	46a6      	moveq	lr, r4
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80002ac:	f10c 4480 	add.w	r4, ip, #1073741824	@ 0x40000000
 80002b0:	f504 44b8 	add.w	r4, r4, #23552	@ 0x5c00
 80002b4:	8823      	ldrh	r3, [r4, #0]
 80002b6:	b240      	sxtb	r0, r0
  if(dir_in){
 80002b8:	2800      	cmp	r0, #0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80002ba:	bfb5      	itete	lt
 80002bc:	f023 03c0 	biclt.w	r3, r3, #192	@ 0xc0
  }else{
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80002c0:	f023 03f0 	bicge.w	r3, r3, #240	@ 0xf0
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80002c4:	051b      	lsllt	r3, r3, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80002c6:	049b      	lslge	r3, r3, #18
    ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80002c8:	bfb4      	ite	lt
 80002ca:	0d1b      	lsrlt	r3, r3, #20
    ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80002cc:	0c9b      	lsrge	r3, r3, #18
 80002ce:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80002d2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80002d6:	8023      	strh	r3, [r4, #0]
  }
  
  uint16_t buf = USB_EPx(epnum);
 80002d8:	8823      	ldrh	r3, [r4, #0]
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  //buf = (buf & ~USB_EP_T_FIELD) | ep_type;
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 80002da:	2902      	cmp	r1, #2
 80002dc:	f403 6310 	and.w	r3, r3, #2304	@ 0x900
 80002e0:	ea43 0307 	orr.w	r3, r3, r7
 80002e4:	d005      	beq.n	80002f2 <usb_ep_init+0x5a>
 80002e6:	2903      	cmp	r1, #3
 80002e8:	d029      	beq.n	800033e <usb_ep_init+0xa6>
 80002ea:	bb59      	cbnz	r1, 8000344 <usb_ep_init+0xac>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 80002ec:	f443 4302 	orr.w	r3, r3, #33280	@ 0x8200
 80002f0:	e001      	b.n	80002f6 <usb_ep_init+0x5e>
  buf &=~ USB_EP_T_FIELD;
 80002f2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
    case USB_ENDP_BULK: buf |= USB_EP_BULK; break;
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 80002f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
  }
  USB_EPx(epnum) = buf;
  
  if( dir_in ){
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80002fa:	4e26      	ldr	r6, [pc, #152]	@ (8000394 <usb_ep_init+0xfc>)
  USB_EPx(epnum) = buf;
 80002fc:	8023      	strh	r3, [r4, #0]
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80002fe:	013b      	lsls	r3, r7, #4
 8000300:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
  if( dir_in ){
 8000304:	2800      	cmp	r0, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000306:	8835      	ldrh	r5, [r6, #0]
 8000308:	4823      	ldr	r0, [pc, #140]	@ (8000398 <usb_ep_init+0x100>)
 800030a:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
  if( dir_in ){
 800030e:	da1c      	bge.n	800034a <usb_ep_init+0xb2>
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000310:	601d      	str	r5, [r3, #0]
    epfunc_in[epnum] = func;
 8000312:	f640 733f 	movw	r3, #3903	@ 0xf3f
    if((ep_type & 0x03) == USB_ENDP_ISO){
 8000316:	f001 0103 	and.w	r1, r1, #3
 800031a:	2901      	cmp	r1, #1
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 800031c:	8821      	ldrh	r1, [r4, #0]
    epfunc_in[epnum] = func;
 800031e:	4484      	add	ip, r0
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000320:	ea03 0301 	and.w	r3, r3, r1
 8000324:	f483 4300 	eor.w	r3, r3, #32768	@ 0x8000
    epfunc_in[epnum] = func;
 8000328:	f8cc e020 	str.w	lr, [ip, #32]
      ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 800032c:	bf0c      	ite	eq
 800032e:	f083 03b0 	eoreq.w	r3, r3, #176	@ 0xb0
    }else{
      ENDP_STAT_TX(epnum, USB_EP_TX_NAK);
 8000332:	f083 03a0 	eorne.w	r3, r3, #160	@ 0xa0
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
    }
    epfunc_out[epnum] = func;
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
  }
  lastaddr += size;
 8000336:	442a      	add	r2, r5
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000338:	8023      	strh	r3, [r4, #0]
  lastaddr += size;
 800033a:	8032      	strh	r2, [r6, #0]
}
 800033c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 800033e:	f443 4306 	orr.w	r3, r3, #34304	@ 0x8600
 8000342:	e7d8      	b.n	80002f6 <usb_ep_init+0x5e>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000344:	f443 4304 	orr.w	r3, r3, #33792	@ 0x8400
 8000348:	e7d5      	b.n	80002f6 <usb_ep_init+0x5e>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 800034a:	609d      	str	r5, [r3, #8]
      usb_epdata[epnum].rx_blocksize = 0;
 800034c:	8999      	ldrh	r1, [r3, #12]
    if(size < 64){
 800034e:	2a3f      	cmp	r2, #63	@ 0x3f
      usb_epdata[epnum].rx_blocksize = 1;
 8000350:	bf8b      	itete	hi
 8000352:	f441 4100 	orrhi.w	r1, r1, #32768	@ 0x8000
      usb_epdata[epnum].rx_blocksize = 0;
 8000356:	f36f 31cf 	bfcls	r1, #15, #1
      usb_epdata[epnum].rx_blocksize = 1;
 800035a:	8199      	strhhi	r1, [r3, #12]
      usb_epdata[epnum].rx_blocksize = 0;
 800035c:	8199      	strhls	r1, [r3, #12]
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800035e:	f8b3 c00c 	ldrh.w	ip, [r3, #12]
 8000362:	bf8a      	itet	hi
 8000364:	0951      	lsrhi	r1, r2, #5
      usb_epdata[epnum].rx_num_blocks = size / 2;
 8000366:	f3c2 0144 	ubfxls	r1, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = size / 32 - 1;
 800036a:	f101 31ff 	addhi.w	r1, r1, #4294967295	@ 0xffffffff
 800036e:	f361 2c8e 	bfi	ip, r1, #10, #5
 8000372:	f8a3 c00c 	strh.w	ip, [r3, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000376:	8823      	ldrh	r3, [r4, #0]
    epfunc_out[epnum] = func;
 8000378:	f840 e027 	str.w	lr, [r0, r7, lsl #2]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 800037c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000380:	049b      	lsls	r3, r3, #18
 8000382:	0c9b      	lsrs	r3, r3, #18
 8000384:	f483 4330 	eor.w	r3, r3, #45056	@ 0xb000
 8000388:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 800038c:	e7d3      	b.n	8000336 <usb_ep_init+0x9e>
 800038e:	bf00      	nop
 8000390:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000394:	20000000 	andcs	r0, r0, r0
 8000398:	2000001c 	andcs	r0, r0, ip, lsl r0

0800039c <usb_ep_init_double>:
void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
  if(func == NULL)func = endp_callback_default;
  uint8_t dir_in = (epnum & 0x80);
  epnum &= 0x0F;
  
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 800039c:	f248 0c80 	movw	ip, #32896	@ 0x8080
void usb_ep_init_double(uint8_t epnum, uint8_t ep_type, uint16_t size, epfunc_t func){
 80003a0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(func == NULL)func = endp_callback_default;
 80003a2:	4c4c      	ldr	r4, [pc, #304]	@ (80004d4 <usb_ep_init_double+0x138>)
  epnum &= 0x0F;
 80003a4:	f000 050f 	and.w	r5, r0, #15
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003a8:	00ae      	lsls	r6, r5, #2
  if(func == NULL)func = endp_callback_default;
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	bf14      	ite	ne
 80003ae:	461f      	movne	r7, r3
 80003b0:	4627      	moveq	r7, r4
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003b2:	f106 4480 	add.w	r4, r6, #1073741824	@ 0x40000000
 80003b6:	f504 44b8 	add.w	r4, r4, #23552	@ 0x5c00
 80003ba:	8823      	ldrh	r3, [r4, #0]
  uint16_t buf = USB_EPx(epnum);
  buf = (buf & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPTX_STAT | USB_EPRX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX;
  buf = (buf & ~USB_EPADDR_FIELD) | epnum;
  
  buf &=~ USB_EP_T_FIELD;
  switch(ep_type){
 80003bc:	2902      	cmp	r1, #2
  ENDP_STAT_TX(epnum, USB_EP_TX_DIS);
 80003be:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 80003c2:	ea4f 5303 	mov.w	r3, r3, lsl #20
 80003c6:	ea4f 5313 	mov.w	r3, r3, lsr #20
 80003ca:	ea4c 0303 	orr.w	r3, ip, r3
 80003ce:	8023      	strh	r3, [r4, #0]
  ENDP_STAT_RX(epnum, USB_EP_RX_DIS);
 80003d0:	8823      	ldrh	r3, [r4, #0]
 80003d2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80003d6:	ea4f 4383 	mov.w	r3, r3, lsl #18
 80003da:	ea4f 4393 	mov.w	r3, r3, lsr #18
 80003de:	ea4c 0c03 	orr.w	ip, ip, r3
 80003e2:	f8a4 c000 	strh.w	ip, [r4]
  uint16_t buf = USB_EPx(epnum);
 80003e6:	8823      	ldrh	r3, [r4, #0]
  buf &=~ USB_EP_T_FIELD;
 80003e8:	f403 6310 	and.w	r3, r3, #2304	@ 0x900
 80003ec:	ea43 0305 	orr.w	r3, r3, r5
  switch(ep_type){
 80003f0:	d02c      	beq.n	800044c <usb_ep_init_double+0xb0>
 80003f2:	2903      	cmp	r1, #3
 80003f4:	d02d      	beq.n	8000452 <usb_ep_init_double+0xb6>
 80003f6:	bb79      	cbnz	r1, 8000458 <usb_ep_init_double+0xbc>
    case USB_ENDP_CTRL: buf |= USB_EP_CONTROL; break;
 80003f8:	f443 4302 	orr.w	r3, r3, #33280	@ 0x8200
  USB_EPx(epnum) = buf;
  
#define USB_EP_SWBUF_TX     USB_EP_DTOG_RX
#define USB_EP_SWBUF_RX     USB_EP_DTOG_TX
  if( dir_in ){
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 80003fc:	f8df c0d8 	ldr.w	ip, [pc, #216]	@ 80004d8 <usb_ep_init_double+0x13c>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000400:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000404:	f8bc 1000 	ldrh.w	r1, [ip]
  USB_EPx(epnum) = buf;
 8000408:	8023      	strh	r3, [r4, #0]
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800040a:	012b      	lsls	r3, r5, #4
 800040c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
  if( dir_in ){
 8000410:	0600      	lsls	r0, r0, #24
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 8000412:	f503 43c0 	add.w	r3, r3, #24576	@ 0x6000
    usb_epdata[epnum].usb_tx_count = 0;
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 8000416:	eb01 0e02 	add.w	lr, r1, r2
  if( dir_in ){
 800041a:	d520      	bpl.n	800045e <usb_ep_init_double+0xc2>
    usb_epdata[epnum].usb_tx_count = 0;
 800041c:	2000      	movs	r0, #0
    usb_epdata[epnum].usb_tx_addr = lastaddr;
 800041e:	6019      	str	r1, [r3, #0]
    usb_epdata[epnum].usb_tx_count = 0;
 8000420:	6058      	str	r0, [r3, #4]
    usb_epdata[epnum].usb_rx_addr = lastaddr + size;
 8000422:	f8c3 e008 	str.w	lr, [r3, #8]
    usb_epdata[epnum].usb_rx_count = 0;
 8000426:	60d8      	str	r0, [r3, #12]
    
    buf = USB_EPx(epnum);
 8000428:	8823      	ldrh	r3, [r4, #0]
    USB_EPx(epnum) = (buf ^ USB_EP_TX_VALID) & (USB_EPREG_MASK | USB_EPTX_STAT | USB_EP_DTOG_TX | USB_EP_SWBUF_TX);
 800042a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800042e:	041b      	lsls	r3, r3, #16
 8000430:	0c1b      	lsrs	r3, r3, #16
 8000432:	f083 0330 	eor.w	r3, r3, #48	@ 0x30
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
      if(size < 32)size = 32;
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
    }
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 8000436:	8023      	strh	r3, [r4, #0]
  }
  epfunc_in[epnum] = func;
 8000438:	4b28      	ldr	r3, [pc, #160]	@ (80004dc <usb_ep_init_double+0x140>)
  epfunc_out[epnum]= func;
    
  lastaddr += 2*size;
 800043a:	eb01 0142 	add.w	r1, r1, r2, lsl #1
  epfunc_in[epnum] = func;
 800043e:	441e      	add	r6, r3
 8000440:	6237      	str	r7, [r6, #32]
  epfunc_out[epnum]= func;
 8000442:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
  lastaddr += 2*size;
 8000446:	f8ac 1000 	strh.w	r1, [ip]
}
 800044a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    case USB_ENDP_BULK: buf |= USB_EP_BULK | USB_EP_KIND; break;
 800044c:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 8000450:	e7d4      	b.n	80003fc <usb_ep_init_double+0x60>
    case USB_ENDP_INTR: buf |= USB_EP_INTERRUPT; break;
 8000452:	f443 4306 	orr.w	r3, r3, #34304	@ 0x8600
 8000456:	e7d1      	b.n	80003fc <usb_ep_init_double+0x60>
    default: buf |= USB_EP_ISOCHRONOUS; //в дескрипторах изохронные точки могут иметь расширенные настройки
 8000458:	f443 4304 	orr.w	r3, r3, #33792	@ 0x8400
 800045c:	e7ce      	b.n	80003fc <usb_ep_init_double+0x60>
    usb_epdata[epnum].usb_rx_addr = lastaddr;
 800045e:	6099      	str	r1, [r3, #8]
    if(size < 64){
 8000460:	2a3f      	cmp	r2, #63	@ 0x3f
    usb_epdata[epnum].usb_tx_addr = lastaddr + size;
 8000462:	f8c3 e000 	str.w	lr, [r3]
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 8000466:	8898      	ldrh	r0, [r3, #4]
    if(size < 64){
 8000468:	d828      	bhi.n	80004bc <usb_ep_init_double+0x120>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 0;
 800046a:	f36f 30cf 	bfc	r0, #15, #1
 800046e:	8098      	strh	r0, [r3, #4]
 8000470:	8998      	ldrh	r0, [r3, #12]
 8000472:	f36f 30cf 	bfc	r0, #15, #1
 8000476:	8198      	strh	r0, [r3, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 2;
 8000478:	f3c2 0044 	ubfx	r0, r2, #1, #5
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 800047c:	f8b3 e004 	ldrh.w	lr, [r3, #4]
 8000480:	f360 2e8e 	bfi	lr, r0, #10, #5
 8000484:	f8a3 e004 	strh.w	lr, [r3, #4]
 8000488:	f8b3 e00c 	ldrh.w	lr, [r3, #12]
 800048c:	f360 2e8e 	bfi	lr, r0, #10, #5
 8000490:	f8a3 e00c 	strh.w	lr, [r3, #12]
    ENDP_STAT_RX(epnum, USB_EP_RX_VALID);
 8000494:	8823      	ldrh	r3, [r4, #0]
 8000496:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800049a:	049b      	lsls	r3, r3, #18
 800049c:	0c9b      	lsrs	r3, r3, #18
 800049e:	f483 4330 	eor.w	r3, r3, #45056	@ 0xb000
 80004a2:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 80004a6:	8023      	strh	r3, [r4, #0]
    ENDP_STAT_TX(epnum, USB_EP_TX_VALID);
 80004a8:	8823      	ldrh	r3, [r4, #0]
 80004aa:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 80004ae:	051b      	lsls	r3, r3, #20
 80004b0:	0d1b      	lsrs	r3, r3, #20
 80004b2:	f483 4300 	eor.w	r3, r3, #32768	@ 0x8000
 80004b6:	f083 03b0 	eor.w	r3, r3, #176	@ 0xb0
 80004ba:	e7bc      	b.n	8000436 <usb_ep_init_double+0x9a>
      usb_epdata[epnum].rx_blocksize = usb_epdata[epnum].tx_blocksize = 1;
 80004bc:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 80004c0:	8098      	strh	r0, [r3, #4]
 80004c2:	8998      	ldrh	r0, [r3, #12]
 80004c4:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 80004c8:	8198      	strh	r0, [r3, #12]
      usb_epdata[epnum].rx_num_blocks = usb_epdata[epnum].tx_num_blocks = size / 32 - 1;
 80004ca:	0950      	lsrs	r0, r2, #5
 80004cc:	3801      	subs	r0, #1
 80004ce:	f000 001f 	and.w	r0, r0, #31
 80004d2:	e7d3      	b.n	800047c <usb_ep_init_double+0xe0>
 80004d4:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80004d8:	20000000 	andcs	r0, r0, r0
 80004dc:	2000001c 	andcs	r0, r0, ip, lsl r0

080004e0 <USB_LP_CAN1_RX0_IRQHandler>:
//-----------------------------------------------------------------------
//--------- USB IRQ handler----------------------------------------------
//-----------------------------------------------------------------------
void USB_LP_IRQHandler(){
 80004e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(USB->ISTR & USB_ISTR_CTR){
 80004e4:	4c4a      	ldr	r4, [pc, #296]	@ (8000610 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
 80004e6:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 80004ea:	0419      	lsls	r1, r3, #16
 80004ec:	d52f      	bpl.n	800054e <USB_LP_CAN1_RX0_IRQHandler+0x6e>
    do{
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
        epfunc_out[epnum](epnum);
 80004ee:	f8df 8124 	ldr.w	r8, [pc, #292]	@ 8000614 <USB_LP_CAN1_RX0_IRQHandler+0x134>
      uint8_t epnum = USB->ISTR & USB_ISTR_EP_ID;
 80004f2:	f8b4 6044 	ldrh.w	r6, [r4, #68]	@ 0x44
 80004f6:	f006 060f 	and.w	r6, r6, #15
      if(USB_EPx(epnum) & USB_EP_CTR_RX){ //OUT
 80004fa:	00b7      	lsls	r7, r6, #2
 80004fc:	f107 4580 	add.w	r5, r7, #1073741824	@ 0x40000000
 8000500:	f505 45b8 	add.w	r5, r5, #23552	@ 0x5c00
 8000504:	882b      	ldrh	r3, [r5, #0]
 8000506:	041a      	lsls	r2, r3, #16
 8000508:	d50b      	bpl.n	8000522 <USB_LP_CAN1_RX0_IRQHandler+0x42>
        epfunc_out[epnum](epnum);
 800050a:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
 800050e:	4630      	mov	r0, r6
 8000510:	4798      	blx	r3
        ENDP_CTR_RX_CLR(epnum);
 8000512:	882b      	ldrh	r3, [r5, #0]
 8000514:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000518:	051b      	lsls	r3, r3, #20
 800051a:	0d1b      	lsrs	r3, r3, #20
 800051c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000520:	802b      	strh	r3, [r5, #0]
      }
      if(USB_EPx(epnum) & USB_EP_CTR_TX){//IN
 8000522:	882b      	ldrh	r3, [r5, #0]
 8000524:	061b      	lsls	r3, r3, #24
 8000526:	d50c      	bpl.n	8000542 <USB_LP_CAN1_RX0_IRQHandler+0x62>
        epfunc_in[epnum](epnum | 0x80);
 8000528:	4447      	add	r7, r8
 800052a:	6a3b      	ldr	r3, [r7, #32]
 800052c:	f046 0080 	orr.w	r0, r6, #128	@ 0x80
 8000530:	4798      	blx	r3
        ENDP_CTR_TX_CLR(epnum);
 8000532:	882b      	ldrh	r3, [r5, #0]
 8000534:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000538:	051b      	lsls	r3, r3, #20
 800053a:	0d1b      	lsrs	r3, r3, #20
 800053c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000540:	802b      	strh	r3, [r5, #0]
      }
    }while(USB->ISTR & USB_ISTR_CTR);
 8000542:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 8000546:	041d      	lsls	r5, r3, #16
 8000548:	d4d3      	bmi.n	80004f2 <USB_LP_CAN1_RX0_IRQHandler+0x12>
  
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
  }
}
 800054a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(USB->ISTR & USB_ISTR_SOF){
 800054e:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 8000552:	0598      	lsls	r0, r3, #22
 8000554:	d506      	bpl.n	8000564 <USB_LP_CAN1_RX0_IRQHandler+0x84>
    usb_class_sof();
 8000556:	f000 fd29 	bl	8000fac <usb_class_sof>
    USB->ISTR = (uint16_t)~USB_ISTR_SOF;
 800055a:	f64f 53ff 	movw	r3, #65023	@ 0xfdff
 800055e:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
    return;
 8000562:	e7f2      	b.n	800054a <USB_LP_CAN1_RX0_IRQHandler+0x6a>
  if(USB->ISTR & USB_ISTR_RESET){
 8000564:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 8000568:	0559      	lsls	r1, r3, #21
 800056a:	d52d      	bpl.n	80005c8 <USB_LP_CAN1_RX0_IRQHandler+0xe8>
    usb_class_disconnect();
 800056c:	f7ff fe38 	bl	80001e0 <usb_class_disconnect>
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000570:	f44f 431e 	mov.w	r3, #40448	@ 0x9e00
    lastaddr = LASTADDR_DEFAULT;
 8000574:	2240      	movs	r2, #64	@ 0x40
      USB->CNTR = USB_CNTR_RESETM | USB_CNTR_CTRM | USB_CNTR_SOFM | USB_CNTR_SUSPM | USB_CNTR_WKUPM;
 8000576:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
    lastaddr = LASTADDR_DEFAULT;
 800057a:	4b27      	ldr	r3, [pc, #156]	@ (8000618 <USB_LP_CAN1_RX0_IRQHandler+0x138>)
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 800057c:	4927      	ldr	r1, [pc, #156]	@ (800061c <USB_LP_CAN1_RX0_IRQHandler+0x13c>)
    lastaddr = LASTADDR_DEFAULT;
 800057e:	801a      	strh	r2, [r3, #0]
    USB->DADDR = USB_DADDR_EF;
 8000580:	2380      	movs	r3, #128	@ 0x80
 8000582:	f8a4 304c 	strh.w	r3, [r4, #76]	@ 0x4c
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000586:	4b23      	ldr	r3, [pc, #140]	@ (8000614 <USB_LP_CAN1_RX0_IRQHandler+0x134>)
    USB->DADDR = USB_DADDR_EF;
 8000588:	2408      	movs	r4, #8
 800058a:	461d      	mov	r5, r3
 800058c:	f103 0220 	add.w	r2, r3, #32
    for(uint8_t i=0; i<STM32ENDPOINTS; i++)epfunc_in[i] = epfunc_out[i] = endp_callback_default;
 8000590:	3c01      	subs	r4, #1
 8000592:	f014 04ff 	ands.w	r4, r4, #255	@ 0xff
 8000596:	f843 1b04 	str.w	r1, [r3], #4
 800059a:	f842 1b04 	str.w	r1, [r2], #4
 800059e:	d1f7      	bne.n	8000590 <USB_LP_CAN1_RX0_IRQHandler+0xb0>
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80005a0:	f64f 32ff 	movw	r2, #64511	@ 0xfbff
 80005a4:	4b1a      	ldr	r3, [pc, #104]	@ (8000610 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80005a6:	4621      	mov	r1, r4
    USB->ISTR = (uint16_t)~USB_ISTR_RESET;
 80005a8:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
    usb_ep_init(0x00, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_out);
 80005ac:	4620      	mov	r0, r4
 80005ae:	2208      	movs	r2, #8
 80005b0:	4b1b      	ldr	r3, [pc, #108]	@ (8000620 <USB_LP_CAN1_RX0_IRQHandler+0x140>)
 80005b2:	f7ff fe71 	bl	8000298 <usb_ep_init>
    usb_ep_init(0x80, USB_ENDP_CTRL, USB_EP0_BUFSZ, ep0_in);
 80005b6:	2208      	movs	r2, #8
 80005b8:	4621      	mov	r1, r4
 80005ba:	2080      	movs	r0, #128	@ 0x80
 80005bc:	4b19      	ldr	r3, [pc, #100]	@ (8000624 <USB_LP_CAN1_RX0_IRQHandler+0x144>)
 80005be:	f7ff fe6b 	bl	8000298 <usb_ep_init>
    ep0_buf = NULL;
 80005c2:	642c      	str	r4, [r5, #64]	@ 0x40
    usb_class_init();
 80005c4:	f000 fc2e 	bl	8000e24 <usb_class_init>
  if(USB->ISTR & USB_ISTR_SUSP){ // suspend -> still no connection, may sleep
 80005c8:	4c11      	ldr	r4, [pc, #68]	@ (8000610 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
 80005ca:	f8b4 3044 	ldrh.w	r3, [r4, #68]	@ 0x44
 80005ce:	051a      	lsls	r2, r3, #20
 80005d0:	d50c      	bpl.n	80005ec <USB_LP_CAN1_RX0_IRQHandler+0x10c>
    usb_class_disconnect();
 80005d2:	f7ff fe05 	bl	80001e0 <usb_class_disconnect>
    USB->CNTR |= USB_CNTR_FSUSP | USB_CNTR_LP_MODE;
 80005d6:	f8b4 3040 	ldrh.w	r3, [r4, #64]	@ 0x40
 80005da:	b29b      	uxth	r3, r3
 80005dc:	f043 030c 	orr.w	r3, r3, #12
 80005e0:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_SUSP;
 80005e4:	f24f 73ff 	movw	r3, #63487	@ 0xf7ff
 80005e8:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
  if(USB->ISTR & USB_ISTR_WKUP){ // wakeup
 80005ec:	4a08      	ldr	r2, [pc, #32]	@ (8000610 <USB_LP_CAN1_RX0_IRQHandler+0x130>)
 80005ee:	f8b2 3044 	ldrh.w	r3, [r2, #68]	@ 0x44
 80005f2:	04db      	lsls	r3, r3, #19
 80005f4:	d5a9      	bpl.n	800054a <USB_LP_CAN1_RX0_IRQHandler+0x6a>
    USB->CNTR &= ~(USB_CNTR_FSUSP | USB_CNTR_LP_MODE); // clear suspend flags
 80005f6:	f8b2 3040 	ldrh.w	r3, [r2, #64]	@ 0x40
 80005fa:	f023 030c 	bic.w	r3, r3, #12
 80005fe:	041b      	lsls	r3, r3, #16
 8000600:	0c1b      	lsrs	r3, r3, #16
 8000602:	f8a2 3040 	strh.w	r3, [r2, #64]	@ 0x40
    USB->ISTR = (uint16_t)~USB_ISTR_WKUP;
 8000606:	f64e 73ff 	movw	r3, #61439	@ 0xefff
 800060a:	f8a2 3044 	strh.w	r3, [r2, #68]	@ 0x44
 800060e:	e79c      	b.n	800054a <USB_LP_CAN1_RX0_IRQHandler+0x6a>
 8000610:	40005c00 	andmi	r5, r0, r0, lsl #24
 8000614:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000618:	20000000 	andcs	r0, r0, r0
 800061c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000620:	08000711 	stmdaeq	r0, {r0, r4, r8, r9, sl}
 8000624:	0800067d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl}

08000628 <_usb_ep_write>:
      uint32_t rx_blocksize:1;
    };
  };
}pma_descr_t;

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size){
 8000628:	b5f0      	push	{r4, r5, r6, r7, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
  uint16_t N2 = (size + 1) >> 1;
  // the buffer is 16-bit, so we should copy data as it would be uint16_t
  uint16_t *buf16 = (uint16_t *)buf;
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
  for(uint16_t i = 0; i < N2; ++i, ++out){
 800062a:	2500      	movs	r5, #0
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 800062c:	00c4      	lsls	r4, r0, #3
 800062e:	f104 4480 	add.w	r4, r4, #1073741824	@ 0x40000000
 8000632:	f504 44c0 	add.w	r4, r4, #24576	@ 0x6000
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000636:	6823      	ldr	r3, [r4, #0]
  uint16_t N2 = (size + 1) >> 1;
 8000638:	1c56      	adds	r6, r2, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 800063a:	f103 5300 	add.w	r3, r3, #536870912	@ 0x20000000
 800063e:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
  uint16_t N2 = (size + 1) >> 1;
 8000642:	0876      	lsrs	r6, r6, #1
  volatile uint32_t *out = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 8000644:	005b      	lsls	r3, r3, #1
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000646:	b2af      	uxth	r7, r5
 8000648:	42be      	cmp	r6, r7
 800064a:	d811      	bhi.n	8000670 <_usb_ep_write+0x48>
    *out = buf16[i];
  }
  descr->count = size;
  
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 800064c:	0840      	lsrs	r0, r0, #1
 800064e:	0080      	lsls	r0, r0, #2
 8000650:	f100 4080 	add.w	r0, r0, #1073741824	@ 0x40000000
  descr->count = size;
 8000654:	6062      	str	r2, [r4, #4]
  ENDP_STAT_TX((idx/2), USB_EP_TX_VALID);
 8000656:	f500 40b8 	add.w	r0, r0, #23552	@ 0x5c00
 800065a:	8803      	ldrh	r3, [r0, #0]
 800065c:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8000660:	051b      	lsls	r3, r3, #20
 8000662:	0d1b      	lsrs	r3, r3, #20
 8000664:	f483 4300 	eor.w	r3, r3, #32768	@ 0x8000
 8000668:	f083 03b0 	eor.w	r3, r3, #176	@ 0xb0
 800066c:	8003      	strh	r3, [r0, #0]
}
 800066e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    *out = buf16[i];
 8000670:	f831 7015 	ldrh.w	r7, [r1, r5, lsl #1]
 8000674:	f843 7025 	str.w	r7, [r3, r5, lsl #2]
  for(uint16_t i = 0; i < N2; ++i, ++out){
 8000678:	3501      	adds	r5, #1
 800067a:	e7e4      	b.n	8000646 <_usb_ep_write+0x1e>

0800067c <ep0_in>:
static void ep0_in(uint8_t epnum){
 800067c:	b538      	push	{r3, r4, r5, lr}
  if(ep0_buf == NULL)return;
 800067e:	4c0c      	ldr	r4, [pc, #48]	@ (80006b0 <ep0_in+0x34>)
 8000680:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8000682:	b1a1      	cbz	r1, 80006ae <ep0_in+0x32>
  uint16_t left = ep0_count;
 8000684:	f8b4 5044 	ldrh.w	r5, [r4, #68]	@ 0x44

#define ENDP_TOG(num, tog) do{USB_EPx(num) = ((USB_EPx(num) & ~(USB_EP_DTOG_RX | USB_EP_DTOG_TX | USB_EPRX_STAT | USB_EPTX_STAT)) | USB_EP_CTR_RX | USB_EP_CTR_TX) | tog; }while(0)

void _usb_ep_write(uint8_t idx, const uint16_t *buf, uint16_t size);
static inline void usb_ep_write(uint8_t epnum, const uint16_t *buf, uint16_t size){
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8000688:	2000      	movs	r0, #0
  if(left > USB_EP0_BUFSZ)left = USB_EP0_BUFSZ;
 800068a:	2d08      	cmp	r5, #8
 800068c:	462a      	mov	r2, r5
 800068e:	bf28      	it	cs
 8000690:	2208      	movcs	r2, #8
 8000692:	f7ff ffc9 	bl	8000628 <_usb_ep_write>
  if(left < USB_EP0_BUFSZ){
 8000696:	2d07      	cmp	r5, #7
    ep0_buf = NULL;
 8000698:	bf98      	it	ls
 800069a:	2300      	movls	r3, #0
  ep0_count -= left;
 800069c:	eba5 0202 	sub.w	r2, r5, r2
  ep0_buf += left;
 80006a0:	bf88      	it	hi
 80006a2:	3108      	addhi	r1, #8
  ep0_count -= left;
 80006a4:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
  ep0_buf += left;
 80006a8:	bf8c      	ite	hi
 80006aa:	6421      	strhi	r1, [r4, #64]	@ 0x40
    ep0_buf = NULL;
 80006ac:	6423      	strls	r3, [r4, #64]	@ 0x40
}
 80006ae:	bd38      	pop	{r3, r4, r5, pc}
 80006b0:	2000001c 	andcs	r0, r0, ip, lsl r0

080006b4 <_usb_ep_read>:

int _usb_ep_read(uint8_t idx, uint16_t *buf){
 80006b4:	b530      	push	{r4, r5, lr}
  pma_descr_t *descr = &((pma_descr_t*)usb_epdata)[idx];
 80006b6:	00c2      	lsls	r2, r0, #3
 80006b8:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 80006bc:	f502 42c0 	add.w	r2, r2, #24576	@ 0x6000
int _usb_ep_read(uint8_t idx, uint16_t *buf){
 80006c0:	4603      	mov	r3, r0
  int sz = descr->rx_count;
 80006c2:	6850      	ldr	r0, [r2, #4]
 80006c4:	f3c0 0009 	ubfx	r0, r0, #0, #10
  if(!sz) return 0;
 80006c8:	b308      	cbz	r0, 800070e <_usb_ep_read+0x5a>
  int n = (sz + 1) >> 1;
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006ca:	6814      	ldr	r4, [r2, #0]
  int n = (sz + 1) >> 1;
 80006cc:	1c42      	adds	r2, r0, #1
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006ce:	f104 5400 	add.w	r4, r4, #536870912	@ 0x20000000
  int n = (sz + 1) >> 1;
 80006d2:	1052      	asrs	r2, r2, #1
  volatile uint32_t *in = (volatile uint32_t*)((uint16_t *)(USB_PMAADDR + descr->addr*2));
 80006d4:	f504 5440 	add.w	r4, r4, #12288	@ 0x3000
 80006d8:	0092      	lsls	r2, r2, #2
 80006da:	0065      	lsls	r5, r4, #1
  for(int i = 0; i < n; ++i, ++in)
 80006dc:	3902      	subs	r1, #2
 80006de:	eb02 0244 	add.w	r2, r2, r4, lsl #1
    buf[i] = *(uint16_t*)in;
 80006e2:	f835 4b04 	ldrh.w	r4, [r5], #4
  for(int i = 0; i < n; ++i, ++in)
 80006e6:	4295      	cmp	r5, r2
    buf[i] = *(uint16_t*)in;
 80006e8:	f821 4f02 	strh.w	r4, [r1, #2]!
  for(int i = 0; i < n; ++i, ++in)
 80006ec:	d1f9      	bne.n	80006e2 <_usb_ep_read+0x2e>
  
  ENDP_STAT_RX((idx/2), USB_EP_RX_VALID);
 80006ee:	085b      	lsrs	r3, r3, #1
 80006f0:	009b      	lsls	r3, r3, #2
 80006f2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80006f6:	f503 43b8 	add.w	r3, r3, #23552	@ 0x5c00
 80006fa:	881a      	ldrh	r2, [r3, #0]
 80006fc:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8000700:	0492      	lsls	r2, r2, #18
 8000702:	0c92      	lsrs	r2, r2, #18
 8000704:	f482 4230 	eor.w	r2, r2, #45056	@ 0xb000
 8000708:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
 800070c:	801a      	strh	r2, [r3, #0]
  return sz;
}
 800070e:	bd30      	pop	{r4, r5, pc}

08000710 <ep0_out>:
static void ep0_out(uint8_t epnum){
 8000710:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000712:	4b52      	ldr	r3, [pc, #328]	@ (800085c <ep0_out+0x14c>)
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000714:	4c52      	ldr	r4, [pc, #328]	@ (8000860 <ep0_out+0x150>)
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000716:	68dd      	ldr	r5, [r3, #12]
  uint8_t setup = !!(USB_EPx(0) & USB_EP_SETUP);
 8000718:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800071c:	881a      	ldrh	r2, [r3, #0]
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 800071e:	f894 0046 	ldrb.w	r0, [r4, #70]	@ 0x46
  if( setup ){
 8000722:	0512      	lsls	r2, r2, #20
  if(setup_packet.bmRequestType & 0x80){
 8000724:	f994 3046 	ldrsb.w	r3, [r4, #70]	@ 0x46
  uint16_t rxcount = usb_epdata[0].rx_count;
 8000728:	f3c5 0509 	ubfx	r5, r5, #0, #10
  if( setup ){
 800072c:	d403      	bmi.n	8000736 <ep0_out+0x26>
  if(setup_packet.bmRequestType & 0x80){
 800072e:	2b00      	cmp	r3, #0
 8000730:	da28      	bge.n	8000784 <ep0_out+0x74>
}
 8000732:	b003      	add	sp, #12
 8000734:	bd30      	pop	{r4, r5, pc}
    if( setup_packet.bmRequestType & 0x80 ){ //предыдущий пакет=IN, этот точно будет запросом
 8000736:	2b00      	cmp	r3, #0
 8000738:	da1e      	bge.n	8000778 <ep0_out+0x68>
        bytesread = 0;
 800073a:	2500      	movs	r5, #0
  _usb_ep_write(idx, buf, size);
}

int _usb_ep_read(uint8_t idx, uint16_t *buf);
static inline int usb_ep_read(uint8_t epnum, uint16_t *buf){
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 800073c:	2001      	movs	r0, #1
 800073e:	f104 0146 	add.w	r1, r4, #70	@ 0x46
 8000742:	f7ff ffb7 	bl	80006b4 <_usb_ep_read>
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 8000746:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
        bytesread = 0;
 800074a:	f8a4 504e 	strh.w	r5, [r4, #78]	@ 0x4e
  uint8_t req = setup_packet.bmRequestType & 0x7F;
 800074e:	f003 007f 	and.w	r0, r3, #127	@ 0x7f
  if(setup_packet.bmRequestType & 0x80){
 8000752:	061b      	lsls	r3, r3, #24
 8000754:	d516      	bpl.n	8000784 <ep0_out+0x74>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000756:	2800      	cmp	r0, #0
 8000758:	d14b      	bne.n	80007f2 <ep0_out+0xe2>
      switch(setup_packet.bRequest){
 800075a:	f894 3047 	ldrb.w	r3, [r4, #71]	@ 0x47
 800075e:	2b06      	cmp	r3, #6
 8000760:	d027      	beq.n	80007b2 <ep0_out+0xa2>
 8000762:	2b08      	cmp	r3, #8
 8000764:	d042      	beq.n	80007ec <ep0_out+0xdc>
 8000766:	2b00      	cmp	r3, #0
 8000768:	d143      	bne.n	80007f2 <ep0_out+0xe2>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 800076a:	2202      	movs	r2, #2
 800076c:	493d      	ldr	r1, [pc, #244]	@ (8000864 <ep0_out+0x154>)
}
 800076e:	b003      	add	sp, #12
 8000770:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000774:	f7ff bf58 	b.w	8000628 <_usb_ep_write>
      if( bytesread >= setup_packet.wLength ){
 8000778:	f8b4 204c 	ldrh.w	r2, [r4, #76]	@ 0x4c
 800077c:	f8b4 304e 	ldrh.w	r3, [r4, #78]	@ 0x4e
 8000780:	429a      	cmp	r2, r3
 8000782:	d9da      	bls.n	800073a <ep0_out+0x2a>
    if(req == (USB_REQ_STANDARD | USB_REQ_DEVICE)){
 8000784:	2800      	cmp	r0, #0
 8000786:	d14a      	bne.n	800081e <ep0_out+0x10e>
      if(setup_packet.bRequest == SET_ADDRESS){
 8000788:	f894 3047 	ldrb.w	r3, [r4, #71]	@ 0x47
 800078c:	2b05      	cmp	r3, #5
 800078e:	d13c      	bne.n	800080a <ep0_out+0xfa>
 8000790:	4602      	mov	r2, r0
 8000792:	4601      	mov	r1, r0
        uint8_t USB_Addr = setup_packet.wValue;
 8000794:	f894 4048 	ldrb.w	r4, [r4, #72]	@ 0x48
 8000798:	f7ff ff46 	bl	8000628 <_usb_ep_write>
        while( (USB_EPx(0) & USB_EPTX_STAT) == USB_EP_TX_VALID ){}
 800079c:	4a32      	ldr	r2, [pc, #200]	@ (8000868 <ep0_out+0x158>)
 800079e:	8813      	ldrh	r3, [r2, #0]
 80007a0:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80007a4:	2b30      	cmp	r3, #48	@ 0x30
 80007a6:	d0fa      	beq.n	800079e <ep0_out+0x8e>
        USB->DADDR = USB_DADDR_EF | USB_Addr;
 80007a8:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 80007ac:	f8a2 404c 	strh.w	r4, [r2, #76]	@ 0x4c
        return;
 80007b0:	e7bf      	b.n	8000732 <ep0_out+0x22>
          const void *data = ZLPP;
 80007b2:	2301      	movs	r3, #1
          uint16_t size = 0;
 80007b4:	f8ad 0002 	strh.w	r0, [sp, #2]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80007b8:	f10d 0202 	add.w	r2, sp, #2
 80007bc:	f8b4 0048 	ldrh.w	r0, [r4, #72]	@ 0x48
 80007c0:	a901      	add	r1, sp, #4
          const void *data = ZLPP;
 80007c2:	9301      	str	r3, [sp, #4]
          usb_class_get_std_descr(setup_packet.wValue, &data, &size);
 80007c4:	f000 fac6 	bl	8000d54 <usb_class_get_std_descr>
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80007c8:	f8b4 304c 	ldrh.w	r3, [r4, #76]	@ 0x4c
 80007cc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
  ep0_in(0x80);
 80007d0:	2080      	movs	r0, #128	@ 0x80
    if(setup_packet.wLength < size) size = setup_packet.wLength;
 80007d2:	429a      	cmp	r2, r3
 80007d4:	bf88      	it	hi
 80007d6:	f8ad 3002 	strhhi.w	r3, [sp, #2]
  ep0_count = size;
 80007da:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80007de:	f8a4 3044 	strh.w	r3, [r4, #68]	@ 0x44
  ep0_buf = (uint8_t*)buf;
 80007e2:	9b01      	ldr	r3, [sp, #4]
 80007e4:	6423      	str	r3, [r4, #64]	@ 0x40
  ep0_in(0x80);
 80007e6:	f7ff ff49 	bl	800067c <ep0_in>
 80007ea:	e7a2      	b.n	8000732 <ep0_out+0x22>
 80007ec:	2201      	movs	r2, #1
 80007ee:	491f      	ldr	r1, [pc, #124]	@ (800086c <ep0_out+0x15c>)
 80007f0:	e7bd      	b.n	800076e <ep0_out+0x5e>
    void *data = ZLPP;
 80007f2:	2301      	movs	r3, #1
 80007f4:	9301      	str	r3, [sp, #4]
    uint16_t size = 0;
 80007f6:	2300      	movs	r3, #0
    usb_class_ep0_in( &setup_packet, &data, &size );
 80007f8:	f10d 0202 	add.w	r2, sp, #2
 80007fc:	a901      	add	r1, sp, #4
 80007fe:	481c      	ldr	r0, [pc, #112]	@ (8000870 <ep0_out+0x160>)
    uint16_t size = 0;
 8000800:	f8ad 3002 	strh.w	r3, [sp, #2]
    usb_class_ep0_in( &setup_packet, &data, &size );
 8000804:	f000 faee 	bl	8000de4 <usb_class_ep0_in>
 8000808:	e7de      	b.n	80007c8 <ep0_out+0xb8>
      }else if(setup_packet.bRequest == SET_CONFIGURATION){
 800080a:	2b09      	cmp	r3, #9
 800080c:	d107      	bne.n	800081e <ep0_out+0x10e>
        configuration = setup_packet.wValue;
 800080e:	f8b4 3048 	ldrh.w	r3, [r4, #72]	@ 0x48
 8000812:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 8000816:	2200      	movs	r2, #0
 8000818:	4611      	mov	r1, r2
 800081a:	4610      	mov	r0, r2
 800081c:	e7a7      	b.n	800076e <ep0_out+0x5e>
    if(!usb_class_ep0_out( &setup_packet, bytesread, rxcount )){
 800081e:	462a      	mov	r2, r5
 8000820:	f8b4 104e 	ldrh.w	r1, [r4, #78]	@ 0x4e
 8000824:	4812      	ldr	r0, [pc, #72]	@ (8000870 <ep0_out+0x160>)
 8000826:	f000 faeb 	bl	8000e00 <usb_class_ep0_out>
 800082a:	b950      	cbnz	r0, 8000842 <ep0_out+0x132>
      ENDP_STAT_RX(0, USB_EP_RX_VALID);
 800082c:	4a0e      	ldr	r2, [pc, #56]	@ (8000868 <ep0_out+0x158>)
 800082e:	8813      	ldrh	r3, [r2, #0]
 8000830:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000834:	049b      	lsls	r3, r3, #18
 8000836:	0c9b      	lsrs	r3, r3, #18
 8000838:	f483 4330 	eor.w	r3, r3, #45056	@ 0xb000
 800083c:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 8000840:	8013      	strh	r3, [r2, #0]
    bytesread += rxcount;
 8000842:	f8b4 304e 	ldrh.w	r3, [r4, #78]	@ 0x4e
 8000846:	441d      	add	r5, r3
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000848:	f8b4 304c 	ldrh.w	r3, [r4, #76]	@ 0x4c
    bytesread += rxcount;
 800084c:	b2ad      	uxth	r5, r5
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 800084e:	42ab      	cmp	r3, r5
    bytesread += rxcount;
 8000850:	f8a4 504e 	strh.w	r5, [r4, #78]	@ 0x4e
    if( bytesread >= setup_packet.wLength )usb_ep_write(0, NULL, 0);
 8000854:	f63f af6d 	bhi.w	8000732 <ep0_out+0x22>
 8000858:	e7dd      	b.n	8000816 <ep0_out+0x106>
 800085a:	bf00      	nop
 800085c:	40006000 	andmi	r6, r0, r0
 8000860:	2000001c 	andcs	r0, r0, ip, lsl r0
 8000864:	08001610 	stmdaeq	r0, {r4, r9, sl, ip}
 8000868:	40005c00 	andmi	r5, r0, r0, lsl #24
 800086c:	2000006c 	andcs	r0, r0, ip, rrx
 8000870:	20000062 	andcs	r0, r0, r2, rrx

08000874 <mic_in_callback>:
volatile uint16_t adc_val = 0;
volatile int16_t adc_buffer[ADC_SIZE];
volatile uint16_t adc_vref = 0;

volatile uint8_t adc_idx = 0;
static void mic_in_callback(uint8_t epnum){
 8000874:	b570      	push	{r4, r5, r6, lr}
  usb_ep_write_double( epnum, (void*)adc_buffer, 2*adc_idx );
 8000876:	4e10      	ldr	r6, [pc, #64]	@ (80008b8 <mic_in_callback+0x44>)
  epnum &= 0x0F;
 8000878:	f000 000f 	and.w	r0, r0, #15
 800087c:	4631      	mov	r1, r6
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 800087e:	0083      	lsls	r3, r0, #2
 8000880:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8000884:	f503 43b8 	add.w	r3, r3, #23552	@ 0x5c00
 8000888:	f811 2b02 	ldrb.w	r2, [r1], #2
 800088c:	881d      	ldrh	r5, [r3, #0]
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 800088e:	881c      	ldrh	r4, [r3, #0]
  uint8_t idx = !!( USB_EPx(epnum) & USB_EP_DTOG_RX );
 8000890:	f3c5 3580 	ubfx	r5, r5, #14, #1
  ENDP_TOG( epnum, USB_EP_DTOG_RX );
 8000894:	f024 04f0 	bic.w	r4, r4, #240	@ 0xf0
 8000898:	0524      	lsls	r4, r4, #20
 800089a:	0d24      	lsrs	r4, r4, #20
 800089c:	f444 4440 	orr.w	r4, r4, #49152	@ 0xc000
 80008a0:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
 80008a4:	801c      	strh	r4, [r3, #0]
  _usb_ep_write(idx, buf, size);
 80008a6:	0052      	lsls	r2, r2, #1
 80008a8:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 80008ac:	f7ff febc 	bl	8000628 <_usb_ep_write>
  adc_idx = 0;
 80008b0:	2300      	movs	r3, #0
 80008b2:	7033      	strb	r3, [r6, #0]
};
 80008b4:	bd70      	pop	{r4, r5, r6, pc}
 80008b6:	bf00      	nop
 80008b8:	20000070 	andcs	r0, r0, r0, ror r0

080008bc <adc_outfilter>:

#define OFILTER_PWR	8
#define OFILTER_MLT	4
uint16_t adc_outfilter(uint16_t curval){
  static uint32_t filter = (2048<<(OFILTER_PWR+OFILTER_MLT));
  filter += (curval << OFILTER_MLT) - (filter >> OFILTER_PWR);
 80008bc:	4a04      	ldr	r2, [pc, #16]	@ (80008d0 <adc_outfilter+0x14>)
 80008be:	6813      	ldr	r3, [r2, #0]
 80008c0:	eba3 2313 	sub.w	r3, r3, r3, lsr #8
 80008c4:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 80008c8:	6010      	str	r0, [r2, #0]
  return (filter>>OFILTER_PWR);
}
 80008ca:	f3c0 200f 	ubfx	r0, r0, #8, #16
 80008ce:	4770      	bx	lr
 80008d0:	20000004 	andcs	r0, r0, r4

080008d4 <midfilter>:
}

#define MIDFILTER_PWR	10
uint16_t midfilter(uint16_t curval){
  static uint32_t filter = (2048<<MIDFILTER_PWR);
  filter += curval - (filter>>MIDFILTER_PWR);
 80008d4:	4a04      	ldr	r2, [pc, #16]	@ (80008e8 <midfilter+0x14>)
 80008d6:	6853      	ldr	r3, [r2, #4]
 80008d8:	eba3 2393 	sub.w	r3, r3, r3, lsr #10
 80008dc:	4418      	add	r0, r3
 80008de:	6050      	str	r0, [r2, #4]
  return (filter >> MIDFILTER_PWR);
}
 80008e0:	f3c0 208f 	ubfx	r0, r0, #10, #16
 80008e4:	4770      	bx	lr
 80008e6:	bf00      	nop
 80008e8:	20000004 	andcs	r0, r0, r4

080008ec <adc_infilter>:
#define INFILTER_PWR 0
uint16_t adc_infilter(uint16_t curval){
  static uint32_t filter = (2048<<INFILTER_PWR);
  filter += curval - (filter>>INFILTER_PWR);
  return (filter >> INFILTER_PWR);
}
 80008ec:	4770      	bx	lr

080008ee <ADC1_2_IRQHandler>:

volatile uint8_t adc_timeH = 0;
volatile uint16_t adc_timeL = 0;
void ADC1_2_IRQHandler(){
 80008ee:	b510      	push	{r4, lr}
  static uint8_t oversampl_cnt = 0;
  static uint16_t curval = 0;
  
  //Read ADC with oversampling
  if(oversampl_cnt == 0)curval = 0;
 80008f0:	4928      	ldr	r1, [pc, #160]	@ (8000994 <ADC1_2_IRQHandler+0xa6>)
 80008f2:	4a29      	ldr	r2, [pc, #164]	@ (8000998 <ADC1_2_IRQHandler+0xaa>)
 80008f4:	f891 305a 	ldrb.w	r3, [r1, #90]	@ 0x5a
 80008f8:	b933      	cbnz	r3, 8000908 <ADC1_2_IRQHandler+0x1a>
  curval += ADC2->DR;
 80008fa:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 80008fc:	f8a1 305c 	strh.w	r3, [r1, #92]	@ 0x5c
  oversampl_cnt++;
 8000900:	2301      	movs	r3, #1
 8000902:	f881 305a 	strb.w	r3, [r1, #90]	@ 0x5a
  //adc_timeH - count of full conversions
  if(adc_timeH<255)adc_timeH++;
  adc_timeL = TIM2->CNT;

  ADC2->SR &=~ADC_SR_EOC;
}
 8000906:	bd10      	pop	{r4, pc}
  curval += ADC2->DR;
 8000908:	6cd4      	ldr	r4, [r2, #76]	@ 0x4c
 800090a:	f8b1 205c 	ldrh.w	r2, [r1, #92]	@ 0x5c
  oversampl_cnt++;
 800090e:	3301      	adds	r3, #1
  curval += ADC2->DR;
 8000910:	4414      	add	r4, r2
  oversampl_cnt++;
 8000912:	b2db      	uxtb	r3, r3
  curval += ADC2->DR;
 8000914:	b2a4      	uxth	r4, r4
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 8000916:	2b03      	cmp	r3, #3
  curval += ADC2->DR;
 8000918:	f8a1 405c 	strh.w	r4, [r1, #92]	@ 0x5c
  if(oversampl_cnt < OVERSAMPL_COUNT)return;
 800091c:	d9f1      	bls.n	8000902 <ADC1_2_IRQHandler+0x14>
  oversampl_cnt = 0;
 800091e:	2300      	movs	r3, #0
  curval /= OVERSAMPL_COUNT;
 8000920:	08a4      	lsrs	r4, r4, #2
  uint16_t adc = adc_outfilter(curval);
 8000922:	4620      	mov	r0, r4
  oversampl_cnt = 0;
 8000924:	f881 305a 	strb.w	r3, [r1, #90]	@ 0x5a
  curval /= OVERSAMPL_COUNT;
 8000928:	f8a1 405c 	strh.w	r4, [r1, #92]	@ 0x5c
  uint16_t adc = adc_outfilter(curval);
 800092c:	f7ff ffc6 	bl	80008bc <adc_outfilter>
  adc_val = (uint32_t)120*adc/adc_vref; //Vref=1.2V ; fixed-point 2 dec.digts frac (*100)
 8000930:	2278      	movs	r2, #120	@ 0x78
 8000932:	4350      	muls	r0, r2
 8000934:	f8b1 305e 	ldrh.w	r3, [r1, #94]	@ 0x5e
 8000938:	b29b      	uxth	r3, r3
 800093a:	fbb0 f0f3 	udiv	r0, r0, r3
 800093e:	b280      	uxth	r0, r0
 8000940:	f8a1 0060 	strh.w	r0, [r1, #96]	@ 0x60
  int32_t midval = midfilter(cval);
 8000944:	4620      	mov	r0, r4
 8000946:	f7ff ffc5 	bl	80008d4 <midfilter>
  if(adc_idx < ADC_SIZE){
 800094a:	780b      	ldrb	r3, [r1, #0]
 800094c:	2b2b      	cmp	r3, #43	@ 0x2b
 800094e:	d80a      	bhi.n	8000966 <ADC1_2_IRQHandler+0x78>
    adc_buffer[adc_idx] = midval;
 8000950:	780b      	ldrb	r3, [r1, #0]
  midval = (((int32_t)cval)) - midval;
 8000952:	1a24      	subs	r4, r4, r0
  midval <<= 3; //ADC resolution is 0-4095. midval=0-4095. Diff=-4095..+4095 (2**12); Output = -32768..+32767 (2**15) => Kampl=8
 8000954:	00e4      	lsls	r4, r4, #3
    adc_buffer[adc_idx] = midval;
 8000956:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 800095a:	b224      	sxth	r4, r4
 800095c:	805c      	strh	r4, [r3, #2]
    adc_idx++;
 800095e:	780b      	ldrb	r3, [r1, #0]
 8000960:	3301      	adds	r3, #1
 8000962:	b2db      	uxtb	r3, r3
 8000964:	700b      	strb	r3, [r1, #0]
  if(adc_timeH<255)adc_timeH++;
 8000966:	f891 3062 	ldrb.w	r3, [r1, #98]	@ 0x62
  ADC2->SR &=~ADC_SR_EOC;
 800096a:	4a0b      	ldr	r2, [pc, #44]	@ (8000998 <ADC1_2_IRQHandler+0xaa>)
  if(adc_timeH<255)adc_timeH++;
 800096c:	2bff      	cmp	r3, #255	@ 0xff
 800096e:	bf1f      	itttt	ne
 8000970:	f891 3062 	ldrbne.w	r3, [r1, #98]	@ 0x62
 8000974:	3301      	addne	r3, #1
 8000976:	b2db      	uxtbne	r3, r3
 8000978:	f881 3062 	strbne.w	r3, [r1, #98]	@ 0x62
  adc_timeL = TIM2->CNT;
 800097c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000980:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000982:	b29b      	uxth	r3, r3
 8000984:	f8a1 3064 	strh.w	r3, [r1, #100]	@ 0x64
  ADC2->SR &=~ADC_SR_EOC;
 8000988:	6813      	ldr	r3, [r2, #0]
 800098a:	f023 0302 	bic.w	r3, r3, #2
 800098e:	6013      	str	r3, [r2, #0]
 8000990:	e7b9      	b.n	8000906 <ADC1_2_IRQHandler+0x18>
 8000992:	bf00      	nop
 8000994:	20000070 	andcs	r0, r0, r0, ror r0
 8000998:	40012800 	andmi	r2, r1, r0, lsl #16

0800099c <mic_sof>:

void mic_sof(){
  if(adc_timeH > ADC_SIZE){
 800099c:	4a1a      	ldr	r2, [pc, #104]	@ (8000a08 <mic_sof+0x6c>)
 800099e:	f892 3062 	ldrb.w	r3, [r2, #98]	@ 0x62
 80009a2:	2b2c      	cmp	r3, #44	@ 0x2c
 80009a4:	d909      	bls.n	80009ba <mic_sof+0x1e>
    if(TIM2->ARR < TIM2_ARR_MAX) TIM2->ARR++;
 80009a6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80009aa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80009ac:	f5b1 7f4c 	cmp.w	r1, #816	@ 0x330
 80009b0:	d21f      	bcs.n	80009f2 <mic_sof+0x56>
  }else if(adc_timeH < ADC_SIZE){
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
  }else{
    if(adc_timeL > (TIM2->ARR/2)){
      TIM2->ARR++;
 80009b2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80009b4:	3101      	adds	r1, #1
    }else if(adc_timeL < (TIM2->ARR*3/4)){
      TIM2->ARR--;
 80009b6:	62d9      	str	r1, [r3, #44]	@ 0x2c
 80009b8:	e01b      	b.n	80009f2 <mic_sof+0x56>
  }else if(adc_timeH < ADC_SIZE){
 80009ba:	f892 3062 	ldrb.w	r3, [r2, #98]	@ 0x62
 80009be:	2b2b      	cmp	r3, #43	@ 0x2b
 80009c0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80009c4:	d805      	bhi.n	80009d2 <mic_sof+0x36>
    if(TIM2->ARR > TIM2_ARR_MIN) TIM2->ARR--;
 80009c6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80009c8:	2933      	cmp	r1, #51	@ 0x33
 80009ca:	d912      	bls.n	80009f2 <mic_sof+0x56>
      TIM2->ARR--;
 80009cc:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80009ce:	3901      	subs	r1, #1
 80009d0:	e7f1      	b.n	80009b6 <mic_sof+0x1a>
    if(adc_timeL > (TIM2->ARR/2)){
 80009d2:	f8b2 1064 	ldrh.w	r1, [r2, #100]	@ 0x64
 80009d6:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 80009d8:	b289      	uxth	r1, r1
 80009da:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 80009de:	d8e8      	bhi.n	80009b2 <mic_sof+0x16>
    }else if(adc_timeL < (TIM2->ARR*3/4)){
 80009e0:	f8b2 0064 	ldrh.w	r0, [r2, #100]	@ 0x64
 80009e4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80009e6:	b280      	uxth	r0, r0
 80009e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80009ec:	ebb0 0f91 	cmp.w	r0, r1, lsr #2
 80009f0:	d3ec      	bcc.n	80009cc <mic_sof+0x30>
    }
  }
  TIM2->CNT = 0;
 80009f2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80009f6:	2000      	movs	r0, #0
 80009f8:	6258      	str	r0, [r3, #36]	@ 0x24
  TIM2->CR1 |= TIM_CR1_URS;
 80009fa:	6819      	ldr	r1, [r3, #0]
 80009fc:	f041 0104 	orr.w	r1, r1, #4
 8000a00:	6019      	str	r1, [r3, #0]
  adc_timeH = 0;
 8000a02:	f882 0062 	strb.w	r0, [r2, #98]	@ 0x62
}
 8000a06:	4770      	bx	lr
 8000a08:	20000070 	andcs	r0, r0, r0, ror r0

08000a0c <hid_ep0_in>:
    FEATURE_HID16( HID_DATA |  HID_VAR | HID_ABS | HID_BUF ),
  )
};

char hid_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( req->bmRequestType == (USB_REQ_INTERFACE | 0x80) ){
 8000a0c:	7803      	ldrb	r3, [r0, #0]
 8000a0e:	2b81      	cmp	r3, #129	@ 0x81
 8000a10:	d108      	bne.n	8000a24 <hid_ep0_in+0x18>
    if( req->bRequest == GET_DESCRIPTOR ){
 8000a12:	7843      	ldrb	r3, [r0, #1]
 8000a14:	2b06      	cmp	r3, #6
 8000a16:	d103      	bne.n	8000a20 <hid_ep0_in+0x14>
      if( req->wValue == HID_REPORT_DESCRIPTOR){
 8000a18:	8843      	ldrh	r3, [r0, #2]
 8000a1a:	f5b3 5f08 	cmp.w	r3, #8704	@ 0x2200
 8000a1e:	d011      	beq.n	8000a44 <hid_ep0_in+0x38>
      *data = (void*)&resdata;
      *size = sizeof(hid_data_t);
      return 1;
    }
  }
  return 0;
 8000a20:	2000      	movs	r0, #0
}
 8000a22:	4770      	bx	lr
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE | 0x80) ){
 8000a24:	2ba1      	cmp	r3, #161	@ 0xa1
 8000a26:	d1fb      	bne.n	8000a20 <hid_ep0_in+0x14>
    if( req->bRequest == HIDREQ_GET_REPORT ){
 8000a28:	7843      	ldrb	r3, [r0, #1]
 8000a2a:	2b01      	cmp	r3, #1
 8000a2c:	d1f8      	bne.n	8000a20 <hid_ep0_in+0x14>
      resdata.data = adc_val;
 8000a2e:	4b07      	ldr	r3, [pc, #28]	@ (8000a4c <hid_ep0_in+0x40>)
 8000a30:	f8b3 0060 	ldrh.w	r0, [r3, #96]	@ 0x60
 8000a34:	b280      	uxth	r0, r0
 8000a36:	f823 0f66 	strh.w	r0, [r3, #102]!
      return 1;
 8000a3a:	2002      	movs	r0, #2
      *data = (void*)&resdata;
 8000a3c:	600b      	str	r3, [r1, #0]
      *size = sizeof(hid_data_t);
 8000a3e:	8010      	strh	r0, [r2, #0]
        return 1;
 8000a40:	2001      	movs	r0, #1
 8000a42:	4770      	bx	lr
 8000a44:	2015      	movs	r0, #21
 8000a46:	4b02      	ldr	r3, [pc, #8]	@ (8000a50 <hid_ep0_in+0x44>)
 8000a48:	e7f8      	b.n	8000a3c <hid_ep0_in+0x30>
 8000a4a:	bf00      	nop
 8000a4c:	20000070 	andcs	r0, r0, r0, ror r0
 8000a50:	08001612 	stmdaeq	r0, {r1, r4, r9, sl, ip}

08000a54 <hid_ep0_out>:

char hid_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000a54:	b510      	push	{r4, lr}
  if( req->bmRequestType == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8000a56:	7803      	ldrb	r3, [r0, #0]
 8000a58:	2b21      	cmp	r3, #33	@ 0x21
 8000a5a:	f040 80b6 	bne.w	8000bca <hid_ep0_out+0x176>
    if( req->bRequest == HIDREQ_SET_REPORT ){
 8000a5e:	7843      	ldrb	r3, [r0, #1]
 8000a60:	2b09      	cmp	r3, #9
 8000a62:	f040 80b2 	bne.w	8000bca <hid_ep0_out+0x176>
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000a66:	2a00      	cmp	r2, #0
 8000a68:	f000 80ad 	beq.w	8000bc6 <hid_ep0_out+0x172>
      //анализом запроса не заморачиваемя. Считаем, что ничего кроме нужного не придет
      if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000a6c:	2a02      	cmp	r2, #2
 8000a6e:	f040 80ac 	bne.w	8000bca <hid_ep0_out+0x176>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8000a72:	4c57      	ldr	r4, [pc, #348]	@ (8000bd0 <hid_ep0_out+0x17c>)
 8000a74:	2001      	movs	r0, #1
 8000a76:	f104 0168 	add.w	r1, r4, #104	@ 0x68
 8000a7a:	f7ff fe1b 	bl	80006b4 <_usb_ep_read>
      usb_ep_read(0, (void*)&hid_data);
      
      if(hid_data.data & (1<<0 ))GPO_ON( KBD_0  ); else GPO_OFF( KBD_0  );
 8000a7e:	f8b4 3068 	ldrh.w	r3, [r4, #104]	@ 0x68
 8000a82:	4a54      	ldr	r2, [pc, #336]	@ (8000bd4 <hid_ep0_out+0x180>)
 8000a84:	f013 0f01 	tst.w	r3, #1
 8000a88:	bf14      	ite	ne
 8000a8a:	f44f 4380 	movne.w	r3, #16384	@ 0x4000
 8000a8e:	f04f 4380 	moveq.w	r3, #1073741824	@ 0x40000000
 8000a92:	6113      	str	r3, [r2, #16]
      if(hid_data.data & (1<<1 ))GPO_ON( KBD_1  ); else GPO_OFF( KBD_1  );
 8000a94:	f8b4 3068 	ldrh.w	r3, [r4, #104]	@ 0x68
 8000a98:	f013 0f02 	tst.w	r3, #2
 8000a9c:	bf14      	ite	ne
 8000a9e:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8000aa2:	f04f 7180 	moveq.w	r1, #16777216	@ 0x1000000
 8000aa6:	4b4c      	ldr	r3, [pc, #304]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000aa8:	6119      	str	r1, [r3, #16]
      if(hid_data.data & (1<<2 ))GPO_ON( KBD_2  ); else GPO_OFF( KBD_2  );
 8000aaa:	f8b4 3068 	ldrh.w	r3, [r4, #104]	@ 0x68
 8000aae:	f013 0f04 	tst.w	r3, #4
 8000ab2:	bf14      	ite	ne
 8000ab4:	2108      	movne	r1, #8
 8000ab6:	f44f 2100 	moveq.w	r1, #524288	@ 0x80000
 8000aba:	4b48      	ldr	r3, [pc, #288]	@ (8000bdc <hid_ep0_out+0x188>)
 8000abc:	6119      	str	r1, [r3, #16]
      if(hid_data.data & (1<<3 ))GPO_ON( KBD_3  ); else GPO_OFF( KBD_3  );
 8000abe:	f8b4 1068 	ldrh.w	r1, [r4, #104]	@ 0x68
 8000ac2:	0709      	lsls	r1, r1, #28
 8000ac4:	bf4c      	ite	mi
 8000ac6:	2104      	movmi	r1, #4
 8000ac8:	f44f 2180 	movpl.w	r1, #262144	@ 0x40000
 8000acc:	6119      	str	r1, [r3, #16]
      if(hid_data.data & (1<<4 ))GPO_ON( KBD_4  ); else GPO_OFF( KBD_4  );
 8000ace:	f8b4 1068 	ldrh.w	r1, [r4, #104]	@ 0x68
 8000ad2:	06c8      	lsls	r0, r1, #27
 8000ad4:	bf4c      	ite	mi
 8000ad6:	f44f 5100 	movmi.w	r1, #8192	@ 0x2000
 8000ada:	f04f 5100 	movpl.w	r1, #536870912	@ 0x20000000
 8000ade:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<5 ))GPO_ON( KBD_5  ); else GPO_OFF( KBD_5  );
 8000ae0:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000ae4:	f012 0f20 	tst.w	r2, #32
 8000ae8:	bf14      	ite	ne
 8000aea:	2180      	movne	r1, #128	@ 0x80
 8000aec:	f44f 0100 	moveq.w	r1, #8388608	@ 0x800000
 8000af0:	4a39      	ldr	r2, [pc, #228]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000af2:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<6 ))GPO_ON( KBD_6  ); else GPO_OFF( KBD_6  );
 8000af4:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000af8:	0651      	lsls	r1, r2, #25
 8000afa:	bf4c      	ite	mi
 8000afc:	2201      	movmi	r2, #1
 8000afe:	f44f 3280 	movpl.w	r2, #65536	@ 0x10000
 8000b02:	611a      	str	r2, [r3, #16]
      if(hid_data.data & (1<<7 ))GPO_ON( KBD_7  ); else GPO_OFF( KBD_7  );
 8000b04:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b08:	0612      	lsls	r2, r2, #24
 8000b0a:	bf4c      	ite	mi
 8000b0c:	2202      	movmi	r2, #2
 8000b0e:	f44f 3200 	movpl.w	r2, #131072	@ 0x20000
 8000b12:	611a      	str	r2, [r3, #16]
      
      if(hid_data.data & (1<<8 ))GPO_ON( KBD_8  ); else GPO_OFF( KBD_8  );
 8000b14:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b18:	f412 7f80 	tst.w	r2, #256	@ 0x100
 8000b1c:	bf14      	ite	ne
 8000b1e:	2110      	movne	r1, #16
 8000b20:	f44f 1180 	moveq.w	r1, #1048576	@ 0x100000
 8000b24:	4a2c      	ldr	r2, [pc, #176]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000b26:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<9 ))GPO_ON( KBD_9  ); else GPO_OFF( KBD_9  );
 8000b28:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b2c:	f412 7f00 	tst.w	r2, #512	@ 0x200
 8000b30:	bf14      	ite	ne
 8000b32:	2108      	movne	r1, #8
 8000b34:	f44f 2100 	moveq.w	r1, #524288	@ 0x80000
 8000b38:	4a27      	ldr	r2, [pc, #156]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000b3a:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<10))GPO_ON( KBD_10 ); else GPO_OFF( KBD_10 );
 8000b3c:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b40:	f412 6f80 	tst.w	r2, #1024	@ 0x400
 8000b44:	bf14      	ite	ne
 8000b46:	2101      	movne	r1, #1
 8000b48:	f44f 3180 	moveq.w	r1, #65536	@ 0x10000
 8000b4c:	4a22      	ldr	r2, [pc, #136]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000b4e:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<11))GPO_ON( KBD_11 ); else GPO_OFF( KBD_11 );
 8000b50:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b54:	f412 6f00 	tst.w	r2, #2048	@ 0x800
 8000b58:	bf14      	ite	ne
 8000b5a:	2102      	movne	r1, #2
 8000b5c:	f44f 3100 	moveq.w	r1, #131072	@ 0x20000
 8000b60:	4a1d      	ldr	r2, [pc, #116]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000b62:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<12))GPO_ON( KBD_12 ); else GPO_OFF( KBD_12 );
 8000b64:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b68:	f412 5f80 	tst.w	r2, #4096	@ 0x1000
 8000b6c:	bf14      	ite	ne
 8000b6e:	2140      	movne	r1, #64	@ 0x40
 8000b70:	f44f 0180 	moveq.w	r1, #4194304	@ 0x400000
 8000b74:	4a18      	ldr	r2, [pc, #96]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000b76:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<13))GPO_ON( KBD_13 ); else GPO_OFF( KBD_13 );
 8000b78:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b7c:	f412 5f00 	tst.w	r2, #8192	@ 0x2000
 8000b80:	bf14      	ite	ne
 8000b82:	2120      	movne	r1, #32
 8000b84:	f44f 1100 	moveq.w	r1, #2097152	@ 0x200000
 8000b88:	4a13      	ldr	r2, [pc, #76]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000b8a:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<14))GPO_ON( KBD_14 ); else GPO_OFF( KBD_14 );
 8000b8c:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000b90:	f412 4f80 	tst.w	r2, #16384	@ 0x4000
 8000b94:	bf14      	ite	ne
 8000b96:	f44f 6100 	movne.w	r1, #2048	@ 0x800
 8000b9a:	f04f 6100 	moveq.w	r1, #134217728	@ 0x8000000
 8000b9e:	4a0e      	ldr	r2, [pc, #56]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000ba0:	6111      	str	r1, [r2, #16]
      if(hid_data.data & (1<<15))GPO_ON( KBD_15 ); else GPO_OFF( KBD_15 );
 8000ba2:	f8b4 2068 	ldrh.w	r2, [r4, #104]	@ 0x68
 8000ba6:	f412 4f00 	tst.w	r2, #32768	@ 0x8000
 8000baa:	bf14      	ite	ne
 8000bac:	f44f 6180 	movne.w	r1, #1024	@ 0x400
 8000bb0:	f04f 6180 	moveq.w	r1, #67108864	@ 0x4000000
 8000bb4:	4a08      	ldr	r2, [pc, #32]	@ (8000bd8 <hid_ep0_out+0x184>)
 8000bb6:	6111      	str	r1, [r2, #16]
      
      GPO_ON( BLED );
 8000bb8:	2240      	movs	r2, #64	@ 0x40
 8000bba:	611a      	str	r2, [r3, #16]
#ifndef _SYSTICK_H_
#define _SYSTICK_H_

#include <inttypes.h>
extern volatile uint32_t systick_internal;
inline uint32_t systick_ms(){return systick_internal;}
 8000bbc:	4b08      	ldr	r3, [pc, #32]	@ (8000be0 <hid_ep0_out+0x18c>)
 8000bbe:	681b      	ldr	r3, [r3, #0]
      hid_timeout = systick_ms() + HID_TIMEOUT_MS;
 8000bc0:	f503 737a 	add.w	r3, r3, #1000	@ 0x3e8
 8000bc4:	66e3      	str	r3, [r4, #108]	@ 0x6c
      if(rx_size == 0)return 1; //прочитан только запрос - не интересно
 8000bc6:	2001      	movs	r0, #1
      
      return 1;
    }
  }
  return 0;
}
 8000bc8:	bd10      	pop	{r4, pc}
      if(rx_size != sizeof(hid_data))return 0; //защита если вдруг придет мусор
 8000bca:	2000      	movs	r0, #0
 8000bcc:	e7fc      	b.n	8000bc8 <hid_ep0_out+0x174>
 8000bce:	bf00      	nop
 8000bd0:	20000070 	andcs	r0, r0, r0, ror r0
 8000bd4:	40011000 	andmi	r1, r1, r0
 8000bd8:	40010c00 	andmi	r0, r1, r0, lsl #24
 8000bdc:	40010800 	andmi	r0, r1, r0, lsl #16
 8000be0:	200000e4 	andcs	r0, r0, r4, ror #1

08000be4 <hid_init>:

void hid_init(){
  jtag_disable();
 8000be4:	4a4d      	ldr	r2, [pc, #308]	@ (8000d1c <hid_init+0x138>)
void hid_init(){
 8000be6:	b510      	push	{r4, lr}
  jtag_disable();
 8000be8:	6993      	ldr	r3, [r2, #24]
  GPIO_config( KBD_0  ); GPIO_config( KBD_1  ); GPIO_config( KBD_2  ); GPIO_config( KBD_3  );
 8000bea:	494d      	ldr	r1, [pc, #308]	@ (8000d20 <hid_init+0x13c>)
  jtag_disable();
 8000bec:	f043 0301 	orr.w	r3, r3, #1
 8000bf0:	6193      	str	r3, [r2, #24]
 8000bf2:	f5a2 3288 	sub.w	r2, r2, #69632	@ 0x11000
 8000bf6:	6853      	ldr	r3, [r2, #4]
  GPIO_config( KBD_4  ); GPIO_config( KBD_5  ); GPIO_config( KBD_6  ); GPIO_config( KBD_7  );
  GPIO_config( KBD_8  ); GPIO_config( KBD_9  ); GPIO_config( KBD_10 ); GPIO_config( KBD_11 );
  GPIO_config( KBD_12 ); GPIO_config( KBD_13 ); GPIO_config( KBD_14 ); GPIO_config( KBD_15 );
  
  GPO_OFF( KBD_0  ); GPO_OFF( KBD_1  ); GPO_OFF( KBD_2  ); GPO_OFF( KBD_3  );
 8000bf8:	f44f 2400 	mov.w	r4, #524288	@ 0x80000
  jtag_disable();
 8000bfc:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000c00:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000c04:	6053      	str	r3, [r2, #4]
  GPIO_config( KBD_0  ); GPIO_config( KBD_1  ); GPIO_config( KBD_2  ); GPIO_config( KBD_3  );
 8000c06:	684b      	ldr	r3, [r1, #4]
 8000c08:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8000c0c:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
 8000c10:	604b      	str	r3, [r1, #4]
 8000c12:	4b44      	ldr	r3, [pc, #272]	@ (8000d24 <hid_init+0x140>)
 8000c14:	685a      	ldr	r2, [r3, #4]
 8000c16:	f022 020f 	bic.w	r2, r2, #15
 8000c1a:	f042 0203 	orr.w	r2, r2, #3
 8000c1e:	605a      	str	r2, [r3, #4]
 8000c20:	4a41      	ldr	r2, [pc, #260]	@ (8000d28 <hid_init+0x144>)
 8000c22:	6810      	ldr	r0, [r2, #0]
 8000c24:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 8000c28:	f440 5040 	orr.w	r0, r0, #12288	@ 0x3000
 8000c2c:	6010      	str	r0, [r2, #0]
 8000c2e:	6810      	ldr	r0, [r2, #0]
 8000c30:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 8000c34:	f440 7040 	orr.w	r0, r0, #768	@ 0x300
 8000c38:	6010      	str	r0, [r2, #0]
  GPIO_config( KBD_4  ); GPIO_config( KBD_5  ); GPIO_config( KBD_6  ); GPIO_config( KBD_7  );
 8000c3a:	6848      	ldr	r0, [r1, #4]
 8000c3c:	f420 0070 	bic.w	r0, r0, #15728640	@ 0xf00000
 8000c40:	f440 1040 	orr.w	r0, r0, #3145728	@ 0x300000
 8000c44:	6048      	str	r0, [r1, #4]
 8000c46:	6818      	ldr	r0, [r3, #0]
 8000c48:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
 8000c4c:	f040 5040 	orr.w	r0, r0, #805306368	@ 0x30000000
 8000c50:	6018      	str	r0, [r3, #0]
 8000c52:	6810      	ldr	r0, [r2, #0]
 8000c54:	f020 000f 	bic.w	r0, r0, #15
 8000c58:	f040 0003 	orr.w	r0, r0, #3
 8000c5c:	6010      	str	r0, [r2, #0]
 8000c5e:	6810      	ldr	r0, [r2, #0]
 8000c60:	f020 00f0 	bic.w	r0, r0, #240	@ 0xf0
 8000c64:	f040 0030 	orr.w	r0, r0, #48	@ 0x30
 8000c68:	6010      	str	r0, [r2, #0]
  GPIO_config( KBD_8  ); GPIO_config( KBD_9  ); GPIO_config( KBD_10 ); GPIO_config( KBD_11 );
 8000c6a:	6818      	ldr	r0, [r3, #0]
 8000c6c:	f420 2070 	bic.w	r0, r0, #983040	@ 0xf0000
 8000c70:	f440 3040 	orr.w	r0, r0, #196608	@ 0x30000
 8000c74:	6018      	str	r0, [r3, #0]
 8000c76:	6818      	ldr	r0, [r3, #0]
 8000c78:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 8000c7c:	f440 5040 	orr.w	r0, r0, #12288	@ 0x3000
 8000c80:	6018      	str	r0, [r3, #0]
 8000c82:	6818      	ldr	r0, [r3, #0]
 8000c84:	f020 000f 	bic.w	r0, r0, #15
 8000c88:	f040 0003 	orr.w	r0, r0, #3
 8000c8c:	6018      	str	r0, [r3, #0]
 8000c8e:	6818      	ldr	r0, [r3, #0]
 8000c90:	f020 00f0 	bic.w	r0, r0, #240	@ 0xf0
 8000c94:	f040 0030 	orr.w	r0, r0, #48	@ 0x30
 8000c98:	6018      	str	r0, [r3, #0]
  GPIO_config( KBD_12 ); GPIO_config( KBD_13 ); GPIO_config( KBD_14 ); GPIO_config( KBD_15 );
 8000c9a:	6818      	ldr	r0, [r3, #0]
 8000c9c:	f020 6070 	bic.w	r0, r0, #251658240	@ 0xf000000
 8000ca0:	f040 7040 	orr.w	r0, r0, #50331648	@ 0x3000000
 8000ca4:	6018      	str	r0, [r3, #0]
 8000ca6:	6818      	ldr	r0, [r3, #0]
 8000ca8:	f420 0070 	bic.w	r0, r0, #15728640	@ 0xf00000
 8000cac:	f440 1040 	orr.w	r0, r0, #3145728	@ 0x300000
 8000cb0:	6018      	str	r0, [r3, #0]
 8000cb2:	6858      	ldr	r0, [r3, #4]
 8000cb4:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 8000cb8:	f440 5040 	orr.w	r0, r0, #12288	@ 0x3000
 8000cbc:	6058      	str	r0, [r3, #4]
 8000cbe:	6858      	ldr	r0, [r3, #4]
 8000cc0:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
 8000cc4:	f440 7040 	orr.w	r0, r0, #768	@ 0x300
 8000cc8:	6058      	str	r0, [r3, #4]
  GPO_OFF( KBD_0  ); GPO_OFF( KBD_1  ); GPO_OFF( KBD_2  ); GPO_OFF( KBD_3  );
 8000cca:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8000cce:	6108      	str	r0, [r1, #16]
 8000cd0:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
 8000cd4:	6118      	str	r0, [r3, #16]
 8000cd6:	f44f 2080 	mov.w	r0, #262144	@ 0x40000
 8000cda:	6114      	str	r4, [r2, #16]
 8000cdc:	6110      	str	r0, [r2, #16]
  GPO_OFF( KBD_4  ); GPO_OFF( KBD_5  ); GPO_OFF( KBD_6  ); GPO_OFF( KBD_7  );
 8000cde:	f04f 5000 	mov.w	r0, #536870912	@ 0x20000000
 8000ce2:	6108      	str	r0, [r1, #16]
 8000ce4:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
 8000ce8:	f44f 3080 	mov.w	r0, #65536	@ 0x10000
 8000cec:	6119      	str	r1, [r3, #16]
 8000cee:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 8000cf2:	6110      	str	r0, [r2, #16]
 8000cf4:	6111      	str	r1, [r2, #16]
  GPO_OFF( KBD_8  ); GPO_OFF( KBD_9  ); GPO_OFF( KBD_10 ); GPO_OFF( KBD_11 );
 8000cf6:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8000cfa:	611a      	str	r2, [r3, #16]
  GPO_OFF( KBD_12 ); GPO_OFF( KBD_13 ); GPO_OFF( KBD_14 ); GPO_OFF( KBD_15 );
 8000cfc:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
  GPO_OFF( KBD_8  ); GPO_OFF( KBD_9  ); GPO_OFF( KBD_10 ); GPO_OFF( KBD_11 );
 8000d00:	611c      	str	r4, [r3, #16]
 8000d02:	6118      	str	r0, [r3, #16]
 8000d04:	6119      	str	r1, [r3, #16]
  GPO_OFF( KBD_12 ); GPO_OFF( KBD_13 ); GPO_OFF( KBD_14 ); GPO_OFF( KBD_15 );
 8000d06:	611a      	str	r2, [r3, #16]
 8000d08:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000d0c:	611a      	str	r2, [r3, #16]
 8000d0e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8000d12:	611a      	str	r2, [r3, #16]
 8000d14:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000d18:	611a      	str	r2, [r3, #16]
}
 8000d1a:	bd10      	pop	{r4, pc}
 8000d1c:	40021000 	andmi	r1, r2, r0
 8000d20:	40011000 	andmi	r1, r1, r0
 8000d24:	40010c00 	andmi	r0, r1, r0, lsl #24
 8000d28:	40010800 	andmi	r0, r1, r0, lsl #16

08000d2c <hid_poll>:
 8000d2c:	4b06      	ldr	r3, [pc, #24]	@ (8000d48 <hid_poll+0x1c>)
 8000d2e:	681a      	ldr	r2, [r3, #0]

void hid_poll(){
  if(systick_ms() > hid_timeout){
 8000d30:	4b06      	ldr	r3, [pc, #24]	@ (8000d4c <hid_poll+0x20>)
 8000d32:	6ed9      	ldr	r1, [r3, #108]	@ 0x6c
 8000d34:	4291      	cmp	r1, r2
 8000d36:	d206      	bcs.n	8000d46 <hid_poll+0x1a>
    hid_timeout = 0xFFFFFFFF;
 8000d38:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000d3c:	66da      	str	r2, [r3, #108]	@ 0x6c
    GPO_OFF(BLED);
 8000d3e:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000d42:	4b03      	ldr	r3, [pc, #12]	@ (8000d50 <hid_poll+0x24>)
 8000d44:	611a      	str	r2, [r3, #16]
  }
}
 8000d46:	4770      	bx	lr
 8000d48:	200000e4 	andcs	r0, r0, r4, ror #1
 8000d4c:	20000070 	andcs	r0, r0, r0, ror r0
 8000d50:	40010800 	andmi	r0, r1, r0, lsl #16

08000d54 <usb_class_get_std_descr>:
  
  )
};

void usb_class_get_std_descr(uint16_t descr, const void **data, uint16_t *size){
  switch(descr & 0xFF00){
 8000d54:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8000d58:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8000d5c:	d019      	beq.n	8000d92 <usb_class_get_std_descr+0x3e>
 8000d5e:	d806      	bhi.n	8000d6e <usb_class_get_std_descr+0x1a>
 8000d60:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8000d64:	d007      	beq.n	8000d76 <usb_class_get_std_descr+0x22>
 8000d66:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000d6a:	d009      	beq.n	8000d80 <usb_class_get_std_descr+0x2c>
 8000d6c:	4770      	bx	lr
 8000d6e:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8000d72:	d00a      	beq.n	8000d8a <usb_class_get_std_descr+0x36>
 8000d74:	4770      	bx	lr
    case DEVICE_DESCRIPTOR:
      *data = &USB_DeviceDescriptor;
 8000d76:	4b12      	ldr	r3, [pc, #72]	@ (8000dc0 <usb_class_get_std_descr+0x6c>)
 8000d78:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_DeviceDescriptor);
 8000d7a:	2312      	movs	r3, #18
          *data = &USB_String_PROGR;
          break;
        default:
          return;
      }
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000d7c:	8013      	strh	r3, [r2, #0]
      break;
    default:
      break;
  }
}
 8000d7e:	4770      	bx	lr
      *data = &USB_ConfigDescriptor;
 8000d80:	4b10      	ldr	r3, [pc, #64]	@ (8000dc4 <usb_class_get_std_descr+0x70>)
 8000d82:	600b      	str	r3, [r1, #0]
      *size = sizeof(USB_ConfigDescriptor);
 8000d84:	f44f 7381 	mov.w	r3, #258	@ 0x102
 8000d88:	e7f8      	b.n	8000d7c <usb_class_get_std_descr+0x28>
      *data = &USB_DeviceQualifierDescriptor;
 8000d8a:	4b0f      	ldr	r3, [pc, #60]	@ (8000dc8 <usb_class_get_std_descr+0x74>)
 8000d8c:	600b      	str	r3, [r1, #0]
      *size = USB_DeviceQualifierDescriptor[0];
 8000d8e:	230a      	movs	r3, #10
 8000d90:	e7f4      	b.n	8000d7c <usb_class_get_std_descr+0x28>
      switch(descr & 0xFF){
 8000d92:	b2c0      	uxtb	r0, r0
 8000d94:	2805      	cmp	r0, #5
 8000d96:	d8f2      	bhi.n	8000d7e <usb_class_get_std_descr+0x2a>
 8000d98:	e8df f000 	tbb	[pc, r0]
 8000d9c:	0907030f 	stmdbeq	r7, {r0, r1, r2, r3, r8, r9}
 8000da0:	4b0a0d0b 	blmi	82841d4 <_etext+0x282a28>
          *data = &USB_StringLangDescriptor;
 8000da4:	600b      	str	r3, [r1, #0]
      *size = ((uint8_t*)*data)[0]; //data->bLength
 8000da6:	781b      	ldrb	r3, [r3, #0]
 8000da8:	e7e8      	b.n	8000d7c <usb_class_get_std_descr+0x28>
          break;
 8000daa:	4b09      	ldr	r3, [pc, #36]	@ (8000dd0 <usb_class_get_std_descr+0x7c>)
 8000dac:	e7fa      	b.n	8000da4 <usb_class_get_std_descr+0x50>
          break;
 8000dae:	4b09      	ldr	r3, [pc, #36]	@ (8000dd4 <usb_class_get_std_descr+0x80>)
 8000db0:	e7f8      	b.n	8000da4 <usb_class_get_std_descr+0x50>
          break;
 8000db2:	4b09      	ldr	r3, [pc, #36]	@ (8000dd8 <usb_class_get_std_descr+0x84>)
 8000db4:	e7f6      	b.n	8000da4 <usb_class_get_std_descr+0x50>
          break;
 8000db6:	4b09      	ldr	r3, [pc, #36]	@ (8000ddc <usb_class_get_std_descr+0x88>)
 8000db8:	e7f4      	b.n	8000da4 <usb_class_get_std_descr+0x50>
 8000dba:	4b09      	ldr	r3, [pc, #36]	@ (8000de0 <usb_class_get_std_descr+0x8c>)
 8000dbc:	e7f2      	b.n	8000da4 <usb_class_get_std_descr+0x50>
 8000dbe:	bf00      	nop
 8000dc0:	0800168e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, ip}
 8000dc4:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
 8000dc8:	080017a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, ip}
 8000dcc:	0800162c 	stmdaeq	r0, {r2, r3, r5, r9, sl, ip}
 8000dd0:	08001642 	stmdaeq	r0, {r1, r6, r9, sl, ip}
 8000dd4:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
 8000dd8:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
 8000ddc:	0800167a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl, ip}
 8000de0:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}

08000de4 <usb_class_ep0_in>:

char usb_class_ep0_in(config_pack_t *req, void **data, uint16_t *size){
 8000de4:	b510      	push	{r4, lr}
 8000de6:	4604      	mov	r4, r0
  if( hid_ep0_in( req, data, size ) )return 1;
 8000de8:	f7ff fe10 	bl	8000a0c <hid_ep0_in>
 8000dec:	b930      	cbnz	r0, 8000dfc <usb_class_ep0_in+0x18>
  if( mic_ep0_in( req, data, size ) )return 1;
  if( programmer_ep0_in( req, data, size ) )return 1;
 8000dee:	4620      	mov	r0, r4
 8000df0:	f000 f9a6 	bl	8001140 <programmer_ep0_in>
 8000df4:	3800      	subs	r0, #0
 8000df6:	bf18      	it	ne
 8000df8:	2001      	movne	r0, #1
  return 0;
}
 8000dfa:	bd10      	pop	{r4, pc}
  if( hid_ep0_in( req, data, size ) )return 1;
 8000dfc:	2001      	movs	r0, #1
 8000dfe:	e7fc      	b.n	8000dfa <usb_class_ep0_in+0x16>

08000e00 <usb_class_ep0_out>:

char usb_class_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 8000e00:	b570      	push	{r4, r5, r6, lr}
 8000e02:	4604      	mov	r4, r0
 8000e04:	460d      	mov	r5, r1
 8000e06:	4616      	mov	r6, r2
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000e08:	f7ff fe24 	bl	8000a54 <hid_ep0_out>
 8000e0c:	b940      	cbnz	r0, 8000e20 <usb_class_ep0_out+0x20>
  if( mic_ep0_out( req, offset, rx_size ) )return 1;
  if( programmer_ep0_out( req, offset, rx_size ) )return 1;
 8000e0e:	4632      	mov	r2, r6
 8000e10:	4629      	mov	r1, r5
 8000e12:	4620      	mov	r0, r4
 8000e14:	f000 f9e4 	bl	80011e0 <programmer_ep0_out>
 8000e18:	3800      	subs	r0, #0
 8000e1a:	bf18      	it	ne
 8000e1c:	2001      	movne	r0, #1
  return 0;
}
 8000e1e:	bd70      	pop	{r4, r5, r6, pc}
  if( hid_ep0_out( req, offset, rx_size ) )return 1;
 8000e20:	2001      	movs	r0, #1
 8000e22:	e7fc      	b.n	8000e1e <usb_class_ep0_out+0x1e>

08000e24 <usb_class_init>:

void usb_class_init(){
 8000e24:	b508      	push	{r3, lr}
  hid_init();
 8000e26:	f7ff fedd 	bl	8000be4 <hid_init>
  usb_ep_init_double( ENDP_MIC | 0x80, USB_ENDP_ISO, ENDP_MIC_SIZE, mic_in_callback );
 8000e2a:	2264      	movs	r2, #100	@ 0x64
 8000e2c:	2101      	movs	r1, #1
 8000e2e:	4b48      	ldr	r3, [pc, #288]	@ (8000f50 <usb_class_init+0x12c>)
 8000e30:	2085      	movs	r0, #133	@ 0x85
 8000e32:	f7ff fab3 	bl	800039c <usb_ep_init_double>
  GPIO_config(ADC_IN);
 8000e36:	4a47      	ldr	r2, [pc, #284]	@ (8000f54 <usb_class_init+0x130>)
  ADC_init( ADC_2 );
 8000e38:	4947      	ldr	r1, [pc, #284]	@ (8000f58 <usb_class_init+0x134>)
  GPIO_config(ADC_IN);
 8000e3a:	6813      	ldr	r3, [r2, #0]
 8000e3c:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8000e40:	6013      	str	r3, [r2, #0]
  ADC_init( ADC_2 );
 8000e42:	f502 3284 	add.w	r2, r2, #67584	@ 0x10800
 8000e46:	6993      	ldr	r3, [r2, #24]
 8000e48:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000e4c:	6193      	str	r3, [r2, #24]
 8000e4e:	688b      	ldr	r3, [r1, #8]
 8000e50:	f043 0301 	orr.w	r3, r3, #1
 8000e54:	608b      	str	r3, [r1, #8]
 8000e56:	6853      	ldr	r3, [r2, #4]
 8000e58:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 8000e5c:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000e60:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000e64:	6053      	str	r3, [r2, #4]
 8000e66:	2314      	movs	r3, #20
 8000e68:	bf00      	nop
 8000e6a:	3b01      	subs	r3, #1
 8000e6c:	d1fc      	bne.n	8000e68 <usb_class_init+0x44>
 8000e6e:	688b      	ldr	r3, [r1, #8]
 8000e70:	f043 0304 	orr.w	r3, r3, #4
 8000e74:	608b      	str	r3, [r1, #8]
 8000e76:	4b38      	ldr	r3, [pc, #224]	@ (8000f58 <usb_class_init+0x134>)
 8000e78:	6899      	ldr	r1, [r3, #8]
 8000e7a:	0749      	lsls	r1, r1, #29
 8000e7c:	d4fc      	bmi.n	8000e78 <usb_class_init+0x54>
  ADC_SAMPLING_TIME( ADC_2, marg3(ADC_IN), ADC_SAMPL_TIME_2 );
 8000e7e:	6919      	ldr	r1, [r3, #16]
 8000e80:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
 8000e84:	6119      	str	r1, [r3, #16]
  ADC_SEQ_SET( ADC_2, 1, marg3(ADC_IN) );
 8000e86:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8000e88:	f021 011f 	bic.w	r1, r1, #31
 8000e8c:	f041 0107 	orr.w	r1, r1, #7
 8000e90:	6359      	str	r1, [r3, #52]	@ 0x34
  ADC_SEQ_CNT( ADC_2, 1 );
 8000e92:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000e94:	f421 0170 	bic.w	r1, r1, #15728640	@ 0xf00000
 8000e98:	62d9      	str	r1, [r3, #44]	@ 0x2c
  ADC_Trigger( ADC_2, ADC_TRIG_TIM2_2 );
 8000e9a:	6899      	ldr	r1, [r3, #8]
 8000e9c:	f421 11f0 	bic.w	r1, r1, #1966080	@ 0x1e0000
 8000ea0:	f441 11b0 	orr.w	r1, r1, #1441792	@ 0x160000
 8000ea4:	6099      	str	r1, [r3, #8]
  ADC2->CR1 |= ADC_CR1_EOCIE;
 8000ea6:	6859      	ldr	r1, [r3, #4]
 8000ea8:	f041 0120 	orr.w	r1, r1, #32
 8000eac:	6059      	str	r1, [r3, #4]
 8000eae:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
 8000eb2:	4b2a      	ldr	r3, [pc, #168]	@ (8000f5c <usb_class_init+0x138>)
 8000eb4:	6019      	str	r1, [r3, #0]
  ADC_init( ADC_1 );
 8000eb6:	6993      	ldr	r3, [r2, #24]
 8000eb8:	4929      	ldr	r1, [pc, #164]	@ (8000f60 <usb_class_init+0x13c>)
 8000eba:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000ebe:	6193      	str	r3, [r2, #24]
 8000ec0:	688b      	ldr	r3, [r1, #8]
 8000ec2:	f043 0301 	orr.w	r3, r3, #1
 8000ec6:	608b      	str	r3, [r1, #8]
 8000ec8:	6853      	ldr	r3, [r2, #4]
 8000eca:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 8000ece:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000ed2:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000ed6:	6053      	str	r3, [r2, #4]
 8000ed8:	2314      	movs	r3, #20
 8000eda:	bf00      	nop
 8000edc:	3b01      	subs	r3, #1
 8000ede:	d1fc      	bne.n	8000eda <usb_class_init+0xb6>
 8000ee0:	688b      	ldr	r3, [r1, #8]
 8000ee2:	f043 0304 	orr.w	r3, r3, #4
 8000ee6:	608b      	str	r3, [r1, #8]
 8000ee8:	4b1d      	ldr	r3, [pc, #116]	@ (8000f60 <usb_class_init+0x13c>)
 8000eea:	6898      	ldr	r0, [r3, #8]
 8000eec:	f010 0004 	ands.w	r0, r0, #4
 8000ef0:	d1fb      	bne.n	8000eea <usb_class_init+0xc6>
  ADC1->CR2 |= ADC_CR2_TSVREFE;
 8000ef2:	6899      	ldr	r1, [r3, #8]
 8000ef4:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000ef8:	6099      	str	r1, [r3, #8]
  ADC_SAMPLING_TIME( ADC_1, ADC_CH_VREF, ADC_SAMPL_TIME_56 );
 8000efa:	68d9      	ldr	r1, [r3, #12]
 8000efc:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
 8000f00:	f441 0120 	orr.w	r1, r1, #10485760	@ 0xa00000
 8000f04:	60d9      	str	r1, [r3, #12]
  ADC_SEQ_SET( ADC_1, 1, ADC_CH_VREF );
 8000f06:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8000f08:	f021 011f 	bic.w	r1, r1, #31
 8000f0c:	f041 0111 	orr.w	r1, r1, #17
 8000f10:	6359      	str	r1, [r3, #52]	@ 0x34
  ADC_SEQ_CNT( ADC_1, 1 );
 8000f12:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8000f14:	f421 0170 	bic.w	r1, r1, #15728640	@ 0xf00000
 8000f18:	62d9      	str	r1, [r3, #44]	@ 0x2c
  RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000f1a:	69d3      	ldr	r3, [r2, #28]
 8000f1c:	f043 0301 	orr.w	r3, r3, #1
 8000f20:	61d3      	str	r3, [r2, #28]
  TIM2->PSC = 0;
 8000f22:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
  TIM2->ARR = TIM2_ARR_AVG;
 8000f26:	22cc      	movs	r2, #204	@ 0xcc
  TIM2->PSC = 0;
 8000f28:	6298      	str	r0, [r3, #40]	@ 0x28
  TIM2->ARR = TIM2_ARR_AVG;
 8000f2a:	62da      	str	r2, [r3, #44]	@ 0x2c
  TIM2->CR1 |= TIM_CR1_ARPE;
 8000f2c:	681a      	ldr	r2, [r3, #0]
 8000f2e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000f32:	601a      	str	r2, [r3, #0]
  TIM2->CCMR1 = (0b011 << TIM_CCMR1_OC2M_Pos) | TIM_CCMR1_OC2PE;
 8000f34:	f44f 5260 	mov.w	r2, #14336	@ 0x3800
 8000f38:	619a      	str	r2, [r3, #24]
  TIM2->CCER = TIM_CCER_CC2E;
 8000f3a:	2210      	movs	r2, #16
 8000f3c:	621a      	str	r2, [r3, #32]
  TIM2->CR1 |= TIM_CR1_CEN;
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	f042 0201 	orr.w	r2, r2, #1
 8000f44:	601a      	str	r2, [r3, #0]
  mic_init();
  programmer_init();
}
 8000f46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  programmer_init();
 8000f4a:	f000 b98d 	b.w	8001268 <programmer_init>
 8000f4e:	bf00      	nop
 8000f50:	08000875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp}
 8000f54:	40010800 	andmi	r0, r1, r0, lsl #16
 8000f58:	40012800 	andmi	r2, r1, r0, lsl #16
 8000f5c:	e000e100 	and	lr, r0, r0, lsl #2
 8000f60:	40012400 	andmi	r2, r1, r0, lsl #8

08000f64 <usb_class_poll>:

void usb_class_poll(){
 8000f64:	b508      	push	{r3, lr}
  hid_poll();
 8000f66:	f7ff fee1 	bl	8000d2c <hid_poll>
 8000f6a:	4b0d      	ldr	r3, [pc, #52]	@ (8000fa0 <usb_class_poll+0x3c>)
  if(systick_ms() < ntime_ms)return;
 8000f6c:	490d      	ldr	r1, [pc, #52]	@ (8000fa4 <usb_class_poll+0x40>)
 8000f6e:	6818      	ldr	r0, [r3, #0]
 8000f70:	6f0a      	ldr	r2, [r1, #112]	@ 0x70
 8000f72:	4290      	cmp	r0, r2
 8000f74:	d310      	bcc.n	8000f98 <usb_class_poll+0x34>
 8000f76:	681b      	ldr	r3, [r3, #0]
  if(ADC1->SR & ADC_SR_EOC){
 8000f78:	4a0b      	ldr	r2, [pc, #44]	@ (8000fa8 <usb_class_poll+0x44>)
  ntime_ms = systick_ms() + 1000;
 8000f7a:	f503 737a 	add.w	r3, r3, #1000	@ 0x3e8
 8000f7e:	670b      	str	r3, [r1, #112]	@ 0x70
  if(ADC1->SR & ADC_SR_EOC){
 8000f80:	6813      	ldr	r3, [r2, #0]
 8000f82:	079b      	lsls	r3, r3, #30
 8000f84:	d508      	bpl.n	8000f98 <usb_class_poll+0x34>
    adc_vref = ADC1->DR << OFILTER_MLT;
 8000f86:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 8000f88:	011b      	lsls	r3, r3, #4
 8000f8a:	b29b      	uxth	r3, r3
 8000f8c:	f8a1 305e 	strh.w	r3, [r1, #94]	@ 0x5e
    ADC1->CR2 |= ADC_CR2_ADON;
 8000f90:	6893      	ldr	r3, [r2, #8]
 8000f92:	f043 0301 	orr.w	r3, r3, #1
 8000f96:	6093      	str	r3, [r2, #8]
  mic_poll();
  programmer_poll();
}
 8000f98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  programmer_poll();
 8000f9c:	f000 ba12 	b.w	80013c4 <programmer_poll>
 8000fa0:	200000e4 	andcs	r0, r0, r4, ror #1
 8000fa4:	20000070 	andcs	r0, r0, r0, ror r0
 8000fa8:	40012400 	andmi	r2, r1, r0, lsl #8

08000fac <usb_class_sof>:

void usb_class_sof(){
  mic_sof();
 8000fac:	f7ff bcf6 	b.w	800099c <mic_sof>

08000fb0 <systick_init>:

volatile uint32_t systick_internal = 0;

void systick_init(){
  //SysTick->LOAD = F_AHB / 8 / 1000;
  SysTick->LOAD = SysTick->CALIB;
 8000fb0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8000fb4:	69da      	ldr	r2, [r3, #28]
 8000fb6:	615a      	str	r2, [r3, #20]
  SysTick->CTRL = SysTick_CTRL_TICKINT | SysTick_CTRL_ENABLE;
 8000fb8:	2203      	movs	r2, #3
 8000fba:	611a      	str	r2, [r3, #16]
}
 8000fbc:	4770      	bx	lr

08000fbe <SysTick_Handler>:

void SysTick_Handler(){
  systick_internal++;
 8000fbe:	4a02      	ldr	r2, [pc, #8]	@ (8000fc8 <SysTick_Handler+0xa>)
 8000fc0:	6813      	ldr	r3, [r2, #0]
 8000fc2:	3301      	adds	r3, #1
 8000fc4:	6013      	str	r3, [r2, #0]
}
 8000fc6:	4770      	bx	lr
 8000fc8:	200000e4 	andcs	r0, r0, r4, ror #1

08000fcc <uart_buf_size>:
  volatile uint8_t st,en;
  volatile uint8_t arr[UART_SIZE];
}uart_buffer;

uint8_t uart_buf_size(uart_buffer *buf){
  return ((buf->st - buf->en) & UART_MASK);
 8000fcc:	7803      	ldrb	r3, [r0, #0]
 8000fce:	7842      	ldrb	r2, [r0, #1]
 8000fd0:	1a98      	subs	r0, r3, r2
}
 8000fd2:	b2c0      	uxtb	r0, r0
 8000fd4:	4770      	bx	lr

08000fd6 <uart_buf_read>:
  return ((buf->st - buf->en) & UART_MASK);
 8000fd6:	7801      	ldrb	r1, [r0, #0]
 8000fd8:	7842      	ldrb	r2, [r0, #1]

uint8_t uart_buf_read(uart_buffer *buf){
 8000fda:	4603      	mov	r3, r0
  uint8_t res;
  if(uart_buf_size(buf) == 0)return 0;
 8000fdc:	4291      	cmp	r1, r2
 8000fde:	d00b      	beq.n	8000ff8 <uart_buf_read+0x22>
  res = buf->arr[buf->st];
 8000fe0:	7802      	ldrb	r2, [r0, #0]
 8000fe2:	4402      	add	r2, r0
 8000fe4:	7890      	ldrb	r0, [r2, #2]
  buf->st++;
 8000fe6:	781a      	ldrb	r2, [r3, #0]
  res = buf->arr[buf->st];
 8000fe8:	b2c0      	uxtb	r0, r0
  buf->st++;
 8000fea:	3201      	adds	r2, #1
 8000fec:	b2d2      	uxtb	r2, r2
 8000fee:	701a      	strb	r2, [r3, #0]
  buf->st &= UART_MASK;
 8000ff0:	781a      	ldrb	r2, [r3, #0]
 8000ff2:	b2d2      	uxtb	r2, r2
 8000ff4:	701a      	strb	r2, [r3, #0]
  return res;
 8000ff6:	4770      	bx	lr
  if(uart_buf_size(buf) == 0)return 0;
 8000ff8:	2000      	movs	r0, #0
}
 8000ffa:	4770      	bx	lr

08000ffc <uart_buf_write>:
  return ((buf->st - buf->en) & UART_MASK);
 8000ffc:	7803      	ldrb	r3, [r0, #0]
 8000ffe:	7842      	ldrb	r2, [r0, #1]
 8001000:	1a9b      	subs	r3, r3, r2

void uart_buf_write(uart_buffer *buf, uint8_t dat){
  if(uart_buf_size(buf)!=1){
 8001002:	b2db      	uxtb	r3, r3
 8001004:	2b01      	cmp	r3, #1
 8001006:	d009      	beq.n	800101c <uart_buf_write+0x20>
    buf->arr[buf->en]=dat;
 8001008:	7843      	ldrb	r3, [r0, #1]
 800100a:	4403      	add	r3, r0
 800100c:	7099      	strb	r1, [r3, #2]
    buf->en++; buf->en &= UART_MASK;
 800100e:	7843      	ldrb	r3, [r0, #1]
 8001010:	3301      	adds	r3, #1
 8001012:	b2db      	uxtb	r3, r3
 8001014:	7043      	strb	r3, [r0, #1]
 8001016:	7843      	ldrb	r3, [r0, #1]
 8001018:	b2db      	uxtb	r3, r3
 800101a:	7043      	strb	r3, [r0, #1]
  }
}
 800101c:	4770      	bx	lr

0800101e <USART1_IRQHandler>:
///////////////////////////////////////////////////////////////////////////////////////////////
#ifdef UART1_EN
static uart_buffer uart1_rx;
static uart_buffer uart1_tx;

void USART1_IRQHandler(void){
 800101e:	b510      	push	{r4, lr}
  if( USART1->SR & USART_SR_RXNE ){
 8001020:	4c0f      	ldr	r4, [pc, #60]	@ (8001060 <USART1_IRQHandler+0x42>)
 8001022:	6823      	ldr	r3, [r4, #0]
 8001024:	069a      	lsls	r2, r3, #26
 8001026:	d506      	bpl.n	8001036 <USART1_IRQHandler+0x18>
    uint8_t temp = USART1->DR;
 8001028:	6861      	ldr	r1, [r4, #4]
    uart_buf_write(&uart1_rx, temp);
 800102a:	480e      	ldr	r0, [pc, #56]	@ (8001064 <USART1_IRQHandler+0x46>)
 800102c:	b2c9      	uxtb	r1, r1
  }else if( USART1->SR & USART_SR_TXE ){
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
      else USART1->CR1 &=~ USART_CR1_TXEIE;
  }
}
 800102e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    uart_buf_write(&uart1_rx, temp);
 8001032:	f7ff bfe3 	b.w	8000ffc <uart_buf_write>
  }else if( USART1->SR & USART_SR_TXE ){
 8001036:	6823      	ldr	r3, [r4, #0]
 8001038:	061b      	lsls	r3, r3, #24
 800103a:	d50b      	bpl.n	8001054 <USART1_IRQHandler+0x36>
  return ((buf->st - buf->en) & UART_MASK);
 800103c:	4809      	ldr	r0, [pc, #36]	@ (8001064 <USART1_IRQHandler+0x46>)
 800103e:	f890 2102 	ldrb.w	r2, [r0, #258]	@ 0x102
 8001042:	f890 3103 	ldrb.w	r3, [r0, #259]	@ 0x103
    if(uart_buf_size(&uart1_tx) != 0)USART1->DR = uart_buf_read(&uart1_tx);
 8001046:	429a      	cmp	r2, r3
 8001048:	d005      	beq.n	8001056 <USART1_IRQHandler+0x38>
 800104a:	f500 7081 	add.w	r0, r0, #258	@ 0x102
 800104e:	f7ff ffc2 	bl	8000fd6 <uart_buf_read>
 8001052:	6060      	str	r0, [r4, #4]
}
 8001054:	bd10      	pop	{r4, pc}
      else USART1->CR1 &=~ USART_CR1_TXEIE;
 8001056:	68e3      	ldr	r3, [r4, #12]
 8001058:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800105c:	60e3      	str	r3, [r4, #12]
}
 800105e:	e7f9      	b.n	8001054 <USART1_IRQHandler+0x36>
 8001060:	40013800 	andmi	r3, r1, r0, lsl #16
 8001064:	200000e8 	andcs	r0, r0, r8, ror #1

08001068 <UART1_write>:

void UART1_write(uint8_t *data, uint8_t len){
 8001068:	b570      	push	{r4, r5, r6, lr}
 800106a:	4604      	mov	r4, r0
  while(len--)UART_putc(1, *(data++));
 800106c:	1845      	adds	r5, r0, r1
 800106e:	4e07      	ldr	r6, [pc, #28]	@ (800108c <UART1_write+0x24>)
 8001070:	4807      	ldr	r0, [pc, #28]	@ (8001090 <UART1_write+0x28>)
 8001072:	42ac      	cmp	r4, r5
 8001074:	d100      	bne.n	8001078 <UART1_write+0x10>
}
 8001076:	bd70      	pop	{r4, r5, r6, pc}
  while(len--)UART_putc(1, *(data++));
 8001078:	f814 1b01 	ldrb.w	r1, [r4], #1
 800107c:	f7ff ffbe 	bl	8000ffc <uart_buf_write>
 8001080:	68f3      	ldr	r3, [r6, #12]
 8001082:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001086:	60f3      	str	r3, [r6, #12]
 8001088:	e7f3      	b.n	8001072 <UART1_write+0xa>
 800108a:	bf00      	nop
 800108c:	40013800 	andmi	r3, r1, r0, lsl #16
 8001090:	200001ea 	andcs	r0, r0, sl, ror #3

08001094 <UART1_puts>:

void UART1_puts(char *str){
 8001094:	b538      	push	{r3, r4, r5, lr}
 8001096:	1e44      	subs	r4, r0, #1
  while(str[0] != 0)UART_putc(1, *(str++));
 8001098:	4d06      	ldr	r5, [pc, #24]	@ (80010b4 <UART1_puts+0x20>)
 800109a:	4807      	ldr	r0, [pc, #28]	@ (80010b8 <UART1_puts+0x24>)
 800109c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80010a0:	b901      	cbnz	r1, 80010a4 <UART1_puts+0x10>
}
 80010a2:	bd38      	pop	{r3, r4, r5, pc}
  while(str[0] != 0)UART_putc(1, *(str++));
 80010a4:	f7ff ffaa 	bl	8000ffc <uart_buf_write>
 80010a8:	68eb      	ldr	r3, [r5, #12]
 80010aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80010ae:	60eb      	str	r3, [r5, #12]
 80010b0:	e7f4      	b.n	800109c <UART1_puts+0x8>
 80010b2:	bf00      	nop
 80010b4:	40013800 	andmi	r3, r1, r0, lsl #16
 80010b8:	200001ea 	andcs	r0, r0, sl, ror #3

080010bc <UART1_read>:

void UART1_read(uint8_t *data, uint8_t len){
 80010bc:	b570      	push	{r4, r5, r6, lr}
 80010be:	4604      	mov	r4, r0
  return ((buf->st - buf->en) & UART_MASK);
 80010c0:	4e08      	ldr	r6, [pc, #32]	@ (80010e4 <UART1_read+0x28>)
 80010c2:	1845      	adds	r5, r0, r1
  while(len--){
 80010c4:	42ac      	cmp	r4, r5
 80010c6:	d100      	bne.n	80010ca <UART1_read+0xe>
    while(UART_rx_count(1) == 0){}
    *(data++) = UART_getc(1);
  }
}
 80010c8:	bd70      	pop	{r4, r5, r6, pc}
  return ((buf->st - buf->en) & UART_MASK);
 80010ca:	7832      	ldrb	r2, [r6, #0]
 80010cc:	7873      	ldrb	r3, [r6, #1]
    while(UART_rx_count(1) == 0){}
 80010ce:	1a9b      	subs	r3, r3, r2
 80010d0:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d0f8      	beq.n	80010ca <UART1_read+0xe>
    *(data++) = UART_getc(1);
 80010d8:	4630      	mov	r0, r6
 80010da:	f7ff ff7c 	bl	8000fd6 <uart_buf_read>
 80010de:	f804 0b01 	strb.w	r0, [r4], #1
 80010e2:	e7ef      	b.n	80010c4 <UART1_read+0x8>
 80010e4:	200000e8 	andcs	r0, r0, r8, ror #1

080010e8 <UART1_gets>:

void UART1_gets(char *str, uint8_t len){
 80010e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ea:	4605      	mov	r5, r0
 80010ec:	1e4c      	subs	r4, r1, #1
  return ((buf->st - buf->en) & UART_MASK);
 80010ee:	4e13      	ldr	r6, [pc, #76]	@ (800113c <UART1_gets+0x54>)
 80010f0:	b2e4      	uxtb	r4, r4
  while(len--){
 80010f2:	2cff      	cmp	r4, #255	@ 0xff
 80010f4:	462f      	mov	r7, r5
 80010f6:	d10d      	bne.n	8001114 <UART1_gets+0x2c>
    while(UART_rx_count(1) == 0){}
    str[0] = UART_getc(1);
    if(str[0] == 0 || str[0] == 13)break;
    str++;
  }
  if(str[0] != 0){
 80010f8:	783b      	ldrb	r3, [r7, #0]
 80010fa:	b153      	cbz	r3, 8001112 <UART1_gets+0x2a>
    if(len < 3)str[0] = 0;
 80010fc:	2c02      	cmp	r4, #2
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 80010fe:	bf83      	ittte	hi
 8001100:	230a      	movhi	r3, #10
 8001102:	703b      	strbhi	r3, [r7, #0]
 8001104:	230d      	movhi	r3, #13
    if(len < 3)str[0] = 0;
 8001106:	2300      	movls	r3, #0
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8001108:	bf85      	ittet	hi
 800110a:	707b      	strbhi	r3, [r7, #1]
 800110c:	2300      	movhi	r3, #0
    if(len < 3)str[0] = 0;
 800110e:	703b      	strbls	r3, [r7, #0]
      else{ str[0] = 0x0A; str[1] = 0x0D; str[2] = 0; }
 8001110:	70bb      	strbhi	r3, [r7, #2]
  }
}
 8001112:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((buf->st - buf->en) & UART_MASK);
 8001114:	7832      	ldrb	r2, [r6, #0]
 8001116:	7873      	ldrb	r3, [r6, #1]
    while(UART_rx_count(1) == 0){}
 8001118:	1a9b      	subs	r3, r3, r2
 800111a:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
 800111e:	2b00      	cmp	r3, #0
 8001120:	d0f8      	beq.n	8001114 <UART1_gets+0x2c>
    str[0] = UART_getc(1);
 8001122:	4630      	mov	r0, r6
 8001124:	f7ff ff57 	bl	8000fd6 <uart_buf_read>
 8001128:	f805 0b01 	strb.w	r0, [r5], #1
    if(str[0] == 0 || str[0] == 13)break;
 800112c:	2800      	cmp	r0, #0
 800112e:	d0e3      	beq.n	80010f8 <UART1_gets+0x10>
 8001130:	1e63      	subs	r3, r4, #1
 8001132:	280d      	cmp	r0, #13
 8001134:	b2db      	uxtb	r3, r3
 8001136:	d0df      	beq.n	80010f8 <UART1_gets+0x10>
 8001138:	461c      	mov	r4, r3
 800113a:	e7da      	b.n	80010f2 <UART1_gets+0xa>
 800113c:	200000e8 	andcs	r0, r0, r8, ror #1

08001140 <programmer_ep0_in>:
#define timeout_reset() do{timeout_ms = systick_ms() + TIMEOUT_MS;}while(0)

void uart_ctrl( uint8_t *buf, int size);

char programmer_ep0_in(config_pack_t *req, void **data, uint16_t *size){
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 8001140:	7803      	ldrb	r3, [r0, #0]
 8001142:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001146:	2b21      	cmp	r3, #33	@ 0x21
 8001148:	d10f      	bne.n	800116a <programmer_ep0_in+0x2a>
    if( req->bRequest == CDC_GET_LINE_CODING ){
 800114a:	7843      	ldrb	r3, [r0, #1]
 800114c:	2b21      	cmp	r3, #33	@ 0x21
 800114e:	d10c      	bne.n	800116a <programmer_ep0_in+0x2a>
      if( req->wIndex == ifnum(interface_tty) ){
 8001150:	8883      	ldrh	r3, [r0, #4]
 8001152:	2b01      	cmp	r3, #1
 8001154:	d007      	beq.n	8001166 <programmer_ep0_in+0x26>
        *data = (void*)&tty_cfg;
        *size = sizeof(tty_cfg);
        return 1;
      }else if( req->wIndex == ifnum(interface_progr) ){
 8001156:	2b03      	cmp	r3, #3
 8001158:	d107      	bne.n	800116a <programmer_ep0_in+0x2a>
 800115a:	4b05      	ldr	r3, [pc, #20]	@ (8001170 <programmer_ep0_in+0x30>)
        *data = (void*)&progr_cfg;
 800115c:	600b      	str	r3, [r1, #0]
        *size = sizeof(progr_cfg);
 800115e:	2307      	movs	r3, #7
        return 1;
 8001160:	2001      	movs	r0, #1
        *size = sizeof(progr_cfg);
 8001162:	8013      	strh	r3, [r2, #0]
 8001164:	4770      	bx	lr
 8001166:	4b03      	ldr	r3, [pc, #12]	@ (8001174 <programmer_ep0_in+0x34>)
 8001168:	e7f8      	b.n	800115c <programmer_ep0_in+0x1c>
        return 1;
      }
    }
  }
  return 0;
 800116a:	2000      	movs	r0, #0
}
 800116c:	4770      	bx	lr
 800116e:	bf00      	nop
 8001170:	2000000c 	andcs	r0, r0, ip
 8001174:	20000013 	andcs	r0, r0, r3, lsl r0

08001178 <uart_cfg>:

void uart_cfg( volatile struct cdc_linecoding *cfg ){
  UART_speed( USART, cfg->baudrate );
 8001178:	6803      	ldr	r3, [r0, #0]
 800117a:	4a17      	ldr	r2, [pc, #92]	@ (80011d8 <uart_cfg+0x60>)
 800117c:	fbb2 f2f3 	udiv	r2, r2, r3
 8001180:	4b16      	ldr	r3, [pc, #88]	@ (80011dc <uart_cfg+0x64>)
 8001182:	609a      	str	r2, [r3, #8]
  //stopbits
  
  //parity
  if(cfg->parity == 0){ //none
 8001184:	7942      	ldrb	r2, [r0, #5]
 8001186:	b942      	cbnz	r2, 800119a <uart_cfg+0x22>
    USART1->CR1 &=~USART_CR1_PCE;
 8001188:	68da      	ldr	r2, [r3, #12]
 800118a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800118e:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_M;
 8001190:	68da      	ldr	r2, [r3, #12]
 8001192:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 |= USART_CR1_PS;
  }else if(cfg->parity == 2){ //even
    USART1->CR1 |= USART_CR1_M;
    USART1->CR1 |= USART_CR1_PCE;
    USART1->CR1 &=~USART_CR1_PS;
 8001196:	60da      	str	r2, [r3, #12]
  }
}
 8001198:	4770      	bx	lr
  }else if(cfg->parity == 1){ //odd
 800119a:	7942      	ldrb	r2, [r0, #5]
 800119c:	2a01      	cmp	r2, #1
 800119e:	d10b      	bne.n	80011b8 <uart_cfg+0x40>
    USART1->CR1 |= USART_CR1_M;
 80011a0:	68da      	ldr	r2, [r3, #12]
 80011a2:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80011a6:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 80011a8:	68da      	ldr	r2, [r3, #12]
 80011aa:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80011ae:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PS;
 80011b0:	68da      	ldr	r2, [r3, #12]
 80011b2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80011b6:	e7ee      	b.n	8001196 <uart_cfg+0x1e>
  }else if(cfg->parity == 2){ //even
 80011b8:	7942      	ldrb	r2, [r0, #5]
 80011ba:	2a02      	cmp	r2, #2
 80011bc:	d1ec      	bne.n	8001198 <uart_cfg+0x20>
    USART1->CR1 |= USART_CR1_M;
 80011be:	68da      	ldr	r2, [r3, #12]
 80011c0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80011c4:	60da      	str	r2, [r3, #12]
    USART1->CR1 |= USART_CR1_PCE;
 80011c6:	68da      	ldr	r2, [r3, #12]
 80011c8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80011cc:	60da      	str	r2, [r3, #12]
    USART1->CR1 &=~USART_CR1_PS;
 80011ce:	68da      	ldr	r2, [r3, #12]
 80011d0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80011d4:	e7df      	b.n	8001196 <uart_cfg+0x1e>
 80011d6:	bf00      	nop
 80011d8:	044aa200 	strbeq	sl, [sl], #-512	@ 0xfffffe00
 80011dc:	40013800 	andmi	r3, r1, r0, lsl #16

080011e0 <programmer_ep0_out>:

char programmer_ep0_out(config_pack_t *req, uint16_t offset, uint16_t rx_size){
 80011e0:	b538      	push	{r3, r4, r5, lr}
  if( (req->bmRequestType & 0x7F) == (USB_REQ_CLASS | USB_REQ_INTERFACE) ){
 80011e2:	7803      	ldrb	r3, [r0, #0]
 80011e4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80011e8:	2b21      	cmp	r3, #33	@ 0x21
 80011ea:	d133      	bne.n	8001254 <programmer_ep0_out+0x74>
    if( req->bRequest == CDC_SET_LINE_CODING ){
 80011ec:	7843      	ldrb	r3, [r0, #1]
 80011ee:	2b20      	cmp	r3, #32
 80011f0:	d130      	bne.n	8001254 <programmer_ep0_out+0x74>
      if(rx_size == 0)return 1;
 80011f2:	b162      	cbz	r2, 800120e <programmer_ep0_out+0x2e>
      if( req->wIndex == ifnum(interface_tty) ){
 80011f4:	8880      	ldrh	r0, [r0, #4]
 80011f6:	2801      	cmp	r0, #1
 80011f8:	d10b      	bne.n	8001212 <programmer_ep0_out+0x32>
 80011fa:	4917      	ldr	r1, [pc, #92]	@ (8001258 <programmer_ep0_out+0x78>)
 80011fc:	f7ff fa5a 	bl	80006b4 <_usb_ep_read>
        usb_ep_read(0, (void*)&tty_cfg);
        if(ttymode == TTYM_NORMAL){
 8001200:	4b16      	ldr	r3, [pc, #88]	@ (800125c <programmer_ep0_out+0x7c>)
 8001202:	f893 3204 	ldrb.w	r3, [r3, #516]	@ 0x204
 8001206:	b913      	cbnz	r3, 800120e <programmer_ep0_out+0x2e>
          uart_cfg( &tty_cfg );
 8001208:	4813      	ldr	r0, [pc, #76]	@ (8001258 <programmer_ep0_out+0x78>)
 800120a:	f7ff ffb5 	bl	8001178 <uart_cfg>
      if(rx_size == 0)return 1;
 800120e:	2001      	movs	r0, #1
      //  1   : RTS
      //  0   : DTR
    }
  }
  return 0;
}
 8001210:	bd38      	pop	{r3, r4, r5, pc}
      }else if( req->wIndex == ifnum(interface_progr) ){
 8001212:	2803      	cmp	r0, #3
 8001214:	d11e      	bne.n	8001254 <programmer_ep0_out+0x74>
 8001216:	4d12      	ldr	r5, [pc, #72]	@ (8001260 <programmer_ep0_out+0x80>)
 8001218:	2001      	movs	r0, #1
 800121a:	4629      	mov	r1, r5
 800121c:	f7ff fa4a 	bl	80006b4 <_usb_ep_read>
        if( progr_cfg.baudrate == SPEED_CTRL ){
 8001220:	682b      	ldr	r3, [r5, #0]
 8001222:	4c0e      	ldr	r4, [pc, #56]	@ (800125c <programmer_ep0_out+0x7c>)
 8001224:	2b32      	cmp	r3, #50	@ 0x32
 8001226:	d10a      	bne.n	800123e <programmer_ep0_out+0x5e>
          ttymode = TTYM_CTRL;
 8001228:	2302      	movs	r3, #2
 800122a:	f884 3204 	strb.w	r3, [r4, #516]	@ 0x204
 800122e:	4b0d      	ldr	r3, [pc, #52]	@ (8001264 <programmer_ep0_out+0x84>)
 8001230:	681b      	ldr	r3, [r3, #0]
          timeout_reset();
 8001232:	f503 531c 	add.w	r3, r3, #9984	@ 0x2700
 8001236:	3310      	adds	r3, #16
 8001238:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
 800123c:	e7e7      	b.n	800120e <programmer_ep0_out+0x2e>
        }else if( ttymode == TTYM_CTRL ){
 800123e:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 8001242:	2b02      	cmp	r3, #2
 8001244:	d1e3      	bne.n	800120e <programmer_ep0_out+0x2e>
          ttymode = TTYM_PROGR;
 8001246:	2301      	movs	r3, #1
          uart_cfg( &progr_cfg );
 8001248:	4628      	mov	r0, r5
          ttymode = TTYM_PROGR;
 800124a:	f884 3204 	strb.w	r3, [r4, #516]	@ 0x204
          uart_cfg( &progr_cfg );
 800124e:	f7ff ff93 	bl	8001178 <uart_cfg>
 8001252:	e7ec      	b.n	800122e <programmer_ep0_out+0x4e>
  return 0;
 8001254:	2000      	movs	r0, #0
 8001256:	e7db      	b.n	8001210 <programmer_ep0_out+0x30>
 8001258:	20000013 	andcs	r0, r0, r3, lsl r0
 800125c:	200000e8 	andcs	r0, r0, r8, ror #1
 8001260:	2000000c 	andcs	r0, r0, ip
 8001264:	200000e4 	andcs	r0, r0, r4, ror #1

08001268 <programmer_init>:
}

static char initflag = 0;

void programmer_init(){
  UART_init(USART, 9600);
 8001268:	4a2b      	ldr	r2, [pc, #172]	@ (8001318 <programmer_init+0xb0>)
void programmer_init(){
 800126a:	b570      	push	{r4, r5, r6, lr}
  UART_init(USART, 9600);
 800126c:	6853      	ldr	r3, [r2, #4]
 800126e:	2400      	movs	r4, #0
 8001270:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8001274:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001278:	6053      	str	r3, [r2, #4]
 800127a:	6853      	ldr	r3, [r2, #4]
 800127c:	2620      	movs	r6, #32
 800127e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8001282:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8001286:	6053      	str	r3, [r2, #4]
 8001288:	4b24      	ldr	r3, [pc, #144]	@ (800131c <programmer_init+0xb4>)
 800128a:	4d25      	ldr	r5, [pc, #148]	@ (8001320 <programmer_init+0xb8>)
 800128c:	699a      	ldr	r2, [r3, #24]
  //UART_puts(USART, "Test\n\r");
  ttymode = TTYM_NORMAL;
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 800128e:	2103      	movs	r1, #3
  UART_init(USART, 9600);
 8001290:	f042 0201 	orr.w	r2, r2, #1
 8001294:	619a      	str	r2, [r3, #24]
 8001296:	699a      	ldr	r2, [r3, #24]
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 8001298:	2083      	movs	r0, #131	@ 0x83
  UART_init(USART, 9600);
 800129a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800129e:	619a      	str	r2, [r3, #24]
 80012a0:	f641 524c 	movw	r2, #7500	@ 0x1d4c
 80012a4:	f5a3 4358 	sub.w	r3, r3, #55296	@ 0xd800
 80012a8:	609a      	str	r2, [r3, #8]
 80012aa:	f242 022c 	movw	r2, #8236	@ 0x202c
 80012ae:	60da      	str	r2, [r3, #12]
 80012b0:	611c      	str	r4, [r3, #16]
 80012b2:	615c      	str	r4, [r3, #20]
 80012b4:	619c      	str	r4, [r3, #24]
 80012b6:	4b1b      	ldr	r3, [pc, #108]	@ (8001324 <programmer_init+0xbc>)
 80012b8:	702c      	strb	r4, [r5, #0]
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80012ba:	2208      	movs	r2, #8
  UART_init(USART, 9600);
 80012bc:	706c      	strb	r4, [r5, #1]
 80012be:	f885 4102 	strb.w	r4, [r5, #258]	@ 0x102
 80012c2:	f885 4103 	strb.w	r4, [r5, #259]	@ 0x103
 80012c6:	605e      	str	r6, [r3, #4]
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80012c8:	4623      	mov	r3, r4
  ttymode = TTYM_NORMAL;
 80012ca:	f885 4204 	strb.w	r4, [r5, #516]	@ 0x204
  usb_ep_init( ENDP_TTY_CTL  | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80012ce:	f7fe ffe3 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_TTY_IN   | 0x80, USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 80012d2:	4623      	mov	r3, r4
 80012d4:	4632      	mov	r2, r6
 80012d6:	2102      	movs	r1, #2
 80012d8:	2081      	movs	r0, #129	@ 0x81
 80012da:	f7fe ffdd 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_TTY_OUT,         USB_ENDP_BULK, ENDP_TTY_SIZE,  NULL );
 80012de:	4623      	mov	r3, r4
 80012e0:	4632      	mov	r2, r6
 80012e2:	2102      	movs	r1, #2
 80012e4:	2001      	movs	r0, #1
 80012e6:	f7fe ffd7 	bl	8000298 <usb_ep_init>

  usb_ep_init( ENDP_PROG_CTL | 0x80, USB_ENDP_INTR, ENDP_CTL_SIZE,  NULL );
 80012ea:	4623      	mov	r3, r4
 80012ec:	2208      	movs	r2, #8
 80012ee:	2103      	movs	r1, #3
 80012f0:	2084      	movs	r0, #132	@ 0x84
 80012f2:	f7fe ffd1 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_PROG_IN  | 0x80, USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 80012f6:	4623      	mov	r3, r4
 80012f8:	4632      	mov	r2, r6
 80012fa:	2102      	movs	r1, #2
 80012fc:	2082      	movs	r0, #130	@ 0x82
 80012fe:	f7fe ffcb 	bl	8000298 <usb_ep_init>
  usb_ep_init( ENDP_PROG_OUT,        USB_ENDP_BULK, ENDP_PROG_SIZE, NULL );
 8001302:	2102      	movs	r1, #2
 8001304:	4623      	mov	r3, r4
 8001306:	4632      	mov	r2, r6
 8001308:	4608      	mov	r0, r1
 800130a:	f7fe ffc5 	bl	8000298 <usb_ep_init>
  initflag = 1;
 800130e:	2301      	movs	r3, #1
 8001310:	f885 320c 	strb.w	r3, [r5, #524]	@ 0x20c
}
 8001314:	bd70      	pop	{r4, r5, r6, pc}
 8001316:	bf00      	nop
 8001318:	40010800 	andmi	r0, r1, r0, lsl #16
 800131c:	40021000 	andmi	r1, r2, r0
 8001320:	200000e8 	andcs	r0, r0, r8, ror #1
 8001324:	e000e100 	and	lr, r0, r0, lsl #2

08001328 <uart_ctrl>:
#define CTRL_USB	(1<<2)
//control sequence
void uart_ctrl( uint8_t *buf, int size){
  //GPO_T( GLED );
  uint8_t val = 0;
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001328:	4a24      	ldr	r2, [pc, #144]	@ (80013bc <uart_ctrl+0x94>)
void uart_ctrl( uint8_t *buf, int size){
 800132a:	b570      	push	{r4, r5, r6, lr}
  if( GPI_ON(RESET) )val |= CTRL_RST;
 800132c:	6893      	ldr	r3, [r2, #8]
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 800132e:	6892      	ldr	r2, [r2, #8]
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001330:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 8001334:	0492      	lsls	r2, r2, #18
  if( GPI_ON(RESET) )val |= CTRL_RST;
 8001336:	f3c3 3300 	ubfx	r3, r3, #12, #1
  if( GPI_ON(BOOT0) )val |= CTRL_BOOT0;
 800133a:	d501      	bpl.n	8001340 <uart_ctrl+0x18>
 800133c:	f043 0302 	orr.w	r3, r3, #2
 8001340:	1e44      	subs	r4, r0, #1
  for(int i=0; i<size; i++){
    if(buf[i] == 'z')timeout_ms = 0;
 8001342:	2600      	movs	r6, #0
 8001344:	4d1e      	ldr	r5, [pc, #120]	@ (80013c0 <uart_ctrl+0x98>)
  for(int i=0; i<size; i++){
 8001346:	f1c0 0001 	rsb	r0, r0, #1
 800134a:	e00a      	b.n	8001362 <uart_ctrl+0x3a>
    if(buf[i] == 'z')timeout_ms = 0;
 800134c:	7862      	ldrb	r2, [r4, #1]
 800134e:	2a7a      	cmp	r2, #122	@ 0x7a
 8001350:	bf08      	it	eq
 8001352:	f8c5 6208 	streq.w	r6, [r5, #520]	@ 0x208
    if(buf[i] == 'R')val |= CTRL_RST;
 8001356:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800135a:	2a52      	cmp	r2, #82	@ 0x52
 800135c:	d115      	bne.n	800138a <uart_ctrl+0x62>
 800135e:	f043 0301 	orr.w	r3, r3, #1
  for(int i=0; i<size; i++){
 8001362:	1902      	adds	r2, r0, r4
 8001364:	428a      	cmp	r2, r1
 8001366:	dbf1      	blt.n	800134c <uart_ctrl+0x24>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
    if(buf[i] == 'U')val |= CTRL_USB;
    if(buf[i] == 'u')val &=~CTRL_USB;
  }
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 8001368:	f013 0f01 	tst.w	r3, #1
 800136c:	bf14      	ite	ne
 800136e:	f04f 5180 	movne.w	r1, #268435456	@ 0x10000000
 8001372:	f44f 5180 	moveq.w	r1, #4096	@ 0x1000
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 8001376:	079b      	lsls	r3, r3, #30
 8001378:	bf4c      	ite	mi
 800137a:	f44f 5300 	movmi.w	r3, #8192	@ 0x2000
 800137e:	f04f 5300 	movpl.w	r3, #536870912	@ 0x20000000
 8001382:	4a0e      	ldr	r2, [pc, #56]	@ (80013bc <uart_ctrl+0x94>)
  if( val & CTRL_RST )	GPO_ON(RESET); else GPO_OFF(RESET);
 8001384:	6111      	str	r1, [r2, #16]
  if( val & CTRL_BOOT0)	GPO_ON(BOOT0); else GPO_OFF(BOOT0);
 8001386:	6113      	str	r3, [r2, #16]
}
 8001388:	bd70      	pop	{r4, r5, r6, pc}
    if(buf[i] == 'r')val &=~CTRL_RST;
 800138a:	2a72      	cmp	r2, #114	@ 0x72
 800138c:	d102      	bne.n	8001394 <uart_ctrl+0x6c>
 800138e:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
    if(buf[i] == 'u')val &=~CTRL_USB;
 8001392:	e7e6      	b.n	8001362 <uart_ctrl+0x3a>
    if(buf[i] == 'B')val |= CTRL_BOOT0;
 8001394:	2a42      	cmp	r2, #66	@ 0x42
 8001396:	d102      	bne.n	800139e <uart_ctrl+0x76>
 8001398:	f043 0302 	orr.w	r3, r3, #2
    if(buf[i] == 'u')val &=~CTRL_USB;
 800139c:	e7e1      	b.n	8001362 <uart_ctrl+0x3a>
    if(buf[i] == 'b')val &=~CTRL_BOOT0;
 800139e:	2a62      	cmp	r2, #98	@ 0x62
 80013a0:	d102      	bne.n	80013a8 <uart_ctrl+0x80>
 80013a2:	f003 03fd 	and.w	r3, r3, #253	@ 0xfd
    if(buf[i] == 'u')val &=~CTRL_USB;
 80013a6:	e7dc      	b.n	8001362 <uart_ctrl+0x3a>
    if(buf[i] == 'U')val |= CTRL_USB;
 80013a8:	2a55      	cmp	r2, #85	@ 0x55
 80013aa:	d102      	bne.n	80013b2 <uart_ctrl+0x8a>
 80013ac:	f043 0304 	orr.w	r3, r3, #4
    if(buf[i] == 'u')val &=~CTRL_USB;
 80013b0:	e7d7      	b.n	8001362 <uart_ctrl+0x3a>
 80013b2:	2a75      	cmp	r2, #117	@ 0x75
 80013b4:	d1d5      	bne.n	8001362 <uart_ctrl+0x3a>
 80013b6:	f003 03fb 	and.w	r3, r3, #251	@ 0xfb
  for(int i=0; i<size; i++){
 80013ba:	e7d2      	b.n	8001362 <uart_ctrl+0x3a>
 80013bc:	40010c00 	andmi	r0, r1, r0, lsl #24
 80013c0:	200000e8 	andcs	r0, r0, r8, ror #1

080013c4 <programmer_poll>:
void programmer_poll(){
 80013c4:	b530      	push	{r4, r5, lr}
  if(!initflag)return;
 80013c6:	4c56      	ldr	r4, [pc, #344]	@ (8001520 <programmer_poll+0x15c>)
void programmer_poll(){
 80013c8:	b091      	sub	sp, #68	@ 0x44
  if(!initflag)return;
 80013ca:	f894 320c 	ldrb.w	r3, [r4, #524]	@ 0x20c
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d061      	beq.n	8001496 <programmer_poll+0xd2>
  return ((buf->st - buf->en) & UART_MASK);
 80013d2:	7823      	ldrb	r3, [r4, #0]
 80013d4:	7865      	ldrb	r5, [r4, #1]
 80013d6:	1aed      	subs	r5, r5, r3
  if(size > 0){
 80013d8:	f015 05ff 	ands.w	r5, r5, #255	@ 0xff
 80013dc:	d015      	beq.n	800140a <programmer_poll+0x46>
    if( ttymode == TTYM_NORMAL ){
 80013de:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
    if( size > ENDP_TTY_SIZE )size = ENDP_TTY_SIZE;
 80013e2:	2d20      	cmp	r5, #32
 80013e4:	bf28      	it	cs
 80013e6:	2520      	movcs	r5, #32
    if( ttymode == TTYM_NORMAL ){
 80013e8:	4b4e      	ldr	r3, [pc, #312]	@ (8001524 <programmer_poll+0x160>)
 80013ea:	2a00      	cmp	r2, #0
 80013ec:	d155      	bne.n	800149a <programmer_poll+0xd6>
      if(usb_ep_ready( ENDP_TTY_IN | 0x80 )){
 80013ee:	889b      	ldrh	r3, [r3, #4]
 80013f0:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80013f4:	2b30      	cmp	r3, #48	@ 0x30
 80013f6:	d008      	beq.n	800140a <programmer_poll+0x46>
        UART_read( USART, buf, size );
 80013f8:	4629      	mov	r1, r5
 80013fa:	4668      	mov	r0, sp
 80013fc:	f7ff fe5e 	bl	80010bc <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 8001400:	462a      	mov	r2, r5
 8001402:	4669      	mov	r1, sp
 8001404:	2002      	movs	r0, #2
 8001406:	f7ff f90f 	bl	8000628 <_usb_ep_write>
  if(ttymode == TTYM_NORMAL){
 800140a:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 800140e:	4d45      	ldr	r5, [pc, #276]	@ (8001524 <programmer_poll+0x160>)
 8001410:	2b00      	cmp	r3, #0
 8001412:	d158      	bne.n	80014c6 <programmer_poll+0x102>
    if(usb_ep_ready( ENDP_PROG_OUT))usb_ep_read( ENDP_PROG_OUT, (void*)buf );
 8001414:	892b      	ldrh	r3, [r5, #8]
 8001416:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800141a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800141e:	d103      	bne.n	8001428 <programmer_poll+0x64>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 8001420:	2005      	movs	r0, #5
 8001422:	a908      	add	r1, sp, #32
 8001424:	f7ff f946 	bl	80006b4 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_TTY_OUT ))return;
 8001428:	88ab      	ldrh	r3, [r5, #4]
 800142a:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800142e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001432:	d117      	bne.n	8001464 <programmer_poll+0xa0>
    epnum = ENDP_TTY_OUT;
 8001434:	2001      	movs	r0, #1
  if(ttymode != TTYM_CTRL){
 8001436:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 800143a:	2b02      	cmp	r3, #2
 800143c:	d05c      	beq.n	80014f8 <programmer_poll+0x134>
 800143e:	f894 3102 	ldrb.w	r3, [r4, #258]	@ 0x102
 8001442:	f894 2103 	ldrb.w	r2, [r4, #259]	@ 0x103
 8001446:	1a9b      	subs	r3, r3, r2
    if( UART_tx_count( USART ) > (ENDP_TTY_SIZE + 10) ){
 8001448:	b2db      	uxtb	r3, r3
 800144a:	f1c3 03ff 	rsb	r3, r3, #255	@ 0xff
 800144e:	2b2a      	cmp	r3, #42	@ 0x2a
 8001450:	dd08      	ble.n	8001464 <programmer_poll+0xa0>
 8001452:	0040      	lsls	r0, r0, #1
 8001454:	a908      	add	r1, sp, #32
 8001456:	3001      	adds	r0, #1
 8001458:	f7ff f92c 	bl	80006b4 <_usb_ep_read>
      UART_write( USART, buf, size );
 800145c:	b2c1      	uxtb	r1, r0
 800145e:	a808      	add	r0, sp, #32
 8001460:	f7ff fe02 	bl	8001068 <UART1_write>
  if( ttymode != TTYM_NORMAL ){
 8001464:	f894 3204 	ldrb.w	r3, [r4, #516]	@ 0x204
 8001468:	b15b      	cbz	r3, 8001482 <programmer_poll+0xbe>
 800146a:	4b2f      	ldr	r3, [pc, #188]	@ (8001528 <programmer_poll+0x164>)
 800146c:	681b      	ldr	r3, [r3, #0]
    if( systick_ms() > timeout_ms ){
 800146e:	f8d4 2208 	ldr.w	r2, [r4, #520]	@ 0x208
 8001472:	429a      	cmp	r2, r3
 8001474:	d205      	bcs.n	8001482 <programmer_poll+0xbe>
      ttymode = TTYM_NORMAL;
 8001476:	2300      	movs	r3, #0
      uart_cfg( &tty_cfg );
 8001478:	482c      	ldr	r0, [pc, #176]	@ (800152c <programmer_poll+0x168>)
      ttymode = TTYM_NORMAL;
 800147a:	f884 3204 	strb.w	r3, [r4, #516]	@ 0x204
      uart_cfg( &tty_cfg );
 800147e:	f7ff fe7b 	bl	8001178 <uart_cfg>
  if( ttymode == TTYM_NORMAL ){		//green
 8001482:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
 8001486:	4b2a      	ldr	r3, [pc, #168]	@ (8001530 <programmer_poll+0x16c>)
 8001488:	2a00      	cmp	r2, #0
 800148a:	d13e      	bne.n	800150a <programmer_poll+0x146>
    GPO_ON(GLED); GPO_OFF(RLED);
 800148c:	2210      	movs	r2, #16
 800148e:	611a      	str	r2, [r3, #16]
 8001490:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
    GPO_ON(RLED); GPO_ON(GLED);
 8001494:	611a      	str	r2, [r3, #16]
}
 8001496:	b011      	add	sp, #68	@ 0x44
 8001498:	bd30      	pop	{r4, r5, pc}
    }else if( ttymode == TTYM_PROGR ){
 800149a:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
 800149e:	2a01      	cmp	r2, #1
 80014a0:	d10c      	bne.n	80014bc <programmer_poll+0xf8>
      if(usb_ep_ready( ENDP_PROG_IN | 0x80 )){
 80014a2:	891b      	ldrh	r3, [r3, #8]
 80014a4:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80014a8:	2b30      	cmp	r3, #48	@ 0x30
 80014aa:	d0ae      	beq.n	800140a <programmer_poll+0x46>
        UART_read( USART, buf, size);
 80014ac:	4629      	mov	r1, r5
 80014ae:	4668      	mov	r0, sp
 80014b0:	f7ff fe04 	bl	80010bc <UART1_read>
  _usb_ep_write((epnum & 0x0F)*2, buf, size);
 80014b4:	462a      	mov	r2, r5
 80014b6:	4669      	mov	r1, sp
 80014b8:	2004      	movs	r0, #4
 80014ba:	e7a4      	b.n	8001406 <programmer_poll+0x42>
      UART_read( USART, buf, size );
 80014bc:	4629      	mov	r1, r5
 80014be:	4668      	mov	r0, sp
 80014c0:	f7ff fdfc 	bl	80010bc <UART1_read>
 80014c4:	e7a1      	b.n	800140a <programmer_poll+0x46>
    if(usb_ep_ready( ENDP_TTY_OUT ))usb_ep_read( ENDP_TTY_OUT, (void*)buf );
 80014c6:	88ab      	ldrh	r3, [r5, #4]
 80014c8:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 80014cc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80014d0:	d103      	bne.n	80014da <programmer_poll+0x116>
  return _usb_ep_read((epnum & 0x0F)*2 + 1, buf);
 80014d2:	2003      	movs	r0, #3
 80014d4:	a908      	add	r1, sp, #32
 80014d6:	f7ff f8ed 	bl	80006b4 <_usb_ep_read>
    if(!usb_ep_ready(ENDP_PROG_OUT))return;
 80014da:	892b      	ldrh	r3, [r5, #8]
 80014dc:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 80014e0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80014e4:	d1be      	bne.n	8001464 <programmer_poll+0xa0>
 80014e6:	4b10      	ldr	r3, [pc, #64]	@ (8001528 <programmer_poll+0x164>)
    epnum = ENDP_PROG_OUT;
 80014e8:	2002      	movs	r0, #2
 80014ea:	681b      	ldr	r3, [r3, #0]
    timeout_reset();
 80014ec:	f503 531c 	add.w	r3, r3, #9984	@ 0x2700
 80014f0:	3310      	adds	r3, #16
 80014f2:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
 80014f6:	e79e      	b.n	8001436 <programmer_poll+0x72>
 80014f8:	a908      	add	r1, sp, #32
 80014fa:	2005      	movs	r0, #5
 80014fc:	f7ff f8da 	bl	80006b4 <_usb_ep_read>
 8001500:	4601      	mov	r1, r0
    uart_ctrl( buf, size );
 8001502:	a808      	add	r0, sp, #32
 8001504:	f7ff ff10 	bl	8001328 <uart_ctrl>
 8001508:	e7ac      	b.n	8001464 <programmer_poll+0xa0>
  }else if( ttymode == TTYM_PROGR ){//red
 800150a:	f894 2204 	ldrb.w	r2, [r4, #516]	@ 0x204
 800150e:	2a01      	cmp	r2, #1
 8001510:	f04f 0220 	mov.w	r2, #32
    GPO_ON(RLED); GPO_OFF(GLED);
 8001514:	611a      	str	r2, [r3, #16]
 8001516:	bf0c      	ite	eq
 8001518:	f44f 1280 	moveq.w	r2, #1048576	@ 0x100000
    GPO_ON(RLED); GPO_ON(GLED);
 800151c:	2210      	movne	r2, #16
 800151e:	e7b9      	b.n	8001494 <programmer_poll+0xd0>
 8001520:	200000e8 	andcs	r0, r0, r8, ror #1
 8001524:	40005c00 	andmi	r5, r0, r0, lsl #24
 8001528:	200000e4 	andcs	r0, r0, r4, ror #1
 800152c:	20000013 	andcs	r0, r0, r3, lsl r0
 8001530:	40010800 	andmi	r0, r1, r0, lsl #16

08001534 <Reset_Handler>:
 8001534:	2100      	movs	r1, #0
 8001536:	e003      	b.n	8001540 <LoopCopyDataInit>

08001538 <CopyDataInit>:
 8001538:	4b0a      	ldr	r3, [pc, #40]	@ (8001564 <LoopFillZerobss+0x10>)
 800153a:	585b      	ldr	r3, [r3, r1]
 800153c:	5043      	str	r3, [r0, r1]
 800153e:	3104      	adds	r1, #4

08001540 <LoopCopyDataInit>:
 8001540:	4809      	ldr	r0, [pc, #36]	@ (8001568 <LoopFillZerobss+0x14>)
 8001542:	4b0a      	ldr	r3, [pc, #40]	@ (800156c <LoopFillZerobss+0x18>)
 8001544:	1842      	adds	r2, r0, r1
 8001546:	429a      	cmp	r2, r3
 8001548:	d3f6      	bcc.n	8001538 <CopyDataInit>
 800154a:	4a09      	ldr	r2, [pc, #36]	@ (8001570 <LoopFillZerobss+0x1c>)
 800154c:	e002      	b.n	8001554 <LoopFillZerobss>

0800154e <FillZerobss>:
 800154e:	2300      	movs	r3, #0
 8001550:	f842 3b04 	str.w	r3, [r2], #4

08001554 <LoopFillZerobss>:
 8001554:	4b07      	ldr	r3, [pc, #28]	@ (8001574 <LoopFillZerobss+0x20>)
 8001556:	429a      	cmp	r2, r3
 8001558:	d3f9      	bcc.n	800154e <FillZerobss>
 800155a:	f7fe fe38 	bl	80001ce <SystemInit>
 800155e:	f000 f80d 	bl	800157c <main>
 8001562:	4770      	bx	lr
 8001564:	080017ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, ip}
 8001568:	20000000 	andcs	r0, r0, r0
 800156c:	2000001c 	andcs	r0, r0, ip, lsl r0
 8001570:	2000001c 	andcs	r0, r0, ip, lsl r0
 8001574:	200002f8 	strdcs	r0, [r0], -r8

08001578 <BusFault_Handler>:
 8001578:	e7fe      	b.n	8001578 <BusFault_Handler>
	...

0800157c <main>:

int main(void){
 800157c:	b508      	push	{r3, lr}
  SysClockMax();
 800157e:	f7fe fdcf 	bl	8000120 <SysClockMax>
  systick_init();
 8001582:	f7ff fd15 	bl	8000fb0 <systick_init>
  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN;
 8001586:	4a1f      	ldr	r2, [pc, #124]	@ (8001604 <main+0x88>)
 8001588:	6993      	ldr	r3, [r2, #24]
 800158a:	f043 031c 	orr.w	r3, r3, #28
 800158e:	6193      	str	r3, [r2, #24]

  GPIO_config(RLED); GPIO_config(GLED); GPIO_config(BLED);
 8001590:	4b1d      	ldr	r3, [pc, #116]	@ (8001608 <main+0x8c>)
 8001592:	681a      	ldr	r2, [r3, #0]
 8001594:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8001598:	f442 1240 	orr.w	r2, r2, #3145728	@ 0x300000
 800159c:	601a      	str	r2, [r3, #0]
 800159e:	681a      	ldr	r2, [r3, #0]
 80015a0:	f422 2270 	bic.w	r2, r2, #983040	@ 0xf0000
 80015a4:	f442 3240 	orr.w	r2, r2, #196608	@ 0x30000
 80015a8:	601a      	str	r2, [r3, #0]
 80015aa:	681a      	ldr	r2, [r3, #0]
 80015ac:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80015b0:	f042 7240 	orr.w	r2, r2, #50331648	@ 0x3000000
 80015b4:	601a      	str	r2, [r3, #0]
  GPIO_config(ADC_IN); GPIO_config(RESET); GPIO_config(BOOT0);
 80015b6:	681a      	ldr	r2, [r3, #0]
 80015b8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80015bc:	601a      	str	r2, [r3, #0]
 80015be:	4a13      	ldr	r2, [pc, #76]	@ (800160c <main+0x90>)
 80015c0:	6851      	ldr	r1, [r2, #4]
 80015c2:	f421 2170 	bic.w	r1, r1, #983040	@ 0xf0000
 80015c6:	f441 3140 	orr.w	r1, r1, #196608	@ 0x30000
 80015ca:	6051      	str	r1, [r2, #4]
 80015cc:	6851      	ldr	r1, [r2, #4]
 80015ce:	f421 0170 	bic.w	r1, r1, #15728640	@ 0xf00000
 80015d2:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 80015d6:	6051      	str	r1, [r2, #4]
  
  GPO_OFF(RLED); GPO_OFF(GLED); GPO_OFF(BLED);
 80015d8:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80015dc:	6119      	str	r1, [r3, #16]
 80015de:	f44f 1180 	mov.w	r1, #1048576	@ 0x100000
 80015e2:	6119      	str	r1, [r3, #16]
 80015e4:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 80015e8:	6119      	str	r1, [r3, #16]
  GPO_OFF(RESET); GPO_OFF(BOOT0);
 80015ea:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80015ee:	6113      	str	r3, [r2, #16]
 80015f0:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80015f4:	6113      	str	r3, [r2, #16]
  
  USB_setup();
 80015f6:	f7fe fdfa 	bl	80001ee <USB_setup>
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 80015fa:	b662      	cpsie	i
  __enable_irq();
  
  //uint32_t ntime_ms = 0;

  while(1){
    usb_class_poll();
 80015fc:	f7ff fcb2 	bl	8000f64 <usb_class_poll>
  while(1){
 8001600:	e7fc      	b.n	80015fc <main+0x80>
 8001602:	bf00      	nop
 8001604:	40021000 	andmi	r1, r2, r0
 8001608:	40010800 	andmi	r0, r1, r0, lsl #16
 800160c:	40010c00 	andmi	r0, r1, r0, lsl #24
	...

08001612 <USB_HIDDescriptor>:
 8001612:	09ff0006 	ldmibeq	pc!, {r1, r2}^	@ <UNPREDICTABLE>
 8001616:	1501a101 	strne	sl, [r1, #-257]	@ 0xfffffeff
 800161a:	75ff2500 	ldrbvc	r2, [pc, #1280]!	@ 8001b22 <_etext+0x376>
 800161e:	09029508 	stmdbeq	r2, {r3, r8, sl, ip, pc}
 8001622:	0102b200 	mrseq	fp, R10_usr
 8001626:	 	movweq	r0, #16576	@ 0x40c0

08001628 <USB_StringLangDescriptor>:
 8001628:	04090304 	streq	r0, [r9], #-772	@ 0xfffffcfc

0800162c <USB_StringManufacturingDescriptor>:
 800162c:	00430316 	subeq	r0, r3, r6, lsl r3
 8001630:	004b004f 	subeq	r0, fp, pc, asr #32
 8001634:	004f0050 	subeq	r0, pc, r0, asr r0	@ <UNPREDICTABLE>
 8001638:	00450057 	subeq	r0, r5, r7, asr r0
 800163c:	00450048 	subeq	r0, r5, r8, asr #32
 8001640:	 			@ <UNDEFINED> instruction: 0x03220055

08001642 <USB_StringProdDescriptor>:
 8001642:	004b0322 	subeq	r0, fp, r2, lsr #6
 8001646:	00720061 	rsbseq	r0, r2, r1, rrx
 800164a:	006b0061 	rsbeq	r0, fp, r1, rrx
 800164e:	00740061 	rsbseq	r0, r4, r1, rrx
 8001652:	00740069 	rsbseq	r0, r4, r9, rrx
 8001656:	00610073 	rsbeq	r0, r1, r3, ror r0
 800165a:	0043005f 	subeq	r0, r3, pc, asr r0
 800165e:	00330048 	eorseq	r0, r3, r8, asr #32
 8001662:	 	movweq	r0, #16434	@ 0x4032

08001664 <USB_StringSerialDescriptor>:
 8001664:	00310304 	eorseq	r0, r1, r4, lsl #6

08001668 <USB_String_TTY>:
 8001668:	00430312 	subeq	r0, r3, r2, lsl r3
 800166c:	00330048 	eorseq	r0, r3, r8, asr #32
 8001670:	005f0032 	subseq	r0, pc, r2, lsr r0	@ <UNPREDICTABLE>
 8001674:	00420044 	subeq	r0, r2, r4, asr #32
 8001678:	 	tsteq	r4, #71	@ 0x47

0800167a <USB_String_PROGR>:
 800167a:	00430314 	subeq	r0, r3, r4, lsl r3
 800167e:	00330048 	eorseq	r0, r3, r8, asr #32
 8001682:	005f0032 	subseq	r0, pc, r2, lsr r0	@ <UNPREDICTABLE>
 8001686:	00520050 	subseq	r0, r2, r0, asr r0
 800168a:	0047004f 	subeq	r0, r7, pc, asr #32

0800168e <USB_DeviceDescriptor>:
 800168e:	01100112 	tsteq	r0, r2, lsl r1
 8001692:	080102ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9}
 8001696:	05df16c0 	ldrbeq	r1, [pc, #1728]	@ 8001d5e <_etext+0x5b2>
 800169a:	02010001 	andeq	r0, r1, #1
 800169e:	 	andeq	r0, r9, #-1073741824	@ 0xc0000000

080016a0 <USB_ConfigDescriptor>:
 80016a0:	01020209 	tsteq	r2, r9, lsl #4
 80016a4:	80000107 	andhi	r0, r0, r7, lsl #2
 80016a8:	00040932 	andeq	r0, r4, r2, lsr r9
 80016ac:	00030000 	andeq	r0, r3, r0
 80016b0:	21090000 	mrscs	r0, (UNDEF: 9)
 80016b4:	01000101 	tsteq	r0, r1, lsl #2
 80016b8:	08001522 	stmdaeq	r0, {r1, r5, r8, sl, ip}
 80016bc:	0202010b 	andeq	r0, r2, #-1073741822	@ 0xc0000002
 80016c0:	09040002 	stmdbeq	r4, {r1}
 80016c4:	01000104 	tsteq	r0, r4, lsl #2
 80016c8:	04000202 	streq	r0, [r0], #-514	@ 0xfffffdfe
 80016cc:	10002405 	andne	r2, r0, r5, lsl #8
 80016d0:	01240501 			@ <UNDEFINED> instruction: 0x01240501
 80016d4:	24040200 	strcs	r0, [r4], #-512	@ 0xfffffe00
 80016d8:	24050202 	strcs	r0, [r5], #-514	@ 0xfffffdfe
 80016dc:	07020106 	streq	r0, [r2, -r6, lsl #2]
 80016e0:	08038305 	stmdaeq	r3, {r0, r2, r8, r9, pc}
 80016e4:	04096400 	streq	r6, [r9], #-1024	@ 0xfffffc00
 80016e8:	0a020002 	beq	80816f8 <_etext+0x7ff4c>
 80016ec:	07000000 	streq	r0, [r0, -r0]
 80016f0:	20020105 	andcs	r0, r2, r5, lsl #2
 80016f4:	05070000 	streq	r0, [r7, #-0]
 80016f8:	00200281 	eoreq	r0, r0, r1, lsl #5
 80016fc:	030b0800 	movweq	r0, #47104	@ 0xb800
 8001700:	00020202 	andeq	r0, r2, r2, lsl #4
 8001704:	03040905 	movweq	r0, #18693	@ 0x4905
 8001708:	02020100 	andeq	r0, r2, #0, 2
 800170c:	24050500 	strcs	r0, [r5], #-1280	@ 0xfffffb00
 8001710:	05011000 	streq	r1, [r1, #-0]
 8001714:	04000124 	streq	r0, [r0], #-292	@ 0xfffffedc
 8001718:	02022404 	andeq	r2, r2, #4, 8	@ 0x4000000
 800171c:	03062405 	movweq	r2, #25605	@ 0x6405
 8001720:	84050704 	strhi	r0, [r5], #-1796	@ 0xfffff8fc
 8001724:	64000803 	strvs	r0, [r0], #-2051	@ 0xfffff7fd
 8001728:	00040409 	andeq	r0, r4, r9, lsl #8
 800172c:	00000a02 	andeq	r0, r0, r2, lsl #20
 8001730:	02050700 	andeq	r0, r5, #0, 14
 8001734:	00002002 	andeq	r2, r0, r2
 8001738:	02820507 	addeq	r0, r2, #29360128	@ 0x1c00000
 800173c:	08000020 	stmdaeq	r0, {r5}
 8001740:	0102050b 	tsteq	r2, fp, lsl #10
 8001744:	09000001 	stmdbeq	r0, {r0}
 8001748:	00000504 	andeq	r0, r0, r4, lsl #10
 800174c:	00000101 	andeq	r0, r0, r1, lsl #2
 8001750:	00012409 	andeq	r2, r1, r9, lsl #8
 8001754:	01001e01 	tsteq	r0, r1, lsl #28
 8001758:	02240c06 	eoreq	r0, r4, #1536	@ 0x600
 800175c:	00020101 	andeq	r0, r2, r1, lsl #2
 8001760:	00000001 	andeq	r0, r0, r1
 8001764:	03240900 			@ <UNDEFINED> instruction: 0x03240900
 8001768:	00010102 	andeq	r0, r1, r2, lsl #2
 800176c:	04090001 	streq	r0, [r9], #-1
 8001770:	01000006 	tsteq	r0, r6
 8001774:	09000002 	stmdbeq	r0, {r1}
 8001778:	01010604 	tsteq	r1, r4, lsl #12
 800177c:	00000201 	andeq	r0, r0, r1, lsl #4
 8001780:	02012407 	andeq	r2, r1, #117440512	@ 0x7000000
 8001784:	0b000101 	bleq	8001b90 <_etext+0x3e4>
 8001788:	01010224 	tsteq	r1, r4, lsr #4
 800178c:	e0011002 	and	r1, r1, r2
 8001790:	050900ab 	streq	r0, [r9, #-171]	@ 0xffffff55
 8001794:	00640185 	rsbeq	r0, r4, r5, lsl #3
 8001798:	07000001 	streq	r0, [r0, -r1]
 800179c:	00000125 	andeq	r0, r0, r5, lsr #2
	...

080017a2 <USB_DeviceQualifierDescriptor>:
 80017a2:	0200060a 	andeq	r0, r0, #10485760	@ 0xa00000
 80017a6:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
 80017aa:	Address 0x80017aa is out of bounds.


Disassembly of section .data:

20000000 <lastaddr>:
20000000:	00000040 	andeq	r0, r0, r0, asr #32

20000004 <filter.6>:
  static uint32_t filter = (2048<<(OFILTER_PWR+OFILTER_MLT));
20000004:	00800000 	addeq	r0, r0, r0

20000008 <filter.5>:
  static uint32_t filter = (2048<<MIDFILTER_PWR);
20000008:	00200000 	eoreq	r0, r0, r0

2000000c <progr_cfg>:
volatile struct cdc_linecoding progr_cfg = {
2000000c:	00002580 	andeq	r2, r0, r0, lsl #11
20000010:	 	andhi	r0, r8, r1

20000013 <tty_cfg>:
volatile struct cdc_linecoding tty_cfg = {
20000013:	00002580 	andeq	r2, r0, r0, lsl #11
20000017:	00080001 	andeq	r0, r8, r1
	...

Disassembly of section .bss:

2000001c <epfunc_out>:
	...

2000003c <epfunc_in>:
	...

2000005c <ep0_buf>:
static const uint8_t *ep0_buf = NULL;
2000005c:	00000000 	andeq	r0, r0, r0

20000060 <ep0_count>:
	...

20000062 <setup_packet>:
	...

2000006a <bytesread.0>:
	...

2000006c <configuration>:
static uint8_t configuration = 0;
2000006c:	00000000 	andeq	r0, r0, r0

20000070 <adc_idx>:
	...

20000072 <adc_buffer>:
	...

200000ca <oversampl_cnt.3>:
	...

200000cc <curval.2>:
	...

200000ce <adc_vref>:
	...

200000d0 <adc_val>:
	...

200000d2 <adc_timeH>:
	...

200000d4 <adc_timeL>:
	...

200000d6 <resdata.1>:
	...

200000d8 <hid_data>:
hid_data_t hid_data;
200000d8:	00000000 	andeq	r0, r0, r0

200000dc <hid_timeout>:
static volatile uint32_t hid_timeout = 0;
200000dc:	00000000 	andeq	r0, r0, r0

200000e0 <ntime_ms.0>:
  static uint32_t ntime_ms = 0;
200000e0:	00000000 	andeq	r0, r0, r0

200000e4 <systick_internal>:
volatile uint32_t systick_internal = 0;
200000e4:	00000000 	andeq	r0, r0, r0

200000e8 <uart1_rx>:
	...

200001ea <uart1_tx>:
	...

200002ec <ttymode>:
volatile char ttymode = TTYM_NORMAL;
200002ec:	00000000 	andeq	r0, r0, r0

200002f0 <timeout_ms>:
volatile uint32_t timeout_ms = 0;
200002f0:	00000000 	andeq	r0, r0, r0

200002f4 <initflag>:
static char initflag = 0;
200002f4:	00000000 	andeq	r0, r0, r0

Disassembly of section ._usrstack:

200002f8 <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10cfd24>
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	@ 0xfffff7e0
   8:	2e32313a 	mrccs	1, 1, r3, cr2, cr10, {1}
   c:	65722e32 	ldrbvs	r2, [r2, #-3634]!	@ 0xfffff1ce
  10:	312d316c 			@ <UNDEFINED> instruction: 0x312d316c
  14:	32312029 	eorscc	r2, r1, #41	@ 0x29
  18:	312e322e 			@ <UNDEFINED> instruction: 0x312e322e
  1c:	32303220 	eorscc	r3, r0, #32, 4
  20:	30323132 	eorscc	r3, r2, r2, lsr r1
  24:	Address 0x24 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	@ 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	@ 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	@ 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__Stack_Size+0x4503c>
  2c:	Address 0x2c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000120 	stmdaeq	r0, {r5, r8}
  14:	000000ba 	strheq	r0, [r0], -sl
  18:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
  1c:	00000094 	muleq	r0, r4, r0
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	050a0002 	streq	r0, [sl, #-2]
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  3c:	00000698 	muleq	r0, r8, r6
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	182b0002 	stmdane	fp!, {r1}
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
  5c:	0000073c 	andeq	r0, r0, ip, lsr r7
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	32920002 	addscc	r0, r2, #2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	08000fb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, fp}
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	33b20002 			@ <UNDEFINED> instruction: 0x33b20002
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	08000fcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, fp}
  9c:	00000568 	andeq	r0, r0, r8, ror #10
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000506 	andeq	r0, r0, r6, lsl #10
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000012 	andeq	r0, r0, r2, lsl r0
      10:	0001ae0c 	andeq	sl, r1, ip, lsl #28
      14:	00015800 	andeq	r5, r1, r0, lsl #16
      18:	00002000 	andeq	r2, r0, r0
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	000000f8 	strdeq	r0, [r0], -r8
      30:	0004aa03 	andeq	sl, r4, r3, lsl #20
      34:	17220400 	strne	r0, [r2, -r0, lsl #8]!
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	b9050202 	stmdblt	r5, {r1, r9}
      40:	02000001 	andeq	r0, r0, #1
      44:	01a50504 			@ <UNDEFINED> instruction: 0x01a50504
      48:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
      4c:	0001a005 	andeq	sl, r1, r5
      50:	08010200 	stmdaeq	r1, {r9}
      54:	000000f6 	strdeq	r0, [r0], -r6
      58:	ce070202 	cdpgt	2, 0, cr0, cr7, cr2, {0}
      5c:	03000000 	movweq	r0, #0
      60:	000001cf 	andeq	r0, r0, pc, asr #3
      64:	70193404 	andsvc	r3, r9, r4, lsl #8
      68:	04000000 	streq	r0, [r0], #-0
      6c:	0000005f 	andeq	r0, r0, pc, asr r0
      70:	36070402 	strcc	r0, [r7], -r2, lsl #8
      74:	02000001 	andeq	r0, r0, #1
      78:	01310708 	teqeq	r1, r8, lsl #14
      7c:	04050000 	streq	r0, [r5], #-0
      80:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
      84:	07040200 	streq	r0, [r4, -r0, lsl #4]
      88:	0000013b 	andeq	r0, r0, fp, lsr r1
      8c:	58052406 	stmdapl	r5, {r1, r2, sl, sp}
      90:	01240901 			@ <UNDEFINED> instruction: 0x01240901
      94:	41070000 	mrsmi	r0, (UNDEF: 7)
      98:	05005243 	streq	r5, [r0, #-579]	@ 0xfffffdbd
      9c:	6b11015a 	blvs	44060c <__Stack_Size+0x43f60c>
      a0:	02000000 	andeq	r0, r0, #0
      a4:	f1080023 			@ <UNDEFINED> instruction: 0xf1080023
      a8:	05000000 	streq	r0, [r0, #-0]
      ac:	6b11015b 	blvs	440620 <__Stack_Size+0x43f620>
      b0:	02000000 	andeq	r0, r0, #0
      b4:	ee080423 	cdp	4, 0, cr0, cr8, cr3, {1}
      b8:	05000000 	streq	r0, [r0, #-0]
      bc:	6b11015c 	blvs	440634 <__Stack_Size+0x43f634>
      c0:	02000000 	andeq	r0, r0, #0
      c4:	53070823 	movwpl	r0, #30755	@ 0x7823
      c8:	5d050052 	stcpl	0, cr0, [r5, #-328]	@ 0xfffffeb8
      cc:	006b1101 	rsbeq	r1, fp, r1, lsl #2
      d0:	23020000 	movwcs	r0, #8192	@ 0x2000
      d4:	5243070c 	subpl	r0, r3, #12, 14	@ 0x300000
      d8:	015e0500 	cmpeq	lr, r0, lsl #10
      dc:	00006b11 	andeq	r6, r0, r1, lsl fp
      e0:	10230200 	eorne	r0, r3, r0, lsl #4
      e4:	00524107 	subseq	r4, r2, r7, lsl #2
      e8:	11015f05 	tstne	r1, r5, lsl #30
      ec:	0000006b 	andeq	r0, r0, fp, rrx
      f0:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
      f4:	00000104 	andeq	r0, r0, r4, lsl #2
      f8:	11016005 	tstne	r1, r5
      fc:	0000006b 	andeq	r0, r0, fp, rrx
     100:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
     104:	0052424f 	subseq	r4, r2, pc, asr #4
     108:	11016105 	tstne	r1, r5, lsl #2
     10c:	0000006b 	andeq	r0, r0, fp, rrx
     110:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
     114:	000000a1 	andeq	r0, r0, r1, lsr #1
     118:	11016205 	tstne	r1, r5, lsl #4
     11c:	0000006b 	andeq	r0, r0, fp, rrx
     120:	00202302 	eoreq	r2, r0, r2, lsl #6
     124:	00007d09 	andeq	r7, r0, r9, lsl #26
     128:	01630500 	cmneq	r3, r0, lsl #10
     12c:	00008c03 	andeq	r8, r0, r3, lsl #24
     130:	051c0600 	ldreq	r0, [ip, #-1536]	@ 0xfffffa00
     134:	ac090179 	stfges	f0, [r9], {121}	@ 0x79
     138:	07000001 	streq	r0, [r0, -r1]
     13c:	004c5243 	subeq	r5, ip, r3, asr #4
     140:	11017b05 	tstne	r1, r5, lsl #22
     144:	0000006b 	andeq	r0, r0, fp, rrx
     148:	07002302 	streq	r2, [r0, -r2, lsl #6]
     14c:	00485243 	subeq	r5, r8, r3, asr #4
     150:	11017c05 	tstne	r1, r5, lsl #24
     154:	0000006b 	andeq	r0, r0, fp, rrx
     158:	07042302 	streq	r2, [r4, -r2, lsl #6]
     15c:	00524449 	subseq	r4, r2, r9, asr #8
     160:	11017d05 	tstne	r1, r5, lsl #26
     164:	0000006b 	andeq	r0, r0, fp, rrx
     168:	07082302 	streq	r2, [r8, -r2, lsl #6]
     16c:	0052444f 	subseq	r4, r2, pc, asr #8
     170:	11017e05 	tstne	r1, r5, lsl #28
     174:	0000006b 	andeq	r0, r0, fp, rrx
     178:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
     17c:	0000008b 	andeq	r0, r0, fp, lsl #1
     180:	11017f05 	tstne	r1, r5, lsl #30
     184:	0000006b 	andeq	r0, r0, fp, rrx
     188:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
     18c:	00525242 	subseq	r5, r2, r2, asr #4
     190:	11018005 	tstne	r1, r5
     194:	0000006b 	andeq	r0, r0, fp, rrx
     198:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
     19c:	000001eb 	andeq	r0, r0, fp, ror #3
     1a0:	11018105 	tstne	r1, r5, lsl #2
     1a4:	0000006b 	andeq	r0, r0, fp, rrx
     1a8:	00182302 	andseq	r2, r8, r2, lsl #6
     1ac:	0000b209 	andeq	fp, r0, r9, lsl #4
     1b0:	01820500 	orreq	r0, r2, r0, lsl #10
     1b4:	00013103 	andeq	r3, r1, r3, lsl #2
     1b8:	05280600 	streq	r0, [r8, #-1536]!	@ 0xfffffa00
     1bc:	630901bb 	movwvs	r0, #37307	@ 0x91bb
     1c0:	07000002 	streq	r0, [r0, -r2]
     1c4:	05005243 	streq	r5, [r0, #-579]	@ 0xfffffdbd
     1c8:	6b1101bd 	blvs	4408c4 <__Stack_Size+0x43f8c4>
     1cc:	02000000 	andeq	r0, r0, #0
     1d0:	0d080023 	stceq	0, cr0, [r8, #-140]	@ 0xffffff74
     1d4:	05000000 	streq	r0, [r0, #-0]
     1d8:	6b1101be 	blvs	4408d8 <__Stack_Size+0x43f8d8>
     1dc:	02000000 	andeq	r0, r0, #0
     1e0:	43070423 	movwmi	r0, #29731	@ 0x7423
     1e4:	05005249 	streq	r5, [r0, #-585]	@ 0xfffffdb7
     1e8:	6b1101bf 	blvs	4408ec <__Stack_Size+0x43f8ec>
     1ec:	02000000 	andeq	r0, r0, #0
     1f0:	23080823 	movwcs	r0, #34851	@ 0x8823
     1f4:	05000001 	streq	r0, [r0, #-1]
     1f8:	6b1101c0 	blvs	440900 <__Stack_Size+0x43f900>
     1fc:	02000000 	andeq	r0, r0, #0
     200:	0d080c23 	stceq	12, cr0, [r8, #-140]	@ 0xffffff74
     204:	05000001 	streq	r0, [r0, #-1]
     208:	6b1101c1 	blvs	440914 <__Stack_Size+0x43f914>
     20c:	02000000 	andeq	r0, r0, #0
     210:	90081023 	andls	r1, r8, r3, lsr #32
     214:	05000000 	streq	r0, [r0, #-0]
     218:	6b1101c2 	blvs	440928 <__Stack_Size+0x43f928>
     21c:	02000000 	andeq	r0, r0, #0
     220:	00081423 	andeq	r1, r8, r3, lsr #8
     224:	05000000 	streq	r0, [r0, #-0]
     228:	6b1101c3 	blvs	44093c <__Stack_Size+0x43f93c>
     22c:	02000000 	andeq	r0, r0, #0
     230:	1b081823 	blne	2062c4 <__Stack_Size+0x2052c4>
     234:	05000001 	streq	r0, [r0, #-1]
     238:	6b1101c4 	blvs	440950 <__Stack_Size+0x43f950>
     23c:	02000000 	andeq	r0, r0, #0
     240:	08081c23 	stmdaeq	r8, {r0, r1, r5, sl, fp, ip}
     244:	05000000 	streq	r0, [r0, #-0]
     248:	6b1101c5 	blvs	440964 <__Stack_Size+0x43f964>
     24c:	02000000 	andeq	r0, r0, #0
     250:	43072023 	movwmi	r2, #28707	@ 0x7023
     254:	05005253 	streq	r5, [r0, #-595]	@ 0xfffffdad
     258:	6b1101c6 	blvs	440978 <__Stack_Size+0x43f978>
     25c:	02000000 	andeq	r0, r0, #0
     260:	09002423 	stmdbeq	r0, {r0, r1, r5, sl, sp}
     264:	000001c3 	andeq	r0, r0, r3, asr #3
     268:	0301c905 	movweq	ip, #6405	@ 0x1905
     26c:	000001b9 			@ <UNDEFINED> instruction: 0x000001b9
     270:	00bf010a 	adcseq	r0, pc, sl, lsl #2
     274:	46060000 	strmi	r0, [r6], -r0
     278:	02800106 	addeq	r0, r0, #-2147483647	@ 0x80000001
     27c:	000b0000 	andeq	r0, fp, r0
     280:	0097010a 	addseq	r0, r7, sl, lsl #2
     284:	28060000 	stmdacs	r6, {}	@ <UNPREDICTABLE>
     288:	02900106 	addseq	r0, r0, #-2147483647	@ 0x80000001
     28c:	000b0000 	andeq	r0, fp, r0
     290:	00e1010a 	rsceq	r0, r1, sl, lsl #2
     294:	08070000 	stmdaeq	r7, {}	@ <UNPREDICTABLE>
     298:	02a00106 	adceq	r0, r0, #-2147483647	@ 0x80000001
     29c:	000b0000 	andeq	r0, fp, r0
     2a0:	0116010c 	tsteq	r6, ip, lsl #2
     2a4:	0f010000 	svceq	0x00010000
     2a8:	007e0105 	rsbseq	r0, lr, r5, lsl #2
     2ac:	157c0000 	ldrbne	r0, [ip, #-0]!
     2b0:	16100800 	ldrne	r0, [r0], -r0, lsl #16
     2b4:	00000800 	andeq	r0, r0, r0, lsl #16
     2b8:	31010000 	mrscc	r0, (UNDEF: 1)
     2bc:	0d000004 	stceq	0, cr0, [r0, #-16]
     2c0:	08001590 	stmdaeq	r0, {r4, r7, r8, sl, ip}
     2c4:	0800159e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, sl, ip}
     2c8:	000002e1 	andeq	r0, r0, r1, ror #5
     2cc:	00012c0e 	andeq	r2, r1, lr, lsl #24
     2d0:	03140100 	tsteq	r4, #0, 2
     2d4:	0000005f 	andeq	r0, r0, pc, asr r0
     2d8:	00000024 	andeq	r0, r0, r4, lsr #32
     2dc:	00000020 	andeq	r0, r0, r0, lsr #32
     2e0:	02f30f00 	rscseq	r0, r3, #0, 30
     2e4:	2c100000 	ldccs	0, cr0, [r0], {-0}
     2e8:	01000001 	tsteq	r0, r1
     2ec:	005f0314 	subseq	r0, pc, r4, lsl r3	@ <UNPREDICTABLE>
     2f0:	0d000000 	stceq	0, cr0, [r0, #-0]
     2f4:	0800159e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, sl, ip}
     2f8:	080015aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, ip}
     2fc:	00000315 	andeq	r0, r0, r5, lsl r3
     300:	00012c0e 	andeq	r2, r1, lr, lsl #24
     304:	16140100 	ldrne	r0, [r4], -r0, lsl #2
     308:	0000005f 	andeq	r0, r0, pc, asr r0
     30c:	00000047 	andeq	r0, r0, r7, asr #32
     310:	00000043 	andeq	r0, r0, r3, asr #32
     314:	03270f00 			@ <UNDEFINED> instruction: 0x03270f00
     318:	2c100000 	ldccs	0, cr0, [r0], {-0}
     31c:	01000001 	tsteq	r0, r1
     320:	005f1614 	subseq	r1, pc, r4, lsl r6	@ <UNPREDICTABLE>
     324:	0d000000 	stceq	0, cr0, [r0, #-0]
     328:	080015aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, ip}
     32c:	080015b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sl, ip}
     330:	00000349 	andeq	r0, r0, r9, asr #6
     334:	00012c0e 	andeq	r2, r1, lr, lsl #24
     338:	29140100 	ldmdbcs	r4, {r8}
     33c:	0000005f 	andeq	r0, r0, pc, asr r0
     340:	0000006a 	andeq	r0, r0, sl, rrx
     344:	00000066 	andeq	r0, r0, r6, rrx
     348:	035b0f00 	cmpeq	fp, #0, 30
     34c:	2c100000 	ldccs	0, cr0, [r0], {-0}
     350:	01000001 	tsteq	r0, r1
     354:	005f2914 	subseq	r2, pc, r4, lsl r9	@ <UNPREDICTABLE>
     358:	0d000000 	stceq	0, cr0, [r0, #-0]
     35c:	080015b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sl, ip}
     360:	080015be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, sl, ip}
     364:	0000037d 	andeq	r0, r0, sp, ror r3
     368:	00012c0e 	andeq	r2, r1, lr, lsl #24
     36c:	03150100 	tsteq	r5, #0, 2
     370:	0000005f 	andeq	r0, r0, pc, asr r0
     374:	0000008d 	andeq	r0, r0, sp, lsl #1
     378:	00000089 	andeq	r0, r0, r9, lsl #1
     37c:	038f0f00 	orreq	r0, pc, #0, 30
     380:	2c100000 	ldccs	0, cr0, [r0], {-0}
     384:	01000001 	tsteq	r0, r1
     388:	005f0315 	subseq	r0, pc, r5, lsl r3	@ <UNPREDICTABLE>
     38c:	0f000000 	svceq	0x00000000
     390:	000003a1 	andeq	r0, r0, r1, lsr #7
     394:	00012c10 	andeq	r2, r1, r0, lsl ip
     398:	18150100 	ldmdane	r5, {r8}
     39c:	0000005f 	andeq	r0, r0, pc, asr r0
     3a0:	15be0d00 	ldrne	r0, [lr, #3328]!	@ 0xd00
     3a4:	15cc0800 	strbne	r0, [ip, #2048]	@ 0x800
     3a8:	03c30800 	biceq	r0, r3, #0, 16
     3ac:	2c0e0000 	stccs	0, cr0, [lr], {-0}
     3b0:	01000001 	tsteq	r0, r1
     3b4:	005f1815 	subseq	r1, pc, r5, lsl r8	@ <UNPREDICTABLE>
     3b8:	00b00000 	adcseq	r0, r0, r0
     3bc:	00ac0000 	adceq	r0, ip, r0
     3c0:	0f000000 	svceq	0x00000000
     3c4:	000003d5 	ldrdeq	r0, [r0], -r5
     3c8:	00012c10 	andeq	r2, r1, r0, lsl ip
     3cc:	2c150100 	ldfcss	f0, [r5], {-0}
     3d0:	0000005f 	andeq	r0, r0, pc, asr r0
     3d4:	15cc0d00 	strbne	r0, [ip, #3328]	@ 0xd00
     3d8:	15d80800 	ldrbne	r0, [r8, #2048]	@ 0x800
     3dc:	03f70800 	mvnseq	r0, #0, 16
     3e0:	2c0e0000 	stccs	0, cr0, [lr], {-0}
     3e4:	01000001 	tsteq	r0, r1
     3e8:	005f2c15 	subseq	r2, pc, r5, lsl ip	@ <UNPREDICTABLE>
     3ec:	00d30000 	sbcseq	r0, r3, r0
     3f0:	00cf0000 	sbceq	r0, pc, r0
     3f4:	11000000 	mrsne	r0, (UNDEF: 0)
     3f8:	000004a9 	andeq	r0, r0, r9, lsr #9
     3fc:	080015fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, sl, ip}
     400:	0015fa01 	andseq	pc, r5, r1, lsl #20
     404:	0015fc08 	andseq	pc, r5, r8, lsl #24
     408:	031b0108 	tsteq	fp, #8, 2
     40c:	00158212 	andseq	r8, r5, r2, lsl r2
     410:	00048008 	andeq	r8, r4, r8
     414:	15861200 	strne	r1, [r6, #512]	@ 0x200
     418:	02900800 	addseq	r0, r0, #0, 16
     41c:	fa120000 	blx	480424 <__Stack_Size+0x47f424>
     420:	80080015 	andhi	r0, r8, r5, lsl r0
     424:	12000002 	andne	r0, r0, #2
     428:	08001600 	stmdaeq	r0, {r9, sl, ip}
     42c:	00000270 	andeq	r0, r0, r0, ror r2
     430:	e5011300 	str	r1, [r1, #-768]	@ 0xfffffd00
     434:	01000001 	tsteq	r0, r1
     438:	d001060b 	andle	r0, r1, fp, lsl #12
     43c:	da080001 	ble	200448 <__Stack_Size+0x1ff448>
     440:	02080001 	andeq	r0, r8, #1
     444:	6001007d 	andvs	r0, r1, sp, ror r0
     448:	14000004 	strne	r0, [r0], #-4
     44c:	00000148 	andeq	r0, r0, r8, asr #2
     450:	5f150b01 	svcpl	0x00150b01
     454:	fa000000 	blx	45c <_Minimum_Stack_Size+0x35c>
     458:	f2000000 	vhadd.s8	d0, d0, d0
     45c:	00000000 	andeq	r0, r0, r0
     460:	014d0115 	cmpeq	sp, r5, lsl r1
     464:	09010000 	stmdbeq	r1, {}	@ <UNPREDICTABLE>
     468:	01ce011c 	biceq	r0, lr, ip, lsl r1
     46c:	01d00800 	bicseq	r0, r0, r0, lsl #16
     470:	7d020800 	stcvc	8, cr0, [r2, #-0]
     474:	01160100 	tsteq	r6, r0, lsl #2
     478:	00000a3a 	andeq	r0, r0, sl, lsr sl
     47c:	011c0801 	tsteq	ip, r1, lsl #16
     480:	00a60117 	adceq	r0, r6, r7, lsl r1
     484:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     488:	00003008 	andeq	r3, r0, r8
     48c:	04a90100 	strteq	r0, [r9], #256	@ 0x100
     490:	69180000 	ldmdbvs	r8, {}	@ <UNPREDICTABLE>
     494:	0c0f0200 	sfmeq	f0, 4, [pc], {-0}
     498:	0000005f 	andeq	r0, r0, pc, asr r0
     49c:	706d7418 	rsbvc	r7, sp, r8, lsl r4
     4a0:	0c100200 	lfmeq	f0, 4, [r0], {-0}
     4a4:	0000005f 	andeq	r0, r0, pc, asr r0
     4a8:	01d81900 	bicseq	r1, r8, r0, lsl #18
     4ac:	b4030000 	strlt	r0, [r3], #-0
     4b0:	1a031604 	bne	c5cc8 <__Stack_Size+0xc4cc8>
     4b4:	00000480 	andeq	r0, r0, r0, lsl #9
     4b8:	08000120 	stmdaeq	r0, {r5, r8}
     4bc:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
     4c0:	01007d02 	tsteq	r0, r2, lsl #26
     4c4:	0004921b 	andeq	r9, r4, fp, lsl r2
     4c8:	00013c00 	andeq	r3, r1, r0, lsl #24
     4cc:	00013000 	andeq	r3, r1, r0
     4d0:	049c1c00 	ldreq	r1, [ip], #3072	@ 0xc00
     4d4:	801d0000 	andshi	r0, sp, r0
     4d8:	72000004 	andvc	r0, r0, #4
     4dc:	02080001 	andeq	r0, r8, #1
     4e0:	00000000 	andeq	r0, r0, r0
     4e4:	1e080e02 	cdpne	14, 0, cr0, cr8, cr2, {0}
     4e8:	00000000 	andeq	r0, r0, r0
     4ec:	0004921b 	andeq	r9, r4, fp, lsl r2
     4f0:	0001b700 	andeq	fp, r1, r0, lsl #14
     4f4:	0001a300 	andeq	sl, r1, r0, lsl #6
     4f8:	049c1b00 	ldreq	r1, [ip], #2816	@ 0xb00
     4fc:	02760000 	rsbseq	r0, r6, #0
     500:	025e0000 	subseq	r0, lr, #0
     504:	00000000 	andeq	r0, r0, r0
     508:	131d0000 	tstne	sp, #0
     50c:	00020000 	andeq	r0, r2, r0
     510:	000001da 	ldrdeq	r0, [r0], -sl
     514:	00120104 	andseq	r0, r2, r4, lsl #2
     518:	4d0c0000 	stcmi	0, cr0, [ip, #-0]
     51c:	58000005 	stmdapl	r0, {r0, r2}
     520:	dc000001 	stcle	0, cr0, [r0], {1}
     524:	74080001 	strvc	r0, [r8], #-1
     528:	f2080008 	vhadd.s8	d0, d8, d8
     52c:	02000002 	andeq	r0, r0, #2
     530:	00f80601 	rscseq	r0, r8, r1, lsl #12
     534:	02020000 	andeq	r0, r2, #0
     538:	0001b905 	andeq	fp, r1, r5, lsl #18
     53c:	05040200 	streq	r0, [r4, #-512]	@ 0xfffffe00
     540:	000001a5 	andeq	r0, r0, r5, lsr #3
     544:	a0050802 	andge	r0, r5, r2, lsl #16
     548:	03000001 	movweq	r0, #1
     54c:	000004a9 	andeq	r0, r0, r9, lsr #9
     550:	57182e04 	ldrpl	r2, [r8, -r4, lsl #28]
     554:	04000000 	streq	r0, [r0], #-0
     558:	00000041 	andeq	r0, r0, r1, asr #32
     55c:	00004105 	andeq	r4, r0, r5, lsl #2
     560:	08010200 	stmdaeq	r1, {r9}
     564:	000000f6 	strdeq	r0, [r0], -r6
     568:	00058703 	andeq	r8, r5, r3, lsl #14
     56c:	19310400 	ldmdbne	r1!, {sl}
     570:	00000074 	andeq	r0, r0, r4, ror r0
     574:	00005e04 	andeq	r5, r0, r4, lsl #28
     578:	005e0500 	subseq	r0, lr, r0, lsl #10
     57c:	02020000 	andeq	r0, r2, #0
     580:	0000ce07 	andeq	ip, r0, r7, lsl #28
     584:	01cf0300 	biceq	r0, pc, r0, lsl #6
     588:	34040000 	strcc	r0, [r4], #-0
     58c:	00008c19 	andeq	r8, r0, r9, lsl ip
     590:	007b0400 	rsbseq	r0, fp, r0, lsl #8
     594:	04020000 	streq	r0, [r2], #-0
     598:	00013607 	andeq	r3, r1, r7, lsl #12
     59c:	07080200 	streq	r0, [r8, -r0, lsl #4]
     5a0:	00000131 	andeq	r0, r0, r1, lsr r1
     5a4:	69050406 	stmdbvs	r5, {r1, r2, sl}
     5a8:	0200746e 	andeq	r7, r0, #1845493760	@ 0x6e000000
     5ac:	013b0704 	teqeq	fp, r4, lsl #14
     5b0:	1a030000 	bne	c05b8 <__Stack_Size+0xbf5b8>
     5b4:	03000005 	movweq	r0, #5
     5b8:	00b40f1d 	adcseq	r0, r4, sp, lsl pc
     5bc:	04070000 	streq	r0, [r7], #-0
     5c0:	000000ba 	strheq	r0, [r0], -sl
     5c4:	00c60108 	sbceq	r0, r6, r8, lsl #2
     5c8:	41090000 	mrsmi	r0, (UNDEF: 9)
     5cc:	00000000 	andeq	r0, r0, r0
     5d0:	1e03080a 	cdpne	8, 0, cr0, cr3, cr10, {0}
     5d4:	00011b09 	andeq	r1, r1, r9, lsl #22
     5d8:	02690b00 	rsbeq	r0, r9, #0, 22
     5dc:	1f030000 	svcne	0x00030000
     5e0:	0000410b 	andeq	r4, r0, fp, lsl #2
     5e4:	00230200 	eoreq	r0, r3, r0, lsl #4
     5e8:	0006860b 	andeq	r8, r6, fp, lsl #12
     5ec:	0b200300 	bleq	8011f4 <__Stack_Size+0x8001f4>
     5f0:	00000041 	andeq	r0, r0, r1, asr #32
     5f4:	0b012302 	bleq	49204 <__Stack_Size+0x48204>
     5f8:	000002ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
     5fc:	5e0c2103 	adfple	f2, f4, f3
     600:	02000000 	andeq	r0, r0, #0
     604:	050b0223 	streq	r0, [fp, #-547]	@ 0xfffffddd
     608:	03000002 	movweq	r0, #2
     60c:	005e0c22 	subseq	r0, lr, r2, lsr #24
     610:	23020000 	movwcs	r0, #8192	@ 0x2000
     614:	065c0b04 	ldrbeq	r0, [ip], -r4, lsl #22
     618:	23030000 	movwcs	r0, #12288	@ 0x3000
     61c:	00005e0c 	andeq	r5, r0, ip, lsl #28
     620:	06230200 	strteq	r0, [r3], -r0, lsl #4
     624:	06f90300 	ldrbteq	r0, [r9], r0, lsl #6
     628:	24030000 	strcs	r0, [r3], #-0
     62c:	0000c602 	andeq	ip, r0, r2, lsl #12
     630:	01050c00 	tsteq	r5, r0, lsl #24
     634:	00000025 	andeq	r0, r0, r5, lsr #32
     638:	6e015805 	cdpvs	8, 0, cr5, cr1, cr5, {0}
     63c:	0d000002 	stceq	0, cr0, [r0, #-8]
     640:	00000648 	andeq	r0, r0, r8, asr #12
     644:	07da0d72 			@ <UNDEFINED> instruction: 0x07da0d72
     648:	0d730000 	ldcleq	0, cr0, [r3, #-0]
     64c:	00000306 	andeq	r0, r0, r6, lsl #6
     650:	04e90d74 	strbteq	r0, [r9], #3444	@ 0xd74
     654:	0d750000 	ldcleq	0, cr0, [r5, #-0]
     658:	00000733 	andeq	r0, r0, r3, lsr r7
     65c:	077a0d76 			@ <UNDEFINED> instruction: 0x077a0d76
     660:	0d7b0000 	ldcleq	0, cr0, [fp, #-0]
     664:	00000721 	andeq	r0, r0, r1, lsr #14
     668:	02dc0d7c 	sbcseq	r0, ip, #124, 26	@ 0x1f00
     66c:	0d7e0000 	ldcleq	0, cr0, [lr, #-0]
     670:	000006bd 			@ <UNDEFINED> instruction: 0x000006bd
     674:	04c50e7f 	strbeq	r0, [r5], #3711	@ 0xe7f
     678:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     67c:	00000511 	andeq	r0, r0, r1, lsl r5
     680:	08250e01 	stmdaeq	r5!, {r0, r9, sl, fp}
     684:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     688:	000005be 			@ <UNDEFINED> instruction: 0x000005be
     68c:	02840e03 	addeq	r0, r4, #3, 28	@ 0x30
     690:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     694:	000002f6 	strdeq	r0, [r0], -r6
     698:	02990e05 	addseq	r0, r9, #5, 28	@ 0x50
     69c:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     6a0:	0000067b 	andeq	r0, r0, fp, ror r6
     6a4:	04420e07 	strbeq	r0, [r2], #-3591	@ 0xfffff1f9
     6a8:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     6ac:	000007c8 	andeq	r0, r0, r8, asr #15
     6b0:	04f70e09 	ldrbteq	r0, [r7], #3593	@ 0xe09
     6b4:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     6b8:	00000496 	muleq	r0, r6, r4
     6bc:	024a0e0b 	subeq	r0, sl, #11, 28	@ 0xb0
     6c0:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
     6c4:	0000053a 	andeq	r0, r0, sl, lsr r5
     6c8:	03750e0d 	cmneq	r5, #13, 28	@ 0xd0
     6cc:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
     6d0:	000007a6 	andeq	r0, r0, r6, lsr #15
     6d4:	046c0e0f 	strbteq	r0, [ip], #-3599	@ 0xfffff1f1
     6d8:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
     6dc:	00000220 	andeq	r0, r0, r0, lsr #4
     6e0:	08030e11 	stmdaeq	r3, {r0, r4, r9, sl, fp}
     6e4:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     6e8:	000003d9 	ldrdeq	r0, [r0], -r9
     6ec:	01f00e13 	mvnseq	r0, r3, lsl lr
     6f0:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
     6f4:	000003a9 	andeq	r0, r0, r9, lsr #7
     6f8:	02120e15 	andseq	r0, r2, #336	@ 0x150
     6fc:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     700:	0000076d 	andeq	r0, r0, sp, ror #14
     704:	03460e17 	movteq	r0, #28183	@ 0x6e17
     708:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
     70c:	0000059d 	muleq	r0, sp, r5
     710:	069e0e19 			@ <UNDEFINED> instruction: 0x069e0e19
     714:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
     718:	00000664 	andeq	r0, r0, r4, ror #12
     71c:	06d80e1b 			@ <UNDEFINED> instruction: 0x06d80e1b
     720:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
     724:	0000048c 	andeq	r0, r0, ip, lsl #9
     728:	02400e1d 	subeq	r0, r0, #464	@ 0x1d0
     72c:	0e1e0000 	cdpeq	0, 1, cr0, cr14, cr0, {0}
     730:	0000055b 	andeq	r0, r0, fp, asr r5
     734:	06b00e1f 	ssateq	r0, #17, pc, lsl #28	@ <UNPREDICTABLE>
     738:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     73c:	0000044d 	andeq	r0, r0, sp, asr #8
     740:	02330e21 	eorseq	r0, r3, #528	@ 0x210
     744:	0e220000 	cdpeq	0, 2, cr0, cr2, cr0, {0}
     748:	0000035d 	andeq	r0, r0, sp, asr r3
     74c:	078b0e23 	streq	r0, [fp, r3, lsr #28]
     750:	0e240000 	cdpeq	0, 2, cr0, cr4, cr0, {0}
     754:	00000630 	andeq	r0, r0, r0, lsr r6
     758:	04000e25 	streq	r0, [r0], #-3621	@ 0xfffff1db
     75c:	0e260000 	cdpeq	0, 2, cr0, cr6, cr0, {0}
     760:	00000819 	andeq	r0, r0, r9, lsl r8
     764:	02bf0e27 	adcseq	r0, pc, #624	@ 0x270
     768:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
     76c:	000005af 	andeq	r0, r0, pc, lsr #11
     770:	04b60e29 	ldrteq	r0, [r6], #3625	@ 0xe29
     774:	002a0000 	eoreq	r0, sl, r0
     778:	0003ed03 	andeq	lr, r3, r3, lsl #26
     77c:	03900500 	orrseq	r0, r0, #0, 10
     780:	00000127 	andeq	r0, r0, r7, lsr #2
     784:	020e040f 	andeq	r0, lr, #251658240	@ 0xf000000
     788:	03520984 	cmpeq	r2, #132, 18	@ 0x210000
     78c:	2b0b0000 	blcs	2c0794 <__Stack_Size+0x2bf794>
     790:	02000003 	andeq	r0, r0, #3
     794:	03621186 	cmneq	r2, #-2147483615	@ 0x80000021
     798:	23020000 	movwcs	r0, #8192	@ 0x2000
     79c:	05cc0b00 	strbeq	r0, [ip, #2816]	@ 0xb00
     7a0:	87020000 	strhi	r0, [r2, -r0]
     7a4:	00036711 	andeq	r6, r3, r1, lsl r7
     7a8:	20230200 	eorcs	r0, r3, r0, lsl #4
     7ac:	0007860b 	andeq	r8, r7, fp, lsl #12
     7b0:	11880200 	orrne	r0, r8, r0, lsl #4
     7b4:	00000362 	andeq	r0, r0, r2, ror #6
     7b8:	01802303 	orreq	r2, r0, r3, lsl #6
     7bc:	0003540b 	andeq	r5, r3, fp, lsl #8
     7c0:	11890200 	orrne	r0, r9, r0, lsl #4
     7c4:	00000367 	andeq	r0, r0, r7, ror #6
     7c8:	01a02303 	lsleq	r2, r3, #6
     7cc:	0007e90b 	andeq	lr, r7, fp, lsl #18
     7d0:	118a0200 	orrne	r0, sl, r0, lsl #4
     7d4:	00000362 	andeq	r0, r0, r2, ror #6
     7d8:	02802303 	addeq	r2, r0, #201326592	@ 0xc000000
     7dc:	0005e00b 	andeq	lr, r5, fp
     7e0:	118b0200 	orrne	r0, fp, r0, lsl #4
     7e4:	00000367 	andeq	r0, r0, r7, ror #6
     7e8:	02a02303 	adceq	r2, r0, #201326592	@ 0xc000000
     7ec:	0005300b 	andeq	r3, r5, fp
     7f0:	118c0200 	orrne	r0, ip, r0, lsl #4
     7f4:	00000362 	andeq	r0, r0, r2, ror #6
     7f8:	03802303 	orreq	r2, r0, #201326592	@ 0xc000000
     7fc:	0005ea0b 	andeq	lr, r5, fp, lsl #20
     800:	118d0200 	orrne	r0, sp, r0, lsl #4
     804:	00000367 	andeq	r0, r0, r7, ror #6
     808:	03a02303 	moveq	r2, #201326592	@ 0xc000000
     80c:	0007950b 	andeq	r9, r7, fp, lsl #10
     810:	118e0200 	orrne	r0, lr, r0, lsl #4
     814:	00000362 	andeq	r0, r0, r2, ror #6
     818:	04802303 	streq	r2, [r0], #771	@ 0x303
     81c:	0005f40b 	andeq	pc, r5, fp, lsl #8
     820:	118f0200 	orrne	r0, pc, r0, lsl #4
     824:	00000377 	andeq	r0, r0, r7, ror r3
     828:	04a02303 	strteq	r2, [r0], #771	@ 0x303
     82c:	00504910 	subseq	r4, r0, r0, lsl r9
     830:	97119002 	ldrls	r9, [r1, -r2]
     834:	03000003 	movweq	r0, #3
     838:	0b068023 	bleq	1a08cc <__Stack_Size+0x19f8cc>
     83c:	000005fe 	strdeq	r0, [r0], -lr
     840:	9c119102 	ldflsd	f1, [r1], {2}
     844:	03000003 	movweq	r0, #3
     848:	0b07f023 	bleq	1fc8dc <__Stack_Size+0x1fb8dc>
     84c:	000005aa 	andeq	r0, r0, sl, lsr #11
     850:	87119202 	ldrhi	r9, [r1, -r2, lsl #4]
     854:	03000000 	movweq	r0, #0
     858:	001c8023 	andseq	r8, ip, r3, lsr #32
     85c:	00008711 	andeq	r8, r0, r1, lsl r7
     860:	00036200 	andeq	r6, r3, r0, lsl #4
     864:	00a11200 	adceq	r1, r1, r0, lsl #4
     868:	00070000 	andeq	r0, r7, r0
     86c:	00035204 	andeq	r5, r3, r4, lsl #4
     870:	007b1100 	rsbseq	r1, fp, r0, lsl #2
     874:	03770000 	cmneq	r7, #0
     878:	a1120000 	tstge	r2, r0
     87c:	17000000 	strne	r0, [r0, -r0]
     880:	007b1100 	rsbseq	r1, fp, r0, lsl #2
     884:	03870000 	orreq	r0, r7, #0
     888:	a1120000 	tstge	r2, r0
     88c:	37000000 	strcc	r0, [r0, -r0]
     890:	004d1100 	subeq	r1, sp, r0, lsl #2
     894:	03970000 	orrseq	r0, r7, #0
     898:	a1120000 	tstge	r2, r0
     89c:	ef000000 	svc	0x00000000
     8a0:	03870400 	orreq	r0, r7, #0, 8
     8a4:	7b110000 	blvc	4408ac <__Stack_Size+0x43f8ac>
     8a8:	ad000000 	stcge	0, cr0, [r0, #-0]
     8ac:	13000003 	movwne	r0, #3
     8b0:	000000a1 	andeq	r0, r0, r1, lsr #1
     8b4:	03000283 	movweq	r0, #643	@ 0x283
     8b8:	0000068f 	andeq	r0, r0, pc, lsl #13
     8bc:	7a049302 	bvc	1254cc <__Stack_Size+0x1244cc>
     8c0:	14000002 	strne	r0, [r0], #-2
     8c4:	0179051c 	cmneq	r9, ip, lsl r5
     8c8:	00043409 	andeq	r3, r4, r9, lsl #8
     8cc:	52431500 	subpl	r1, r3, #0, 10
     8d0:	7b05004c 	blvc	140a08 <__Stack_Size+0x13fa08>
     8d4:	00871101 	addeq	r1, r7, r1, lsl #2
     8d8:	23020000 	movwcs	r0, #8192	@ 0x2000
     8dc:	52431500 	subpl	r1, r3, #0, 10
     8e0:	7c050048 	stcvc	0, cr0, [r5], {72}	@ 0x48
     8e4:	00871101 	addeq	r1, r7, r1, lsl #2
     8e8:	23020000 	movwcs	r0, #8192	@ 0x2000
     8ec:	44491504 	strbmi	r1, [r9], #-1284	@ 0xfffffafc
     8f0:	7d050052 	stcvc	0, cr0, [r5, #-328]	@ 0xfffffeb8
     8f4:	00871101 	addeq	r1, r7, r1, lsl #2
     8f8:	23020000 	movwcs	r0, #8192	@ 0x2000
     8fc:	444f1508 	strbmi	r1, [pc], #-1288	@ 904 <_Minimum_Stack_Size+0x804>
     900:	7e050052 	mcrvc	0, 0, r0, cr5, cr2, {2}
     904:	00871101 	addeq	r1, r7, r1, lsl #2
     908:	23020000 	movwcs	r0, #8192	@ 0x2000
     90c:	008b160c 	addeq	r1, fp, ip, lsl #12
     910:	7f050000 	svcvc	0x00050000
     914:	00871101 	addeq	r1, r7, r1, lsl #2
     918:	23020000 	movwcs	r0, #8192	@ 0x2000
     91c:	52421510 	subpl	r1, r2, #16, 10	@ 0x4000000
     920:	80050052 	andhi	r0, r5, r2, asr r0
     924:	00871101 	addeq	r1, r7, r1, lsl #2
     928:	23020000 	movwcs	r0, #8192	@ 0x2000
     92c:	01eb1614 	mvneq	r1, r4, lsl r6
     930:	81050000 	mrshi	r0, (UNDEF: 5)
     934:	00871101 	addeq	r1, r7, r1, lsl #2
     938:	23020000 	movwcs	r0, #8192	@ 0x2000
     93c:	b2170018 	andslt	r0, r7, #24
     940:	05000000 	streq	r0, [r0, #-0]
     944:	b9030182 	stmdblt	r3, {r1, r7, r8}
     948:	14000003 	strne	r0, [r0], #-3
     94c:	01bb0528 			@ <UNDEFINED> instruction: 0x01bb0528
     950:	0004eb09 	andeq	lr, r4, r9, lsl #22
     954:	52431500 	subpl	r1, r3, #0, 10
     958:	01bd0500 			@ <UNDEFINED> instruction: 0x01bd0500
     95c:	00008711 	andeq	r8, r0, r1, lsl r7
     960:	00230200 	eoreq	r0, r3, r0, lsl #4
     964:	00000d16 	andeq	r0, r0, r6, lsl sp
     968:	01be0500 			@ <UNDEFINED> instruction: 0x01be0500
     96c:	00008711 	andeq	r8, r0, r1, lsl r7
     970:	04230200 	strteq	r0, [r3], #-512	@ 0xfffffe00
     974:	52494315 	subpl	r4, r9, #1409286144	@ 0x54000000
     978:	01bf0500 			@ <UNDEFINED> instruction: 0x01bf0500
     97c:	00008711 	andeq	r8, r0, r1, lsl r7
     980:	08230200 	stmdaeq	r3!, {r9}
     984:	00012316 	andeq	r2, r1, r6, lsl r3
     988:	01c00500 	biceq	r0, r0, r0, lsl #10
     98c:	00008711 	andeq	r8, r0, r1, lsl r7
     990:	0c230200 	sfmeq	f0, 4, [r3], #-0
     994:	00010d16 	andeq	r0, r1, r6, lsl sp
     998:	01c10500 	biceq	r0, r1, r0, lsl #10
     99c:	00008711 	andeq	r8, r0, r1, lsl r7
     9a0:	10230200 	eorne	r0, r3, r0, lsl #4
     9a4:	00009016 	andeq	r9, r0, r6, lsl r0
     9a8:	01c20500 	biceq	r0, r2, r0, lsl #10
     9ac:	00008711 	andeq	r8, r0, r1, lsl r7
     9b0:	14230200 	strtne	r0, [r3], #-512	@ 0xfffffe00
     9b4:	00000016 	andeq	r0, r0, r6, lsl r0
     9b8:	01c30500 	biceq	r0, r3, r0, lsl #10
     9bc:	00008711 	andeq	r8, r0, r1, lsl r7
     9c0:	18230200 	stmdane	r3!, {r9}
     9c4:	00011b16 	andeq	r1, r1, r6, lsl fp
     9c8:	01c40500 	biceq	r0, r4, r0, lsl #10
     9cc:	00008711 	andeq	r8, r0, r1, lsl r7
     9d0:	1c230200 	sfmne	f0, 4, [r3], #-0
     9d4:	00000816 	andeq	r0, r0, r6, lsl r8
     9d8:	01c50500 	biceq	r0, r5, r0, lsl #10
     9dc:	00008711 	andeq	r8, r0, r1, lsl r7
     9e0:	20230200 	eorcs	r0, r3, r0, lsl #4
     9e4:	52534315 	subspl	r4, r3, #1409286144	@ 0x54000000
     9e8:	01c60500 	biceq	r0, r6, r0, lsl #10
     9ec:	00008711 	andeq	r8, r0, r1, lsl r7
     9f0:	24230200 	strtcs	r0, [r3], #-512	@ 0xfffffe00
     9f4:	01c31700 	biceq	r1, r3, r0, lsl #14
     9f8:	c9050000 	stmdbgt	r5, {}	@ <UNPREDICTABLE>
     9fc:	04410301 	strbeq	r0, [r1], #-769	@ 0xfffffcff
     a00:	54140000 	ldrpl	r0, [r4], #-0
     a04:	09023905 	stmdbeq	r2, {r0, r2, r8, fp, ip, sp}
     a08:	000006a3 	andeq	r0, r0, r3, lsr #13
     a0c:	00042116 	andeq	r2, r4, r6, lsl r1
     a10:	023b0500 	eorseq	r0, fp, #0, 10
     a14:	00006a11 	andeq	r6, r0, r1, lsl sl
     a18:	00230200 	eoreq	r0, r3, r0, lsl #4
     a1c:	0005cc16 	andeq	ip, r5, r6, lsl ip
     a20:	023c0500 	eorseq	r0, ip, #0, 10
     a24:	00006a11 	andeq	r6, r0, r1, lsl sl
     a28:	02230200 	eoreq	r0, r3, #0, 4
     a2c:	00045a16 	andeq	r5, r4, r6, lsl sl
     a30:	023d0500 	eorseq	r0, sp, #0, 10
     a34:	00006a11 	andeq	r6, r0, r1, lsl sl
     a38:	04230200 	strteq	r0, [r3], #-512	@ 0xfffffe00
     a3c:	0005d616 	andeq	sp, r5, r6, lsl r6
     a40:	023e0500 	eorseq	r0, lr, #0, 10
     a44:	00006a11 	andeq	r6, r0, r1, lsl sl
     a48:	06230200 	strteq	r0, [r3], -r0, lsl #4
     a4c:	0004b116 	andeq	fp, r4, r6, lsl r1
     a50:	023f0500 	eorseq	r0, pc, #0, 10
     a54:	00006a11 	andeq	r6, r0, r1, lsl sl
     a58:	08230200 	stmdaeq	r3!, {r9}
     a5c:	0005e016 	andeq	lr, r5, r6, lsl r0
     a60:	02400500 	subeq	r0, r0, #0, 10
     a64:	00006a11 	andeq	r6, r0, r1, lsl sl
     a68:	0a230200 	beq	8c1270 <__Stack_Size+0x8c0270>
     a6c:	0004e416 	andeq	lr, r4, r6, lsl r4
     a70:	02410500 	subeq	r0, r1, #0, 10
     a74:	00006a11 	andeq	r6, r0, r1, lsl sl
     a78:	0c230200 	sfmeq	f0, 4, [r3], #-0
     a7c:	0005ea16 	andeq	lr, r5, r6, lsl sl
     a80:	02420500 	subeq	r0, r2, #0, 10
     a84:	00006a11 	andeq	r6, r0, r1, lsl sl
     a88:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
     a8c:	00053516 	andeq	r3, r5, r6, lsl r5
     a90:	02430500 	subeq	r0, r3, #0, 10
     a94:	00006a11 	andeq	r6, r0, r1, lsl sl
     a98:	10230200 	eorne	r0, r3, r0, lsl #4
     a9c:	0005f416 	andeq	pc, r5, r6, lsl r4	@ <UNPREDICTABLE>
     aa0:	02440500 	subeq	r0, r4, #0, 10
     aa4:	00006a11 	andeq	r6, r0, r1, lsl sl
     aa8:	12230200 	eorne	r0, r3, #0, 4
     aac:	0005c716 	andeq	ip, r5, r6, lsl r7
     ab0:	02450500 	subeq	r0, r5, #0, 10
     ab4:	00006a11 	andeq	r6, r0, r1, lsl sl
     ab8:	14230200 	strtne	r0, [r3], #-512	@ 0xfffffe00
     abc:	0005fe16 	andeq	pc, r5, r6, lsl lr	@ <UNPREDICTABLE>
     ac0:	02460500 	subeq	r0, r6, #0, 10
     ac4:	00006a11 	andeq	r6, r0, r1, lsl sl
     ac8:	16230200 	strtne	r0, [r3], -r0, lsl #4
     acc:	00067116 	andeq	r7, r6, r6, lsl r1
     ad0:	02470500 	subeq	r0, r7, #0, 10
     ad4:	00006a11 	andeq	r6, r0, r1, lsl sl
     ad8:	18230200 	stmdane	r3!, {r9}
     adc:	00060816 	andeq	r0, r6, r6, lsl r8
     ae0:	02480500 	subeq	r0, r8, #0, 10
     ae4:	00006a11 	andeq	r6, r0, r1, lsl sl
     ae8:	1a230200 	bne	8c12f0 <__Stack_Size+0x8c02f0>
     aec:	0006f416 	andeq	pc, r6, r6, lsl r4	@ <UNPREDICTABLE>
     af0:	02490500 	subeq	r0, r9, #0, 10
     af4:	00006a11 	andeq	r6, r0, r1, lsl sl
     af8:	1c230200 	sfmne	f0, 4, [r3], #-0
     afc:	00080f16 	andeq	r0, r8, r6, lsl pc
     b00:	024a0500 	subeq	r0, sl, #0, 10
     b04:	0006b311 	andeq	fp, r6, r1, lsl r3
     b08:	1e230200 	cdpne	2, 2, cr0, cr3, cr0, {0}
     b0c:	00069916 	andeq	r9, r6, r6, lsl r9
     b10:	024b0500 	subeq	r0, fp, #0, 10
     b14:	00006a11 	andeq	r6, r0, r1, lsl sl
     b18:	40230200 	eormi	r0, r3, r0, lsl #4
     b1c:	00061216 	andeq	r1, r6, r6, lsl r2
     b20:	024c0500 	subeq	r0, ip, #0, 10
     b24:	00006a11 	andeq	r6, r0, r1, lsl sl
     b28:	42230200 	eormi	r0, r3, #0, 4
     b2c:	00032616 	andeq	r2, r3, r6, lsl r6
     b30:	024d0500 	subeq	r0, sp, #0, 10
     b34:	00006a11 	andeq	r6, r0, r1, lsl sl
     b38:	44230200 	strtmi	r0, [r3], #-512	@ 0xfffffe00
     b3c:	00061c16 	andeq	r1, r6, r6, lsl ip
     b40:	024e0500 	subeq	r0, lr, #0, 10
     b44:	00006a11 	andeq	r6, r0, r1, lsl sl
     b48:	46230200 	strtmi	r0, [r3], -r0, lsl #4
     b4c:	524e4615 	subpl	r4, lr, #22020096	@ 0x1500000
     b50:	024f0500 	subeq	r0, pc, #0, 10
     b54:	00006a11 	andeq	r6, r0, r1, lsl sl
     b58:	48230200 	stmdami	r3!, {r9}
     b5c:	00062616 	andeq	r2, r6, r6, lsl r6
     b60:	02500500 	subseq	r0, r0, #0, 10
     b64:	00006a11 	andeq	r6, r0, r1, lsl sl
     b68:	4a230200 	bmi	8c1370 <__Stack_Size+0x8c0370>
     b6c:	0003a316 	andeq	sl, r3, r6, lsl r3
     b70:	02510500 	subseq	r0, r1, #0, 10
     b74:	00006a11 	andeq	r6, r0, r1, lsl sl
     b78:	4c230200 	sfmmi	f0, 4, [r3], #-0
     b7c:	0003b716 	andeq	fp, r3, r6, lsl r7
     b80:	02520500 	subseq	r0, r2, #0, 10
     b84:	00006a11 	andeq	r6, r0, r1, lsl sl
     b88:	4e230200 	cdpmi	2, 2, cr0, cr3, cr0, {0}
     b8c:	0007b916 	andeq	fp, r7, r6, lsl r9
     b90:	02530500 	subseq	r0, r3, #0, 10
     b94:	00006a11 	andeq	r6, r0, r1, lsl sl
     b98:	50230200 	eorpl	r0, r3, r0, lsl #4
     b9c:	00083116 	andeq	r3, r8, r6, lsl r1
     ba0:	02540500 	subseq	r0, r4, #0, 10
     ba4:	00006a11 	andeq	r6, r0, r1, lsl sl
     ba8:	52230200 	eorpl	r0, r3, #0, 4
     bac:	006a1100 	rsbeq	r1, sl, r0, lsl #2
     bb0:	06b30000 	ldrteq	r0, [r3], r0
     bb4:	a1120000 	tstge	r2, r0
     bb8:	10000000 	andne	r0, r0, r0
     bbc:	06a30400 	strteq	r0, [r3], r0, lsl #8
     bc0:	97170000 	ldrls	r0, [r7, -r0]
     bc4:	05000003 	streq	r0, [r0, #-3]
     bc8:	f8030255 			@ <UNDEFINED> instruction: 0xf8030255
     bcc:	0a000004 	beq	be4 <_Minimum_Stack_Size+0xae4>
     bd0:	07290104 	streq	r0, [r9, -r4, lsl #2]!
     bd4:	00000705 	andeq	r0, r0, r5, lsl #14
     bd8:	00052718 	andeq	r2, r5, r8, lsl r7
     bdc:	122a0100 	eorne	r0, sl, #0, 2
     be0:	0000007b 	andeq	r0, r0, fp, ror r0
     be4:	02160a04 	andseq	r0, r6, #4, 20	@ 0x4000
     be8:	13180023 	tstne	r8, #35	@ 0x23
     bec:	01000007 	tsteq	r0, r7
     bf0:	007b122b 	rsbseq	r1, fp, fp, lsr #4
     bf4:	05040000 	streq	r0, [r4, #-0]
     bf8:	00230211 	eoreq	r0, r3, r1, lsl r2
     bfc:	00059018 	andeq	r9, r5, r8, lsl r0
     c00:	122c0100 	eorne	r0, ip, #0, 2
     c04:	0000007b 	andeq	r0, r0, fp, ror r0
     c08:	02100104 	andseq	r0, r0, #4, 2
     c0c:	19000023 	stmdbne	r0, {r0, r1, r5}
     c10:	0e270104 	sufeqs	f0, f7, f4
     c14:	00000720 	andeq	r0, r0, r0, lsr #14
     c18:	0005231a 	andeq	r2, r5, sl, lsl r3
     c1c:	10280100 	eorne	r0, r8, r0, lsl #2
     c20:	0000007b 	andeq	r0, r0, fp, ror r0
     c24:	0006c51b 	andeq	ip, r6, fp, lsl r5
     c28:	05040000 	streq	r0, [r4, #-0]
     c2c:	0a000007 	beq	c50 <_Minimum_Stack_Size+0xb50>
     c30:	07320104 	ldreq	r0, [r2, -r4, lsl #2]!
     c34:	00000765 	andeq	r0, r0, r5, ror #14
     c38:	0007f218 	andeq	pc, r7, r8, lsl r2	@ <UNPREDICTABLE>
     c3c:	12330100 	eorsne	r0, r3, #0, 2
     c40:	0000007b 	andeq	r0, r0, fp, ror r0
     c44:	02160a04 	andseq	r0, r6, #4, 20	@ 0x4000
     c48:	68180023 	ldmdavs	r8, {r0, r1, r5}
     c4c:	01000005 	tsteq	r0, r5
     c50:	007b1234 	rsbseq	r1, fp, r4, lsr r2
     c54:	05040000 	streq	r0, [r4, #-0]
     c58:	00230211 	eoreq	r0, r3, r1, lsl r2
     c5c:	00074318 	andeq	r4, r7, r8, lsl r3
     c60:	12350100 	eorsne	r0, r5, #0, 2
     c64:	0000007b 	andeq	r0, r0, fp, ror r0
     c68:	02100104 	andseq	r0, r0, #4, 2
     c6c:	19000023 	stmdbne	r0, {r0, r1, r5}
     c70:	0e300104 	rsfeqs	f0, f0, f4
     c74:	00000780 	andeq	r0, r0, r0, lsl #15
     c78:	0007ee1a 	andeq	lr, r7, sl, lsl lr
     c7c:	10310100 	eorsne	r0, r1, r0, lsl #2
     c80:	0000007b 	andeq	r0, r0, fp, ror r0
     c84:	0007251b 	andeq	r2, r7, fp, lsl r5
     c88:	65040000 	strvs	r0, [r4, #-0]
     c8c:	0a000007 	beq	cb0 <_Minimum_Stack_Size+0xbb0>
     c90:	09250110 	stmdbeq	r5!, {r4, r8}
     c94:	000007bd 			@ <UNDEFINED> instruction: 0x000007bd
     c98:	00079a0b 	andeq	r9, r7, fp, lsl #20
     c9c:	17260100 	strne	r0, [r6, -r0, lsl #2]!
     ca0:	00000087 	andeq	r0, r0, r7, lsl #1
     ca4:	1c002302 	stcne	3, cr2, [r0], {2}
     ca8:	00000720 	andeq	r0, r0, r0, lsr #14
     cac:	0b042302 	bleq	1098bc <__Stack_Size+0x1088bc>
     cb0:	00000707 	andeq	r0, r0, r7, lsl #14
     cb4:	87172f01 	ldrhi	r2, [r7, -r1, lsl #30]
     cb8:	02000000 	andeq	r0, r0, #0
     cbc:	801c0823 	andshi	r0, ip, r3, lsr #16
     cc0:	02000007 	andeq	r0, r0, #7
     cc4:	03000c23 	movweq	r0, #3107	@ 0xc23
     cc8:	0000045f 	andeq	r0, r0, pc, asr r4
     ccc:	85023801 	strhi	r3, [r2, #-2049]	@ 0xfffff7ff
     cd0:	11000007 	tstne	r0, r7
     cd4:	000000a8 	andeq	r0, r0, r8, lsr #1
     cd8:	000007d9 	ldrdeq	r0, [r0], -r9
     cdc:	0000a112 	andeq	sl, r0, r2, lsl r1
     ce0:	1d000700 	stcne	7, cr0, [r0, #-0]
     ce4:	00000750 	andeq	r0, r0, r0, asr r7
     ce8:	c90a3a01 	stmdbgt	sl, {r0, r9, fp, ip, sp}
     cec:	01000007 	tsteq	r0, r7
     cf0:	003c0305 	eorseq	r0, ip, r5, lsl #6
     cf4:	2f1d2000 	svccs	0x001d2000
     cf8:	01000004 	tsteq	r0, r4
     cfc:	07c90a3b 			@ <UNDEFINED> instruction: 0x07c90a3b
     d00:	05010000 	streq	r0, [r1, #-0]
     d04:	00001c03 	andeq	r1, r0, r3, lsl #24
     d08:	02771e20 	rsbseq	r1, r7, #32, 28	@ 0x200
     d0c:	3d010000 	stccc	0, cr0, [r1, #-0]
     d10:	00011b16 	andeq	r1, r1, r6, lsl fp
     d14:	62030500 	andvs	r0, r3, #0, 10
     d18:	1e200000 	cdpne	0, 2, cr0, cr0, cr0, {0}
     d1c:	0000043a 	andeq	r0, r0, sl, lsr r4
     d20:	23176901 	tstcs	r7, #16384	@ 0x4000
     d24:	05000008 	streq	r0, [r0, #-8]
     d28:	00005c03 	andeq	r5, r0, r3, lsl #24
     d2c:	52040720 	andpl	r0, r4, #32, 14	@ 0x800000
     d30:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     d34:	0000031c 	andeq	r0, r0, ip, lsl r3
     d38:	5e116a01 	vnmlspl.f32	s12, s2, s2
     d3c:	05000000 	streq	r0, [r0, #-0]
     d40:	00006003 	andeq	r6, r0, r3
     d44:	04131e20 	ldreq	r1, [r3], #-3616	@ 0xfffff1e0
     d48:	80010000 	andhi	r0, r1, r0
     d4c:	00004110 	andeq	r4, r0, r0, lsl r1
     d50:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
     d54:	1e200000 	cdpne	0, 2, cr0, cr0, cr0, {0}
     d58:	000002d3 	ldrdeq	r0, [r0], -r3
     d5c:	5e11c801 	cdppl	8, 1, cr12, cr1, cr1, {0}
     d60:	05000000 	streq	r0, [r0, #-0]
     d64:	00000003 	andeq	r0, r0, r3
     d68:	01041420 	tsteq	r4, r0, lsr #8
     d6c:	a3050168 	movwge	r0, #20840	@ 0x5168
     d70:	1f000008 	svcne	0x00000008
     d74:	000007f2 	strdeq	r0, [r0], -r2
     d78:	10016901 	andne	r6, r1, r1, lsl #18
     d7c:	0000007b 	andeq	r0, r0, fp, ror r0
     d80:	02160a04 	andseq	r0, r6, #4, 20	@ 0x4000
     d84:	681f0023 	ldmdavs	pc, {r0, r1, r5}	@ <UNPREDICTABLE>
     d88:	01000005 	tsteq	r0, r5
     d8c:	7b10016a 	blvc	40133c <__Stack_Size+0x40033c>
     d90:	04000000 	streq	r0, [r0], #-0
     d94:	23021105 	movwcs	r1, #8453	@ 0x2105
     d98:	07431f00 	strbeq	r1, [r3, -r0, lsl #30]
     d9c:	6b010000 	blvs	40da4 <__Stack_Size+0x3fda4>
     da0:	007b1001 	rsbseq	r1, fp, r1
     da4:	01040000 	mrseq	r0, (UNDEF: 4)
     da8:	00230210 	eoreq	r0, r3, r0, lsl r2
     dac:	01042000 	mrseq	r2, (UNDEF: 4)
     db0:	c00c0166 	andgt	r0, ip, r6, ror #2
     db4:	21000008 	tstcs	r0, r8
     db8:	00000320 	andeq	r0, r0, r0, lsr #6
     dbc:	0e016701 	cdpeq	7, 0, cr6, cr1, cr1, {0}
     dc0:	0000007b 	andeq	r0, r0, fp, ror r0
     dc4:	00085f1b 	andeq	r5, r8, fp, lsl pc
     dc8:	a3040000 	movwge	r0, #16384	@ 0x4000
     dcc:	14000008 	strne	r0, [r0], #-8
     dd0:	01640108 	cmneq	r4, r8, lsl #2
     dd4:	0008e809 	andeq	lr, r8, r9, lsl #16
     dd8:	070e1600 	streq	r1, [lr, -r0, lsl #12]
     ddc:	65010000 	strvs	r0, [r1, #-0]
     de0:	00871501 	addeq	r1, r7, r1, lsl #10
     de4:	23020000 	movwcs	r0, #8192	@ 0x2000
     de8:	08c01c00 	stmiaeq	r0, {sl, fp, ip}^
     dec:	23020000 	movwcs	r0, #8192	@ 0x2000
     df0:	5d170004 	ldcpl	0, cr0, [r7, #-16]
     df4:	01000002 	tsteq	r0, r2
     df8:	c502016e 	strgt	r0, [r2, #-366]	@ 0xfffffe92
     dfc:	22000008 	andcs	r0, r0, #8
     e00:	0003c101 	andeq	ip, r3, r1, lsl #2
     e04:	063d0300 	ldrteq	r0, [sp], -r0, lsl #6
     e08:	09140101 	ldmdbeq	r4, {r0, r8}
     e0c:	5e090000 	cdppl	0, 0, cr0, cr9, cr0, {0}
     e10:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
     e14:	00000914 	andeq	r0, r0, r4, lsl r9
     e18:	00092109 	andeq	r2, r9, r9, lsl #2
     e1c:	04070000 	streq	r0, [r7], #-0
     e20:	0000091a 	andeq	r0, r0, sl, lsl r9
     e24:	09200407 	stmdbeq	r0!, {r0, r1, r2, sl}
     e28:	07230000 	streq	r0, [r3, -r0]!
     e2c:	00005e04 	andeq	r5, r0, r4, lsl #28
     e30:	7f012400 	svcvc	0x00012400
     e34:	01000004 	tsteq	r0, r4
     e38:	0105017e 	tsteq	r5, lr, ror r1
     e3c:	0000009a 	muleq	r0, sl, r0
     e40:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
     e44:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
     e48:	00000345 	andeq	r0, r0, r5, asr #6
     e4c:	0009df01 	andeq	sp, r9, r1, lsl #30
     e50:	64692500 	strbtvs	r2, [r9], #-1280	@ 0xfffffb00
     e54:	7e010078 	mcrvc	0, 0, r0, cr1, cr8, {3}
     e58:	00411a01 	subeq	r1, r1, r1, lsl #20
     e5c:	03690000 	cmneq	r9, #0
     e60:	03650000 	cmneq	r5, #0
     e64:	62250000 	eorvs	r0, r5, #0
     e68:	01006675 	tsteq	r0, r5, ror r6
     e6c:	2129017e 			@ <UNDEFINED> instruction: 0x2129017e
     e70:	90000009 	andls	r0, r0, r9
     e74:	8a000003 	bhi	e88 <_Minimum_Stack_Size+0xd88>
     e78:	26000003 	strcs	r0, [r0], -r3
     e7c:	000003d3 	ldrdeq	r0, [r0], -r3
     e80:	10017f01 	andne	r7, r1, r1, lsl #30
     e84:	000009df 	ldrdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
     e88:	000003c2 	andeq	r0, r0, r2, asr #7
     e8c:	000003be 			@ <UNDEFINED> instruction: 0x000003be
     e90:	007a7327 	rsbseq	r7, sl, r7, lsr #6
     e94:	07018001 	streq	r8, [r1, -r1]
     e98:	0000009a 	muleq	r0, sl, r0
     e9c:	000003ec 	andeq	r0, r0, ip, ror #7
     ea0:	000003ea 	andeq	r0, r0, sl, ror #7
     ea4:	01006e27 	tsteq	r0, r7, lsr #28
     ea8:	9a070182 	bls	1c14b8 <__Stack_Size+0x1c04b8>
     eac:	05000000 	streq	r0, [r0, #-0]
     eb0:	ff000004 			@ <UNDEFINED> instruction: 0xff000004
     eb4:	27000003 	strcs	r0, [r0, -r3]
     eb8:	01006e69 	tsteq	r0, r9, ror #28
     ebc:	e5160183 	ldr	r0, [r6, #-387]	@ 0xfffffe7d
     ec0:	3c000009 	stccc	0, cr0, [r0], {9}
     ec4:	36000004 	strcc	r0, [r0], -r4
     ec8:	28000004 	stmdacs	r0, {r2}
     ecc:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
     ed0:	080006ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl}
     ed4:	01006927 	tsteq	r0, r7, lsr #18
     ed8:	9a0b0184 	bls	2c14f0 <__Stack_Size+0x2c04f0>
     edc:	69000000 	stmdbvs	r0, {}	@ <UNPREDICTABLE>
     ee0:	67000004 	strvs	r0, [r0, -r4]
     ee4:	00000004 	andeq	r0, r0, r4
     ee8:	e8040700 	stmda	r4, {r8, r9, sl}
     eec:	07000008 	streq	r0, [r0, -r8]
     ef0:	00008704 	andeq	r8, r0, r4, lsl #14
     ef4:	67012900 	strvs	r2, [r1, -r0, lsl #18]
     ef8:	01000003 	tsteq	r0, r3
     efc:	01060170 	tsteq	r6, r0, ror r1
     f00:	08000628 	stmdaeq	r0, {r3, r5, r9, sl}
     f04:	0800067c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl}
     f08:	0000047d 	andeq	r0, r0, sp, ror r4
     f0c:	000aa701 	andeq	sl, sl, r1, lsl #14
     f10:	64692500 	strbtvs	r2, [r9], #-1280	@ 0xfffffb00
     f14:	70010078 	andvc	r0, r1, r8, ror r0
     f18:	00411c01 	subeq	r1, r1, r1, lsl #24
     f1c:	04a30000 	strteq	r0, [r3], #0
     f20:	049d0000 	ldreq	r0, [sp], #0
     f24:	622a0000 	eorvs	r0, sl, #0
     f28:	01006675 	tsteq	r0, r5, ror r6
     f2c:	a7310170 			@ <UNDEFINED> instruction: 0xa7310170
     f30:	0100000a 	tsteq	r0, sl
     f34:	0cd02b51 	fldmiaxeq	r0, {d18-d57}	@ Deprecated
     f38:	70010000 	andvc	r0, r1, r0
     f3c:	005e3f01 	subseq	r3, lr, r1, lsl #30
     f40:	52010000 	andpl	r0, r1, #0
     f44:	0003d326 	andeq	sp, r3, r6, lsr #6
     f48:	01710100 	cmneq	r1, r0, lsl #2
     f4c:	0009df10 	andeq	sp, r9, r0, lsl pc
     f50:	0004d100 	andeq	sp, r4, r0, lsl #2
     f54:	0004cf00 	andeq	ip, r4, r0, lsl #30
     f58:	324e2700 	subcc	r2, lr, #0, 14
     f5c:	01720100 	cmneq	r2, r0, lsl #2
     f60:	00005e0c 	andeq	r5, r0, ip, lsl #28
     f64:	0004e600 	andeq	lr, r4, r0, lsl #12
     f68:	0004e400 	andeq	lr, r4, r0, lsl #8
     f6c:	020c2600 	andeq	r2, ip, #0, 12
     f70:	74010000 	strvc	r0, [r1], #-0
     f74:	09210d01 	stmdbeq	r1!, {r0, r8, sl, fp}
     f78:	04fb0000 	ldrbteq	r0, [fp], #0
     f7c:	04f90000 	ldrbteq	r0, [r9], #0
     f80:	6f270000 	svcvs	0x00270000
     f84:	01007475 	tsteq	r0, r5, ror r4
     f88:	e5160175 	ldr	r0, [r6, #-373]	@ 0xfffffe8b
     f8c:	14000009 	strne	r0, [r0], #-9
     f90:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
     f94:	2c000005 	stccs	0, cr0, [r0], {5}
     f98:	000000c0 	andeq	r0, r0, r0, asr #1
     f9c:	01006927 	tsteq	r0, r7, lsr #18
     fa0:	5e100176 	fixplz	r0, f6
     fa4:	4f000000 	svcmi	0x00000000
     fa8:	4b000005 	blmi	fc4 <_Minimum_Stack_Size+0xec4>
     fac:	00000005 	andeq	r0, r0, r5
     fb0:	6f040700 	svcvs	0x00040700
     fb4:	2d000000 	stccs	0, cr0, [r0, #-0]
     fb8:	0002a401 	andeq	sl, r2, r1, lsl #8
     fbc:	012e0100 			@ <UNDEFINED> instruction: 0x012e0100
     fc0:	0004e006 	andeq	lr, r4, r6
     fc4:	00062808 	andeq	r2, r6, r8, lsl #16
     fc8:	00056f08 	andeq	r6, r5, r8, lsl #30
     fcc:	0b980100 	bleq	fe6013d4 <BootRAM+0xd571b75>
     fd0:	882e0000 	stmdahi	lr!, {}	@ <UNPREDICTABLE>
     fd4:	06000000 	streq	r0, [r0], -r0
     fd8:	2600000b 	strcs	r0, [r0], -fp
     fdc:	000006ca 	andeq	r0, r0, sl, asr #13
     fe0:	0f013101 	svceq	0x00013101
     fe4:	00000041 	andeq	r0, r0, r1, asr #32
     fe8:	00000591 	muleq	r0, r1, r5
     fec:	0000058f 	andeq	r0, r0, pc, lsl #11
     ff0:	0005122f 	andeq	r1, r5, pc, lsr #4
     ff4:	000af608 	andeq	pc, sl, r8, lsl #12
     ff8:	50013000 	andpl	r3, r1, r0
     ffc:	00007602 	andeq	r7, r0, r2, lsl #12
    1000:	00053231 	andeq	r3, r5, r1, lsr r2
    1004:	50013008 	andpl	r3, r1, r8
    1008:	08007605 	stmdaeq	r0, {r0, r2, r9, sl, ip, sp, lr}
    100c:	00002180 	andeq	r2, r0, r0, lsl #3
    1010:	0000a02e 	andeq	sl, r0, lr, lsr #32
    1014:	000b2300 	andeq	r2, fp, r0, lsl #6
    1018:	00692700 	rsbeq	r2, r9, r0, lsl #14
    101c:	11014d01 	tstne	r1, r1, lsl #26
    1020:	00000041 	andeq	r0, r0, r1, asr #32
    1024:	000005a8 	andeq	r0, r0, r8, lsr #11
    1028:	000005a4 	andeq	r0, r0, r4, lsr #11
    102c:	055a3200 	ldrbeq	r3, [sl, #-512]	@ 0xfffffe00
    1030:	126f0800 	rsbne	r0, pc, #0, 16
    1034:	70320000 	eorsvc	r0, r2, r0
    1038:	81080005 	tsthi	r8, r5
    103c:	33000012 	movwcc	r0, #18
    1040:	080005b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sl}
    1044:	00000c27 	andeq	r0, r0, r7, lsr #24
    1048:	00000b5d 	andeq	r0, r0, sp, asr fp
    104c:	02500130 	subseq	r0, r0, #48, 2
    1050:	01300074 	teqeq	r0, r4, ror r0
    1054:	00740251 	rsbseq	r0, r4, r1, asr r2
    1058:	01520130 	cmpeq	r2, r0, lsr r1
    105c:	53013038 	movwpl	r3, #4152	@ 0x1038
    1060:	07110305 	ldreq	r0, [r1, -r5, lsl #6]
    1064:	33000800 	movwcc	r0, #2048	@ 0x800
    1068:	080005c2 	stmdaeq	r0, {r1, r6, r7, r8, sl}
    106c:	00000c27 	andeq	r0, r0, r7, lsr #24
    1070:	00000b85 	andeq	r0, r0, r5, lsl #23
    1074:	02500130 	subseq	r0, r0, #48, 2
    1078:	01308009 	teqeq	r0, r9
    107c:	00740251 	rsbseq	r0, r4, r1, asr r2
    1080:	01520130 	cmpeq	r2, r0, lsr r1
    1084:	53013038 	movwpl	r3, #4152	@ 0x1038
    1088:	067d0305 	ldrbteq	r0, [sp], -r5, lsl #6
    108c:	32000800 	andcc	r0, r0, #0, 16
    1090:	080005c8 	stmdaeq	r0, {r3, r6, r7, r8, sl}
    1094:	0000128a 	andeq	r1, r0, sl, lsl #5
    1098:	0005d632 	andeq	sp, r5, r2, lsr r6
    109c:	00128108 	andseq	r8, r2, r8, lsl #2
    10a0:	01340000 	teqeq	r4, r0
    10a4:	0000075a 	andeq	r0, r0, sl, asr r7
    10a8:	0106f901 	tsteq	r6, r1, lsl #18	@ <UNPREDICTABLE>
    10ac:	0800039c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9}
    10b0:	080004e0 	stmdaeq	r0, {r5, r6, r7, sl}
    10b4:	000005cb 	andeq	r0, r0, fp, asr #11
    10b8:	000c2701 	andeq	r2, ip, r1, lsl #14
    10bc:	06ca3500 	strbeq	r3, [sl], r0, lsl #10
    10c0:	f9010000 			@ <UNDEFINED> instruction: 0xf9010000
    10c4:	00004121 	andeq	r4, r0, r1, lsr #2
    10c8:	0005ef00 	andeq	lr, r5, r0, lsl #30
    10cc:	0005eb00 	andeq	lr, r5, r0, lsl #22
    10d0:	07c03500 	strbeq	r3, [r0, r0, lsl #10]
    10d4:	f9010000 			@ <UNDEFINED> instruction: 0xf9010000
    10d8:	00004130 	andeq	r4, r0, r0, lsr r1
    10dc:	00061500 	andeq	r1, r6, r0, lsl #10
    10e0:	00060d00 	andeq	r0, r6, r0, lsl #26
    10e4:	0cd03600 	ldcleq	6, cr3, [r0], {0}
    10e8:	f9010000 			@ <UNDEFINED> instruction: 0xf9010000
    10ec:	00005e42 	andeq	r5, r0, r2, asr #28
    10f0:	35520100 	ldrbcc	r0, [r2, #-256]	@ 0xffffff00
    10f4:	000002ce 	andeq	r0, r0, lr, asr #5
    10f8:	a851f901 	ldmdage	r1, {r0, r8, fp, ip, sp, lr, pc}^
    10fc:	53000000 	movwpl	r0, #0
    1100:	4f000006 	svcmi	0x00000006
    1104:	37000006 	strcc	r0, [r0, -r6]
    1108:	000007d3 	ldrdeq	r0, [r0], -r3
    110c:	410bfb01 	tstmi	fp, r1, lsl #22	@ <UNPREDICTABLE>
    1110:	79000000 	stmdbvc	r0, {}	@ <UNPREDICTABLE>
    1114:	71000006 	tstvc	r0, r6
    1118:	27000006 	strcs	r0, [r0, -r6]
    111c:	00667562 	rsbeq	r7, r6, r2, ror #10
    1120:	0c010101 	stfeqs	f0, [r1], {1}
    1124:	0000005e 	andeq	r0, r0, lr, asr r0
    1128:	000006d9 	ldrdeq	r0, [r0], -r9
    112c:	000006c3 	andeq	r0, r0, r3, asr #13
    1130:	3c013400 	cfstrscc	mvf3, [r1], {-0}
    1134:	01000006 	tsteq	r0, r6
    1138:	980106c9 	stmdals	r1, {r0, r3, r6, r7, r9, sl}
    113c:	9c080002 	stcls	0, cr0, [r8], {2}
    1140:	8e080003 	cdphi	0, 0, cr0, cr8, cr3, {0}
    1144:	01000007 	tsteq	r0, r7
    1148:	00000cbb 			@ <UNDEFINED> instruction: 0x00000cbb
    114c:	0006ca35 	andeq	ip, r6, r5, lsr sl
    1150:	1ac90100 	bne	ff241558 <BootRAM+0xe1b1cf9>
    1154:	00000041 	andeq	r0, r0, r1, asr #32
    1158:	000007b2 			@ <UNDEFINED> instruction: 0x000007b2
    115c:	000007ae 	andeq	r0, r0, lr, lsr #15
    1160:	0007c035 	andeq	ip, r7, r5, lsr r0
    1164:	29c90100 	stmibcs	r9, {r8}^
    1168:	00000041 	andeq	r0, r0, r1, asr #32
    116c:	000007d8 	ldrdeq	r0, [r0], -r8
    1170:	000007d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1174:	000cd035 	andeq	sp, ip, r5, lsr r0
    1178:	3bc90100 	blcc	ff241580 <BootRAM+0xe1b1d21>
    117c:	0000005e 	andeq	r0, r0, lr, asr r0
    1180:	00000818 	andeq	r0, r0, r8, lsl r8
    1184:	00000812 	andeq	r0, r0, r2, lsl r8
    1188:	0002ce35 	andeq	ip, r2, r5, lsr lr
    118c:	4ac90100 	bmi	ff241594 <BootRAM+0xe1b1d35>
    1190:	000000a8 	andeq	r0, r0, r8, lsr #1
    1194:	00000848 	andeq	r0, r0, r8, asr #16
    1198:	00000844 	andeq	r0, r0, r4, asr #16
    119c:	0007d337 	andeq	sp, r7, r7, lsr r3
    11a0:	0bcb0100 	bleq	ff2c15a8 <BootRAM+0xe231d49>
    11a4:	00000041 	andeq	r0, r0, r1, asr #32
    11a8:	0000086a 	andeq	r0, r0, sl, ror #16
    11ac:	00000866 	andeq	r0, r0, r6, ror #16
    11b0:	66756238 			@ <UNDEFINED> instruction: 0x66756238
    11b4:	0cd40100 	ldfeqe	f0, [r4], {0}
    11b8:	0000005e 	andeq	r0, r0, lr, asr r0
    11bc:	000008a1 	andeq	r0, r0, r1, lsr #17
    11c0:	00000893 	muleq	r0, r3, r8
    11c4:	0ae33900 	beq	ff8cf5cc <BootRAM+0xe83fd6d>
    11c8:	82010000 	andhi	r0, r1, #0
    11cc:	0710010d 	ldreq	r0, [r0, -sp, lsl #2]
    11d0:	08740800 	ldmdaeq	r4!, {fp}^
    11d4:	09280800 	stmdbeq	r8!, {fp}
    11d8:	d9010000 	stmdble	r1, {}	@ <UNPREDICTABLE>
    11dc:	3500000f 	strcc	r0, [r0, #-15]
    11e0:	000006ca 	andeq	r0, r0, sl, asr #13
    11e4:	411d8201 	tstmi	sp, r1, lsl #4
    11e8:	88000000 	stmdahi	r0, {}	@ <UNPREDICTABLE>
    11ec:	84000009 	strhi	r0, [r0], #-9
    11f0:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    11f4:	0000028f 	andeq	r0, r0, pc, lsl #5
    11f8:	5e138301 	cdppl	3, 1, cr8, cr3, cr1, {0}
    11fc:	05000000 	streq	r0, [r0, #-0]
    1200:	00006a03 	andeq	r6, r0, r3, lsl #20
    1204:	07fb3720 	ldrbeq	r3, [fp, r0, lsr #14]!
    1208:	84010000 	strhi	r0, [r1], #-0
    120c:	00005e0c 	andeq	r5, r0, ip, lsl #28
    1210:	0009ad00 	andeq	sl, r9, r0, lsl #26
    1214:	0009a900 	andeq	sl, r9, r0, lsl #18
    1218:	009b3a00 	addseq	r3, fp, r0, lsl #20
    121c:	85010000 	strhi	r0, [r1, #-0]
    1220:	0000410b 	andeq	r4, r0, fp, lsl #2
    1224:	65723800 	ldrbvs	r3, [r2, #-2048]!	@ 0xfffff800
    1228:	95010071 	strls	r0, [r1, #-113]	@ 0xffffff8f
    122c:	0000410b 	andeq	r4, r0, fp, lsl #2
    1230:	0009d900 	andeq	sp, r9, r0, lsl #18
    1234:	0009cd00 	andeq	ip, r9, r0, lsl #26
    1238:	01102e00 	tsteq	r0, r0, lsl #28
    123c:	0e7a0000 	cdpeq	0, 7, cr0, cr10, cr0, {0}
    1240:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    1244:	01000008 	tsteq	r0, r8
    1248:	0fd90bac 	svceq	0x00d90bac
    124c:	91020000 	mrsls	r0, (UNDEF: 2)
    1250:	0cd01e6c 	ldcleq	14, cr1, [r0], {108}	@ 0x6c
    1254:	ad010000 	stcge	0, cr0, [r1, #-0]
    1258:	00005e0e 	andeq	r5, r0, lr, lsl #28
    125c:	6a910200 	bvs	fe441a64 <BootRAM+0xd3b2205>
    1260:	0007b23b 	andeq	fp, r7, fp, lsr r2
    1264:	0007c808 	andeq	ip, r7, r8, lsl #16
    1268:	000d9808 	andeq	r9, sp, r8, lsl #16
    126c:	087d1e00 	ldmdaeq	sp!, {r9, sl, fp, ip}^
    1270:	9d010000 	stcls	0, cr0, [r1, #-0]
    1274:	00091a17 	andeq	r1, r9, r7, lsl sl
    1278:	6c910200 	lfmvs	f0, 4, [r1], {0}
    127c:	000cd01e 	andeq	sp, ip, lr, lsl r0
    1280:	149e0100 	ldrne	r0, [lr], #256	@ 0x100
    1284:	0000005e 	andeq	r0, r0, lr, asr r0
    1288:	3c6a9102 	stfccp	f1, [sl], #-8
    128c:	080007c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl}
    1290:	000008f5 	strdeq	r0, [r0], -r5
    1294:	02510130 	subseq	r0, r1, #48, 2
    1298:	01306c91 	teqeq	r0, r1	@ <illegal shifter operand>
    129c:	6a910252 	bvs	fe441bec <BootRAM+0xd3b238d>
    12a0:	bf3d0000 	svclt	0x003d0000
    12a4:	6a000012 	bvs	12f4 <__Stack_Size+0x2f4>
    12a8:	01080007 	tsteq	r8, r7
    12ac:	0800076a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl}
    12b0:	0800076e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sl}
    12b4:	d90ba501 	stmdble	fp, {r0, r8, sl, sp, pc}
    12b8:	3e00000d 	cdpcc	0, 0, cr0, cr0, cr13, {0}
    12bc:	000012e5 	andeq	r1, r0, r5, ror #5
    12c0:	00000a3e 	andeq	r0, r0, lr, lsr sl
    12c4:	00000a3c 	andeq	r0, r0, ip, lsr sl
    12c8:	0012d93e 	andseq	sp, r2, lr, lsr r9
    12cc:	000a5400 	andeq	r5, sl, r0, lsl #8
    12d0:	000a5200 	andeq	r5, sl, r0, lsl #4
    12d4:	12cd3e00 	sbcne	r3, sp, #0, 28
    12d8:	0a6e0000 	beq	1b812e0 <__Stack_Size+0x1b802e0>
    12dc:	0a6c0000 	beq	1b012e4 <__Stack_Size+0x1b002e4>
    12e0:	3f000000 	svccc	0x00000000
    12e4:	00000fdb 	ldrdeq	r0, [r0], -fp
    12e8:	080007da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl}
    12ec:	00013001 	andeq	r3, r1, r1
    12f0:	05b00100 	ldreq	r0, [r0, #256]!	@ 0x100
    12f4:	00000e19 	andeq	r0, r0, r9, lsl lr
    12f8:	000ff53e 	andeq	pc, pc, lr, lsr r5	@ <UNPREDICTABLE>
    12fc:	000a8400 	andeq	r8, sl, r0, lsl #8
    1300:	000a8200 	andeq	r8, sl, r0, lsl #4
    1304:	0fe93e00 	svceq	0x00e93e00
    1308:	0a9a0000 	beq	fe681310 <BootRAM+0xd5f1ab1>
    130c:	0a980000 	beq	fe601314 <BootRAM+0xd571ab5>
    1310:	ea3c0000 	b	f01318 <__Stack_Size+0xf00318>
    1314:	02080007 	andeq	r0, r8, #7
    1318:	30000010 	andcc	r0, r0, r0, lsl r0
    131c:	09025001 	stmdbeq	r2, {r0, ip, lr}
    1320:	3d000080 	stccc	0, cr0, [r0, #-512]	@ 0xfffffe00
    1324:	000012bf 			@ <UNDEFINED> instruction: 0x000012bf
    1328:	080007ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl}
    132c:	0007ec01 	andeq	lr, r7, r1, lsl #24
    1330:	0007f208 	andeq	pc, r7, r8, lsl #4
    1334:	0ba80108 	bleq	fea0175c <BootRAM+0xd971efd>
    1338:	00000e5a 	andeq	r0, r0, sl, asr lr
    133c:	0012e53e 	andseq	lr, r2, lr, lsr r5
    1340:	000ab000 	andeq	fp, sl, r0
    1344:	000aae00 	andeq	sl, sl, r0, lsl #28
    1348:	12d93e00 	sbcsne	r3, r9, #0, 28
    134c:	0ac60000 	beq	ff181354 <BootRAM+0xe0f1af5>
    1350:	0ac40000 	beq	ff101358 <BootRAM+0xe071af9>
    1354:	cd3e0000 	ldcgt	0, cr0, [lr, #-0]
    1358:	e0000012 	and	r0, r0, r2, lsl r0
    135c:	de00000a 	cdple	0, 0, cr0, cr0, cr10, {0}
    1360:	0000000a 	andeq	r0, r0, sl
    1364:	0008083c 	andeq	r0, r8, ip, lsr r8
    1368:	00121a08 	andseq	r1, r2, r8, lsl #20
    136c:	50013000 	andpl	r3, r1, r0
    1370:	00620305 	rsbeq	r0, r2, r5, lsl #6
    1374:	01302000 	teqeq	r0, r0
    1378:	6c910251 	lfmvs	f0, 4, [r1], {81}	@ 0x51
    137c:	02520130 	subseq	r0, r2, #48, 2
    1380:	00006a91 	muleq	r0, r1, sl
    1384:	0007903b 	andeq	r9, r7, fp, lsr r0
    1388:	0007b208 	andeq	fp, r7, r8, lsl #4
    138c:	000ef108 	andeq	pc, lr, r8, lsl #2
    1390:	04263700 	strteq	r3, [r6], #-1792	@ 0xfffff900
    1394:	b5010000 	strlt	r0, [r1, #-0]
    1398:	00004111 	andeq	r4, r0, r1, lsl r1
    139c:	000af600 	andeq	pc, sl, r0, lsl #12
    13a0:	000af400 	andeq	pc, sl, r0, lsl #8
    13a4:	12bf4000 	adcsne	r4, pc, #0
    13a8:	07980000 	ldreq	r0, [r8, r0]
    13ac:	60010800 	andvs	r0, r1, r0, lsl #16
    13b0:	01000001 	tsteq	r0, r1
    13b4:	e53e09b6 	ldr	r0, [lr, #-2486]!	@ 0xfffff64a
    13b8:	0b000012 	bleq	1408 <__Stack_Size+0x408>
    13bc:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    13c0:	3e00000b 	cdpcc	0, 0, cr0, cr0, cr11, {0}
    13c4:	000012d9 	ldrdeq	r1, [r0], -r9
    13c8:	00000b0b 	andeq	r0, r0, fp, lsl #22
    13cc:	00000b09 	andeq	r0, r0, r9, lsl #22
    13d0:	0012cd3e 	andseq	ip, r2, lr, lsr sp
    13d4:	000b0b00 	andeq	r0, fp, r0, lsl #22
    13d8:	000b0900 	andeq	r0, fp, r0, lsl #18
    13dc:	079c3c00 	ldreq	r3, [ip, r0, lsl #24]
    13e0:	09eb0800 	stmibeq	fp!, {fp}^
    13e4:	01300000 	teqeq	r0, r0
    13e8:	00710250 	rsbseq	r0, r1, r0, asr r2
    13ec:	02510130 	subseq	r0, r1, #48, 2
    13f0:	01300071 	teqeq	r0, r1, ror r0
    13f4:	00710252 	rsbseq	r0, r1, r2, asr r2
    13f8:	3f000000 	svccc	0x00000000
    13fc:	00001294 	muleq	r0, r4, r2
    1400:	0800073a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl}
    1404:	0000f801 	andeq	pc, r0, r1, lsl #16
    1408:	098e0100 	stmibeq	lr, {r8}
    140c:	00000f37 	andeq	r0, r0, r7, lsr pc
    1410:	0012a63e 	andseq	sl, r2, lr, lsr r6
    1414:	000b2100 	andeq	r2, fp, r0, lsl #2
    1418:	000b1f00 	andeq	r1, fp, r0, lsl #30
    141c:	12b23e00 	adcsne	r3, r2, #0, 28
    1420:	0b370000 	bleq	dc1428 <__Stack_Size+0xdc0428>
    1424:	0b350000 	bleq	d4142c <__Stack_Size+0xd4042c>
    1428:	463c0000 	ldrtmi	r0, [ip], -r0
    142c:	27080007 	strcs	r0, [r8, -r7]
    1430:	30000009 	andcc	r0, r0, r9
    1434:	31015001 	tstcc	r1, r1
    1438:	03510130 	cmpeq	r1, #48, 2
    143c:	0000c674 	andeq	ip, r0, r4, ror r6
    1440:	12bf3f00 	adcsne	r3, pc, #0, 30
    1444:	08160000 	ldmdaeq	r6, {}	@ <UNPREDICTABLE>
    1448:	48050800 	stmdami	r5, {fp}
    144c:	01000001 	tsteq	r0, r1
    1450:	0f7e2cc4 	svceq	0x007e2cc4
    1454:	e53e0000 	ldr	r0, [lr, #-0]!
    1458:	51000012 	tstpl	r0, r2, lsl r0
    145c:	4f00000b 	svcmi	0x0000000b
    1460:	3e00000b 	cdpcc	0, 0, cr0, cr0, cr11, {0}
    1464:	000012d9 	ldrdeq	r1, [r0], -r9
    1468:	00000b51 	andeq	r0, r0, r1, asr fp
    146c:	00000b4f 	andeq	r0, r0, pc, asr #22
    1470:	0012cd3e 	andseq	ip, r2, lr, lsr sp
    1474:	000b5100 	andeq	r5, fp, r0, lsl #2
    1478:	000b4f00 	andeq	r4, fp, r0, lsl #30
    147c:	07784100 	ldrbeq	r4, [r8, -r0, lsl #2]!
    1480:	eb010800 	bl	43488 <__Stack_Size+0x42488>
    1484:	00000009 	andeq	r0, r0, r9
    1488:	0012bf3d 	andseq	fp, r2, sp, lsr pc
    148c:	00081600 	andeq	r1, r8, r0, lsl #12
    1490:	08160108 	ldmdaeq	r6, {r3, r8}
    1494:	08160800 	ldmdaeq	r6, {fp}
    1498:	bc010800 	stclt	8, cr0, [r1], {-0}
    149c:	000fbf09 	andeq	fp, pc, r9, lsl #30
    14a0:	12e53e00 	rscne	r3, r5, #0, 28
    14a4:	0b670000 	bleq	19c14ac <__Stack_Size+0x19c04ac>
    14a8:	0b650000 	bleq	19414b0 <__Stack_Size+0x19404b0>
    14ac:	d93e0000 	ldmdble	lr!, {}	@ <UNPREDICTABLE>
    14b0:	67000012 	smladvs	r0, r2, r0, r0
    14b4:	6500000b 	strvs	r0, [r0, #-11]
    14b8:	3e00000b 	cdpcc	0, 0, cr0, cr0, cr11, {0}
    14bc:	000012cd 	andeq	r1, r0, sp, asr #5
    14c0:	00000b67 	andeq	r0, r0, r7, ror #22
    14c4:	00000b65 	andeq	r0, r0, r5, ror #22
    14c8:	082a3c00 	stmdaeq	sl!, {sl, fp, ip, sp}
    14cc:	11be0800 			@ <UNDEFINED> instruction: 0x11be0800
    14d0:	01300000 	teqeq	r0, r0
    14d4:	62030550 	andvs	r0, r3, #80, 10	@ 0x14000000
    14d8:	30200000 	eorcc	r0, r0, r0
    14dc:	75025201 	strvc	r5, [r2, #-513]	@ 0xfffffdff
    14e0:	42000000 	andmi	r0, r0, #0
    14e4:	03f74304 	mvnseq	r4, #4, 6	@ 0x10000000
    14e8:	7a010000 	bvc	414f0 <__Stack_Size+0x404f0>
    14ec:	02030114 	andeq	r0, r3, #20, 2
    14f0:	44000010 	strmi	r0, [r0], #-16
    14f4:	00667562 	rsbeq	r7, r6, r2, ror #10
    14f8:	a72d7a01 	strge	r7, [sp, -r1, lsl #20]!
    14fc:	4500000a 	strmi	r0, [r0, #-10]
    1500:	00000cd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1504:	5e3b7a01 	vaddpl.f32	s14, s22, s2
    1508:	00000000 	andeq	r0, r0, r0
    150c:	000a4439 	andeq	r4, sl, r9, lsr r4
    1510:	0d6c0100 	stfeqe	f0, [ip, #-0]
    1514:	00067c01 	andeq	r7, r6, r1, lsl #24
    1518:	0006b408 	andeq	fp, r6, r8, lsl #8
    151c:	000b7b08 	andeq	r7, fp, r8, lsl #22
    1520:	10990100 	addsne	r0, r9, r0, lsl #2
    1524:	ca350000 	bgt	d4152c <__Stack_Size+0xd4052c>
    1528:	01000006 	tsteq	r0, r6
    152c:	00411c6c 	subeq	r1, r1, ip, ror #24
    1530:	0b9f0000 	bleq	fe7c1538 <BootRAM+0xd731cd9>
    1534:	0b9b0000 	bleq	fe6c153c <BootRAM+0xd631cdd>
    1538:	76370000 	ldrtvc	r0, [r7], -r0
    153c:	01000006 	tsteq	r0, r6
    1540:	005e0c6e 	subseq	r0, lr, lr, ror #24
    1544:	0bc60000 	bleq	ff18154c <BootRAM+0xe0f1ced>
    1548:	0bc00000 	bleq	ff001550 <BootRAM+0xdf71cf1>
    154c:	bf400000 	svclt	0x00400000
    1550:	92000012 	andls	r0, r0, #18
    1554:	01080006 	tsteq	r8, r6
    1558:	000000e0 	andeq	r0, r0, r0, ror #1
    155c:	3e037001 	cdpcc	0, 0, cr7, cr3, cr1, {0}
    1560:	000012e5 	andeq	r1, r0, r5, ror #5
    1564:	00000c05 	andeq	r0, r0, r5, lsl #24
    1568:	00000c03 	andeq	r0, r0, r3, lsl #24
    156c:	0012d93e 	andseq	sp, r2, lr, lsr r9
    1570:	000c1a00 	andeq	r1, ip, r0, lsl #20
    1574:	000c1800 	andeq	r1, ip, r0, lsl #16
    1578:	12cd3e00 	sbcne	r3, sp, #0, 28
    157c:	0c2f0000 	stceq	0, cr0, [pc], #-0	@ 1584 <__Stack_Size+0x584>
    1580:	0c2d0000 	stceq	0, cr0, [sp], #-0
    1584:	963c0000 	ldrtls	r0, [ip], -r0
    1588:	eb080006 	bl	2015a8 <__Stack_Size+0x2005a8>
    158c:	30000009 	andcc	r0, r0, r9
    1590:	30015001 	andcc	r5, r1, r1
    1594:	02510130 	subseq	r0, r1, #48, 2
    1598:	01300071 	teqeq	r0, r1, ror r0
    159c:	00720252 	rsbseq	r0, r2, r2, asr r2
    15a0:	46000000 	strmi	r0, [r0], -r0
    15a4:	00009701 	andeq	r9, r0, r1, lsl #14
    15a8:	06410100 	strbeq	r0, [r1], -r0, lsl #2
    15ac:	080001ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8}
    15b0:	08000298 	stmdaeq	r0, {r3, r4, r7, r9}
    15b4:	01007d02 	tsteq	r0, r2, lsl #26
    15b8:	00001196 	muleq	r0, r6, r1
    15bc:	0010c447 	andseq	ip, r0, r7, asr #8
    15c0:	012c3a00 			@ <UNDEFINED> instruction: 0x012c3a00
    15c4:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    15c8:	00007b03 	andeq	r7, r0, r3, lsl #22
    15cc:	063b0000 	ldrteq	r0, [fp], -r0
    15d0:	16080002 	strne	r0, [r8], -r2
    15d4:	e6080002 	str	r0, [r8], -r2
    15d8:	37000010 	smladcc	r0, r0, r0, r0
    15dc:	0000012c 	andeq	r0, r0, ip, lsr #2
    15e0:	7b034e01 	blvc	d4dec <__Stack_Size+0xd3dec>
    15e4:	47000000 	strmi	r0, [r0, -r0]
    15e8:	4300000c 	movwmi	r0, #12
    15ec:	0000000c 	andeq	r0, r0, ip
    15f0:	0000382e 	andeq	r3, r0, lr, lsr #16
    15f4:	00110400 	andseq	r0, r1, r0, lsl #8
    15f8:	74633800 	strbtvc	r3, [r3], #-2048	@ 0xfffff800
    15fc:	50010072 	andpl	r0, r1, r2, ror r0
    1600:	00007b10 	andeq	r7, r0, r0, lsl fp
    1604:	000c6e00 	andeq	r6, ip, r0, lsl #28
    1608:	000c6600 	andeq	r6, ip, r0, lsl #12
    160c:	16470000 	strbne	r0, [r7], -r0
    1610:	3a000011 	bcc	165c <__Stack_Size+0x65c>
    1614:	0000012c 	andeq	r0, r0, ip, lsr #2
    1618:	7b035101 	blvc	d5a24 <__Stack_Size+0xd4a24>
    161c:	00000000 	andeq	r0, r0, r0
    1620:	0000502e 	andeq	r5, r0, lr, lsr #32
    1624:	00113400 	andseq	r3, r1, r0, lsl #8
    1628:	012c3700 			@ <UNDEFINED> instruction: 0x012c3700
    162c:	51010000 	mrspl	r0, (UNDEF: 1)
    1630:	00007b03 	andeq	r7, r0, r3, lsl #22
    1634:	000cc100 	andeq	ip, ip, r0, lsl #2
    1638:	000cbb00 	andeq	fp, ip, r0, lsl #22
    163c:	682e0000 	stmdavs	lr!, {}	@ <UNPREDICTABLE>
    1640:	50000000 	andpl	r0, r0, r0
    1644:	38000011 	stmdacc	r0, {r0, r4}
    1648:	58010069 	stmdapl	r1, {r0, r3, r5, r6}
    164c:	0000410f 	andeq	r4, r0, pc, lsl #2
    1650:	000cf200 	andeq	pc, ip, r0, lsl #4
    1654:	000cee00 	andeq	lr, ip, r0, lsl #28
    1658:	543b0000 	ldrtpl	r0, [fp], #-0
    165c:	5a080002 	bpl	20166c <__Stack_Size+0x20066c>
    1660:	72080002 	andvc	r0, r8, #2
    1664:	38000011 	stmdacc	r0, {r0, r4}
    1668:	00727463 	rsbseq	r7, r2, r3, ror #8
    166c:	7b105901 	blvc	417a78 <__Stack_Size+0x416a78>
    1670:	1b000000 	blne	1678 <__Stack_Size+0x678>
    1674:	1500000d 	strne	r0, [r0, #-13]
    1678:	0000000d 	andeq	r0, r0, sp
    167c:	0012f248 	andseq	pc, r2, r8, asr #4
    1680:	00027400 	andeq	r7, r2, r0, lsl #8
    1684:	02740108 	rsbseq	r0, r4, #8, 2
    1688:	027c0800 	rsbseq	r0, ip, #0, 16
    168c:	5f010800 	svcpl	0x00010800
    1690:	13013e03 	movwne	r3, #7683	@ 0x1e03
    1694:	0d5e0000 	ldcleq	0, cr0, [lr, #-0]
    1698:	0d5c0000 	ldcleq	0, cr0, [ip, #-0]
    169c:	00000000 	andeq	r0, r0, r0
    16a0:	00033049 	andeq	r3, r3, r9, asr #32
    16a4:	0d230100 	stfeqs	f0, [r3, #-0]
    16a8:	0001dc01 	andeq	sp, r1, r1, lsl #24
    16ac:	0001de08 	andeq	sp, r1, r8, lsl #28
    16b0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    16b4:	0011be01 	andseq	fp, r1, r1, lsl #28
    16b8:	06ca3600 	strbeq	r3, [sl], r0, lsl #12
    16bc:	23010000 	movwcs	r0, #4096	@ 0x1000
    16c0:	0000412b 	andeq	r4, r0, fp, lsr #2
    16c4:	00500100 	subseq	r0, r0, r0, lsl #2
    16c8:	06e2014a 	strbteq	r0, [r2], sl, asr #2
    16cc:	21010000 	mrscs	r0, (UNDEF: 1)
    16d0:	120d011b 	andne	r0, sp, #-1073741818	@ 0xc0000006
    16d4:	01ea0000 	mvneq	r0, r0
    16d8:	01ee0800 	mvneq	r0, r0, lsl #16
    16dc:	7d020800 	stcvc	8, cr0, [r2, #-0]
    16e0:	120d0100 	andne	r0, sp, #0, 2
    16e4:	724b0000 	subvc	r0, fp, #0
    16e8:	01007165 	tsteq	r0, r5, ror #2
    16ec:	12143c21 	andsne	r3, r4, #8448	@ 0x2100
    16f0:	0d760000 	ldcleq	0, cr0, [r6, #-0]
    16f4:	0d720000 	ldcleq	0, cr0, [r2, #-0]
    16f8:	0c360000 	ldceq	0, cr0, [r6], #-0
    16fc:	01000004 	tsteq	r0, r4
    1700:	005e4a21 	subseq	r4, lr, r1, lsr #20
    1704:	51010000 	mrspl	r0, (UNDEF: 1)
    1708:	0006d036 	andeq	sp, r6, r6, lsr r0
    170c:	5b210100 	blpl	841b14 <__Stack_Size+0x840b14>
    1710:	0000005e 	andeq	r0, r0, lr, asr r0
    1714:	02005201 	andeq	r5, r0, #268435456	@ 0x10000000
    1718:	00ff0801 	rscseq	r0, pc, r1, lsl #16
    171c:	04070000 	streq	r0, [r7], #-0
    1720:	0000011b 	andeq	r0, r0, fp, lsl r1
    1724:	0576014a 	ldrbeq	r0, [r6, #-330]!	@ 0xfffffeb6
    1728:	20010000 	andcs	r0, r1, r0
    172c:	120d011b 	andne	r0, sp, #-1073741818	@ 0xc0000006
    1730:	01e60000 	mvneq	r0, r0
    1734:	01ea0800 	mvneq	r0, r0, lsl #16
    1738:	7d020800 	stcvc	8, cr0, [r2, #-0]
    173c:	12690100 	rsbne	r0, r9, #0, 2
    1740:	724b0000 	subvc	r0, fp, #0
    1744:	01007165 	tsteq	r0, r5, ror #2
    1748:	12143b20 	andsne	r3, r4, #32, 22	@ 0x8000
    174c:	0d9b0000 	ldceq	0, cr0, [fp]
    1750:	0d970000 	ldceq	0, cr0, [r7]
    1754:	7d360000 	ldcvc	0, cr0, [r6, #-0]
    1758:	01000008 	tsteq	r0, r8
    175c:	12694720 	rsbne	r4, r9, #32, 14	@ 0x800000
    1760:	51010000 	mrspl	r0, (UNDEF: 1)
    1764:	000cd036 	andeq	sp, ip, r6, lsr r0
    1768:	57200100 	strpl	r0, [r0, -r0, lsl #2]!
    176c:	00000921 	andeq	r0, r0, r1, lsr #18
    1770:	07005201 	streq	r5, [r0, -r1, lsl #4]
    1774:	000fd904 	andeq	sp, pc, r4, lsl #18
    1778:	e8014c00 	stmda	r1, {sl, fp, lr}
    177c:	01000002 	tsteq	r0, r2
    1780:	014c1b1f 	cmpeq	ip, pc, lsl fp
    1784:	000000bf 	strheq	r0, [r0], -pc	@ <UNPREDICTABLE>
    1788:	4c1b1e01 	ldcmi	14, cr1, [fp], {1}
    178c:	0004cf01 	andeq	ip, r4, r1, lsl #30
    1790:	1b1d0100 	blne	741b98 <__Stack_Size+0x740b98>
    1794:	0502014d 	streq	r0, [r2, #-333]	@ 0xfffffeb3
    1798:	1c010000 	stcne	0, cr0, [r1], {-0}
    179c:	804e011b 	subhi	r0, lr, fp, lsl r1
    17a0:	03000004 	movweq	r0, #4
    17a4:	9a0113c1 	bls	466b0 <__Stack_Size+0x456b0>
    17a8:	03000000 	movweq	r0, #0
    17ac:	000012bf 			@ <UNDEFINED> instruction: 0x000012bf
    17b0:	0006ca45 	andeq	ip, r6, r5, asr #20
    17b4:	27c10300 	strbcs	r0, [r1, r0, lsl #6]
    17b8:	00000041 	andeq	r0, r0, r1, asr #32
    17bc:	66756244 	ldrbtvs	r6, [r5], -r4, asr #4
    17c0:	38c10300 	stmiacc	r1, {r8, r9}^
    17c4:	00000921 	andeq	r0, r0, r1, lsr #18
    17c8:	03684300 	cmneq	r8, #0, 6
    17cc:	b4030000 	strlt	r0, [r3], #-0
    17d0:	f2030114 	vand	d0, d3, d4
    17d4:	45000012 	strmi	r0, [r0, #-18]	@ 0xffffffee
    17d8:	000006ca 	andeq	r0, r0, sl, asr #13
    17dc:	4129b403 			@ <UNDEFINED> instruction: 0x4129b403
    17e0:	44000000 	strmi	r0, [r0], #-0
    17e4:	00667562 	rsbeq	r7, r6, r2, ror #10
    17e8:	a740b403 	strbge	fp, [r0, -r3, lsl #8]
    17ec:	4500000a 	strmi	r0, [r0, #-10]
    17f0:	00000cd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    17f4:	5e4eb403 	cdppl	4, 4, cr11, cr14, cr3, {0}
    17f8:	00000000 	andeq	r0, r0, r0
    17fc:	0003884f 	andeq	r8, r3, pc, asr #16
    1800:	05de0200 	ldrbeq	r0, [lr, #512]	@ 0x200
    1804:	0f030116 	svceq	0x00030116
    1808:	50000013 	andpl	r0, r0, r3, lsl r0
    180c:	000002c9 	andeq	r0, r0, r9, asr #5
    1810:	2f05de02 	svccs	0x0005de02
    1814:	0000026e 	andeq	r0, r0, lr, ror #4
    1818:	128a5100 	addne	r5, sl, #0, 2
    181c:	01de0000 	bicseq	r0, lr, r0
    1820:	01e00800 	mvneq	r0, r0, lsl #16
    1824:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1828:	63000100 	movwvs	r0, #256	@ 0x100
    182c:	0200001a 	andeq	r0, r0, #26
    1830:	0006db00 	andeq	sp, r6, r0, lsl #22
    1834:	12010400 	andne	r0, r1, #0, 8
    1838:	0c000000 	stceq	0, cr0, [r0], {-0}
    183c:	0000089b 	muleq	r0, fp, r8
    1840:	00000158 	andeq	r0, r0, r8, asr r1
    1844:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
    1848:	08000fb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, fp}
    184c:	00000c7e 	andeq	r0, r0, lr, ror ip
    1850:	f8060102 			@ <UNDEFINED> instruction: 0xf8060102
    1854:	03000000 	movweq	r0, #0
    1858:	00000588 	andeq	r0, r0, r8, lsl #11
    185c:	3d182507 	cfldr32cc	mvfx2, [r8, #-28]	@ 0xffffffe4
    1860:	04000000 	streq	r0, [r0], #-0
    1864:	0000002c 	andeq	r0, r0, ip, lsr #32
    1868:	b9050202 	stmdblt	r5, {r1, r9}
    186c:	03000001 	movweq	r0, #1
    1870:	000001d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1874:	50182807 	andspl	r2, r8, r7, lsl #16
    1878:	02000000 	andeq	r0, r0, #0
    187c:	01a50504 			@ <UNDEFINED> instruction: 0x01a50504
    1880:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
    1884:	0001a005 	andeq	sl, r1, r5
    1888:	04a90300 	strteq	r0, [r9], #768	@ 0x300
    188c:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    1890:	00007418 	andeq	r7, r0, r8, lsl r4
    1894:	005e0400 	subseq	r0, lr, r0, lsl #8
    1898:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    189c:	02000000 	andeq	r0, r0, #0
    18a0:	00f60801 	rscseq	r0, r6, r1, lsl #16
    18a4:	87030000 	strhi	r0, [r3, -r0]
    18a8:	07000005 	streq	r0, [r0, -r5]
    18ac:	00911931 	addseq	r1, r1, r1, lsr r9
    18b0:	7b040000 	blvc	1018b8 <__Stack_Size+0x1008b8>
    18b4:	05000000 	streq	r0, [r0, #-0]
    18b8:	0000007b 	andeq	r0, r0, fp, ror r0
    18bc:	ce070202 	cdpgt	2, 0, cr0, cr7, cr2, {0}
    18c0:	03000000 	movweq	r0, #0
    18c4:	000001cf 	andeq	r0, r0, pc, asr #3
    18c8:	a9193407 	ldmdbge	r9, {r0, r1, r2, sl, ip, sp}
    18cc:	04000000 	streq	r0, [r0], #-0
    18d0:	00000098 	muleq	r0, r8, r0
    18d4:	36070402 	strcc	r0, [r7], -r2, lsl #8
    18d8:	02000001 	andeq	r0, r0, #1
    18dc:	01310708 	teqeq	r1, r8, lsl #14
    18e0:	04060000 	streq	r0, [r6], #-0
    18e4:	746e6905 	strbtvc	r6, [lr], #-2309	@ 0xfffff6fb
    18e8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    18ec:	0000013b 	andeq	r0, r0, fp, lsr r1
    18f0:	00051a03 	andeq	r1, r5, r3, lsl #20
    18f4:	0f1d0300 	svceq	0x001d0300
    18f8:	000000d1 	ldrdeq	r0, [r0], -r1
    18fc:	00d70407 	sbcseq	r0, r7, r7, lsl #8
    1900:	01080000 	mrseq	r0, (UNDEF: 8)
    1904:	000000e3 	andeq	r0, r0, r3, ror #1
    1908:	00005e09 	andeq	r5, r0, r9, lsl #28
    190c:	080a0000 	stmdaeq	sl, {}	@ <UNPREDICTABLE>
    1910:	38091e03 	stmdacc	r9, {r0, r1, r9, sl, fp, ip}
    1914:	0b000001 	bleq	1920 <__Stack_Size+0x920>
    1918:	00000269 	andeq	r0, r0, r9, ror #4
    191c:	5e0b1f03 	cdppl	15, 0, cr1, cr11, cr3, {0}
    1920:	02000000 	andeq	r0, r0, #0
    1924:	860b0023 	strhi	r0, [fp], -r3, lsr #32
    1928:	03000006 	movweq	r0, #6
    192c:	005e0b20 	subseq	r0, lr, r0, lsr #22
    1930:	23020000 	movwcs	r0, #8192	@ 0x2000
    1934:	02ff0b01 	rscseq	r0, pc, #1024	@ 0x400
    1938:	21030000 	mrscs	r0, (UNDEF: 3)
    193c:	00007b0c 	andeq	r7, r0, ip, lsl #22
    1940:	02230200 	eoreq	r0, r3, #0, 4
    1944:	0002050b 	andeq	r0, r2, fp, lsl #10
    1948:	0c220300 	stceq	3, cr0, [r2], #-0
    194c:	0000007b 	andeq	r0, r0, fp, ror r0
    1950:	0b042302 	bleq	10a560 <__Stack_Size+0x109560>
    1954:	0000065c 	andeq	r0, r0, ip, asr r6
    1958:	7b0c2303 	blvc	30a56c <__Stack_Size+0x30956c>
    195c:	02000000 	andeq	r0, r0, #0
    1960:	03000623 	movweq	r0, #1571	@ 0x623
    1964:	000006f9 	strdeq	r0, [r0], -r9
    1968:	e3022403 	movw	r2, #9219	@ 0x2403
    196c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1970:	00250105 	eoreq	r0, r5, r5, lsl #2
    1974:	58080000 	stmdapl	r8, {}	@ <UNPREDICTABLE>
    1978:	00028b01 	andeq	r8, r2, r1, lsl #22
    197c:	06480d00 	strbeq	r0, [r8], -r0, lsl #26
    1980:	0d720000 	ldcleq	0, cr0, [r2, #-0]
    1984:	000007da 	ldrdeq	r0, [r0], -sl
    1988:	03060d73 	movweq	r0, #28019	@ 0x6d73
    198c:	0d740000 	ldcleq	0, cr0, [r4, #-0]
    1990:	000004e9 	andeq	r0, r0, r9, ror #9
    1994:	07330d75 			@ <UNDEFINED> instruction: 0x07330d75
    1998:	0d760000 	ldcleq	0, cr0, [r6, #-0]
    199c:	0000077a 	andeq	r0, r0, sl, ror r7
    19a0:	07210d7b 			@ <UNDEFINED> instruction: 0x07210d7b
    19a4:	0d7c0000 	ldcleq	0, cr0, [ip, #-0]
    19a8:	000002dc 	ldrdeq	r0, [r0], -ip
    19ac:	06bd0d7e 			@ <UNDEFINED> instruction: 0x06bd0d7e
    19b0:	0e7f0000 	cdpeq	0, 7, cr0, cr15, cr0, {0}
    19b4:	000004c5 	andeq	r0, r0, r5, asr #9
    19b8:	05110e00 	ldreq	r0, [r1, #-3584]	@ 0xfffff200
    19bc:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    19c0:	00000825 	andeq	r0, r0, r5, lsr #16
    19c4:	05be0e02 	ldreq	r0, [lr, #3586]!	@ 0xe02
    19c8:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    19cc:	00000284 	andeq	r0, r0, r4, lsl #5
    19d0:	02f60e04 	rscseq	r0, r6, #4, 28	@ 0x40
    19d4:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    19d8:	00000299 	muleq	r0, r9, r2
    19dc:	067b0e06 	ldrbteq	r0, [fp], -r6, lsl #28
    19e0:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
    19e4:	00000442 	andeq	r0, r0, r2, asr #8
    19e8:	07c80e08 	strbeq	r0, [r8, r8, lsl #28]
    19ec:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
    19f0:	000004f7 	strdeq	r0, [r0], -r7
    19f4:	04960e0a 	ldreq	r0, [r6], #3594	@ 0xe0a
    19f8:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
    19fc:	0000024a 	andeq	r0, r0, sl, asr #4
    1a00:	053a0e0c 	ldreq	r0, [sl, #-3596]!	@ 0xfffff1f4
    1a04:	0e0d0000 	cdpeq	0, 0, cr0, cr13, cr0, {0}
    1a08:	00000375 	andeq	r0, r0, r5, ror r3
    1a0c:	07a60e0e 	streq	r0, [r6, lr, lsl #28]!
    1a10:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
    1a14:	0000046c 	andeq	r0, r0, ip, ror #8
    1a18:	02200e10 	eoreq	r0, r0, #16, 28	@ 0x100
    1a1c:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
    1a20:	00000803 	andeq	r0, r0, r3, lsl #16
    1a24:	03d90e12 	bicseq	r0, r9, #288	@ 0x120
    1a28:	0e130000 	cdpeq	0, 1, cr0, cr3, cr0, {0}
    1a2c:	000001f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1a30:	03a90e14 			@ <UNDEFINED> instruction: 0x03a90e14
    1a34:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
    1a38:	00000212 	andeq	r0, r0, r2, lsl r2
    1a3c:	076d0e16 			@ <UNDEFINED> instruction: 0x076d0e16
    1a40:	0e170000 	cdpeq	0, 1, cr0, cr7, cr0, {0}
    1a44:	00000346 	andeq	r0, r0, r6, asr #6
    1a48:	059d0e18 	ldreq	r0, [sp, #3608]	@ 0xe18
    1a4c:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    1a50:	0000069e 	muleq	r0, lr, r6
    1a54:	06640e1a 			@ <UNDEFINED> instruction: 0x06640e1a
    1a58:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    1a5c:	000006d8 	ldrdeq	r0, [r0], -r8
    1a60:	048c0e1c 	streq	r0, [ip], #3612	@ 0xe1c
    1a64:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
    1a68:	00000240 	andeq	r0, r0, r0, asr #4
    1a6c:	055b0e1e 	ldrbeq	r0, [fp, #-3614]	@ 0xfffff1e2
    1a70:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
    1a74:	000006b0 			@ <UNDEFINED> instruction: 0x000006b0
    1a78:	044d0e20 	strbeq	r0, [sp], #-3616	@ 0xfffff1e0
    1a7c:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
    1a80:	00000233 	andeq	r0, r0, r3, lsr r2
    1a84:	035d0e22 	cmpeq	sp, #544	@ 0x220
    1a88:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
    1a8c:	0000078b 	andeq	r0, r0, fp, lsl #15
    1a90:	06300e24 	ldrteq	r0, [r0], -r4, lsr #28
    1a94:	0e250000 	cdpeq	0, 2, cr0, cr5, cr0, {0}
    1a98:	00000400 	andeq	r0, r0, r0, lsl #8
    1a9c:	08190e26 	ldmdaeq	r9, {r1, r2, r5, r9, sl, fp}
    1aa0:	0e270000 	cdpeq	0, 2, cr0, cr7, cr0, {0}
    1aa4:	000002bf 			@ <UNDEFINED> instruction: 0x000002bf
    1aa8:	05af0e28 	streq	r0, [pc, #3624]!	@ 28d8 <__Stack_Size+0x18d8>
    1aac:	0e290000 	cdpeq	0, 2, cr0, cr9, cr0, {0}
    1ab0:	000004b6 			@ <UNDEFINED> instruction: 0x000004b6
    1ab4:	ed03002a 	stc	0, cr0, [r3, #-168]	@ 0xffffff58
    1ab8:	08000003 	stmdaeq	r0, {r0, r1}
    1abc:	01440390 			@ <UNDEFINED> instruction: 0x01440390
    1ac0:	040f0000 	streq	r0, [pc], #-0	@ 1ac8 <__Stack_Size+0xac8>
    1ac4:	0984060e 	stmibeq	r4, {r1, r2, r3, r9, sl}
    1ac8:	0000036f 	andeq	r0, r0, pc, ror #6
    1acc:	00032b0b 	andeq	r2, r3, fp, lsl #22
    1ad0:	11860600 	orrne	r0, r6, r0, lsl #12
    1ad4:	0000037f 	andeq	r0, r0, pc, ror r3
    1ad8:	0b002302 	bleq	a6e8 <__Stack_Size+0x96e8>
    1adc:	000005cc 	andeq	r0, r0, ip, asr #11
    1ae0:	84118706 	ldrhi	r8, [r1], #-1798	@ 0xfffff8fa
    1ae4:	02000003 	andeq	r0, r0, #3
    1ae8:	860b2023 	strhi	r2, [fp], -r3, lsr #32
    1aec:	06000007 	streq	r0, [r0], -r7
    1af0:	037f1188 	cmneq	pc, #136, 2	@ 0x22
    1af4:	23030000 	movwcs	r0, #12288	@ 0x3000
    1af8:	540b0180 	strpl	r0, [fp], #-384	@ 0xfffffe80
    1afc:	06000003 	streq	r0, [r0], -r3
    1b00:	03841189 	orreq	r1, r4, #1073741858	@ 0x40000022
    1b04:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b08:	e90b01a0 	stmdb	fp, {r5, r7, r8}
    1b0c:	06000007 	streq	r0, [r0], -r7
    1b10:	037f118a 	cmneq	pc, #-2147483614	@ 0x80000022
    1b14:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b18:	e00b0280 	and	r0, fp, r0, lsl #5
    1b1c:	06000005 	streq	r0, [r0], -r5
    1b20:	0384118b 	orreq	r1, r4, #-1073741790	@ 0xc0000022
    1b24:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b28:	300b02a0 	andcc	r0, fp, r0, lsr #5
    1b2c:	06000005 	streq	r0, [r0], -r5
    1b30:	037f118c 	cmneq	pc, #140, 2	@ 0x23
    1b34:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b38:	ea0b0380 	b	2c2940 <__Stack_Size+0x2c1940>
    1b3c:	06000005 	streq	r0, [r0], -r5
    1b40:	0384118d 	orreq	r1, r4, #1073741859	@ 0x40000023
    1b44:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b48:	950b03a0 	strls	r0, [fp, #-928]	@ 0xfffffc60
    1b4c:	06000007 	streq	r0, [r0], -r7
    1b50:	037f118e 	cmneq	pc, #-2147483613	@ 0x80000023
    1b54:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b58:	f40b0480 	vst3.32	{d0-d2}, [fp], r0
    1b5c:	06000005 	streq	r0, [r0], -r5
    1b60:	0394118f 	orrseq	r1, r4, #-1073741789	@ 0xc0000023
    1b64:	23030000 	movwcs	r0, #12288	@ 0x3000
    1b68:	491004a0 	ldmdbmi	r0, {r5, r7, sl}
    1b6c:	90060050 	andls	r0, r6, r0, asr r0
    1b70:	0003b411 	andeq	fp, r3, r1, lsl r4
    1b74:	80230300 	eorhi	r0, r3, r0, lsl #6
    1b78:	05fe0b06 	ldrbeq	r0, [lr, #2822]!	@ 0xb06
    1b7c:	91060000 	mrsls	r0, (UNDEF: 6)
    1b80:	0003b911 	andeq	fp, r3, r1, lsl r9
    1b84:	f0230300 			@ <UNDEFINED> instruction: 0xf0230300
    1b88:	05aa0b07 	streq	r0, [sl, #2823]!	@ 0xb07
    1b8c:	92060000 	andls	r0, r6, #0
    1b90:	0000a411 	andeq	sl, r0, r1, lsl r4
    1b94:	80230300 	eorhi	r0, r3, r0, lsl #6
    1b98:	a411001c 	ldrge	r0, [r1], #-28	@ 0xffffffe4
    1b9c:	7f000000 	svcvc	0x00000000
    1ba0:	12000003 	andne	r0, r0, #3
    1ba4:	000000be 	strheq	r0, [r0], -lr
    1ba8:	6f040007 	svcvs	0x00040007
    1bac:	11000003 	tstne	r0, r3
    1bb0:	00000098 	muleq	r0, r8, r0
    1bb4:	00000394 	muleq	r0, r4, r3
    1bb8:	0000be12 	andeq	fp, r0, r2, lsl lr
    1bbc:	11001700 	tstne	r0, r0, lsl #14
    1bc0:	00000098 	muleq	r0, r8, r0
    1bc4:	000003a4 	andeq	r0, r0, r4, lsr #7
    1bc8:	0000be12 	andeq	fp, r0, r2, lsl lr
    1bcc:	11003700 	tstne	r0, r0, lsl #14
    1bd0:	0000006a 	andeq	r0, r0, sl, rrx
    1bd4:	000003b4 			@ <UNDEFINED> instruction: 0x000003b4
    1bd8:	0000be12 	andeq	fp, r0, r2, lsl lr
    1bdc:	0400ef00 	streq	lr, [r0], #-3840	@ 0xfffff100
    1be0:	000003a4 	andeq	r0, r0, r4, lsr #7
    1be4:	00009811 	andeq	r9, r0, r1, lsl r8
    1be8:	0003ca00 	andeq	ip, r3, r0, lsl #20
    1bec:	00be1300 	adcseq	r1, lr, r0, lsl #6
    1bf0:	02830000 	addeq	r0, r3, #0
    1bf4:	068f0300 	streq	r0, [pc], r0, lsl #6
    1bf8:	93060000 	movwls	r0, #24576	@ 0x6000
    1bfc:	00029704 	andeq	r9, r2, r4, lsl #14
    1c00:	08500a00 	ldmdaeq	r0, {r9, fp}^
    1c04:	050a09a3 	streq	r0, [sl, #-2467]	@ 0xfffff65d
    1c08:	53100000 	tstpl	r0, #0
    1c0c:	a5080052 	strge	r0, [r8, #-82]	@ 0xffffffae
    1c10:	0000a411 	andeq	sl, r0, r1, lsl r4
    1c14:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c18:	31524310 	cmpcc	r2, r0, lsl r3
    1c1c:	11a60800 			@ <UNDEFINED> instruction: 0x11a60800
    1c20:	000000a4 	andeq	r0, r0, r4, lsr #1
    1c24:	10042302 	andne	r2, r4, r2, lsl #6
    1c28:	00325243 	eorseq	r5, r2, r3, asr #4
    1c2c:	a411a708 	ldrge	sl, [r1], #-1800	@ 0xfffff8f8
    1c30:	02000000 	andeq	r0, r0, #0
    1c34:	1f0b0823 	svcne	0x000b0823
    1c38:	0800000a 	stmdaeq	r0, {r1, r3}
    1c3c:	00a411a8 	adceq	r1, r4, r8, lsr #3
    1c40:	23020000 	movwcs	r0, #8192	@ 0x2000
    1c44:	0a250b0c 	beq	94487c <__Stack_Size+0x94387c>
    1c48:	a9080000 	stmdbge	r8, {}	@ <UNPREDICTABLE>
    1c4c:	0000a411 	andeq	sl, r0, r1, lsl r4
    1c50:	10230200 	eorne	r0, r3, r0, lsl #4
    1c54:	000b880b 	andeq	r8, fp, fp, lsl #16
    1c58:	11aa0800 			@ <UNDEFINED> instruction: 0x11aa0800
    1c5c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1c60:	0b142302 	bleq	50a870 <__Stack_Size+0x509870>
    1c64:	00000b8e 	andeq	r0, r0, lr, lsl #23
    1c68:	a411ab08 	ldrge	sl, [r1], #-2824	@ 0xfffff4f8
    1c6c:	02000000 	andeq	r0, r0, #0
    1c70:	940b1823 	strls	r1, [fp], #-2083	@ 0xfffff7dd
    1c74:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    1c78:	00a411ac 	adceq	r1, r4, ip, lsr #3
    1c7c:	23020000 	movwcs	r0, #8192	@ 0x2000
    1c80:	0b9a0b1c 	bleq	fe6848f8 <BootRAM+0xd5f5099>
    1c84:	ad080000 	stcge	0, cr0, [r8, #-0]
    1c88:	0000a411 	andeq	sl, r0, r1, lsl r4
    1c8c:	20230200 	eorcs	r0, r3, r0, lsl #4
    1c90:	52544810 	subspl	r4, r4, #16, 16	@ 0x100000
    1c94:	11ae0800 			@ <UNDEFINED> instruction: 0x11ae0800
    1c98:	000000a4 	andeq	r0, r0, r4, lsr #1
    1c9c:	10242302 	eorne	r2, r4, r2, lsl #6
    1ca0:	0052544c 	subseq	r5, r2, ip, asr #8
    1ca4:	a411af08 	ldrge	sl, [r1], #-3848	@ 0xfffff0f8
    1ca8:	02000000 	andeq	r0, r0, #0
    1cac:	4d0b2823 	stcmi	8, cr2, [fp, #-140]	@ 0xffffff74
    1cb0:	08000008 	stmdaeq	r0, {r3}
    1cb4:	00a411b0 	strhteq	r1, [r4], r0
    1cb8:	23020000 	movwcs	r0, #8192	@ 0x2000
    1cbc:	08520b2c 	ldmdaeq	r2, {r2, r3, r5, r8, r9, fp}^
    1cc0:	b1080000 	mrslt	r0, (UNDEF: 8)
    1cc4:	0000a411 	andeq	sl, r0, r1, lsl r4
    1cc8:	30230200 	eorcc	r0, r3, r0, lsl #4
    1ccc:	0008570b 	andeq	r5, r8, fp, lsl #14
    1cd0:	11b20800 			@ <UNDEFINED> instruction: 0x11b20800
    1cd4:	000000a4 	andeq	r0, r0, r4, lsr #1
    1cd8:	0b342302 	bleq	d0a8e8 <__Stack_Size+0xd098e8>
    1cdc:	00000a1a 	andeq	r0, r0, sl, lsl sl
    1ce0:	a411b308 	ldrge	fp, [r1], #-776	@ 0xfffffcf8
    1ce4:	02000000 	andeq	r0, r0, #0
    1ce8:	4b0b3823 	blmi	2cfd7c <__Stack_Size+0x2ced7c>
    1cec:	0800000a 	stmdaeq	r0, {r1, r3}
    1cf0:	00a411b4 	strhteq	r1, [r4], r4
    1cf4:	23020000 	movwcs	r0, #8192	@ 0x2000
    1cf8:	0a500b3c 	beq	14049f0 <__Stack_Size+0x14039f0>
    1cfc:	b5080000 	strlt	r0, [r8, #-0]
    1d00:	0000a411 	andeq	sl, r0, r1, lsl r4
    1d04:	40230200 	eormi	r0, r3, r0, lsl #4
    1d08:	000a550b 	andeq	r5, sl, fp, lsl #10
    1d0c:	11b60800 			@ <UNDEFINED> instruction: 0x11b60800
    1d10:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d14:	0b442302 	bleq	110a924 <__Stack_Size+0x1109924>
    1d18:	00000a5a 	andeq	r0, r0, sl, asr sl
    1d1c:	a411b708 	ldrge	fp, [r1], #-1800	@ 0xfffff8f8
    1d20:	02000000 	andeq	r0, r0, #0
    1d24:	44104823 	ldrmi	r4, [r0], #-2083	@ 0xfffff7dd
    1d28:	b8080052 	stmdalt	r8, {r1, r4, r6}
    1d2c:	0000a411 	andeq	sl, r0, r1, lsl r4
    1d30:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1d34:	09bd0300 	ldmibeq	sp!, {r8, r9}
    1d38:	b9080000 	stmdblt	r8, {}	@ <UNPREDICTABLE>
    1d3c:	0003d603 	andeq	sp, r3, r3, lsl #12
    1d40:	081c1400 	ldmdaeq	ip, {sl, ip}
    1d44:	91090179 	tstls	r9, r9, ror r1
    1d48:	15000005 	strne	r0, [r0, #-5]
    1d4c:	004c5243 	subeq	r5, ip, r3, asr #4
    1d50:	11017b08 	tstne	r1, r8, lsl #22
    1d54:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d58:	15002302 	strne	r2, [r0, #-770]	@ 0xfffffcfe
    1d5c:	00485243 	subeq	r5, r8, r3, asr #4
    1d60:	11017c08 	tstne	r1, r8, lsl #24
    1d64:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d68:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    1d6c:	00524449 	subseq	r4, r2, r9, asr #8
    1d70:	11017d08 	tstne	r1, r8, lsl #26
    1d74:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d78:	15082302 	strne	r2, [r8, #-770]	@ 0xfffffcfe
    1d7c:	0052444f 	subseq	r4, r2, pc, asr #8
    1d80:	11017e08 	tstne	r1, r8, lsl #28
    1d84:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d88:	160c2302 	strne	r2, [ip], -r2, lsl #6
    1d8c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1d90:	11017f08 	tstne	r1, r8, lsl #30
    1d94:	000000a4 	andeq	r0, r0, r4, lsr #1
    1d98:	15102302 	ldrne	r2, [r0, #-770]	@ 0xfffffcfe
    1d9c:	00525242 	subseq	r5, r2, r2, asr #4
    1da0:	11018008 	tstne	r1, r8
    1da4:	000000a4 	andeq	r0, r0, r4, lsr #1
    1da8:	16142302 	ldrne	r2, [r4], -r2, lsl #6
    1dac:	000001eb 	andeq	r0, r0, fp, ror #3
    1db0:	11018108 	tstne	r1, r8, lsl #2
    1db4:	000000a4 	andeq	r0, r0, r4, lsr #1
    1db8:	00182302 	andseq	r2, r8, r2, lsl #6
    1dbc:	0000b217 	andeq	fp, r0, r7, lsl r2
    1dc0:	01820800 	orreq	r0, r2, r0, lsl #16
    1dc4:	00051603 	andeq	r1, r5, r3, lsl #12
    1dc8:	08201400 	stmdaeq	r0!, {sl, ip}
    1dcc:	f9090188 			@ <UNDEFINED> instruction: 0xf9090188
    1dd0:	16000005 	strne	r0, [r0], -r5
    1dd4:	00000bb9 			@ <UNDEFINED> instruction: 0x00000bb9
    1dd8:	11018a08 	tstne	r1, r8, lsl #20
    1ddc:	000000a4 	andeq	r0, r0, r4, lsr #1
    1de0:	16002302 	strne	r2, [r0], -r2, lsl #6
    1de4:	00000882 	andeq	r0, r0, r2, lsl #17
    1de8:	11018b08 	tstne	r1, r8, lsl #22
    1dec:	000000a4 	andeq	r0, r0, r4, lsr #1
    1df0:	16042302 	strne	r2, [r4], -r2, lsl #6
    1df4:	0000099c 	muleq	r0, ip, r9
    1df8:	11018c08 	tstne	r1, r8, lsl #24
    1dfc:	00000609 	andeq	r0, r0, r9, lsl #12
    1e00:	16082302 	strne	r2, [r8], -r2, lsl #6
    1e04:	000005cc 	andeq	r0, r0, ip, asr #11
    1e08:	0c018d08 	stceq	13, cr8, [r1], {8}
    1e0c:	00000098 	muleq	r0, r8, r0
    1e10:	16182302 	ldrne	r2, [r8], -r2, lsl #6
    1e14:	00000abd 			@ <UNDEFINED> instruction: 0x00000abd
    1e18:	11018e08 	tstne	r1, r8, lsl #28
    1e1c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e20:	001c2302 	andseq	r2, ip, r2, lsl #6
    1e24:	0000a411 	andeq	sl, r0, r1, lsl r4
    1e28:	00060900 	andeq	r0, r6, r0, lsl #18
    1e2c:	00be1200 	adcseq	r1, lr, r0, lsl #4
    1e30:	00030000 	andeq	r0, r3, r0
    1e34:	0005f904 	andeq	pc, r5, r4, lsl #18
    1e38:	09651700 	stmdbeq	r5!, {r8, r9, sl, ip}^
    1e3c:	8f080000 	svchi	0x00080000
    1e40:	059e0301 	ldreq	r0, [lr, #769]	@ 0x301
    1e44:	28140000 	ldmdacs	r4, {}	@ <UNPREDICTABLE>
    1e48:	0901bb08 	stmdbeq	r1, {r3, r8, r9, fp, ip, sp, pc}
    1e4c:	000006c5 	andeq	r0, r0, r5, asr #13
    1e50:	00524315 	subseq	r4, r2, r5, lsl r3
    1e54:	1101bd08 	tstne	r1, r8, lsl #26
    1e58:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e5c:	16002302 	strne	r2, [r0], -r2, lsl #6
    1e60:	0000000d 	andeq	r0, r0, sp
    1e64:	1101be08 	tstne	r1, r8, lsl #28
    1e68:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e6c:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    1e70:	00524943 	subseq	r4, r2, r3, asr #18
    1e74:	1101bf08 	tstne	r1, r8, lsl #30
    1e78:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e7c:	16082302 	strne	r2, [r8], -r2, lsl #6
    1e80:	00000123 	andeq	r0, r0, r3, lsr #2
    1e84:	1101c008 	tstne	r1, r8
    1e88:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e8c:	160c2302 	strne	r2, [ip], -r2, lsl #6
    1e90:	0000010d 	andeq	r0, r0, sp, lsl #2
    1e94:	1101c108 	tstne	r1, r8, lsl #2
    1e98:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e9c:	16102302 	ldrne	r2, [r0], -r2, lsl #6
    1ea0:	00000090 	muleq	r0, r0, r0
    1ea4:	1101c208 	tstne	r1, r8, lsl #4
    1ea8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1eac:	16142302 	ldrne	r2, [r4], -r2, lsl #6
    1eb0:	00000000 	andeq	r0, r0, r0
    1eb4:	1101c308 	tstne	r1, r8, lsl #6
    1eb8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1ebc:	16182302 	ldrne	r2, [r8], -r2, lsl #6
    1ec0:	0000011b 	andeq	r0, r0, fp, lsl r1
    1ec4:	1101c408 	tstne	r1, r8, lsl #8
    1ec8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1ecc:	161c2302 	ldrne	r2, [ip], -r2, lsl #6
    1ed0:	00000008 	andeq	r0, r0, r8
    1ed4:	1101c508 	tstne	r1, r8, lsl #10
    1ed8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1edc:	15202302 	strne	r2, [r0, #-770]!	@ 0xfffffcfe
    1ee0:	00525343 	subseq	r5, r2, r3, asr #6
    1ee4:	1101c608 	tstne	r1, r8, lsl #12
    1ee8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1eec:	00242302 	eoreq	r2, r4, r2, lsl #6
    1ef0:	0001c317 	andeq	ip, r1, r7, lsl r3
    1ef4:	01c90800 	biceq	r0, r9, r0, lsl #16
    1ef8:	00061b03 	andeq	r1, r6, r3, lsl #22
    1efc:	08541400 	ldmdaeq	r4, {sl, ip}^
    1f00:	2b09020c 	blcs	242738 <__Stack_Size+0x241738>
    1f04:	15000008 	strne	r0, [r0, #-8]
    1f08:	00315243 	eorseq	r5, r1, r3, asr #4
    1f0c:	11020e08 	tstne	r2, r8, lsl #28
    1f10:	000000a4 	andeq	r0, r0, r4, lsr #1
    1f14:	15002302 	strne	r2, [r0, #-770]	@ 0xfffffcfe
    1f18:	00325243 	eorseq	r5, r2, r3, asr #4
    1f1c:	11020f08 	tstne	r2, r8, lsl #30
    1f20:	000000a4 	andeq	r0, r0, r4, lsr #1
    1f24:	16042302 	strne	r2, [r4], -r2, lsl #6
    1f28:	000009a8 	andeq	r0, r0, r8, lsr #19
    1f2c:	11021008 	tstne	r2, r8
    1f30:	000000a4 	andeq	r0, r0, r4, lsr #1
    1f34:	16082302 	strne	r2, [r8], -r2, lsl #6
    1f38:	0000092d 	andeq	r0, r0, sp, lsr #18
    1f3c:	11021108 	tstne	r2, r8, lsl #2
    1f40:	000000a4 	andeq	r0, r0, r4, lsr #1
    1f44:	150c2302 	strne	r2, [ip, #-770]	@ 0xfffffcfe
    1f48:	08005253 	stmdaeq	r0, {r0, r1, r4, r6, r9, ip, lr}
    1f4c:	a4110212 	ldrge	r0, [r1], #-530	@ 0xfffffdee
    1f50:	02000000 	andeq	r0, r0, #0
    1f54:	45151023 	ldrmi	r1, [r5, #-35]	@ 0xffffffdd
    1f58:	08005247 	stmdaeq	r0, {r0, r1, r2, r6, r9, ip, lr}
    1f5c:	a4110213 	ldrge	r0, [r1], #-531	@ 0xfffffded
    1f60:	02000000 	andeq	r0, r0, #0
    1f64:	e5161423 	ldr	r1, [r6, #-1059]	@ 0xfffffbdd
    1f68:	08000008 	stmdaeq	r0, {r3}
    1f6c:	a4110214 	ldrge	r0, [r1], #-532	@ 0xfffffdec
    1f70:	02000000 	andeq	r0, r0, #0
    1f74:	eb161823 	bl	588008 <__Stack_Size+0x587008>
    1f78:	08000008 	stmdaeq	r0, {r3}
    1f7c:	a4110215 	ldrge	r0, [r1], #-533	@ 0xfffffdeb
    1f80:	02000000 	andeq	r0, r0, #0
    1f84:	60161c23 	andsvs	r1, r6, r3, lsr #24
    1f88:	08000009 	stmdaeq	r0, {r0, r3}
    1f8c:	a4110216 	ldrge	r0, [r1], #-534	@ 0xfffffdea
    1f90:	02000000 	andeq	r0, r0, #0
    1f94:	43152023 	tstmi	r5, #35	@ 0x23
    1f98:	0800544e 	stmdaeq	r0, {r1, r2, r3, r6, sl, ip, lr}
    1f9c:	a4110217 	ldrge	r0, [r1], #-535	@ 0xfffffde9
    1fa0:	02000000 	andeq	r0, r0, #0
    1fa4:	50152423 	andspl	r2, r5, r3, lsr #8
    1fa8:	08004353 	stmdaeq	r0, {r0, r1, r4, r6, r8, r9, lr}
    1fac:	a4110218 	ldrge	r0, [r1], #-536	@ 0xfffffde8
    1fb0:	02000000 	andeq	r0, r0, #0
    1fb4:	41152823 	tstmi	r5, r3, lsr #16
    1fb8:	08005252 	stmdaeq	r0, {r1, r4, r6, r9, ip, lr}
    1fbc:	a4110219 	ldrge	r0, [r1], #-537	@ 0xfffffde7
    1fc0:	02000000 	andeq	r0, r0, #0
    1fc4:	52152c23 	andspl	r2, r5, #8960	@ 0x2300
    1fc8:	08005243 	stmdaeq	r0, {r0, r1, r6, r9, ip, lr}
    1fcc:	a411021a 	ldrge	r0, [r1], #-538	@ 0xfffffde6
    1fd0:	02000000 	andeq	r0, r0, #0
    1fd4:	d6163023 	ldrle	r3, [r6], -r3, lsr #32
    1fd8:	08000008 	stmdaeq	r0, {r3}
    1fdc:	a411021b 	ldrge	r0, [r1], #-539	@ 0xfffffde5
    1fe0:	02000000 	andeq	r0, r0, #0
    1fe4:	db163423 	blle	58f078 <__Stack_Size+0x58e078>
    1fe8:	08000008 	stmdaeq	r0, {r3}
    1fec:	a411021c 	ldrge	r0, [r1], #-540	@ 0xfffffde4
    1ff0:	02000000 	andeq	r0, r0, #0
    1ff4:	e0163823 	ands	r3, r6, r3, lsr #16
    1ff8:	08000008 	stmdaeq	r0, {r3}
    1ffc:	a411021d 	ldrge	r0, [r1], #-541	@ 0xfffffde3
    2000:	02000000 	andeq	r0, r0, #0
    2004:	a3163c23 	tstge	r6, #8960	@ 0x2300
    2008:	08000009 	stmdaeq	r0, {r0, r3}
    200c:	a411021e 	ldrge	r0, [r1], #-542	@ 0xfffffde2
    2010:	02000000 	andeq	r0, r0, #0
    2014:	d1164023 	tstle	r6, r3, lsr #32
    2018:	08000008 	stmdaeq	r0, {r3}
    201c:	a411021f 	ldrge	r0, [r1], #-543	@ 0xfffffde1
    2020:	02000000 	andeq	r0, r0, #0
    2024:	44154423 	ldrmi	r4, [r5], #-1059	@ 0xfffffbdd
    2028:	08005243 	stmdaeq	r0, {r0, r1, r6, r9, ip, lr}
    202c:	a4110220 	ldrge	r0, [r1], #-544	@ 0xfffffde0
    2030:	02000000 	andeq	r0, r0, #0
    2034:	5f164823 	svcpl	0x00164823
    2038:	0800000a 	stmdaeq	r0, {r1, r3}
    203c:	a4110221 	ldrge	r0, [r1], #-545	@ 0xfffffddf
    2040:	02000000 	andeq	r0, r0, #0
    2044:	4f154c23 	svcmi	0x00154c23
    2048:	22080052 	andcs	r0, r8, #82	@ 0x52
    204c:	00a41102 	adceq	r1, r4, r2, lsl #2
    2050:	23020000 	movwcs	r0, #8192	@ 0x2000
    2054:	c5170050 	ldrgt	r0, [r7, #-80]	@ 0xffffffb0
    2058:	08000008 	stmdaeq	r0, {r3}
    205c:	d2020223 	andle	r0, r2, #805306370	@ 0x30000002
    2060:	14000006 	strne	r0, [r0], #-6
    2064:	02390854 	eorseq	r0, r9, #84, 16	@ 0x540000
    2068:	0009e309 	andeq	lr, r9, r9, lsl #6
    206c:	04211600 	strteq	r1, [r1], #-1536	@ 0xfffffa00
    2070:	3b080000 	blcc	202078 <__Stack_Size+0x201078>
    2074:	00871102 	addeq	r1, r7, r2, lsl #2
    2078:	23020000 	movwcs	r0, #8192	@ 0x2000
    207c:	05cc1600 	strbeq	r1, [ip, #1536]	@ 0x600
    2080:	3c080000 	stccc	0, cr0, [r8], {-0}
    2084:	00871102 	addeq	r1, r7, r2, lsl #2
    2088:	23020000 	movwcs	r0, #8192	@ 0x2000
    208c:	045a1602 	ldrbeq	r1, [sl], #-1538	@ 0xfffff9fe
    2090:	3d080000 	stccc	0, cr0, [r8, #-0]
    2094:	00871102 	addeq	r1, r7, r2, lsl #2
    2098:	23020000 	movwcs	r0, #8192	@ 0x2000
    209c:	05d61604 	ldrbeq	r1, [r6, #1540]	@ 0x604
    20a0:	3e080000 	cdpcc	0, 0, cr0, cr8, cr0, {0}
    20a4:	00871102 	addeq	r1, r7, r2, lsl #2
    20a8:	23020000 	movwcs	r0, #8192	@ 0x2000
    20ac:	04b11606 	ldrteq	r1, [r1], #1542	@ 0x606
    20b0:	3f080000 	svccc	0x00080000
    20b4:	00871102 	addeq	r1, r7, r2, lsl #2
    20b8:	23020000 	movwcs	r0, #8192	@ 0x2000
    20bc:	05e01608 	strbeq	r1, [r0, #1544]!	@ 0x608
    20c0:	40080000 	andmi	r0, r8, r0
    20c4:	00871102 	addeq	r1, r7, r2, lsl #2
    20c8:	23020000 	movwcs	r0, #8192	@ 0x2000
    20cc:	04e4160a 	strbteq	r1, [r4], #1546	@ 0x60a
    20d0:	41080000 	mrsmi	r0, (UNDEF: 8)
    20d4:	00871102 	addeq	r1, r7, r2, lsl #2
    20d8:	23020000 	movwcs	r0, #8192	@ 0x2000
    20dc:	05ea160c 	strbeq	r1, [sl, #1548]!	@ 0x60c
    20e0:	42080000 	andmi	r0, r8, #0
    20e4:	00871102 	addeq	r1, r7, r2, lsl #2
    20e8:	23020000 	movwcs	r0, #8192	@ 0x2000
    20ec:	0535160e 	ldreq	r1, [r5, #-1550]!	@ 0xfffff9f2
    20f0:	43080000 	movwmi	r0, #32768	@ 0x8000
    20f4:	00871102 	addeq	r1, r7, r2, lsl #2
    20f8:	23020000 	movwcs	r0, #8192	@ 0x2000
    20fc:	05f41610 	ldrbeq	r1, [r4, #1552]!	@ 0x610
    2100:	44080000 	strmi	r0, [r8], #-0
    2104:	00871102 	addeq	r1, r7, r2, lsl #2
    2108:	23020000 	movwcs	r0, #8192	@ 0x2000
    210c:	05c71612 	strbeq	r1, [r7, #1554]	@ 0x612
    2110:	45080000 	strmi	r0, [r8, #-0]
    2114:	00871102 	addeq	r1, r7, r2, lsl #2
    2118:	23020000 	movwcs	r0, #8192	@ 0x2000
    211c:	05fe1614 	ldrbeq	r1, [lr, #1556]!	@ 0x614
    2120:	46080000 	strmi	r0, [r8], -r0
    2124:	00871102 	addeq	r1, r7, r2, lsl #2
    2128:	23020000 	movwcs	r0, #8192	@ 0x2000
    212c:	06711616 			@ <UNDEFINED> instruction: 0x06711616
    2130:	47080000 	strmi	r0, [r8, -r0]
    2134:	00871102 	addeq	r1, r7, r2, lsl #2
    2138:	23020000 	movwcs	r0, #8192	@ 0x2000
    213c:	06081618 			@ <UNDEFINED> instruction: 0x06081618
    2140:	48080000 	stmdami	r8, {}	@ <UNPREDICTABLE>
    2144:	00871102 	addeq	r1, r7, r2, lsl #2
    2148:	23020000 	movwcs	r0, #8192	@ 0x2000
    214c:	06f4161a 	usateq	r1, #20, sl, lsl #12
    2150:	49080000 	stmdbmi	r8, {}	@ <UNPREDICTABLE>
    2154:	00871102 	addeq	r1, r7, r2, lsl #2
    2158:	23020000 	movwcs	r0, #8192	@ 0x2000
    215c:	080f161c 	stmdaeq	pc, {r2, r3, r4, r9, sl, ip}	@ <UNPREDICTABLE>
    2160:	4a080000 	bmi	202168 <__Stack_Size+0x201168>
    2164:	09f31102 	ldmibeq	r3!, {r1, r8, ip}^
    2168:	23020000 	movwcs	r0, #8192	@ 0x2000
    216c:	0699161e 			@ <UNDEFINED> instruction: 0x0699161e
    2170:	4b080000 	blmi	202178 <__Stack_Size+0x201178>
    2174:	00871102 	addeq	r1, r7, r2, lsl #2
    2178:	23020000 	movwcs	r0, #8192	@ 0x2000
    217c:	06121640 	ldreq	r1, [r2], -r0, asr #12
    2180:	4c080000 	stcmi	0, cr0, [r8], {-0}
    2184:	00871102 	addeq	r1, r7, r2, lsl #2
    2188:	23020000 	movwcs	r0, #8192	@ 0x2000
    218c:	03261642 			@ <UNDEFINED> instruction: 0x03261642
    2190:	4d080000 	stcmi	0, cr0, [r8, #-0]
    2194:	00871102 	addeq	r1, r7, r2, lsl #2
    2198:	23020000 	movwcs	r0, #8192	@ 0x2000
    219c:	061c1644 	ldreq	r1, [ip], -r4, asr #12
    21a0:	4e080000 	cdpmi	0, 0, cr0, cr8, cr0, {0}
    21a4:	00871102 	addeq	r1, r7, r2, lsl #2
    21a8:	23020000 	movwcs	r0, #8192	@ 0x2000
    21ac:	4e461546 	cdpmi	5, 4, cr1, cr6, cr6, {2}
    21b0:	4f080052 	svcmi	0x00080052
    21b4:	00871102 	addeq	r1, r7, r2, lsl #2
    21b8:	23020000 	movwcs	r0, #8192	@ 0x2000
    21bc:	06261648 	strteq	r1, [r6], -r8, asr #12
    21c0:	50080000 	andpl	r0, r8, r0
    21c4:	00871102 	addeq	r1, r7, r2, lsl #2
    21c8:	23020000 	movwcs	r0, #8192	@ 0x2000
    21cc:	03a3164a 			@ <UNDEFINED> instruction: 0x03a3164a
    21d0:	51080000 	mrspl	r0, (UNDEF: 8)
    21d4:	00871102 	addeq	r1, r7, r2, lsl #2
    21d8:	23020000 	movwcs	r0, #8192	@ 0x2000
    21dc:	03b7164c 			@ <UNDEFINED> instruction: 0x03b7164c
    21e0:	52080000 	andpl	r0, r8, #0
    21e4:	00871102 	addeq	r1, r7, r2, lsl #2
    21e8:	23020000 	movwcs	r0, #8192	@ 0x2000
    21ec:	07b9164e 	ldreq	r1, [r9, lr, asr #12]!
    21f0:	53080000 	movwpl	r0, #32768	@ 0x8000
    21f4:	00871102 	addeq	r1, r7, r2, lsl #2
    21f8:	23020000 	movwcs	r0, #8192	@ 0x2000
    21fc:	08311650 	ldmdaeq	r1!, {r4, r6, r9, sl, ip}
    2200:	54080000 	strpl	r0, [r8], #-0
    2204:	00871102 	addeq	r1, r7, r2, lsl #2
    2208:	23020000 	movwcs	r0, #8192	@ 0x2000
    220c:	87110052 			@ <UNDEFINED> instruction: 0x87110052
    2210:	f3000000 	vhadd.u8	d0, d0, d0
    2214:	12000009 	andne	r0, r0, #9
    2218:	000000be 	strheq	r0, [r0], -lr
    221c:	e3040010 	movw	r0, #16400	@ 0x4010
    2220:	17000009 	strne	r0, [r0, -r9]
    2224:	00000397 	muleq	r0, r7, r3
    2228:	03025508 	movweq	r5, #9480	@ 0x2508
    222c:	00000838 	andeq	r0, r0, r8, lsr r8
    2230:	2b040802 	blcs	104240 <__Stack_Size+0x103240>
    2234:	1800000a 	stmdane	r0, {r1, r3}
    2238:	08010204 	stmdaeq	r1, {r2, r9}
    223c:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
    2240:	000a7319 	andeq	r7, sl, r9, lsl r3
    2244:	130c0200 	movwne	r0, #49664	@ 0xc200
    2248:	00000087 	andeq	r0, r0, r7, lsl #1
    224c:	d0030501 	andle	r0, r3, r1, lsl #10
    2250:	11200000 			@ <UNDEFINED> instruction: 0x11200000
    2254:	00000038 	andeq	r0, r0, r8, lsr r0
    2258:	00000a38 	andeq	r0, r0, r8, lsr sl
    225c:	0000be12 	andeq	fp, r0, r2, lsl lr
    2260:	04002b00 	streq	r2, [r0], #-2816	@ 0xfffff500
    2264:	00000a28 	andeq	r0, r0, r8, lsr #20
    2268:	0009c919 	andeq	ip, r9, r9, lsl r9
    226c:	120d0200 	andne	r0, sp, #0, 4
    2270:	00000a38 	andeq	r0, r0, r8, lsr sl
    2274:	72030501 	andvc	r0, r3, #4194304	@ 0x400000
    2278:	19200000 	stmdbne	r0!, {}	@ <UNPREDICTABLE>
    227c:	00000906 	andeq	r0, r0, r6, lsl #18
    2280:	87130e02 	ldrhi	r0, [r3, -r2, lsl #28]
    2284:	01000000 	mrseq	r0, (UNDEF: 0)
    2288:	00ce0305 	sbceq	r0, lr, r5, lsl #6
    228c:	ce192000 	cdpgt	0, 1, cr2, cr9, cr0, {0}
    2290:	0200000a 	andeq	r0, r0, #10
    2294:	006a1210 	rsbeq	r1, sl, r0, lsl r2
    2298:	05010000 	streq	r0, [r1, #-0]
    229c:	00007003 	andeq	r7, r0, r3
    22a0:	090f1a20 	stmdbeq	pc, {r5, r9, fp, ip}	@ <UNPREDICTABLE>
    22a4:	05050000 	streq	r0, [r5, #-0]
    22a8:	0000a41a 	andeq	sl, r0, sl, lsl r4
    22ac:	19010100 	stmdbne	r1, {r8}
    22b0:	0000085c 	andeq	r0, r0, ip, asr r8
    22b4:	6a125d02 	bvs	4996c4 <__Stack_Size+0x4986c4>
    22b8:	01000000 	mrseq	r0, (UNDEF: 0)
    22bc:	00d20305 	sbcseq	r0, r2, r5, lsl #6
    22c0:	6f192000 	svcvs	0x00192000
    22c4:	02000008 	andeq	r0, r0, #8
    22c8:	0087135e 	addeq	r1, r7, lr, asr r3
    22cc:	05010000 	streq	r0, [r1, #-0]
    22d0:	0000d403 	andeq	sp, r0, r3, lsl #8
    22d4:	0aeb1b20 	beq	ffac8f5c <BootRAM+0xea396fd>
    22d8:	04020000 	streq	r0, [r2], #-0
    22dc:	0ac71909 	beq	ff1c8708 <BootRAM+0xe138ea9>
    22e0:	7d0b0000 	stcvc	0, cr0, [fp, #-0]
    22e4:	04000008 	streq	r0, [r0], #-8
    22e8:	007b0c0a 	rsbseq	r0, fp, sl, lsl #24
    22ec:	23020000 	movwcs	r0, #8192	@ 0x2000
    22f0:	aa040000 	bge	1022f8 <__Stack_Size+0x1012f8>
    22f4:	0300000a 	movweq	r0, #10
    22f8:	00000af6 	strdeq	r0, [r0], -r6
    22fc:	c7020b04 	strgt	r0, [r2, -r4, lsl #22]
    2300:	1900000a 	stmdbne	r0, {r1, r3}
    2304:	00000879 	andeq	r0, r0, r9, ror r8
    2308:	cc0c0c04 	stcgt	12, cr0, [ip], {4}
    230c:	0100000a 	tsteq	r0, sl
    2310:	00d80305 	sbcseq	r0, r8, r5, lsl #6
    2314:	f11c2000 			@ <UNDEFINED> instruction: 0xf11c2000
    2318:	04000008 	streq	r0, [r0], #-8
    231c:	00a41a0f 	adceq	r1, r4, pc, lsl #20
    2320:	03050000 	movweq	r0, #20480	@ 0x5000
    2324:	200000dc 	ldrdcs	r0, [r0], -ip
    2328:	00006f11 	andeq	r6, r0, r1, lsl pc
    232c:	000b0d00 	andeq	r0, fp, r0, lsl #26
    2330:	00be1200 	adcseq	r1, lr, r0, lsl #4
    2334:	00140000 	andseq	r0, r4, r0
    2338:	000afd05 	andeq	pc, sl, r5, lsl #26
    233c:	083b1c00 	ldmdaeq	fp!, {sl, fp, ip}
    2340:	11040000 	mrsne	r0, (UNDEF: 4)
    2344:	000b0d16 	andeq	r0, fp, r6, lsl sp
    2348:	12030500 	andne	r0, r3, #0, 10
    234c:	1b080016 	blne	2023ac <__Stack_Size+0x2013ac>
    2350:	00000a96 	muleq	r0, r6, sl
    2354:	01100104 	tsteq	r0, r4, lsl #2
    2358:	00000b5f 	andeq	r0, r0, pc, asr fp
    235c:	000bb10b 	andeq	fp, fp, fp, lsl #2
    2360:	01100100 	tsteq	r0, r0, lsl #2
    2364:	0000005e 	andeq	r0, r0, lr, asr r0
    2368:	0b002302 	bleq	af78 <__Stack_Size+0x9f78>
    236c:	00000b16 	andeq	r0, r0, r6, lsl fp
    2370:	5e011001 	cdppl	0, 0, cr1, cr1, cr1, {0}
    2374:	02000000 	andeq	r0, r0, #0
    2378:	640b0123 	strvs	r0, [fp], #-291	@ 0xfffffedd
    237c:	0100000a 	tsteq	r0, sl
    2380:	0b640110 	bleq	19027c8 <__Stack_Size+0x19017c8>
    2384:	23020000 	movwcs	r0, #8192	@ 0x2000
    2388:	24050002 	strcs	r0, [r5], #-2
    238c:	1100000b 	tstne	r0, fp
    2390:	0000007b 	andeq	r0, r0, fp, ror r0
    2394:	00000b74 	andeq	r0, r0, r4, ror fp
    2398:	0000be12 	andeq	fp, r0, r2, lsl lr
    239c:	1d000000 	stcne	0, cr0, [r0, #-0]
    23a0:	00000a96 	muleq	r0, r6, sl
    23a4:	5f011001 	svcpl	0x00011001
    23a8:	0200000b 	andeq	r0, r0, #11
    23ac:	16280305 	strtne	r0, [r8], -r5, lsl #6
    23b0:	261b0800 	ldrcs	r0, [fp], -r0, lsl #16
    23b4:	1600000b 	strne	r0, [r0], -fp
    23b8:	c2011101 	andgt	r1, r1, #1073741824	@ 0x40000000
    23bc:	0b00000b 	bleq	23f0 <__Stack_Size+0x13f0>
    23c0:	00000bb1 			@ <UNDEFINED> instruction: 0x00000bb1
    23c4:	5e011101 	adfpls	f1, f1, f1
    23c8:	02000000 	andeq	r0, r0, #0
    23cc:	160b0023 	strne	r0, [fp], -r3, lsr #32
    23d0:	0100000b 	tsteq	r0, fp
    23d4:	005e0111 	subseq	r0, lr, r1, lsl r1
    23d8:	23020000 	movwcs	r0, #8192	@ 0x2000
    23dc:	0a640b01 	beq	1904fe8 <__Stack_Size+0x1903fe8>
    23e0:	11010000 	mrsne	r0, (UNDEF: 1)
    23e4:	000bc701 	andeq	ip, fp, r1, lsl #14
    23e8:	02230200 	eoreq	r0, r3, #0, 4
    23ec:	0b870500 	bleq	fe1c37f4 <BootRAM+0xd133f95>
    23f0:	7b110000 	blvc	4423f8 <__Stack_Size+0x4413f8>
    23f4:	d7000000 	strle	r0, [r0, -r0]
    23f8:	1200000b 	andne	r0, r0, #11
    23fc:	000000be 	strheq	r0, [r0], -lr
    2400:	261d0009 	ldrcs	r0, [sp], -r9
    2404:	0100000b 	tsteq	r0, fp
    2408:	0bc20111 	bleq	ff082854 <BootRAM+0xdff2ff5>
    240c:	05020000 	streq	r0, [r2, #-0]
    2410:	00162c03 	andseq	r2, r6, r3, lsl #24
    2414:	0b671b08 	bleq	19c903c <__Stack_Size+0x19c803c>
    2418:	01220000 			@ <UNDEFINED> instruction: 0x01220000
    241c:	0c250112 	stfeqs	f0, [r5], #-72	@ 0xffffffb8
    2420:	b10b0000 	mrslt	r0, (UNDEF: 11)
    2424:	0100000b 	tsteq	r0, fp
    2428:	005e0112 	subseq	r0, lr, r2, lsl r1
    242c:	23020000 	movwcs	r0, #8192	@ 0x2000
    2430:	0b160b00 	bleq	585038 <__Stack_Size+0x584038>
    2434:	12010000 	andne	r0, r1, #0
    2438:	00005e01 	andeq	r5, r0, r1, lsl #28
    243c:	01230200 			@ <UNDEFINED> instruction: 0x01230200
    2440:	000a640b 	andeq	r6, sl, fp, lsl #8
    2444:	01120100 	tsteq	r2, r0, lsl #2
    2448:	00000c2a 	andeq	r0, r0, sl, lsr #24
    244c:	00022302 	andeq	r2, r2, r2, lsl #6
    2450:	000bea05 	andeq	lr, fp, r5, lsl #20
    2454:	007b1100 	rsbseq	r1, fp, r0, lsl #2
    2458:	0c3a0000 	ldceq	0, cr0, [sl], #-0
    245c:	be120000 	cdplt	0, 1, cr0, cr2, cr0, {0}
    2460:	0f000000 	svceq	0x00000000
    2464:	0b671d00 	bleq	19c986c <__Stack_Size+0x19c886c>
    2468:	12010000 	andne	r0, r1, #0
    246c:	000c2501 	andeq	r2, ip, r1, lsl #10
    2470:	03050200 	movweq	r0, #20992	@ 0x5200
    2474:	08001642 	stmdaeq	r0, {r1, r6, r9, sl, ip}
    2478:	000a7b1b 	andeq	r7, sl, fp, lsl fp
    247c:	13010400 	movwne	r0, #5120	@ 0x1400
    2480:	000c8801 	andeq	r8, ip, r1, lsl #16
    2484:	0bb10b00 	bleq	fec4508c <BootRAM+0xdbb582d>
    2488:	13010000 	movwne	r0, #4096	@ 0x1000
    248c:	00005e01 	andeq	r5, r0, r1, lsl #28
    2490:	00230200 	eoreq	r0, r3, r0, lsl #4
    2494:	000b160b 	andeq	r1, fp, fp, lsl #12
    2498:	01130100 	tsteq	r3, r0, lsl #2
    249c:	0000005e 	andeq	r0, r0, lr, asr r0
    24a0:	0b012302 	bleq	4b0b0 <__Stack_Size+0x4a0b0>
    24a4:	00000a64 	andeq	r0, r0, r4, ror #20
    24a8:	64011301 	strvs	r1, [r1], #-769	@ 0xfffffcff
    24ac:	0200000b 	andeq	r0, r0, #11
    24b0:	05000223 	streq	r0, [r0, #-547]	@ 0xfffffddd
    24b4:	00000c4d 	andeq	r0, r0, sp, asr #24
    24b8:	000a7b1d 	andeq	r7, sl, sp, lsl fp
    24bc:	01130100 	tsteq	r3, r0, lsl #2
    24c0:	00000c88 	andeq	r0, r0, r8, lsl #25
    24c4:	64030502 	strvs	r0, [r3], #-1282	@ 0xfffffafe
    24c8:	1b080016 	blne	202528 <__Stack_Size+0x201528>
    24cc:	00000b48 	andeq	r0, r0, r8, asr #22
    24d0:	01140112 	tsteq	r4, r2, lsl r1
    24d4:	00000cdb 	ldrdeq	r0, [r0], -fp
    24d8:	000bb10b 	andeq	fp, fp, fp, lsl #2
    24dc:	01140100 	tsteq	r4, r0, lsl #2
    24e0:	0000005e 	andeq	r0, r0, lr, asr r0
    24e4:	0b002302 	bleq	b0f4 <__Stack_Size+0xa0f4>
    24e8:	00000b16 	andeq	r0, r0, r6, lsl fp
    24ec:	5e011401 	cdppl	4, 0, cr1, cr1, cr1, {0}
    24f0:	02000000 	andeq	r0, r0, #0
    24f4:	640b0123 	strvs	r0, [fp], #-291	@ 0xfffffedd
    24f8:	0100000a 	tsteq	r0, sl
    24fc:	0ce00114 	stfeqe	f0, [r0], #80	@ 0x50
    2500:	23020000 	movwcs	r0, #8192	@ 0x2000
    2504:	a0050002 	andge	r0, r5, r2
    2508:	1100000c 	tstne	r0, ip
    250c:	0000007b 	andeq	r0, r0, fp, ror r0
    2510:	00000cf0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    2514:	0000be12 	andeq	fp, r0, r2, lsl lr
    2518:	1d000700 	stcne	7, cr0, [r0, #-0]
    251c:	00000b48 	andeq	r0, r0, r8, asr #22
    2520:	db011401 	blle	4752c <__Stack_Size+0x4652c>
    2524:	0200000c 	andeq	r0, r0, #12
    2528:	16680305 	strbtne	r0, [r8], -r5, lsl #6
    252c:	d41b0800 	ldrle	r0, [fp], #-2048	@ 0xfffff800
    2530:	14000009 	strne	r0, [r0], #-9
    2534:	3e011501 	cfsh32cc	mvfx1, mvfx1, #1
    2538:	0b00000d 	bleq	2574 <__Stack_Size+0x1574>
    253c:	00000bb1 			@ <UNDEFINED> instruction: 0x00000bb1
    2540:	5e011501 	cfsh32pl	mvfx1, mvfx1, #1
    2544:	02000000 	andeq	r0, r0, #0
    2548:	160b0023 	strne	r0, [fp], -r3, lsr #32
    254c:	0100000b 	tsteq	r0, fp
    2550:	005e0115 	subseq	r0, lr, r5, lsl r1
    2554:	23020000 	movwcs	r0, #8192	@ 0x2000
    2558:	0a640b01 	beq	1905164 <__Stack_Size+0x1904164>
    255c:	15010000 	strne	r0, [r1, #-0]
    2560:	000d4301 	andeq	r4, sp, r1, lsl #6
    2564:	02230200 	eoreq	r0, r3, #0, 4
    2568:	0d030500 	cfstr32eq	mvfx0, [r3, #-0]
    256c:	7b110000 	blvc	442574 <__Stack_Size+0x441574>
    2570:	53000000 	movwpl	r0, #0
    2574:	1200000d 	andne	r0, r0, #13
    2578:	000000be 	strheq	r0, [r0], -lr
    257c:	d41d0008 	ldrle	r0, [sp], #-8
    2580:	01000009 	tsteq	r0, r9
    2584:	0d3e0115 	ldfeqs	f0, [lr, #-84]!	@ 0xffffffac
    2588:	05020000 	streq	r0, [r2, #-0]
    258c:	00167a03 	andseq	r7, r6, r3, lsl #20
    2590:	006f1108 	rsbeq	r1, pc, r8, lsl #2
    2594:	0d760000 	ldcleq	0, cr0, [r6, #-0]
    2598:	be120000 	cdplt	0, 1, cr0, cr2, cr0, {0}
    259c:	11000000 	mrsne	r0, (UNDEF: 0)
    25a0:	0d660500 	cfstr64eq	mvdx0, [r6, #-0]
    25a4:	011c0000 	tsteq	ip, r0
    25a8:	0100000b 	tsteq	r0, fp
    25ac:	0d761623 	ldcleq	6, cr1, [r6, #-140]!	@ 0xffffff74
    25b0:	03050000 	movweq	r0, #20480	@ 0x5000
    25b4:	0800168e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, ip}
    25b8:	00006f11 	andeq	r6, r0, r1, lsl pc
    25bc:	000d9d00 	andeq	r9, sp, r0, lsl #26
    25c0:	00be1200 	adcseq	r1, lr, r0, lsl #4
    25c4:	00090000 	andeq	r0, r9, r0
    25c8:	000d8d05 	andeq	r8, sp, r5, lsl #26
    25cc:	09e51c00 	stmibeq	r5!, {sl, fp, ip}^
    25d0:	36010000 	strcc	r0, [r1], -r0
    25d4:	000d9d16 	andeq	r9, sp, r6, lsl sp
    25d8:	a2030500 	andge	r0, r3, #0, 10
    25dc:	11080017 	tstne	r8, r7, lsl r0
    25e0:	0000006f 	andeq	r0, r0, pc, rrx
    25e4:	00000dc5 	andeq	r0, r0, r5, asr #27
    25e8:	0000be13 	andeq	fp, r0, r3, lsl lr
    25ec:	00010100 	andeq	r0, r1, r0, lsl #2
    25f0:	000db405 	andeq	fp, sp, r5, lsl #8
    25f4:	09721c00 	ldmdbeq	r2!, {sl, fp, ip}^
    25f8:	44010000 	strmi	r0, [r1], #-0
    25fc:	000dc516 	andeq	ip, sp, r6, lsl r5
    2600:	a0030500 	andge	r0, r3, r0, lsl #10
    2604:	1e080016 	mcrne	0, 0, r0, cr8, cr6, {0}
    2608:	000a0301 	andeq	r0, sl, r1, lsl #6
    260c:	060a0900 	streq	r0, [sl], -r0, lsl #18
    2610:	000dec01 	andeq	lr, sp, r1, lsl #24
    2614:	20001f00 	andcs	r1, r0, r0, lsl #30
    2618:	00036701 	andeq	r6, r3, r1, lsl #14
    261c:	06b30300 	ldrteq	r0, [r3], r0, lsl #6
    2620:	0e0b0101 	adfeqe	f0, f3, f1
    2624:	5e090000 	cdppl	0, 0, cr0, cr9, cr0, {0}
    2628:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    262c:	00000e0b 	andeq	r0, r0, fp, lsl #28
    2630:	00007b09 	andeq	r7, r0, r9, lsl #22
    2634:	04070000 	streq	r0, [r7], #-0
    2638:	0000008c 	andeq	r0, r0, ip, lsl #1
    263c:	075a0120 	ldrbeq	r0, [sl, -r0, lsr #2]
    2640:	2a030000 	bcs	c2648 <__Stack_Size+0xc1648>
    2644:	35010106 	strcc	r0, [r1, #-262]	@ 0xfffffefa
    2648:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    264c:	0000005e 	andeq	r0, r0, lr, asr r0
    2650:	00005e09 	andeq	r5, r0, r9, lsl #28
    2654:	007b0900 	rsbseq	r0, fp, r0, lsl #18
    2658:	c5090000 	strgt	r0, [r9, #-0]
    265c:	00000000 	andeq	r0, r0, r0
    2660:	0b57011e 	bleq	15c2ae0 <__Stack_Size+0x15c1ae0>
    2664:	09090000 	stmdbeq	r9, {}	@ <UNPREDICTABLE>
    2668:	0e450106 	dvfeqs	f0, f5, f6
    266c:	001f0000 	andseq	r0, pc, r0
    2670:	09320121 	ldmdbeq	r2!, {r0, r5, r8}
    2674:	08090000 	stmdaeq	r9, {}	@ <UNPREDICTABLE>
    2678:	0a0e0106 	beq	382a98 <__Stack_Size+0x381a98>
    267c:	68010000 	stmdavs	r1, {}	@ <UNPREDICTABLE>
    2680:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2684:	00000e68 	andeq	r0, r0, r8, ror #28
    2688:	00007b09 	andeq	r7, r0, r9, lsl #22
    268c:	007b0900 	rsbseq	r0, fp, r0, lsl #18
    2690:	07000000 	streq	r0, [r0, -r0]
    2694:	00013804 	andeq	r3, r1, r4, lsl #16
    2698:	4e012100 	adfmis	f2, f1, f0
    269c:	09000009 	stmdbeq	r0, {r0, r3}
    26a0:	0e010607 	cfmadd32eq	mvax0, mvfx0, mvfx1, mvfx7
    26a4:	0100000a 	tsteq	r0, sl
    26a8:	00000e91 	muleq	r0, r1, lr
    26ac:	000e6809 	andeq	r6, lr, r9, lsl #16
    26b0:	0e910900 	vfnmseq.f16	s0, s2, s0	@ <UNPREDICTABLE>
    26b4:	97090000 	strls	r0, [r9, -r0]
    26b8:	0000000e 	andeq	r0, r0, lr
    26bc:	0a0c0407 	beq	3036e0 <__Stack_Size+0x3026e0>
    26c0:	04070000 	streq	r0, [r7], #-0
    26c4:	0000007b 	andeq	r0, r0, fp, ror r0
    26c8:	047f0121 	ldrbteq	r0, [pc], #-289	@ 26d0 <__Stack_Size+0x16d0>
    26cc:	c0030000 	andgt	r0, r3, r0
    26d0:	00b70105 	adcseq	r0, r7, r5, lsl #2
    26d4:	bb010000 	bllt	426dc <__Stack_Size+0x416dc>
    26d8:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    26dc:	0000005e 	andeq	r0, r0, lr, asr r0
    26e0:	000e9709 	andeq	r9, lr, r9, lsl #14
    26e4:	01220000 			@ <UNDEFINED> instruction: 0x01220000
    26e8:	000002e8 	andeq	r0, r0, r8, ror #5
    26ec:	0601d501 	streq	sp, [r1], -r1, lsl #10
    26f0:	08000fac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, fp}
    26f4:	08000fb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, fp}
    26f8:	01007d02 	tsteq	r0, r2, lsl #26
    26fc:	00000ee0 	andeq	r0, r0, r0, ror #29
    2700:	000fb023 	andeq	fp, pc, r3, lsr #32
    2704:	15c70108 	strbne	r0, [r7, #264]	@ 0x108
    2708:	24000000 	strcs	r0, [r0], #-0
    270c:	0000bf01 	andeq	fp, r0, r1, lsl #30
    2710:	01cf0100 	biceq	r0, pc, r0, lsl #2
    2714:	000f6406 	andeq	r6, pc, r6, lsl #8
    2718:	000fac08 	andeq	sl, pc, r8, lsl #24
    271c:	000dbc08 	andeq	fp, sp, r8, lsl #24
    2720:	0f530100 	svceq	0x00530100
    2724:	ec250000 	stc	0, cr0, [r5], #-0
    2728:	6a000016 	bvs	2788 <__Stack_Size+0x1788>
    272c:	0108000f 	tsteq	r8, pc
    2730:	000f6a00 	andeq	r6, pc, r0, lsl #20
    2734:	000f9808 	andeq	r9, pc, r8, lsl #16
    2738:	01d10108 	bicseq	r0, r1, r8, lsl #2
    273c:	000f3f03 	andeq	r3, pc, r3, lsl #30
    2740:	170c2600 	strne	r2, [ip, -r0, lsl #12]
    2744:	0f6a0000 	svceq	0x006a0000
    2748:	00040800 	andeq	r0, r4, r0, lsl #16
    274c:	000001f8 	strdeq	r0, [r0], -r8
    2750:	27064602 	strcs	r4, [r6, -r2, lsl #12]
    2754:	0000170c 	andeq	r1, r0, ip, lsl #14
    2758:	08000f76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, fp}
    275c:	0f760001 	svceq	0x00760001
    2760:	0f780800 	svceq	0x00780800
    2764:	47020800 	strmi	r0, [r2, -r0, lsl #16]
    2768:	6a28000e 	bvs	a027a8 <__Stack_Size+0xa017a8>
    276c:	d108000f 	tstle	r8, pc
    2770:	23000011 	movwcs	r0, #17
    2774:	08000fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp}
    2778:	000ddc01 	andeq	sp, sp, r1, lsl #24
    277c:	01240000 			@ <UNDEFINED> instruction: 0x01240000
    2780:	00000502 	andeq	r0, r0, r2, lsl #10
    2784:	0601c901 	streq	ip, [r1], -r1, lsl #18
    2788:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
    278c:	08000f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp}
    2790:	00000de8 	andeq	r0, r0, r8, ror #27
    2794:	00103b01 	andseq	r3, r0, r1, lsl #22
    2798:	175f2500 	ldrbne	r2, [pc, -r0, lsl #10]
    279c:	0e2a0000 	cdpeq	0, 2, cr0, cr10, cr0, {0}
    27a0:	00010800 	andeq	r0, r1, r0, lsl #16
    27a4:	08000e2a 	stmdaeq	r0, {r1, r3, r5, r9, sl, fp}
    27a8:	08000f46 	stmdaeq	r0, {r1, r2, r6, r8, r9, sl, fp}
    27ac:	0301cb01 	movweq	ip, #6913	@ 0x1b01
    27b0:	00001027 	andeq	r1, r0, r7, lsr #32
    27b4:	00176c29 	andseq	r6, r7, r9, lsr #24
    27b8:	0001b000 	andeq	fp, r1, r0
    27bc:	000fa400 	andeq	sl, pc, r0, lsl #8
    27c0:	17712a00 	ldrbne	r2, [r1, -r0, lsl #20]!
    27c4:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    27c8:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
    27cc:	29000000 	stmdbcs	r0, {}	@ <UNPREDICTABLE>
    27d0:	00001790 	muleq	r0, r0, r7
    27d4:	000001c8 	andeq	r0, r0, r8, asr #3
    27d8:	00000fbf 			@ <UNDEFINED> instruction: 0x00000fbf
    27dc:	0017952a 	andseq	r9, r7, sl, lsr #10
    27e0:	000e4200 	andeq	r4, lr, r0, lsl #4
    27e4:	000e3a00 	andeq	r3, lr, r0, lsl #20
    27e8:	112b0000 			@ <UNDEFINED> instruction: 0x112b0000
    27ec:	ae000019 	mcrge	0, 0, r0, cr0, cr9, {0}
    27f0:	0108000e 	tsteq	r8, lr
    27f4:	000eae00 	andeq	sl, lr, r0, lsl #28
    27f8:	000eb608 	andeq	fp, lr, r8, lsl #12
    27fc:	03270208 			@ <UNDEFINED> instruction: 0x03270208
    2800:	00000fe7 	andeq	r0, r0, r7, ror #31
    2804:	0019202c 	andseq	r2, r9, ip, lsr #32
    2808:	000e8500 	andeq	r8, lr, r0, lsl #10
    280c:	000e8300 	andeq	r8, lr, r0, lsl #6
    2810:	a0290000 	eorge	r0, r9, r0
    2814:	e0000017 	and	r0, r0, r7, lsl r0
    2818:	02000001 	andeq	r0, r0, #1
    281c:	2a000010 	bcs	2864 <__Stack_Size+0x1864>
    2820:	000017a1 	andeq	r1, r0, r1, lsr #15
    2824:	00000ea1 	andeq	r0, r0, r1, lsr #29
    2828:	00000e99 	muleq	r0, r9, lr
    282c:	0e362d00 	cdpeq	13, 3, cr2, cr6, cr0, {0}
    2830:	0e110800 	cdpeq	8, 1, cr0, cr1, cr0, {0}
    2834:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    2838:	85090250 	strhi	r0, [r9, #-592]	@ 0xfffffdb0
    283c:	0151012e 	cmpeq	r1, lr, lsr #2
    2840:	52012e31 	andpl	r2, r1, #784	@ 0x310
    2844:	2e640802 	cdpcs	8, 6, cr0, cr4, cr2, {0}
    2848:	03055301 	movweq	r5, #21249	@ 0x5301
    284c:	08000875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp}
    2850:	2a280000 	bcs	a02858 <__Stack_Size+0xa01858>
    2854:	db08000e 	blle	202894 <__Stack_Size+0x201894>
    2858:	23000011 	movwcs	r0, #17
    285c:	08000f4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, sl, fp}
    2860:	000e3501 	andeq	r3, lr, r1, lsl #10
    2864:	012f0000 			@ <UNDEFINED> instruction: 0x012f0000
    2868:	000006e2 	andeq	r0, r0, r2, ror #13
    286c:	0601c201 	streq	ip, [r1], -r1, lsl #4
    2870:	000a0e01 	andeq	r0, sl, r1, lsl #28
    2874:	000e0000 	andeq	r0, lr, r0
    2878:	000e2408 	andeq	r2, lr, r8, lsl #8
    287c:	000ee208 	andeq	lr, lr, r8, lsl #4
    2880:	10d70100 	sbcsne	r0, r7, r0, lsl #2
    2884:	72300000 	eorsvc	r0, r0, #0
    2888:	01007165 	tsteq	r0, r5, ror #2
    288c:	682701c2 	stmdavs	r7!, {r1, r6, r7, r8}
    2890:	0600000e 	streq	r0, [r0], -lr
    2894:	0200000f 	andeq	r0, r0, #15
    2898:	3100000f 	tstcc	r0, pc
    289c:	0000040c 	andeq	r0, r0, ip, lsl #8
    28a0:	3501c201 	strcc	ip, [r1, #-513]	@ 0xfffffdff
    28a4:	0000007b 	andeq	r0, r0, fp, ror r0
    28a8:	00000f28 	andeq	r0, r0, r8, lsr #30
    28ac:	00000f24 	andeq	r0, r0, r4, lsr #30
    28b0:	0006d031 	andeq	sp, r6, r1, lsr r0
    28b4:	01c20100 	biceq	r0, r2, r0, lsl #2
    28b8:	00007b46 	andeq	r7, r0, r6, asr #22
    28bc:	000f4d00 	andeq	r4, pc, r0, lsl #26
    28c0:	000f4900 	andeq	r4, pc, r0, lsl #18
    28c4:	0e0c3200 	cdpeq	2, 0, cr3, cr12, cr0, {0}
    28c8:	152e0800 	strne	r0, [lr, #-2048]!	@ 0xfffff800
    28cc:	10ba0000 	adcsne	r0, sl, r0
    28d0:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    28d4:	00740250 	rsbseq	r0, r4, r0, asr r2
    28d8:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    28dc:	012e0075 			@ <UNDEFINED> instruction: 0x012e0075
    28e0:	00760252 	rsbseq	r0, r6, r2, asr r2
    28e4:	0e182d00 	cdpeq	13, 1, cr2, cr8, cr0, {0}
    28e8:	0e450800 	cdpeq	8, 4, cr0, cr5, cr0, {0}
    28ec:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    28f0:	00740250 	rsbseq	r0, r4, r0, asr r2
    28f4:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    28f8:	012e0075 			@ <UNDEFINED> instruction: 0x012e0075
    28fc:	00760252 	rsbseq	r0, r6, r2, asr r2
    2900:	012f0000 			@ <UNDEFINED> instruction: 0x012f0000
    2904:	00000576 	andeq	r0, r0, r6, ror r5
    2908:	0601bb01 	streq	fp, [r1], -r1, lsl #22
    290c:	000a0e01 	andeq	r0, sl, r1, lsl #28
    2910:	000de400 	andeq	lr, sp, r0, lsl #8
    2914:	000e0008 	andeq	r0, lr, r8
    2918:	000f6e08 	andeq	r6, pc, r8, lsl #28
    291c:	11750100 	cmnne	r5, r0, lsl #2
    2920:	72300000 	eorsvc	r0, r0, #0
    2924:	01007165 	tsteq	r0, r5, ror #2
    2928:	682601bb 	stmdavs	r6!, {r0, r1, r3, r4, r5, r7, r8}
    292c:	9200000e 	andls	r0, r0, #14
    2930:	8e00000f 	cdphi	0, 0, cr0, cr0, cr15, {0}
    2934:	3100000f 	tstcc	r0, pc
    2938:	0000087d 	andeq	r0, r0, sp, ror r8
    293c:	3201bb01 	andcc	fp, r1, #1024	@ 0x400
    2940:	00000e91 	muleq	r0, r1, lr
    2944:	00000fb6 			@ <UNDEFINED> instruction: 0x00000fb6
    2948:	00000fb0 			@ <UNDEFINED> instruction: 0x00000fb0
    294c:	000cd031 	andeq	sp, ip, r1, lsr r0
    2950:	01bb0100 			@ <UNDEFINED> instruction: 0x01bb0100
    2954:	000e9742 	andeq	r9, lr, r2, asr #14
    2958:	000fe800 	andeq	lr, pc, r0, lsl #16
    295c:	000fe200 	andeq	lr, pc, r0, lsl #4
    2960:	0dec3200 	sfmeq	f3, 2, [ip]
    2964:	15660800 	strbne	r0, [r6, #-2048]!	@ 0xfffff800
    2968:	11560000 	cmpne	r6, r0
    296c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    2970:	00740250 	rsbseq	r0, r4, r0, asr r2
    2974:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    2978:	012e0071 			@ <UNDEFINED> instruction: 0x012e0071
    297c:	00720252 	rsbseq	r0, r2, r2, asr r2
    2980:	0df42d00 	ldcleq	13, cr2, [r4]
    2984:	0e6e0800 	cdpeq	8, 6, cr0, cr14, cr0, {0}
    2988:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    298c:	00740250 	rsbseq	r0, r4, r0, asr r2
    2990:	0351012e 	cmpeq	r1, #-2147483637	@ 0x8000000b
    2994:	2e5101f3 	mrccs	1, 2, r0, cr1, cr3, {7}
    2998:	f3035201 	vhsub.u8	d5, d3, d1
    299c:	00005201 	andeq	r5, r0, r1, lsl #4
    29a0:	03c10133 	biceq	r0, r1, #-1073741812	@ 0xc000000c
    29a4:	8f010000 	svchi	0x00010000
    29a8:	54010601 	strpl	r0, [r1], #-1537	@ 0xfffff9ff
    29ac:	e408000d 	str	r0, [r8], #-13
    29b0:	0208000d 	andeq	r0, r8, #13
    29b4:	c401007d 	strgt	r0, [r1], #-125	@ 0xffffff83
    29b8:	31000011 	tstcc	r0, r1, lsl r0
    29bc:	000003d3 	ldrdeq	r0, [r0], -r3
    29c0:	27018f01 	strcs	r8, [r1, -r1, lsl #30]
    29c4:	0000007b 	andeq	r0, r0, fp, ror r0
    29c8:	0000101c 	andeq	r1, r0, ip, lsl r0
    29cc:	00001014 	andeq	r1, r0, r4, lsl r0
    29d0:	00087d34 	andeq	r7, r8, r4, lsr sp
    29d4:	018f0100 	orreq	r0, pc, r0, lsl #2
    29d8:	0011c43b 	andseq	ip, r1, fp, lsr r4
    29dc:	34510100 	ldrbcc	r0, [r1], #-256	@ 0xffffff00
    29e0:	00000cd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    29e4:	4b018f01 	blmi	665f0 <__Stack_Size+0x655f0>
    29e8:	00000e97 	muleq	r0, r7, lr
    29ec:	07005201 	streq	r5, [r0, -r1, lsl #4]
    29f0:	0011ca04 	andseq	ip, r1, r4, lsl #20
    29f4:	d0040700 	andle	r0, r4, r0, lsl #14
    29f8:	35000011 	strcc	r0, [r0, #-17]	@ 0xffffffef
    29fc:	08660136 	stmdaeq	r6!, {r1, r2, r4, r5, r8}^
    2a00:	63040000 	movwvs	r0, #16384	@ 0x4000
    2a04:	01370106 	teqeq	r7, r6, lsl #2
    2a08:	00000945 	andeq	r0, r0, r5, asr #18
    2a0c:	e4065604 	str	r5, [r6], #-1540	@ 0xfffff9fc
    2a10:	2c08000b 	stccs	0, cr0, [r8], {11}
    2a14:	5608000d 	strpl	r0, [r8], -sp
    2a18:	01000010 	tsteq	r0, r0, lsl r0
    2a1c:	0000152e 	andeq	r1, r0, lr, lsr #10
    2a20:	00120738 	andseq	r0, r2, r8, lsr r7
    2a24:	012c3900 			@ <UNDEFINED> instruction: 0x012c3900
    2a28:	58040000 	stmdapl	r4, {}	@ <UNPREDICTABLE>
    2a2c:	00009803 	andeq	r9, r0, r3, lsl #16
    2a30:	983a0000 	ldmdals	sl!, {}	@ <UNPREDICTABLE>
    2a34:	25000001 	strcs	r0, [r0, #-1]
    2a38:	3b000012 	blcc	2a88 <__Stack_Size+0x1a88>
    2a3c:	0000012c 	andeq	r0, r0, ip, lsr #2
    2a40:	98035804 	stmdals	r3, {r2, fp, ip, lr}
    2a44:	7a000000 	bvc	2a4c <__Stack_Size+0x1a4c>
    2a48:	76000010 			@ <UNDEFINED> instruction: 0x76000010
    2a4c:	00000010 	andeq	r0, r0, r0, lsl r0
    2a50:	00123738 	andseq	r3, r2, r8, lsr r7
    2a54:	012c3900 			@ <UNDEFINED> instruction: 0x012c3900
    2a58:	58040000 	stmdapl	r4, {}	@ <UNPREDICTABLE>
    2a5c:	0000981a 	andeq	r9, r0, sl, lsl r8
    2a60:	123c0000 	eorsne	r0, ip, #0
    2a64:	2008000c 	andcs	r0, r8, ip
    2a68:	5908000c 	stmdbpl	r8, {r2, r3}
    2a6c:	3b000012 	blcc	2abc <__Stack_Size+0x1abc>
    2a70:	0000012c 	andeq	r0, r0, ip, lsr #2
    2a74:	981a5804 	ldmdals	sl, {r2, fp, ip, lr}
    2a78:	9d000000 	stcls	0, cr0, [r0, #-0]
    2a7c:	99000010 	stmdbls	r0, {r4}
    2a80:	00000010 	andeq	r0, r0, r0, lsl r0
    2a84:	000c203c 	andeq	r2, ip, ip, lsr r0
    2a88:	000c2e08 	andeq	r2, ip, r8, lsl #28
    2a8c:	00127b08 	andseq	r7, r2, r8, lsl #22
    2a90:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2a94:	58040000 	stmdapl	r4, {}	@ <UNPREDICTABLE>
    2a98:	00009831 	andeq	r9, r0, r1, lsr r8
    2a9c:	0010c000 	andseq	ip, r0, r0
    2aa0:	0010bc00 	andseq	fp, r0, r0, lsl #24
    2aa4:	8d380000 	ldchi	0, cr0, [r8, #-0]
    2aa8:	39000012 	stmdbcc	r0, {r1, r4}
    2aac:	0000012c 	andeq	r0, r0, ip, lsr #2
    2ab0:	98315804 	ldmdals	r1!, {r2, fp, ip, lr}
    2ab4:	00000000 	andeq	r0, r0, r0
    2ab8:	000c2e3c 	andeq	r2, ip, ip, lsr lr
    2abc:	000c3a08 	andeq	r3, ip, r8, lsl #20
    2ac0:	0012af08 	andseq	sl, r2, r8, lsl #30
    2ac4:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2ac8:	58040000 	stmdapl	r4, {}	@ <UNPREDICTABLE>
    2acc:	00009848 	andeq	r9, r0, r8, asr #16
    2ad0:	0010e300 	andseq	lr, r0, r0, lsl #6
    2ad4:	0010df00 	andseq	sp, r0, r0, lsl #30
    2ad8:	c1380000 	teqgt	r8, r0
    2adc:	39000012 	stmdbcc	r0, {r1, r4}
    2ae0:	0000012c 	andeq	r0, r0, ip, lsr #2
    2ae4:	98485804 	stmdals	r8, {r2, fp, ip, lr}^
    2ae8:	00000000 	andeq	r0, r0, r0
    2aec:	0012d338 	andseq	sp, r2, r8, lsr r3
    2af0:	012c3900 			@ <UNDEFINED> instruction: 0x012c3900
    2af4:	59040000 	stmdbpl	r4, {}	@ <UNPREDICTABLE>
    2af8:	00009803 	andeq	r9, r0, r3, lsl #16
    2afc:	3a3c0000 	bcc	f02b04 <__Stack_Size+0xf01b04>
    2b00:	4608000c 	strmi	r0, [r8], -ip
    2b04:	f508000c 			@ <UNDEFINED> instruction: 0xf508000c
    2b08:	3b000012 	blcc	2b58 <__Stack_Size+0x1b58>
    2b0c:	0000012c 	andeq	r0, r0, ip, lsr #2
    2b10:	98035904 	stmdals	r3, {r2, r8, fp, ip, lr}
    2b14:	06000000 	streq	r0, [r0], -r0
    2b18:	02000011 	andeq	r0, r0, #17
    2b1c:	00000011 	andeq	r0, r0, r1, lsl r0
    2b20:	000c463c 	andeq	r4, ip, ip, lsr r6
    2b24:	000c5208 	andeq	r5, ip, r8, lsl #4
    2b28:	00131708 	andseq	r1, r3, r8, lsl #14
    2b2c:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2b30:	59040000 	stmdbpl	r4, {}	@ <UNPREDICTABLE>
    2b34:	0000981a 	andeq	r9, r0, sl, lsl r8
    2b38:	00112900 	andseq	r2, r1, r0, lsl #18
    2b3c:	00112500 	andseq	r2, r1, r0, lsl #10
    2b40:	29380000 	ldmdbcs	r8!, {}	@ <UNPREDICTABLE>
    2b44:	39000013 	stmdbcc	r0, {r0, r1, r4}
    2b48:	0000012c 	andeq	r0, r0, ip, lsr #2
    2b4c:	981a5904 	ldmdals	sl, {r2, r8, fp, ip, lr}
    2b50:	00000000 	andeq	r0, r0, r0
    2b54:	000c523c 	andeq	r5, ip, ip, lsr r2
    2b58:	000c5e08 	andeq	r5, ip, r8, lsl #28
    2b5c:	00134b08 	andseq	r4, r3, r8, lsl #22
    2b60:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2b64:	59040000 	stmdbpl	r4, {}	@ <UNPREDICTABLE>
    2b68:	00009831 	andeq	r9, r0, r1, lsr r8
    2b6c:	00114c00 	andseq	r4, r1, r0, lsl #24
    2b70:	00114800 	andseq	r4, r1, r0, lsl #16
    2b74:	5d380000 	ldcpl	0, cr0, [r8, #-0]
    2b78:	39000013 	stmdbcc	r0, {r0, r1, r4}
    2b7c:	0000012c 	andeq	r0, r0, ip, lsr #2
    2b80:	98315904 	ldmdals	r1!, {r2, r8, fp, ip, lr}
    2b84:	00000000 	andeq	r0, r0, r0
    2b88:	000c5e3c 	andeq	r5, ip, ip, lsr lr
    2b8c:	000c6a08 	andeq	r6, ip, r8, lsl #20
    2b90:	00137f08 	andseq	r7, r3, r8, lsl #30
    2b94:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2b98:	59040000 	stmdbpl	r4, {}	@ <UNPREDICTABLE>
    2b9c:	00009848 	andeq	r9, r0, r8, asr #16
    2ba0:	00116f00 	andseq	r6, r1, r0, lsl #30
    2ba4:	00116b00 	andseq	r6, r1, r0, lsl #22
    2ba8:	91380000 	teqls	r8, r0
    2bac:	39000013 	stmdbcc	r0, {r0, r1, r4}
    2bb0:	0000012c 	andeq	r0, r0, ip, lsr #2
    2bb4:	98485904 	stmdals	r8, {r2, r8, fp, ip, lr}^
    2bb8:	00000000 	andeq	r0, r0, r0
    2bbc:	000c6a3c 	andeq	r6, ip, ip, lsr sl
    2bc0:	000c7608 	andeq	r7, ip, r8, lsl #12
    2bc4:	0013b308 	andseq	fp, r3, r8, lsl #6
    2bc8:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2bcc:	5a040000 	bpl	102bd4 <__Stack_Size+0x101bd4>
    2bd0:	00009803 	andeq	r9, r0, r3, lsl #16
    2bd4:	00119200 	andseq	r9, r1, r0, lsl #4
    2bd8:	00118e00 	andseq	r8, r1, r0, lsl #28
    2bdc:	c5380000 	ldrgt	r0, [r8, #-0]!
    2be0:	39000013 	stmdbcc	r0, {r0, r1, r4}
    2be4:	0000012c 	andeq	r0, r0, ip, lsr #2
    2be8:	98035a04 	stmdals	r3, {r2, r9, fp, ip, lr}
    2bec:	00000000 	andeq	r0, r0, r0
    2bf0:	000c763c 	andeq	r7, ip, ip, lsr r6
    2bf4:	000c8208 	andeq	r8, ip, r8, lsl #4
    2bf8:	0013e708 	andseq	lr, r3, r8, lsl #14
    2bfc:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2c00:	5a040000 	bpl	102c08 <__Stack_Size+0x101c08>
    2c04:	0000981a 	andeq	r9, r0, sl, lsl r8
    2c08:	0011b500 	andseq	fp, r1, r0, lsl #10
    2c0c:	0011b100 	andseq	fp, r1, r0, lsl #2
    2c10:	f9380000 			@ <UNDEFINED> instruction: 0xf9380000
    2c14:	39000013 	stmdbcc	r0, {r0, r1, r4}
    2c18:	0000012c 	andeq	r0, r0, ip, lsr #2
    2c1c:	981a5a04 	ldmdals	sl, {r2, r9, fp, ip, lr}
    2c20:	00000000 	andeq	r0, r0, r0
    2c24:	000c823c 	andeq	r8, ip, ip, lsr r2
    2c28:	000c8e08 	andeq	r8, ip, r8, lsl #28
    2c2c:	00141b08 	andseq	r1, r4, r8, lsl #22
    2c30:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2c34:	5a040000 	bpl	102c3c <__Stack_Size+0x101c3c>
    2c38:	00009831 	andeq	r9, r0, r1, lsr r8
    2c3c:	0011d800 	andseq	sp, r1, r0, lsl #16
    2c40:	0011d400 	andseq	sp, r1, r0, lsl #8
    2c44:	2d380000 	ldccs	0, cr0, [r8, #-0]
    2c48:	39000014 	stmdbcc	r0, {r2, r4}
    2c4c:	0000012c 	andeq	r0, r0, ip, lsr #2
    2c50:	98315a04 	ldmdals	r1!, {r2, r9, fp, ip, lr}
    2c54:	00000000 	andeq	r0, r0, r0
    2c58:	000c8e3c 	andeq	r8, ip, ip, lsr lr
    2c5c:	000c9a08 	andeq	r9, ip, r8, lsl #20
    2c60:	00144f08 	andseq	r4, r4, r8, lsl #30
    2c64:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2c68:	5a040000 	bpl	102c70 <__Stack_Size+0x101c70>
    2c6c:	00009848 	andeq	r9, r0, r8, asr #16
    2c70:	0011fb00 	andseq	pc, r1, r0, lsl #22
    2c74:	0011f700 	andseq	pc, r1, r0, lsl #14
    2c78:	61380000 	teqvs	r8, r0
    2c7c:	39000014 	stmdbcc	r0, {r2, r4}
    2c80:	0000012c 	andeq	r0, r0, ip, lsr #2
    2c84:	98485a04 	stmdals	r8, {r2, r9, fp, ip, lr}^
    2c88:	00000000 	andeq	r0, r0, r0
    2c8c:	000c9a3c 	andeq	r9, ip, ip, lsr sl
    2c90:	000ca608 	andeq	sl, ip, r8, lsl #12
    2c94:	00148308 	andseq	r8, r4, r8, lsl #6
    2c98:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2c9c:	5b040000 	blpl	102ca4 <__Stack_Size+0x101ca4>
    2ca0:	00009803 	andeq	r9, r0, r3, lsl #16
    2ca4:	00121e00 	andseq	r1, r2, r0, lsl #28
    2ca8:	00121a00 	andseq	r1, r2, r0, lsl #20
    2cac:	95380000 	ldrls	r0, [r8, #-0]!
    2cb0:	39000014 	stmdbcc	r0, {r2, r4}
    2cb4:	0000012c 	andeq	r0, r0, ip, lsr #2
    2cb8:	98035b04 	stmdals	r3, {r2, r8, r9, fp, ip, lr}
    2cbc:	00000000 	andeq	r0, r0, r0
    2cc0:	000ca63c 	andeq	sl, ip, ip, lsr r6
    2cc4:	000cb208 	andeq	fp, ip, r8, lsl #4
    2cc8:	0014b708 	andseq	fp, r4, r8, lsl #14
    2ccc:	012c3b00 			@ <UNDEFINED> instruction: 0x012c3b00
    2cd0:	5b040000 	blpl	102cd8 <__Stack_Size+0x101cd8>
    2cd4:	0000981a 	andeq	r9, r0, sl, lsl r8
    2cd8:	00124100 	andseq	r4, r2, r0, lsl #2
    2cdc:	00123d00 	andseq	r3, r2, r0, lsl #26
    2ce0:	c9380000 	ldmdbgt	r8!, {}	@ <UNPREDICTABLE>
    2ce4:	39000014 	stmdbcc	r0, {r2, r4}
    2ce8:	0000012c 	andeq	r0, r0, ip, lsr #2
    2cec:	981a5b04 	ldmdals	sl, {r2, r8, r9, fp, ip, lr}
    2cf0:	00000000 	andeq	r0, r0, r0
    2cf4:	0014db38 	andseq	sp, r4, r8, lsr fp
    2cf8:	012c3900 			@ <UNDEFINED> instruction: 0x012c3900
    2cfc:	5b040000 	blpl	102d04 <__Stack_Size+0x101d04>
    2d00:	00009831 	andeq	r9, r0, r1, lsr r8
    2d04:	b23c0000 	eorslt	r0, ip, #0
    2d08:	be08000c 	cdplt	0, 0, cr0, cr8, cr12, {0}
    2d0c:	fd08000c 	stc2	0, cr0, [r8, #-48]	@ 0xffffffd0
    2d10:	3b000014 	blcc	2d68 <__Stack_Size+0x1d68>
    2d14:	0000012c 	andeq	r0, r0, ip, lsr #2
    2d18:	98315b04 	ldmdals	r1!, {r2, r8, r9, fp, ip, lr}
    2d1c:	64000000 	strvs	r0, [r0], #-0
    2d20:	60000012 	andvs	r0, r0, r2, lsl r0
    2d24:	00000012 	andeq	r0, r0, r2, lsl r0
    2d28:	00150f38 	andseq	r0, r5, r8, lsr pc
    2d2c:	012c3900 			@ <UNDEFINED> instruction: 0x012c3900
    2d30:	5b040000 	blpl	102d38 <__Stack_Size+0x101d38>
    2d34:	00009848 	andeq	r9, r0, r8, asr #16
    2d38:	be3d0000 	cdplt	0, 3, cr0, cr13, cr0, {0}
    2d3c:	ca08000c 	bgt	202d74 <__Stack_Size+0x201d74>
    2d40:	3b08000c 	blcc	202d78 <__Stack_Size+0x201d78>
    2d44:	0000012c 	andeq	r0, r0, ip, lsr #2
    2d48:	98485b04 	stmdals	r8, {r2, r8, r9, fp, ip, lr}^
    2d4c:	87000000 	strhi	r0, [r0, -r0]
    2d50:	83000012 	movwhi	r0, #18
    2d54:	00000012 	andeq	r0, r0, r2, lsl r0
    2d58:	a0013e00 	andge	r3, r1, r0, lsl #28
    2d5c:	0400000b 	streq	r0, [r0], #-11
    2d60:	0e010633 	mcreq	6, 0, r0, cr1, cr3, {1}
    2d64:	0100000a 	tsteq	r0, sl
    2d68:	00001566 	andeq	r1, r0, r6, ror #10
    2d6c:	7165723f 	cmnvc	r5, pc, lsr r2
    2d70:	21330400 	teqcs	r3, r0, lsl #8
    2d74:	00000e68 	andeq	r0, r0, r8, ror #28
    2d78:	00040c40 	andeq	r0, r4, r0, asr #24
    2d7c:	2f330400 	svccs	0x00330400
    2d80:	0000007b 	andeq	r0, r0, fp, ror r0
    2d84:	0006d040 	andeq	sp, r6, r0, asr #32
    2d88:	40330400 	eorsmi	r0, r3, r0, lsl #8
    2d8c:	0000007b 	andeq	r0, r0, fp, ror r0
    2d90:	c3014100 	movwgt	r4, #4352	@ 0x1100
    2d94:	0400000a 	streq	r0, [r0], #-10
    2d98:	0e01061d 	mcreq	6, 0, r0, cr1, cr13, {0}
    2d9c:	0c00000a 	stceq	0, cr0, [r0], {10}
    2da0:	5408000a 	strpl	r0, [r8], #-10
    2da4:	0208000a 	andeq	r0, r8, #10
    2da8:	c701007d 	smlsdxgt	r1, sp, r0, r0
    2dac:	42000015 	andmi	r0, r0, #21
    2db0:	00716572 	rsbseq	r6, r1, r2, ror r5
    2db4:	68201d04 	stmdavs	r0!, {r2, r8, sl, fp, ip}
    2db8:	b200000e 	andlt	r0, r0, #14
    2dbc:	a6000012 			@ <UNDEFINED> instruction: 0xa6000012
    2dc0:	43000012 	movwmi	r0, #18
    2dc4:	0000087d 	andeq	r0, r0, sp, ror r8
    2dc8:	912c1d04 			@ <UNDEFINED> instruction: 0x912c1d04
    2dcc:	0100000e 	tsteq	r0, lr
    2dd0:	0cd04351 	ldcleq	3, cr4, [r0], {81}	@ 0x51
    2dd4:	1d040000 	stcne	0, cr0, [r4, #-0]
    2dd8:	000e973c 	andeq	r9, lr, ip, lsr r7
    2ddc:	1c520100 	ldfnee	f0, [r2], {-0}
    2de0:	000008ab 	andeq	r0, r0, fp, lsr #17
    2de4:	cc152704 	ldcgt	7, cr2, [r5], {4}
    2de8:	0500000a 	streq	r0, [r0, #-10]
    2dec:	0000d603 	andeq	sp, r0, r3, lsl #12
    2df0:	01440020 	cmpeq	r4, r0, lsr #32
    2df4:	00000b80 	andeq	r0, r0, r0, lsl #23
    2df8:	9c068402 	cfstrsls	mvf8, [r6], {2}
    2dfc:	0c080009 	stceq	0, cr0, [r8], {9}
    2e00:	0208000a 	andeq	r0, r8, #10
    2e04:	3701007d 	smlsdxcc	r1, sp, r0, r0
    2e08:	0008b301 	andeq	fp, r8, r1, lsl #6
    2e0c:	065f0200 	ldrbeq	r0, [pc], -r0, lsl #4
    2e10:	080008ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, fp}
    2e14:	0800099c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp}
    2e18:	00001305 	andeq	r1, r0, r5, lsl #6
    2e1c:	00167b01 	andseq	r7, r6, r1, lsl #22
    2e20:	0aaf1c00 	beq	febc9e28 <BootRAM+0xdb3a5c9>
    2e24:	60020000 	andvs	r0, r2, r0
    2e28:	00005e12 	andeq	r5, r0, r2, lsl lr
    2e2c:	ca030500 	bgt	c4234 <__Stack_Size+0xc3234>
    2e30:	1c200000 	stcne	0, cr0, [r0], #-0
    2e34:	00000a6c 	andeq	r0, r0, ip, ror #20
    2e38:	7b136102 	blvc	4db248 <__Stack_Size+0x4da248>
    2e3c:	05000000 	streq	r0, [r0, #-0]
    2e40:	0000cc03 	andeq	ip, r0, r3, lsl #24
    2e44:	64614520 	strbtvs	r4, [r1], #-1312	@ 0xfffffae0
    2e48:	6c020063 	stcvs	0, cr0, [r2], {99}	@ 0x63
    2e4c:	00007b0c 	andeq	r7, r0, ip, lsl #22
    2e50:	00132700 	andseq	r2, r3, r0, lsl #14
    2e54:	00132500 	andseq	r2, r3, r0, lsl #10
    2e58:	0bac3b00 	bleq	feb11a60 <BootRAM+0xda82201>
    2e5c:	6f020000 	svcvs	0x00020000
    2e60:	00007b0c 	andeq	r7, r0, ip, lsl #22
    2e64:	00133c00 	andseq	r3, r3, r0, lsl #24
    2e68:	00133a00 	andseq	r3, r3, r0, lsl #20
    2e6c:	0a133b00 	beq	4d1a74 <__Stack_Size+0x4d0a74>
    2e70:	70020000 	andvc	r0, r2, r0
    2e74:	0000440b 	andeq	r4, r0, fp, lsl #8
    2e78:	00135500 	andseq	r5, r3, r0, lsl #10
    2e7c:	00134f00 	andseq	r4, r3, r0, lsl #30
    2e80:	09303200 	ldmdbeq	r0!, {r9, ip, sp}
    2e84:	171a0800 	ldrne	r0, [sl, -r0, lsl #16]
    2e88:	166a0000 	strbtne	r0, [sl], -r0
    2e8c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    2e90:	00740250 	rsbseq	r0, r4, r0, asr r2
    2e94:	094a2d00 	stmdbeq	sl, {r8, sl, fp, sp}^
    2e98:	16a70800 	strtne	r0, [r7], r0, lsl #16
    2e9c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    2ea0:	00740250 	rsbseq	r0, r4, r0, asr r2
    2ea4:	013e0000 	teqeq	lr, r0
    2ea8:	00000920 	andeq	r0, r0, r0, lsr #18
    2eac:	010a5702 	tsteq	sl, r2, lsl #14
    2eb0:	0000007b 	andeq	r0, r0, fp, ror r0
    2eb4:	0016a701 	andseq	sl, r6, r1, lsl #14
    2eb8:	0a6c4000 	beq	1b12ec0 <__Stack_Size+0x1b11ec0>
    2ebc:	57020000 	strpl	r0, [r2, -r0]
    2ec0:	00007b20 	andeq	r7, r0, r0, lsr #22
    2ec4:	09953900 	ldmibeq	r5, {r8, fp, ip, sp}
    2ec8:	58020000 	stmdapl	r2, {}	@ <UNPREDICTABLE>
    2ecc:	00009813 	andeq	r9, r0, r3, lsl r8
    2ed0:	01410000 	mrseq	r0, (UNDEF: 65)
    2ed4:	00000992 	muleq	r0, r2, r9
    2ed8:	010a5002 	tsteq	sl, r2
    2edc:	0000007b 	andeq	r0, r0, fp, ror r0
    2ee0:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
    2ee4:	080008ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp}
    2ee8:	01007d02 	tsteq	r0, r2, lsl #26
    2eec:	000016ec 	andeq	r1, r0, ip, ror #13
    2ef0:	000a6c46 	andeq	r6, sl, r6, asr #24
    2ef4:	1d500200 	lfmne	f0, 2, [r0, #-0]
    2ef8:	0000007b 	andeq	r0, r0, fp, ror r0
    2efc:	000013a4 	andeq	r1, r0, r4, lsr #7
    2f00:	000013a0 	andeq	r1, r0, r0, lsr #7
    2f04:	0009951c 	andeq	r9, r9, ip, lsl r5
    2f08:	13510200 	cmpne	r1, #0, 4
    2f0c:	00000098 	muleq	r0, r8, r0
    2f10:	00080305 	andeq	r0, r8, r5, lsl #6
    2f14:	47002000 	strmi	r2, [r0, -r0]
    2f18:	000008fd 	strdeq	r0, [r0], -sp
    2f1c:	010d4302 	tsteq	sp, r2, lsl #6
    2f20:	0000170c 	andeq	r1, r0, ip, lsl #14
    2f24:	000ad61c 	andeq	sp, sl, ip, lsl r6
    2f28:	13440200 	movtne	r0, #16896	@ 0x4200
    2f2c:	00000098 	muleq	r0, r8, r0
    2f30:	00e00305 	rsceq	r0, r0, r5, lsl #6
    2f34:	48002000 	stmdami	r0, {sp}
    2f38:	00098701 	andeq	r8, r9, r1, lsl #14
    2f3c:	11060500 	tstne	r6, r0, lsl #10
    2f40:	00000098 	muleq	r0, r8, r0
    2f44:	be014103 	adflts	f4, f1, f3
    2f48:	0200000b 	andeq	r0, r0, #11
    2f4c:	7b010a3c 	blvc	45844 <__Stack_Size+0x44844>
    2f50:	bc000000 	stclt	0, cr0, [r0], {-0}
    2f54:	d4080008 	strle	r0, [r8], #-8
    2f58:	02080008 	andeq	r0, r8, #8
    2f5c:	5f01007d 	svcpl	0x0001007d
    2f60:	46000017 			@ <UNDEFINED> instruction: 0x46000017
    2f64:	00000a6c 	andeq	r0, r0, ip, ror #20
    2f68:	7b213c02 	blvc	851f78 <__Stack_Size+0x850f78>
    2f6c:	c9000000 	stmdbgt	r0, {}	@ <UNPREDICTABLE>
    2f70:	c5000013 	strgt	r0, [r0, #-19]	@ 0xffffffed
    2f74:	1c000013 	stcne	0, cr0, [r0], {19}
    2f78:	00000995 	muleq	r0, r5, r9
    2f7c:	98133d02 	ldmdals	r3, {r1, r8, sl, fp, ip, sp}
    2f80:	05000000 	streq	r0, [r0, #-0]
    2f84:	00000403 	andeq	r0, r0, r3, lsl #8
    2f88:	37470020 	strbcc	r0, [r7, -r0, lsr #32]
    2f8c:	0200000a 	andeq	r0, r0, #10
    2f90:	ad010d1c 	stcge	13, cr0, [r1, #-112]	@ 0xffffff90
    2f94:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    2f98:	0000177e 	andeq	r1, r0, lr, ror r7
    2f9c:	00012c39 	andeq	r2, r1, r9, lsr ip
    2fa0:	031e0200 	tsteq	lr, #0, 4
    2fa4:	00000098 	muleq	r0, r8, r0
    2fa8:	17903800 	ldrne	r3, [r0, r0, lsl #16]
    2fac:	2c390000 	ldccs	0, cr0, [r9], #-0
    2fb0:	02000001 	andeq	r0, r0, #1
    2fb4:	0098031e 	addseq	r0, r8, lr, lsl r3
    2fb8:	38000000 	stmdacc	r0, {}	@ <UNPREDICTABLE>
    2fbc:	000017a0 	andeq	r1, r0, r0, lsr #15
    2fc0:	02006949 	andeq	r6, r0, #1196032	@ 0x124000
    2fc4:	00980321 	addseq	r0, r8, r1, lsr #6
    2fc8:	4a000000 	bmi	2fd0 <__Stack_Size+0x1fd0>
    2fcc:	02006949 	andeq	r6, r0, #1196032	@ 0x124000
    2fd0:	0098032a 	addseq	r0, r8, sl, lsr #6
    2fd4:	00000000 	andeq	r0, r0, r0
    2fd8:	0009ad4b 	andeq	sl, r9, fp, asr #26
    2fdc:	0d110200 	lfmeq	f0, 4, [r1, #-0]
    2fe0:	00087401 	andeq	r7, r8, r1, lsl #8
    2fe4:	0008bc08 	andeq	fp, r8, r8, lsl #24
    2fe8:	0013ea08 	andseq	lr, r3, r8, lsl #20
    2fec:	18390100 	ldmdane	r9!, {r8}
    2ff0:	ca460000 	bgt	1182ff8 <__Stack_Size+0x1181ff8>
    2ff4:	02000006 	andeq	r0, r0, #6
    2ff8:	005e2511 	subseq	r2, lr, r1, lsl r5
    2ffc:	140e0000 	strne	r0, [lr], #-0
    3000:	140a0000 	strne	r0, [sl], #-0
    3004:	d24c0000 	suble	r0, ip, #0
    3008:	8c000018 	stchi	0, cr0, [r0], {24}
    300c:	00080008 	andeq	r0, r8, r8
    3010:	00017800 	andeq	r7, r1, r0, lsl #16
    3014:	03120200 	tsteq	r2, #0, 4
    3018:	0018ec2c 	andseq	lr, r8, ip, lsr #24
    301c:	00143100 	andseq	r3, r4, r0, lsl #2
    3020:	00142f00 	andseq	r2, r4, r0, lsl #30
    3024:	18f82c00 	ldmne	r8!, {sl, fp, sp}^
    3028:	144b0000 	strbne	r0, [fp], #-0
    302c:	14490000 	strbne	r0, [r9], #-0
    3030:	e02c0000 	eor	r0, ip, r0
    3034:	6b000018 	blvs	309c <__Stack_Size+0x209c>
    3038:	65000014 	strvs	r0, [r0, #-20]	@ 0xffffffec
    303c:	4d000014 	stcmi	0, cr0, [r0, #-80]	@ 0xffffffb0
    3040:	00000178 	andeq	r0, r0, r8, ror r1
    3044:	0019042a 	andseq	r0, r9, sl, lsr #8
    3048:	00149b00 	andseq	r9, r4, r0, lsl #22
    304c:	00149700 	andseq	r9, r4, r0, lsl #14
    3050:	08b02d00 	ldmeq	r0!, {r8, sl, fp, sp}
    3054:	0dec0800 	stcleq	8, cr0, [ip]
    3058:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    305c:	00760251 	rsbseq	r0, r6, r1, asr r2
    3060:	00000000 	andeq	r0, r0, r0
    3064:	000adf4e 	andeq	sp, sl, lr, asr #30
    3068:	0d0a0200 	sfmeq	f0, 4, [sl, #-0]
    306c:	000a0e01 	andeq	r0, sl, r1, lsl #28
    3070:	18700100 	ldmdane	r0!, {r8}^
    3074:	723f0000 	eorsvc	r0, pc, #0
    3078:	02007165 	andeq	r7, r0, #1073741849	@ 0x40000019
    307c:	0e68280a 	cdpeq	8, 6, cr2, cr8, cr10, {0}
    3080:	0c400000 	mareq	acc0, r0, r0
    3084:	02000004 	andeq	r0, r0, #4
    3088:	007b360a 	rsbseq	r3, fp, sl, lsl #12
    308c:	d0400000 	suble	r0, r0, r0
    3090:	02000006 	andeq	r0, r0, #6
    3094:	007b470a 	rsbseq	r4, fp, sl, lsl #14
    3098:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    309c:	00000a40 	andeq	r0, r0, r0, asr #20
    30a0:	010d0902 	tsteq	sp, r2, lsl #18
    30a4:	00000a0e 	andeq	r0, r0, lr, lsl #20
    30a8:	0018a701 	andseq	sl, r8, r1, lsl #14
    30ac:	65723f00 	ldrbvs	r3, [r2, #-3840]!	@ 0xfffff100
    30b0:	09020071 	stmdbeq	r2, {r0, r4, r5, r6}
    30b4:	000e6827 	andeq	r6, lr, r7, lsr #16
    30b8:	087d4000 	ldmdaeq	sp!, {lr}^
    30bc:	09020000 	stmdbeq	r2, {}	@ <UNPREDICTABLE>
    30c0:	000e9133 	andeq	r9, lr, r3, lsr r1
    30c4:	0cd04000 	ldcleq	0, cr4, [r0], {0}
    30c8:	09020000 	stmdbeq	r2, {}	@ <UNPREDICTABLE>
    30cc:	000e9743 	andeq	r9, lr, r3, asr #14
    30d0:	804e0000 	subhi	r0, lr, r0
    30d4:	03000004 	movweq	r0, #4
    30d8:	b70113c1 	strlt	r1, [r1, -r1, asr #7]
    30dc:	03000000 	movweq	r0, #0
    30e0:	000018d2 	ldrdeq	r1, [r0], -r2
    30e4:	0006ca40 	andeq	ip, r6, r0, asr #20
    30e8:	27c10300 	strbcs	r0, [r1, r0, lsl #6]
    30ec:	0000005e 	andeq	r0, r0, lr, asr r0
    30f0:	6675623f 			@ <UNDEFINED> instruction: 0x6675623f
    30f4:	38c10300 	stmiacc	r1, {r8, r9}^
    30f8:	00000e97 	muleq	r0, r7, lr
    30fc:	08874f00 	stmeq	r7, {r8, r9, sl, fp, lr}
    3100:	b8030000 	stmdalt	r3, {}	@ <UNPREDICTABLE>
    3104:	11030114 	tstne	r3, r4, lsl r1
    3108:	40000019 	andmi	r0, r0, r9, lsl r0
    310c:	000006ca 	andeq	r0, r0, sl, asr #13
    3110:	5e30b803 	cdppl	8, 3, cr11, cr0, cr3, {0}
    3114:	3f000000 	svccc	0x00000000
    3118:	00667562 	rsbeq	r7, r6, r2, ror #10
    311c:	0b47b803 	bleq	11f1130 <__Stack_Size+0x11f0130>
    3120:	4000000e 	andmi	r0, r0, lr
    3124:	00000cd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    3128:	7b55b803 	blvc	157113c <__Stack_Size+0x157013c>
    312c:	49000000 	stmdbmi	r0, {}	@ <UNPREDICTABLE>
    3130:	00786469 	rsbseq	r6, r8, r9, ror #8
    3134:	5e0bba03 	vmlapl.f32	s22, s22, s6
    3138:	00000000 	andeq	r0, r0, r0
    313c:	00038850 	andeq	r8, r3, r0, asr r8
    3140:	05de0600 	ldrbeq	r0, [lr, #1536]	@ 0x600
    3144:	2e030116 	mcrcs	1, 0, r0, cr3, cr6, {0}
    3148:	51000019 	tstpl	r0, r9, lsl r0
    314c:	000002c9 	andeq	r0, r0, r9, asr #5
    3150:	2f05de06 	svccs	0x0005de06
    3154:	0000028b 	andeq	r0, r0, fp, lsl #5
    3158:	167b5200 	ldrbtne	r5, [fp], -r0, lsl #4
    315c:	08ec0000 	stmiaeq	ip!, {}^	@ <UNPREDICTABLE>
    3160:	08ee0800 	stmiaeq	lr!, {fp}^
    3164:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3168:	194b0100 	stmdbne	fp, {r8}^
    316c:	8e530000 	cdphi	0, 5, cr0, cr3, cr0, {0}
    3170:	01000016 	tsteq	r0, r6, lsl r0
    3174:	2e540050 	mrccs	0, 2, r0, cr4, cr0, {2}
    3178:	54000015 	strpl	r0, [r0], #-21	@ 0xffffffeb
    317c:	e408000a 	str	r0, [r8], #-10
    3180:	c008000b 	andgt	r0, r8, fp
    3184:	01000014 	tsteq	r0, r4, lsl r0
    3188:	00001a28 	andeq	r1, r0, r8, lsr #20
    318c:	0015412c 	andseq	r4, r5, ip, lsr #2
    3190:	0014e800 	andseq	lr, r4, r0, lsl #16
    3194:	0014e000 	andseq	lr, r4, r0
    3198:	154d2c00 	strbne	r2, [sp, #-3072]	@ 0xfffff400
    319c:	15280000 	strne	r0, [r8, #-0]!
    31a0:	15220000 	strne	r0, [r2, #-0]!
    31a4:	592c0000 	stmdbpl	ip!, {}	@ <UNPREDICTABLE>
    31a8:	5a000015 	bpl	3204 <__Stack_Size+0x2204>
    31ac:	54000015 	strpl	r0, [r0], #-21	@ 0xffffffeb
    31b0:	55000015 	strpl	r0, [r0, #-21]	@ 0xffffffeb
    31b4:	0000152e 	andeq	r1, r0, lr, lsr #10
    31b8:	08000a66 	stmdaeq	r0, {r1, r2, r5, r6, r9, fp}
    31bc:	0a660000 	beq	19831c4 <__Stack_Size+0x19821c4>
    31c0:	0bc80800 	bleq	ff2051c8 <BootRAM+0xe175969>
    31c4:	33040800 	movwcc	r0, #18432	@ 0x4800
    31c8:	15412c06 	strbne	r2, [r1, #-3078]	@ 0xfffff3fa
    31cc:	158a0000 	strne	r0, [sl]
    31d0:	15860000 	strne	r0, [r6]
    31d4:	4d2c0000 	stcmi	0, cr0, [ip, #-0]
    31d8:	ad000015 	stcge	0, cr0, [r0, #-84]	@ 0xffffffac
    31dc:	ab000015 	blge	3238 <__Stack_Size+0x2238>
    31e0:	2c000015 	stccs	0, cr0, [r0], {21}
    31e4:	00001559 	andeq	r1, r0, r9, asr r5
    31e8:	000015c7 	andeq	r1, r0, r7, asr #11
    31ec:	000015c3 	andeq	r1, r0, r3, asr #11
    31f0:	0018a72b 	andseq	sl, r8, fp, lsr #14
    31f4:	000a7200 	andeq	r7, sl, r0, lsl #4
    31f8:	72000108 	andvc	r0, r0, #8, 2
    31fc:	7e08000a 	cdpvc	0, 0, cr0, cr8, cr10, {0}
    3200:	0408000a 	streq	r0, [r8], #-10
    3204:	1a100739 	bne	404ef0 <__Stack_Size+0x403ef0>
    3208:	b92c0000 	stmdblt	ip!, {}	@ <UNPREDICTABLE>
    320c:	ea000018 	b	3274 <__Stack_Size+0x2274>
    3210:	e8000015 	stmda	r0, {r0, r2, r4}
    3214:	2c000015 	stccs	0, cr0, [r0], {21}
    3218:	000018c5 	andeq	r1, r0, r5, asr #17
    321c:	00001600 	andeq	r1, r0, r0, lsl #12
    3220:	000015fe 	strdeq	r1, [r0], -lr
    3224:	000a7e2d 	andeq	r7, sl, sp, lsr #28
    3228:	000e9d08 	andeq	r9, lr, r8, lsl #26
    322c:	50012e00 	andpl	r2, r1, r0, lsl #28
    3230:	012e3101 			@ <UNDEFINED> instruction: 0x012e3101
    3234:	e8740351 	ldmda	r4!, {r0, r4, r6, r8, r9}^
    3238:	27000000 	strcs	r0, [r0, -r0]
    323c:	0000170c 	andeq	r1, r0, ip, lsl #14
    3240:	08000bbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, fp}
    3244:	0bbc0002 	bleq	fef03254 <BootRAM+0xde739f5>
    3248:	0bc00800 	bleq	ff005250 <BootRAM+0xdf759f1>
    324c:	4e040800 	cdpmi	8, 0, cr0, cr4, cr0, {0}
    3250:	56000015 			@ <UNDEFINED> instruction: 0x56000015
    3254:	000011d1 	ldrdeq	r1, [r0], -r1	@ <UNPREDICTABLE>
    3258:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
    325c:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
    3260:	01007d02 	tsteq	r0, r2, lsl #26
    3264:	00170c27 	andseq	r0, r7, r7, lsr #24
    3268:	000d2c00 	andeq	r2, sp, r0, lsl #24
    326c:	2c000208 	sfmcs	f0, 4, [r0], {8}
    3270:	3008000d 	andcc	r0, r8, sp
    3274:	0408000d 	streq	r0, [r8], #-13
    3278:	d1270664 			@ <UNDEFINED> instruction: 0xd1270664
    327c:	38000011 	stmdacc	r0, {r0, r4}
    3280:	0008000d 	andeq	r0, r8, sp
    3284:	000d3800 	andeq	r3, sp, r0, lsl #16
    3288:	000d4608 	andeq	r4, sp, r8, lsl #12
    328c:	06630408 	strbteq	r0, [r3], -r8, lsl #8
    3290:	011c0000 	tsteq	ip, r0
    3294:	00020000 	andeq	r0, r2, r0
    3298:	00000c3c 	andeq	r0, r0, ip, lsr ip
    329c:	00120104 	andseq	r0, r2, r4, lsl #2
    32a0:	cc0c0000 	stcgt	0, cr0, [ip], {-0}
    32a4:	5800000b 	stmdapl	r0, {r0, r1, r3}
    32a8:	b0000001 	andlt	r0, r0, r1
    32ac:	cc08000f 	stcgt	0, cr0, [r8], {15}
    32b0:	3d08000f 	stccc	0, cr0, [r8, #-60]	@ 0xffffffc4
    32b4:	02000016 	andeq	r0, r0, #22
    32b8:	00f80601 	rscseq	r0, r8, r1, lsl #12
    32bc:	02020000 	andeq	r0, r2, #0
    32c0:	0001b905 	andeq	fp, r1, r5, lsl #18
    32c4:	05040200 	streq	r0, [r4, #-512]	@ 0xfffffe00
    32c8:	000001a5 	andeq	r0, r0, r5, lsr #3
    32cc:	a0050802 	andge	r0, r5, r2, lsl #16
    32d0:	02000001 	andeq	r0, r0, #1
    32d4:	00f60801 	rscseq	r0, r6, r1, lsl #16
    32d8:	02020000 	andeq	r0, r2, #0
    32dc:	0000ce07 	andeq	ip, r0, r7, lsl #28
    32e0:	01cf0300 	biceq	r0, pc, r0, lsl #6
    32e4:	34030000 	strcc	r0, [r3], #-0
    32e8:	00006519 	andeq	r6, r0, r9, lsl r5
    32ec:	004f0400 	subeq	r0, pc, r0, lsl #8
    32f0:	5b050000 	blpl	1432f8 <__Stack_Size+0x1422f8>
    32f4:	02000000 	andeq	r0, r0, #0
    32f8:	01360704 	teqeq	r6, r4, lsl #14
    32fc:	08020000 	stmdaeq	r2, {}	@ <UNPREDICTABLE>
    3300:	00013107 	andeq	r3, r1, r7, lsl #2
    3304:	05040600 	streq	r0, [r4, #-1536]	@ 0xfffffa00
    3308:	00746e69 	rsbseq	r6, r4, r9, ror #28
    330c:	3b070402 	blcc	1c431c <__Stack_Size+0x1c331c>
    3310:	07000001 	streq	r0, [r0, -r1]
    3314:	016d0210 	cmneq	sp, r0, lsl r2
    3318:	0000cc09 	andeq	ip, r0, r9, lsl #24
    331c:	0be00800 	bleq	ff805324 <BootRAM+0xe775ac5>
    3320:	6f020000 	svcvs	0x00020000
    3324:	005b1101 	subseq	r1, fp, r1, lsl #2
    3328:	23020000 	movwcs	r0, #8192	@ 0x2000
    332c:	0be50800 	bleq	ff945334 <BootRAM+0xe8b5ad5>
    3330:	70020000 	andvc	r0, r2, r0
    3334:	005b1101 	subseq	r1, fp, r1, lsl #2
    3338:	23020000 	movwcs	r0, #8192	@ 0x2000
    333c:	41560904 	cmpmi	r6, r4, lsl #18
    3340:	7102004c 	tstvc	r2, ip, asr #32
    3344:	005b1101 	subseq	r1, fp, r1, lsl #2
    3348:	23020000 	movwcs	r0, #8192	@ 0x2000
    334c:	0bda0808 	bleq	ff685374 <BootRAM+0xe5f5b15>
    3350:	72020000 	andvc	r0, r2, #0
    3354:	00601101 	rsbeq	r1, r0, r1, lsl #2
    3358:	23020000 	movwcs	r0, #8192	@ 0x2000
    335c:	fa0a000c 	blx	283394 <__Stack_Size+0x282394>
    3360:	0200000b 	andeq	r0, r0, #11
    3364:	81030173 	tsthi	r3, r3, ror r1
    3368:	0b000000 	bleq	3370 <__Stack_Size+0x2370>
    336c:	0000090f 	andeq	r0, r0, pc, lsl #18
    3370:	5b1a0504 	blpl	684788 <__Stack_Size+0x683788>
    3374:	01000000 	mrseq	r0, (UNDEF: 0)
    3378:	00d90c01 	sbcseq	r0, r9, r1, lsl #24
    337c:	04010000 	streq	r0, [r1], #-0
    3380:	e4030513 	str	r0, [r3], #-1299	@ 0xfffffaed
    3384:	0d200000 	stceq	0, cr0, [r0, #-0]
    3388:	000bea01 	andeq	lr, fp, r1, lsl #20
    338c:	060c0100 	streq	r0, [ip], -r0, lsl #2
    3390:	08000fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp}
    3394:	08000fcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, fp}
    3398:	01007d02 	tsteq	r0, r2, lsl #26
    339c:	00e1010d 	rsceq	r0, r1, sp, lsl #2
    33a0:	06010000 	streq	r0, [r1], -r0
    33a4:	000fb006 	andeq	fp, pc, r6
    33a8:	000fbe08 	andeq	fp, pc, r8, lsl #28
    33ac:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    33b0:	14130001 	ldrne	r0, [r3], #-1
    33b4:	00020000 	andeq	r0, r2, r0
    33b8:	00000cfd 	strdeq	r0, [r0], -sp
    33bc:	00120104 	andseq	r0, r2, r4, lsl #2
    33c0:	dd0c0000 	stcle	0, cr0, [ip, #-0]
    33c4:	5800000c 	stmdapl	r0, {r2, r3}
    33c8:	cc000001 	stcgt	0, cr0, [r0], {1}
    33cc:	3408000f 	strcc	r0, [r8], #-15
    33d0:	fa080015 	blx	20342c <__Stack_Size+0x20242c>
    33d4:	02000016 	andeq	r0, r0, #22
    33d8:	00f80601 	rscseq	r0, r8, r1, lsl #12
    33dc:	02020000 	andeq	r0, r2, #0
    33e0:	0001b905 	andeq	fp, r1, r5, lsl #18
    33e4:	05040200 	streq	r0, [r4, #-512]	@ 0xfffffe00
    33e8:	000001a5 	andeq	r0, r0, r5, lsr #3
    33ec:	a0050802 	andge	r0, r5, r2, lsl #16
    33f0:	03000001 	movweq	r0, #1
    33f4:	000004a9 	andeq	r0, r0, r9, lsr #9
    33f8:	52182e06 	andspl	r2, r8, #6, 28	@ 0x60
    33fc:	04000000 	streq	r0, [r0], #-0
    3400:	00000041 	andeq	r0, r0, r1, asr #32
    3404:	f6080102 			@ <UNDEFINED> instruction: 0xf6080102
    3408:	03000000 	movweq	r0, #0
    340c:	00000587 	andeq	r0, r0, r7, lsl #11
    3410:	6f193106 	svcvs	0x00193106
    3414:	04000000 	streq	r0, [r0], #-0
    3418:	00000059 	andeq	r0, r0, r9, asr r0
    341c:	00005905 	andeq	r5, r0, r5, lsl #18
    3420:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3424:	000000ce 	andeq	r0, r0, lr, asr #1
    3428:	0001cf03 	andeq	ip, r1, r3, lsl #30
    342c:	19340600 	ldmdbne	r4!, {r9, sl}
    3430:	00000087 	andeq	r0, r0, r7, lsl #1
    3434:	00007604 	andeq	r7, r0, r4, lsl #12
    3438:	07040200 	streq	r0, [r4, -r0, lsl #4]
    343c:	00000136 	andeq	r0, r0, r6, lsr r1
    3440:	31070802 	tstcc	r7, r2, lsl #16
    3444:	06000001 	streq	r0, [r0], -r1
    3448:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    344c:	04020074 	streq	r0, [r2], #-116	@ 0xffffff8c
    3450:	00013b07 	andeq	r3, r1, r7, lsl #22
    3454:	051a0300 	ldreq	r0, [sl, #-768]	@ 0xfffffd00
    3458:	1d030000 	stcne	0, cr0, [r3, #-0]
    345c:	0000af0f 	andeq	sl, r0, pc, lsl #30
    3460:	b5040700 	strlt	r0, [r4, #-1792]	@ 0xfffff900
    3464:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
    3468:	0000c101 	andeq	ip, r0, r1, lsl #2
    346c:	00410900 	subeq	r0, r1, r0, lsl #18
    3470:	0a000000 	beq	3478 <__Stack_Size+0x2478>
    3474:	091e0308 	ldmdbeq	lr, {r3, r8, r9}
    3478:	00000116 	andeq	r0, r0, r6, lsl r1
    347c:	0002690b 	andeq	r6, r2, fp, lsl #18
    3480:	0b1f0300 	bleq	7c4088 <__Stack_Size+0x7c3088>
    3484:	00000041 	andeq	r0, r0, r1, asr #32
    3488:	0b002302 	bleq	c098 <__Stack_Size+0xb098>
    348c:	00000686 	andeq	r0, r0, r6, lsl #13
    3490:	410b2003 	tstmi	fp, r3
    3494:	02000000 	andeq	r0, r0, #0
    3498:	ff0b0123 			@ <UNDEFINED> instruction: 0xff0b0123
    349c:	03000002 	movweq	r0, #2
    34a0:	00590c21 	subseq	r0, r9, r1, lsr #24
    34a4:	23020000 	movwcs	r0, #8192	@ 0x2000
    34a8:	02050b02 	andeq	r0, r5, #2048	@ 0x800
    34ac:	22030000 	andcs	r0, r3, #0
    34b0:	0000590c 	andeq	r5, r0, ip, lsl #18
    34b4:	04230200 	strteq	r0, [r3], #-512	@ 0xfffffe00
    34b8:	00065c0b 	andeq	r5, r6, fp, lsl #24
    34bc:	0c230300 	stceq	3, cr0, [r3], #-0
    34c0:	00000059 	andeq	r0, r0, r9, asr r0
    34c4:	00062302 	andeq	r2, r6, r2, lsl #6
    34c8:	0006f903 	andeq	pc, r6, r3, lsl #18
    34cc:	02240300 	eoreq	r0, r4, #0, 6
    34d0:	000000c1 	andeq	r0, r0, r1, asr #1
    34d4:	2501050c 	strcs	r0, [r1, #-1292]	@ 0xfffffaf4
    34d8:	07000000 	streq	r0, [r0, -r0]
    34dc:	02690158 	rsbeq	r0, r9, #88, 2
    34e0:	480d0000 	stmdami	sp, {}	@ <UNPREDICTABLE>
    34e4:	72000006 	andvc	r0, r0, #6
    34e8:	0007da0d 	andeq	sp, r7, sp, lsl #20
    34ec:	060d7300 	streq	r7, [sp], -r0, lsl #6
    34f0:	74000003 	strvc	r0, [r0], #-3
    34f4:	0004e90d 	andeq	lr, r4, sp, lsl #18
    34f8:	330d7500 	movwcc	r7, #54528	@ 0xd500
    34fc:	76000007 	strvc	r0, [r0], -r7
    3500:	00077a0d 	andeq	r7, r7, sp, lsl #20
    3504:	210d7b00 	tstcs	sp, r0, lsl #22
    3508:	7c000007 	stcvc	0, cr0, [r0], {7}
    350c:	0002dc0d 	andeq	sp, r2, sp, lsl #24
    3510:	bd0d7e00 	stclt	14, cr7, [sp, #-0]
    3514:	7f000006 	svcvc	0x00000006
    3518:	0004c50e 	andeq	ip, r4, lr, lsl #10
    351c:	110e0000 	mrsne	r0, (UNDEF: 14)
    3520:	01000005 	tsteq	r0, r5
    3524:	0008250e 	andeq	r2, r8, lr, lsl #10
    3528:	be0e0200 	cdplt	2, 0, cr0, cr14, cr0, {0}
    352c:	03000005 	movweq	r0, #5
    3530:	0002840e 	andeq	r8, r2, lr, lsl #8
    3534:	f60e0400 			@ <UNDEFINED> instruction: 0xf60e0400
    3538:	05000002 	streq	r0, [r0, #-2]
    353c:	0002990e 	andeq	r9, r2, lr, lsl #18
    3540:	7b0e0600 	blvc	384d48 <__Stack_Size+0x383d48>
    3544:	07000006 	streq	r0, [r0, -r6]
    3548:	0004420e 	andeq	r4, r4, lr, lsl #4
    354c:	c80e0800 	stmdagt	lr, {fp}
    3550:	09000007 	stmdbeq	r0, {r0, r1, r2}
    3554:	0004f70e 	andeq	pc, r4, lr, lsl #14
    3558:	960e0a00 	strls	r0, [lr], -r0, lsl #20
    355c:	0b000004 	bleq	3574 <__Stack_Size+0x2574>
    3560:	00024a0e 	andeq	r4, r2, lr, lsl #20
    3564:	3a0e0c00 	bcc	38656c <__Stack_Size+0x38556c>
    3568:	0d000005 	stceq	0, cr0, [r0, #-20]	@ 0xffffffec
    356c:	0003750e 	andeq	r7, r3, lr, lsl #10
    3570:	a60e0e00 	strge	r0, [lr], -r0, lsl #28
    3574:	0f000007 	svceq	0x00000007
    3578:	00046c0e 	andeq	r6, r4, lr, lsl #24
    357c:	200e1000 	andcs	r1, lr, r0
    3580:	11000002 	tstne	r0, r2
    3584:	0008030e 	andeq	r0, r8, lr, lsl #6
    3588:	d90e1200 	stmdble	lr, {r9, ip}
    358c:	13000003 	movwne	r0, #3
    3590:	0001f00e 	andeq	pc, r1, lr
    3594:	a90e1400 	stmdbge	lr, {sl, ip}
    3598:	15000003 	strne	r0, [r0, #-3]
    359c:	0002120e 	andeq	r1, r2, lr, lsl #4
    35a0:	6d0e1600 	stcvs	6, cr1, [lr, #-0]
    35a4:	17000007 	strne	r0, [r0, -r7]
    35a8:	0003460e 	andeq	r4, r3, lr, lsl #12
    35ac:	9d0e1800 	stcls	8, cr1, [lr, #-0]
    35b0:	19000005 	stmdbne	r0, {r0, r2}
    35b4:	00069e0e 	andeq	r9, r6, lr, lsl #28
    35b8:	640e1a00 	strvs	r1, [lr], #-2560	@ 0xfffff600
    35bc:	1b000006 	blne	35dc <__Stack_Size+0x25dc>
    35c0:	0006d80e 	andeq	sp, r6, lr, lsl #16
    35c4:	8c0e1c00 	stchi	12, cr1, [lr], {-0}
    35c8:	1d000004 	stcne	0, cr0, [r0, #-16]
    35cc:	0002400e 	andeq	r4, r2, lr
    35d0:	5b0e1e00 	blpl	38add8 <__Stack_Size+0x389dd8>
    35d4:	1f000005 	svcne	0x00000005
    35d8:	0006b00e 	andeq	fp, r6, lr
    35dc:	4d0e2000 	stcmi	0, cr2, [lr, #-0]
    35e0:	21000004 	tstcs	r0, r4
    35e4:	0002330e 	andeq	r3, r2, lr, lsl #6
    35e8:	5d0e2200 	sfmpl	f2, 4, [lr, #-0]
    35ec:	23000003 	movwcs	r0, #3
    35f0:	00078b0e 	andeq	r8, r7, lr, lsl #22
    35f4:	300e2400 	andcc	r2, lr, r0, lsl #8
    35f8:	25000006 	strcs	r0, [r0, #-6]
    35fc:	0004000e 	andeq	r0, r4, lr
    3600:	190e2600 	stmdbne	lr, {r9, sl, sp}
    3604:	27000008 	strcs	r0, [r0, -r8]
    3608:	0002bf0e 	andeq	fp, r2, lr, lsl #30
    360c:	af0e2800 	svcge	0x000e2800
    3610:	29000005 	stmdbcs	r0, {r0, r2}
    3614:	0004b60e 	andeq	fp, r4, lr, lsl #12
    3618:	03002a00 	movweq	r2, #2560	@ 0xa00
    361c:	000003ed 	andeq	r0, r0, sp, ror #7
    3620:	22039007 	andcs	r9, r3, #7
    3624:	0f000001 	svceq	0x00000001
    3628:	84050e04 	strhi	r0, [r5], #-3588	@ 0xfffff1fc
    362c:	00034d09 	andeq	r4, r3, r9, lsl #26
    3630:	032b0b00 			@ <UNDEFINED> instruction: 0x032b0b00
    3634:	86050000 	strhi	r0, [r5], -r0
    3638:	00035d11 	andeq	r5, r3, r1, lsl sp
    363c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3640:	0005cc0b 	andeq	ip, r5, fp, lsl #24
    3644:	11870500 	orrne	r0, r7, r0, lsl #10
    3648:	00000362 	andeq	r0, r0, r2, ror #6
    364c:	0b202302 	bleq	80c25c <__Stack_Size+0x80b25c>
    3650:	00000786 	andeq	r0, r0, r6, lsl #15
    3654:	5d118805 	ldcpl	8, cr8, [r1, #-20]	@ 0xffffffec
    3658:	03000003 	movweq	r0, #3
    365c:	0b018023 	bleq	636f0 <__Stack_Size+0x626f0>
    3660:	00000354 	andeq	r0, r0, r4, asr r3
    3664:	62118905 	andsvs	r8, r1, #81920	@ 0x14000
    3668:	03000003 	movweq	r0, #3
    366c:	0b01a023 	bleq	6b700 <__Stack_Size+0x6a700>
    3670:	000007e9 	andeq	r0, r0, r9, ror #15
    3674:	5d118a05 	vldrpl	s16, [r1, #-20]	@ 0xffffffec
    3678:	03000003 	movweq	r0, #3
    367c:	0b028023 	bleq	a3710 <__Stack_Size+0xa2710>
    3680:	000005e0 	andeq	r0, r0, r0, ror #11
    3684:	62118b05 	andsvs	r8, r1, #5120	@ 0x1400
    3688:	03000003 	movweq	r0, #3
    368c:	0b02a023 	bleq	ab720 <__Stack_Size+0xaa720>
    3690:	00000530 	andeq	r0, r0, r0, lsr r5
    3694:	5d118c05 	ldcpl	12, cr8, [r1, #-20]	@ 0xffffffec
    3698:	03000003 	movweq	r0, #3
    369c:	0b038023 	bleq	e3730 <__Stack_Size+0xe2730>
    36a0:	000005ea 	andeq	r0, r0, sl, ror #11
    36a4:	62118d05 	andsvs	r8, r1, #320	@ 0x140
    36a8:	03000003 	movweq	r0, #3
    36ac:	0b03a023 	bleq	eb740 <__Stack_Size+0xea740>
    36b0:	00000795 	muleq	r0, r5, r7
    36b4:	5d118e05 	ldcpl	14, cr8, [r1, #-20]	@ 0xffffffec
    36b8:	03000003 	movweq	r0, #3
    36bc:	0b048023 	bleq	123750 <__Stack_Size+0x122750>
    36c0:	000005f4 	strdeq	r0, [r0], -r4
    36c4:	72118f05 	andsvc	r8, r1, #5, 30
    36c8:	03000003 	movweq	r0, #3
    36cc:	1004a023 	andne	sl, r4, r3, lsr #32
    36d0:	05005049 	streq	r5, [r0, #-73]	@ 0xffffffb7
    36d4:	03921190 	orrseq	r1, r2, #144, 2	@ 0x24
    36d8:	23030000 	movwcs	r0, #12288	@ 0x3000
    36dc:	fe0b0680 	cdp2	6, 0, cr0, cr11, cr0, {4}
    36e0:	05000005 	streq	r0, [r0, #-5]
    36e4:	03971191 	orrseq	r1, r7, #1073741860	@ 0x40000024
    36e8:	23030000 	movwcs	r0, #12288	@ 0x3000
    36ec:	aa0b07f0 	bge	2c56b4 <__Stack_Size+0x2c46b4>
    36f0:	05000005 	streq	r0, [r0, #-5]
    36f4:	00821192 	umulleq	r1, r2, r2, r1
    36f8:	23030000 	movwcs	r0, #12288	@ 0x3000
    36fc:	11001c80 	smlabbne	r0, r0, ip, r1
    3700:	00000082 	andeq	r0, r0, r2, lsl #1
    3704:	0000035d 	andeq	r0, r0, sp, asr r3
    3708:	00009c12 	andeq	r9, r0, r2, lsl ip
    370c:	04000700 	streq	r0, [r0], #-1792	@ 0xfffff900
    3710:	0000034d 	andeq	r0, r0, sp, asr #6
    3714:	00007611 	andeq	r7, r0, r1, lsl r6
    3718:	00037200 	andeq	r7, r3, r0, lsl #4
    371c:	009c1200 	addseq	r1, ip, r0, lsl #4
    3720:	00170000 	andseq	r0, r7, r0
    3724:	00007611 	andeq	r7, r0, r1, lsl r6
    3728:	00038200 	andeq	r8, r3, r0, lsl #4
    372c:	009c1200 	addseq	r1, ip, r0, lsl #4
    3730:	00370000 	eorseq	r0, r7, r0
    3734:	00004d11 	andeq	r4, r0, r1, lsl sp
    3738:	00039200 	andeq	r9, r3, r0, lsl #4
    373c:	009c1200 	addseq	r1, ip, r0, lsl #4
    3740:	00ef0000 	rsceq	r0, pc, r0
    3744:	00038204 	andeq	r8, r3, r4, lsl #4
    3748:	00761100 	rsbseq	r1, r6, r0, lsl #2
    374c:	03a80000 			@ <UNDEFINED> instruction: 0x03a80000
    3750:	9c130000 	ldcls	0, cr0, [r3], {-0}
    3754:	83000000 	movwhi	r0, #0
    3758:	8f030002 	svchi	0x00030002
    375c:	05000006 	streq	r0, [r0, #-6]
    3760:	02750493 	rsbseq	r0, r5, #-1828716544	@ 0x93000000
    3764:	1c140000 	ldcne	0, cr0, [r4], {-0}
    3768:	09017907 	stmdbeq	r1, {r0, r1, r2, r8, fp, ip, sp, lr}
    376c:	0000042f 	andeq	r0, r0, pc, lsr #8
    3770:	4c524315 	mrrcmi	3, 1, r4, r2, cr5
    3774:	017b0700 	cmneq	fp, r0, lsl #14
    3778:	00008211 	andeq	r8, r0, r1, lsl r2
    377c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3780:	48524315 	ldmdami	r2, {r0, r2, r4, r8, r9, lr}^
    3784:	017c0700 	cmneq	ip, r0, lsl #14
    3788:	00008211 	andeq	r8, r0, r1, lsl r2
    378c:	04230200 	strteq	r0, [r3], #-512	@ 0xfffffe00
    3790:	52444915 	subpl	r4, r4, #344064	@ 0x54000
    3794:	017d0700 	cmneq	sp, r0, lsl #14
    3798:	00008211 	andeq	r8, r0, r1, lsl r2
    379c:	08230200 	stmdaeq	r3!, {r9}
    37a0:	52444f15 	subpl	r4, r4, #21, 30	@ 0x54
    37a4:	017e0700 	cmneq	lr, r0, lsl #14
    37a8:	00008211 	andeq	r8, r0, r1, lsl r2
    37ac:	0c230200 	sfmeq	f0, 4, [r3], #-0
    37b0:	00008b16 	andeq	r8, r0, r6, lsl fp
    37b4:	017f0700 	cmneq	pc, r0, lsl #14
    37b8:	00008211 	andeq	r8, r0, r1, lsl r2
    37bc:	10230200 	eorne	r0, r3, r0, lsl #4
    37c0:	52524215 	subspl	r4, r2, #1342177281	@ 0x50000001
    37c4:	01800700 	orreq	r0, r0, r0, lsl #14
    37c8:	00008211 	andeq	r8, r0, r1, lsl r2
    37cc:	14230200 	strtne	r0, [r3], #-512	@ 0xfffffe00
    37d0:	0001eb16 	andeq	lr, r1, r6, lsl fp
    37d4:	01810700 	orreq	r0, r1, r0, lsl #14
    37d8:	00008211 	andeq	r8, r0, r1, lsl r2
    37dc:	18230200 	stmdane	r3!, {r9}
    37e0:	00b21700 	adcseq	r1, r2, r0, lsl #14
    37e4:	82070000 	andhi	r0, r7, #0
    37e8:	03b40301 			@ <UNDEFINED> instruction: 0x03b40301
    37ec:	28140000 	ldmdacs	r4, {}	@ <UNPREDICTABLE>
    37f0:	0901bb07 	stmdbeq	r1, {r0, r1, r2, r8, r9, fp, ip, sp, pc}
    37f4:	000004e6 	andeq	r0, r0, r6, ror #9
    37f8:	00524315 	subseq	r4, r2, r5, lsl r3
    37fc:	1101bd07 	tstne	r1, r7, lsl #26
    3800:	00000082 	andeq	r0, r0, r2, lsl #1
    3804:	16002302 	strne	r2, [r0], -r2, lsl #6
    3808:	0000000d 	andeq	r0, r0, sp
    380c:	1101be07 	tstne	r1, r7, lsl #28
    3810:	00000082 	andeq	r0, r0, r2, lsl #1
    3814:	15042302 	strne	r2, [r4, #-770]	@ 0xfffffcfe
    3818:	00524943 	subseq	r4, r2, r3, asr #18
    381c:	1101bf07 	tstne	r1, r7, lsl #30
    3820:	00000082 	andeq	r0, r0, r2, lsl #1
    3824:	16082302 	strne	r2, [r8], -r2, lsl #6
    3828:	00000123 	andeq	r0, r0, r3, lsr #2
    382c:	1101c007 	tstne	r1, r7
    3830:	00000082 	andeq	r0, r0, r2, lsl #1
    3834:	160c2302 	strne	r2, [ip], -r2, lsl #6
    3838:	0000010d 	andeq	r0, r0, sp, lsl #2
    383c:	1101c107 	tstne	r1, r7, lsl #2
    3840:	00000082 	andeq	r0, r0, r2, lsl #1
    3844:	16102302 	ldrne	r2, [r0], -r2, lsl #6
    3848:	00000090 	muleq	r0, r0, r0
    384c:	1101c207 	tstne	r1, r7, lsl #4
    3850:	00000082 	andeq	r0, r0, r2, lsl #1
    3854:	16142302 	ldrne	r2, [r4], -r2, lsl #6
    3858:	00000000 	andeq	r0, r0, r0
    385c:	1101c307 	tstne	r1, r7, lsl #6
    3860:	00000082 	andeq	r0, r0, r2, lsl #1
    3864:	16182302 	ldrne	r2, [r8], -r2, lsl #6
    3868:	0000011b 	andeq	r0, r0, fp, lsl r1
    386c:	1101c407 	tstne	r1, r7, lsl #8
    3870:	00000082 	andeq	r0, r0, r2, lsl #1
    3874:	161c2302 	ldrne	r2, [ip], -r2, lsl #6
    3878:	00000008 	andeq	r0, r0, r8
    387c:	1101c507 	tstne	r1, r7, lsl #10
    3880:	00000082 	andeq	r0, r0, r2, lsl #1
    3884:	15202302 	strne	r2, [r0, #-770]!	@ 0xfffffcfe
    3888:	00525343 	subseq	r5, r2, r3, asr #6
    388c:	1101c607 	tstne	r1, r7, lsl #12
    3890:	00000082 	andeq	r0, r0, r2, lsl #1
    3894:	00242302 	eoreq	r2, r4, r2, lsl #6
    3898:	0001c317 	andeq	ip, r1, r7, lsl r3
    389c:	01c90700 	biceq	r0, r9, r0, lsl #14
    38a0:	00043c03 	andeq	r3, r4, r3, lsl #24
    38a4:	071c1400 	ldreq	r1, [ip, -r0, lsl #8]
    38a8:	6c09022a 	sfmvs	f0, 4, [r9], {42}	@ 0x2a
    38ac:	15000005 	strne	r0, [r0, #-5]
    38b0:	07005253 	smlsdeq	r0, r3, r2, r5
    38b4:	8211022c 	andshi	r0, r1, #44, 4	@ 0xc0000002
    38b8:	02000000 	andeq	r0, r0, #0
    38bc:	44150023 	ldrmi	r0, [r5], #-35	@ 0xffffffdd
    38c0:	2d070052 	stccs	0, cr0, [r7, #-328]	@ 0xfffffeb8
    38c4:	00821102 	addeq	r1, r2, r2, lsl #2
    38c8:	23020000 	movwcs	r0, #8192	@ 0x2000
    38cc:	52421504 	subpl	r1, r2, #4, 10	@ 0x1000000
    38d0:	2e070052 	mcrcs	0, 0, r0, cr7, cr2, {2}
    38d4:	00821102 	addeq	r1, r2, r2, lsl #2
    38d8:	23020000 	movwcs	r0, #8192	@ 0x2000
    38dc:	52431508 	subpl	r1, r3, #8, 10	@ 0x2000000
    38e0:	2f070031 	svccs	0x00070031
    38e4:	00821102 	addeq	r1, r2, r2, lsl #2
    38e8:	23020000 	movwcs	r0, #8192	@ 0x2000
    38ec:	5243150c 	subpl	r1, r3, #12, 10	@ 0x3000000
    38f0:	30070032 	andcc	r0, r7, r2, lsr r0
    38f4:	00821102 	addeq	r1, r2, r2, lsl #2
    38f8:	23020000 	movwcs	r0, #8192	@ 0x2000
    38fc:	52431510 	subpl	r1, r3, #16, 10	@ 0x4000000
    3900:	31070033 	tstcc	r7, r3, lsr r0
    3904:	00821102 	addeq	r1, r2, r2, lsl #2
    3908:	23020000 	movwcs	r0, #8192	@ 0x2000
    390c:	0c5a1614 	mrrceq	6, 1, r1, sl, cr4
    3910:	32070000 	andcc	r0, r7, #0
    3914:	00821102 	addeq	r1, r2, r2, lsl #2
    3918:	23020000 	movwcs	r0, #8192	@ 0x2000
    391c:	80170018 	andshi	r0, r7, r8, lsl r0
    3920:	0700000c 	streq	r0, [r0, -ip]
    3924:	f3030233 	vqsub.u8	d0, d3, d19
    3928:	14000004 	strne	r0, [r0], #-4
    392c:	02390754 	eorseq	r0, r9, #84, 14	@ 0x1500000
    3930:	00072409 	andeq	r2, r7, r9, lsl #8
    3934:	04211600 	strteq	r1, [r1], #-1536	@ 0xfffffa00
    3938:	3b070000 	blcc	1c3940 <__Stack_Size+0x1c2940>
    393c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3940:	23020000 	movwcs	r0, #8192	@ 0x2000
    3944:	05cc1600 	strbeq	r1, [ip, #1536]	@ 0x600
    3948:	3c070000 	stccc	0, cr0, [r7], {-0}
    394c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3950:	23020000 	movwcs	r0, #8192	@ 0x2000
    3954:	045a1602 	ldrbeq	r1, [sl], #-1538	@ 0xfffff9fe
    3958:	3d070000 	stccc	0, cr0, [r7, #-0]
    395c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3960:	23020000 	movwcs	r0, #8192	@ 0x2000
    3964:	05d61604 	ldrbeq	r1, [r6, #1540]	@ 0x604
    3968:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    396c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3970:	23020000 	movwcs	r0, #8192	@ 0x2000
    3974:	04b11606 	ldrteq	r1, [r1], #1542	@ 0x606
    3978:	3f070000 	svccc	0x00070000
    397c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3980:	23020000 	movwcs	r0, #8192	@ 0x2000
    3984:	05e01608 	strbeq	r1, [r0, #1544]!	@ 0x608
    3988:	40070000 	andmi	r0, r7, r0
    398c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3990:	23020000 	movwcs	r0, #8192	@ 0x2000
    3994:	04e4160a 	strbteq	r1, [r4], #1546	@ 0x60a
    3998:	41070000 	mrsmi	r0, (UNDEF: 7)
    399c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    39a0:	23020000 	movwcs	r0, #8192	@ 0x2000
    39a4:	05ea160c 	strbeq	r1, [sl, #1548]!	@ 0x60c
    39a8:	42070000 	andmi	r0, r7, #0
    39ac:	00651102 	rsbeq	r1, r5, r2, lsl #2
    39b0:	23020000 	movwcs	r0, #8192	@ 0x2000
    39b4:	0535160e 	ldreq	r1, [r5, #-1550]!	@ 0xfffff9f2
    39b8:	43070000 	movwmi	r0, #28672	@ 0x7000
    39bc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    39c0:	23020000 	movwcs	r0, #8192	@ 0x2000
    39c4:	05f41610 	ldrbeq	r1, [r4, #1552]!	@ 0x610
    39c8:	44070000 	strmi	r0, [r7], #-0
    39cc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    39d0:	23020000 	movwcs	r0, #8192	@ 0x2000
    39d4:	05c71612 	strbeq	r1, [r7, #1554]	@ 0x612
    39d8:	45070000 	strmi	r0, [r7, #-0]
    39dc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    39e0:	23020000 	movwcs	r0, #8192	@ 0x2000
    39e4:	05fe1614 	ldrbeq	r1, [lr, #1556]!	@ 0x614
    39e8:	46070000 	strmi	r0, [r7], -r0
    39ec:	00651102 	rsbeq	r1, r5, r2, lsl #2
    39f0:	23020000 	movwcs	r0, #8192	@ 0x2000
    39f4:	06711616 			@ <UNDEFINED> instruction: 0x06711616
    39f8:	47070000 	strmi	r0, [r7, -r0]
    39fc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a00:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a04:	06081618 			@ <UNDEFINED> instruction: 0x06081618
    3a08:	48070000 	stmdami	r7, {}	@ <UNPREDICTABLE>
    3a0c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a10:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a14:	06f4161a 	usateq	r1, #20, sl, lsl #12
    3a18:	49070000 	stmdbmi	r7, {}	@ <UNPREDICTABLE>
    3a1c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a20:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a24:	080f161c 	stmdaeq	pc, {r2, r3, r4, r9, sl, ip}	@ <UNPREDICTABLE>
    3a28:	4a070000 	bmi	1c3a30 <__Stack_Size+0x1c2a30>
    3a2c:	07341102 	ldreq	r1, [r4, -r2, lsl #2]!
    3a30:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a34:	0699161e 			@ <UNDEFINED> instruction: 0x0699161e
    3a38:	4b070000 	blmi	1c3a40 <__Stack_Size+0x1c2a40>
    3a3c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a40:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a44:	06121640 	ldreq	r1, [r2], -r0, asr #12
    3a48:	4c070000 	stcmi	0, cr0, [r7], {-0}
    3a4c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a50:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a54:	03261642 			@ <UNDEFINED> instruction: 0x03261642
    3a58:	4d070000 	stcmi	0, cr0, [r7, #-0]
    3a5c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a60:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a64:	061c1644 	ldreq	r1, [ip], -r4, asr #12
    3a68:	4e070000 	cdpmi	0, 0, cr0, cr7, cr0, {0}
    3a6c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a70:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a74:	4e461546 	cdpmi	5, 4, cr1, cr6, cr6, {2}
    3a78:	4f070052 	svcmi	0x00070052
    3a7c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a80:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a84:	06261648 	strteq	r1, [r6], -r8, asr #12
    3a88:	50070000 	andpl	r0, r7, r0
    3a8c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3a90:	23020000 	movwcs	r0, #8192	@ 0x2000
    3a94:	03a3164a 			@ <UNDEFINED> instruction: 0x03a3164a
    3a98:	51070000 	mrspl	r0, (UNDEF: 7)
    3a9c:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3aa0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3aa4:	03b7164c 			@ <UNDEFINED> instruction: 0x03b7164c
    3aa8:	52070000 	andpl	r0, r7, #0
    3aac:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3ab0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3ab4:	07b9164e 	ldreq	r1, [r9, lr, asr #12]!
    3ab8:	53070000 	movwpl	r0, #28672	@ 0x7000
    3abc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3ac0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3ac4:	08311650 	ldmdaeq	r1!, {r4, r6, r9, sl, ip}
    3ac8:	54070000 	strpl	r0, [r7], #-0
    3acc:	00651102 	rsbeq	r1, r5, r2, lsl #2
    3ad0:	23020000 	movwcs	r0, #8192	@ 0x2000
    3ad4:	65110052 	ldrvs	r0, [r1, #-82]	@ 0xffffffae
    3ad8:	34000000 	strcc	r0, [r0], #-0
    3adc:	12000007 	andne	r0, r0, #7
    3ae0:	0000009c 	muleq	r0, ip, r0
    3ae4:	24040010 	strcs	r0, [r4], #-16
    3ae8:	17000007 	strne	r0, [r0, -r7]
    3aec:	00000397 	muleq	r0, r7, r3
    3af0:	03025507 	movweq	r5, #9479	@ 0x2507
    3af4:	00000579 	andeq	r0, r0, r9, ror r5
    3af8:	0201020f 	andeq	r0, r1, #-268435456	@ 0xf0000000
    3afc:	077c1248 	ldrbeq	r1, [ip, -r8, asr #4]!
    3b00:	73100000 	tstvc	r0, #0
    3b04:	49020074 	stmdbmi	r2, {r2, r4, r5, r6}
    3b08:	00004d14 	andeq	r4, r0, r4, lsl sp
    3b0c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3b10:	006e6510 	rsbeq	r6, lr, r0, lsl r5
    3b14:	4d174902 	vldrmi.16	s8, [r7, #-4]	@ <UNPREDICTABLE>
    3b18:	02000000 	andeq	r0, r0, #0
    3b1c:	61100123 	tstvs	r0, r3, lsr #2
    3b20:	02007272 	andeq	r7, r0, #536870919	@ 0x20000007
    3b24:	0791144a 	ldreq	r1, [r1, sl, asr #8]
    3b28:	23020000 	movwcs	r0, #8192	@ 0x2000
    3b2c:	46040002 	strmi	r0, [r4], -r2
    3b30:	11000007 	tstne	r0, r7
    3b34:	0000004d 	andeq	r0, r0, sp, asr #32
    3b38:	00000791 	muleq	r0, r1, r7
    3b3c:	00009c12 	andeq	r9, r0, r2, lsl ip
    3b40:	0400ff00 	streq	pc, [r0], #-3840	@ 0xfffff100
    3b44:	00000781 	andeq	r0, r0, r1, lsl #15
    3b48:	000d0003 	andeq	r0, sp, r3
    3b4c:	024b0200 	subeq	r0, fp, #0, 4
    3b50:	0000077c 	andeq	r0, r0, ip, ror r7
    3b54:	000c4818 	andeq	r4, ip, r8, lsl r8
    3b58:	149e0200 	ldrne	r0, [lr], #512	@ 0x200
    3b5c:	00000796 	muleq	r0, r6, r7
    3b60:	00e80305 	rsceq	r0, r8, r5, lsl #6
    3b64:	f7182000 			@ <UNDEFINED> instruction: 0xf7182000
    3b68:	0200000c 	andeq	r0, r0, #12
    3b6c:	0796149f 			@ <UNDEFINED> instruction: 0x0796149f
    3b70:	03050000 	movweq	r0, #20480	@ 0x5000
    3b74:	200001ea 	andcs	r0, r0, sl, ror #3
    3b78:	00090f19 	andeq	r0, r9, r9, lsl pc
    3b7c:	1a050400 	bne	144b84 <__Stack_Size+0x143b84>
    3b80:	00000082 	andeq	r0, r0, r2, lsl #1
    3b84:	2f1a0101 	svccs	0x001a0101
    3b88:	0700000c 	streq	r0, [r0, -ip]
    3b8c:	1e081a01 	vmlane.f32	s2, s16, s2
    3b90:	0b000008 	bleq	3bb8 <__Stack_Size+0x2bb8>
    3b94:	00000c0f 	andeq	r0, r0, pc, lsl #24
    3b98:	760c1b01 	strvc	r1, [ip], -r1, lsl #22
    3b9c:	02000000 	andeq	r0, r0, #0
    3ba0:	240b0023 	strcs	r0, [fp], #-35	@ 0xffffffdd
    3ba4:	0100000d 	tsteq	r0, sp
    3ba8:	00410b1c 	subeq	r0, r1, ip, lsl fp
    3bac:	23020000 	movwcs	r0, #8192	@ 0x2000
    3bb0:	0cc00b04 	vstmiaeq	r0, {d16-d17}
    3bb4:	1d010000 	stcne	0, cr0, [r1, #-0]
    3bb8:	0000410b 	andeq	r4, r0, fp, lsl #2
    3bbc:	05230200 	streq	r0, [r3, #-512]!	@ 0xfffffe00
    3bc0:	000cee0b 	andeq	lr, ip, fp, lsl #28
    3bc4:	0b1e0100 	bleq	783fcc <__Stack_Size+0x782fcc>
    3bc8:	00000041 	andeq	r0, r0, r1, asr #32
    3bcc:	00062302 	andeq	r2, r6, r2, lsl #6
    3bd0:	0007d404 	andeq	sp, r7, r4, lsl #8
    3bd4:	0c071b00 			@ <UNDEFINED> instruction: 0x0c071b00
    3bd8:	21010000 	mrscs	r0, (UNDEF: 1)
    3bdc:	00081e20 	andeq	r1, r8, r0, lsr #28
    3be0:	03050100 	movweq	r0, #20736	@ 0x5100
    3be4:	20000013 	andcs	r0, r0, r3, lsl r0
    3be8:	000d1a1b 	andeq	r1, sp, fp, lsl sl
    3bec:	20270100 	eorcs	r0, r7, r0, lsl #2
    3bf0:	0000081e 	andeq	r0, r0, lr, lsl r8
    3bf4:	0c030501 	cfstr32eq	mvfx0, [r3], {1}
    3bf8:	1b200000 	blne	803c00 <__Stack_Size+0x802c00>
    3bfc:	00000cd5 	ldrdeq	r0, [r0], -r5
    3c00:	630f3101 	movwvs	r3, #61697	@ 0xf101
    3c04:	01000008 	tsteq	r0, r8
    3c08:	02ec0305 	rsceq	r0, ip, #335544320	@ 0x14000000
    3c0c:	01022000 	mrseq	r2, (UNDEF: 2)
    3c10:	0000ff08 	andeq	pc, r0, r8, lsl #30
    3c14:	085c0400 	ldmdaeq	ip, {sl}^
    3c18:	241b0000 	ldrcs	r0, [fp], #-0
    3c1c:	0100000c 	tsteq	r0, ip
    3c20:	00821332 	addeq	r1, r2, r2, lsr r3
    3c24:	05010000 	streq	r0, [r1, #-0]
    3c28:	0002f003 	andeq	pc, r2, r3
    3c2c:	0c511820 	mrrceq	8, 2, r1, r1, cr0	@ <UNPREDICTABLE>
    3c30:	97010000 	strls	r0, [r1, -r0]
    3c34:	00085c0d 	andeq	r5, r8, sp, lsl #24
    3c38:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    3c3c:	1c200002 	stcne	0, cr0, [r0], #-8
    3c40:	00036701 	andeq	r6, r3, r1, lsl #14
    3c44:	06b30300 	ldrteq	r0, [r3], r0, lsl #6
    3c48:	08ac0101 	stmiaeq	ip!, {r0, r8}
    3c4c:	41090000 	mrsmi	r0, (UNDEF: 9)
    3c50:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
    3c54:	000008ac 	andeq	r0, r0, ip, lsr #17
    3c58:	00005909 	andeq	r5, r0, r9, lsl #18
    3c5c:	04070000 	streq	r0, [r7], #-0
    3c60:	0000006a 	andeq	r0, r0, sl, rrx
    3c64:	063c011c 			@ <UNDEFINED> instruction: 0x063c011c
    3c68:	29030000 	stmdbcs	r3, {}	@ <UNPREDICTABLE>
    3c6c:	d6010106 	strle	r0, [r1], -r6, lsl #2
    3c70:	09000008 	stmdbeq	r0, {r3}
    3c74:	00000041 	andeq	r0, r0, r1, asr #32
    3c78:	00004109 	andeq	r4, r0, r9, lsl #2
    3c7c:	00590900 	subseq	r0, r9, r0, lsl #18
    3c80:	a3090000 	movwge	r0, #36864	@ 0x9000
    3c84:	00000000 	andeq	r0, r0, r0
    3c88:	047f011d 	ldrbteq	r0, [pc], #-285	@ 3c90 <__Stack_Size+0x2c90>
    3c8c:	c0030000 	andgt	r0, r3, r0
    3c90:	00950105 	addseq	r0, r5, r5, lsl #2
    3c94:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    3c98:	09000008 	stmdbeq	r0, {r3}
    3c9c:	00000041 	andeq	r0, r0, r1, asr #32
    3ca0:	0008f409 	andeq	pc, r8, r9, lsl #8
    3ca4:	04070000 	streq	r0, [r7], #-0
    3ca8:	00000059 	andeq	r0, r0, r9, asr r0
    3cac:	0c3e011e 	ldfeqs	f0, [lr], #-120	@ 0xffffff88
    3cb0:	df010000 	svcle	0x00010000
    3cb4:	13280106 			@ <UNDEFINED> instruction: 0x13280106
    3cb8:	13c40800 	bicne	r0, r4, #0, 16
    3cbc:	16180800 	ldrne	r0, [r8], -r0, lsl #16
    3cc0:	62010000 	andvs	r0, r1, #0
    3cc4:	1f000009 	svcne	0x00000009
    3cc8:	00667562 	rsbeq	r7, r6, r2, ror #10
    3ccc:	621adf01 	andsvs	sp, sl, #1, 30
    3cd0:	3e000009 	cdpcc	0, 0, cr0, cr0, cr9, {0}
    3cd4:	38000016 	stmdacc	r0, {r1, r2, r4}
    3cd8:	20000016 	andcs	r0, r0, r6, lsl r0
    3cdc:	00000cd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    3ce0:	9523df01 	strls	sp, [r3, #-3841]!	@ 0xfffff0ff
    3ce4:	72000000 	andvc	r0, r0, #0
    3ce8:	6c000016 	stcvs	0, cr0, [r0], {22}
    3cec:	21000016 	tstcs	r0, r6, lsl r0
    3cf0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    3cf4:	410be101 	tstmi	fp, r1, lsl #2
    3cf8:	a4000000 	strge	r0, [r0], #-0
    3cfc:	9e000016 	mcrls	0, 0, r0, cr0, cr6, {0}
    3d00:	22000016 	andcs	r0, r0, #22
    3d04:	000002c8 	andeq	r0, r0, r8, asr #5
    3d08:	01006923 	tsteq	r0, r3, lsr #18
    3d0c:	00950be4 	addseq	r0, r5, r4, ror #23
    3d10:	00000000 	andeq	r0, r0, r0
    3d14:	00410407 	subeq	r0, r1, r7, lsl #8
    3d18:	01240000 			@ <UNDEFINED> instruction: 0x01240000
    3d1c:	00000a03 	andeq	r0, r0, r3, lsl #20
    3d20:	c406a701 	strgt	sl, [r6], #-1793	@ 0xfffff8ff
    3d24:	34080013 	strcc	r0, [r8], #-19	@ 0xffffffed
    3d28:	ce080015 	mcrgt	0, 0, r0, cr8, cr5, {0}
    3d2c:	01000016 	tsteq	r0, r6, lsl r0
    3d30:	00000c82 	andeq	r0, r0, r2, lsl #25
    3d34:	66756225 	ldrbtvs	r6, [r5], -r5, lsr #4
    3d38:	15a90100 	strne	r0, [r9, #256]!	@ 0x100
    3d3c:	00000c82 	andeq	r0, r0, r2, lsl #25
    3d40:	b0910302 	addslt	r0, r1, r2, lsl #6
    3d44:	0cd0267f 	ldcleq	6, cr2, [r0], {127}	@ 0x7f
    3d48:	aa010000 	bge	43d50 <__Stack_Size+0x42d50>
    3d4c:	00009507 	andeq	r9, r0, r7, lsl #10
    3d50:	00171a00 	andseq	r1, r7, r0, lsl #20
    3d54:	00171400 	andseq	r1, r7, r0, lsl #8
    3d58:	12a52700 	adcne	r2, r5, #0, 14
    3d5c:	13d20000 	bicsne	r0, r2, #0
    3d60:	d2030800 	andle	r0, r3, #0, 16
    3d64:	d8080013 	stmdale	r8, {r0, r1, r4}
    3d68:	01080013 	tsteq	r8, r3, lsl r0
    3d6c:	09ce0aac 	stmibeq	lr, {r2, r3, r5, r7, r9, fp}^
    3d70:	b8280000 	stmdalt	r8!, {}	@ <UNPREDICTABLE>
    3d74:	4a000012 	bmi	3dc4 <__Stack_Size+0x2dc4>
    3d78:	48000017 	stmdami	r0, {r0, r1, r2, r4}
    3d7c:	00000017 	andeq	r0, r0, r7, lsl r0
    3d80:	0012f027 	andseq	pc, r2, r7, lsr #32
    3d84:	00140000 	andseq	r0, r4, r0
    3d88:	14000108 	strne	r0, [r0], #-264	@ 0xfffffef8
    3d8c:	14060800 	strne	r0, [r6], #-2048	@ 0xfffff800
    3d90:	b3010800 	movwlt	r0, #6144	@ 0x1800
    3d94:	000a0f09 	andeq	r0, sl, r9, lsl #30
    3d98:	13162800 	tstne	r6, #0, 16
    3d9c:	17640000 	strbne	r0, [r4, -r0]!
    3da0:	17620000 	strbne	r0, [r2, -r0]!
    3da4:	0a280000 	beq	a03dac <__Stack_Size+0xa02dac>
    3da8:	79000013 	stmdbvc	r0, {r0, r1, r4}
    3dac:	77000017 	smladvc	r0, r7, r0, r0
    3db0:	28000017 	stmdacs	r0, {r0, r1, r2, r4}
    3db4:	000012fe 	strdeq	r1, [r0], -lr
    3db8:	0000178e 	andeq	r1, r0, lr, lsl #15
    3dbc:	0000178c 	andeq	r1, r0, ip, lsl #15
    3dc0:	12f02900 	rscsne	r2, r0, #0, 18
    3dc4:	14b40000 	ldrtne	r0, [r4], #0
    3dc8:	e0010800 	and	r0, r1, r0, lsl #16
    3dcc:	01000002 	tsteq	r0, r2
    3dd0:	0a5509b8 	beq	15464b8 <__Stack_Size+0x15454b8>
    3dd4:	16280000 	strtne	r0, [r8], -r0
    3dd8:	a5000013 	strge	r0, [r0, #-19]	@ 0xffffffed
    3ddc:	a3000017 	movwge	r0, #23
    3de0:	28000017 	stmdacs	r0, {r0, r1, r2, r4}
    3de4:	0000130a 	andeq	r1, r0, sl, lsl #6
    3de8:	000017ba 			@ <UNDEFINED> instruction: 0x000017ba
    3dec:	000017b8 			@ <UNDEFINED> instruction: 0x000017b8
    3df0:	0012fe28 	andseq	pc, r2, r8, lsr #28
    3df4:	0017cf00 	andseq	ip, r7, r0, lsl #30
    3df8:	0017cd00 	andseq	ip, r7, r0, lsl #26
    3dfc:	140a2a00 	strne	r2, [sl], #-2560	@ 0xfffff600
    3e00:	088d0800 	stmeq	sp, {fp}
    3e04:	29000000 	stmdbcs	r0, {}	@ <UNPREDICTABLE>
    3e08:	00000e06 	andeq	r0, r0, r6, lsl #28
    3e0c:	0800140a 	stmdaeq	r0, {r1, r3, sl, ip}
    3e10:	0002f802 	andeq	pc, r2, r2, lsl #16
    3e14:	03bf0100 			@ <UNDEFINED> instruction: 0x03bf0100
    3e18:	00000c0e 	andeq	r0, r0, lr, lsl #24
    3e1c:	000e1428 	andeq	r1, lr, r8, lsr #8
    3e20:	0017ee00 	andseq	lr, r7, r0, lsl #28
    3e24:	0017e400 	andseq	lr, r7, r0, lsl #8
    3e28:	02f82200 	rscseq	r2, r8, #0, 4
    3e2c:	202b0000 	eorcs	r0, fp, r0
    3e30:	0200000e 	andeq	r0, r0, #14
    3e34:	2d2c5091 	stccs	0, cr5, [ip, #-580]!	@ 0xfffffdbc
    3e38:	3600000e 	strcc	r0, [r0], -lr
    3e3c:	30000018 	andcc	r0, r0, r8, lsl r0
    3e40:	27000018 	smladcs	r0, r8, r0, r0
    3e44:	000012c5 	andeq	r1, r0, r5, asr #5
    3e48:	08001420 	stmdaeq	r0, {r5, sl, ip}
    3e4c:	00142001 	andseq	r2, r4, r1
    3e50:	00142808 	andseq	r2, r4, r8, lsl #16
    3e54:	25830108 	strcs	r0, [r3, #264]	@ 0x108
    3e58:	00000ada 	ldrdeq	r0, [r0], -sl
    3e5c:	0012e328 	andseq	lr, r2, r8, lsr #6
    3e60:	00186500 	andseq	r6, r8, r0, lsl #10
    3e64:	00185f00 	andseq	r5, r8, r0, lsl #30
    3e68:	12d72800 	sbcsne	r2, r7, #0, 16
    3e6c:	18940000 	ldmne	r4, {}	@ <UNPREDICTABLE>
    3e70:	18920000 	ldmne	r2, {}	@ <UNPREDICTABLE>
    3e74:	282d0000 	stmdacs	sp!, {}	@ <UNPREDICTABLE>
    3e78:	d6080014 			@ <UNDEFINED> instruction: 0xd6080014
    3e7c:	2e000008 	cdpcs	0, 0, cr0, cr0, cr8, {0}
    3e80:	35015001 	strcc	r5, [r1, #-1]
    3e84:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    3e88:	00005091 	muleq	r0, r1, r0
    3e8c:	0012a527 	andseq	sl, r2, r7, lsr #10
    3e90:	00143e00 	andseq	r3, r4, r0, lsl #28
    3e94:	143e0108 	ldrtne	r0, [lr], #-264	@ 0xfffffef8
    3e98:	14480800 	strbne	r0, [r8], #-2048	@ 0xfffff800
    3e9c:	8d010800 	stchi	8, cr0, [r1, #-0]
    3ea0:	000b0109 	andeq	r0, fp, r9, lsl #2
    3ea4:	12b82800 	adcsne	r2, r8, #0, 16
    3ea8:	18aa0000 	stmiane	sl!, {}	@ <UNPREDICTABLE>
    3eac:	18a80000 	stmiane	r8!, {}	@ <UNPREDICTABLE>
    3eb0:	27000000 	strcs	r0, [r0, -r0]
    3eb4:	000012c5 	andeq	r1, r0, r5, asr #5
    3eb8:	08001452 	stmdaeq	r0, {r1, r4, r6, sl, ip}
    3ebc:	00145201 	andseq	r5, r4, r1, lsl #4
    3ec0:	00145c08 	andseq	r5, r4, r8, lsl #24
    3ec4:	0e8e0108 	rmfeqe	f0, f6, #0.0
    3ec8:	00000b45 	andeq	r0, r0, r5, asr #22
    3ecc:	0012e328 	andseq	lr, r2, r8, lsr #6
    3ed0:	0018c800 	andseq	ip, r8, r0, lsl #16
    3ed4:	0018c200 	andseq	ip, r8, r0, lsl #4
    3ed8:	12d72800 	sbcsne	r2, r7, #0, 16
    3edc:	18f70000 	ldmne	r7!, {}^	@ <UNPREDICTABLE>
    3ee0:	18f50000 	ldmne	r5!, {}^	@ <UNPREDICTABLE>
    3ee4:	5c2d0000 	stcpl	0, cr0, [sp], #-0
    3ee8:	d6080014 			@ <UNDEFINED> instruction: 0xd6080014
    3eec:	2e000008 	cdpcs	0, 0, cr0, cr0, cr8, {0}
    3ef0:	91025101 	tstls	r2, r1, lsl #2
    3ef4:	27000050 	smlsdcs	r0, r0, r0, r0
    3ef8:	000012c5 	andeq	r1, r0, r5, asr #5
    3efc:	080014d2 	stmdaeq	r0, {r1, r4, r6, r7, sl, ip}
    3f00:	0014d201 	andseq	sp, r4, r1, lsl #4
    3f04:	0014da08 	andseq	sp, r4, r8, lsl #20
    3f08:	25870108 	strcs	r0, [r7, #264]	@ 0x108
    3f0c:	00000b8e 	andeq	r0, r0, lr, lsl #23
    3f10:	0012e328 	andseq	lr, r2, r8, lsr #6
    3f14:	00191000 	andseq	r1, r9, r0
    3f18:	00190a00 	andseq	r0, r9, r0, lsl #20
    3f1c:	12d72800 	sbcsne	r2, r7, #0, 16
    3f20:	193f0000 	ldmdbne	pc!, {}	@ <UNPREDICTABLE>
    3f24:	193d0000 	ldmdbne	sp!, {}	@ <UNPREDICTABLE>
    3f28:	da2d0000 	ble	b43f30 <__Stack_Size+0xb42f30>
    3f2c:	d6080014 			@ <UNDEFINED> instruction: 0xd6080014
    3f30:	2e000008 	cdpcs	0, 0, cr0, cr0, cr8, {0}
    3f34:	33015001 	movwcc	r5, #4097	@ 0x1001
    3f38:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    3f3c:	00005091 	muleq	r0, r1, r0
    3f40:	000ff32f 	andeq	pc, pc, pc, lsr #6
    3f44:	0014e600 	andseq	lr, r4, r0, lsl #12
    3f48:	03100208 	tsteq	r0, #8, 4	@ 0x80000000
    3f4c:	89010000 	stmdbhi	r1, {}	@ <UNPREDICTABLE>
    3f50:	12c52705 	sbcne	r2, r5, #1310720	@ 0x140000
    3f54:	14f80000 	ldrbtne	r0, [r8], #0
    3f58:	f8010800 			@ <UNDEFINED> instruction: 0xf8010800
    3f5c:	02080014 	andeq	r0, r8, #20
    3f60:	01080015 	tsteq	r8, r5, lsl r0
    3f64:	0be80c92 	bleq	ffa071b4 <BootRAM+0xe977955>
    3f68:	e3280000 			@ <UNDEFINED> instruction: 0xe3280000
    3f6c:	59000012 	stmdbpl	r0, {r1, r4}
    3f70:	53000019 	movwpl	r0, #25
    3f74:	28000019 	stmdacs	r0, {r0, r3, r4}
    3f78:	000012d7 	ldrdeq	r1, [r0], -r7
    3f7c:	00001988 	andeq	r1, r0, r8, lsl #19
    3f80:	00001986 	andeq	r1, r0, r6, lsl #19
    3f84:	0015002d 	andseq	r0, r5, sp, lsr #32
    3f88:	0008d608 	andeq	sp, r8, r8, lsl #12
    3f8c:	50012e00 	andpl	r2, r1, r0, lsl #28
    3f90:	012e3501 			@ <UNDEFINED> instruction: 0x012e3501
    3f94:	50910251 	addspl	r0, r1, r1, asr r2
    3f98:	64300000 	ldrtvs	r0, [r0], #-0
    3f9c:	2e080014 	mcrcs	0, 0, r0, cr8, cr4, {0}
    3fa0:	fc000011 	stc2	0, cr0, [r0], {17}
    3fa4:	2e00000b 	cdpcs	0, 0, cr0, cr0, cr11, {0}
    3fa8:	91025001 	tstls	r2, r1
    3fac:	082d0050 	stmdaeq	sp!, {r4, r6}
    3fb0:	fa080015 	blx	20400c <__Stack_Size+0x20300c>
    3fb4:	2e000008 	cdpcs	0, 0, cr0, cr0, cr8, {0}
    3fb8:	91025001 	tstls	r2, r1
    3fbc:	00000050 	andeq	r0, r0, r0, asr r0
    3fc0:	000ff331 	andeq	pc, pc, r1, lsr r3	@ <UNPREDICTABLE>
    3fc4:	00146a00 	andseq	r6, r4, r0, lsl #20
    3fc8:	146a0108 	strbtne	r0, [sl], #-264	@ 0xfffffef8
    3fcc:	146e0800 	strbtne	r0, [lr], #-2048	@ 0xfffff800
    3fd0:	c3010800 	movwgt	r0, #6144	@ 0x1800
    3fd4:	14003009 	strne	r3, [r0], #-9
    3fd8:	107e0800 	rsbsne	r0, lr, r0, lsl #16
    3fdc:	0c3d0000 	ldceq	0, cr0, [sp], #-0
    3fe0:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    3fe4:	007d0250 	rsbseq	r0, sp, r0, asr r2
    3fe8:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    3fec:	30000075 	andcc	r0, r0, r5, ror r0
    3ff0:	08001482 	stmdaeq	r0, {r1, r7, sl, ip}
    3ff4:	00000f7a 	andeq	r0, r0, sl, ror pc
    3ff8:	00000c51 	andeq	r0, r0, r1, asr ip
    3ffc:	0250012e 	subseq	r0, r0, #-2147483637	@ 0x8000000b
    4000:	30000070 	andcc	r0, r0, r0, ror r0
    4004:	080014b4 	stmdaeq	r0, {r2, r4, r5, r7, sl, ip}
    4008:	0000107e 	andeq	r1, r0, lr, ror r0
    400c:	00000c6b 	andeq	r0, r0, fp, ror #24
    4010:	0250012e 	subseq	r0, r0, #-2147483637	@ 0x8000000b
    4014:	012e007d 			@ <UNDEFINED> instruction: 0x012e007d
    4018:	00750251 	rsbseq	r0, r5, r1, asr r2
    401c:	14c42d00 	strbne	r2, [r4], #3328	@ 0xd00
    4020:	107e0800 	rsbsne	r0, lr, r0, lsl #16
    4024:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4028:	007d0250 	rsbseq	r0, sp, r0, asr r2
    402c:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    4030:	00000075 	andeq	r0, r0, r5, ror r0
    4034:	00004111 	andeq	r4, r0, r1, lsl r1
    4038:	000c9200 	andeq	r9, ip, r0, lsl #4
    403c:	009c1200 	addseq	r1, ip, r0, lsl #4
    4040:	001f0000 	andseq	r0, pc, r0
    4044:	0b570124 	bleq	15c44dc <__Stack_Size+0x15c34dc>
    4048:	99010000 	stmdbls	r1, {}	@ <UNPREDICTABLE>
    404c:	00126806 	andseq	r6, r2, r6, lsl #16
    4050:	00132808 	andseq	r2, r3, r8, lsl #16
    4054:	00199c08 	andseq	r9, r9, r8, lsl #24
    4058:	0e060100 	adfeqs	f0, f6, f0
    405c:	be320000 	cdplt	0, 3, cr0, cr2, cr0, {0}
    4060:	3300000c 	movwcc	r0, #12
    4064:	0000012c 	andeq	r0, r0, ip, lsr #2
    4068:	76039a01 	strvc	r9, [r3], -r1, lsl #20
    406c:	00000000 	andeq	r0, r0, r0
    4070:	00027034 	andeq	r7, r2, r4, lsr r0
    4074:	000cdc00 	andeq	sp, ip, r0, lsl #24
    4078:	012c2600 			@ <UNDEFINED> instruction: 0x012c2600
    407c:	9a010000 	bls	44084 <__Stack_Size+0x43084>
    4080:	00007603 	andeq	r7, r0, r3, lsl #12
    4084:	0019c000 	andseq	ip, r9, r0
    4088:	0019bc00 	andseq	fp, r9, r0, lsl #24
    408c:	ee320000 	cdp	0, 3, cr0, cr2, cr0, {0}
    4090:	3300000c 	movwcc	r0, #12
    4094:	0000012c 	andeq	r0, r0, ip, lsr #2
    4098:	76039a01 	strvc	r9, [r3], -r1, lsl #20
    409c:	00000000 	andeq	r0, r0, r0
    40a0:	00029034 	andeq	r9, r2, r4, lsr r0
    40a4:	000d0c00 	andeq	r0, sp, r0, lsl #24
    40a8:	012c2600 			@ <UNDEFINED> instruction: 0x012c2600
    40ac:	9a010000 	bls	440b4 <__Stack_Size+0x430b4>
    40b0:	00007603 	andeq	r7, r0, r3, lsl #12
    40b4:	0019e500 	andseq	lr, r9, r0, lsl #10
    40b8:	0019df00 	andseq	sp, r9, r0, lsl #30
    40bc:	23290000 			@ <UNDEFINED> instruction: 0x23290000
    40c0:	c6000013 			@ <UNDEFINED> instruction: 0xc6000013
    40c4:	01080012 	tsteq	r8, r2, lsl r0
    40c8:	000002a8 	andeq	r0, r0, r8, lsr #5
    40cc:	2f039a01 	svccs	0x00039a01
    40d0:	2800000d 	stmdacs	r0, {r0, r2, r3}
    40d4:	00001332 	andeq	r1, r0, r2, lsr r3
    40d8:	00001a15 	andeq	r1, r0, r5, lsl sl
    40dc:	00001a13 	andeq	r1, r0, r3, lsl sl
    40e0:	12d23000 	sbcsne	r3, r2, #0
    40e4:	08b20800 	ldmeq	r2!, {fp}
    40e8:	0d530000 	ldcleq	0, cr0, [r3, #-0]
    40ec:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    40f0:	83090250 	movwhi	r0, #37456	@ 0x9250
    40f4:	0151012e 	cmpeq	r1, lr, lsr #2
    40f8:	52012e33 	andpl	r2, r1, #816	@ 0x330
    40fc:	012e3801 			@ <UNDEFINED> instruction: 0x012e3801
    4100:	00740253 	rsbseq	r0, r4, r3, asr r2
    4104:	12de3000 	sbcsne	r3, lr, #0
    4108:	08b20800 	ldmeq	r2!, {fp}
    410c:	0d780000 	ldcleq	0, cr0, [r8, #-0]
    4110:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4114:	81090250 	tsthi	r9, r0, asr r2
    4118:	0151012e 	cmpeq	r1, lr, lsr #2
    411c:	52012e32 	andpl	r2, r1, #800	@ 0x320
    4120:	2e007602 	cfmadd32cs	mvax0, mvfx7, mvfx0, mvfx2
    4124:	74025301 	strvc	r5, [r2], #-769	@ 0xfffffcff
    4128:	ea300000 	b	c04130 <__Stack_Size+0xc03130>
    412c:	b2080012 	andlt	r0, r8, #18
    4130:	9c000008 	stcls	0, cr0, [r0], {8}
    4134:	2e00000d 	cdpcs	0, 0, cr0, cr0, cr13, {0}
    4138:	31015001 	tstcc	r1, r1
    413c:	0151012e 	cmpeq	r1, lr, lsr #2
    4140:	52012e32 	andpl	r2, r1, #800	@ 0x320
    4144:	2e007602 	cfmadd32cs	mvax0, mvfx7, mvfx0, mvfx2
    4148:	74025301 	strvc	r5, [r2], #-769	@ 0xfffffcff
    414c:	f6300000 			@ <UNDEFINED> instruction: 0xf6300000
    4150:	b2080012 	andlt	r0, r8, #18
    4154:	c0000008 	andgt	r0, r0, r8
    4158:	2e00000d 	cdpcs	0, 0, cr0, cr0, cr13, {0}
    415c:	09025001 	stmdbeq	r2, {r0, ip, lr}
    4160:	51012e84 	smlabbpl	r1, r4, lr, r2
    4164:	012e3301 			@ <UNDEFINED> instruction: 0x012e3301
    4168:	2e380152 	mrccs	1, 1, r0, cr8, cr2, {2}
    416c:	74025301 	strvc	r5, [r2], #-769	@ 0xfffffcff
    4170:	02300000 	eorseq	r0, r0, #0
    4174:	b2080013 	andlt	r0, r8, #19
    4178:	e5000008 	str	r0, [r0, #-8]
    417c:	2e00000d 	cdpcs	0, 0, cr0, cr0, cr13, {0}
    4180:	09025001 	stmdbeq	r2, {r0, ip, lr}
    4184:	51012e82 	smlabbpl	r1, r2, lr, r2
    4188:	012e3201 			@ <UNDEFINED> instruction: 0x012e3201
    418c:	00760252 	rsbseq	r0, r6, r2, asr r2
    4190:	0253012e 	subseq	r0, r3, #-2147483637	@ 0x8000000b
    4194:	2d000074 	stccs	0, cr0, [r0, #-464]	@ 0xfffffe30
    4198:	0800130e 	stmdaeq	r0, {r1, r2, r3, r8, r9, ip}
    419c:	000008b2 			@ <UNDEFINED> instruction: 0x000008b2
    41a0:	0150012e 	cmpeq	r0, lr, lsr #2
    41a4:	51012e32 	tstpl	r1, r2, lsr lr
    41a8:	012e3201 			@ <UNDEFINED> instruction: 0x012e3201
    41ac:	00760252 	rsbseq	r0, r6, r2, asr r2
    41b0:	0253012e 	subseq	r0, r3, #-2147483637	@ 0x8000000b
    41b4:	00000074 	andeq	r0, r0, r4, ror r0
    41b8:	000c8e35 	andeq	r8, ip, r5, lsr lr
    41bc:	0d7d0100 	ldfeqe	f0, [sp, #-0]
    41c0:	0e3a0101 	rsfeqe	f0, f2, f1
    41c4:	ca360000 	bgt	d841cc <__Stack_Size+0xd831cc>
    41c8:	01000006 	tsteq	r0, r6
    41cc:	00411d7d 	subeq	r1, r1, sp, ror sp
    41d0:	62370000 	eorsvs	r0, r7, #0
    41d4:	01006675 	tsteq	r0, r5, ror r6
    41d8:	0c82157e 	cfstr32eq	mvfx1, [r2], {126}	@ 0x7e
    41dc:	33020000 	movwcc	r0, #8192	@ 0x2000
    41e0:	00000cd0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    41e4:	95077f01 	strls	r7, [r7, #-3841]	@ 0xfffff0ff
    41e8:	00000000 	andeq	r0, r0, r0
    41ec:	09320138 	ldmdbeq	r2!, {r3, r4, r5, r8}
    41f0:	5d010000 	stcpl	0, cr0, [r1, #-0]
    41f4:	085c0106 	ldmdaeq	ip, {r1, r2, r8}^
    41f8:	11e00000 	mvnne	r0, r0
    41fc:	12680800 	rsbne	r0, r8, #0, 16
    4200:	1a2a0800 	bne	a86208 <__Stack_Size+0xa85208>
    4204:	74010000 	strvc	r0, [r1], #-0
    4208:	1f00000f 	svcne	0x0000000f
    420c:	00716572 	rsbseq	r6, r1, r2, ror r5
    4210:	74285d01 	strtvc	r5, [r8], #-3329	@ 0xfffff2ff
    4214:	4e00000f 	cdpmi	0, 0, cr0, cr0, cr15, {0}
    4218:	4a00001a 	bmi	4288 <__Stack_Size+0x3288>
    421c:	2000001a 	andcs	r0, r0, sl, lsl r0
    4220:	0000040c 	andeq	r0, r0, ip, lsl #8
    4224:	59365d01 	ldmdbpl	r6!, {r0, r8, sl, fp, ip, lr}
    4228:	79000000 	stmdbvc	r0, {}	@ <UNPREDICTABLE>
    422c:	6f00001a 	svcvs	0x0000001a
    4230:	2000001a 	andcs	r0, r0, sl, lsl r0
    4234:	000006d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    4238:	59475d01 	stmdbpl	r7, {r0, r8, sl, fp, ip, lr}^
    423c:	c8000000 	stmdagt	r0, {}	@ <UNPREDICTABLE>
    4240:	be00001a 	mcrlt	0, 0, r0, cr0, cr10, {0}
    4244:	2700001a 	smladcs	r0, sl, r0, r0
    4248:	000012c5 	andeq	r1, r0, r5, asr #5
    424c:	080011fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, ip}
    4250:	0011fa01 	andseq	pc, r1, r1, lsl #20
    4254:	00120008 	andseq	r0, r2, r8
    4258:	09620108 	stmdbeq	r2!, {r3, r8}^
    425c:	00000edc 	ldrdeq	r0, [r0], -ip
    4260:	0012e328 	andseq	lr, r2, r8, lsr #6
    4264:	001b0f00 	andseq	r0, fp, r0, lsl #30
    4268:	001b0d00 	andseq	r0, fp, r0, lsl #26
    426c:	12d72800 	sbcsne	r2, r7, #0, 16
    4270:	1b290000 	blne	a44278 <__Stack_Size+0xa43278>
    4274:	1b270000 	blne	9c427c <__Stack_Size+0x9c327c>
    4278:	002d0000 	eoreq	r0, sp, r0
    427c:	d6080012 			@ <UNDEFINED> instruction: 0xd6080012
    4280:	2e000008 	cdpcs	0, 0, cr0, cr0, cr8, {0}
    4284:	03055101 	movweq	r5, #20737	@ 0x5101
    4288:	20000013 	andcs	r0, r0, r3, lsl r0
    428c:	c5270000 	strgt	r0, [r7, #-0]!
    4290:	16000012 			@ <UNDEFINED> instruction: 0x16000012
    4294:	01080012 	tsteq	r8, r2, lsl r0
    4298:	08001216 	stmdaeq	r0, {r1, r2, r4, r9, ip}
    429c:	08001220 	stmdaeq	r0, {r5, r9, ip}
    42a0:	25096801 	strcs	r6, [r9, #-2049]	@ 0xfffff7ff
    42a4:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    42a8:	000012e3 	andeq	r1, r0, r3, ror #5
    42ac:	00001b3f 	andeq	r1, r0, pc, lsr fp
    42b0:	00001b3d 	andeq	r1, r0, sp, lsr fp
    42b4:	0012d728 	andseq	sp, r2, r8, lsr #14
    42b8:	001b5900 	andseq	r5, fp, r0, lsl #18
    42bc:	001b5700 	andseq	r5, fp, r0, lsl #14
    42c0:	12202d00 	eorne	r2, r0, #0, 26
    42c4:	08d60800 	ldmeq	r6, {fp}^
    42c8:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    42cc:	2e310150 	mrccs	1, 1, r0, cr1, cr0, {2}
    42d0:	75025101 	strvc	r5, [r2, #-257]	@ 0xfffffeff
    42d4:	31000000 	mrscc	r0, (UNDEF: 0)
    42d8:	00000ff3 	strdeq	r0, [r0], -r3
    42dc:	0800122e 	stmdaeq	r0, {r1, r2, r3, r5, r9, ip}
    42e0:	00122e02 	andseq	r2, r2, r2, lsl #28
    42e4:	00122e08 	andseq	r2, r2, r8, lsl #28
    42e8:	0b6b0108 	bleq	1ac4710 <__Stack_Size+0x1ac3710>
    42ec:	000ff331 	andeq	pc, pc, r1, lsr r3	@ <UNPREDICTABLE>
    42f0:	00122e00 	andseq	r2, r2, r0, lsl #28
    42f4:	122e0608 	eorne	r0, lr, #8, 12	@ 0x800000
    42f8:	12320800 	eorsne	r0, r2, #0, 16
    42fc:	6f010800 	svcvs	0x00010800
    4300:	120e300b 	andne	r3, lr, #11
    4304:	0f7a0800 	svceq	0x007a0800
    4308:	0f630000 	svceq	0x00630000
    430c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4310:	00700250 	rsbseq	r0, r0, r0, asr r2
    4314:	12522d00 	subsne	r2, r2, #0, 26
    4318:	0f7a0800 	svceq	0x007a0800
    431c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4320:	00700250 	rsbseq	r0, r0, r0, asr r2
    4324:	04070000 	streq	r0, [r7], #-0
    4328:	00000116 	andeq	r0, r0, r6, lsl r1
    432c:	0cac0139 	stfeqs	f0, [ip], #228	@ 0xe4
    4330:	4a010000 	bmi	44338 <__Stack_Size+0x43338>
    4334:	96010106 	strls	r0, [r1], -r6, lsl #2
    4338:	3a00000f 	bcc	437c <__Stack_Size+0x337c>
    433c:	00676663 	rsbeq	r6, r7, r3, ror #12
    4340:	96304a01 	ldrtls	r4, [r0], -r1, lsl #20
    4344:	0000000f 	andeq	r0, r0, pc
    4348:	081e0407 	ldmdaeq	lr, {r0, r1, r2, sl}
    434c:	013b0000 	teqeq	fp, r0
    4350:	0000094e 	andeq	r0, r0, lr, asr #18
    4354:	01063901 	tsteq	r6, r1, lsl #18
    4358:	0000085c 	andeq	r0, r0, ip, asr r8
    435c:	08001140 	stmdaeq	r0, {r6, r8, ip}
    4360:	08001178 	stmdaeq	r0, {r3, r4, r5, r6, r8, ip}
    4364:	01007d02 	tsteq	r0, r2, lsl #26
    4368:	00000feb 	andeq	r0, r0, fp, ror #31
    436c:	7165721f 	cmnvc	r5, pc, lsl r2
    4370:	27390100 	ldrcs	r0, [r9, -r0, lsl #2]!
    4374:	00000f74 	andeq	r0, r0, r4, ror pc
    4378:	00001b75 	andeq	r1, r0, r5, ror fp
    437c:	00001b6d 	andeq	r1, r0, sp, ror #22
    4380:	00087d3c 	andeq	r7, r8, ip, lsr sp
    4384:	33390100 	teqcc	r9, #0, 2
    4388:	00000feb 	andeq	r0, r0, fp, ror #31
    438c:	d03c5101 	eorsle	r5, ip, r1, lsl #2
    4390:	0100000c 	tsteq	r0, ip
    4394:	08f44339 	ldmeq	r4!, {r0, r3, r4, r5, r8, r9, lr}^
    4398:	52010000 	andpl	r0, r1, #0
    439c:	f1040700 			@ <UNDEFINED> instruction: 0xf1040700
    43a0:	3d00000f 	stccc	0, cr0, [r0, #-60]	@ 0xffffffc4
    43a4:	87013e04 	strhi	r3, [r1, -r4, lsl #28]
    43a8:	04000009 	streq	r0, [r0], #-9
    43ac:	00761106 	rsbseq	r1, r6, r6, lsl #2
    43b0:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    43b4:	000ca101 	andeq	sl, ip, r1, lsl #2
    43b8:	06ba0200 	ldrteq	r0, [sl], r0, lsl #4
    43bc:	0010e801 	andseq	lr, r0, r1, lsl #16
    43c0:	00114008 	andseq	r4, r1, r8
    43c4:	001baf08 	andseq	sl, fp, r8, lsl #30
    43c8:	10780100 	rsbsne	r0, r8, r0, lsl #2
    43cc:	731f0000 	tstvc	pc, #0
    43d0:	02007274 	andeq	r7, r0, #116, 4	@ 0x40000007
    43d4:	107817ba 	ldrhtne	r1, [r8], #-122	@ 0xffffff86
    43d8:	1bd90000 	blne	ff6443e0 <BootRAM+0xe5b4b81>
    43dc:	1bcf0000 	blne	ff3c43e4 <BootRAM+0xe334b85>
    43e0:	6c1f0000 	ldcvs	0, cr0, [pc], {-0}
    43e4:	02006e65 	andeq	r6, r0, #1616	@ 0x650
    43e8:	004124ba 	strheq	r2, [r1], #-74	@ 0xffffffb6
    43ec:	1c1e0000 	ldcne	0, cr0, [lr], {-0}
    43f0:	1c180000 	ldcne	0, cr0, [r8], {-0}
    43f4:	a5290000 	strge	r0, [r9, #-0]!
    43f8:	14000012 	strne	r0, [r0], #-18	@ 0xffffffee
    43fc:	02080011 	andeq	r0, r8, #17
    4400:	00000240 	andeq	r0, r0, r0, asr #4
    4404:	670bbc02 	strvs	fp, [fp, -r2, lsl #24]
    4408:	28000010 	stmdacs	r0, {r4}
    440c:	000012b8 			@ <UNDEFINED> instruction: 0x000012b8
    4410:	00001c4b 	andeq	r1, r0, fp, asr #24
    4414:	00001c49 	andeq	r1, r0, r9, asr #24
    4418:	11282d00 			@ <UNDEFINED> instruction: 0x11282d00
    441c:	123b0800 	eorsne	r0, fp, #0, 16
    4420:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4424:	00760250 	rsbseq	r0, r6, r0, asr r2
    4428:	04070000 	streq	r0, [r7], #-0
    442c:	0000085c 	andeq	r0, r0, ip, asr r8
    4430:	0cb5011e 	ldfeqs	f0, [r5], #120	@ 0x78
    4434:	b3020000 	movwlt	r0, #8192	@ 0x2000
    4438:	10bc0106 	adcsne	r0, ip, r6, lsl #2
    443c:	10e80800 	rscne	r0, r8, r0, lsl #16
    4440:	1c630800 	stclne	8, cr0, [r3], #-0
    4444:	f5010000 			@ <UNDEFINED> instruction: 0xf5010000
    4448:	20000010 	andcs	r0, r0, r0, lsl r0
    444c:	0000087d 	andeq	r0, r0, sp, ror r8
    4450:	621ab302 	andsvs	fp, sl, #134217728	@ 0x8000000
    4454:	8b000009 	blhi	4480 <__Stack_Size+0x3480>
    4458:	8300001c 	movwhi	r0, #28
    445c:	1f00001c 	svcne	0x0000001c
    4460:	006e656c 	rsbeq	r6, lr, ip, ror #10
    4464:	4128b302 			@ <UNDEFINED> instruction: 0x4128b302
    4468:	c3000000 	movwgt	r0, #0
    446c:	c100001c 	tstgt	r0, ip, lsl r0
    4470:	2900001c 	stmdbcs	r0, {r2, r3, r4}
    4474:	000012a5 	andeq	r1, r0, r5, lsr #5
    4478:	080010ca 	stmdaeq	r0, {r1, r3, r6, r7, ip}
    447c:	00022802 	andeq	r2, r2, r2, lsl #16
    4480:	0bb50200 	bleq	fed44c88 <BootRAM+0xdcb5429>
    4484:	000010e4 	andeq	r1, r0, r4, ror #1
    4488:	0012b828 	andseq	fp, r2, r8, lsr #16
    448c:	001cd800 	andseq	sp, ip, r0, lsl #16
    4490:	001cd600 	andseq	sp, ip, r0, lsl #12
    4494:	de2d0000 	cdple	0, 2, cr0, cr13, cr0, {0}
    4498:	3b080010 	blcc	2044e0 <__Stack_Size+0x2034e0>
    449c:	2e000012 	mcrcs	0, 0, r0, cr0, cr2, {0}
    44a0:	76025001 	strvc	r5, [r2], -r1
    44a4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    44a8:	000c9601 	andeq	r9, ip, r1, lsl #12
    44ac:	06af0200 	strteq	r0, [pc], r0, lsl #4
    44b0:	00109401 	andseq	r9, r0, r1, lsl #8
    44b4:	0010bc08 	andseq	fp, r0, r8, lsl #24
    44b8:	001cf008 	andseq	pc, ip, r8
    44bc:	112e0100 			@ <UNDEFINED> instruction: 0x112e0100
    44c0:	731f0000 	tstvc	pc, #0
    44c4:	02007274 	andeq	r7, r0, #116, 4	@ 0x40000007
    44c8:	107817af 	rsbsne	r1, r8, pc, lsr #15
    44cc:	1d180000 	ldcne	0, cr0, [r8, #-0]
    44d0:	1d100000 	ldcne	0, cr0, [r0, #-0]
    44d4:	a82a0000 	stmdage	sl!, {}	@ <UNPREDICTABLE>
    44d8:	0d080010 	stceq	0, cr0, [r8, #-64]	@ 0xffffffc0
    44dc:	00000012 	andeq	r0, r0, r2, lsl r0
    44e0:	0c18011e 	ldfeqs	f0, [r8], {30}
    44e4:	ab020000 	blge	844ec <__Stack_Size+0x834ec>
    44e8:	10680106 	rsbne	r0, r8, r6, lsl #2
    44ec:	10940800 	addsne	r0, r4, r0, lsl #16
    44f0:	1d500800 	ldclne	8, cr0, [r0, #-0]
    44f4:	82010000 	andhi	r0, r1, #0
    44f8:	20000011 	andcs	r0, r0, r1, lsl r0
    44fc:	0000087d 	andeq	r0, r0, sp, ror r8
    4500:	621bab02 	andsvs	sl, fp, #2048	@ 0x800
    4504:	78000009 	stmdavc	r0, {r0, r3}
    4508:	7000001d 	andvc	r0, r0, sp, lsl r0
    450c:	1f00001d 	svcne	0x0000001d
    4510:	006e656c 	rsbeq	r6, lr, ip, ror #10
    4514:	4129ab02 			@ <UNDEFINED> instruction: 0x4129ab02
    4518:	b0000000 	andlt	r0, r0, r0
    451c:	ae00001d 	mcrge	0, 0, r0, cr0, cr13, {0}
    4520:	2d00001d 	stccs	0, cr0, [r0, #-116]	@ 0xffffff8c
    4524:	08001080 	stmdaeq	r0, {r7, ip}
    4528:	0000120d 	andeq	r1, r0, sp, lsl #4
    452c:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    4530:	00000071 	andeq	r0, r0, r1, ror r0
    4534:	0c6e011e 	stfeqe	f0, [lr], #-120	@ 0xffffff88
    4538:	a1020000 	mrsge	r0, (UNDEF: 2)
    453c:	101e0106 	andsne	r0, lr, r6, lsl #2
    4540:	10680800 	rsbne	r0, r8, r0, lsl #16
    4544:	1dc30800 	stclne	8, cr0, [r3]
    4548:	0d010000 	stceq	0, cr0, [r1, #-0]
    454c:	34000012 	strcc	r0, [r0], #-18	@ 0xffffffee
    4550:	00000210 	andeq	r0, r0, r0, lsl r2
    4554:	000011d2 	ldrdeq	r1, [r0], -r2
    4558:	00012c26 	andeq	r2, r1, r6, lsr #24
    455c:	0da30200 	sfmeq	f0, 4, [r3]
    4560:	00000041 	andeq	r0, r0, r1, asr #32
    4564:	00001dfd 	strdeq	r1, [r0], -sp
    4568:	00001dfb 	strdeq	r1, [r0], -fp
    456c:	0010363f 	andseq	r3, r0, pc, lsr r6
    4570:	120d0108 	andne	r0, sp, #8, 2
    4574:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
    4578:	00700250 	rsbseq	r0, r0, r0, asr r2
    457c:	0251012e 	subseq	r0, r1, #-2147483637	@ 0x8000000b
    4580:	00000071 	andeq	r0, r0, r1, ror r0
    4584:	0012a527 	andseq	sl, r2, r7, lsr #10
    4588:	00103c00 	andseq	r3, r0, r0, lsl #24
    458c:	103c0108 	eorsne	r0, ip, r8, lsl #2
    4590:	10460800 	subne	r0, r6, r0, lsl #16
    4594:	a6020800 	strge	r0, [r2], -r0, lsl #16
    4598:	0011f908 	andseq	pc, r1, r8, lsl #18
    459c:	12b82800 	adcsne	r2, r8, #0, 16
    45a0:	1e120000 	cdpne	0, 1, cr0, cr2, cr0, {0}
    45a4:	1e100000 	cdpne	0, 1, cr0, cr0, cr0, {0}
    45a8:	2d000000 	stccs	0, cr0, [r0, #-0]
    45ac:	08001052 	stmdaeq	r0, {r1, r4, r6, ip}
    45b0:	0000123b 	andeq	r1, r0, fp, lsr r2
    45b4:	0550012e 	ldrbeq	r0, [r0, #-302]	@ 0xfffffed2
    45b8:	0001ea03 	andeq	lr, r1, r3, lsl #20
    45bc:	39000020 	stmdbcc	r0, {r5}
    45c0:	000c5f01 	andeq	r5, ip, r1, lsl #30
    45c4:	065a0200 	ldrbeq	r0, [sl], -r0, lsl #4
    45c8:	12350101 	eorsne	r0, r5, #1073741824	@ 0x40000000
    45cc:	623a0000 	eorsvs	r0, sl, #0
    45d0:	02006675 	andeq	r6, r0, #122683392	@ 0x7500000
    45d4:	1235225a 	eorsne	r2, r5, #-1610612731	@ 0xa0000005
    45d8:	643a0000 	ldrtvs	r0, [sl], #-0
    45dc:	02007461 	andeq	r7, r0, #1627389952	@ 0x61000000
    45e0:	00412f5a 	subeq	r2, r1, sl, asr pc
    45e4:	07000000 	streq	r0, [r0, -r0]
    45e8:	00079604 	andeq	r9, r7, r4, lsl #12
    45ec:	0c013b00 			@ <UNDEFINED> instruction: 0x0c013b00
    45f0:	0200000d 	andeq	r0, r0, #13
    45f4:	41010951 	tstmi	r1, r1, asr r9
    45f8:	d6000000 	strle	r0, [r0], -r0
    45fc:	fc08000f 	stc2	0, cr0, [r8], {15}
    4600:	0208000f 	andeq	r0, r8, #15
    4604:	a501007d 	strge	r0, [r1, #-125]	@ 0xffffff83
    4608:	1f000012 	svcne	0x00000012
    460c:	00667562 	rsbeq	r7, r6, r2, ror #10
    4610:	35245102 	strcc	r5, [r4, #-258]!	@ 0xfffffefe
    4614:	32000012 	andcc	r0, r0, #18
    4618:	2a00001e 	bcs	4698 <__Stack_Size+0x3698>
    461c:	2100001e 	tstcs	r0, lr, lsl r0
    4620:	00736572 	rsbseq	r6, r3, r2, ror r5
    4624:	410b5202 	tstmi	fp, r2, lsl #4
    4628:	68000000 	stmdavs	r0, {}	@ <UNPREDICTABLE>
    462c:	6600001e 			@ <UNDEFINED> instruction: 0x6600001e
    4630:	4000001e 	andmi	r0, r0, lr, lsl r0
    4634:	000012a5 	andeq	r1, r0, r5, lsr #5
    4638:	08000fd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sl, fp}
    463c:	000fd603 	andeq	sp, pc, r3, lsl #12
    4640:	000fda08 	andeq	sp, pc, r8, lsl #20
    4644:	06530208 	ldrbeq	r0, [r3], -r8, lsl #4
    4648:	0012b828 	andseq	fp, r2, r8, lsr #16
    464c:	001e7d00 	andseq	r7, lr, r0, lsl #26
    4650:	001e7b00 	andseq	r7, lr, r0, lsl #22
    4654:	41000000 	mrsmi	r0, (UNDEF: 0)
    4658:	000cc701 	andeq	ip, ip, r1, lsl #14
    465c:	094d0200 	stmdbeq	sp, {r9}^
    4660:	00004101 	andeq	r4, r0, r1, lsl #2
    4664:	12c50100 	sbcne	r0, r5, #0, 2
    4668:	623a0000 	eorsvs	r0, sl, #0
    466c:	02006675 	andeq	r6, r0, #122683392	@ 0x7500000
    4670:	1235244d 	eorsne	r2, r5, #1291845632	@ 0x4d000000
    4674:	42000000 	andmi	r0, r0, #0
    4678:	00000480 	andeq	r0, r0, r0, lsl #9
    467c:	0113c103 	tsteq	r3, r3, lsl #2
    4680:	00000095 	muleq	r0, r5, r0
    4684:	0012f003 	andseq	pc, r2, r3
    4688:	06ca3600 	strbeq	r3, [sl], r0, lsl #12
    468c:	c1030000 	mrsgt	r0, (UNDEF: 3)
    4690:	00004127 	andeq	r4, r0, r7, lsr #2
    4694:	75623a00 	strbvc	r3, [r2, #-2560]!	@ 0xfffff600
    4698:	c1030066 	tstgt	r3, r6, rrx
    469c:	0008f438 	andeq	pc, r8, r8, lsr r4	@ <UNPREDICTABLE>
    46a0:	68350000 	ldmdavs	r5!, {}	@ <UNPREDICTABLE>
    46a4:	03000003 	movweq	r0, #3
    46a8:	030114b4 	movweq	r1, #5300	@ 0x14b4
    46ac:	00001323 	andeq	r1, r0, r3, lsr #6
    46b0:	0006ca36 	andeq	ip, r6, r6, lsr sl
    46b4:	29b40300 	ldmibcs	r4!, {r8, r9}
    46b8:	00000041 	andeq	r0, r0, r1, asr #32
    46bc:	6675623a 			@ <UNDEFINED> instruction: 0x6675623a
    46c0:	40b40300 	adcsmi	r0, r4, r0, lsl #6
    46c4:	000008ac 	andeq	r0, r0, ip, lsr #17
    46c8:	000cd036 	andeq	sp, ip, r6, lsr r0
    46cc:	4eb40300 	cdpmi	3, 11, cr0, cr4, cr0, {0}
    46d0:	00000059 	andeq	r0, r0, r9, asr r0
    46d4:	03884300 	orreq	r4, r8, #0, 6
    46d8:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    46dc:	03011605 	movweq	r1, #5637	@ 0x1605
    46e0:	00001340 	andeq	r1, r0, r0, asr #6
    46e4:	0002c944 	andeq	ip, r2, r4, asr #18
    46e8:	05de0500 	ldrbeq	r0, [lr, #1280]	@ 0x500
    46ec:	0002692f 	andeq	r6, r2, pc, lsr #18
    46f0:	a5450000 	strbge	r0, [r5, #-0]
    46f4:	cc000012 	stcgt	0, cr0, [r0], {18}
    46f8:	d608000f 	strle	r0, [r8], -pc
    46fc:	0208000f 	andeq	r0, r8, #15
    4700:	6301007d 	movwvs	r0, #4221	@ 0x107d
    4704:	28000013 	stmdacs	r0, {r0, r1, r4}
    4708:	000012b8 			@ <UNDEFINED> instruction: 0x000012b8
    470c:	00001e94 	muleq	r0, r4, lr
    4710:	00001e90 	muleq	r0, r0, lr
    4714:	120d4500 	andne	r4, sp, #0, 10
    4718:	0ffc0000 	svceq	0x00fc0000
    471c:	101e0800 	andsne	r0, lr, r0, lsl #16
    4720:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4724:	13de0100 	bicsne	r0, lr, #0, 2
    4728:	1c460000 	marne	acc0, r0, r6
    472c:	01000012 	tsteq	r0, r2, lsl r0
    4730:	12284650 	eorne	r4, r8, #80, 12	@ 0x5000000
    4734:	51010000 	mrspl	r0, (UNDEF: 1)
    4738:	0012a527 	andseq	sl, r2, r7, lsr #10
    473c:	000ffc00 	andeq	pc, pc, r0, lsl #24
    4740:	0ffc0208 	svceq	0x00fc0208
    4744:	10020800 	andne	r0, r2, r0, lsl #16
    4748:	5b020800 	blpl	86750 <__Stack_Size+0x85750>
    474c:	0013ad06 	andseq	sl, r3, r6, lsl #26
    4750:	12b82800 	adcsne	r2, r8, #0, 16
    4754:	1eb70000 	cdpne	0, 11, cr0, cr7, cr0, {0}
    4758:	1eb50000 	cdpne	0, 11, cr0, cr5, cr0, {0}
    475c:	40000000 	andmi	r0, r0, r0
    4760:	0000120d 	andeq	r1, r0, sp, lsl #4
    4764:	08001008 	stmdaeq	r0, {r3, ip}
    4768:	00100800 	andseq	r0, r0, r0, lsl #16
    476c:	00101c08 	andseq	r1, r0, r8, lsl #24
    4770:	065a0208 	ldrbeq	r0, [sl], -r8, lsl #4
    4774:	00122828 	andseq	r2, r2, r8, lsr #16
    4778:	001ecc00 	andseq	ip, lr, r0, lsl #24
    477c:	001eca00 	andseq	ip, lr, r0, lsl #20
    4780:	121c2800 	andsne	r2, ip, #0, 16
    4784:	1ee10000 	cdpne	0, 14, cr0, cr1, cr0, {0}
    4788:	1edf0000 	cdpne	0, 13, cr0, cr15, cr0, {0}
    478c:	00000000 	andeq	r0, r0, r0
    4790:	000f7a47 	andeq	r7, pc, r7, asr #20
    4794:	00117800 	andseq	r7, r1, r0, lsl #16
    4798:	0011e008 	andseq	lr, r1, r8
    479c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    47a0:	0f894601 	svceq	0x00894601
    47a4:	50010000 	andpl	r0, r1, r0
    47a8:	000f7a48 	andeq	r7, pc, r8, asr #20
    47ac:	00119a00 	andseq	r9, r1, r0, lsl #20
    47b0:	02580008 	subseq	r0, r8, #8
    47b4:	4a010000 	bmi	447bc <__Stack_Size+0x437bc>
    47b8:	0f892806 	svceq	0x00892806
    47bc:	1ef60000 	cdpne	0, 15, cr0, cr6, cr0, {0}
    47c0:	1ef40000 	cdpne	0, 15, cr0, cr4, cr0, {0}
    47c4:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	@ 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	@ 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	@ 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	@ 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__Stack_Size+0xf81c4c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	@ 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__Stack_Size+0x2cd864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	@ 0xffffffed
      30:	13490035 	movtne	r0, #36917	@ 0x9035
      34:	24050000 	strcs	r0, [r5], #-0
      38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      3c:	0008030b 	andeq	r0, r8, fp, lsl #6
      40:	01130600 	tsteq	r3, r0, lsl #12
      44:	0b3a0b0b 	bleq	e82c78 <__Stack_Size+0xe81c78>
      48:	0b39053b 	bleq	e4153c <__Stack_Size+0xe4053c>
      4c:	00001301 	andeq	r1, r0, r1, lsl #6
      50:	03000d07 	movweq	r0, #3335	@ 0xd07
      54:	3b0b3a08 	blcc	2ce87c <__Stack_Size+0x2cd87c>
      58:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      5c:	000a3813 	andeq	r3, sl, r3, lsl r8
      60:	000d0800 	andeq	r0, sp, r0, lsl #16
      64:	0b3a0e03 	bleq	e83878 <__Stack_Size+0xe82878>
      68:	0b39053b 	bleq	e4155c <__Stack_Size+0xe4055c>
      6c:	0a381349 	beq	e04d98 <__Stack_Size+0xe03d98>
      70:	16090000 	strne	r0, [r9], -r0
      74:	3a0e0300 	bcc	380c7c <__Stack_Size+0x37fc7c>
      78:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      7c:	0013490b 	andseq	r4, r3, fp, lsl #18
      80:	012e0a00 			@ <UNDEFINED> instruction: 0x012e0a00
      84:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
      88:	0b3b0b3a 	bleq	ec2d78 <__Stack_Size+0xec1d78>
      8c:	0c3c0b39 			@ <UNDEFINED> instruction: 0x0c3c0b39
      90:	00001301 	andeq	r1, r0, r1, lsl #6
      94:	0000180b 	andeq	r1, r0, fp, lsl #16
      98:	012e0c00 			@ <UNDEFINED> instruction: 0x012e0c00
      9c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
      a0:	0b3b0b3a 	bleq	ec2d90 <__Stack_Size+0xec1d90>
      a4:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
      a8:	01111349 	tsteq	r1, r9, asr #6
      ac:	06400112 			@ <UNDEFINED> instruction: 0x06400112
      b0:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
      b4:	0d000013 	stceq	0, cr0, [r0, #-76]	@ 0xffffffb4
      b8:	0111010b 	tsteq	r1, fp, lsl #2
      bc:	13010112 	movwne	r0, #4370	@ 0x1112
      c0:	340e0000 	strcc	r0, [lr], #-0
      c4:	3a0e0300 	bcc	380ccc <__Stack_Size+0x37fccc>
      c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      cc:	0213490b 	andseq	r4, r3, #180224	@ 0x2c000
      d0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
      d4:	0b0f0000 	bleq	3c00dc <__Stack_Size+0x3bf0dc>
      d8:	00130101 	andseq	r0, r3, r1, lsl #2
      dc:	00341000 	eorseq	r1, r4, r0
      e0:	0b3a0e03 	bleq	e838f4 <__Stack_Size+0xe828f4>
      e4:	0b390b3b 	bleq	e42dd8 <__Stack_Size+0xe41dd8>
      e8:	00001349 	andeq	r1, r0, r9, asr #6
      ec:	31001d11 	tstcc	r0, r1, lsl sp
      f0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
      f4:	01110b42 	tsteq	r1, r2, asr #22
      f8:	0b580112 	bleq	1600548 <__Stack_Size+0x15ff548>
      fc:	0b570b59 	bleq	15c2e68 <__Stack_Size+0x15c1e68>
     100:	89120000 	ldmdbhi	r2, {}	@ <UNPREDICTABLE>
     104:	11000182 	smlabbne	r0, r2, r1, r0
     108:	00133101 	andseq	r3, r3, r1, lsl #2
     10c:	012e1300 			@ <UNDEFINED> instruction: 0x012e1300
     110:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     114:	0b3b0b3a 	bleq	ec2e04 <__Stack_Size+0xec1e04>
     118:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     11c:	01120111 	tsteq	r2, r1, lsl r1
     120:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     124:	0013010c 	andseq	r0, r3, ip, lsl #2
     128:	00051400 	andeq	r1, r5, r0, lsl #8
     12c:	0b3a0e03 	bleq	e83940 <__Stack_Size+0xe82940>
     130:	0b390b3b 	bleq	e42e24 <__Stack_Size+0xe41e24>
     134:	06021349 	streq	r1, [r2], -r9, asr #6
     138:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     13c:	002e1500 	eoreq	r1, lr, r0, lsl #10
     140:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     144:	0b3b0b3a 	bleq	ec2e34 <__Stack_Size+0xec1e34>
     148:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     14c:	01120111 	tsteq	r2, r1, lsl r1
     150:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     154:	1600000c 	strne	r0, [r0], -ip
     158:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ a8 <_Minimum_Stack_Size-0x58>
     15c:	0b3a0e03 	bleq	e83970 <__Stack_Size+0xe82970>
     160:	0b390b3b 	bleq	e42e54 <__Stack_Size+0xe41e54>
     164:	00000c27 	andeq	r0, r0, r7, lsr #24
     168:	3f012e17 	svccc	0x00012e17
     16c:	3a0e030c 	bcc	380da4 <__Stack_Size+0x37fda4>
     170:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     174:	2013490b 	andscs	r4, r3, fp, lsl #18
     178:	0013010b 	andseq	r0, r3, fp, lsl #2
     17c:	00341800 	eorseq	r1, r4, r0, lsl #16
     180:	0b3a0803 	bleq	e82194 <__Stack_Size+0xe81194>
     184:	0b390b3b 	bleq	e42e78 <__Stack_Size+0xe41e78>
     188:	00001349 	andeq	r1, r0, r9, asr #6
     18c:	03002e19 	movweq	r2, #3609	@ 0xe19
     190:	3b0b3a0e 	blcc	2ce9d0 <__Stack_Size+0x2cd9d0>
     194:	200b3905 	andcs	r3, fp, r5, lsl #18
     198:	1a00000b 	bne	1cc <_Minimum_Stack_Size+0xcc>
     19c:	1331012e 	teqne	r1, #-2147483637	@ 0x8000000b
     1a0:	01120111 	tsteq	r2, r1, lsl r1
     1a4:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     1a8:	1b00000c 	blne	1e0 <_Minimum_Stack_Size+0xe0>
     1ac:	13310034 	teqne	r1, #52	@ 0x34
     1b0:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     1b4:	1c000006 	stcne	0, cr0, [r0], {6}
     1b8:	13310034 	teqne	r1, #52	@ 0x34
     1bc:	1d1d0000 	ldcne	0, cr0, [sp, #-0]
     1c0:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     1c4:	0b42b801 	bleq	10ae1d0 <__Stack_Size+0x10ad1d0>
     1c8:	0b580655 	bleq	1601b24 <__Stack_Size+0x1600b24>
     1cc:	0b570b59 	bleq	15c2f38 <__Stack_Size+0x15c1f38>
     1d0:	0b1e0000 	bleq	7801d8 <__Stack_Size+0x77f1d8>
     1d4:	00065501 	andeq	r5, r6, r1, lsl #10
     1d8:	11010000 	mrsne	r0, (UNDEF: 1)
     1dc:	130e2501 	movwne	r2, #58625	@ 0xe501
     1e0:	1b0e030b 	blne	380e14 <__Stack_Size+0x37fe14>
     1e4:	1201110e 	andne	r1, r1, #-2147483645	@ 0x80000003
     1e8:	00061001 	andeq	r1, r6, r1
     1ec:	00240200 	eoreq	r0, r4, r0, lsl #4
     1f0:	0b3e0b0b 	bleq	f82e24 <__Stack_Size+0xf81e24>
     1f4:	00000e03 	andeq	r0, r0, r3, lsl #28
     1f8:	03001603 	movweq	r1, #1539	@ 0x603
     1fc:	3b0b3a0e 	blcc	2cea3c <__Stack_Size+0x2cda3c>
     200:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     204:	04000013 	streq	r0, [r0], #-19	@ 0xffffffed
     208:	13490035 	movtne	r0, #36917	@ 0x9035
     20c:	26050000 	strcs	r0, [r5], -r0
     210:	00134900 	andseq	r4, r3, r0, lsl #18
     214:	00240600 	eoreq	r0, r4, r0, lsl #12
     218:	0b3e0b0b 	bleq	f82e4c <__Stack_Size+0xf81e4c>
     21c:	00000803 	andeq	r0, r0, r3, lsl #16
     220:	0b000f07 	bleq	3e44 <__Stack_Size+0x2e44>
     224:	0013490b 	andseq	r4, r3, fp, lsl #18
     228:	01150800 	tsteq	r5, r0, lsl #16
     22c:	13010c27 	movwne	r0, #7207	@ 0x1c27
     230:	05090000 	streq	r0, [r9, #-0]
     234:	00134900 	andseq	r4, r3, r0, lsl #18
     238:	01130a00 	tsteq	r3, r0, lsl #20
     23c:	0b3a0b0b 	bleq	e82e70 <__Stack_Size+0xe81e70>
     240:	0b390b3b 	bleq	e42f34 <__Stack_Size+0xe41f34>
     244:	00001301 	andeq	r1, r0, r1, lsl #6
     248:	03000d0b 	movweq	r0, #3339	@ 0xd0b
     24c:	3b0b3a0e 	blcc	2cea8c <__Stack_Size+0x2cda8c>
     250:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     254:	000a3813 	andeq	r3, sl, r3, lsl r8
     258:	01040c00 	tsteq	r4, r0, lsl #24
     25c:	0b0b0b3e 	bleq	2c2f5c <__Stack_Size+0x2c1f5c>
     260:	0b3a1349 	bleq	e84f8c <__Stack_Size+0xe83f8c>
     264:	0b390b3b 	bleq	e42f58 <__Stack_Size+0xe41f58>
     268:	00001301 	andeq	r1, r0, r1, lsl #6
     26c:	0300280d 	movweq	r2, #2061	@ 0x80d
     270:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     274:	00280e00 	eoreq	r0, r8, r0, lsl #28
     278:	0b1c0e03 	bleq	703a8c <__Stack_Size+0x702a8c>
     27c:	130f0000 	movwne	r0, #61440	@ 0xf000
     280:	3a050b01 	bcc	142e8c <__Stack_Size+0x141e8c>
     284:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     288:	0013010b 	andseq	r0, r3, fp, lsl #2
     28c:	000d1000 	andeq	r1, sp, r0
     290:	0b3a0803 	bleq	e822a4 <__Stack_Size+0xe812a4>
     294:	0b390b3b 	bleq	e42f88 <__Stack_Size+0xe41f88>
     298:	0a381349 	beq	e04fc4 <__Stack_Size+0xe03fc4>
     29c:	01110000 	tsteq	r1, r0
     2a0:	01134901 	tsteq	r3, r1, lsl #18
     2a4:	12000013 	andne	r0, r0, #19
     2a8:	13490021 	movtne	r0, #36897	@ 0x9021
     2ac:	00000b2f 	andeq	r0, r0, pc, lsr #22
     2b0:	49002113 	stmdbmi	r0, {r0, r1, r4, r8, sp}
     2b4:	00052f13 	andeq	r2, r5, r3, lsl pc
     2b8:	01131400 	tsteq	r3, r0, lsl #8
     2bc:	0b3a0b0b 	bleq	e82ef0 <__Stack_Size+0xe81ef0>
     2c0:	0b39053b 	bleq	e417b4 <__Stack_Size+0xe407b4>
     2c4:	00001301 	andeq	r1, r0, r1, lsl #6
     2c8:	03000d15 	movweq	r0, #3349	@ 0xd15
     2cc:	3b0b3a08 	blcc	2ceaf4 <__Stack_Size+0x2cdaf4>
     2d0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     2d4:	000a3813 	andeq	r3, sl, r3, lsl r8
     2d8:	000d1600 	andeq	r1, sp, r0, lsl #12
     2dc:	0b3a0e03 	bleq	e83af0 <__Stack_Size+0xe82af0>
     2e0:	0b39053b 	bleq	e417d4 <__Stack_Size+0xe407d4>
     2e4:	0a381349 	beq	e05010 <__Stack_Size+0xe04010>
     2e8:	16170000 	ldrne	r0, [r7], -r0
     2ec:	3a0e0300 	bcc	380ef4 <__Stack_Size+0x37fef4>
     2f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2f4:	0013490b 	andseq	r4, r3, fp, lsl #18
     2f8:	000d1800 	andeq	r1, sp, r0, lsl #16
     2fc:	0b3a0e03 	bleq	e83b10 <__Stack_Size+0xe82b10>
     300:	0b390b3b 	bleq	e42ff4 <__Stack_Size+0xe41ff4>
     304:	0b0b1349 	bleq	2c5030 <__Stack_Size+0x2c4030>
     308:	0b0c0b0d 	bleq	302f44 <__Stack_Size+0x301f44>
     30c:	00000a38 	andeq	r0, r0, r8, lsr sl
     310:	0b011719 	bleq	45f7c <__Stack_Size+0x44f7c>
     314:	3b0b3a0b 	blcc	2ceb48 <__Stack_Size+0x2cdb48>
     318:	010b390b 	tsteq	fp, fp, lsl #18
     31c:	1a000013 	bne	370 <_Minimum_Stack_Size+0x270>
     320:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     324:	0b3b0b3a 	bleq	ec3014 <__Stack_Size+0xec2014>
     328:	13490b39 	movtne	r0, #39737	@ 0x9b39
     32c:	0d1b0000 	ldceq	0, cr0, [fp, #-0]
     330:	00134900 	andseq	r4, r3, r0, lsl #18
     334:	000d1c00 	andeq	r1, sp, r0, lsl #24
     338:	0a381349 	beq	e05064 <__Stack_Size+0xe04064>
     33c:	341d0000 	ldrcc	r0, [sp], #-0
     340:	3a0e0300 	bcc	380f48 <__Stack_Size+0x37ff48>
     344:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     348:	3f13490b 	svccc	0x0013490b
     34c:	000a020c 	andeq	r0, sl, ip, lsl #4
     350:	00341e00 	eorseq	r1, r4, r0, lsl #28
     354:	0b3a0e03 	bleq	e83b68 <__Stack_Size+0xe82b68>
     358:	0b390b3b 	bleq	e4304c <__Stack_Size+0xe4204c>
     35c:	0a021349 	beq	85088 <__Stack_Size+0x84088>
     360:	0d1f0000 	ldceq	0, cr0, [pc, #-0]	@ 368 <_Minimum_Stack_Size+0x268>
     364:	3a0e0300 	bcc	380f6c <__Stack_Size+0x37ff6c>
     368:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     36c:	0b13490b 	bleq	4d27a0 <__Stack_Size+0x4d17a0>
     370:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
     374:	000a380b 	andeq	r3, sl, fp, lsl #16
     378:	01172000 	tsteq	r7, r0
     37c:	0b3a0b0b 	bleq	e82fb0 <__Stack_Size+0xe81fb0>
     380:	0b39053b 	bleq	e41874 <__Stack_Size+0xe40874>
     384:	00001301 	andeq	r1, r0, r1, lsl #6
     388:	03000d21 	movweq	r0, #3361	@ 0xd21
     38c:	3b0b3a0e 	blcc	2cebcc <__Stack_Size+0x2cdbcc>
     390:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     394:	22000013 	andcs	r0, r0, #19
     398:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ 2e8 <_Minimum_Stack_Size+0x1e8>
     39c:	0b3a0e03 	bleq	e83bb0 <__Stack_Size+0xe82bb0>
     3a0:	0b390b3b 	bleq	e43094 <__Stack_Size+0xe42094>
     3a4:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	@ 0xffffff64
     3a8:	00001301 	andeq	r1, r0, r1, lsl #6
     3ac:	00002623 	andeq	r2, r0, r3, lsr #12
     3b0:	012e2400 			@ <UNDEFINED> instruction: 0x012e2400
     3b4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     3b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     3bc:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     3c0:	01111349 	tsteq	r1, r9, asr #6
     3c4:	06400112 			@ <UNDEFINED> instruction: 0x06400112
     3c8:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     3cc:	25000013 	strcs	r0, [r0, #-19]	@ 0xffffffed
     3d0:	08030005 	stmdaeq	r3, {r0, r2}
     3d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     3d8:	13490b39 	movtne	r0, #39737	@ 0x9b39
     3dc:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     3e0:	26000006 	strcs	r0, [r0], -r6
     3e4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     3ec:	13490b39 	movtne	r0, #39737	@ 0x9b39
     3f0:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     3f4:	27000006 	strcs	r0, [r0, -r6]
     3f8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     3fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     400:	13490b39 	movtne	r0, #39737	@ 0x9b39
     404:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     408:	28000006 	stmdacs	r0, {r1, r2}
     40c:	0111010b 	tsteq	r1, fp, lsl #2
     410:	00000112 	andeq	r0, r0, r2, lsl r1
     414:	3f012e29 	svccc	0x00012e29
     418:	3a0e030c 	bcc	381050 <__Stack_Size+0x380050>
     41c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     420:	110c270b 	tstne	ip, fp, lsl #14
     424:	40011201 	andmi	r1, r1, r1, lsl #4
     428:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     42c:	00001301 	andeq	r1, r0, r1, lsl #6
     430:	0300052a 	movweq	r0, #1322	@ 0x52a
     434:	3b0b3a08 	blcc	2cec5c <__Stack_Size+0x2cdc5c>
     438:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     43c:	000a0213 	andeq	r0, sl, r3, lsl r2
     440:	00052b00 	andeq	r2, r5, r0, lsl #22
     444:	0b3a0e03 	bleq	e83c58 <__Stack_Size+0xe82c58>
     448:	0b39053b 	bleq	e4193c <__Stack_Size+0xe4093c>
     44c:	0a021349 	beq	85178 <__Stack_Size+0x84178>
     450:	0b2c0000 	bleq	b00458 <__Stack_Size+0xaff458>
     454:	00065501 	andeq	r5, r6, r1, lsl #10
     458:	012e2d00 			@ <UNDEFINED> instruction: 0x012e2d00
     45c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     460:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     464:	01110b39 	tsteq	r1, r9, lsr fp
     468:	06400112 			@ <UNDEFINED> instruction: 0x06400112
     46c:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     470:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     474:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     478:	00001301 	andeq	r1, r0, r1, lsl #6
     47c:	0182892f 	orreq	r8, r2, pc, lsr #18
     480:	01011101 	tsteq	r1, r1, lsl #2
     484:	30000013 	andcc	r0, r0, r3, lsl r0
     488:	0001828a 	andeq	r8, r1, sl, lsl #5
     48c:	42910a02 	addsmi	r0, r1, #8192	@ 0x2000
     490:	3100000a 	tstcc	r0, sl
     494:	01018289 	smlabbeq	r1, r9, r2, r8
     498:	00000111 	andeq	r0, r0, r1, lsl r1
     49c:	01828932 	orreq	r8, r2, r2, lsr r9
     4a0:	31011100 	mrscc	r1, (UNDEF: 17)
     4a4:	33000013 	movwcc	r0, #19
     4a8:	01018289 	smlabbeq	r1, r9, r2, r8
     4ac:	13310111 	teqne	r1, #1073741828	@ 0x40000004
     4b0:	00001301 	andeq	r1, r0, r1, lsl #6
     4b4:	3f012e34 	svccc	0x00012e34
     4b8:	3a0e030c 	bcc	3810f0 <__Stack_Size+0x3800f0>
     4bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4c0:	110c270b 	tstne	ip, fp, lsl #14
     4c4:	40011201 	andmi	r1, r1, r1, lsl #4
     4c8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     4cc:	00001301 	andeq	r1, r0, r1, lsl #6
     4d0:	03000535 	movweq	r0, #1333	@ 0x535
     4d4:	3b0b3a0e 	blcc	2ced14 <__Stack_Size+0x2cdd14>
     4d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     4dc:	b7060213 	smladlt	r6, r3, r2, r0
     4e0:	00000642 	andeq	r0, r0, r2, asr #12
     4e4:	03000536 	movweq	r0, #1334	@ 0x536
     4e8:	3b0b3a0e 	blcc	2ced28 <__Stack_Size+0x2cdd28>
     4ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     4f0:	000a0213 	andeq	r0, sl, r3, lsl r2
     4f4:	00343700 	eorseq	r3, r4, r0, lsl #14
     4f8:	0b3a0e03 	bleq	e83d0c <__Stack_Size+0xe82d0c>
     4fc:	0b390b3b 	bleq	e431f0 <__Stack_Size+0xe421f0>
     500:	06021349 	streq	r1, [r2], -r9, asr #6
     504:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     508:	00343800 	eorseq	r3, r4, r0, lsl #16
     50c:	0b3a0803 	bleq	e82520 <__Stack_Size+0xe81520>
     510:	0b390b3b 	bleq	e43204 <__Stack_Size+0xe42204>
     514:	06021349 	streq	r1, [r2], -r9, asr #6
     518:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     51c:	012e3900 			@ <UNDEFINED> instruction: 0x012e3900
     520:	0b3a0e03 	bleq	e83d34 <__Stack_Size+0xe82d34>
     524:	0b390b3b 	bleq	e43218 <__Stack_Size+0xe42218>
     528:	01110c27 	tsteq	r1, r7, lsr #24
     52c:	06400112 			@ <UNDEFINED> instruction: 0x06400112
     530:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     534:	3a000013 	bcc	588 <_Minimum_Stack_Size+0x488>
     538:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     53c:	0b3b0b3a 	bleq	ec322c <__Stack_Size+0xec222c>
     540:	13490b39 	movtne	r0, #39737	@ 0x9b39
     544:	0b3b0000 	bleq	ec054c <__Stack_Size+0xebf54c>
     548:	12011101 	andne	r1, r1, #1073741824	@ 0x40000000
     54c:	00130101 	andseq	r0, r3, r1, lsl #2
     550:	82893c00 	addhi	r3, r9, #0, 24
     554:	01110101 	tsteq	r1, r1, lsl #2
     558:	00001331 	andeq	r1, r0, r1, lsr r3
     55c:	31011d3d 	tstcc	r1, sp, lsr sp
     560:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     564:	01110b42 	tsteq	r1, r2, asr #22
     568:	0b580112 	bleq	16009b8 <__Stack_Size+0x15ff9b8>
     56c:	0b570b59 	bleq	15c32d8 <__Stack_Size+0x15c22d8>
     570:	00001301 	andeq	r1, r0, r1, lsl #6
     574:	3100053e 	tstcc	r0, lr, lsr r5
     578:	b7060213 	smladlt	r6, r3, r2, r0
     57c:	00000642 	andeq	r0, r0, r2, asr #12
     580:	31011d3f 	tstcc	r1, pc, lsr sp
     584:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     588:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     58c:	0b590b58 	bleq	16432f4 <__Stack_Size+0x16422f4>
     590:	13010b57 	movwne	r0, #6999	@ 0x1b57
     594:	1d400000 	stclne	0, cr0, [r0, #-0]
     598:	52133101 	andspl	r3, r3, #1073741824	@ 0x40000000
     59c:	0b42b801 	bleq	10ae5a8 <__Stack_Size+0x10ad5a8>
     5a0:	0b580655 	bleq	1601efc <__Stack_Size+0x1600efc>
     5a4:	0b570b59 	bleq	15c3310 <__Stack_Size+0x15c2310>
     5a8:	89410000 	stmdbhi	r1, {}^	@ <UNPREDICTABLE>
     5ac:	11000182 	smlabbne	r0, r2, r1, r0
     5b0:	0c429501 	cfstr64eq	mvdx9, [r2], {1}
     5b4:	00001331 	andeq	r1, r0, r1, lsr r3
     5b8:	0b000f42 	bleq	42c8 <__Stack_Size+0x32c8>
     5bc:	4300000b 	movwmi	r0, #11
     5c0:	0e03012e 	adfeqsp	f0, f3, #0.5
     5c4:	0b3b0b3a 	bleq	ec32b4 <__Stack_Size+0xec22b4>
     5c8:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     5cc:	13010b20 	movwne	r0, #6944	@ 0x1b20
     5d0:	05440000 	strbeq	r0, [r4, #-0]
     5d4:	3a080300 	bcc	2011dc <__Stack_Size+0x2001dc>
     5d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5dc:	0013490b 	andseq	r4, r3, fp, lsl #18
     5e0:	00054500 	andeq	r4, r5, r0, lsl #10
     5e4:	0b3a0e03 	bleq	e83df8 <__Stack_Size+0xe82df8>
     5e8:	0b390b3b 	bleq	e432dc <__Stack_Size+0xe422dc>
     5ec:	00001349 	andeq	r1, r0, r9, asr #6
     5f0:	3f012e46 	svccc	0x00012e46
     5f4:	3a0e030c 	bcc	38122c <__Stack_Size+0x38022c>
     5f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5fc:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
     600:	970a4001 	strls	r4, [sl, -r1]
     604:	13010c42 	movwne	r0, #7234	@ 0x1c42
     608:	0b470000 	bleq	11c0610 <__Stack_Size+0x11bf610>
     60c:	00130101 	andseq	r0, r3, r1, lsl #2
     610:	011d4800 	tsteq	sp, r0, lsl #16
     614:	01521331 	cmpeq	r2, r1, lsr r3
     618:	110b42b8 			@ <UNDEFINED> instruction: 0x110b42b8
     61c:	58011201 	stmdapl	r1, {r0, r9, ip}
     620:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     624:	4900000b 	stmdbmi	r0, {r0, r1, r3}
     628:	0e03012e 	adfeqsp	f0, f3, #0.5
     62c:	0b3b0b3a 	bleq	ec331c <__Stack_Size+0xec231c>
     630:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     634:	01120111 	tsteq	r2, r1, lsl r1
     638:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     63c:	0013010c 	andseq	r0, r3, ip, lsl #2
     640:	012e4a00 			@ <UNDEFINED> instruction: 0x012e4a00
     644:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     648:	0b3b0b3a 	bleq	ec3338 <__Stack_Size+0xec2338>
     64c:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     650:	01111349 	tsteq	r1, r9, asr #6
     654:	0a400112 	beq	1000aa4 <__Stack_Size+0xfffaa4>
     658:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     65c:	4b000013 	blmi	6b0 <_Minimum_Stack_Size+0x5b0>
     660:	08030005 	stmdaeq	r3, {r0, r2}
     664:	0b3b0b3a 	bleq	ec3354 <__Stack_Size+0xec2354>
     668:	13490b39 	movtne	r0, #39737	@ 0x9b39
     66c:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     670:	4c000006 	stcmi	0, cr0, [r0], {6}
     674:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ 5c4 <_Minimum_Stack_Size+0x4c4>
     678:	0b3a0e03 	bleq	e83e8c <__Stack_Size+0xe82e8c>
     67c:	0b390b3b 	bleq	e43370 <__Stack_Size+0xe42370>
     680:	2e4d0000 	cdpcs	0, 4, cr0, cr13, cr0, {0}
     684:	030c3f00 	movweq	r3, #52992	@ 0xcf00
     688:	3b0b3a0e 	blcc	2ceec8 <__Stack_Size+0x2cdec8>
     68c:	200b390b 	andcs	r3, fp, fp, lsl #18
     690:	4e00000b 	cdpmi	0, 0, cr0, cr0, cr11, {0}
     694:	0e03012e 	adfeqsp	f0, f3, #0.5
     698:	0b3b0b3a 	bleq	ec3388 <__Stack_Size+0xec2388>
     69c:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     6a0:	0b201349 	bleq	8053cc <__Stack_Size+0x8043cc>
     6a4:	00001301 	andeq	r1, r0, r1, lsl #6
     6a8:	03012e4f 	movweq	r2, #7759	@ 0x1e4f
     6ac:	3b0b3a0e 	blcc	2ceeec <__Stack_Size+0x2cdeec>
     6b0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     6b4:	010b200c 	tsteq	fp, ip
     6b8:	50000013 	andpl	r0, r0, r3, lsl r0
     6bc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     6c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     6c4:	13490b39 	movtne	r0, #39737	@ 0x9b39
     6c8:	2e510000 	cdpcs	0, 5, cr0, cr1, cr0, {0}
     6cc:	11133100 	tstne	r3, r0, lsl #2
     6d0:	40011201 	andmi	r1, r1, r1, lsl #4
     6d4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     6d8:	01000000 	mrseq	r0, (UNDEF: 0)
     6dc:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     6e0:	0e030b13 	vmoveq.32	d3[0], r0
     6e4:	01110e1b 	tsteq	r1, fp, lsl lr
     6e8:	06100112 			@ <UNDEFINED> instruction: 0x06100112
     6ec:	24020000 	strcs	r0, [r2], #-0
     6f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     6f4:	000e030b 	andeq	r0, lr, fp, lsl #6
     6f8:	00160300 	andseq	r0, r6, r0, lsl #6
     6fc:	0b3a0e03 	bleq	e83f10 <__Stack_Size+0xe82f10>
     700:	0b390b3b 	bleq	e433f4 <__Stack_Size+0xe423f4>
     704:	00001349 	andeq	r1, r0, r9, asr #6
     708:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     70c:	05000013 	streq	r0, [r0, #-19]	@ 0xffffffed
     710:	13490026 	movtne	r0, #36902	@ 0x9026
     714:	24060000 	strcs	r0, [r6], #-0
     718:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     71c:	0008030b 	andeq	r0, r8, fp, lsl #6
     720:	000f0700 	andeq	r0, pc, r0, lsl #14
     724:	13490b0b 	movtne	r0, #39691	@ 0x9b0b
     728:	15080000 	strne	r0, [r8, #-0]
     72c:	010c2701 	tsteq	ip, r1, lsl #14
     730:	09000013 	stmdbeq	r0, {r0, r1, r4}
     734:	13490005 	movtne	r0, #36869	@ 0x9005
     738:	130a0000 	movwne	r0, #40960	@ 0xa000
     73c:	3a0b0b01 	bcc	2c3348 <__Stack_Size+0x2c2348>
     740:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     744:	0013010b 	andseq	r0, r3, fp, lsl #2
     748:	000d0b00 	andeq	r0, sp, r0, lsl #22
     74c:	0b3a0e03 	bleq	e83f60 <__Stack_Size+0xe82f60>
     750:	0b390b3b 	bleq	e43444 <__Stack_Size+0xe42444>
     754:	0a381349 	beq	e05480 <__Stack_Size+0xe04480>
     758:	040c0000 	streq	r0, [ip], #-0
     75c:	0b0b3e01 	bleq	2cff68 <__Stack_Size+0x2cef68>
     760:	3a13490b 	bcc	4d2b94 <__Stack_Size+0x4d1b94>
     764:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     768:	0013010b 	andseq	r0, r3, fp, lsl #2
     76c:	00280d00 	eoreq	r0, r8, r0, lsl #26
     770:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     774:	280e0000 	stmdacs	lr, {}	@ <UNPREDICTABLE>
     778:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     77c:	0f00000b 	svceq	0x0000000b
     780:	050b0113 	streq	r0, [fp, #-275]	@ 0xfffffeed
     784:	0b3b0b3a 	bleq	ec3474 <__Stack_Size+0xec2474>
     788:	13010b39 	movwne	r0, #6969	@ 0x1b39
     78c:	0d100000 	ldceq	0, cr0, [r0, #-0]
     790:	3a080300 	bcc	201398 <__Stack_Size+0x200398>
     794:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     798:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     79c:	1100000a 	tstne	r0, sl
     7a0:	13490101 	movtne	r0, #37121	@ 0x9101
     7a4:	00001301 	andeq	r1, r0, r1, lsl #6
     7a8:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
     7ac:	000b2f13 	andeq	r2, fp, r3, lsl pc
     7b0:	00211300 	eoreq	r1, r1, r0, lsl #6
     7b4:	052f1349 	streq	r1, [pc, #-841]!	@ 473 <_Minimum_Stack_Size+0x373>
     7b8:	13140000 	tstne	r4, #0
     7bc:	3a0b0b01 	bcc	2c33c8 <__Stack_Size+0x2c23c8>
     7c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     7c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     7c8:	000d1500 	andeq	r1, sp, r0, lsl #10
     7cc:	0b3a0803 	bleq	e827e0 <__Stack_Size+0xe817e0>
     7d0:	0b39053b 	bleq	e41cc4 <__Stack_Size+0xe40cc4>
     7d4:	0a381349 	beq	e05500 <__Stack_Size+0xe04500>
     7d8:	0d160000 	ldceq	0, cr0, [r6, #-0]
     7dc:	3a0e0300 	bcc	3813e4 <__Stack_Size+0x3803e4>
     7e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     7e4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     7e8:	1700000a 	strne	r0, [r0, -sl]
     7ec:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     7f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     7f4:	13490b39 	movtne	r0, #39737	@ 0x9b39
     7f8:	0f180000 	svceq	0x00180000
     7fc:	000b0b00 	andeq	r0, fp, r0, lsl #22
     800:	00341900 	eorseq	r1, r4, r0, lsl #18
     804:	0b3a0e03 	bleq	e84018 <__Stack_Size+0xe83018>
     808:	0b390b3b 	bleq	e434fc <__Stack_Size+0xe424fc>
     80c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	@ 6f0 <_Minimum_Stack_Size+0x5f0>
     810:	00000a02 	andeq	r0, r0, r2, lsl #20
     814:	0300341a 	movweq	r3, #1050	@ 0x41a
     818:	3b0b3a0e 	blcc	2cf058 <__Stack_Size+0x2ce058>
     81c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     820:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     824:	1b00000c 	blne	85c <_Minimum_Stack_Size+0x75c>
     828:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     82c:	0b3a0b0b 	bleq	e83460 <__Stack_Size+0xe82460>
     830:	0b390b3b 	bleq	e43524 <__Stack_Size+0xe42524>
     834:	00001301 	andeq	r1, r0, r1, lsl #6
     838:	0300341c 	movweq	r3, #1052	@ 0x41c
     83c:	3b0b3a0e 	blcc	2cf07c <__Stack_Size+0x2ce07c>
     840:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     844:	000a0213 	andeq	r0, sl, r3, lsl r2
     848:	00341d00 	eorseq	r1, r4, r0, lsl #26
     84c:	0b3a0e03 	bleq	e84060 <__Stack_Size+0xe83060>
     850:	0b390b3b 	bleq	e43544 <__Stack_Size+0xe42544>
     854:	01881349 	orreq	r1, r8, r9, asr #6
     858:	000a020b 	andeq	r0, sl, fp, lsl #4
     85c:	012e1e00 			@ <UNDEFINED> instruction: 0x012e1e00
     860:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     864:	0b3b0b3a 	bleq	ec3554 <__Stack_Size+0xec2554>
     868:	0c3c0b39 			@ <UNDEFINED> instruction: 0x0c3c0b39
     86c:	00001301 	andeq	r1, r0, r1, lsl #6
     870:	0000181f 	andeq	r1, r0, pc, lsl r8
     874:	012e2000 			@ <UNDEFINED> instruction: 0x012e2000
     878:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     87c:	0b3b0b3a 	bleq	ec356c <__Stack_Size+0xec256c>
     880:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     884:	13010c3c 	movwne	r0, #7228	@ 0x1c3c
     888:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     88c:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     890:	3b0b3a0e 	blcc	2cf0d0 <__Stack_Size+0x2ce0d0>
     894:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     898:	3c13490c 			@ <UNDEFINED> instruction: 0x3c13490c
     89c:	0013010c 	andseq	r0, r3, ip, lsl #2
     8a0:	012e2200 			@ <UNDEFINED> instruction: 0x012e2200
     8a4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     8a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     8ac:	01110b39 	tsteq	r1, r9, lsr fp
     8b0:	0a400112 	beq	1000d00 <__Stack_Size+0xfffd00>
     8b4:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     8b8:	23000013 	movwcs	r0, #19
     8bc:	00018289 	andeq	r8, r1, r9, lsl #5
     8c0:	42950111 	addsmi	r0, r5, #1073741828	@ 0x40000004
     8c4:	0013310c 	andseq	r3, r3, ip, lsl #2
     8c8:	012e2400 			@ <UNDEFINED> instruction: 0x012e2400
     8cc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     8d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     8d4:	01110b39 	tsteq	r1, r9, lsr fp
     8d8:	06400112 			@ <UNDEFINED> instruction: 0x06400112
     8dc:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     8e0:	25000013 	strcs	r0, [r0, #-19]	@ 0xffffffed
     8e4:	1331011d 	teqne	r1, #1073741831	@ 0x40000007
     8e8:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
     8ec:	12011105 	andne	r1, r1, #1073741825	@ 0x40000001
     8f0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     8f4:	010b5705 	tsteq	fp, r5, lsl #14
     8f8:	26000013 			@ <UNDEFINED> instruction: 0x26000013
     8fc:	1331001d 	teqne	r1, #29
     900:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
     904:	58065505 	stmdapl	r6, {r0, r2, r8, sl, ip, lr}
     908:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     90c:	2700000b 	strcs	r0, [r0, -fp]
     910:	1331001d 	teqne	r1, #29
     914:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
     918:	12011105 	andne	r1, r1, #1073741825	@ 0x40000001
     91c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     920:	000b570b 	andeq	r5, fp, fp, lsl #14
     924:	82892800 	addhi	r2, r9, #0, 16
     928:	01110001 	tsteq	r1, r1
     92c:	00001331 	andeq	r1, r0, r1, lsr r3
     930:	31010b29 	tstcc	r1, r9, lsr #22
     934:	01065513 	tsteq	r6, r3, lsl r5
     938:	2a000013 	bcs	98c <_Minimum_Stack_Size+0x88c>
     93c:	13310034 	teqne	r1, #52	@ 0x34
     940:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     944:	2b000006 	blcs	964 <_Minimum_Stack_Size+0x864>
     948:	1331011d 	teqne	r1, #1073741831	@ 0x40000007
     94c:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
     950:	12011105 	andne	r1, r1, #1073741825	@ 0x40000001
     954:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     958:	010b570b 	tsteq	fp, fp, lsl #14
     95c:	2c000013 	stccs	0, cr0, [r0], {19}
     960:	13310005 	teqne	r1, #5
     964:	42b70602 	adcsmi	r0, r7, #2097152	@ 0x200000
     968:	2d000006 	stccs	0, cr0, [r0, #-24]	@ 0xffffffe8
     96c:	01018289 	smlabbeq	r1, r9, r2, r8
     970:	13310111 	teqne	r1, #1073741828	@ 0x40000004
     974:	8a2e0000 	bhi	b8097c <__Stack_Size+0xb7f97c>
     978:	02000182 	andeq	r0, r0, #-2147483616	@ 0x80000020
     97c:	0a42910a 	beq	10a4dac <__Stack_Size+0x10a3dac>
     980:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     984:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     988:	3b0b3a0e 	blcc	2cf1c8 <__Stack_Size+0x2ce1c8>
     98c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     990:	1113490c 	tstne	r3, ip, lsl #18
     994:	40011201 	andmi	r1, r1, r1, lsl #4
     998:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     99c:	00001301 	andeq	r1, r0, r1, lsl #6
     9a0:	03000530 	movweq	r0, #1328	@ 0x530
     9a4:	3b0b3a08 	blcc	2cf1cc <__Stack_Size+0x2ce1cc>
     9a8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     9ac:	b7060213 	smladlt	r6, r3, r2, r0
     9b0:	00000642 	andeq	r0, r0, r2, asr #12
     9b4:	03000531 	movweq	r0, #1329	@ 0x531
     9b8:	3b0b3a0e 	blcc	2cf1f8 <__Stack_Size+0x2ce1f8>
     9bc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     9c0:	b7060213 	smladlt	r6, r3, r2, r0
     9c4:	00000642 	andeq	r0, r0, r2, asr #12
     9c8:	01828932 	orreq	r8, r2, r2, lsr r9
     9cc:	31011101 	tstcc	r1, r1, lsl #2
     9d0:	00130113 	andseq	r0, r3, r3, lsl r1
     9d4:	012e3300 			@ <UNDEFINED> instruction: 0x012e3300
     9d8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     9dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     9e0:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     9e4:	01120111 	tsteq	r2, r1, lsl r1
     9e8:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     9ec:	0013010c 	andseq	r0, r3, ip, lsl #2
     9f0:	00053400 	andeq	r3, r5, r0, lsl #8
     9f4:	0b3a0e03 	bleq	e84208 <__Stack_Size+0xe83208>
     9f8:	0b39053b 	bleq	e41eec <__Stack_Size+0xe40eec>
     9fc:	0a021349 	beq	85728 <__Stack_Size+0x84728>
     a00:	26350000 	ldrtcs	r0, [r5], -r0
     a04:	36000000 	strcc	r0, [r0], -r0
     a08:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ 958 <_Minimum_Stack_Size+0x858>
     a0c:	0b3a0e03 	bleq	e84220 <__Stack_Size+0xe83220>
     a10:	0b390b3b 	bleq	e43704 <__Stack_Size+0xe42704>
     a14:	00000b20 	andeq	r0, r0, r0, lsr #22
     a18:	3f012e37 	svccc	0x00012e37
     a1c:	3a0e030c 	bcc	381654 <__Stack_Size+0x380654>
     a20:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a24:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
     a28:	97064001 	strls	r4, [r6, -r1]
     a2c:	13010c42 	movwne	r0, #7234	@ 0x1c42
     a30:	0b380000 	bleq	e00a38 <__Stack_Size+0xdffa38>
     a34:	00130101 	andseq	r0, r3, r1, lsl #2
     a38:	00343900 	eorseq	r3, r4, r0, lsl #18
     a3c:	0b3a0e03 	bleq	e84250 <__Stack_Size+0xe83250>
     a40:	0b390b3b 	bleq	e43734 <__Stack_Size+0xe42734>
     a44:	00001349 	andeq	r1, r0, r9, asr #6
     a48:	55010b3a 	strpl	r0, [r1, #-2874]	@ 0xfffff4c6
     a4c:	00130106 	andseq	r0, r3, r6, lsl #2
     a50:	00343b00 	eorseq	r3, r4, r0, lsl #22
     a54:	0b3a0e03 	bleq	e84268 <__Stack_Size+0xe83268>
     a58:	0b390b3b 	bleq	e4374c <__Stack_Size+0xe4274c>
     a5c:	06021349 	streq	r1, [r2], -r9, asr #6
     a60:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     a64:	010b3c00 	tsteq	fp, r0, lsl #24
     a68:	01120111 	tsteq	r2, r1, lsl r1
     a6c:	00001301 	andeq	r1, r0, r1, lsl #6
     a70:	11010b3d 	tstne	r1, sp, lsr fp
     a74:	00011201 	andeq	r1, r1, r1, lsl #4
     a78:	012e3e00 			@ <UNDEFINED> instruction: 0x012e3e00
     a7c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     a80:	0b3b0b3a 	bleq	ec3770 <__Stack_Size+0xec2770>
     a84:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     a88:	0b201349 	bleq	8057b4 <__Stack_Size+0x8047b4>
     a8c:	00001301 	andeq	r1, r0, r1, lsl #6
     a90:	0300053f 	movweq	r0, #1343	@ 0x53f
     a94:	3b0b3a08 	blcc	2cf2bc <__Stack_Size+0x2ce2bc>
     a98:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a9c:	40000013 	andmi	r0, r0, r3, lsl r0
     aa0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     aa4:	0b3b0b3a 	bleq	ec3794 <__Stack_Size+0xec2794>
     aa8:	13490b39 	movtne	r0, #39737	@ 0x9b39
     aac:	2e410000 	cdpcs	0, 4, cr0, cr1, cr0, {0}
     ab0:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     ab4:	3b0b3a0e 	blcc	2cf2f4 <__Stack_Size+0x2ce2f4>
     ab8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     abc:	1113490c 	tstne	r3, ip, lsl #18
     ac0:	40011201 	andmi	r1, r1, r1, lsl #4
     ac4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     ac8:	00001301 	andeq	r1, r0, r1, lsl #6
     acc:	03000542 	movweq	r0, #1346	@ 0x542
     ad0:	3b0b3a08 	blcc	2cf2f8 <__Stack_Size+0x2ce2f8>
     ad4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ad8:	b7060213 	smladlt	r6, r3, r2, r0
     adc:	00000642 	andeq	r0, r0, r2, asr #12
     ae0:	03000543 	movweq	r0, #1347	@ 0x543
     ae4:	3b0b3a0e 	blcc	2cf324 <__Stack_Size+0x2ce324>
     ae8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     aec:	000a0213 	andeq	r0, sl, r3, lsl r2
     af0:	002e4400 	eoreq	r4, lr, r0, lsl #8
     af4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     af8:	0b3b0b3a 	bleq	ec37e8 <__Stack_Size+0xec27e8>
     afc:	01110b39 	tsteq	r1, r9, lsr fp
     b00:	0a400112 	beq	1000f50 <__Stack_Size+0xffff50>
     b04:	000c4297 	muleq	ip, r7, r2
     b08:	00344500 	eorseq	r4, r4, r0, lsl #10
     b0c:	0b3a0803 	bleq	e82b20 <__Stack_Size+0xe81b20>
     b10:	0b390b3b 	bleq	e43804 <__Stack_Size+0xe42804>
     b14:	06021349 	streq	r1, [r2], -r9, asr #6
     b18:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     b1c:	00054600 	andeq	r4, r5, r0, lsl #12
     b20:	0b3a0e03 	bleq	e84334 <__Stack_Size+0xe83334>
     b24:	0b390b3b 	bleq	e43818 <__Stack_Size+0xe42818>
     b28:	06021349 	streq	r1, [r2], -r9, asr #6
     b2c:	000642b7 			@ <UNDEFINED> instruction: 0x000642b7
     b30:	012e4700 			@ <UNDEFINED> instruction: 0x012e4700
     b34:	0b3a0e03 	bleq	e84348 <__Stack_Size+0xe83348>
     b38:	0b390b3b 	bleq	e4382c <__Stack_Size+0xe4282c>
     b3c:	13010b20 	movwne	r0, #6944	@ 0x1b20
     b40:	2e480000 	cdpcs	0, 4, cr0, cr8, cr0, {0}
     b44:	030c3f00 	movweq	r3, #52992	@ 0xcf00
     b48:	3b0b3a0e 	blcc	2cf388 <__Stack_Size+0x2ce388>
     b4c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b50:	000b2013 	andeq	r2, fp, r3, lsl r0
     b54:	00344900 	eorseq	r4, r4, r0, lsl #18
     b58:	0b3a0803 	bleq	e82b6c <__Stack_Size+0xe81b6c>
     b5c:	0b390b3b 	bleq	e43850 <__Stack_Size+0xe42850>
     b60:	00001349 	andeq	r1, r0, r9, asr #6
     b64:	00010b4a 	andeq	r0, r1, sl, asr #22
     b68:	012e4b00 			@ <UNDEFINED> instruction: 0x012e4b00
     b6c:	0b3a0e03 	bleq	e84380 <__Stack_Size+0xe83380>
     b70:	0b390b3b 	bleq	e43864 <__Stack_Size+0xe42864>
     b74:	01110c27 	tsteq	r1, r7, lsr #24
     b78:	06400112 			@ <UNDEFINED> instruction: 0x06400112
     b7c:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
     b80:	4c000013 	stcmi	0, cr0, [r0], {19}
     b84:	1331011d 	teqne	r1, #1073741831	@ 0x40000007
     b88:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
     b8c:	58065505 	stmdapl	r6, {r0, r2, r8, sl, ip, lr}
     b90:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     b94:	4d00000b 	stcmi	0, cr0, [r0, #-44]	@ 0xffffffd4
     b98:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     b9c:	2e4e0000 	cdpcs	0, 4, cr0, cr14, cr0, {0}
     ba0:	3a0e0301 	bcc	3817ac <__Stack_Size+0x3807ac>
     ba4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ba8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     bac:	010b2013 	tsteq	fp, r3, lsl r0
     bb0:	4f000013 	svcmi	0x00000013
     bb4:	0e03012e 	adfeqsp	f0, f3, #0.5
     bb8:	0b3b0b3a 	bleq	ec38a8 <__Stack_Size+0xec28a8>
     bbc:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     bc0:	13010b20 	movwne	r0, #6944	@ 0x1b20
     bc4:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
     bc8:	3a0e0301 	bcc	3817d4 <__Stack_Size+0x3807d4>
     bcc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     bd0:	200c270b 	andcs	r2, ip, fp, lsl #14
     bd4:	0013010b 	andseq	r0, r3, fp, lsl #2
     bd8:	00055100 	andeq	r5, r5, r0, lsl #2
     bdc:	0b3a0e03 	bleq	e843f0 <__Stack_Size+0xe833f0>
     be0:	0b39053b 	bleq	e420d4 <__Stack_Size+0xe410d4>
     be4:	00001349 	andeq	r1, r0, r9, asr #6
     be8:	31012e52 	tstcc	r1, r2, asr lr
     bec:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
     bf0:	970a4001 	strls	r4, [sl, -r1]
     bf4:	13010c42 	movwne	r0, #7234	@ 0x1c42
     bf8:	05530000 	ldrbeq	r0, [r3, #-0]
     bfc:	02133100 	andseq	r3, r3, #0, 2
     c00:	5400000a 	strpl	r0, [r0], #-10
     c04:	1331012e 	teqne	r1, #-2147483637	@ 0x8000000b
     c08:	01120111 	tsteq	r2, r1, lsl r1
     c0c:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
     c10:	0013010c 	andseq	r0, r3, ip, lsl #2
     c14:	011d5500 	tsteq	sp, r0, lsl #10
     c18:	01521331 	cmpeq	r2, r1, lsr r3
     c1c:	110542b8 			@ <UNDEFINED> instruction: 0x110542b8
     c20:	58011201 	stmdapl	r1, {r0, r9, ip}
     c24:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     c28:	5600000b 	strpl	r0, [r0], -fp
     c2c:	1331012e 	teqne	r1, #-2147483637	@ 0x8000000b
     c30:	01120111 	tsteq	r2, r1, lsl r1
     c34:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
     c38:	0000000c 	andeq	r0, r0, ip
     c3c:	25011101 	strcs	r1, [r1, #-257]	@ 0xfffffeff
     c40:	030b130e 	movweq	r1, #45838	@ 0xb30e
     c44:	110e1b0e 	tstne	lr, lr, lsl #22
     c48:	10011201 	andne	r1, r1, r1, lsl #4
     c4c:	02000006 	andeq	r0, r0, #6
     c50:	0b0b0024 	bleq	2c0ce8 <__Stack_Size+0x2bfce8>
     c54:	0e030b3e 	vmoveq.16	d3[0], r0
     c58:	16030000 	strne	r0, [r3], -r0
     c5c:	3a0e0300 	bcc	381864 <__Stack_Size+0x380864>
     c60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c64:	0013490b 	andseq	r4, r3, fp, lsl #18
     c68:	00350400 	eorseq	r0, r5, r0, lsl #8
     c6c:	00001349 	andeq	r1, r0, r9, asr #6
     c70:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     c74:	06000013 			@ <UNDEFINED> instruction: 0x06000013
     c78:	0b0b0024 	bleq	2c0d10 <__Stack_Size+0x2bfd10>
     c7c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     c80:	13070000 	movwne	r0, #28672	@ 0x7000
     c84:	3a0b0b01 	bcc	2c3890 <__Stack_Size+0x2c2890>
     c88:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c8c:	0013010b 	andseq	r0, r3, fp, lsl #2
     c90:	000d0800 	andeq	r0, sp, r0, lsl #16
     c94:	0b3a0e03 	bleq	e844a8 <__Stack_Size+0xe834a8>
     c98:	0b39053b 	bleq	e4218c <__Stack_Size+0xe4118c>
     c9c:	0a381349 	beq	e059c8 <__Stack_Size+0xe049c8>
     ca0:	0d090000 	stceq	0, cr0, [r9, #-0]
     ca4:	3a080300 	bcc	2018ac <__Stack_Size+0x2008ac>
     ca8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     cac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     cb0:	0a00000a 	beq	ce0 <_Minimum_Stack_Size+0xbe0>
     cb4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     cb8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     cbc:	13490b39 	movtne	r0, #39737	@ 0x9b39
     cc0:	340b0000 	strcc	r0, [fp], #-0
     cc4:	3a0e0300 	bcc	3818cc <__Stack_Size+0x3808cc>
     cc8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ccc:	3f13490b 	svccc	0x0013490b
     cd0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     cd4:	00340c00 	eorseq	r0, r4, r0, lsl #24
     cd8:	0b3a1347 	bleq	e859fc <__Stack_Size+0xe849fc>
     cdc:	0b390b3b 	bleq	e439d0 <__Stack_Size+0xe429d0>
     ce0:	00000a02 	andeq	r0, r0, r2, lsl #20
     ce4:	3f002e0d 	svccc	0x00002e0d
     ce8:	3a0e030c 	bcc	381920 <__Stack_Size+0x380920>
     cec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     cf0:	1201110b 	andne	r1, r1, #-1073741822	@ 0xc0000002
     cf4:	970a4001 	strls	r4, [sl, -r1]
     cf8:	00000c42 	andeq	r0, r0, r2, asr #24
     cfc:	01110100 	tsteq	r1, r0, lsl #2
     d00:	0b130e25 	bleq	4c459c <__Stack_Size+0x4c359c>
     d04:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     d08:	01120111 	tsteq	r2, r1, lsl r1
     d0c:	00000610 	andeq	r0, r0, r0, lsl r6
     d10:	0b002402 	bleq	9d20 <__Stack_Size+0x8d20>
     d14:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
     d18:	0300000e 	movweq	r0, #14
     d1c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     d20:	0b3b0b3a 	bleq	ec3a10 <__Stack_Size+0xec2a10>
     d24:	13490b39 	movtne	r0, #39737	@ 0x9b39
     d28:	35040000 	strcc	r0, [r4, #-0]
     d2c:	00134900 	andseq	r4, r3, r0, lsl #18
     d30:	00260500 	eoreq	r0, r6, r0, lsl #10
     d34:	00001349 	andeq	r1, r0, r9, asr #6
     d38:	0b002406 	bleq	9d58 <__Stack_Size+0x8d58>
     d3c:	030b3e0b 	movweq	r3, #48651	@ 0xbe0b
     d40:	07000008 	streq	r0, [r0, -r8]
     d44:	0b0b000f 	bleq	2c0d88 <__Stack_Size+0x2bfd88>
     d48:	00001349 	andeq	r1, r0, r9, asr #6
     d4c:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     d50:	0013010c 	andseq	r0, r3, ip, lsl #2
     d54:	00050900 	andeq	r0, r5, r0, lsl #18
     d58:	00001349 	andeq	r1, r0, r9, asr #6
     d5c:	0b01130a 	bleq	4598c <__Stack_Size+0x4498c>
     d60:	3b0b3a0b 	blcc	2cf594 <__Stack_Size+0x2ce594>
     d64:	010b390b 	tsteq	fp, fp, lsl #18
     d68:	0b000013 	bleq	dbc <_Minimum_Stack_Size+0xcbc>
     d6c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     d70:	0b3b0b3a 	bleq	ec3a60 <__Stack_Size+0xec2a60>
     d74:	13490b39 	movtne	r0, #39737	@ 0x9b39
     d78:	00000a38 	andeq	r0, r0, r8, lsr sl
     d7c:	3e01040c 	cdpcc	4, 0, cr0, cr1, cr12, {0}
     d80:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     d84:	3b0b3a13 	blcc	2cf5d8 <__Stack_Size+0x2ce5d8>
     d88:	010b390b 	tsteq	fp, fp, lsl #18
     d8c:	0d000013 	stceq	0, cr0, [r0, #-76]	@ 0xffffffb4
     d90:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     d94:	00000d1c 	andeq	r0, r0, ip, lsl sp
     d98:	0300280e 	movweq	r2, #2062	@ 0x80e
     d9c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     da0:	01130f00 	tsteq	r3, r0, lsl #30
     da4:	0b3a050b 	bleq	e821d8 <__Stack_Size+0xe811d8>
     da8:	0b390b3b 	bleq	e43a9c <__Stack_Size+0xe42a9c>
     dac:	00001301 	andeq	r1, r0, r1, lsl #6
     db0:	03000d10 	movweq	r0, #3344	@ 0xd10
     db4:	3b0b3a08 	blcc	2cf5dc <__Stack_Size+0x2ce5dc>
     db8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     dbc:	000a3813 	andeq	r3, sl, r3, lsl r8
     dc0:	01011100 	mrseq	r1, (UNDEF: 17)
     dc4:	13011349 	movwne	r1, #4937	@ 0x1349
     dc8:	21120000 	tstcs	r2, r0
     dcc:	2f134900 	svccs	0x00134900
     dd0:	1300000b 	movwne	r0, #11
     dd4:	13490021 	movtne	r0, #36897	@ 0x9021
     dd8:	0000052f 	andeq	r0, r0, pc, lsr #10
     ddc:	0b011314 	bleq	45a34 <__Stack_Size+0x44a34>
     de0:	3b0b3a0b 	blcc	2cf614 <__Stack_Size+0x2ce614>
     de4:	010b3905 	tsteq	fp, r5, lsl #18
     de8:	15000013 	strne	r0, [r0, #-19]	@ 0xffffffed
     dec:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     df0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
     df4:	13490b39 	movtne	r0, #39737	@ 0x9b39
     df8:	00000a38 	andeq	r0, r0, r8, lsr sl
     dfc:	03000d16 	movweq	r0, #3350	@ 0xd16
     e00:	3b0b3a0e 	blcc	2cf640 <__Stack_Size+0x2ce640>
     e04:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e08:	000a3813 	andeq	r3, sl, r3, lsl r8
     e0c:	00161700 	andseq	r1, r6, r0, lsl #14
     e10:	0b3a0e03 	bleq	e84624 <__Stack_Size+0xe83624>
     e14:	0b39053b 	bleq	e42308 <__Stack_Size+0xe41308>
     e18:	00001349 	andeq	r1, r0, r9, asr #6
     e1c:	03003418 	movweq	r3, #1048	@ 0x418
     e20:	3b0b3a0e 	blcc	2cf660 <__Stack_Size+0x2ce660>
     e24:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e28:	000a0213 	andeq	r0, sl, r3, lsl r2
     e2c:	00341900 	eorseq	r1, r4, r0, lsl #18
     e30:	0b3a0e03 	bleq	e84644 <__Stack_Size+0xe83644>
     e34:	0b390b3b 	bleq	e43b28 <__Stack_Size+0xe42b28>
     e38:	0c3f1349 	ldceq	3, cr1, [pc], #-292	@ d1c <_Minimum_Stack_Size+0xc1c>
     e3c:	00000c3c 	andeq	r0, r0, ip, lsr ip
     e40:	0301131a 	movweq	r1, #4890	@ 0x131a
     e44:	3a0b0b0e 	bcc	2c3a84 <__Stack_Size+0x2c2a84>
     e48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e4c:	0013010b 	andseq	r0, r3, fp, lsl #2
     e50:	00341b00 	eorseq	r1, r4, r0, lsl #22
     e54:	0b3a0e03 	bleq	e84668 <__Stack_Size+0xe83668>
     e58:	0b390b3b 	bleq	e43b4c <__Stack_Size+0xe42b4c>
     e5c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	@ d40 <_Minimum_Stack_Size+0xc40>
     e60:	00000a02 	andeq	r0, r0, r2, lsl #20
     e64:	3f012e1c 	svccc	0x00012e1c
     e68:	3a0e030c 	bcc	381aa0 <__Stack_Size+0x380aa0>
     e6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e70:	3c0c270b 	stccc	7, cr2, [ip], {11}
     e74:	0013010c 	andseq	r0, r3, ip, lsl #2
     e78:	012e1d00 			@ <UNDEFINED> instruction: 0x012e1d00
     e7c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     e80:	0b3b0b3a 	bleq	ec3b70 <__Stack_Size+0xec2b70>
     e84:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
     e88:	0c3c1349 	ldceq	3, cr1, [ip], #-292	@ 0xfffffedc
     e8c:	00001301 	andeq	r1, r0, r1, lsl #6
     e90:	3f012e1e 	svccc	0x00012e1e
     e94:	3a0e030c 	bcc	381acc <__Stack_Size+0x380acc>
     e98:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e9c:	110c270b 	tstne	ip, fp, lsl #14
     ea0:	40011201 	andmi	r1, r1, r1, lsl #4
     ea4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     ea8:	00001301 	andeq	r1, r0, r1, lsl #6
     eac:	0300051f 	movweq	r0, #1311	@ 0x51f
     eb0:	3b0b3a08 	blcc	2cf6d8 <__Stack_Size+0x2ce6d8>
     eb4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     eb8:	b7060213 	smladlt	r6, r3, r2, r0
     ebc:	00000642 	andeq	r0, r0, r2, asr #12
     ec0:	03000520 	movweq	r0, #1312	@ 0x520
     ec4:	3b0b3a0e 	blcc	2cf704 <__Stack_Size+0x2ce704>
     ec8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ecc:	b7060213 	smladlt	r6, r3, r2, r0
     ed0:	00000642 	andeq	r0, r0, r2, asr #12
     ed4:	03003421 	movweq	r3, #1057	@ 0x421
     ed8:	3b0b3a08 	blcc	2cf700 <__Stack_Size+0x2ce700>
     edc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ee0:	b7060213 	smladlt	r6, r3, r2, r0
     ee4:	00000642 	andeq	r0, r0, r2, asr #12
     ee8:	55010b22 	strpl	r0, [r1, #-2850]	@ 0xfffff4de
     eec:	23000006 	movwcs	r0, #6
     ef0:	08030034 	stmdaeq	r3, {r2, r4, r5}
     ef4:	0b3b0b3a 	bleq	ec3be4 <__Stack_Size+0xec2be4>
     ef8:	13490b39 	movtne	r0, #39737	@ 0x9b39
     efc:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     f00:	030c3f01 	movweq	r3, #52993	@ 0xcf01
     f04:	3b0b3a0e 	blcc	2cf744 <__Stack_Size+0x2ce744>
     f08:	110b390b 	tstne	fp, fp, lsl #18
     f0c:	40011201 	andmi	r1, r1, r1, lsl #4
     f10:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     f14:	00001301 	andeq	r1, r0, r1, lsl #6
     f18:	03003425 	movweq	r3, #1061	@ 0x425
     f1c:	3b0b3a08 	blcc	2cf744 <__Stack_Size+0x2ce744>
     f20:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f24:	0b018813 	bleq	62f78 <__Stack_Size+0x61f78>
     f28:	00000a02 	andeq	r0, r0, r2, lsl #20
     f2c:	03003426 	movweq	r3, #1062	@ 0x426
     f30:	3b0b3a0e 	blcc	2cf770 <__Stack_Size+0x2ce770>
     f34:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f38:	b7060213 	smladlt	r6, r3, r2, r0
     f3c:	00000642 	andeq	r0, r0, r2, asr #12
     f40:	31011d27 	tstcc	r1, r7, lsr #26
     f44:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     f48:	01110b42 	tsteq	r1, r2, asr #22
     f4c:	0b580112 	bleq	160139c <__Stack_Size+0x160039c>
     f50:	0b570b59 	bleq	15c3cbc <__Stack_Size+0x15c2cbc>
     f54:	00001301 	andeq	r1, r0, r1, lsl #6
     f58:	31000528 	tstcc	r0, r8, lsr #10
     f5c:	b7060213 	smladlt	r6, r3, r2, r0
     f60:	00000642 	andeq	r0, r0, r2, asr #12
     f64:	31011d29 	tstcc	r1, r9, lsr #26
     f68:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     f6c:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
     f70:	0b590b58 	bleq	1643cd8 <__Stack_Size+0x1642cd8>
     f74:	13010b57 	movwne	r0, #6999	@ 0x1b57
     f78:	892a0000 	stmdbhi	sl!, {}	@ <UNPREDICTABLE>
     f7c:	11000182 	smlabbne	r0, r2, r1, r0
     f80:	00133101 	andseq	r3, r3, r1, lsl #2
     f84:	00342b00 	eorseq	r2, r4, r0, lsl #22
     f88:	0a021331 	beq	85c54 <__Stack_Size+0x84c54>
     f8c:	342c0000 	strtcc	r0, [ip], #-0
     f90:	02133100 	andseq	r3, r3, #0, 2
     f94:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     f98:	892d0000 	pushhi	{}	@ <UNPREDICTABLE>
     f9c:	11010182 	smlabbne	r1, r2, r1, r0
     fa0:	00133101 	andseq	r3, r3, r1, lsl #2
     fa4:	828a2e00 	addhi	r2, sl, #0, 28
     fa8:	0a020001 	beq	80fb4 <__Stack_Size+0x7ffb4>
     fac:	000a4291 	muleq	sl, r1, r2
     fb0:	001d2f00 	andseq	r2, sp, r0, lsl #30
     fb4:	01521331 	cmpeq	r2, r1, lsr r3
     fb8:	550b42b8 	strpl	r4, [fp, #-696]	@ 0xfffffd48
     fbc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     fc0:	000b570b 	andeq	r5, fp, fp, lsl #14
     fc4:	82893000 	addhi	r3, r9, #0
     fc8:	01110101 	tsteq	r1, r1, lsl #2
     fcc:	13011331 	movwne	r1, #4913	@ 0x1331
     fd0:	1d310000 	ldcne	0, cr0, [r1, #-0]
     fd4:	52133100 	andspl	r3, r3, #0, 2
     fd8:	0b42b801 	bleq	10aefe4 <__Stack_Size+0x10adfe4>
     fdc:	01120111 	tsteq	r2, r1, lsl r1
     fe0:	0b590b58 	bleq	1643d48 <__Stack_Size+0x1642d48>
     fe4:	00000b57 	andeq	r0, r0, r7, asr fp
     fe8:	01010b32 	tsteq	r1, r2, lsr fp
     fec:	33000013 	movwcc	r0, #19
     ff0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     ff4:	0b3b0b3a 	bleq	ec3ce4 <__Stack_Size+0xec2ce4>
     ff8:	13490b39 	movtne	r0, #39737	@ 0x9b39
     ffc:	0b340000 	bleq	d01004 <__Stack_Size+0xd00004>
    1000:	01065501 	tsteq	r6, r1, lsl #10
    1004:	35000013 	strcc	r0, [r0, #-19]	@ 0xffffffed
    1008:	0e03012e 	adfeqsp	f0, f3, #0.5
    100c:	0b3b0b3a 	bleq	ec3cfc <__Stack_Size+0xec2cfc>
    1010:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
    1014:	13010b20 	movwne	r0, #6944	@ 0x1b20
    1018:	05360000 	ldreq	r0, [r6, #-0]!
    101c:	3a0e0300 	bcc	381c24 <__Stack_Size+0x380c24>
    1020:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1024:	0013490b 	andseq	r4, r3, fp, lsl #18
    1028:	00343700 	eorseq	r3, r4, r0, lsl #14
    102c:	0b3a0803 	bleq	e83040 <__Stack_Size+0xe82040>
    1030:	0b390b3b 	bleq	e43d24 <__Stack_Size+0xe42d24>
    1034:	01881349 	orreq	r1, r8, r9, asr #6
    1038:	3800000b 	stmdacc	r0, {r0, r1, r3}
    103c:	0c3f012e 	ldfeqs	f0, [pc], #-184	@ f8c <_Minimum_Stack_Size+0xe8c>
    1040:	0b3a0e03 	bleq	e84854 <__Stack_Size+0xe83854>
    1044:	0b390b3b 	bleq	e43d38 <__Stack_Size+0xe42d38>
    1048:	13490c27 	movtne	r0, #39975	@ 0x9c27
    104c:	01120111 	tsteq	r2, r1, lsl r1
    1050:	42970640 	addsmi	r0, r7, #64, 12	@ 0x4000000
    1054:	0013010c 	andseq	r0, r3, ip, lsl #2
    1058:	012e3900 			@ <UNDEFINED> instruction: 0x012e3900
    105c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1060:	0b3b0b3a 	bleq	ec3d50 <__Stack_Size+0xec2d50>
    1064:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
    1068:	13010b20 	movwne	r0, #6944	@ 0x1b20
    106c:	053a0000 	ldreq	r0, [sl, #-0]!
    1070:	3a080300 	bcc	201c78 <__Stack_Size+0x200c78>
    1074:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1078:	0013490b 	andseq	r4, r3, fp, lsl #18
    107c:	012e3b00 			@ <UNDEFINED> instruction: 0x012e3b00
    1080:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1084:	0b3b0b3a 	bleq	ec3d74 <__Stack_Size+0xec2d74>
    1088:	0c270b39 			@ <UNDEFINED> instruction: 0x0c270b39
    108c:	01111349 	tsteq	r1, r9, asr #6
    1090:	0a400112 	beq	10014e0 <__Stack_Size+0x10004e0>
    1094:	010c4297 			@ <UNDEFINED> instruction: 0x010c4297
    1098:	3c000013 	stccc	0, cr0, [r0], {19}
    109c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    10a0:	0b3b0b3a 	bleq	ec3d90 <__Stack_Size+0xec2d90>
    10a4:	13490b39 	movtne	r0, #39737	@ 0x9b39
    10a8:	00000a02 	andeq	r0, r0, r2, lsl #20
    10ac:	0b000f3d 	bleq	4da8 <__Stack_Size+0x3da8>
    10b0:	3e00000b 	cdpcc	0, 0, cr0, cr0, cr11, {0}
    10b4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	@ 1004 <__Stack_Size+0x4>
    10b8:	0b3a0e03 	bleq	e848cc <__Stack_Size+0xe838cc>
    10bc:	0b390b3b 	bleq	e43db0 <__Stack_Size+0xe42db0>
    10c0:	0b201349 	bleq	805dec <__Stack_Size+0x804dec>
    10c4:	893f0000 	ldmdbhi	pc!, {}	@ <UNPREDICTABLE>
    10c8:	11010182 	smlabbne	r1, r2, r1, r0
    10cc:	0c429501 	cfstr64eq	mvdx9, [r2], {1}
    10d0:	00001331 	andeq	r1, r0, r1, lsr r3
    10d4:	31011d40 	tstcc	r1, r0, asr #26
    10d8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    10dc:	01110b42 	tsteq	r1, r2, asr #22
    10e0:	0b580112 	bleq	1601530 <__Stack_Size+0x1600530>
    10e4:	0b570b59 	bleq	15c3e50 <__Stack_Size+0x15c2e50>
    10e8:	2e410000 	cdpcs	0, 4, cr0, cr1, cr0, {0}
    10ec:	030c3f01 	movweq	r3, #52993	@ 0xcf01
    10f0:	3b0b3a0e 	blcc	2cf930 <__Stack_Size+0x2ce930>
    10f4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    10f8:	2013490c 	andscs	r4, r3, ip, lsl #18
    10fc:	0013010b 	andseq	r0, r3, fp, lsl #2
    1100:	012e4200 			@ <UNDEFINED> instruction: 0x012e4200
    1104:	0b3a0e03 	bleq	e84918 <__Stack_Size+0xe83918>
    1108:	0b390b3b 	bleq	e43dfc <__Stack_Size+0xe42dfc>
    110c:	13490c27 	movtne	r0, #39975	@ 0x9c27
    1110:	13010b20 	movwne	r0, #6944	@ 0x1b20
    1114:	2e430000 	cdpcs	0, 4, cr0, cr3, cr0, {0}
    1118:	3a0e0301 	bcc	381d24 <__Stack_Size+0x380d24>
    111c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1120:	200c270b 	andcs	r2, ip, fp, lsl #14
    1124:	0013010b 	andseq	r0, r3, fp, lsl #2
    1128:	00054400 	andeq	r4, r5, r0, lsl #8
    112c:	0b3a0e03 	bleq	e84940 <__Stack_Size+0xe83940>
    1130:	0b39053b 	bleq	e42624 <__Stack_Size+0xe41624>
    1134:	00001349 	andeq	r1, r0, r9, asr #6
    1138:	31012e45 	tstcc	r1, r5, asr #28
    113c:	12011113 	andne	r1, r1, #-1073741820	@ 0xc0000004
    1140:	970a4001 	strls	r4, [sl, -r1]
    1144:	13010c42 	movwne	r0, #7234	@ 0x1c42
    1148:	05460000 	strbeq	r0, [r6, #-0]
    114c:	02133100 	andseq	r3, r3, #0, 2
    1150:	4700000a 	strmi	r0, [r0, -sl]
    1154:	1331012e 	teqne	r1, #-2147483637	@ 0x8000000b
    1158:	01120111 	tsteq	r2, r1, lsl r1
    115c:	42970a40 	addsmi	r0, r7, #64, 20	@ 0x40000
    1160:	4800000c 	stmdami	r0, {r2, r3}
    1164:	1331011d 	teqne	r1, #1073741831	@ 0x40000007
    1168:	42b80152 	adcsmi	r0, r8, #-2147483628	@ 0x80000014
    116c:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
    1170:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1174:	0000000b 	andeq	r0, r0, fp

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000002ee 	andeq	r0, r0, lr, ror #5
       4:	00a70003 	adceq	r0, r7, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	73010000 	movwvc	r0, #4096	@ 0x1000
      1c:	6c006372 	stcvs	3, cr6, [r0], {114}	@ 0x72
      20:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	@ <UNPREDICTABLE>
      24:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
      28:	2f006564 	svccs	0x00006564
      2c:	2f727375 	svccs	0x00727375
      30:	2f62696c 	svccs	0x0062696c
      34:	2f636367 	svccs	0x00636367
      38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	@ 0xfffffe7c
      3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	@ 0xfffff092
      40:	6261652d 	rsbvs	r6, r1, #188743680	@ 0xb400000
      44:	32312f69 	eorscc	r2, r1, #420	@ 0x1a4
      48:	312e322e 			@ <UNDEFINED> instruction: 0x312e322e
      4c:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
      50:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
      54:	616d0000 	cmnvs	sp, r0
      58:	632e6e69 			@ <UNDEFINED> instruction: 0x632e6e69
      5c:	00000100 	andeq	r0, r0, r0, lsl #2
      60:	636f6c63 	cmnvs	pc, #25344	@ 0x6300
      64:	00682e6b 	rsbeq	r2, r8, fp, ror #28
      68:	63000001 	movwvs	r0, #1
      6c:	5f65726f 	svcpl	0x0065726f
      70:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
      74:	00020068 	andeq	r0, r2, r8, rrx
      78:	64747300 	ldrbtvs	r7, [r4], #-768	@ 0xfffffd00
      7c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
      80:	00030068 	andeq	r0, r3, r8, rrx
      84:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      88:	31663233 	cmncc	r6, r3, lsr r2
      8c:	62783330 	rsbsvs	r3, r8, #48, 6	@ 0xc0000000
      90:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
      94:	73750000 	cmnvc	r5, #0
      98:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
      9c:	00682e62 	rsbeq	r2, r8, r2, ror #28
      a0:	73000001 	movwvc	r0, #1
      a4:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
      a8:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
      ac:	00000100 	andeq	r0, r0, r0, lsl #2
      b0:	05020400 	streq	r0, [r2, #-1024]	@ 0xfffffc00
      b4:	02050015 	andeq	r0, r5, #21
      b8:	08000120 	stmdaeq	r0, {r5, r8}
      bc:	05010d03 	streq	r0, [r1, #-3331]	@ 0xfffff2fd
      c0:	14131303 	ldrne	r1, [r3], #-771	@ 0xfffffcfd
      c4:	01060605 	tsteq	r6, r5, lsl #12
      c8:	052e0b05 	streq	r0, [lr, #-2821]!	@ 0xfffff4fb
      cc:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
      d0:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
      d4:	0305200b 	movweq	r2, #20491	@ 0x500b
      d8:	06053d06 	streq	r3, [r5], -r6, lsl #26
      dc:	0b050106 	bleq	1404fc <__Stack_Size+0x13f4fc>
      e0:	06030520 	streq	r0, [r3], -r0, lsr #10
      e4:	010c053d 	tsteq	ip, sp, lsr r5
      e8:	11060b05 	tstne	r6, r5, lsl #22
      ec:	30060505 	andcc	r0, r6, r5, lsl #10
      f0:	01060b05 	tsteq	r6, r5, lsl #22
      f4:	05200705 	streq	r0, [r0, #-1797]!	@ 0xfffff8fb
      f8:	04020016 	streq	r0, [r2], #-22	@ 0xffffffea
      fc:	052d0602 	streq	r0, [sp, #-1538]!	@ 0xfffff9fe
     100:	0402000c 	streq	r0, [r2], #-12
     104:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
     108:	20060204 	andcs	r0, r6, r4, lsl #4
     10c:	05231a05 	streq	r1, [r3, #-2565]!	@ 0xfffff5fb
     110:	2e25030a 	cdpcs	3, 2, cr0, cr5, cr10, {0}
     114:	13010520 	movwne	r0, #5408	@ 0x1520
     118:	03060305 	movweq	r0, #25349	@ 0x6305
     11c:	05132075 	ldreq	r2, [r3, #-117]	@ 0xffffff8b
     120:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
     124:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
     128:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
     12c:	052f0603 	streq	r0, [pc, #-1539]!	@ fffffb31 <BootRAM+0xef702d2>
     130:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
     134:	052f0603 	streq	r0, [pc, #-1539]!	@ fffffb39 <BootRAM+0xef702da>
     138:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     13c:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
     140:	0d05010c 	stfeqs	f0, [r5, #-48]	@ 0xffffffd0
     144:	05051106 	streq	r1, [r5, #-262]	@ 0xfffffefa
     148:	0c053006 	stceq	0, cr3, [r5], {6}
     14c:	13050106 	movwne	r0, #20742	@ 0x5106
     150:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
     154:	2d061605 	stccs	6, cr1, [r6, #-20]	@ 0xffffffec
     158:	06010c05 	streq	r0, [r1], -r5, lsl #24
     15c:	231a0520 	tstcs	sl, #32, 10	@ 0x8000000
     160:	0603052e 	streq	r0, [r3], -lr, lsr #10
     164:	05015d03 	streq	r5, [r1, #-3331]	@ 0xfffff2fd
     168:	01760308 	cmneq	r6, r8, lsl #6
     16c:	0b030305 	bleq	c0d88 <__Stack_Size+0xbfd88>
     170:	06080501 	streq	r0, [r8], -r1, lsl #10
     174:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
     178:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
     17c:	01060805 	tsteq	r6, r5, lsl #16
     180:	05200e05 	streq	r0, [r0, #-3589]!	@ 0xfffff1fb
     184:	053e0603 	ldreq	r0, [lr, #-1539]!	@ 0xfffff9fd
     188:	05010608 	streq	r0, [r1, #-1544]	@ 0xfffff9f8
     18c:	0305200e 	movweq	r2, #20494	@ 0x500e
     190:	08053d06 	stmdaeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     194:	0e050106 	adfeqs	f0, f5, f6
     198:	06030520 	streq	r0, [r3], -r0, lsr #10
     19c:	0607053e 			@ <UNDEFINED> instruction: 0x0607053e
     1a0:	06030501 	streq	r0, [r3], -r1, lsl #10
     1a4:	13151321 	tstne	r5, #-2080374784	@ 0x84000000
     1a8:	2f141314 	svccs	0x00141314
     1ac:	01060705 	tsteq	r6, r5, lsl #14
     1b0:	0603052e 	streq	r0, [r3], -lr, lsr #10
     1b4:	060d0530 			@ <UNDEFINED> instruction: 0x060d0530
     1b8:	06030501 	streq	r0, [r3], -r1, lsl #10
     1bc:	06060522 	streq	r0, [r6], -r2, lsr #10
     1c0:	200b0501 	andcs	r0, fp, r1, lsl #10
     1c4:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
     1c8:	05010c05 	streq	r0, [r1, #-3077]	@ 0xfffff3fb
     1cc:	0511060b 	ldreq	r0, [r1, #-1547]	@ 0xfffff9f5
     1d0:	05300605 	ldreq	r0, [r0, #-1541]!	@ 0xfffff9fb
     1d4:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
     1d8:	16052007 	strne	r2, [r5], -r7
     1dc:	0c052d06 	stceq	13, cr2, [r5], {6}
     1e0:	05200601 	streq	r0, [r0, #-1537]!	@ 0xfffff9ff
     1e4:	0104231a 	tsteq	r4, sl, lsl r3
     1e8:	03061c05 	movweq	r1, #27653	@ 0x6c05
     1ec:	2c059055 	stccs	0, cr9, [r5], {85}	@ 0x55
     1f0:	012d0521 			@ <UNDEFINED> instruction: 0x012d0521
     1f4:	05221a05 	streq	r1, [r2, #-2565]!	@ 0xfffff5fb
     1f8:	09051303 	stmdbeq	r5, {r0, r1, r8, r9, ip}
     1fc:	01040200 	mrseq	r0, R12_usr
     200:	04020001 	streq	r0, [r2], #-1
     204:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
     208:	10052101 	andne	r2, r5, r1, lsl #2
     20c:	02040200 	andeq	r0, r4, #0, 4
     210:	02001f06 	andeq	r1, r0, #6, 30
     214:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
     218:	01000102 	tsteq	r0, r2, lsl #2
     21c:	000f0501 	andeq	r0, pc, r1, lsl #10
     220:	157c0205 	ldrbne	r0, [ip, #-517]!	@ 0xfffffdfb
     224:	0e030800 	cdpeq	8, 0, cr0, cr3, cr0, {0}
     228:	13030501 	movwne	r0, #13569	@ 0x3501
     22c:	11060f05 	tstne	r6, r5, lsl #30
     230:	06210305 	strteq	r0, [r1], -r5, lsl #6
     234:	06052f2f 	streq	r2, [r5], -pc, lsr #30
     238:	10050106 	andne	r0, r5, r6, lsl #2
     23c:	0603052e 	streq	r0, [r3], -lr, lsr #10
     240:	0101013e 	tsteq	r1, lr, lsr r1
     244:	2e2e2e01 	cdpcs	14, 2, cr2, cr14, cr1, {0}
     248:	01010120 	tsteq	r1, r0, lsr #2
     24c:	01160501 	tsteq	r6, r1, lsl #10
     250:	01010101 	tsteq	r1, r1, lsl #2
     254:	062e2e20 	strteq	r2, [lr], -r0, lsr #28
     258:	01010620 	tsteq	r1, r0, lsr #12
     25c:	05010101 	streq	r0, [r1, #-257]	@ 0xfffffeff
     260:	01010129 	tsteq	r1, r9, lsr #2
     264:	2e200101 	sufcss	f0, f0, f1
     268:	0620062e 	strteq	r0, [r0], -lr, lsr #12
     26c:	01010101 	tsteq	r1, r1, lsl #2
     270:	13030501 	movwne	r0, #13569	@ 0x3501
     274:	01010101 	tsteq	r1, r1, lsl #2
     278:	06012e20 	streq	r2, [r1], -r0, lsr #28
     27c:	01010620 	tsteq	r1, r0, lsr #12
     280:	05010101 	streq	r0, [r1, #-257]	@ 0xfffffeff
     284:	01010118 	tsteq	r1, r8, lsl r1
     288:	20060101 	andcs	r0, r6, r1, lsl #2
     28c:	2e2e2006 	cdpcs	0, 2, cr2, cr14, cr6, {0}
     290:	01062006 	tsteq	r6, r6
     294:	05010101 	streq	r0, [r1, #-257]	@ 0xfffffeff
     298:	0101012c 	tsteq	r1, ip, lsr #2
     29c:	2e200101 	sufcss	f0, f0, f1
     2a0:	0620062e 	strteq	r0, [r0], -lr, lsr #12
     2a4:	01010101 	tsteq	r1, r1, lsl #2
     2a8:	01140305 	tsteq	r4, r5, lsl #6
     2ac:	20062e06 	andcs	r2, r6, r6, lsl #28
     2b0:	01011205 	tsteq	r1, r5, lsl #4
     2b4:	0121053c 			@ <UNDEFINED> instruction: 0x0121053c
     2b8:	03053c01 	movweq	r3, #23553	@ 0x5c01
     2bc:	053c0113 	ldreq	r0, [ip, #-275]!	@ 0xfffffeed
     2c0:	3c010113 	stfccs	f0, [r1], {19}
     2c4:	2f140305 	svccs	0x00140305
     2c8:	16050304 	strne	r0, [r5], -r4, lsl #6
     2cc:	01099903 	tsteq	r9, r3, lsl #18
     2d0:	04013505 	streq	r3, [r1], #-1285	@ 0xfffffafb
     2d4:	00030501 	andeq	r0, r3, r1, lsl #10
     2d8:	03010402 	movweq	r0, #5122	@ 0x1402
     2dc:	052076eb 	streq	r7, [r0, #-1771]!	@ 0xfffff915
     2e0:	04020005 	streq	r0, [r2], #-5
     2e4:	08051301 	stmdaeq	r5, {r0, r8, r9, ip}
     2e8:	01040200 	mrseq	r0, R12_usr
     2ec:	0008022d 	andeq	r0, r8, sp, lsr #4
     2f0:	09880101 	stmibeq	r8, {r0, r8}
     2f4:	00030000 	andeq	r0, r3, r0
     2f8:	00000092 	muleq	r0, r2, r0
     2fc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     300:	0101000d 	tsteq	r1, sp
     304:	00000101 	andeq	r0, r0, r1, lsl #2
     308:	00000100 	andeq	r0, r0, r0, lsl #2
     30c:	63727301 	cmnvs	r2, #67108864	@ 0x4000000
     310:	62696c00 	rsbvs	r6, r9, #0, 24
     314:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
     318:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
     31c:	73752f00 	cmnvc	r5, #0, 30
     320:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     324:	63672f62 	cmnvs	r7, #392	@ 0x188
     328:	72612f63 	rsbvc	r2, r1, #396	@ 0x18c
     32c:	6f6e2d6d 	svcvs	0x006e2d6d
     330:	652d656e 	strvs	r6, [sp, #-1390]!	@ 0xfffffa92
     334:	2f696261 	svccs	0x00696261
     338:	322e3231 	eorcc	r3, lr, #268435459	@ 0x10000003
     33c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	@ <UNPREDICTABLE>
     340:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
     344:	00006564 	andeq	r6, r0, r4, ror #10
     348:	5f627375 	svcpl	0x00627375
     34c:	2e62696c 	vnmulcs.f16	s13, s4, s25	@ <UNPREDICTABLE>
     350:	00010063 	andeq	r0, r1, r3, rrx
     354:	726f6300 	rsbvc	r6, pc, #0, 6
     358:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	@ 0xfffffe6c
     35c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     360:	75000002 	strvc	r0, [r0, #-2]
     364:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	@ 0x73
     368:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     36c:	00000100 	andeq	r0, r0, r0, lsl #2
     370:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     374:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     378:	00000300 	andeq	r0, r0, r0, lsl #6
     37c:	336d7473 	cmncc	sp, #1929379840	@ 0x73000000
     380:	30316632 	eorscc	r6, r1, r2, lsr r6
     384:	2e627833 	mcrcs	8, 3, r7, cr2, cr3, {1}
     388:	00020068 	andeq	r0, r2, r8, rrx
     38c:	31050000 	mrscc	r0, (UNDEF: 5)
     390:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
     394:	03080001 	movweq	r0, #32769	@ 0x8001
     398:	32050122 	andcc	r0, r5, #-2147483640	@ 0x80000008
     39c:	032b0501 			@ <UNDEFINED> instruction: 0x032b0501
     3a0:	2c052079 	stccs	0, cr2, [r5], {121}	@ 0x79
     3a4:	211b0501 	tstcs	fp, r1, lsl #10
     3a8:	5c052121 	stfpls	f2, [r5], {33}	@ 0x21
     3ac:	015d0521 	cmpeq	sp, r1, lsr #10
     3b0:	01066605 	tsteq	r6, r5, lsl #12
     3b4:	06630520 	strbteq	r0, [r3], -r0, lsr #10
     3b8:	01640521 	cmneq	r4, r1, lsr #10
     3bc:	01066d05 	tsteq	r6, r5, lsl #26
     3c0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
     3c4:	05202003 	streq	r2, [r0, #-3]!
     3c8:	06051303 	streq	r1, [r5], -r3, lsl #6
     3cc:	10050106 	andne	r0, r5, r6, lsl #2
     3d0:	0603052e 	streq	r0, [r3], -lr, lsr #10
     3d4:	053c0a03 	ldreq	r0, [ip, #-2563]!	@ 0xfffff5fd
     3d8:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     3dc:	054b0603 	strbeq	r0, [fp, #-1539]	@ 0xfffff9fd
     3e0:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     3e4:	013d0603 	teqeq	sp, r3, lsl #12
     3e8:	3c010101 	stfccs	f0, [r1], {1}
     3ec:	01202e2e 			@ <UNDEFINED> instruction: 0x01202e2e
     3f0:	01130101 	tsteq	r3, r1, lsl #2
     3f4:	20062e06 	andcs	r2, r6, r6, lsl #28
     3f8:	01070513 	tsteq	r7, r3, lsl r5
     3fc:	05011d05 	streq	r1, [r1, #-3333]	@ 0xfffff2fb
     400:	05110603 	ldreq	r0, [r1, #-1539]	@ 0xfffff9fd
     404:	0402002e 	streq	r0, [r2], #-46	@ 0xffffffd2
     408:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
     40c:	04020027 	streq	r0, [r2], #-39	@ 0xffffffd9
     410:	1d052003 	stcne	0, cr2, [r5, #-12]
     414:	03040200 	movweq	r0, #16896	@ 0x4200
     418:	04020001 	streq	r0, [r2], #-1
     41c:	05200603 	streq	r0, [r0, #-1539]!	@ 0xfffff9fd
     420:	04020003 	streq	r0, [r2], #-3
     424:	00210602 	eoreq	r0, r1, r2, lsl #12
     428:	01020402 	tsteq	r2, r2, lsl #8
     42c:	02040200 	andeq	r0, r4, #0, 4
     430:	04020001 	streq	r0, [r2], #-1
     434:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
     438:	00010204 	andeq	r0, r1, r4, lsl #4
     43c:	20020402 	andcs	r0, r2, r2, lsl #8
     440:	02004705 	andeq	r4, r0, #1310720	@ 0x140000
     444:	19060204 	stmdbne	r6, {r2, r9}
     448:	02000305 	andeq	r0, r0, #335544320	@ 0x14000000
     44c:	79030204 	stmdbvc	r3, {r2, r9}
     450:	04020020 	streq	r0, [r2], #-32	@ 0xffffffe0
     454:	002e0602 	eoreq	r0, lr, r2, lsl #12
     458:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     45c:	02040200 	andeq	r0, r4, #0, 4
     460:	04020020 	streq	r0, [r2], #-32	@ 0xffffffe0
     464:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
     468:	00010204 	andeq	r0, r1, r4, lsl #4
     46c:	01020402 	tsteq	r2, r2, lsl #8
     470:	02040200 	andeq	r0, r4, #0, 4
     474:	000d0517 	andeq	r0, sp, r7, lsl r5
     478:	06020402 	streq	r0, [r2], -r2, lsl #8
     47c:	04020001 	streq	r0, [r2], #-1
     480:	02002002 	andeq	r2, r0, #2
     484:	05200204 	streq	r0, [r0, #-516]!	@ 0xfffffdfc
     488:	04020003 	streq	r0, [r2], #-3
     48c:	05300602 	ldreq	r0, [r0, #-1538]!	@ 0xfffff9fe
     490:	04020007 	streq	r0, [r2], #-7
     494:	15050102 	strne	r0, [r5, #-258]	@ 0xfffffefe
     498:	02040200 	andeq	r0, r4, #0, 4
     49c:	000d0501 	andeq	r0, sp, r1, lsl #10
     4a0:	06020402 	streq	r0, [r2], -r2, lsl #8
     4a4:	002a0510 	eoreq	r0, sl, r0, lsl r5
     4a8:	06030402 	streq	r0, [r3], -r2, lsl #8
     4ac:	0015054c 	andseq	r0, r5, ip, asr #10
     4b0:	06030402 	streq	r0, [r3], -r2, lsl #8
     4b4:	04020001 	streq	r0, [r2], #-1
     4b8:	47052003 	strmi	r2, [r5, -r3]
     4bc:	03040200 	movweq	r0, #16896	@ 0x4200
     4c0:	0037052e 	eorseq	r0, r7, lr, lsr #10
     4c4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     4c8:	02002705 	andeq	r2, r0, #1310720	@ 0x140000
     4cc:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
     4d0:	02001505 	andeq	r1, r0, #20971520	@ 0x1400000
     4d4:	00010304 	andeq	r0, r1, r4, lsl #6
     4d8:	06030402 	streq	r0, [r3], -r2, lsl #8
     4dc:	002e052e 	eoreq	r0, lr, lr, lsr #10
     4e0:	06030402 	streq	r0, [r3], -r2, lsl #8
     4e4:	00270513 	eoreq	r0, r7, r3, lsl r5
     4e8:	20030402 	andcs	r0, r3, r2, lsl #8
     4ec:	02001d05 	andeq	r1, r0, #320	@ 0x140
     4f0:	00010304 	andeq	r0, r1, r4, lsl #6
     4f4:	06030402 	streq	r0, [r3], -r2, lsl #8
     4f8:	06030520 	streq	r0, [r3], -r0, lsr #10
     4fc:	060f0521 	streq	r0, [pc], -r1, lsr #10
     500:	06030501 	streq	r0, [r3], -r1, lsl #10
     504:	060f053d 			@ <UNDEFINED> instruction: 0x060f053d
     508:	06030501 	streq	r0, [r3], -r1, lsl #10
     50c:	060f052f 	streq	r0, [pc], -pc, lsr #10
     510:	06030501 	streq	r0, [r3], -r1, lsl #10
     514:	060f052f 	streq	r0, [pc], -pc, lsr #10
     518:	06030501 	streq	r0, [r3], -r1, lsl #10
     51c:	060f052f 	streq	r0, [pc], -pc, lsr #10
     520:	03052e01 	movweq	r2, #24065	@ 0x5e01
     524:	02042f06 	andeq	r2, r4, #6, 30
     528:	ff031605 			@ <UNDEFINED> instruction: 0xff031605
     52c:	0305010a 	movweq	r0, #20746	@ 0x510a
     530:	06270514 			@ <UNDEFINED> instruction: 0x06270514
     534:	01044a01 	tsteq	r4, r1, lsl #20
     538:	87030105 	strhi	r0, [r3, -r5, lsl #2]
     53c:	4f050175 	svcmi	0x00050175
     540:	00e20306 	rsceq	r0, r2, r6, lsl #6
     544:	130305d6 	movwne	r0, #13782	@ 0x35d6
     548:	11064f05 	tstne	r6, r5, lsl #30
     54c:	05230905 	streq	r0, [r3, #-2309]!	@ 0xfffff6fb
     550:	05052c18 	streq	r2, [r5, #-3096]	@ 0xfffff3e8
     554:	29180525 	ldmdbcs	r8, {r0, r2, r5, r8, sl}
     558:	4b060305 	blmi	181174 <__Stack_Size+0x180174>
     55c:	05051413 	streq	r1, [r5, #-1043]	@ 0xfffffbed
     560:	06651306 	strbteq	r1, [r5], -r6, lsl #6
     564:	3e060121 	adfccsp	f0, f6, f1
     568:	061e222c 	ldreq	r2, [lr], -ip, lsr #4
     56c:	05660130 	strbeq	r0, [r6, #-304]!	@ 0xfffffed0
     570:	0c051503 	cfstr32eq	mvfx1, [r5], {3}
     574:	03050106 	movweq	r0, #20742	@ 0x5106
     578:	14132106 	ldrne	r2, [r3], #-262	@ 0xfffffefa
     57c:	063c1306 	ldrteq	r1, [ip], -r6, lsl #6
     580:	4b19052e 	blmi	641a40 <__Stack_Size+0x640a40>
     584:	01061d05 	tsteq	r6, r5, lsl #26
     588:	1e07052e 	cfsh32ne	mvfx0, mvfx7, #30
     58c:	05331205 	ldreq	r1, [r3, #-517]!	@ 0xfffffdfb
     590:	05300603 	ldreq	r0, [r0, #-1539]!	@ 0xfffff9fd
     594:	05150623 	ldreq	r0, [r5, #-1571]	@ 0xfffff9dd
     598:	03051d12 	movweq	r1, #23826	@ 0x5d12
     59c:	0f052206 	svceq	0x00052206
     5a0:	05051306 	streq	r1, [r5, #-774]	@ 0xfffffcfa
     5a4:	2123053b 			@ <UNDEFINED> instruction: 0x2123053b
     5a8:	052e0f05 	streq	r0, [lr, #-3845]!	@ 0xfffff0fb
     5ac:	21062d05 	tstcs	r6, r5, lsl #26
     5b0:	01062305 	tsteq	r6, r5, lsl #6
     5b4:	21060505 	tstcs	r6, r5, lsl #10
     5b8:	2f060705 	svccs	0x00060705
     5bc:	1605212e 	strne	r2, [r5], -lr, lsr #2
     5c0:	2207051e 	andcs	r0, r7, #125829120	@ 0x7800000
     5c4:	05481605 	strbeq	r1, [r8, #-1541]	@ 0xfffff9fb
     5c8:	052f0605 	streq	r0, [pc, #-1541]!	@ ffffffcb <BootRAM+0xef7076c>
     5cc:	3e011307 	cdpcc	3, 0, cr1, cr1, cr7, {0}
     5d0:	060c0501 	streq	r0, [ip], -r1, lsl #10
     5d4:	052e0f03 	streq	r0, [lr, #-3843]!	@ 0xfffff0fd
     5d8:	20061e05 	andcs	r1, r6, r5, lsl #28
     5dc:	05140305 	ldreq	r0, [r4, #-773]	@ 0xfffffcfb
     5e0:	0501060c 	streq	r0, [r1, #-1548]	@ 0xfffff9f4
     5e4:	19052101 	stmdbne	r5, {r0, r8, sp}
     5e8:	20650306 	rsbcs	r0, r5, r6, lsl #6
     5ec:	01061d05 	tsteq	r6, r5, lsl #26
     5f0:	060e052e 	streq	r0, [lr], -lr, lsr #10
     5f4:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     5f8:	05052e01 	streq	r2, [r5, #-3585]	@ 0xfffff1ff
     5fc:	200d0306 	andcs	r0, sp, r6, lsl #6
     600:	01062305 	tsteq	r6, r5, lsl #6
     604:	21060505 	tstcs	r6, r5, lsl #10
     608:	13062605 	movwne	r2, #26117	@ 0x6605
     60c:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     610:	06260521 	strteq	r0, [r6], -r1, lsr #10
     614:	1d313915 			@ <UNDEFINED> instruction: 0x1d313915
     618:	21060705 	tstcs	r6, r5, lsl #14
     61c:	16062705 	strne	r2, [r6], -r5, lsl #14
     620:	052e3305 	streq	r3, [lr, #-773]!	@ 0xfffffcfb
     624:	07052a2e 	streq	r2, [r5, -lr, lsr #20]
     628:	13133006 	tstne	r3, #6
     62c:	01063305 	tsteq	r6, r5, lsl #6
     630:	052e2705 	streq	r2, [lr, #-1797]!	@ 0xfffff8fb
     634:	064c0605 	strbeq	r0, [ip], -r5, lsl #12
     638:	1f170513 	svcne	0x00170513
     63c:	2f060505 	svccs	0x00060505
     640:	f7560501 			@ <UNDEFINED> instruction: 0xf7560501
     644:	06130305 	ldreq	r0, [r3], -r5, lsl #6
     648:	29560516 	ldmdbcs	r6, {r1, r2, r4, r8, sl}^
     64c:	05211805 	streq	r1, [r1, #-2053]!	@ 0xfffff7fb
     650:	03052209 	movweq	r2, #21001	@ 0x5209
     654:	1c180530 	cfldr32ne	mvfx0, [r8], {48}	@ 0x30
     658:	4b060305 	blmi	181274 <__Stack_Size+0x180274>
     65c:	06011413 			@ <UNDEFINED> instruction: 0x06011413
     660:	20780360 	rsbscs	r0, r8, r0, ror #6
     664:	01139006 	tsteq	r3, r6
     668:	0c0514ac 	cfstrseq	mvf1, [r5], {172}	@ 0xac
     66c:	03050106 	movweq	r0, #20742	@ 0x5106
     670:	14132106 	ldrne	r2, [r3], #-262	@ 0xfffffefa
     674:	2f062e06 	svccs	0x00062e06
     678:	054b1905 	strbeq	r1, [fp, #-2309]	@ 0xfffff6fb
     67c:	0501061d 	streq	r0, [r1, #-1565]	@ 0xfffff9e3
     680:	2e0a0323 	cdpcs	3, 0, cr0, cr10, cr3, {1}
     684:	79031205 	stmdbvc	r3, {r0, r2, r9, ip}
     688:	0603052e 	streq	r0, [r3], -lr, lsr #10
     68c:	06230530 			@ <UNDEFINED> instruction: 0x06230530
     690:	29120517 	ldmdbcs	r2, {r0, r1, r2, r4, r8, sl}
     694:	24060305 	strcs	r0, [r6], #-773	@ 0xfffffcfb
     698:	13060f05 	movwne	r0, #28421	@ 0x6f05
     69c:	2d050520 	cfstr32cs	mvfx0, [r5, #-128]	@ 0xffffff80
     6a0:	05210f05 	streq	r0, [r1, #-3845]!	@ 0xfffff0fb
     6a4:	0505302e 	streq	r3, [r5, #-46]	@ 0xffffffd2
     6a8:	0521062b 	streq	r0, [r1, #-1579]!	@ 0xfffff9d5
     6ac:	05130624 	ldreq	r0, [r3, #-1572]	@ 0xfffff9dc
     6b0:	05051f23 	streq	r1, [r5, #-3875]	@ 0xfffff0dd
     6b4:	24052106 	strcs	r2, [r5], #-262	@ 0xfffffefa
     6b8:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     6bc:	23052106 	movwcs	r2, #20742	@ 0x5106
     6c0:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     6c4:	24052f06 	strcs	r2, [r5], #-3846	@ 0xfffff0fa
     6c8:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     6cc:	09052206 	stmdbeq	r5, {r1, r2, r9, sp}
     6d0:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     6d4:	2e052106 	adfcss	f2, f5, f6
     6d8:	052e0106 	streq	r0, [lr, #-262]!	@ 0xfffffefa
     6dc:	4a0d0305 	bmi	3412f8 <__Stack_Size+0x3402f8>
     6e0:	03052006 	movweq	r2, #20486	@ 0x5006
     6e4:	06140514 			@ <UNDEFINED> instruction: 0x06140514
     6e8:	230c0501 	movwcs	r0, #50433	@ 0xc501
     6ec:	052b1405 	streq	r1, [fp, #-1029]!	@ 0xfffffbfb
     6f0:	052f0603 	streq	r0, [pc, #-1539]!	@ f5 <_Minimum_Stack_Size-0xb>
     6f4:	05010614 	streq	r0, [r1, #-1556]	@ 0xfffff9ec
     6f8:	05300603 	ldreq	r0, [r0, #-1539]!	@ 0xfffff9fd
     6fc:	0501060c 	streq	r0, [r1, #-1548]	@ 0xfffff9f4
     700:	19052f01 	stmdbne	r5, {r0, r8, r9, sl, fp, sp}
     704:	205e0306 	subscs	r0, lr, r6, lsl #6
     708:	01061d05 	tsteq	r6, r5, lsl #26
     70c:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
     710:	061d0521 	ldreq	r0, [sp], -r1, lsr #10
     714:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     718:	12052106 	andne	r2, r5, #-2147483647	@ 0x80000001
     71c:	052e0106 	streq	r0, [lr, #-262]!	@ 0xfffffefa
     720:	0f030605 	svceq	0x00030605
     724:	06230520 	strteq	r0, [r3], -r0, lsr #10
     728:	06050501 	streq	r0, [r5], -r1, lsl #10
     72c:	06070521 	streq	r0, [r7], -r1, lsr #10
     730:	1f230513 	svcne	0x00230513
     734:	2f060505 	svccs	0x00060505
     738:	13064705 	movwne	r4, #26373	@ 0x6705
     73c:	061f0705 	ldreq	r0, [pc], -r5, lsl #14
     740:	06470521 	strbeq	r0, [r7], -r1, lsr #10
     744:	3c260501 	cfstr32cc	mvfx0, [r6], #-4
     748:	4b060705 	blmi	182364 <__Stack_Size+0x181364>
     74c:	01065005 	tsteq	r6, r5
     750:	05324905 	ldreq	r4, [r2, #-2309]!	@ 0xfffff6fb
     754:	05056627 	streq	r6, [r5, #-1575]	@ 0xfffff9d9
     758:	9e016806 	cdpls	8, 0, cr6, cr1, cr6, {0}
     75c:	07050113 	smladeq	r5, r3, r1, r0
     760:	06470599 			@ <UNDEFINED> instruction: 0x06470599
     764:	3c260501 	cfstr32cc	mvfx0, [r6], #-4
     768:	4b060705 	blmi	182384 <__Stack_Size+0x181384>
     76c:	06550513 			@ <UNDEFINED> instruction: 0x06550513
     770:	06190501 	ldreq	r0, [r9], -r1, lsl #10
     774:	05ac0d03 	streq	r0, [ip, #3331]!	@ 0xd03
     778:	19051303 	stmdbne	r5, {r0, r1, r8, r9, ip}
     77c:	09051106 	stmdbeq	r5, {r1, r2, r8, ip}
     780:	3c05052f 	cfstr32cc	mvfx0, [r5], {47}	@ 0x2f
     784:	05321305 	ldreq	r1, [r2, #-773]!	@ 0xfffffcfb
     788:	052b0605 	streq	r0, [fp, #-1541]!	@ 0xfffff9fb
     78c:	1a051307 	bne	1453b0 <__Stack_Size+0x1443b0>
     790:	0f050106 	svceq	0x00050106
     794:	0607052e 	streq	r0, [r7], -lr, lsr #10
     798:	060a052f 	streq	r0, [sl], -pc, lsr #10
     79c:	66090501 	strvs	r0, [r9], -r1, lsl #10
     7a0:	014b2f06 	cmpeq	fp, r6, lsl #30
     7a4:	01040200 	mrseq	r0, R12_usr
     7a8:	00070582 	andeq	r0, r7, r2, lsl #11
     7ac:	14010402 	strne	r0, [r1], #-1026	@ 0xfffffbfe
     7b0:	02000a05 	andeq	r0, r0, #20480	@ 0x5000
     7b4:	01060104 	tsteq	r6, r4, lsl #2
     7b8:	02000905 	andeq	r0, r0, #81920	@ 0x14000
     7bc:	06200104 	strteq	r0, [r0], -r4, lsl #2
     7c0:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     7c4:	20090501 	andcs	r0, r9, r1, lsl #10
     7c8:	00014b06 	andeq	r4, r1, r6, lsl #22
     7cc:	82010402 	andhi	r0, r1, #33554432	@ 0x2000000
     7d0:	02000c05 	andeq	r0, r0, #1280	@ 0x500
     7d4:	05140104 	ldreq	r0, [r4, #-260]	@ 0xfffffefc
     7d8:	0402000f 	streq	r0, [r2], #-15
     7dc:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
     7e0:	0402000c 	streq	r0, [r2], #-12
     7e4:	01052e01 	tsteq	r5, r1, lsl #28
     7e8:	052e2703 	streq	r2, [lr, #-1795]!	@ 0xfffff8fd
     7ec:	5d030603 	stcpl	6, cr0, [r3, #-12]
     7f0:	0609052e 	streq	r0, [r9], -lr, lsr #10
     7f4:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
     7f8:	052f2f06 	streq	r2, [pc, #-3846]!	@ fffff8fa <BootRAM+0xef7009b>
     7fc:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
     800:	054b0605 	strbeq	r0, [fp, #-1541]	@ 0xfffff9fb
     804:	09052303 	stmdbeq	r5, {r0, r1, r8, r9, sp}
     808:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     80c:	052f062e 	streq	r0, [pc, #-1582]!	@ 1e6 <_Minimum_Stack_Size+0xe6>
     810:	11053007 	tstne	r5, r7
     814:	0e050106 	adfeqs	f0, f5, f6
     818:	1c110532 	cfldr32ne	mvfx0, [r1], {50}	@ 0x32
     81c:	32060505 	andcc	r0, r6, #20971520	@ 0x1400000
     820:	01060e05 	tsteq	r6, r5, lsl #28
     824:	05224905 	streq	r4, [r2, #-2309]!	@ 0xfffff6fb
     828:	05051e0e 	streq	r1, [r5, #-3598]	@ 0xfffff1f2
     82c:	10052106 	andne	r2, r5, r6, lsl #2
     830:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     834:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     838:	01170501 	tsteq	r7, r1, lsl #10
     83c:	1f061005 	svcne	0x00061005
     840:	02002c05 	andeq	r2, r0, #1280	@ 0x500
     844:	4b060304 	blmi	18145c <__Stack_Size+0x18045c>
     848:	02001705 	andeq	r1, r0, #1310720	@ 0x140000
     84c:	01060304 	tsteq	r6, r4, lsl #6
     850:	03040200 	movweq	r0, #16896	@ 0x4200
     854:	00490520 	subeq	r0, r9, r0, lsr #10
     858:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     85c:	02003905 	andeq	r3, r0, #81920	@ 0x14000
     860:	052e0304 	streq	r0, [lr, #-772]!	@ 0xfffffcfc
     864:	04020029 	streq	r0, [r2], #-41	@ 0xffffffd7
     868:	052e0603 	streq	r0, [lr, #-1539]!	@ 0xfffff9fd
     86c:	04020017 	streq	r0, [r2], #-23	@ 0xffffffe9
     870:	05050103 	streq	r0, [r5, #-259]	@ 0xfffffefd
     874:	060f0523 	streq	r0, [pc], -r3, lsr #10
     878:	3d050501 	cfstr32cc	mvfx0, [r5, #-4]
     87c:	051f0f05 	ldreq	r0, [pc, #-3845]	@ fffff97f <BootRAM+0xef70120>
     880:	592f0605 	stmdbpl	pc!, {r0, r2, r9, sl}	@ <UNPREDICTABLE>
     884:	060d0567 	streq	r0, [sp], -r7, ror #10
     888:	06050501 	streq	r0, [r5], -r1, lsl #10
     88c:	31030521 	tstcc	r3, r1, lsr #10
     890:	01060905 	tsteq	r6, r5, lsl #18
     894:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     898:	08052f2f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}
     89c:	0f050106 	svceq	0x00050106
     8a0:	0605053c 			@ <UNDEFINED> instruction: 0x0605053c
     8a4:	060f054b 	streq	r0, [pc], -fp, asr #10
     8a8:	06030501 	streq	r0, [r3], -r1, lsl #10
     8ac:	0609054d 	streq	r0, [r9], -sp, asr #10
     8b0:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
     8b4:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     8b8:	0f050106 	svceq	0x00050106
     8bc:	0605052e 	streq	r0, [r5], -lr, lsr #10
     8c0:	060f0567 	streq	r0, [pc], -r7, ror #10
     8c4:	06440501 	strbeq	r0, [r4], -r1, lsl #10
     8c8:	12081103 	andne	r1, r8, #-1073741824	@ 0xc0000000
     8cc:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
     8d0:	05110644 	ldreq	r0, [r1, #-1604]	@ 0xfffff9bc
     8d4:	33052603 	movwcc	r2, #22019	@ 0x5603
     8d8:	2010051b 	andscs	r0, r0, fp, lsl r5
     8dc:	4b060305 	blmi	1814f8 <__Stack_Size+0x1804f8>
     8e0:	15065105 	strne	r5, [r6, #-261]	@ 0xfffffefb
     8e4:	051d1705 	ldreq	r1, [sp, #-1797]	@ 0xfffff8fb
     8e8:	0c05234a 	stceq	3, cr2, [r5], {74}	@ 0x4a
     8ec:	06030547 	streq	r0, [r3], -r7, asr #10
     8f0:	4a051322 	bmi	145580 <__Stack_Size+0x144580>
     8f4:	03050106 	movweq	r0, #20742	@ 0x5106
     8f8:	07052106 	streq	r2, [r5, -r6, lsl #2]
     8fc:	00190501 	andseq	r0, r9, r1, lsl #10
     900:	01010402 	tsteq	r1, r2, lsl #8
     904:	063f0305 	ldrteq	r0, [pc], -r5, lsl #6
     908:	10052014 	andne	r2, r5, r4, lsl r0
     90c:	0603053a 			@ <UNDEFINED> instruction: 0x0603053a
     910:	3c060122 	stfccs	f0, [r6], {34}	@ 0x22
     914:	01059006 	tsteq	r5, r6
     918:	05051306 	streq	r1, [r5, #-774]	@ 0xfffffcfa
     91c:	03040200 	movweq	r0, #16896	@ 0x4200
     920:	11051b06 	tstne	r5, r6, lsl #22
     924:	03040200 	movweq	r0, #16896	@ 0x4200
     928:	0a050106 	beq	140d48 <__Stack_Size+0x13fd48>
     92c:	03040200 	movweq	r0, #16896	@ 0x4200
     930:	0022052e 	eoreq	r0, r2, lr, lsr #10
     934:	06030402 	streq	r0, [r3], -r2, lsl #8
     938:	0402002d 	streq	r0, [r2], #-45	@ 0xffffffd3
     93c:	00010603 	andeq	r0, r1, r3, lsl #12
     940:	20030402 	andcs	r0, r3, r2, lsl #8
     944:	02050006 	andeq	r0, r5, #6
     948:	0800067c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl}
     94c:	017df603 	cmneq	sp, r3, lsl #12	@ <UNPREDICTABLE>
     950:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
     954:	05110622 	ldreq	r0, [r1, #-1570]	@ 0xfffff9de
     958:	0505210e 	streq	r2, [r5, #-270]	@ 0xfffffef2
     95c:	0603052e 	streq	r0, [r3], -lr, lsr #10
     960:	060c0521 	streq	r0, [ip], -r1, lsr #10
     964:	06030501 	streq	r0, [r3], -r1, lsl #10
     968:	0603042f 	streq	r0, [r3], -pc, lsr #8
     96c:	0100c603 	tsteq	r0, r3, lsl #12
     970:	05010420 	streq	r0, [r1, #-1056]	@ 0xfffffbe0
     974:	7fba0305 	svcvc	0x00ba0305
     978:	06030501 	streq	r0, [r3], -r1, lsl #10
     97c:	0503044b 	streq	r0, [r3, #-1099]	@ 0xfffffbb5
     980:	00c40314 	sbceq	r0, r4, r4, lsl r3
     984:	13030501 	movwne	r0, #13569	@ 0x3501
     988:	01042e06 	tsteq	r4, r6, lsl #28
     98c:	7fbd0306 	svcvc	0x00bd0306
     990:	06050501 	streq	r0, [r5], -r1, lsl #10
     994:	210d0515 	tstcs	sp, r5, lsl r5
     998:	2f0b052a 	svccs	0x000b052a
     99c:	052d0d05 	streq	r0, [sp, #-3333]!	@ 0xfffff2fb
     9a0:	142f0603 	strtne	r0, [pc], #-1539	@ 9a8 <_Minimum_Stack_Size+0x8a8>
     9a4:	10060b05 	andne	r0, r6, r5, lsl #22
     9a8:	31060505 	tstcc	r6, r5, lsl #10
     9ac:	01060d05 	tsteq	r6, r5, lsl #26
     9b0:	05220105 	streq	r0, [r2, #-261]!	@ 0xfffffefb
     9b4:	8603062d 	strhi	r0, [r3], -sp, lsr #12
     9b8:	03053c02 	movweq	r3, #23554	@ 0x5c02
     9bc:	062d0513 			@ <UNDEFINED> instruction: 0x062d0513
     9c0:	21330511 	teqcs	r3, r1, lsl r5
     9c4:	05201005 	streq	r1, [r0, #-5]!
     9c8:	054b0603 	strbeq	r0, [fp, #-1539]	@ 0xfffff9fd
     9cc:	0510062d 	ldreq	r0, [r0, #-1581]	@ 0xfffff9d3
     9d0:	05202211 	streq	r2, [r0, #-529]!	@ 0xfffffdef
     9d4:	052f0603 	streq	r0, [pc, #-1539]!	@ 3d9 <_Minimum_Stack_Size+0x2d9>
     9d8:	05010605 	streq	r0, [r1, #-1541]	@ 0xfffff9fb
     9dc:	13210603 			@ <UNDEFINED> instruction: 0x13210603
     9e0:	01065005 	tsteq	r6, r5
     9e4:	051f0f05 	ldreq	r0, [pc, #-3845]	@ fffffae7 <BootRAM+0xef70288>
     9e8:	07052149 	streq	r2, [r5, -r9, asr #2]
     9ec:	2149052d 	cmpcs	r9, sp, lsr #10
     9f0:	0603053c 			@ <UNDEFINED> instruction: 0x0603053c
     9f4:	01070521 	tsteq	r7, r1, lsr #10
     9f8:	06011405 	streq	r1, [r1], -r5, lsl #8
     9fc:	00050520 	andeq	r0, r5, r0, lsr #10
     a00:	06030402 	streq	r0, [r3], -r2, lsl #8
     a04:	000e052f 	andeq	r0, lr, pc, lsr #10
     a08:	06030402 	streq	r0, [r3], -r2, lsl #8
     a0c:	00140501 	andseq	r0, r4, r1, lsl #10
     a10:	2d030402 	cfstrscs	mvf0, [r3, #-8]
     a14:	02000c05 	andeq	r0, r0, #1280	@ 0x500
     a18:	05210304 	streq	r0, [r1, #-772]!	@ 0xfffffcfc
     a1c:	0402001c 	streq	r0, [r2], #-28	@ 0xffffffe4
     a20:	052d0603 	streq	r0, [sp, #-1539]!	@ 0xfffff9fd
     a24:	04020014 	streq	r0, [r2], #-20	@ 0xffffffec
     a28:	03050103 	movweq	r0, #20739	@ 0x5103
     a2c:	20060123 	andcs	r0, r6, r3, lsr #2
     a30:	0513e406 	ldreq	lr, [r3, #-1030]	@ 0xfffffbfa
     a34:	05130601 	ldreq	r0, [r3, #-1537]	@ 0xfffff9ff
     a38:	f9030623 			@ <UNDEFINED> instruction: 0xf9030623
     a3c:	0305207d 	movweq	r2, #20605	@ 0x507d
     a40:	23051313 	movwcs	r1, #21267	@ 0x5313
     a44:	05221006 	streq	r1, [r2, #-6]!
     a48:	2011031d 	andscs	r0, r1, sp, lsl r3
     a4c:	6f032305 	svcvs	0x00032305
     a50:	21160520 	tstcs	r6, r0, lsr #10
     a54:	10031d05 	andne	r1, r3, r5, lsl #26
     a58:	0305053c 	movweq	r0, #21820	@ 0x553c
     a5c:	06052e72 			@ <UNDEFINED> instruction: 0x06052e72
     a60:	05201003 	streq	r1, [r0, #-3]!
     a64:	2e6d0323 	cdpcs	3, 6, cr0, cr13, cr3, {1}
     a68:	2f060305 	svccs	0x00060305
     a6c:	06050514 			@ <UNDEFINED> instruction: 0x06050514
     a70:	06030501 	streq	r0, [r3], -r1, lsl #10
     a74:	14200e03 	strtne	r0, [r0], #-3587	@ 0xfffff1fd
     a78:	01060505 	tsteq	r6, r5, lsl #10
     a7c:	2f030105 	svccs	0x00030105
     a80:	0605052e 	streq	r0, [r5], -lr, lsr #10
     a84:	052e4203 	streq	r4, [lr, #-515]!	@ 0xfffffdfd
     a88:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
     a8c:	04340609 	ldrteq	r0, [r4], #-1545	@ 0xfffff9f7
     a90:	03130503 	tsteq	r3, #12582912	@ 0xc00000
     a94:	03050133 	movweq	r0, #20787	@ 0x5133
     a98:	05010413 	streq	r0, [r1, #-1043]	@ 0xfffffbed
     a9c:	4d030613 	stcmi	6, cr0, [r3, #-76]	@ 0xffffffb4
     aa0:	05030401 	streq	r0, [r3, #-1025]	@ 0xfffffbff
     aa4:	2033030a 	eorscs	r0, r3, sl, lsl #6
     aa8:	05010458 	streq	r0, [r1, #-1112]	@ 0xfffffba8
     aac:	4d030609 	stcmi	6, cr0, [r3, #-36]	@ 0xffffffdc
     ab0:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
     ab4:	03130518 	tsteq	r3, #24, 10	@ 0x6000000
     ab8:	09052e7a 	stmdbeq	r5, {r1, r3, r4, r5, r6, r9, sl, fp, sp}
     abc:	03052f06 	movweq	r2, #24326	@ 0x5f06
     ac0:	060b0517 			@ <UNDEFINED> instruction: 0x060b0517
     ac4:	06030501 	streq	r0, [r3], -r1, lsl #10
     ac8:	06050530 			@ <UNDEFINED> instruction: 0x06050530
     acc:	05310601 	ldreq	r0, [r1, #-1537]!	@ 0xfffff9ff
     ad0:	06010607 	streq	r0, [r1], -r7, lsl #12
     ad4:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
     ad8:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
     adc:	03060b05 	movweq	r0, #27397	@ 0x6b05
     ae0:	0304660a 	movweq	r6, #17930	@ 0x460a
     ae4:	0f031405 	svceq	0x00031405
     ae8:	13030501 	movwne	r0, #13569	@ 0x3501
     aec:	01042e06 	tsteq	r4, r6, lsl #28
     af0:	11030105 	tstne	r3, r5, lsl #2
     af4:	05030401 	streq	r0, [r3, #-1025]	@ 0xfffffbff
     af8:	3c6f0303 	stclcc	3, cr0, [pc], #-12	@ af4 <_Minimum_Stack_Size+0x9f4>
     afc:	0501042e 	streq	r0, [r1, #-1070]	@ 0xfffffbd2
     b00:	58030607 	stmdapl	r3, {r0, r1, r2, r9, sl}
     b04:	06090501 	streq	r0, [r9], -r1, lsl #10
     b08:	06050501 	streq	r0, [r5], -r1, lsl #10
     b0c:	05662603 	strbeq	r2, [r6, #-1539]!	@ 0xfffff9fd
     b10:	06010607 	streq	r0, [r1], -r7, lsl #12
     b14:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
     b18:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
     b1c:	03042f06 	movweq	r2, #20230	@ 0x4f06
     b20:	01060305 	tsteq	r6, r5, lsl #6
     b24:	11050104 	tstne	r5, r4, lsl #2
     b28:	0609052e 	streq	r0, [r9], -lr, lsr #10
     b2c:	0503042f 	streq	r0, [r3, #-1071]	@ 0xfffffbd1
     b30:	03051014 	movweq	r1, #20500	@ 0x5014
     b34:	05010413 	streq	r0, [r1, #-1043]	@ 0xfffffbed
     b38:	05300611 	ldreq	r0, [r0, #-1553]!	@ 0xfffff9ef
     b3c:	04020042 	streq	r0, [r2], #-66	@ 0xffffffbe
     b40:	05200601 	streq	r0, [r0, #-1537]!	@ 0xfffff9ff
     b44:	0402002d 	streq	r0, [r2], #-45	@ 0xffffffd3
     b48:	11050101 	tstne	r5, r1, lsl #2
     b4c:	01040200 	mrseq	r0, R12_usr
     b50:	2d050106 	stfcss	f0, [r5, #-24]	@ 0xffffffe8
     b54:	01040200 	mrseq	r0, R12_usr
     b58:	06090520 	streq	r0, [r9], -r0, lsr #10
     b5c:	0614054b 	ldreq	r0, [r4], -fp, asr #10
     b60:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
     b64:	20062f06 	andcs	r2, r6, r6, lsl #30
     b68:	03060b05 	movweq	r0, #27397	@ 0x6b05
     b6c:	17050164 	strne	r0, [r5, -r4, ror #2]
     b70:	14050106 	strne	r0, [r5], #-262	@ 0xfffffefa
     b74:	2f0b0521 	svccs	0x000b0521
     b78:	1e17054a 	cfmac32ne	mvfx0, mvfx7, mvfx10
     b7c:	21060b05 	tstcs	r6, r5, lsl #22
     b80:	05052f13 	streq	r2, [r5, #-3859]	@ 0xfffff0ed
     b84:	05010f03 	streq	r0, [r1, #-3843]	@ 0xfffff0fd
     b88:	05010614 	streq	r0, [r1, #-1556]	@ 0xfffff9ec
     b8c:	03052e07 	movweq	r2, #24071	@ 0x5e07
     b90:	052e4e03 	streq	r4, [lr, #-3587]!	@ 0xfffff1fd
     b94:	20320307 	eorscs	r0, r2, r7, lsl #6
     b98:	20062505 	andcs	r2, r6, r5, lsl #10
     b9c:	01062a05 	tsteq	r6, r5, lsl #20
     ba0:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
     ba4:	4a031405 	bmi	c5bc0 <__Stack_Size+0xc4bc0>
     ba8:	13030501 	movwne	r0, #13569	@ 0x3501
     bac:	01060d05 	tsteq	r6, r5, lsl #26
     bb0:	4b060305 	blmi	1817cc <__Stack_Size+0x1807cc>
     bb4:	01060b05 	tsteq	r6, r5, lsl #22
     bb8:	2f060305 	svccs	0x00060305
     bbc:	0b052e06 	bleq	14c3dc <__Stack_Size+0x14b3dc>
     bc0:	202b0306 	eorcs	r0, fp, r6, lsl #6
     bc4:	14050304 	strne	r0, [r5], #-772	@ 0xfffffcfc
     bc8:	05010c03 	streq	r0, [r1, #-3075]	@ 0xfffff3fd
     bcc:	3c061303 	stccc	3, cr1, [r6], {3}
     bd0:	05050104 	streq	r0, [r5, #-260]	@ 0xfffffefc
     bd4:	01770306 	cmneq	r7, r6, lsl #6
     bd8:	01060b05 	tsteq	r6, r5, lsl #22
     bdc:	2f060505 	svccs	0x00060505
     be0:	01060e05 	tsteq	r6, r5, lsl #28
     be4:	05210505 	streq	r0, [r1, #-1285]!	@ 0xfffffafb
     be8:	0505490e 	streq	r4, [r5, #-2318]	@ 0xfffff6f2
     bec:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     bf0:	060d0520 	streq	r0, [sp], -r0, lsr #10
     bf4:	05010c03 	streq	r0, [r1, #-3075]	@ 0xfffff3fd
     bf8:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
     bfc:	052f0609 	streq	r0, [pc, #-1545]!	@ 5fb <_Minimum_Stack_Size+0x4fb>
     c00:	05010617 	streq	r0, [r1, #-1559]	@ 0xfffff9e9
     c04:	044b0609 	strbeq	r0, [fp], #-1545	@ 0xfffff9f7
     c08:	03140503 	tsteq	r4, #12582912	@ 0xc00000
     c0c:	03050178 	movweq	r0, #20856	@ 0x5178
     c10:	04010613 	streq	r0, [r1], #-1555	@ 0xfffff9ed
     c14:	062c0501 	strteq	r0, [ip], -r1, lsl #10
     c18:	04010f03 	streq	r0, [r1], #-3843	@ 0xfffff0fd
     c1c:	03140503 	tsteq	r4, #12582912	@ 0xc00000
     c20:	03050170 	movweq	r0, #20848	@ 0x5170
     c24:	044a0613 	strbeq	r0, [sl], #-1555	@ 0xfffff9ed
     c28:	06050501 	streq	r0, [r5], -r1, lsl #10
     c2c:	05010b03 	streq	r0, [r1, #-2819]	@ 0xfffff4fd
     c30:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
     c34:	21066607 	tstcs	r6, r7, lsl #12
     c38:	04020001 	streq	r0, [r2], #-1
     c3c:	0505ac01 	streq	sl, [r5, #-3073]	@ 0xfffff3ff
     c40:	01040200 	mrseq	r0, R12_usr
     c44:	000f0514 	andeq	r0, pc, r4, lsl r5	@ <UNPREDICTABLE>
     c48:	06010402 	streq	r0, [r1], -r2, lsl #8
     c4c:	00070501 	andeq	r0, r7, r1, lsl #10
     c50:	3d010402 	cfstrscc	mvf0, [r1, #-8]
     c54:	02000f05 	andeq	r0, r0, #5, 30
     c58:	052d0104 	streq	r0, [sp, #-260]!	@ 0xfffffefc
     c5c:	04020007 	streq	r0, [r2], #-7
     c60:	0f052101 	svceq	0x00052101
     c64:	01040200 	mrseq	r0, R12_usr
     c68:	0005051f 	andeq	r0, r5, pc, lsl r5
     c6c:	06010402 	streq	r0, [r1], -r2, lsl #8
     c70:	0007052f 	andeq	r0, r7, pc, lsr #10
     c74:	06010402 	streq	r0, [r1], -r2, lsl #8
     c78:	00100201 	andseq	r0, r0, r1, lsl #4
     c7c:	09bb0101 	ldmibeq	fp!, {r0, r8}
     c80:	00030000 	andeq	r0, r3, r0
     c84:	000000cf 	andeq	r0, r0, pc, asr #1
     c88:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     c8c:	0101000d 	tsteq	r1, sp
     c90:	00000101 	andeq	r0, r0, r1, lsl #2
     c94:	00000100 	andeq	r0, r0, r0, lsl #2
     c98:	63727301 	cmnvs	r2, #67108864	@ 0x4000000
     c9c:	62696c00 	rsbvs	r6, r9, #0, 24
     ca0:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
     ca4:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
     ca8:	73752f00 	cmnvc	r5, #0, 30
     cac:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     cb0:	63672f62 	cmnvs	r7, #392	@ 0x188
     cb4:	72612f63 	rsbvc	r2, r1, #396	@ 0x18c
     cb8:	6f6e2d6d 	svcvs	0x006e2d6d
     cbc:	652d656e 	strvs	r6, [sp, #-1390]!	@ 0xfffffa92
     cc0:	2f696261 	svccs	0x00696261
     cc4:	322e3231 	eorcc	r3, lr, #268435459	@ 0x10000003
     cc8:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	@ <UNPREDICTABLE>
     ccc:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
     cd0:	00006564 	andeq	r6, r0, r4, ror #10
     cd4:	5f627375 	svcpl	0x00627375
     cd8:	73616c63 	cmnvc	r1, #25344	@ 0x6300
     cdc:	00632e73 	rsbeq	r2, r3, r3, ror lr
     ce0:	63000001 	movwvs	r0, #1
     ce4:	7373616c 	cmnvc	r3, #108, 2
     ce8:	63696d5f 	cmnvs	r9, #6080	@ 0x17c0
     cec:	0100682e 	tsteq	r0, lr, lsr #16
     cf0:	73750000 	cmnvc	r5, #0
     cf4:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     cf8:	00682e62 	rsbeq	r2, r8, r2, ror #28
     cfc:	63000001 	movwvs	r0, #1
     d00:	7373616c 	cmnvc	r3, #108, 2
     d04:	6469685f 	strbtvs	r6, [r9], #-2143	@ 0xfffff7a1
     d08:	0100682e 	tsteq	r0, lr, lsr #16
     d0c:	79730000 	ldmdbvc	r3!, {}^	@ <UNPREDICTABLE>
     d10:	63697473 	cmnvs	r9, #1929379840	@ 0x73000000
     d14:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     d18:	63000001 	movwvs	r0, #1
     d1c:	5f65726f 	svcpl	0x0065726f
     d20:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
     d24:	00020068 	andeq	r0, r2, r8, rrx
     d28:	64747300 	ldrbtvs	r7, [r4], #-768	@ 0xfffffd00
     d2c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     d30:	00030068 	andeq	r0, r3, r8, rrx
     d34:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     d38:	31663233 	cmncc	r6, r3, lsr r2
     d3c:	62783330 	rsbsvs	r3, r8, #48, 6	@ 0xc0000000
     d40:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
     d44:	72700000 	rsbsvc	r0, r0, #0
     d48:	6172676f 	cmnvs	r2, pc, ror #14
     d4c:	72656d6d 	rsbvc	r6, r5, #6976	@ 0x1b40
     d50:	0100682e 	tsteq	r0, lr, lsr #16
     d54:	04000000 	streq	r0, [r0], #-0
     d58:	002b0502 	eoreq	r0, fp, r2, lsl #10
     d5c:	08740205 	ldmdaeq	r4!, {r0, r2, r9}^
     d60:	10030800 	andne	r0, r3, r0, lsl #16
     d64:	13030501 	movwne	r0, #13569	@ 0x3501
     d68:	11062b05 	tstne	r6, r5, lsl #22
     d6c:	04210305 	strteq	r0, [r1], #-773	@ 0xfffffcfb
     d70:	03090503 	movweq	r0, #38147	@ 0x9503
     d74:	2e2001a7 	sufcsdp	f0, f0, f7
     d78:	03050204 	movweq	r0, #20996	@ 0x5204
     d7c:	017ed903 	cmneq	lr, r3, lsl #18
     d80:	15050304 	strne	r0, [r5, #-772]	@ 0xfffffcfc
     d84:	2001a803 	andcs	sl, r1, r3, lsl #16
     d88:	03050204 	movweq	r0, #20996	@ 0x5204
     d8c:	587ed803 	ldmdapl	lr!, {r0, r1, fp, ip, lr, pc}^
     d90:	14050304 	strne	r0, [r5], #-772	@ 0xfffffcfc
     d94:	01a60306 			@ <UNDEFINED> instruction: 0x01a60306
     d98:	1303052e 	movwne	r0, #13614	@ 0x352e
     d9c:	06150513 			@ <UNDEFINED> instruction: 0x06150513
     da0:	22030501 	andcs	r0, r3, #4194304	@ 0x400000
     da4:	051e0b05 	ldreq	r0, [lr, #-2821]	@ 0xfffff4fb
     da8:	132f0603 			@ <UNDEFINED> instruction: 0x132f0603
     dac:	06139001 	ldreq	r9, [r3], -r1
     db0:	042e2e20 	strteq	r2, [lr], #-3616	@ 0xfffff1e0
     db4:	d6030602 	strle	r0, [r3], -r2, lsl #12
     db8:	0b05017e 	bleq	1413b8 <__Stack_Size+0x1403b8>
     dbc:	01050106 	tsteq	r5, r6, lsl #2
     dc0:	0628052f 	strteq	r0, [r8], -pc, lsr #10
     dc4:	054a2803 	strbeq	r2, [sl, #-2051]	@ 0xfffff7fd
     dc8:	05131303 	ldreq	r1, [r3, #-771]	@ 0xfffffcfd
     dcc:	0501062f 	streq	r0, [r1, #-1583]	@ 0xfffff9d1
     dd0:	054a2e0a 	strbeq	r2, [sl, #-3594]	@ 0xfffff1f6
     dd4:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
     dd8:	05130601 	ldreq	r0, [r3, #-1537]	@ 0xfffff9ff
     ddc:	10030624 	andne	r0, r3, r4, lsr #12
     de0:	13030558 	movwne	r0, #13656	@ 0x3558
     de4:	061d0513 			@ <UNDEFINED> instruction: 0x061d0513
     de8:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
     dec:	0603053c 			@ <UNDEFINED> instruction: 0x0603053c
     df0:	06010521 	streq	r0, [r1], -r1, lsr #10
     df4:	06270513 			@ <UNDEFINED> instruction: 0x06270513
     df8:	13030569 	movwne	r0, #13673	@ 0x3569
     dfc:	01051313 	tsteq	r5, r3, lsl r3
     e00:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
     e04:	03052406 	movweq	r2, #21510	@ 0x5406
     e08:	05151313 	ldreq	r1, [r5, #-787]	@ 0xfffffced
     e0c:	050d0619 	streq	r0, [sp, #-1561]	@ 0xfffff9e7
     e10:	05052514 	streq	r2, [r5, #-1300]	@ 0xfffffaec
     e14:	0019054a 	andseq	r0, r9, sl, asr #10
     e18:	06010402 	streq	r0, [r1], -r2, lsl #8
     e1c:	00030520 	andeq	r0, r3, r0, lsr #10
     e20:	13010402 	movwne	r0, #5122	@ 0x1402
     e24:	02001105 	andeq	r1, r0, #1073741825	@ 0x40000001
     e28:	01060104 	tsteq	r6, r4, lsl #2
     e2c:	02000a05 	andeq	r0, r0, #20480	@ 0x5000
     e30:	05200104 	streq	r0, [r0, #-260]!	@ 0xfffffefc
     e34:	04020003 	streq	r0, [r2], #-3
     e38:	052f0601 	streq	r0, [pc, #-1537]!	@ 83f <_Minimum_Stack_Size+0x73f>
     e3c:	04020010 	streq	r0, [r2], #-16
     e40:	20010601 	andcs	r0, r1, r1, lsl #12
     e44:	1c030105 	stfnes	f0, [r3], {5}
     e48:	0603052e 	streq	r0, [r3], -lr, lsr #10
     e4c:	05206303 	streq	r6, [r0, #-771]!	@ 0xfffffcfd
     e50:	05010611 	streq	r0, [r1, #-1553]	@ 0xfffff9ef
     e54:	1005200a 	andne	r2, r5, sl
     e58:	1f0a052f 	svcne	0x000a052f
     e5c:	05211005 	streq	r1, [r1, #-5]!
     e60:	05051f0a 	streq	r1, [r5, #-3850]	@ 0xfffff0f6
     e64:	1e0a0522 	cfsh32ne	mvfx0, mvfx10, #18
     e68:	2f060305 	svccs	0x00060305
     e6c:	06050513 			@ <UNDEFINED> instruction: 0x06050513
     e70:	06030501 	streq	r0, [r3], -r1, lsl #10
     e74:	06110521 	ldreq	r0, [r1], -r1, lsr #10
     e78:	210a0501 	tstcs	sl, r1, lsl #10
     e7c:	05231205 	streq	r1, [r3, #-517]!	@ 0xfffffdfb
     e80:	03051c11 	movweq	r1, #23569	@ 0x5c11
     e84:	0a052f06 	beq	14caa4 <__Stack_Size+0x14baa4>
     e88:	03050106 	movweq	r0, #20742	@ 0x5106
     e8c:	12053106 	andne	r3, r5, #-2147483647	@ 0x80000001
     e90:	03050106 	movweq	r0, #20742	@ 0x5106
     e94:	1a052f06 	bne	14cab4 <__Stack_Size+0x14bab4>
     e98:	1e050106 	adfnes	f0, f5, f6
     e9c:	580b052e 	stmdapl	fp, {r1, r2, r3, r5, r8, sl}
     ea0:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
     ea4:	06140513 			@ <UNDEFINED> instruction: 0x06140513
     ea8:	06030501 	streq	r0, [r3], -r1, lsl #10
     eac:	0516143d 	ldreq	r1, [r6, #-1085]	@ 0xfffffbc3
     eb0:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
     eb4:	2f062005 	svccs	0x00062005
     eb8:	01060f05 	tsteq	r6, r5, lsl #30
     ebc:	79030a05 	stmdbvc	r3, {r0, r2, r9, fp}
     ec0:	19052220 	stmdbne	r5, {r5, r9, sp}
     ec4:	06050525 	streq	r0, [r5], -r5, lsr #10
     ec8:	060c054b 	streq	r0, [ip], -fp, asr #10
     ecc:	06030501 	streq	r0, [r3], -r1, lsl #10
     ed0:	060f054f 	streq	r0, [pc], -pc, asr #10
     ed4:	31070501 	tstcc	r7, r1, lsl #10
     ed8:	051d0505 	ldreq	r0, [sp, #-1285]	@ 0xfffffafb
     edc:	05200614 	streq	r0, [r0, #-1556]!	@ 0xfffff9ec
     ee0:	0501061d 	streq	r0, [r1, #-1565]	@ 0xfffff9e3
     ee4:	05750603 	ldrbeq	r0, [r5, #-1539]!	@ 0xfffff9fd
     ee8:	05010613 	streq	r0, [r1, #-1555]	@ 0xfffff9ed
     eec:	03053c0d 	movweq	r3, #23565	@ 0x5c0d
     ef0:	07053e06 	streq	r3, [r5, -r6, lsl #28]
     ef4:	0c050106 	stfeqs	f0, [r5], {6}
     ef8:	060f0520 	streq	r0, [pc], -r0, lsr #10
     efc:	13030593 	movwne	r0, #13715	@ 0x3593
     f00:	01061005 	tsteq	r6, r5
     f04:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
     f08:	060c052f 	streq	r0, [ip], -pc, lsr #10
     f0c:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
     f10:	0b054106 	bleq	151330 <__Stack_Size+0x150330>
     f14:	10050106 	andne	r0, r5, r6, lsl #2
     f18:	09052220 	stmdbeq	r5, {r5, r9, sp}
     f1c:	2e7a0306 	cdpcs	3, 7, cr0, cr10, cr6, {0}
     f20:	01061605 	tsteq	r6, r5, lsl #12
     f24:	052e0b05 	streq	r0, [lr, #-2821]!	@ 0xfffff4fb
     f28:	054b0605 	strbeq	r0, [fp, #-1541]	@ 0xfffff9fb
     f2c:	0501060c 	streq	r0, [r1, #-1548]	@ 0xfffff9f4
     f30:	33062007 	movwcc	r2, #24583	@ 0x6007
     f34:	01060b05 	tsteq	r6, r5, lsl #22
     f38:	05201005 	streq	r1, [r0, #-5]!
     f3c:	052b0605 	streq	r0, [fp, #-1541]!	@ 0xfffff9fb
     f40:	05010612 	streq	r0, [r1, #-1554]	@ 0xfffff9ee
     f44:	12052e19 	andne	r2, r5, #400	@ 0x190
     f48:	20070520 	andcs	r0, r7, r0, lsr #10
     f4c:	3e060b05 	vmlacc.f64	d0, d6, d5
     f50:	01061805 	tsteq	r6, r5, lsl #16
     f54:	052e1f05 	streq	r1, [lr, #-3845]!	@ 0xfffff0fb
     f58:	24052018 	strcs	r2, [r5], #-24	@ 0xffffffe8
     f5c:	2e0d0520 	cfsh32cs	mvfx0, mvfx13, #16
     f60:	40060305 	andmi	r0, r6, r5, lsl #6
     f64:	01060d05 	tsteq	r6, r5, lsl #26
     f68:	4b060305 	blmi	181b84 <__Stack_Size+0x180b84>
     f6c:	01060705 	tsteq	r6, r5, lsl #14
     f70:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
     f74:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
     f78:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
     f7c:	04042f01 	streq	r2, [r4], #-3841	@ 0xfffff0ff
     f80:	03064105 	movweq	r4, #24837	@ 0x6105
     f84:	053c7f8a 	ldreq	r7, [ip, #-3978]!	@ 0xfffff076
     f88:	0a051303 	beq	145b9c <__Stack_Size+0x144b9c>
     f8c:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
     f90:	052f0620 	streq	r0, [pc, #-1568]!	@ 978 <_Minimum_Stack_Size+0x878>
     f94:	06010607 	streq	r0, [r1], -r7, lsl #12
     f98:	0609053d 			@ <UNDEFINED> instruction: 0x0609053d
     f9c:	030a0501 	movweq	r0, #42241	@ 0xa501
     fa0:	01054a10 	tsteq	r5, r0, lsl sl
     fa4:	06030521 	streq	r0, [r3], -r1, lsr #10
     fa8:	13207603 			@ <UNDEFINED> instruction: 0x13207603
     fac:	01060505 	tsteq	r6, r5, lsl #10
     fb0:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     fb4:	3d060106 	stfccs	f0, [r6, #-24]	@ 0xffffffe8
     fb8:	01061405 	tsteq	r6, r5, lsl #8
     fbc:	0607053c 			@ <UNDEFINED> instruction: 0x0607053c
     fc0:	0513133d 	ldreq	r1, [r3, #-829]	@ 0xfffffcc3
     fc4:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
     fc8:	05211e0d 	streq	r1, [r1, #-3597]!	@ 0xfffff1f3
     fcc:	20770310 	rsbscs	r0, r7, r0, lsl r3
     fd0:	4805202e 	stmdami	r5, {r1, r2, r3, r5, sp}
     fd4:	02050006 	andeq	r0, r5, #6
     fd8:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
     fdc:	05011003 	streq	r1, [r1, #-3]
     fe0:	48051303 	stmdami	r5, {r0, r1, r8, r9, ip}
     fe4:	05051106 	streq	r1, [r5, #-262]	@ 0xfffffefa
     fe8:	054b0621 	strbeq	r0, [fp, #-1569]	@ 0xfffff9df
     fec:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
     ff0:	05480606 	strbeq	r0, [r8, #-1542]	@ 0xfffff9fa
     ff4:	09051507 	stmdbeq	r5, {r0, r1, r2, r8, sl, ip}
     ff8:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ffc:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    1000:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1004:	03043d06 	movweq	r3, #19718	@ 0x4d06
    1008:	88031305 	stmdahi	r3, {r0, r2, r8, r9, ip}
    100c:	03050101 	movweq	r0, #20737	@ 0x5101
    1010:	060a0513 			@ <UNDEFINED> instruction: 0x060a0513
    1014:	2e2e2e01 	cdpcs	14, 2, cr2, cr14, cr1, {0}
    1018:	07050404 	streq	r0, [r5, -r4, lsl #8]
    101c:	7ef90306 	cdpvc	3, 15, cr0, cr9, cr6, {0}
    1020:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    1024:	06220501 	strteq	r0, [r2], -r1, lsl #10
    1028:	0905013c 	stmdbeq	r5, {r2, r3, r4, r5, r8}
    102c:	22050106 	andcs	r0, r5, #-2147483647	@ 0x80000001
    1030:	0639052e 	ldrteq	r0, [r9], -lr, lsr #10
    1034:	053c013c 	ldreq	r0, [ip, #-316]!	@ 0xfffffec4
    1038:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    103c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1040:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
    1044:	053c3905 	ldreq	r3, [ip, #-2309]!	@ 0xfffff6fb
    1048:	013c0622 	teqeq	ip, r2, lsr #12
    104c:	01013905 	tsteq	r1, r5, lsl #18
    1050:	13070520 	movwne	r0, #29984	@ 0x7520
    1054:	01061205 	tsteq	r6, r5, lsl #4
    1058:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    105c:	39052e22 	stmdbcc	r5, {r1, r5, r9, sl, fp, sp}
    1060:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    1064:	3905013c 	stmdbcc	r5, {r2, r3, r4, r5, r8}
    1068:	05200101 	streq	r0, [r0, #-257]!	@ 0xfffffeff
    106c:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    1070:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1074:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    1078:	39050120 	stmdbcc	r5, {r5, r8}
    107c:	053c012e 	ldreq	r0, [ip, #-302]!	@ 0xfffffed2
    1080:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    1084:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1088:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    108c:	39050120 	stmdbcc	r5, {r5, r8}
    1090:	053c013c 	ldreq	r0, [ip, #-316]!	@ 0xfffffec4
    1094:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    1098:	09050106 	stmdbeq	r5, {r1, r2, r8}
    109c:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
    10a0:	052e3905 	streq	r3, [lr, #-2309]!	@ 0xfffff6fb
    10a4:	013c0622 	teqeq	ip, r2, lsr #12
    10a8:	01013905 	tsteq	r1, r5, lsl #18
    10ac:	13070520 	movwne	r0, #29984	@ 0x7520
    10b0:	01061205 	tsteq	r6, r5, lsl #4
    10b4:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    10b8:	01200622 			@ <UNDEFINED> instruction: 0x01200622
    10bc:	012e3905 			@ <UNDEFINED> instruction: 0x012e3905
    10c0:	1307053c 	movwne	r0, #30012	@ 0x753c
    10c4:	01061205 	tsteq	r6, r5, lsl #4
    10c8:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    10cc:	01200622 			@ <UNDEFINED> instruction: 0x01200622
    10d0:	012e3905 			@ <UNDEFINED> instruction: 0x012e3905
    10d4:	1407053c 	strne	r0, [r7], #-1340	@ 0xfffffac4
    10d8:	01061205 	tsteq	r6, r5, lsl #4
    10dc:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    10e0:	39052e22 	stmdbcc	r5, {r1, r5, r9, sl, fp, sp}
    10e4:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    10e8:	3905013c 	stmdbcc	r5, {r2, r3, r4, r5, r8}
    10ec:	05200101 	streq	r0, [r0, #-257]!	@ 0xfffffeff
    10f0:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    10f4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10f8:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
    10fc:	052e3905 	streq	r3, [lr, #-2309]!	@ 0xfffff6fb
    1100:	013c0622 	teqeq	ip, r2, lsr #12
    1104:	01013905 	tsteq	r1, r5, lsl #18
    1108:	13070520 	movwne	r0, #29984	@ 0x7520
    110c:	01061205 	tsteq	r6, r5, lsl #4
    1110:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    1114:	39052e22 	stmdbcc	r5, {r1, r5, r9, sl, fp, sp}
    1118:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    111c:	3905013c 	stmdbcc	r5, {r2, r3, r4, r5, r8}
    1120:	05200101 	streq	r0, [r0, #-257]!	@ 0xfffffeff
    1124:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    1128:	09050106 	stmdbeq	r5, {r1, r2, r8}
    112c:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
    1130:	052e3905 	streq	r3, [lr, #-2309]!	@ 0xfffff6fb
    1134:	013c0622 	teqeq	ip, r2, lsr #12
    1138:	01013905 	tsteq	r1, r5, lsl #18
    113c:	13070520 	movwne	r0, #29984	@ 0x7520
    1140:	01061205 	tsteq	r6, r5, lsl #4
    1144:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    1148:	39052e22 	stmdbcc	r5, {r1, r5, r9, sl, fp, sp}
    114c:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    1150:	3905013c 	stmdbcc	r5, {r2, r3, r4, r5, r8}
    1154:	05200101 	streq	r0, [r0, #-257]!	@ 0xfffffeff
    1158:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    115c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1160:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
    1164:	052e3905 	streq	r3, [lr, #-2309]!	@ 0xfffff6fb
    1168:	013c0622 	teqeq	ip, r2, lsr #12
    116c:	01013905 	tsteq	r1, r5, lsl #18
    1170:	13070520 	movwne	r0, #29984	@ 0x7520
    1174:	01061205 	tsteq	r6, r5, lsl #4
    1178:	052e0905 	streq	r0, [lr, #-2309]!	@ 0xfffff6fb
    117c:	39052e22 	stmdbcc	r5, {r1, r5, r9, sl, fp, sp}
    1180:	0622053c 			@ <UNDEFINED> instruction: 0x0622053c
    1184:	3905013c 	stmdbcc	r5, {r2, r3, r4, r5, r8}
    1188:	05200101 	streq	r0, [r0, #-257]!	@ 0xfffffeff
    118c:	12051307 	andne	r1, r5, #469762048	@ 0x1c000000
    1190:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1194:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
    1198:	053c3905 	ldreq	r3, [ip, #-2309]!	@ 0xfffff6fb
    119c:	013c0622 	teqeq	ip, r2, lsr #12
    11a0:	01013905 	tsteq	r1, r5, lsl #18
    11a4:	14070520 	strne	r0, [r7], #-1312	@ 0xfffffae0
    11a8:	04132e01 	ldreq	r2, [r3], #-3585	@ 0xfffff1ff
    11ac:	03110505 	tsteq	r1, #20971520	@ 0x1400000
    11b0:	05017fb8 	streq	r7, [r1, #-4024]	@ 0xfffff048
    11b4:	2505011e 	strcs	r0, [r5, #-286]	@ 0xfffffee2
    11b8:	04040106 	streq	r0, [r4], #-262	@ 0xfffffefa
    11bc:	c8032205 	stmdagt	r3, {r0, r2, r9, sp}
    11c0:	13052e00 	movwne	r2, #24064	@ 0x5e00
    11c4:	0607052e 	streq	r0, [r7], -lr, lsr #10
    11c8:	061e0522 	ldreq	r0, [lr], -r2, lsr #10
    11cc:	20016603 	andcs	r6, r1, r3, lsl #12
    11d0:	1e030105 	adfnes	f0, f3, f5
    11d4:	032d0501 			@ <UNDEFINED> instruction: 0x032d0501
    11d8:	05202064 	streq	r2, [r0, #-100]!	@ 0xffffff9c
    11dc:	05000610 	streq	r0, [r0, #-1552]	@ 0xfffff9f0
    11e0:	000be402 	andeq	lr, fp, r2, lsl #8
    11e4:	011e0308 	tsteq	lr, r8, lsl #6
    11e8:	01130305 	tsteq	r3, r5, lsl #6
    11ec:	1f061005 	svcne	0x00061005
    11f0:	21210305 			@ <UNDEFINED> instruction: 0x21210305
    11f4:	053c061f 	ldreq	r0, [ip, #-1567]!	@ 0xfffff9e1
    11f8:	05420629 	strbeq	r0, [r2, #-1577]	@ 0xfffff9d7
    11fc:	2e7a0303 	cdpcs	3, 7, cr0, cr10, cr3, {0}
    1200:	01135806 	tsteq	r3, r6, lsl #16
    1204:	20010101 	andcs	r0, r1, r1, lsl #2
    1208:	01202e2e 			@ <UNDEFINED> instruction: 0x01202e2e
    120c:	1a050101 	bne	141618 <__Stack_Size+0x140618>
    1210:	01010101 	tsteq	r1, r1, lsl #2
    1214:	06200601 	strteq	r0, [r0], -r1, lsl #12
    1218:	062e2e20 	strteq	r2, [lr], -r0, lsr #28
    121c:	01010620 	tsteq	r1, r0, lsr #12
    1220:	31050101 	tstcc	r5, r1, lsl #2
    1224:	01010101 	tsteq	r1, r1, lsl #2
    1228:	06200601 	strteq	r0, [r0], -r1, lsl #12
    122c:	062e2e20 	strteq	r2, [lr], -r0, lsr #28
    1230:	01010620 	tsteq	r1, r0, lsr #12
    1234:	05010101 	streq	r0, [r1, #-257]	@ 0xfffffeff
    1238:	01010148 	tsteq	r1, r8, asr #2
    123c:	2e200101 	sufcss	f0, f0, f1
    1240:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    1244:	01010101 	tsteq	r1, r1, lsl #2
    1248:	13030501 	movwne	r0, #13569	@ 0x3501
    124c:	01010101 	tsteq	r1, r1, lsl #2
    1250:	062e2e20 	strteq	r2, [lr], -r0, lsr #28
    1254:	01010620 	tsteq	r1, r0, lsr #12
    1258:	1a050101 	bne	141664 <__Stack_Size+0x140664>
    125c:	01010101 	tsteq	r1, r1, lsl #2
    1260:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    1264:	01062006 	tsteq	r6, r6
    1268:	01010101 	tsteq	r1, r1, lsl #2
    126c:	01013105 	tsteq	r1, r5, lsl #2
    1270:	20010101 	andcs	r0, r1, r1, lsl #2
    1274:	20062e2e 	andcs	r2, r6, lr, lsr #28
    1278:	01010106 	tsteq	r1, r6, lsl #2
    127c:	48050101 	stmdami	r5, {r0, r8}
    1280:	01010101 	tsteq	r1, r1, lsl #2
    1284:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    1288:	01062006 	tsteq	r6, r6
    128c:	01010101 	tsteq	r1, r1, lsl #2
    1290:	01130305 	tsteq	r3, r5, lsl #6
    1294:	20010101 	andcs	r0, r1, r1, lsl #2
    1298:	20062e2e 	andcs	r2, r6, lr, lsr #28
    129c:	01010106 	tsteq	r1, r6, lsl #2
    12a0:	1a050101 	bne	1416ac <__Stack_Size+0x1406ac>
    12a4:	01010101 	tsteq	r1, r1, lsl #2
    12a8:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    12ac:	01062006 	tsteq	r6, r6
    12b0:	01010101 	tsteq	r1, r1, lsl #2
    12b4:	01013105 	tsteq	r1, r5, lsl #2
    12b8:	20010101 	andcs	r0, r1, r1, lsl #2
    12bc:	20062e2e 	andcs	r2, r6, lr, lsr #28
    12c0:	01010106 	tsteq	r1, r6, lsl #2
    12c4:	48050101 	stmdami	r5, {r0, r8}
    12c8:	01010101 	tsteq	r1, r1, lsl #2
    12cc:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    12d0:	01062006 	tsteq	r6, r6
    12d4:	01010101 	tsteq	r1, r1, lsl #2
    12d8:	01130305 	tsteq	r3, r5, lsl #6
    12dc:	20010101 	andcs	r0, r1, r1, lsl #2
    12e0:	20062e2e 	andcs	r2, r6, lr, lsr #28
    12e4:	01010106 	tsteq	r1, r6, lsl #2
    12e8:	1a050101 	bne	1416f4 <__Stack_Size+0x1406f4>
    12ec:	01010101 	tsteq	r1, r1, lsl #2
    12f0:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    12f4:	01062006 	tsteq	r6, r6
    12f8:	01010101 	tsteq	r1, r1, lsl #2
    12fc:	01013105 	tsteq	r1, r5, lsl #2
    1300:	20010101 	andcs	r0, r1, r1, lsl #2
    1304:	20062e2e 	andcs	r2, r6, lr, lsr #28
    1308:	01010106 	tsteq	r1, r6, lsl #2
    130c:	01480501 	cmpeq	r8, r1, lsl #10
    1310:	01010101 	tsteq	r1, r1, lsl #2
    1314:	062e2e20 	strteq	r2, [lr], -r0, lsr #28
    1318:	01010620 	tsteq	r1, r0, lsr #12
    131c:	03050101 	movweq	r0, #20737	@ 0x5101
    1320:	2e060114 	mcrcs	1, 0, r0, cr6, cr4, {0}
    1324:	16052006 	strne	r2, [r5], -r6
    1328:	053c0101 	ldreq	r0, [ip, #-257]!	@ 0xfffffeff
    132c:	05010129 	streq	r0, [r1, #-297]	@ 0xfffffed7
    1330:	0501063c 	streq	r0, [r1, #-1596]	@ 0xfffff9c4
    1334:	20062e29 	andcs	r2, r6, r9, lsr #28
    1338:	01013c05 	tsteq	r1, r5, lsl #24
    133c:	13030520 	movwne	r0, #13600	@ 0x3520
    1340:	16053c01 	strne	r3, [r5], -r1, lsl #24
    1344:	29050101 	stmdbcs	r5, {r0, r8}
    1348:	16052e06 	strne	r2, [r5], -r6, lsl #28
    134c:	0520062e 	streq	r0, [r0, #-1582]!	@ 0xfffff9d2
    1350:	05010129 	streq	r0, [r1, #-297]	@ 0xfffffed7
    1354:	0501063c 	streq	r0, [r1, #-1596]	@ 0xfffff9c4
    1358:	20062e29 	andcs	r2, r6, r9, lsr #28
    135c:	01013c05 	tsteq	r1, r5, lsl #24
    1360:	13030520 	movwne	r0, #13600	@ 0x3520
    1364:	16053c01 	strne	r3, [r5], -r1, lsl #24
    1368:	03050101 	movweq	r0, #20737	@ 0x5101
    136c:	16051306 	strne	r1, [r5], -r6, lsl #6
    1370:	0520062d 	streq	r0, [r0, #-1581]!	@ 0xfffff9d3
    1374:	20010129 	andcs	r0, r1, r9, lsr #2
    1378:	01013c05 	tsteq	r1, r5, lsl #24
    137c:	13030520 	movwne	r0, #13600	@ 0x3520
    1380:	16052001 	strne	r2, [r5], -r1
    1384:	053c0101 	ldreq	r0, [ip, #-257]!	@ 0xfffffeff
    1388:	3c010129 	stfccs	f0, [r1], {41}	@ 0x29
    138c:	01013c05 	tsteq	r1, r5, lsl #24
    1390:	0601053c 			@ <UNDEFINED> instruction: 0x0601053c
    1394:	06100513 			@ <UNDEFINED> instruction: 0x06100513
    1398:	13030592 	movwne	r0, #13714	@ 0x3592
    139c:	11050504 	tstne	r5, r4, lsl #10
    13a0:	017fa203 	cmneq	pc, r3, lsl #4
    13a4:	05011e05 	streq	r1, [r1, #-3589]	@ 0xfffff1fb
    13a8:	04010625 	streq	r0, [r1], #-1573	@ 0xfffff9db
    13ac:	03130504 	tsteq	r3, #4, 10	@ 0x1000000
    13b0:	052e00de 	streq	r0, [lr, #-222]!	@ 0xffffff22
    13b4:	06052e05 	streq	r2, [r5], -r5, lsl #28
    13b8:	05052d06 	streq	r2, [r5, #-3334]	@ 0xfffff2fa
    13bc:	06110514 			@ <UNDEFINED> instruction: 0x06110514
    13c0:	06050501 	streq	r0, [r5], -r1, lsl #10
    13c4:	014a013d 	cmpeq	sl, sp, lsr r1
    13c8:	14060105 	strne	r0, [r6], #-261	@ 0xfffffefb
    13cc:	50050104 	andpl	r0, r5, r4, lsl #2
    13d0:	02a70306 	adceq	r0, r7, #402653184	@ 0x18000000
    13d4:	13030574 	movwne	r0, #13684	@ 0x3574
    13d8:	14080705 	strne	r0, [r8], #-1797	@ 0xfffff8fb
    13dc:	01060d05 	tsteq	r6, r5, lsl #26
    13e0:	2f060705 	svccs	0x00060705
    13e4:	01060d05 	tsteq	r6, r5, lsl #26
    13e8:	21032005 	tstcs	r3, r5
    13ec:	06070520 	streq	r0, [r7], -r0, lsr #10
    13f0:	06010521 	streq	r0, [r1], -r1, lsr #10
    13f4:	06070516 			@ <UNDEFINED> instruction: 0x06070516
    13f8:	05205d03 	streq	r5, [r0, #-3331]!	@ 0xfffff2fd
    13fc:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
    1400:	052f0607 	streq	r0, [pc, #-1543]!	@ e01 <_Minimum_Stack_Size+0xd01>
    1404:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
    1408:	053f0607 	ldreq	r0, [pc, #-1543]!	@ e09 <_Minimum_Stack_Size+0xd09>
    140c:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
    1410:	052f0607 	streq	r0, [pc, #-1543]!	@ e11 <_Minimum_Stack_Size+0xd11>
    1414:	0501060d 	streq	r0, [r1, #-1549]	@ 0xfffff9f3
    1418:	06310607 	ldrteq	r0, [r1], -r7, lsl #12
    141c:	84110520 	ldrhi	r0, [r1], #-1312	@ 0xfffffae0
    1420:	03060705 	movweq	r0, #26373	@ 0x6705
    1424:	20052014 	andcs	r2, r5, r4, lsl r0
    1428:	0b050106 	bleq	141848 <__Stack_Size+0x140848>
    142c:	2e720306 	cdpcs	3, 7, cr0, cr2, cr6, {0}
    1430:	30133013 	andscc	r3, r3, r3, lsl r0
    1434:	05133013 	ldreq	r3, [r3, #-19]	@ 0xffffffed
    1438:	02050047 	andeq	r0, r5, #71	@ 0x47
    143c:	08000de4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, fp}
    1440:	05010b03 	streq	r0, [r1, #-2819]	@ 0xfffff4fd
    1444:	47051303 	strmi	r1, [r5, -r3, lsl #6]
    1448:	05201106 	streq	r1, [r0, #-262]!	@ 0xfffffefa
    144c:	05052107 	streq	r2, [r5, #-263]	@ 0xfffffef9
    1450:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1454:	07051321 	streq	r1, [r5, -r1, lsr #6]
    1458:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    145c:	3e01053c 	mcrcc	5, 0, r0, cr1, cr12, {1}
    1460:	051c2d05 	ldreq	r2, [ip, #-3333]	@ 0xfffff2fb
    1464:	0500064e 	streq	r0, [r0, #-1614]	@ 0xfffff9b2
    1468:	000e0002 	andeq	r0, lr, r2
    146c:	03051808 	movweq	r1, #22536	@ 0x5808
    1470:	064e0513 			@ <UNDEFINED> instruction: 0x064e0513
    1474:	07052011 	smladeq	r5, r1, r0, r2
    1478:	2e05053d 	mcrcs	5, 0, r0, cr5, cr13, {1}
    147c:	21060305 	tstcs	r6, r5, lsl #6
    1480:	06070513 			@ <UNDEFINED> instruction: 0x06070513
    1484:	58050501 	stmdapl	r5, {r0, r8, sl}
    1488:	053e0105 	ldreq	r0, [lr, #-261]!	@ 0xfffffefb
    148c:	16051c33 			@ <UNDEFINED> instruction: 0x16051c33
    1490:	02050006 	andeq	r0, r5, #6
    1494:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
    1498:	13030518 	movwne	r0, #13592	@ 0x3518
    149c:	11061605 	tstne	r6, r5, lsl #12
    14a0:	06210305 	strteq	r0, [r1], -r5, lsl #6
    14a4:	0502042f 	streq	r0, [r2, #-1071]	@ 0xfffffbd1
    14a8:	7cd1030d 	ldclvc	3, cr0, [r1], {13}
    14ac:	13030501 	movwne	r0, #13569	@ 0x3501
    14b0:	01010167 	tsteq	r1, r7, ror #2
    14b4:	1d230601 	stcne	6, cr0, [r3, #-4]!
    14b8:	012e2006 			@ <UNDEFINED> instruction: 0x012e2006
    14bc:	01010120 	tsteq	r1, r0, lsr #2
    14c0:	06011501 	streq	r1, [r1], -r1, lsl #10
    14c4:	4a3c063c 	bmi	f02dbc <__Stack_Size+0xf01dbc>
    14c8:	01018201 	tsteq	r1, r1, lsl #4
    14cc:	20200101 	eorcs	r0, r0, r1, lsl #2
    14d0:	06200601 	strteq	r0, [r0], -r1, lsl #12
    14d4:	06200620 	strteq	r0, [r0], -r0, lsr #12
    14d8:	3c01203c 	stccc	0, cr2, [r1], {60}	@ 0x3c
    14dc:	4a011301 	bmi	460e8 <__Stack_Size+0x450e8>
    14e0:	66010113 			@ <UNDEFINED> instruction: 0x66010113
    14e4:	4a011301 	bmi	460f0 <__Stack_Size+0x450f0>
    14e8:	13660113 	cmnne	r6, #-1073741820	@ 0xc0000004
    14ec:	01060705 	tsteq	r6, r5, lsl #14
    14f0:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
    14f4:	043d0603 	ldrteq	r0, [sp], #-1539	@ 0xfffff9fd
    14f8:	03160506 	tsteq	r6, #25165824	@ 0x1800000
    14fc:	05010bb7 	streq	r0, [r1, #-2999]	@ 0xfffff449
    1500:	27051403 	strcs	r1, [r5, -r3, lsl #8]
    1504:	044a0106 	strbeq	r0, [sl], #-262	@ 0xfffffefa
    1508:	06030502 	streq	r0, [r3], -r2, lsl #10
    150c:	0174ca03 	cmneq	r4, r3, lsl #20
    1510:	014a5801 	cmpeq	sl, r1, lsl #16
    1514:	01010182 	smlabbeq	r1, r2, r1, r0
    1518:	01202001 			@ <UNDEFINED> instruction: 0x01202001
    151c:	20062006 	andcs	r2, r6, r6
    1520:	3c062006 	stccc	0, cr2, [r6], {6}
    1524:	014a0120 	cmpeq	sl, r0, lsr #2
    1528:	06070513 			@ <UNDEFINED> instruction: 0x06070513
    152c:	200d0501 	andcs	r0, sp, r1, lsl #10
    1530:	3d060305 	stccc	3, cr0, [r6, #-20]	@ 0xffffffec
    1534:	01136601 	tsteq	r3, r1, lsl #12
    1538:	13016601 	movwne	r6, #5633	@ 0x1601
    153c:	05154a01 	ldreq	r4, [r5, #-2561]	@ 0xfffff5ff
    1540:	05010606 	streq	r0, [r1, #-1542]	@ 0xfffff9fa
    1544:	03052010 	movweq	r2, #20496	@ 0x5010
    1548:	0d053d06 	stceq	13, cr3, [r5, #-24]	@ 0xffffffe8
    154c:	1f2f0106 	svcne	0x002f0106
    1550:	21060305 	tstcs	r6, r5, lsl #6
    1554:	01060d05 	tsteq	r6, r5, lsl #26
    1558:	21060305 	tstcs	r6, r5, lsl #6
    155c:	01060705 	tsteq	r6, r5, lsl #14
    1560:	05200d05 	streq	r0, [r0, #-3333]!	@ 0xfffff2fb
    1564:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
    1568:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    156c:	053d0603 	ldreq	r0, [sp, #-1539]!	@ 0xfffff9fd
    1570:	0501060e 	streq	r0, [r1, #-1550]	@ 0xfffff9f2
    1574:	052f0603 	streq	r0, [pc, #-1539]!	@ f79 <_Minimum_Stack_Size+0xe79>
    1578:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    157c:	043c200d 	ldrteq	r2, [ip], #-13
    1580:	06030501 	streq	r0, [r3], -r1, lsl #10
    1584:	01039503 	tsteq	r3, r3, lsl #10
    1588:	13060105 	movwne	r0, #24837	@ 0x6105
    158c:	052d0305 	streq	r0, [sp, #-773]!	@ 0xfffffcfb
    1590:	05000616 	streq	r0, [r0, #-1558]	@ 0xfffff9ea
    1594:	000f6402 	andeq	r6, pc, r2, lsl #8
    1598:	03051508 	movweq	r1, #21768	@ 0x5508
    159c:	06160513 			@ <UNDEFINED> instruction: 0x06160513
    15a0:	21030511 	tstcs	r3, r1, lsl r5
    15a4:	02042f06 	andeq	r2, r4, #6, 30
    15a8:	f2030d05 	vadd.f32	d0, d3, d5
    15ac:	0305017c 	movweq	r0, #20860	@ 0x517c
    15b0:	05041413 	streq	r1, [r4, #-1043]	@ 0xfffffbed
    15b4:	40031105 	andmi	r1, r3, r5, lsl #2
    15b8:	011e0501 	tsteq	lr, r1, lsl #10
    15bc:	01062505 	tsteq	r6, r5, lsl #10
    15c0:	13050204 	movwne	r0, #20996	@ 0x5204
    15c4:	2000c003 	andcs	ip, r0, r3
    15c8:	25050504 	strcs	r0, [r5, #-1284]	@ 0xfffffafc
    15cc:	04204003 	strteq	r4, [r0], #-3
    15d0:	03050502 	movweq	r0, #21762	@ 0x5502
    15d4:	052000c0 	streq	r0, [r0, #-192]!	@ 0xffffff40
    15d8:	043d0603 	ldrteq	r0, [sp], #-1539	@ 0xfffff9fd
    15dc:	03110505 	tsteq	r1, #20971520	@ 0x1400000
    15e0:	05017fbf 	streq	r7, [r1, #-4031]	@ 0xfffff041
    15e4:	2505011e 	strcs	r0, [r5, #-286]	@ 0xfffffee2
    15e8:	02040106 	andeq	r0, r4, #-2147483647	@ 0x80000001
    15ec:	c3030a05 	movwgt	r0, #14853	@ 0x3a05
    15f0:	1b052000 	blne	1495f8 <__Stack_Size+0x1485f8>
    15f4:	2e0c051e 	mcrcs	5, 0, r0, cr12, cr14, {0}
    15f8:	22060305 	andcs	r0, r6, #335544320	@ 0x14000000
    15fc:	01060a05 	tsteq	r6, r5, lsl #20
    1600:	06200505 	strteq	r0, [r0], -r5, lsl #10
    1604:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    1608:	20190501 	andscs	r0, r9, r1, lsl #10
    160c:	052e0e05 	streq	r0, [lr, #-3589]!	@ 0xfffff1fb
    1610:	052f0605 	streq	r0, [pc, #-1541]!	@ 1013 <__Stack_Size+0x13>
    1614:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1618:	0104200f 	tsteq	r4, pc
    161c:	03060305 	movweq	r0, #25349	@ 0x6305
    1620:	053c0387 	ldreq	r0, [ip, #-903]!	@ 0xfffffc79
    1624:	05130601 	ldreq	r0, [r3, #-1537]	@ 0xfffff9ff
    1628:	15052d03 	strne	r2, [r5, #-3331]	@ 0xfffff2fd
    162c:	02050006 	andeq	r0, r5, #6
    1630:	08000fac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, fp}
    1634:	13030515 	movwne	r0, #13589	@ 0x3515
    1638:	01000202 	tsteq	r0, r2, lsl #4
    163c:	0000b901 	andeq	fp, r0, r1, lsl #18
    1640:	81000300 	mrshi	r0, LR_irq
    1644:	02000000 	andeq	r0, r0, #0
    1648:	0d0efb01 	vstreq	d15, [lr, #-4]
    164c:	01010100 	mrseq	r0, (UNDEF: 17)
    1650:	00000001 	andeq	r0, r0, r1
    1654:	01000001 	tsteq	r0, r1
    1658:	00637273 	rsbeq	r7, r3, r3, ror r2
    165c:	2f62696c 	svccs	0x0062696c
    1660:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
    1664:	00656475 	rsbeq	r6, r5, r5, ror r4
    1668:	7273752f 	rsbsvc	r7, r3, #197132288	@ 0xbc00000
    166c:	62696c2f 	rsbvs	r6, r9, #12032	@ 0x2f00
    1670:	6363672f 	cmnvs	r3, #12320768	@ 0xbc0000
    1674:	6d72612f 	ldfvse	f6, [r2, #-188]!	@ 0xffffff44
    1678:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    167c:	61652d65 	cmnvs	r5, r5, ror #26
    1680:	312f6962 			@ <UNDEFINED> instruction: 0x312f6962
    1684:	2e322e32 	mrccs	14, 1, r2, cr2, cr2, {1}
    1688:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    168c:	64756c63 	ldrbtvs	r6, [r5], #-3171	@ 0xfffff39d
    1690:	73000065 	movwvc	r0, #101	@ 0x65
    1694:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    1698:	632e6b63 			@ <UNDEFINED> instruction: 0x632e6b63
    169c:	00000100 	andeq	r0, r0, r0, lsl #2
    16a0:	65726f63 	ldrbvs	r6, [r2, #-3939]!	@ 0xfffff09d
    16a4:	336d635f 	cmncc	sp, #2080374785	@ 0x7c000001
    16a8:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
    16ac:	74730000 	ldrbtvc	r0, [r3], #-0
    16b0:	746e6964 	strbtvc	r6, [lr], #-2404	@ 0xfffff69c
    16b4:	0300682e 	movweq	r6, #2094	@ 0x82e
    16b8:	79730000 	ldmdbvc	r3!, {}^	@ <UNPREDICTABLE>
    16bc:	63697473 	cmnvs	r9, #1929379840	@ 0x73000000
    16c0:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    16c4:	00000001 	andeq	r0, r0, r1
    16c8:	05001405 	streq	r1, [r0, #-1029]	@ 0xfffffbfb
    16cc:	000fb002 	andeq	fp, pc, r2
    16d0:	03051708 	movweq	r1, #22280	@ 0x5708
    16d4:	061a0514 			@ <UNDEFINED> instruction: 0x061a0514
    16d8:	3c110501 	cfldr32cc	mvfx0, [r1], {1}
    16dc:	21060305 	tstcs	r6, r5, lsl #6
    16e0:	01061105 	tsteq	r6, r5, lsl #2
    16e4:	052f0105 	streq	r0, [pc, #-261]!	@ 15e7 <__Stack_Size+0x5e7>
    16e8:	05220617 	streq	r0, [r2, #-1559]!	@ 0xfffff9e9
    16ec:	13051303 	movwne	r1, #21251	@ 0x5303
    16f0:	01050106 	tsteq	r5, r6, lsl #2
    16f4:	0003024b 	andeq	r0, r3, fp, asr #4
    16f8:	09420101 	stmdbeq	r2, {r0, r8}^
    16fc:	00030000 	andeq	r0, r3, r0
    1700:	000000ac 	andeq	r0, r0, ip, lsr #1
    1704:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1708:	0101000d 	tsteq	r1, sp
    170c:	00000101 	andeq	r0, r0, r1, lsl #2
    1710:	00000100 	andeq	r0, r0, r0, lsl #2
    1714:	63727301 	cmnvs	r2, #67108864	@ 0x4000000
    1718:	62696c00 	rsbvs	r6, r9, #0, 24
    171c:	636e692f 	cmnvs	lr, #770048	@ 0xbc000
    1720:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
    1724:	73752f00 	cmnvc	r5, #0, 30
    1728:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    172c:	63672f62 	cmnvs	r7, #392	@ 0x188
    1730:	72612f63 	rsbvc	r2, r1, #396	@ 0x18c
    1734:	6f6e2d6d 	svcvs	0x006e2d6d
    1738:	652d656e 	strvs	r6, [sp, #-1390]!	@ 0xfffffa92
    173c:	2f696261 	svccs	0x00696261
    1740:	322e3231 	eorcc	r3, lr, #268435459	@ 0x10000003
    1744:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	@ <UNPREDICTABLE>
    1748:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
    174c:	00006564 	andeq	r6, r0, r4, ror #10
    1750:	676f7270 			@ <UNDEFINED> instruction: 0x676f7270
    1754:	6d6d6172 	stfvse	f6, [sp, #-456]!	@ 0xfffffe38
    1758:	632e7265 			@ <UNDEFINED> instruction: 0x632e7265
    175c:	00000100 	andeq	r0, r0, r0, lsl #2
    1760:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
    1764:	0100682e 	tsteq	r0, lr, lsr #16
    1768:	73750000 	cmnvc	r5, #0
    176c:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    1770:	00682e62 	rsbeq	r2, r8, r2, ror #28
    1774:	73000001 	movwvc	r0, #1
    1778:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    177c:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1780:	00000100 	andeq	r0, r0, r0, lsl #2
    1784:	65726f63 	ldrbvs	r6, [r2, #-3939]!	@ 0xfffff09d
    1788:	336d635f 	cmncc	sp, #2080374785	@ 0x7c000001
    178c:	0200682e 	andeq	r6, r0, #3014656	@ 0x2e0000
    1790:	74730000 	ldrbtvc	r0, [r3], #-0
    1794:	746e6964 	strbtvc	r6, [lr], #-2404	@ 0xfffff69c
    1798:	0300682e 	movweq	r6, #2094	@ 0x82e
    179c:	74730000 	ldrbtvc	r0, [r3], #-0
    17a0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    17a4:	78333031 	ldmdavc	r3!, {r0, r4, r5, ip, sp}
    17a8:	00682e62 	rsbeq	r2, r8, r2, ror #28
    17ac:	00000002 	andeq	r0, r0, r2
    17b0:	28050204 	stmdacs	r5, {r2, r9}
    17b4:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    17b8:	0308000f 	movweq	r0, #32783	@ 0x800f
    17bc:	050100cc 	streq	r0, [r1, #-204]	@ 0xffffff34
    17c0:	0f051303 	svceq	0x00051303
    17c4:	19050106 	stmdbne	r5, {r1, r2, r8}
    17c8:	201f0520 	andscs	r0, pc, r0, lsr #10
    17cc:	05210105 	streq	r0, [r1, #-261]!	@ 0xfffffefb
    17d0:	05300628 	ldreq	r0, [r0, #-1576]!	@ 0xfffff9d8
    17d4:	05131303 	ldreq	r1, [r3, #-771]	@ 0xfffffcfd
    17d8:	017a0309 	cmneq	sl, r9, lsl #6
    17dc:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    17e0:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    17e4:	28052019 	stmdacs	r5, {r0, r3, r4, sp}
    17e8:	22050523 	andcs	r0, r5, #146800640	@ 0x8c00000
    17ec:	2f060305 	svccs	0x00060305
    17f0:	01061505 	tsteq	r6, r5, lsl #10
    17f4:	05200705 	streq	r0, [r0, #-1797]!	@ 0xfffff8fb
    17f8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
    17fc:	0603051f 			@ <UNDEFINED> instruction: 0x0603051f
    1800:	060a0521 	streq	r0, [sl], -r1, lsr #10
    1804:	06030501 	streq	r0, [r3], -r1, lsl #10
    1808:	0606053d 			@ <UNDEFINED> instruction: 0x0606053d
    180c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    1810:	21060305 	tstcs	r6, r5, lsl #6
    1814:	01060a05 	tsteq	r6, r5, lsl #20
    1818:	051c2505 	ldreq	r2, [ip, #-1285]	@ 0xfffffafb
    181c:	33052501 	movwcc	r2, #21761	@ 0x5501
    1820:	03052206 	movweq	r2, #20998	@ 0x5206
    1824:	03090513 	movweq	r0, #38163	@ 0x9513
    1828:	03050172 	movweq	r0, #20850	@ 0x5172
    182c:	060f0513 			@ <UNDEFINED> instruction: 0x060f0513
    1830:	20190501 	andscs	r0, r9, r1, lsl #10
    1834:	05201f05 	streq	r1, [r0, #-3845]!	@ 0xfffff0fb
    1838:	200d0305 	andcs	r0, sp, r5, lsl #6
    183c:	3b060605 	blcc	183058 <__Stack_Size+0x182058>
    1840:	05140505 	ldreq	r0, [r4, #-1285]	@ 0xfffffafb
    1844:	05010611 	streq	r0, [r1, #-1553]	@ 0xfffff9ef
    1848:	05052016 	streq	r2, [r5, #-22]	@ 0xffffffea
    184c:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    1850:	0c050106 	stfeqs	f0, [r5], {6}
    1854:	06100520 	ldreq	r0, [r0], -r0, lsr #10
    1858:	0613053c 			@ <UNDEFINED> instruction: 0x0613053c
    185c:	2e180501 	cfmul32cs	mvfx0, mvfx8, mvfx1
    1860:	14010520 	strne	r0, [r1], #-1312	@ 0xfffffae0
    1864:	03061d05 	movweq	r1, #27909	@ 0x6d05
    1868:	052000c2 	streq	r0, [r0, #-194]!	@ 0xffffff3e
    186c:	1d051303 	stcne	3, cr1, [r5, #-12]
    1870:	0d051106 	stfeqs	f1, [r5, #-24]	@ 0xffffffe8
    1874:	2e050521 	cfsh32cs	mvfx0, mvfx5, #17
    1878:	1a052f06 	bne	14d498 <__Stack_Size+0x14c498>
    187c:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1880:	2e062106 	adfcss	f2, f6, f6
    1884:	05170105 	ldreq	r0, [r7, #-261]	@ 0xfffffefb
    1888:	052e2905 	streq	r2, [lr, #-2309]!	@ 0xfffff6fb
    188c:	05130609 	ldreq	r0, [r3, #-1545]	@ 0xfffff9f7
    1890:	05010613 	streq	r0, [r1, #-1555]	@ 0xfffff9ed
    1894:	0505200b 	streq	r2, [r5, #-11]
    1898:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    189c:	017fa703 	cmneq	pc, r3, lsl #14
    18a0:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    18a4:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    18a8:	07053c19 	smladeq	r5, r9, ip, r3
    18ac:	2e00d803 	cdpcs	8, 0, cr13, cr0, cr3, {0}
    18b0:	02002605 	andeq	r2, r0, #5242880	@ 0x500000
    18b4:	2e060104 	adfcss	f0, f6, f4
    18b8:	02003305 	andeq	r3, r0, #335544320	@ 0x14000000
    18bc:	01060104 	tsteq	r6, r4, lsl #2
    18c0:	02003105 	andeq	r3, r0, #1073741825	@ 0x40000001
    18c4:	054a0104 	strbeq	r0, [sl, #-260]	@ 0xfffffefc
    18c8:	0c052301 	stceq	3, cr2, [r5], {1}
    18cc:	12051e06 	andne	r1, r5, #6, 28	@ 0x60
    18d0:	18050106 	stmdane	r5, {r1, r2, r8}
    18d4:	3e010520 	cfsh32cc	mvfx0, mvfx1, #16
    18d8:	00062d05 	andeq	r2, r6, r5, lsl #26
    18dc:	10680205 	rsbne	r0, r8, r5, lsl #4
    18e0:	06140800 	ldreq	r0, [r4], -r0, lsl #16
    18e4:	03052001 	movweq	r2, #20481	@ 0x5001
    18e8:	0f052106 	svceq	0x00052106
    18ec:	02002006 	andeq	r2, r0, #6
    18f0:	2e060104 	adfcss	f0, f6, f4
    18f4:	02000905 	andeq	r0, r0, #81920	@ 0x14000
    18f8:	00010104 	andeq	r0, r1, r4, lsl #2
    18fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1900:	2f010501 	svccs	0x00010501
    1904:	02000f05 	andeq	r0, r0, #5, 30
    1908:	1f060204 	svcne	0x00060204
    190c:	02040200 	andeq	r0, r4, #0, 4
    1910:	04020001 	streq	r0, [r2], #-1
    1914:	00010602 	andeq	r0, r1, r2, lsl #12
    1918:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    191c:	02040200 	andeq	r0, r4, #0, 4
    1920:	1b052e06 	blne	14d140 <__Stack_Size+0x14c140>
    1924:	94020500 	strls	r0, [r2], #-1280	@ 0xfffffb00
    1928:	15080010 	strne	r0, [r8, #-16]
    192c:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1930:	0511061b 	ldreq	r0, [r1, #-1563]	@ 0xfffff9e5
    1934:	02002f15 	andeq	r2, r0, #21, 30	@ 0x54
    1938:	2e060104 	adfcss	f0, f6, f4
    193c:	02001005 	andeq	r1, r0, #5
    1940:	05010104 	streq	r0, [r1, #-260]	@ 0xfffffefc
    1944:	0402000c 	streq	r0, [r2], #-12
    1948:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
    194c:	04020010 	streq	r0, [r2], #-16
    1950:	01052e01 	tsteq	r5, r1, lsl #28
    1954:	00150521 	andseq	r0, r5, r1, lsr #10
    1958:	06020402 	streq	r0, [r2], -r2, lsl #8
    195c:	0402001f 	streq	r0, [r2], #-31	@ 0xffffffe1
    1960:	02000102 	andeq	r0, r0, #-2147483648	@ 0x80000000
    1964:	01060204 	tsteq	r6, r4, lsl #4
    1968:	02040200 	andeq	r0, r4, #0, 4
    196c:	2c052e06 	stccs	14, cr2, [r5], {6}
    1970:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    1974:	15080010 	strne	r0, [r8, #-16]
    1978:	05200106 	streq	r0, [r0, #-262]!	@ 0xfffffefa
    197c:	05210603 	streq	r0, [r1, #-1539]!	@ 0xfffff9fd
    1980:	9a03060f 	bls	c31c4 <__Stack_Size+0xc21c4>
    1984:	052e017f 	streq	r0, [lr, #-383]!	@ 0xfffffe81
    1988:	e6030609 	str	r0, [r3], -r9, lsl #12
    198c:	01060100 	mrseq	r0, (UNDEF: 22)
    1990:	05320105 	ldreq	r0, [r2, #-261]!	@ 0xfffffefb
    1994:	04020022 	streq	r0, [r2], #-34	@ 0xffffffde
    1998:	051d0601 	ldreq	r0, [sp, #-1537]	@ 0xfffff9ff
    199c:	0402001c 	streq	r0, [r2], #-28	@ 0xffffffe4
    19a0:	09050101 	stmdbeq	r5, {r0, r8}
    19a4:	01040200 	mrseq	r0, R12_usr
    19a8:	017f9803 	cmneq	pc, r3, lsl #16
    19ac:	02000305 	andeq	r0, r0, #335544320	@ 0x14000000
    19b0:	05130104 	ldreq	r0, [r3, #-260]	@ 0xfffffefc
    19b4:	0402000f 	streq	r0, [r2], #-15
    19b8:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
    19bc:	04020019 	streq	r0, [r2], #-25	@ 0xffffffe7
    19c0:	1c052001 	stcne	0, cr2, [r5], {1}
    19c4:	01040200 	mrseq	r0, R12_usr
    19c8:	2000e703 	andcs	lr, r0, r3, lsl #14
    19cc:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    19d0:	01061105 	tsteq	r6, r5, lsl #2
    19d4:	2e3c0f05 	cdpcs	15, 3, cr0, cr12, cr5, {0}
    19d8:	00062805 	andeq	r2, r6, r5, lsl #16
    19dc:	10e80205 	rscne	r0, r8, r5, lsl #4
    19e0:	05160800 	ldreq	r0, [r6, #-2048]	@ 0xfffff800
    19e4:	28051303 	stmdacs	r5, {r0, r1, r8, r9, ip}
    19e8:	0f051106 	svceq	0x00051106
    19ec:	3c7f9403 	cfldrdcc	mvd9, [pc], #-12	@ 19e8 <__Stack_Size+0x9e8>
    19f0:	0309052e 	movweq	r0, #38190	@ 0x952e
    19f4:	060100ed 	streq	r0, [r1], -sp, ror #1
    19f8:	0501062e 	streq	r0, [r1, #-1582]	@ 0xfffff9d2
    19fc:	05260603 	streq	r0, [r6, #-1539]!	@ 0xfffff9fd
    1a00:	06010605 	streq	r0, [r1], -r5, lsl #12
    1a04:	0607052f 	streq	r0, [r7], -pc, lsr #10
    1a08:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1a0c:	06140520 	ldreq	r0, [r4], -r0, lsr #10
    1a10:	3c230513 	cfstr32cc	mvfx0, [r3], #-76	@ 0xffffffb4
    1a14:	051f1705 	ldreq	r1, [pc, #-1797]	@ 1317 <__Stack_Size+0x317>
    1a18:	32052123 	andcc	r2, r5, #-1073741816	@ 0xc0000008
    1a1c:	1f17052e 	svcne	0x0017052e
    1a20:	21060d05 	tstcs	r6, r5, lsl #26
    1a24:	05011c05 	streq	r1, [r1, #-3077]	@ 0xfffff3fb
    1a28:	3205012b 	andcc	r0, r5, #-1073741814	@ 0xc000000a
    1a2c:	01050106 	tsteq	r5, r6, lsl #2
    1a30:	00220522 	eoreq	r0, r2, r2, lsr #10
    1a34:	06010402 	streq	r0, [r1], -r2, lsl #8
    1a38:	05207703 	streq	r7, [r0, #-1795]!	@ 0xfffff8fd
    1a3c:	0402001c 	streq	r0, [r2], #-28	@ 0xffffffe4
    1a40:	09050101 	stmdbeq	r5, {r0, r8}
    1a44:	01040200 	mrseq	r0, R12_usr
    1a48:	017f9103 	cmneq	pc, r3, lsl #2
    1a4c:	02000305 	andeq	r0, r0, #335544320	@ 0x14000000
    1a50:	05130104 	ldreq	r0, [r3, #-260]	@ 0xfffffefc
    1a54:	0402000f 	streq	r0, [r2], #-15
    1a58:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
    1a5c:	04020019 	streq	r0, [r2], #-25	@ 0xffffffe7
    1a60:	1c052001 	stcne	0, cr2, [r5], {1}
    1a64:	01040200 	mrseq	r0, R12_usr
    1a68:	2000ee03 	andcs	lr, r0, r3, lsl #28
    1a6c:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    1a70:	01060e05 	tsteq	r6, r5, lsl #28
    1a74:	053c0c05 	ldreq	r0, [ip, #-3077]!	@ 0xfffff3fb
    1a78:	052f0605 	streq	r0, [pc, #-1541]!	@ 147b <__Stack_Size+0x47b>
    1a7c:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    1a80:	04020014 	streq	r0, [r2], #-20	@ 0xffffffec
    1a84:	02002e01 	andeq	r2, r0, #1, 28
    1a88:	04580104 	ldrbeq	r0, [r8], #-260	@ 0xfffffefc
    1a8c:	06480501 	strbeq	r0, [r8], -r1, lsl #10
    1a90:	40020500 	andmi	r0, r2, r0, lsl #10
    1a94:	03080011 	movweq	r0, #32785	@ 0x8011
    1a98:	05017efb 	streq	r7, [r1, #-3835]	@ 0xfffff105
    1a9c:	05051303 	streq	r1, [r5, #-771]	@ 0xfffffcfd
    1aa0:	59060106 	stmdbpl	r6, {r1, r2, r8}
    1aa4:	01060705 	tsteq	r6, r5, lsl #14
    1aa8:	0e053d06 	cdpeq	13, 0, cr3, cr5, cr6, {0}
    1aac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ab0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    1ab4:	060f0532 			@ <UNDEFINED> instruction: 0x060f0532
    1ab8:	05213d01 	streq	r3, [r1, #-3329]!	@ 0xfffff2ff
    1abc:	0f051d10 	svceq	0x00051d10
    1ac0:	0a052e23 	beq	14d354 <__Stack_Size+0x14c354>
    1ac4:	21010533 	tstcs	r1, r3, lsr r5
    1ac8:	68063505 	stmdavs	r6, {r0, r2, r8, sl, ip, sp}
    1acc:	01130305 	tsteq	r3, r5, lsl #6
    1ad0:	05166601 	ldreq	r6, [r6, #-1537]	@ 0xfffff9ff
    1ad4:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1ad8:	21062005 	tstcs	r6, r5
    1adc:	01060b05 	tsteq	r6, r5, lsl #22
    1ae0:	05201105 	streq	r1, [r0, #-261]!	@ 0xfffffefb
    1ae4:	053d0605 	ldreq	r0, [sp, #-1541]!	@ 0xfffff9fb
    1ae8:	0501060b 	streq	r0, [r1, #-1547]	@ 0xfffff9f5
    1aec:	05362011 	ldreq	r2, [r6, #-17]!	@ 0xffffffef
    1af0:	06052201 	streq	r2, [r5], -r1, lsl #4
    1af4:	206f0306 	rsbcs	r0, pc, r6, lsl #6
    1af8:	051a0905 	ldreq	r0, [sl, #-2309]	@ 0xfffff6fb
    1afc:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1b00:	0505200b 	streq	r2, [r5, #-11]
    1b04:	0b052f06 	bleq	14d724 <__Stack_Size+0x14c724>
    1b08:	11050106 	tstne	r5, r6, lsl #2
    1b0c:	06050520 	streq	r0, [r5], -r0, lsr #10
    1b10:	060b053d 			@ <UNDEFINED> instruction: 0x060b053d
    1b14:	20110501 	andscs	r0, r1, r1, lsl #10
    1b18:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
    1b1c:	01060b05 	tsteq	r6, r5, lsl #22
    1b20:	05201105 	streq	r1, [r0, #-261]!	@ 0xfffffefb
    1b24:	053d0609 	ldreq	r0, [sp, #-1545]!	@ 0xfffff9f7
    1b28:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1b2c:	0505200b 	streq	r2, [r5, #-11]
    1b30:	0b052f06 	bleq	14d750 <__Stack_Size+0x14c750>
    1b34:	11050106 	tstne	r5, r6, lsl #2
    1b38:	06050520 	streq	r0, [r5], -r0, lsr #10
    1b3c:	060b053d 			@ <UNDEFINED> instruction: 0x060b053d
    1b40:	20110501 	andscs	r0, r1, r1, lsl #10
    1b44:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
    1b48:	01060b05 	tsteq	r6, r5, lsl #22
    1b4c:	05201105 	streq	r1, [r0, #-261]!	@ 0xfffffefb
    1b50:	0586064f 	streq	r0, [r6, #1615]	@ 0x64f
    1b54:	4f051303 	svcmi	0x00051303
    1b58:	05051106 	streq	r1, [r5, #-262]	@ 0xfffffefa
    1b5c:	05590621 	ldrbeq	r0, [r9, #-1569]	@ 0xfffff9df
    1b60:	06010607 	streq	r0, [r1], -r7, lsl #12
    1b64:	0609053d 			@ <UNDEFINED> instruction: 0x0609053d
    1b68:	06070501 	streq	r0, [r7], -r1, lsl #10
    1b6c:	060e0521 	streq	r0, [lr], -r1, lsr #10
    1b70:	20090501 	andcs	r0, r9, r1, lsl #10
    1b74:	03042f06 	movweq	r2, #20230	@ 0x4f06
    1b78:	df031305 	svcle	0x00031305
    1b7c:	03050100 	movweq	r0, #20736	@ 0x5100
    1b80:	060a0513 			@ <UNDEFINED> instruction: 0x060a0513
    1b84:	042e2001 	strteq	r2, [lr], #-1
    1b88:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b8c:	017fa103 	cmneq	pc, r3, lsl #2
    1b90:	01061405 	tsteq	r6, r5, lsl #8
    1b94:	063c0b05 	ldrteq	r0, [ip], -r5, lsl #22
    1b98:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    1b9c:	03010538 	movweq	r0, #5432	@ 0x1538
    1ba0:	0d05201b 	stceq	0, cr2, [r5, #-108]	@ 0xffffff94
    1ba4:	206c0306 	rsbcs	r0, ip, r6, lsl #6
    1ba8:	01060f05 	tsteq	r6, r5, lsl #30
    1bac:	2f060905 	svccs	0x00060905
    1bb0:	13050304 	movwne	r0, #21252	@ 0x5304
    1bb4:	0100d903 	tsteq	r0, r3, lsl #18
    1bb8:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1bbc:	3c01060a 	stccc	6, cr0, [r1], {10}
    1bc0:	0501042e 	streq	r0, [r1, #-1070]	@ 0xfffffbd2
    1bc4:	a7030609 	strge	r0, [r3, -r9, lsl #12]
    1bc8:	1605017f 			@ <UNDEFINED> instruction: 0x1605017f
    1bcc:	0b050106 	bleq	141fec <__Stack_Size+0x140fec>
    1bd0:	052f062e 	streq	r0, [pc, #-1582]!	@ 15aa <__Stack_Size+0x5aa>
    1bd4:	05010613 	streq	r0, [r1, #-1555]	@ 0xfffff9ed
    1bd8:	013d060b 	teqeq	sp, fp, lsl #12
    1bdc:	11050404 	tstne	r5, r4, lsl #8
    1be0:	017f9b03 	cmneq	pc, r3, lsl #22
    1be4:	04011e05 	streq	r1, [r1], #-3589	@ 0xfffff1fb
    1be8:	030b0501 	movweq	r0, #46337	@ 0xb501
    1bec:	010100e9 	smlatteq	r1, r9, r0, r0
    1bf0:	11050404 	tstne	r5, r4, lsl #8
    1bf4:	017f9703 	cmneq	pc, r3, lsl #14
    1bf8:	05011e05 	streq	r1, [r1, #-3589]	@ 0xfffff1fb
    1bfc:	04010625 	streq	r0, [r1], #-1573	@ 0xfffff9db
    1c00:	030b0501 	movweq	r0, #46337	@ 0xb501
    1c04:	052e00e9 	streq	r0, [lr, #-233]!	@ 0xffffff17
    1c08:	0563060f 	strbeq	r0, [r3, #-1551]!	@ 0xfffff9f1
    1c0c:	0501061b 	streq	r0, [r1, #-1563]	@ 0xfffff9e5
    1c10:	0b052e11 	bleq	14d45c <__Stack_Size+0x14c45c>
    1c14:	13052f06 	movwne	r2, #24326	@ 0x5f06
    1c18:	0b050106 	bleq	142038 <__Stack_Size+0x141038>
    1c1c:	1f130521 	svcne	0x00130521
    1c20:	2f060b05 	svccs	0x00060b05
    1c24:	03060a05 	movweq	r0, #27141	@ 0x6a05
    1c28:	17053c0c 	strne	r3, [r5, -ip, lsl #24]
    1c2c:	02050006 	andeq	r0, r5, #6
    1c30:	08001268 	stmdaeq	r0, {r3, r5, r6, r9, ip}
    1c34:	05011f03 	streq	r1, [r1, #-3843]	@ 0xfffff0fd
    1c38:	01011303 	tsteq	r1, r3, lsl #6
    1c3c:	05010101 	streq	r0, [r1, #-257]	@ 0xfffffeff
    1c40:	051f0617 	ldreq	r0, [pc, #-1559]	@ 1631 <__Stack_Size+0x631>
    1c44:	20062103 	andcs	r2, r6, r3, lsl #2
    1c48:	01202e3c 			@ <UNDEFINED> instruction: 0x01202e3c
    1c4c:	01010101 	tsteq	r1, r1, lsl #2
    1c50:	20010101 	andcs	r0, r1, r1, lsl #2
    1c54:	27050504 	strcs	r0, [r5, -r4, lsl #10]
    1c58:	0ac60306 	beq	ff182878 <BootRAM+0xe0f3019>
    1c5c:	05010401 	streq	r0, [r1, #-1025]	@ 0xfffffbff
    1c60:	75ba0303 	ldrvc	r0, [sl, #771]!	@ 0x303
    1c64:	2e2e0620 	cfmadda32cs	mvax1, mvax0, mvfx14, mvfx0
    1c68:	01062006 	tsteq	r6, r6
    1c6c:	01010101 	tsteq	r1, r1, lsl #2
    1c70:	1d312006 	ldcne	0, cr2, [r1, #-24]!	@ 0xffffffe8
    1c74:	06013c06 	streq	r3, [r1], -r6, lsl #24
    1c78:	3c061d23 	stccc	13, cr1, [r6], {35}	@ 0x23
    1c7c:	01580101 	cmpeq	r8, r1, lsl #2
    1c80:	2020203c 	eorcs	r2, r0, ip, lsr r0
    1c84:	27050504 	strcs	r0, [r5, -r4, lsl #10]
    1c88:	0ac60306 	beq	ff1828a8 <BootRAM+0xe0f3049>
    1c8c:	05010401 	streq	r0, [r1, #-1025]	@ 0xfffffbff
    1c90:	75ba0303 	ldrvc	r0, [sl, #771]!	@ 0x303
    1c94:	06200620 	strteq	r0, [r0], -r0, lsr #12
    1c98:	20061d15 	andcs	r1, r6, r5, lsl sp
    1c9c:	05042e2e 	streq	r2, [r4, #-3630]	@ 0xfffff1d2
    1ca0:	c4031605 	strgt	r1, [r3], #-1541	@ 0xfffff9fb
    1ca4:	0305010a 	movweq	r0, #20746	@ 0x510a
    1ca8:	06270514 			@ <UNDEFINED> instruction: 0x06270514
    1cac:	01042001 	tsteq	r4, r1
    1cb0:	03060305 	movweq	r0, #25349	@ 0x6305
    1cb4:	140175ba 	strne	r7, [r1], #-1466	@ 0xfffffa46
    1cb8:	0b051306 	bleq	1468d8 <__Stack_Size+0x1458d8>
    1cbc:	0603051f 			@ <UNDEFINED> instruction: 0x0603051f
    1cc0:	68672f2f 	stmdavs	r7!, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1cc4:	05676767 	strbeq	r6, [r7, #-1895]!	@ 0xfffff899
    1cc8:	0501060c 	streq	r0, [r1, #-1548]	@ 0xfffff9f4
    1ccc:	28053d01 	stmdacs	r5, {r0, r8, sl, fp, ip, sp}
    1cd0:	9e3a0306 	cdpls	3, 3, cr0, cr10, cr6, {0}
    1cd4:	13140305 	tstne	r4, #335544320	@ 0x14000000
    1cd8:	01060705 	tsteq	r6, r5, lsl #14
    1cdc:	051d2805 	ldreq	r2, [sp, #-2053]	@ 0xfffff7fb
    1ce0:	05212307 	streq	r2, [r1, #-775]!	@ 0xfffffcf9
    1ce4:	1f2f1f05 	svcne	0x002f1f05
    1ce8:	2f060305 	svccs	0x00060305
    1cec:	01060505 	tsteq	r6, r5, lsl #10
    1cf0:	02001605 	andeq	r1, r0, #5242880	@ 0x500000
    1cf4:	20060104 	andcs	r0, r6, r4, lsl #2
    1cf8:	02001a05 	andeq	r1, r0, #20480	@ 0x5000
    1cfc:	01060104 	tsteq	r6, r4, lsl #2
    1d00:	01040200 	mrseq	r0, R12_usr
    1d04:	0021052e 	eoreq	r0, r1, lr, lsr #10
    1d08:	22010402 	andcs	r0, r1, #33554432	@ 0x2000000
    1d0c:	02001105 	andeq	r1, r0, #1073741825	@ 0x40000001
    1d10:	002d0104 	eoreq	r0, sp, r4, lsl #2
    1d14:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1d18:	21060505 	tstcs	r6, r5, lsl #10
    1d1c:	01060705 	tsteq	r6, r5, lsl #14
    1d20:	2e061605 	cfmadd32cs	mvax0, mvfx1, mvfx6, mvfx5
    1d24:	01062105 	tsteq	r6, r5, lsl #2
    1d28:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	@ 0xffffffec
    1d2c:	01060b05 	tsteq	r6, r5, lsl #22
    1d30:	052e0705 	streq	r0, [lr, #-1797]!	@ 0xfffff8fb
    1d34:	052e0616 	streq	r0, [lr, #-1558]!	@ 0xfffff9ea
    1d38:	0501061a 	streq	r0, [r1, #-1562]	@ 0xfffff9e6
    1d3c:	132f0605 			@ <UNDEFINED> instruction: 0x132f0605
    1d40:	11051413 	tstne	r5, r3, lsl r4
    1d44:	01040200 	mrseq	r0, R12_usr
    1d48:	00017903 	andeq	r7, r1, r3, lsl #18
    1d4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1d50:	0603053c 			@ <UNDEFINED> instruction: 0x0603053c
    1d54:	05010903 	streq	r0, [r1, #-2307]	@ 0xfffff6fd
    1d58:	05010605 	streq	r0, [r1, #-1541]	@ 0xfffff9fb
    1d5c:	2c052e18 	stccs	14, cr2, [r5], {24}
    1d60:	2f05053c 	svccs	0x0005053c
    1d64:	05201905 	streq	r1, [r0, #-2309]!	@ 0xfffff6fb
    1d68:	18053c2d 	stmdane	r5, {r0, r2, r3, r5, sl, fp, ip, sp}
    1d6c:	05013b06 	streq	r3, [r1, #-2822]	@ 0xfffff4fa
    1d70:	2001012c 	andcs	r0, r1, ip, lsr #2
    1d74:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1d78:	05010119 	streq	r0, [r1, #-281]	@ 0xfffffee7
    1d7c:	2001012d 	andcs	r0, r1, sp, lsr #2
    1d80:	13060105 	movwne	r0, #24837	@ 0x6105
    1d84:	03060505 	movweq	r0, #25861	@ 0x6505
    1d88:	07052078 	smlsdxeq	r5, r8, r0, r2
    1d8c:	16050106 	strne	r0, [r5], -r6, lsl #2
    1d90:	1a052e06 	bne	14d5b0 <__Stack_Size+0x14c5b0>
    1d94:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1d98:	13132f06 	tstne	r3, #6, 30
    1d9c:	07051d13 	smladeq	r5, r3, sp, r1
    1da0:	16050106 	strne	r0, [r5], -r6, lsl #2
    1da4:	01040200 	mrseq	r0, R12_usr
    1da8:	1a052e06 	bne	14d5c8 <__Stack_Size+0x14c5c8>
    1dac:	01040200 	mrseq	r0, R12_usr
    1db0:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1db4:	01040200 	mrseq	r0, R12_usr
    1db8:	02002f06 	andeq	r2, r0, #6, 30
    1dbc:	00130104 	andseq	r0, r3, r4, lsl #2
    1dc0:	13010402 	movwne	r0, #5122	@ 0x1402
    1dc4:	0607051e 			@ <UNDEFINED> instruction: 0x0607051e
    1dc8:	00160501 	andseq	r0, r6, r1, lsl #10
    1dcc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dd0:	001a052e 	andseq	r0, sl, lr, lsr #10
    1dd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dd8:	00050501 	andeq	r0, r5, r1, lsl #10
    1ddc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1de0:	0402002f 	streq	r0, [r2], #-47	@ 0xffffffd1
    1de4:	051f1301 	ldreq	r1, [pc, #-769]	@ 1aeb <__Stack_Size+0xaeb>
    1de8:	05010607 	streq	r0, [r1, #-1543]	@ 0xfffff9f9
    1dec:	04020016 	streq	r0, [r2], #-22	@ 0xffffffea
    1df0:	052e0601 	streq	r0, [lr, #-1537]!	@ 0xfffff9ff
    1df4:	0402001a 	streq	r0, [r2], #-26	@ 0xffffffe6
    1df8:	05010601 	streq	r0, [r1, #-1537]	@ 0xfffff9ff
    1dfc:	04020005 	streq	r0, [r2], #-5
    1e00:	202f0601 	eorcs	r0, pc, r1, lsl #12
    1e04:	01060705 	tsteq	r6, r5, lsl #14
    1e08:	02001605 	andeq	r1, r0, #5242880	@ 0x500000
    1e0c:	2e060104 	adfcss	f0, f6, f4
    1e10:	02001a05 	andeq	r1, r0, #20480	@ 0x5000
    1e14:	01060104 	tsteq	r6, r4, lsl #2
    1e18:	02001905 	andeq	r1, r0, #81920	@ 0x14000
    1e1c:	03060104 	movweq	r0, #24836	@ 0x6104
    1e20:	17052e79 	smlsdxne	r5, r9, lr, r2
    1e24:	c4020500 	strgt	r0, [r2], #-1280	@ 0xfffffb00
    1e28:	03080013 	movweq	r0, #32787	@ 0x8013
    1e2c:	03050143 	movweq	r0, #20803	@ 0x5143
    1e30:	06170513 			@ <UNDEFINED> instruction: 0x06170513
    1e34:	21060511 	tstcs	r6, r1, lsl r5
    1e38:	051f1705 	ldreq	r1, [pc, #-1797]	@ 173b <__Stack_Size+0x73b>
    1e3c:	03052105 	movweq	r2, #20741	@ 0x5105
    1e40:	14134b06 	ldrne	r4, [r3], #-2822	@ 0xfffff4fa
    1e44:	09050204 	stmdbeq	r5, {r2, r9}
    1e48:	017fa103 	cmneq	pc, r3, lsl #2
    1e4c:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1e50:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1e54:	042e2019 	strteq	r2, [lr], #-25	@ 0xffffffe7
    1e58:	06030501 	streq	r0, [r3], -r1, lsl #10
    1e5c:	0100df03 	tsteq	r0, r3, lsl #30
    1e60:	01060505 	tsteq	r6, r5, lsl #10
    1e64:	0521062e 	streq	r0, [r1, #-1582]!	@ 0xfffff9d2
    1e68:	05140611 	ldreq	r0, [r4, #-1553]	@ 0xfffff9ef
    1e6c:	05052c07 	streq	r2, [r5, #-3079]	@ 0xfffff3f9
    1e70:	07053e06 	streq	r3, [r5, -r6, lsl #28]
    1e74:	2f062006 	svccs	0x00062006
    1e78:	01060a05 	tsteq	r6, r5, lsl #20
    1e7c:	06200905 	strteq	r0, [r0], -r5, lsl #18
    1e80:	03044b4b 	movweq	r4, #19275	@ 0x4b4b
    1e84:	05131405 	ldreq	r1, [r3, #-1029]	@ 0xfffffbfb
    1e88:	3c061303 	stccc	3, cr1, [r6], {3}
    1e8c:	0601042e 	streq	r0, [r1], -lr, lsr #8
    1e90:	05010a03 	streq	r0, [r1, #-2563]	@ 0xfffff5fd
    1e94:	7fbe030d 	svcvc	0x00be030d
    1e98:	13030501 	movwne	r0, #13569	@ 0x3501
    1e9c:	0e051413 	cfmvdlreq	mvd5, r1
    1ea0:	05050106 	streq	r0, [r5, #-262]	@ 0xfffffefa
    1ea4:	132f063c 			@ <UNDEFINED> instruction: 0x132f063c
    1ea8:	01060805 	tsteq	r6, r5, lsl #16
    1eac:	05200705 	streq	r0, [r0, #-1797]!	@ 0xfffff8fb
    1eb0:	04580625 	ldrbeq	r0, [r8], #-1573	@ 0xfffff9db
    1eb4:	03130503 	tsteq	r3, #12582912	@ 0xc00000
    1eb8:	0305013e 	movweq	r0, #20798	@ 0x513e
    1ebc:	060a0513 			@ <UNDEFINED> instruction: 0x060a0513
    1ec0:	042e2e01 	strteq	r2, [lr], #-3585	@ 0xfffff1ff
    1ec4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ec8:	05014203 	streq	r4, [r1, #-515]	@ 0xfffffdfd
    1ecc:	05010609 	streq	r0, [r1, #-1545]	@ 0xfffff9f7
    1ed0:	0b052007 	bleq	149ef4 <__Stack_Size+0x148ef4>
    1ed4:	06050556 			@ <UNDEFINED> instruction: 0x06050556
    1ed8:	15030527 	strne	r0, [r3, #-1319]	@ 0xfffffad9
    1edc:	01060e05 	tsteq	r6, r5, lsl #28
    1ee0:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    1ee4:	0502042f 	streq	r0, [r2, #-1071]	@ 0xfffffbd1
    1ee8:	01400309 	cmpeq	r0, r9, lsl #6
    1eec:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1ef0:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1ef4:	1f052e19 	svcne	0x00052e19
    1ef8:	0501042e 	streq	r0, [r1, #-1070]	@ 0xfffffbd2
    1efc:	203f0309 	eorscs	r0, pc, r9, lsl #6
    1f00:	063c0705 	ldrteq	r0, [ip], -r5, lsl #14
    1f04:	0503042f 	streq	r0, [r3, #-1071]	@ 0xfffffbd1
    1f08:	01330313 	teqeq	r3, r3, lsl r3
    1f0c:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1f10:	2001060a 	andcs	r0, r1, sl, lsl #12
    1f14:	01043c20 	tsteq	r4, r0, lsr #24
    1f18:	03060705 	movweq	r0, #26373	@ 0x6705
    1f1c:	2e06014d 	adfcssm	f0, f6, #5.0
    1f20:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1f24:	05013303 	streq	r3, [r1, #-771]	@ 0xfffffcfd
    1f28:	0501060f 	streq	r0, [r1, #-1551]	@ 0xfffff9f1
    1f2c:	21062e05 	tstcs	r6, r5, lsl #28
    1f30:	11050404 	tstne	r5, r4, lsl #8
    1f34:	017ec303 	cmneq	lr, r3, lsl #6
    1f38:	05011e05 	streq	r1, [r1, #-3589]	@ 0xfffff1fb
    1f3c:	04010625 	streq	r0, [r1], #-1573	@ 0xfffff9db
    1f40:	03160501 	tsteq	r6, #4194304	@ 0x400000
    1f44:	052e01bd 	streq	r0, [lr, #-445]!	@ 0xfffffe43
    1f48:	2f062e07 	svccs	0x00062e07
    1f4c:	01060f05 	tsteq	r6, r5, lsl #30
    1f50:	05210705 	streq	r0, [r1, #-1797]!	@ 0xfffff8fb
    1f54:	07051f0f 	streq	r1, [r5, -pc, lsl #30]
    1f58:	03052f06 	movweq	r2, #24326	@ 0x5f06
    1f5c:	060f0533 			@ <UNDEFINED> instruction: 0x060f0533
    1f60:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    1f64:	2e012f06 	cdpcs	15, 0, cr2, cr1, cr6, {0}
    1f68:	01011305 	tsteq	r1, r5, lsl #6
    1f6c:	01053206 	tsteq	r5, r6, lsl #4
    1f70:	060b0522 	streq	r0, [fp], -r2, lsr #10
    1f74:	052e6403 	streq	r6, [lr, #-1027]!	@ 0xfffffbfd
    1f78:	05010617 	streq	r0, [r1, #-1559]	@ 0xfffff9e9
    1f7c:	07052e0d 	streq	r2, [r5, -sp, lsl #28]
    1f80:	0a052f06 	beq	14dba0 <__Stack_Size+0x14cba0>
    1f84:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1f88:	4b4b0620 	blmi	12c3810 <__Stack_Size+0x12c2810>
    1f8c:	14050304 	strne	r0, [r5], #-772	@ 0xfffffcfc
    1f90:	1303050e 	movwne	r0, #13582	@ 0x350e
    1f94:	01044a06 	tsteq	r4, r6, lsl #20
    1f98:	18060705 	stmdane	r6, {r0, r2, r8, r9, sl}
    1f9c:	4b030505 	blmi	c33b8 <__Stack_Size+0xc23b8>
    1fa0:	08051358 	stmdaeq	r5, {r3, r4, r6, r8, r9, ip}
    1fa4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1fa8:	06250520 	strteq	r0, [r5], -r0, lsr #10
    1fac:	05030458 	streq	r0, [r3, #-1112]	@ 0xfffffba8
    1fb0:	013a0313 	teqeq	sl, r3, lsl r3
    1fb4:	05130305 	ldreq	r0, [r3, #-773]	@ 0xfffffcfb
    1fb8:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
    1fbc:	0501042e 	streq	r0, [r1, #-1070]	@ 0xfffffbd2
    1fc0:	46030605 	strmi	r0, [r3], -r5, lsl #12
    1fc4:	06090501 	streq	r0, [r9], -r1, lsl #10
    1fc8:	20070501 	andcs	r0, r7, r1, lsl #10
    1fcc:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    1fd0:	05040401 	streq	r0, [r4, #-1025]	@ 0xfffffbff
    1fd4:	7efd0311 	mrcvc	3, 7, r0, cr13, cr1, {0}
    1fd8:	011e0501 	tsteq	lr, r1, lsl #10
    1fdc:	01062505 	tsteq	r6, r5, lsl #10
    1fe0:	0b050104 	bleq	1423f8 <__Stack_Size+0x1413f8>
    1fe4:	20018003 	andcs	r8, r1, r3
    1fe8:	25050404 	strcs	r0, [r5, #-1028]	@ 0xfffffbfc
    1fec:	207f8003 	rsbscs	r8, pc, r3
    1ff0:	05050104 	streq	r0, [r5, #-260]	@ 0xfffffefc
    1ff4:	20018303 	andcs	r8, r1, r3, lsl #6
    1ff8:	66090306 	strvs	r0, [r9], -r6, lsl #6
    1ffc:	13050304 	movwne	r0, #21252	@ 0x5304
    2000:	05012f03 	streq	r2, [r1, #-3843]	@ 0xfffff0fd
    2004:	0a051303 	beq	146c18 <__Stack_Size+0x145c18>
    2008:	20200106 	eorcs	r0, r0, r6, lsl #2
    200c:	0104202e 	tsteq	r4, lr, lsr #32
    2010:	03060505 	movweq	r0, #25861	@ 0x6505
    2014:	20060151 	andcs	r0, r6, r1, asr r1
    2018:	0905202e 	stmdbeq	r5, {r1, r2, r3, r5, sp}
    201c:	01390306 	teqeq	r9, r6, lsl #6
    2020:	01061505 	tsteq	r6, r5, lsl #10
    2024:	052e0b05 	streq	r0, [lr, #-2821]!	@ 0xfffff4fb
    2028:	20063d05 	andcs	r3, r6, r5, lsl #26
    202c:	13050101 	movwne	r0, #20737	@ 0x5101
    2030:	05050101 	streq	r0, [r5, #-257]	@ 0xfffffeff
    2034:	0501013e 	streq	r0, [r1, #-318]	@ 0xfffffec2
    2038:	02010113 	andeq	r0, r1, #-1073741820	@ 0xc0000004
    203c:	0101000c 	tsteq	r1, ip

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	08000120 	stmdaeq	r0, {r5, r8}
  1c:	000000ac 	andeq	r0, r0, ip, lsr #1
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
  2c:	00000002 	andeq	r0, r0, r2
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	080001ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8}
  3c:	00000002 	andeq	r0, r0, r2
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
  4c:	0000000a 	andeq	r0, r0, sl
  50:	00000014 	andeq	r0, r0, r4, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
  5c:	00000094 	muleq	r0, r4, r0
  60:	83080e41 	movwhi	r0, #36417	@ 0x8e41
  64:	00018e02 	andeq	r8, r1, r2, lsl #28
  68:	0000000c 	andeq	r0, r0, ip
  6c:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
  70:	7c020001 	stcvc	0, cr0, [r2], {1}
  74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  78:	0000000c 	andeq	r0, r0, ip
  7c:	00000068 	andeq	r0, r0, r8, rrx
  80:	080001dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8}
  84:	00000002 	andeq	r0, r0, r2
  88:	0000000c 	andeq	r0, r0, ip
  8c:	00000068 	andeq	r0, r0, r8, rrx
  90:	080001de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8}
  94:	00000002 	andeq	r0, r0, r2
  98:	0000000c 	andeq	r0, r0, ip
  9c:	00000068 	andeq	r0, r0, r8, rrx
  a0:	080001e0 	stmdaeq	r0, {r5, r6, r7, r8}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	0000000c 	andeq	r0, r0, ip
  ac:	00000068 	andeq	r0, r0, r8, rrx
  b0:	080001e2 	stmdaeq	r0, {r1, r5, r6, r7, r8}
  b4:	00000002 	andeq	r0, r0, r2
  b8:	0000000c 	andeq	r0, r0, ip
  bc:	00000068 	andeq	r0, r0, r8, rrx
  c0:	080001e4 	stmdaeq	r0, {r2, r5, r6, r7, r8}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	0000000c 	andeq	r0, r0, ip
  cc:	00000068 	andeq	r0, r0, r8, rrx
  d0:	080001e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8}
  d4:	00000004 	andeq	r0, r0, r4
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	00000068 	andeq	r0, r0, r8, rrx
  e0:	080001ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8}
  e4:	00000004 	andeq	r0, r0, r4
  e8:	0000000c 	andeq	r0, r0, ip
  ec:	00000068 	andeq	r0, r0, r8, rrx
  f0:	080001ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8}
  f4:	000000aa 	andeq	r0, r0, sl, lsr #1
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000068 	andeq	r0, r0, r8, rrx
 100:	08000298 	stmdaeq	r0, {r3, r4, r7, r9}
 104:	00000104 	andeq	r0, r0, r4, lsl #2
 108:	84140e41 	ldrhi	r0, [r4], #-3649	@ 0xfffff1bf
 10c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 110:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 114:	00000001 	andeq	r0, r0, r1
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000068 	andeq	r0, r0, r8, rrx
 120:	0800039c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9}
 124:	00000144 	andeq	r0, r0, r4, asr #2
 128:	84140e43 	ldrhi	r0, [r4], #-3651	@ 0xfffff1bd
 12c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 130:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 134:	00000001 	andeq	r0, r0, r1
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
 13c:	00000068 	andeq	r0, r0, r8, rrx
 140:	080004e0 	stmdaeq	r0, {r5, r6, r7, sl}
 144:	00000148 	andeq	r0, r0, r8, asr #2
 148:	84180e42 	ldrhi	r0, [r8], #-3650	@ 0xfffff1be
 14c:	86058506 	strhi	r8, [r5], -r6, lsl #10
 150:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 154:	00018e02 	andeq	r8, r1, r2, lsl #28
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	00000068 	andeq	r0, r0, r8, rrx
 160:	08000628 	stmdaeq	r0, {r3, r5, r9, sl}
 164:	00000054 	andeq	r0, r0, r4, asr r0
 168:	84140e41 	ldrhi	r0, [r4], #-3649	@ 0xfffff1bf
 16c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 170:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 174:	00000001 	andeq	r0, r0, r1
 178:	00000018 	andeq	r0, r0, r8, lsl r0
 17c:	00000068 	andeq	r0, r0, r8, rrx
 180:	0800067c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl}
 184:	00000038 	andeq	r0, r0, r8, lsr r0
 188:	83100e41 	tsthi	r0, #1040	@ 0x410
 18c:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 190:	00018e02 	andeq	r8, r1, r2, lsl #28
 194:	00000018 	andeq	r0, r0, r8, lsl r0
 198:	00000068 	andeq	r0, r0, r8, rrx
 19c:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
 1a0:	0000005c 	andeq	r0, r0, ip, asr r0
 1a4:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
 1a8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000028 	andeq	r0, r0, r8, lsr #32
 1b4:	00000068 	andeq	r0, r0, r8, rrx
 1b8:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
 1bc:	00000164 	andeq	r0, r0, r4, ror #2
 1c0:	84180e41 	ldrhi	r0, [r8], #-3649	@ 0xfffff1bf
 1c4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 1c8:	0e0a5101 	adfeqe	f5, f2, f1
 1cc:	5d0b410c 	stfpls	f4, [fp, #-48]	@ 0xffffffd0
 1d0:	420c0e0a 	andmi	r0, ip, #10, 28	@ 0xa0
 1d4:	0ec4c5ce 	cdpeq	5, 12, cr12, cr4, cr14, {6}
 1d8:	000b4200 	andeq	r4, fp, r0, lsl #4
 1dc:	0000000c 	andeq	r0, r0, ip
 1e0:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 1e4:	7c020001 	stcvc	0, cr0, [r2], {1}
 1e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1ec:	00000018 	andeq	r0, r0, r8, lsl r0
 1f0:	000001dc 	ldrdeq	r0, [r0], -ip
 1f4:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 1f8:	00000048 	andeq	r0, r0, r8, asr #32
 1fc:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 200:	86038504 	strhi	r8, [r3], -r4, lsl #10
 204:	00018e02 	andeq	r8, r1, r2, lsl #28
 208:	0000000c 	andeq	r0, r0, ip
 20c:	000001dc 	ldrdeq	r0, [r0], -ip
 210:	080008bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp}
 214:	00000018 	andeq	r0, r0, r8, lsl r0
 218:	0000000c 	andeq	r0, r0, ip
 21c:	000001dc 	ldrdeq	r0, [r0], -ip
 220:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
 224:	00000018 	andeq	r0, r0, r8, lsl r0
 228:	0000000c 	andeq	r0, r0, ip
 22c:	000001dc 	ldrdeq	r0, [r0], -ip
 230:	080008ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp}
 234:	00000002 	andeq	r0, r0, r2
 238:	00000014 	andeq	r0, r0, r4, lsl r0
 23c:	000001dc 	ldrdeq	r0, [r0], -ip
 240:	080008ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, fp}
 244:	000000ae 	andeq	r0, r0, lr, lsr #1
 248:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 24c:	00018e02 	andeq	r8, r1, r2, lsl #28
 250:	0000000c 	andeq	r0, r0, ip
 254:	000001dc 	ldrdeq	r0, [r0], -ip
 258:	0800099c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp}
 25c:	00000070 	andeq	r0, r0, r0, ror r0
 260:	0000000c 	andeq	r0, r0, ip
 264:	000001dc 	ldrdeq	r0, [r0], -ip
 268:	08000a0c 	stmdaeq	r0, {r2, r3, r9, fp}
 26c:	00000048 	andeq	r0, r0, r8, asr #32
 270:	00000014 	andeq	r0, r0, r4, lsl r0
 274:	000001dc 	ldrdeq	r0, [r0], -ip
 278:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 27c:	00000190 	muleq	r0, r0, r1
 280:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 284:	00018e02 	andeq	r8, r1, r2, lsl #28
 288:	00000014 	andeq	r0, r0, r4, lsl r0
 28c:	000001dc 	ldrdeq	r0, [r0], -ip
 290:	08000be4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, fp}
 294:	00000148 	andeq	r0, r0, r8, asr #2
 298:	84080e42 	strhi	r0, [r8], #-3650	@ 0xfffff1be
 29c:	00018e02 	andeq	r8, r1, r2, lsl #28
 2a0:	0000000c 	andeq	r0, r0, ip
 2a4:	000001dc 	ldrdeq	r0, [r0], -ip
 2a8:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 2ac:	00000028 	andeq	r0, r0, r8, lsr #32
 2b0:	0000000c 	andeq	r0, r0, ip
 2b4:	000001dc 	ldrdeq	r0, [r0], -ip
 2b8:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
 2bc:	00000090 	muleq	r0, r0, r0
 2c0:	00000014 	andeq	r0, r0, r4, lsl r0
 2c4:	000001dc 	ldrdeq	r0, [r0], -ip
 2c8:	08000de4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, fp}
 2cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2d0:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 2d4:	00018e02 	andeq	r8, r1, r2, lsl #28
 2d8:	00000018 	andeq	r0, r0, r8, lsl r0
 2dc:	000001dc 	ldrdeq	r0, [r0], -ip
 2e0:	08000e00 	stmdaeq	r0, {r9, sl, fp}
 2e4:	00000024 	andeq	r0, r0, r4, lsr #32
 2e8:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 2ec:	86038504 	strhi	r8, [r3], -r4, lsl #10
 2f0:	00018e02 	andeq	r8, r1, r2, lsl #28
 2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 2f8:	000001dc 	ldrdeq	r0, [r0], -ip
 2fc:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
 300:	00000140 	andeq	r0, r0, r0, asr #2
 304:	83080e41 	movwhi	r0, #36417	@ 0x8e41
 308:	02018e02 	andeq	r8, r1, #2, 28
 30c:	0ec3ce92 	mcreq	14, 6, ip, cr3, cr2, {4}
 310:	00000000 	andeq	r0, r0, r0
 314:	00000018 	andeq	r0, r0, r8, lsl r0
 318:	000001dc 	ldrdeq	r0, [r0], -ip
 31c:	08000f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp}
 320:	00000048 	andeq	r0, r0, r8, asr #32
 324:	83080e41 	movwhi	r0, #36417	@ 0x8e41
 328:	5b018e02 	blpl	63b38 <__Stack_Size+0x62b38>
 32c:	000ec3ce 	andeq	ip, lr, lr, asr #7
 330:	0000000c 	andeq	r0, r0, ip
 334:	000001dc 	ldrdeq	r0, [r0], -ip
 338:	08000fac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, fp}
 33c:	00000004 	andeq	r0, r0, r4
 340:	0000000c 	andeq	r0, r0, ip
 344:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 348:	7c020001 	stcvc	0, cr0, [r2], {1}
 34c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 350:	0000000c 	andeq	r0, r0, ip
 354:	00000340 	andeq	r0, r0, r0, asr #6
 358:	08000fb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, fp}
 35c:	0000000e 	andeq	r0, r0, lr
 360:	0000000c 	andeq	r0, r0, ip
 364:	00000340 	andeq	r0, r0, r0, asr #6
 368:	08000fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp}
 36c:	0000000e 	andeq	r0, r0, lr
 370:	0000000c 	andeq	r0, r0, ip
 374:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 378:	7c020001 	stcvc	0, cr0, [r2], {1}
 37c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 380:	0000000c 	andeq	r0, r0, ip
 384:	00000370 	andeq	r0, r0, r0, ror r3
 388:	08000fcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, fp}
 38c:	0000000a 	andeq	r0, r0, sl
 390:	0000000c 	andeq	r0, r0, ip
 394:	00000370 	andeq	r0, r0, r0, ror r3
 398:	08000fd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sl, fp}
 39c:	00000026 	andeq	r0, r0, r6, lsr #32
 3a0:	0000000c 	andeq	r0, r0, ip
 3a4:	00000370 	andeq	r0, r0, r0, ror r3
 3a8:	08000ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 3ac:	00000022 	andeq	r0, r0, r2, lsr #32
 3b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3b4:	00000370 	andeq	r0, r0, r0, ror r3
 3b8:	0800101e 	stmdaeq	r0, {r1, r2, r3, r4, ip}
 3bc:	0000004a 	andeq	r0, r0, sl, asr #32
 3c0:	84080e41 	strhi	r0, [r8], #-3649	@ 0xfffff1bf
 3c4:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
 3c8:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 3cc:	000b4200 	andeq	r4, fp, r0, lsl #4
 3d0:	00000018 	andeq	r0, r0, r8, lsl r0
 3d4:	00000370 	andeq	r0, r0, r0, ror r3
 3d8:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
 3dc:	0000002c 	andeq	r0, r0, ip, lsr #32
 3e0:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 3e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 3e8:	00018e02 	andeq	r8, r1, r2, lsl #28
 3ec:	00000018 	andeq	r0, r0, r8, lsl r0
 3f0:	00000370 	andeq	r0, r0, r0, ror r3
 3f4:	08001094 	stmdaeq	r0, {r2, r4, r7, ip}
 3f8:	00000028 	andeq	r0, r0, r8, lsr #32
 3fc:	83100e41 	tsthi	r0, #1040	@ 0x410
 400:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 404:	00018e02 	andeq	r8, r1, r2, lsl #28
 408:	00000018 	andeq	r0, r0, r8, lsl r0
 40c:	00000370 	andeq	r0, r0, r0, ror r3
 410:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
 414:	0000002c 	andeq	r0, r0, ip, lsr #32
 418:	84100e41 	ldrhi	r0, [r0], #-3649	@ 0xfffff1bf
 41c:	86038504 	strhi	r8, [r3], -r4, lsl #10
 420:	00018e02 	andeq	r8, r1, r2, lsl #28
 424:	0000001c 	andeq	r0, r0, ip, lsl r0
 428:	00000370 	andeq	r0, r0, r0, ror r3
 42c:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
 430:	00000058 	andeq	r0, r0, r8, asr r0
 434:	83180e41 	tsthi	r8, #1040	@ 0x410
 438:	85058406 	strhi	r8, [r5, #-1030]	@ 0xfffffbfa
 43c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 440:	00018e02 	andeq	r8, r1, r2, lsl #28
 444:	0000000c 	andeq	r0, r0, ip
 448:	00000370 	andeq	r0, r0, r0, ror r3
 44c:	08001140 	stmdaeq	r0, {r6, r8, ip}
 450:	00000038 	andeq	r0, r0, r8, lsr r0
 454:	0000000c 	andeq	r0, r0, ip
 458:	00000370 	andeq	r0, r0, r0, ror r3
 45c:	08001178 	stmdaeq	r0, {r3, r4, r5, r6, r8, ip}
 460:	00000068 	andeq	r0, r0, r8, rrx
 464:	00000018 	andeq	r0, r0, r8, lsl r0
 468:	00000370 	andeq	r0, r0, r0, ror r3
 46c:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
 470:	00000088 	andeq	r0, r0, r8, lsl #1
 474:	83100e41 	tsthi	r0, #1040	@ 0x410
 478:	85038404 	strhi	r8, [r3, #-1028]	@ 0xfffffbfc
 47c:	00018e02 	andeq	r8, r1, r2, lsl #28
 480:	00000018 	andeq	r0, r0, r8, lsl r0
 484:	00000370 	andeq	r0, r0, r0, ror r3
 488:	08001268 	stmdaeq	r0, {r3, r5, r6, r9, ip}
 48c:	000000c0 	andeq	r0, r0, r0, asr #1
 490:	84100e42 	ldrhi	r0, [r0], #-3650	@ 0xfffff1be
 494:	86038504 	strhi	r8, [r3], -r4, lsl #10
 498:	00018e02 	andeq	r8, r1, r2, lsl #28
 49c:	00000018 	andeq	r0, r0, r8, lsl r0
 4a0:	00000370 	andeq	r0, r0, r0, ror r3
 4a4:	08001328 	stmdaeq	r0, {r3, r5, r8, r9, ip}
 4a8:	0000009c 	muleq	r0, ip, r0
 4ac:	84100e42 	ldrhi	r0, [r0], #-3650	@ 0xfffff1be
 4b0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 4b4:	00018e02 	andeq	r8, r1, r2, lsl #28
 4b8:	00000020 	andeq	r0, r0, r0, lsr #32
 4bc:	00000370 	andeq	r0, r0, r0, ror r3
 4c0:	080013c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, ip}
 4c4:	00000170 	andeq	r0, r0, r0, ror r1
 4c8:	840c0e41 	strhi	r0, [ip], #-3649	@ 0xfffff1bf
 4cc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 4d0:	500e4201 	andpl	r4, lr, r1, lsl #4
 4d4:	0e0a6702 	cdpeq	7, 0, cr6, cr10, cr2, {0}
 4d8:	000b410c 	andeq	r4, fp, ip, lsl #2

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	32425041 	subcc	r5, r2, #65	@ 0x41
   4:	00524e45 	subseq	r4, r2, r5, asr #28
   8:	52434442 	subpl	r4, r3, #1107296256	@ 0x42000000
   c:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
  10:	4e470052 	mcrmi	0, 2, r0, cr7, cr2, {2}
  14:	31432055 	qdaddcc	r2, r5, r3
  18:	32312037 	eorscc	r2, r1, #55	@ 0x37
  1c:	312e322e 			@ <UNDEFINED> instruction: 0x312e322e
  20:	32303220 	eorscc	r3, r0, #32, 4
  24:	30323132 	eorscc	r3, r2, r2, lsr r1
  28:	6d2d2035 	stcvs	0, cr2, [sp, #-212]!	@ 0xffffff2c
  2c:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	@ 0xfffffe30
  30:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	@ 0xfffffe78
  34:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	@ 0xfffffe74
  38:	74726f63 	ldrbtvc	r6, [r2], #-3939	@ 0xfffff09d
  3c:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	@ 0xfffffe6c
  40:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	@ 0xffffff34
  44:	616f6c66 	cmnvs	pc, r6, ror #24
  48:	62612d74 	rsbvs	r2, r1, #116, 26	@ 0x1d00
  4c:	6f733d69 	svcvs	0x00733d69
  50:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	@ 0xfffffe68
  54:	6372616d 	cmnvs	r2, #1073741851	@ 0x4000001b
  58:	72613d68 	rsbvc	r3, r1, #104, 26	@ 0x1a00
  5c:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	@ 0xfffffe4c
  60:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  64:	72617764 	rsbvc	r7, r1, #100, 14	@ 0x1900000
  68:	20322d66 	eorscs	r2, r2, r6, ror #26
  6c:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
  70:	6f6e662d 	svcvs	0x006e662d
  74:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
  78:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  7c:	414c4600 	cmpmi	ip, r0, lsl #12
  80:	545f4853 	ldrbpl	r4, [pc], #-2131	@ 88 <_Minimum_Stack_Size-0x78>
  84:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
  88:	42006665 	andmi	r6, r0, #105906176	@ 0x6500000
  8c:	00525253 	subseq	r5, r2, r3, asr r2
  90:	45424841 	strbmi	r4, [r2, #-2113]	@ 0xfffff7bf
  94:	5500524e 	strpl	r5, [r0, #-590]	@ 0xfffffdb2
  98:	735f4253 	cmpvc	pc, #805306373	@ 0x30000005
  9c:	70757465 	rsbsvc	r7, r5, r5, ror #8
  a0:	50525700 	subspl	r5, r2, r0, lsl #14
  a4:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
  a8:	6f6c4373 	svcvs	0x006c4373
  ac:	614d6b63 	cmpvs	sp, r3, ror #22
  b0:	50470078 	subpl	r0, r7, r8, ror r0
  b4:	545f4f49 	ldrbpl	r4, [pc], #-3913	@ bc <_Minimum_Stack_Size-0x44>
  b8:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
  bc:	75006665 	strvc	r6, [r0, #-1637]	@ 0xfffff99b
  c0:	635f6273 	cmpvs	pc, #805306375	@ 0x30000007
  c4:	7373616c 	cmnvc	r3, #108, 2
  c8:	6c6f705f 	stclvs	0, cr7, [pc], #-380	@ ffffff54 <BootRAM+0xef706f5>
  cc:	6873006c 	ldmdavs	r3!, {r2, r3, r5, r6}^
  d0:	2074726f 	rsbscs	r7, r4, pc, ror #4
  d4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  d8:	64656e67 	strbtvs	r6, [r5], #-3687	@ 0xfffff199
  dc:	746e6920 	strbtvc	r6, [lr], #-2336	@ 0xfffff6e0
  e0:	73797300 	cmnvc	r9, #0, 6
  e4:	6b636974 	blvs	18da6bc <__Stack_Size+0x18d96bc>
  e8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
  ec:	504f0074 	subpl	r0, pc, r4, ror r0	@ <UNPREDICTABLE>
  f0:	59454b54 	stmdbpl	r5, {r2, r4, r6, r8, r9, fp, lr}^
  f4:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
  f8:	6e676973 			@ <UNDEFINED> instruction: 0x6e676973
  fc:	63206465 			@ <UNDEFINED> instruction: 0x63206465
 100:	00726168 	rsbseq	r6, r2, r8, ror #2
 104:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
 108:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
 10c:	42504100 	subsmi	r4, r0, #0, 2
 110:	54535231 	ldrbpl	r5, [r3], #-561	@ 0xfffffdcf
 114:	616d0052 	qdsubvs	r0, r2, sp
 118:	41006e69 	tstmi	r0, r9, ror #28
 11c:	45314250 	ldrmi	r4, [r1, #-592]!	@ 0xfffffdb0
 120:	4100524e 	tstmi	r0, lr, asr #4
 124:	52324250 	eorspl	r4, r2, #80, 4
 128:	00525453 	subseq	r5, r2, r3, asr r4
 12c:	706d6574 	rsbvc	r6, sp, r4, ror r5
 130:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 134:	6f6c2067 	svcvs	0x006c2067
 138:	7520676e 	strvc	r6, [r0, #-1902]!	@ 0xfffff892
 13c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 140:	2064656e 	rsbcs	r6, r4, lr, ror #10
 144:	00746e69 	rsbseq	r6, r4, r9, ror #28
 148:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 14c:	73795300 	cmnvc	r9, #0, 6
 150:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 154:	0074696e 	rsbseq	r6, r4, lr, ror #18
 158:	64656d2f 	strbtvs	r6, [r5], #-3375	@ 0xfffff2d1
 15c:	652f6169 	strvs	r6, [pc, #-361]!	@ fffffffb <BootRAM+0xef7079c>
 160:	642f7478 	strtvs	r7, [pc], #-1144	@ 168 <_Minimum_Stack_Size+0x68>
 164:	702f7665 	eorvc	r7, pc, r5, ror #12
 168:	2f676f72 	svccs	0x00676f72
 16c:	69722d31 	ldmdbvs	r2!, {r0, r4, r5, r8, sl, fp, sp}^
 170:	722f6373 	eorvc	r6, pc, #-872415231	@ 0xcc000001
 174:	76637369 	strbtvc	r7, [r3], -r9, ror #6
 178:	6d73612d 	ldfvse	f6, [r3, #-180]!	@ 0xffffff4c
 17c:	72614b2f 	rsbvc	r4, r1, #48128	@ 0xbc00
 180:	74616b61 	strbtvc	r6, [r1], #-2913	@ 0xfffff49f
 184:	61737469 	cmnvs	r3, r9, ror #8
 188:	72614b2f 	rsbvc	r4, r1, #48128	@ 0xbc00
 18c:	74616b61 	strbtvc	r6, [r1], #-2913	@ 0xfffff49f
 190:	61737469 	cmnvs	r3, r9, ror #8
 194:	662f325f 			@ <UNDEFINED> instruction: 0x662f325f
 198:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 19c:	00657261 	rsbeq	r7, r5, r1, ror #4
 1a0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 1a4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 1a8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
 1ac:	72730074 	rsbsvc	r0, r3, #116	@ 0x74
 1b0:	616d2f63 	cmnvs	sp, r3, ror #30
 1b4:	632e6e69 			@ <UNDEFINED> instruction: 0x632e6e69
 1b8:	6f687300 	svcvs	0x00687300
 1bc:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
 1c0:	5200746e 	andpl	r7, r0, #1845493760	@ 0x6e000000
 1c4:	545f4343 	ldrbpl	r4, [pc], #-835	@ 1cc <_Minimum_Stack_Size+0xcc>
 1c8:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
 1cc:	75006665 	strvc	r6, [r0, #-1637]	@ 0xfffff99b
 1d0:	33746e69 	cmncc	r4, #1680	@ 0x690
 1d4:	00745f32 	rsbseq	r5, r4, r2, lsr pc
 1d8:	6e655f5f 	mcrvs	15, 3, r5, cr5, cr15, {2}
 1dc:	656c6261 	strbvs	r6, [ip, #-609]!	@ 0xfffffd9f
 1e0:	7172695f 	cmnvc	r2, pc, asr r9
 1e4:	656c7300 	strbvs	r7, [ip, #-768]!	@ 0xfffffd00
 1e8:	4c007065 	stcmi	0, cr7, [r0], {101}	@ 0x65
 1ec:	00524b43 	subseq	r4, r2, r3, asr #22
 1f0:	5f425355 	svcpl	0x00425355
 1f4:	435f504c 	cmpmi	pc, #76	@ 0x4c
 1f8:	5f314e41 	svcpl	0x00314e41
 1fc:	5f305852 	svcpl	0x00305852
 200:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 204:	6e497700 	cdpvs	7, 4, cr7, cr9, cr0, {0}
 208:	00786564 	rsbseq	r6, r8, r4, ror #10
 20c:	31667562 	cmncc	r6, r2, ror #10
 210:	41430036 	cmpmi	r3, r6, lsr r0
 214:	535f314e 	cmppl	pc, #-2147483629	@ 0x80000013
 218:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	@ <UNPREDICTABLE>
 21c:	006e5152 	rsbeq	r5, lr, r2, asr r1
 220:	31414d44 	cmpcc	r1, r4, asr #26
 224:	6168435f 	cmnvs	r8, pc, asr r3
 228:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
 22c:	52495f37 	subpl	r5, r9, #55, 30	@ 0xdc
 230:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
 234:	5f324332 	svcpl	0x00324332
 238:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	@ <UNPREDICTABLE>
 23c:	006e5152 	rsbeq	r5, lr, r2, asr r1
 240:	344d4954 	strbcc	r4, [sp], #-2388	@ 0xfffff6ac
 244:	5152495f 	cmppl	r2, pc, asr r9
 248:	4d44006e 	stclmi	0, cr0, [r4, #-440]	@ 0xfffffe48
 24c:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
 250:	6e6e6168 	powvsez	f6, f6, #0.0
 254:	5f326c65 	svcpl	0x00326c65
 258:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 25c:	616d7000 	cmnvs	sp, r0
 260:	7365645f 	cmnvc	r5, #1593835520	@ 0x5f000000
 264:	745f7263 	ldrbvc	r7, [pc], #-611	@ 26c <_Minimum_Stack_Size+0x16c>
 268:	526d6200 	rsbpl	r6, sp, #0, 4
 26c:	65757165 	ldrbvs	r7, [r5, #-357]!	@ 0xfffffe9b
 270:	79547473 	ldmdbvc	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 274:	73006570 	movwvc	r6, #1392	@ 0x570
 278:	70757465 	rsbsvc	r7, r5, r5, ror #8
 27c:	6361705f 	cmnvs	r1, #95	@ 0x5f
 280:	0074656b 	rsbseq	r6, r4, fp, ror #10
 284:	53414c46 	movtpl	r4, #7238	@ 0x1c46
 288:	52495f48 	subpl	r5, r9, #72, 30	@ 0x120
 28c:	62006e51 	andvs	r6, r0, #1296	@ 0x510
 290:	73657479 	cmnvc	r5, #2030043136	@ 0x79000000
 294:	64616572 	strbtvs	r6, [r1], #-1394	@ 0xfffffa8e
 298:	54584500 	ldrbpl	r4, [r8], #-1280	@ 0xfffffb00
 29c:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	@ <UNPREDICTABLE>
 2a0:	006e5152 	rsbeq	r5, lr, r2, asr r1
 2a4:	5f425355 	svcpl	0x00425355
 2a8:	435f504c 	cmpmi	pc, #76	@ 0x4c
 2ac:	5f314e41 	svcpl	0x00314e41
 2b0:	5f305852 	svcpl	0x00305852
 2b4:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
 2b8:	6c646e61 	stclvs	14, cr6, [r4], #-388	@ 0xfffffe7c
 2bc:	45007265 	strmi	r7, [r0, #-613]	@ 0xfffffd9b
 2c0:	31495458 	cmpcc	r9, r8, asr r4
 2c4:	30315f35 	eorscc	r5, r1, r5, lsr pc
 2c8:	5152495f 	cmppl	r2, pc, asr r9
 2cc:	7566006e 	strbvc	r0, [r6, #-110]!	@ 0xffffff92
 2d0:	6c00636e 	stcvs	3, cr6, [r0], {110}	@ 0x6e
 2d4:	61747361 	cmnvs	r4, r1, ror #6
 2d8:	00726464 	rsbseq	r6, r2, r4, ror #8
 2dc:	646e6550 	strbtvs	r6, [lr], #-1360	@ 0xfffffab0
 2e0:	495f5653 	ldmdbmi	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	@ <UNPREDICTABLE>
 2e4:	006e5152 	rsbeq	r5, lr, r2, asr r1
 2e8:	5f627375 	svcpl	0x00627375
 2ec:	73616c63 	cmnvc	r1, #25344	@ 0x6300
 2f0:	6f735f73 	svcvs	0x00735f73
 2f4:	43520066 	cmpmi	r2, #102	@ 0x66
 2f8:	52495f43 	subpl	r5, r9, #268	@ 0x10c
 2fc:	77006e51 	smlsdvc	r0, r1, lr, r6
 300:	756c6156 	strbvc	r6, [ip, #-342]!	@ 0xfffffeaa
 304:	654d0065 	strbvs	r0, [sp, #-101]	@ 0xffffff9b
 308:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 30c:	616e614d 	cmnvs	lr, sp, asr #2
 310:	656d6567 	strbvs	r6, [sp, #-1383]!	@ 0xfffffa99
 314:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
 318:	006e5152 	rsbeq	r5, lr, r2, asr r1
 31c:	5f307065 	svcpl	0x00307065
 320:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 324:	53490074 	movtpl	r0, #36980	@ 0x9074
 328:	49005254 	stmdbmi	r0, {r2, r4, r6, r9, ip, lr}
 32c:	00524553 	subseq	r4, r2, r3, asr r5
 330:	70646e65 	rsbvc	r6, r4, r5, ror #28
 334:	6c61635f 	stclvs	3, cr6, [r1], #-380	@ 0xfffffe84
 338:	6361626c 	cmnvs	r1, #108, 4	@ 0xc0000006
 33c:	65645f6b 	strbvs	r5, [r4, #-3947]!	@ 0xfffff095
 340:	6c756166 	ldfvse	f6, [r5], #-408	@ 0xfffffe68
 344:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
 348:	425f314d 	subsmi	r3, pc, #1073741843	@ 0x40000013
 34c:	495f4b52 	ldmdbmi	pc, {r1, r4, r6, r8, r9, fp, lr}^	@ <UNPREDICTABLE>
 350:	006e5152 	rsbeq	r5, lr, r2, asr r1
 354:	52455352 	subpl	r5, r5, #1207959553	@ 0x48000001
 358:	31444556 	cmpcc	r4, r6, asr r5
 35c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
 360:	52495f31 	subpl	r5, r9, #49, 30	@ 0xc4
 364:	5f006e51 	svcpl	0x00006e51
 368:	5f627375 	svcpl	0x00627375
 36c:	775f7065 	ldrbvc	r7, [pc, -r5, rrx]
 370:	65746972 	ldrbvs	r6, [r4, #-2418]!	@ 0xfffff68e
 374:	414d4400 	cmpmi	sp, r0, lsl #8
 378:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 37c:	656e6e61 	strbvs	r6, [lr, #-3681]!	@ 0xfffff19f
 380:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	@ <UNPREDICTABLE>
 384:	006e5152 	rsbeq	r5, lr, r2, asr r1
 388:	4349564e 	movtmi	r5, #38478	@ 0x964e
 38c:	616e455f 	cmnvs	lr, pc, asr r5
 390:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
 394:	55005152 	strpl	r5, [r0, #-338]	@ 0xfffffeae
 398:	545f4253 	ldrbpl	r4, [pc], #-595	@ 3a0 <_Minimum_Stack_Size+0x2a0>
 39c:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
 3a0:	44006665 	strmi	r6, [r0], #-1637	@ 0xfffff99b
 3a4:	52444441 	subpl	r4, r4, #1090519040	@ 0x41000000
 3a8:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
 3ac:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 3b0:	52495f31 	subpl	r5, r9, #49, 30	@ 0xc4
 3b4:	52006e51 	andpl	r6, r0, #1296	@ 0x510
 3b8:	52455345 	subpl	r5, r5, #335544321	@ 0x14000001
 3bc:	42444556 	submi	r4, r4, #360710144	@ 0x15800000
 3c0:	62737500 	rsbsvs	r7, r3, #0, 10
 3c4:	616c635f 	cmnvs	ip, pc, asr r3
 3c8:	675f7373 			@ <UNDEFINED> instruction: 0x675f7373
 3cc:	735f7465 	cmpvc	pc, #1694498816	@ 0x65000000
 3d0:	645f6474 	ldrbvs	r6, [pc], #-1140	@ 3d8 <_Minimum_Stack_Size+0x2d8>
 3d4:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
 3d8:	42535500 	subsmi	r5, r3, #0, 10
 3dc:	5f50485f 	svcpl	0x0050485f
 3e0:	314e4143 	cmpcc	lr, r3, asr #2
 3e4:	5f58545f 	svcpl	0x0058545f
 3e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 3ec:	51524900 	cmppl	r2, r0, lsl #18
 3f0:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 3f4:	65006570 	strvs	r6, [r0, #-1392]	@ 0xfffffa90
 3f8:	735f3070 	cmpvc	pc, #112	@ 0x70
 3fc:	00646e65 	rsbeq	r6, r4, r5, ror #28
 400:	52415355 	subpl	r5, r1, #1409286145	@ 0x54000001
 404:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	@ <UNPREDICTABLE>
 408:	006e5152 	rsbeq	r5, lr, r2, asr r1
 40c:	7366666f 	cmnvc	r6, #116391936	@ 0x6f00000
 410:	63007465 	movwvs	r7, #1125	@ 0x465
 414:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 418:	61727567 	cmnvs	r2, r7, ror #10
 41c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 420:	30504500 	subscc	r4, r0, r0, lsl #10
 424:	53550052 	cmppl	r5, #82	@ 0x52
 428:	64415f42 	strbvs	r5, [r1], #-3906	@ 0xfffff0be
 42c:	65007264 	strvs	r7, [r0, #-612]	@ 0xfffffd9c
 430:	6e756670 	mrcvs	6, 3, r6, cr5, cr0, {3}
 434:	756f5f63 	strbvc	r5, [pc, #-3939]!	@ fffff4d9 <BootRAM+0xef6fc7a>
 438:	70650074 	rsbvc	r0, r5, r4, ror r0
 43c:	75625f30 	strbvc	r5, [r2, #-3888]!	@ 0xfffff0d0
 440:	58450066 	stmdapl	r5, {r1, r2, r5, r6}^
 444:	5f324954 	svcpl	0x00324954
 448:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 44c:	43324900 	teqmi	r2, #0, 18
 450:	56455f32 			@ <UNDEFINED> instruction: 0x56455f32
 454:	5152495f 	cmppl	r2, pc, asr r9
 458:	5045006e 	subpl	r0, r5, lr, rrx
 45c:	75005231 	strvc	r5, [r0, #-561]	@ 0xfffffdcf
 460:	655f6273 	ldrbvs	r6, [pc, #-627]	@ 1f5 <_Minimum_Stack_Size+0xf5>
 464:	74616470 	strbtvc	r6, [r1], #-1136	@ 0xfffffb90
 468:	00745f61 	rsbseq	r5, r4, r1, ror #30
 46c:	31414d44 	cmpcc	r1, r4, asr #26
 470:	6168435f 	cmnvs	r8, pc, asr r3
 474:	6c656e6e 	stclvs	14, cr6, [r5], #-440	@ 0xfffffe48
 478:	52495f36 	subpl	r5, r9, #54, 30	@ 0xd8
 47c:	5f006e51 	svcpl	0x00006e51
 480:	5f627375 	svcpl	0x00627375
 484:	725f7065 	subsvc	r7, pc, #101	@ 0x65
 488:	00646165 	rsbeq	r6, r4, r5, ror #2
 48c:	334d4954 	movtcc	r4, #55636	@ 0xd954
 490:	5152495f 	cmppl	r2, pc, asr r9
 494:	4d44006e 	stclmi	0, cr0, [r4, #-440]	@ 0xfffffe48
 498:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
 49c:	6e6e6168 	powvsez	f6, f6, #0.0
 4a0:	5f316c65 	svcpl	0x00316c65
 4a4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4a8:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
 4ac:	745f3874 	ldrbvc	r3, [pc], #-2164	@ 4b4 <_Minimum_Stack_Size+0x3b4>
 4b0:	32504500 	subscc	r4, r0, #0, 10
 4b4:	53550052 	cmppl	r5, #82	@ 0x52
 4b8:	6b615742 	blvs	18561c8 <__Stack_Size+0x18551c8>
 4bc:	5f705565 	svcpl	0x00705565
 4c0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 4c4:	44575700 	ldrbmi	r5, [r7], #-1792	@ 0xfffff900
 4c8:	52495f47 	subpl	r5, r9, #284	@ 0x11c
 4cc:	75006e51 	strvc	r6, [r0, #-3665]	@ 0xfffff1af
 4d0:	635f6273 	cmpvs	pc, #805306375	@ 0x30000007
 4d4:	7373616c 	cmnvc	r3, #108, 2
 4d8:	7369645f 	cmnvc	r9, #1593835520	@ 0x5f000000
 4dc:	6e6e6f63 	cdpvs	15, 6, cr6, cr14, cr3, {3}
 4e0:	00746365 	rsbseq	r6, r4, r5, ror #6
 4e4:	52335045 	eorspl	r5, r3, #69	@ 0x45
 4e8:	73754200 	cmnvc	r5, #0, 4
 4ec:	6c756146 	ldfvse	f6, [r5], #-280	@ 0xfffffee8
 4f0:	52495f74 	subpl	r5, r9, #116, 30	@ 0x1d0
 4f4:	45006e51 	strmi	r6, [r0, #-3665]	@ 0xfffff1af
 4f8:	34495458 	strbcc	r5, [r9], #-1112	@ 0xfffffba8
 4fc:	5152495f 	cmppl	r2, pc, asr r9
 500:	7375006e 	cmnvc	r5, #110	@ 0x6e
 504:	6c635f62 	stclvs	15, cr5, [r3], #-392	@ 0xfffffe78
 508:	5f737361 	svcpl	0x00737361
 50c:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
 510:	44565000 	ldrbmi	r5, [r6], #-0
 514:	5152495f 	cmppl	r2, pc, asr r9
 518:	7065006e 	rsbvc	r0, r5, lr, rrx
 51c:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
 520:	7500745f 	strvc	r7, [r0, #-1119]	@ 0xfffffba1
 524:	745f6273 	ldrbvc	r6, [pc], #-627	@ 52c <_Minimum_Stack_Size+0x42c>
 528:	6f635f78 	svcvs	0x00635f78
 52c:	00746e75 	rsbseq	r6, r4, r5, ror lr
 530:	52504349 	subspl	r4, r0, #603979777	@ 0x24000001
 534:	34504500 	ldrbcc	r4, [r0], #-1280	@ 0xfffffb00
 538:	4d440052 	stclmi	0, cr0, [r4, #-328]	@ 0xfffffeb8
 53c:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
 540:	6e6e6168 	powvsez	f6, f6, #0.0
 544:	5f336c65 	svcpl	0x00336c65
 548:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 54c:	63727300 	cmnvs	r2, #0, 6
 550:	6273752f 	rsbsvs	r7, r3, #197132288	@ 0xbc00000
 554:	62696c5f 	rsbvs	r6, r9, #24320	@ 0x5f00
 558:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
 55c:	5f314332 	svcpl	0x00314332
 560:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	@ <UNPREDICTABLE>
 564:	006e5152 	rsbeq	r5, lr, r2, asr r1
 568:	6e5f7872 	mrcvs	8, 2, r7, cr15, cr2, {3}
 56c:	625f6d75 	subsvs	r6, pc, #7488	@ 0x1d40
 570:	6b636f6c 	blvs	18dc328 <__Stack_Size+0x18db328>
 574:	73750073 	cmnvc	r5, #115	@ 0x73
 578:	6c635f62 	stclvs	15, cr5, [r3], #-392	@ 0xfffffe78
 57c:	5f737361 	svcpl	0x00737361
 580:	5f307065 	svcpl	0x00307065
 584:	75006e69 	strvc	r6, [r0, #-3689]	@ 0xfffff197
 588:	31746e69 	cmncc	r4, r9, ror #28
 58c:	00745f36 	rsbseq	r5, r4, r6, lsr pc
 590:	625f7874 	subsvs	r7, pc, #116, 16	@ 0x740000
 594:	6b636f6c 	blvs	18dc34c <__Stack_Size+0x18db34c>
 598:	657a6973 	ldrbvs	r6, [sl, #-2419]!	@ 0xfffff68d
 59c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
 5a0:	50555f31 	subspl	r5, r5, r1, lsr pc
 5a4:	5152495f 	cmppl	r2, pc, asr r9
 5a8:	5453006e 	ldrbpl	r0, [r3], #-110	@ 0xffffff92
 5ac:	52005249 	andpl	r5, r0, #-1879048188	@ 0x90000004
 5b0:	415f4354 	cmpmi	pc, r4, asr r3	@ <UNPREDICTABLE>
 5b4:	6d72616c 	ldfvse	f6, [r2, #-432]!	@ 0xfffffe50
 5b8:	5152495f 	cmppl	r2, pc, asr r9
 5bc:	5452006e 	ldrbpl	r0, [r2], #-110	@ 0xffffff92
 5c0:	52495f43 	subpl	r5, r9, #268	@ 0x10c
 5c4:	45006e51 	strmi	r6, [r0, #-3665]	@ 0xfffff1af
 5c8:	00523550 	subseq	r3, r2, r0, asr r5
 5cc:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
 5d0:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
 5d4:	45520030 	ldrbmi	r0, [r2, #-48]	@ 0xffffffd0
 5d8:	56524553 			@ <UNDEFINED> instruction: 0x56524553
 5dc:	00314445 	eorseq	r4, r1, r5, asr #8
 5e0:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
 5e4:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
 5e8:	45520032 	ldrbmi	r0, [r2, #-50]	@ 0xffffffce
 5ec:	56524553 			@ <UNDEFINED> instruction: 0x56524553
 5f0:	00334445 	eorseq	r4, r3, r5, asr #8
 5f4:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
 5f8:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
 5fc:	45520034 	ldrbmi	r0, [r2, #-52]	@ 0xffffffcc
 600:	56524553 			@ <UNDEFINED> instruction: 0x56524553
 604:	00354445 	eorseq	r4, r5, r5, asr #8
 608:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
 60c:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
 610:	45520036 	ldrbmi	r0, [r2, #-54]	@ 0xffffffca
 614:	56524553 			@ <UNDEFINED> instruction: 0x56524553
 618:	00384445 	eorseq	r4, r8, r5, asr #8
 61c:	45534552 	ldrbmi	r4, [r3, #-1362]	@ 0xfffffaae
 620:	44455652 	strbmi	r5, [r5], #-1618	@ 0xfffff9ae
 624:	45520039 	ldrbmi	r0, [r2, #-57]	@ 0xffffffc7
 628:	56524553 			@ <UNDEFINED> instruction: 0x56524553
 62c:	00414445 	subeq	r4, r1, r5, asr #8
 630:	52415355 	subpl	r5, r1, #1409286145	@ 0x54000001
 634:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
 638:	006e5152 	rsbeq	r5, lr, r2, asr r1
 63c:	5f627375 	svcpl	0x00627375
 640:	695f7065 	ldmdbvs	pc, {r0, r2, r5, r6, ip, sp, lr}^	@ <UNPREDICTABLE>
 644:	0074696e 	rsbseq	r6, r4, lr, ror #18
 648:	4d6e6f4e 	stclmi	15, cr6, [lr, #-312]!	@ 0xfffffec8
 64c:	616b7361 	cmnvs	fp, r1, ror #6
 650:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
 654:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
 658:	006e5152 	rsbeq	r5, lr, r2, asr r1
 65c:	6e654c77 	mcrvs	12, 3, r4, cr5, cr7, {3}
 660:	00687467 	rsbeq	r7, r8, r7, ror #8
 664:	314d4954 	cmpcc	sp, r4, asr r9
 668:	5f43435f 	svcpl	0x0043435f
 66c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 670:	36504500 	ldrbcc	r4, [r0], -r0, lsl #10
 674:	656c0052 	strbvs	r0, [ip, #-82]!	@ 0xffffffae
 678:	45007466 	strmi	r7, [r0, #-1126]	@ 0xfffffb9a
 67c:	31495458 	cmpcc	r9, r8, asr r4
 680:	5152495f 	cmppl	r2, pc, asr r9
 684:	5262006e 	rsbpl	r0, r2, #110	@ 0x6e
 688:	65757165 	ldrbvs	r7, [r5, #-357]!	@ 0xfffffe9b
 68c:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 690:	5f434956 	svcpl	0x00434956
 694:	65707954 	ldrbvs	r7, [r0, #-2388]!	@ 0xfffff6ac
 698:	544e4300 	strbpl	r4, [lr], #-768	@ 0xfffffd00
 69c:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
 6a0:	545f314d 	ldrbpl	r3, [pc], #-333	@ 6a8 <_Minimum_Stack_Size+0x5a8>
 6a4:	435f4752 	cmpmi	pc, #21495808	@ 0x1480000
 6a8:	495f4d4f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, sl, fp, lr}^	@ <UNPREDICTABLE>
 6ac:	006e5152 	rsbeq	r5, lr, r2, asr r1
 6b0:	31433249 	cmpcc	r3, r9, asr #4
 6b4:	5f52455f 	svcpl	0x0052455f
 6b8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 6bc:	73795300 	cmnvc	r9, #0, 6
 6c0:	6b636954 	blvs	18dac18 <__Stack_Size+0x18d9c18>
 6c4:	5152495f 	cmppl	r2, pc, asr r9
 6c8:	7065006e 	rsbvc	r0, r5, lr, rrx
 6cc:	006d756e 	rsbeq	r7, sp, lr, ror #10
 6d0:	735f7872 	cmpvc	pc, #7471104	@ 0x720000
 6d4:	00657a69 	rsbeq	r7, r5, r9, ror #20
 6d8:	324d4954 	subcc	r4, sp, #84, 18	@ 0x150000
 6dc:	5152495f 	cmppl	r2, pc, asr r9
 6e0:	7375006e 	cmnvc	r5, #110	@ 0x6e
 6e4:	6c635f62 	stclvs	15, cr5, [r3], #-392	@ 0xfffffe78
 6e8:	5f737361 	svcpl	0x00737361
 6ec:	5f307065 	svcpl	0x00307065
 6f0:	0074756f 	rsbseq	r7, r4, pc, ror #10
 6f4:	52375045 	eorspl	r5, r7, #69	@ 0x45
 6f8:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
 6fc:	5f676966 	svcpl	0x00676966
 700:	6b636170 	blvs	18d8cc8 <__Stack_Size+0x18d7cc8>
 704:	7500745f 	strvc	r7, [r0, #-1119]	@ 0xfffffba1
 708:	725f6273 	subsvc	r6, pc, #805306375	@ 0x30000007
 70c:	64615f78 	strbtvs	r5, [r1], #-3960	@ 0xfffff088
 710:	74007264 	strvc	r7, [r0], #-612	@ 0xfffffd9c
 714:	756e5f78 	strbvc	r5, [lr, #-3960]!	@ 0xfffff088
 718:	6c625f6d 	stclvs	15, cr5, [r2], #-436	@ 0xfffffe4c
 71c:	736b636f 	cmnvc	fp, #-1140850687	@ 0xbc000001
 720:	62654400 	rsbvs	r4, r5, #0, 8
 724:	6f4d6775 	svcvs	0x004d6775
 728:	6f74696e 	svcvs	0x0074696e
 72c:	52495f72 	subpl	r5, r9, #456	@ 0x1c8
 730:	55006e51 	strpl	r6, [r0, #-3665]	@ 0xfffff1af
 734:	65676173 	strbvs	r6, [r7, #-371]!	@ 0xfffffe8d
 738:	6c756146 	ldfvse	f6, [r5], #-280	@ 0xfffffee8
 73c:	52495f74 	subpl	r5, r9, #116, 30	@ 0x1d0
 740:	72006e51 	andvc	r6, r0, #1296	@ 0x510
 744:	6c625f78 	stclvs	15, cr5, [r2], #-480	@ 0xfffffe20
 748:	736b636f 	cmnvc	fp, #-1140850687	@ 0xbc000001
 74c:	00657a69 	rsbeq	r7, r5, r9, ror #20
 750:	75667065 	strbvc	r7, [r6, #-101]!	@ 0xffffff9b
 754:	695f636e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^	@ <UNPREDICTABLE>
 758:	7375006e 	cmnvc	r5, #110	@ 0x6e
 75c:	70655f62 	rsbvc	r5, r5, r2, ror #30
 760:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 764:	6f645f74 	svcvs	0x00645f74
 768:	656c6275 	strbvs	r6, [ip, #-629]!	@ 0xfffffd8b
 76c:	54584500 	ldrbpl	r4, [r8], #-1280	@ 0xfffffb00
 770:	355f3949 	ldrbcc	r3, [pc, #-2377]	@ fffffe2f <BootRAM+0xef705d0>
 774:	5152495f 	cmppl	r2, pc, asr r9
 778:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
 77c:	6c6c6143 	stfvse	f6, [ip], #-268	@ 0xfffffef4
 780:	5152495f 	cmppl	r2, pc, asr r9
 784:	4349006e 	movtmi	r0, #36974	@ 0x906e
 788:	53005245 	movwpl	r5, #581	@ 0x245
 78c:	5f324950 	svcpl	0x00324950
 790:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 794:	42414900 	submi	r4, r1, #0, 18
 798:	73750052 	cmnvc	r5, #82	@ 0x52
 79c:	78745f62 	ldmdavc	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 7a0:	6464615f 	strbtvs	r6, [r4], #-351	@ 0xfffffea1
 7a4:	4d440072 	stclmi	0, cr0, [r4, #-456]	@ 0xfffffe38
 7a8:	435f3141 	cmpmi	pc, #1073741840	@ 0x40000010
 7ac:	6e6e6168 	powvsez	f6, f6, #0.0
 7b0:	5f356c65 	svcpl	0x00356c65
 7b4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7b8:	41544200 	cmpmi	r4, r0, lsl #4
 7bc:	00454c42 	subeq	r4, r5, r2, asr #24
 7c0:	745f7065 	ldrbvc	r7, [pc], #-101	@ 7c8 <_Minimum_Stack_Size+0x6c8>
 7c4:	00657079 	rsbeq	r7, r5, r9, ror r0
 7c8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
 7cc:	52495f33 	subpl	r5, r9, #51, 30	@ 0xcc
 7d0:	64006e51 	strvs	r6, [r0], #-3665	@ 0xfffff1af
 7d4:	695f7269 	ldmdbvs	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	@ <UNPREDICTABLE>
 7d8:	6148006e 	cmpvs	r8, lr, rrx
 7dc:	61466472 	hvcvs	26178	@ 0x6642
 7e0:	5f746c75 	svcpl	0x00746c75
 7e4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 7e8:	50534900 	subspl	r4, r3, r0, lsl #18
 7ec:	73750052 	cmnvc	r5, #82	@ 0x52
 7f0:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 7f4:	756f635f 	strbvc	r6, [pc, #-863]!	@ 49d <_Minimum_Stack_Size+0x39d>
 7f8:	7200746e 	andvc	r7, r0, #1845493760	@ 0x6e000000
 7fc:	756f6378 	strbvc	r6, [pc, #-888]!	@ 48c <_Minimum_Stack_Size+0x38c>
 800:	4100746e 	tstmi	r0, lr, ror #8
 804:	5f314344 	svcpl	0x00314344
 808:	52495f32 	subpl	r5, r9, #50, 30	@ 0xc8
 80c:	52006e51 	andpl	r6, r0, #1296	@ 0x510
 810:	52455345 	subpl	r5, r5, #335544321	@ 0x14000001
 814:	37444556 	smlsldcc	r4, r4, r6, r5	@ <UNPREDICTABLE>
 818:	41535500 	cmpmi	r3, r0, lsl #10
 81c:	5f335452 	svcpl	0x00335452
 820:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 824:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
 828:	5f524550 	svcpl	0x00524550
 82c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
 830:	53455200 	movtpl	r5, #20992	@ 0x5200
 834:	45565245 	ldrbmi	r5, [r6, #-581]	@ 0xfffffdbb
 838:	55004344 	strpl	r4, [r0, #-836]	@ 0xfffffcbc
 83c:	485f4253 	ldmdami	pc, {r0, r1, r4, r6, r9, lr}^	@ <UNPREDICTABLE>
 840:	65444449 	strbvs	r4, [r4, #-1097]	@ 0xfffffbb7
 844:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 848:	726f7470 	rsbvc	r7, pc, #112, 8	@ 0x70000000
 84c:	52515300 	subspl	r5, r1, #0, 6
 850:	51530031 	cmppl	r3, r1, lsr r0
 854:	53003252 	movwpl	r3, #594	@ 0x252
 858:	00335251 	eorseq	r5, r3, r1, asr r2
 85c:	5f636461 	svcpl	0x00636461
 860:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 864:	69680048 	stmdbvs	r8!, {r3, r6}^
 868:	6f705f64 	svcvs	0x00705f64
 86c:	61006c6c 	tstvs	r0, ip, ror #24
 870:	745f6364 	ldrbvc	r6, [pc], #-868	@ 878 <_Minimum_Stack_Size+0x778>
 874:	4c656d69 	stclmi	13, cr6, [r5], #-420	@ 0xfffffe5c
 878:	64696800 	strbtvs	r6, [r9], #-2048	@ 0xfffff800
 87c:	7461645f 	strbtvc	r6, [r1], #-1119	@ 0xfffffba1
 880:	414d0061 	cmpmi	sp, r1, rrx
 884:	75005250 	strvc	r5, [r0, #-592]	@ 0xfffffdb0
 888:	655f6273 	ldrbvs	r6, [pc, #-627]	@ 61d <_Minimum_Stack_Size+0x51d>
 88c:	72775f70 	rsbsvc	r5, r7, #112, 30	@ 0x1c0
 890:	5f657469 	svcpl	0x00657469
 894:	62756f64 	rsbsvs	r6, r5, #100, 30	@ 0x190
 898:	7300656c 	movwvc	r6, #1388	@ 0x56c
 89c:	752f6372 	strvc	r6, [pc, #-882]!	@ 532 <_Minimum_Stack_Size+0x432>
 8a0:	635f6273 	cmpvs	pc, #805306375	@ 0x30000007
 8a4:	7373616c 	cmnvc	r3, #108, 2
 8a8:	7200632e 	andvc	r6, r0, #-1207959552	@ 0xb8000000
 8ac:	61647365 	cmnvs	r4, r5, ror #6
 8b0:	41006174 	tstmi	r0, r4, ror r1
 8b4:	5f314344 	svcpl	0x00314344
 8b8:	52495f32 	subpl	r5, r9, #50, 30	@ 0xc8
 8bc:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
 8c0:	72656c64 	rsbvc	r6, r5, #100, 24	@ 0x6400
 8c4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
 8c8:	7079545f 	rsbsvc	r5, r9, pc, asr r4
 8cc:	66654465 	strbtvs	r4, [r5], -r5, ror #8
 8d0:	54444200 	strbpl	r4, [r4], #-512	@ 0xfffffe00
 8d4:	43430052 	movtmi	r0, #12370	@ 0x3052
 8d8:	43003152 	movwmi	r3, #338	@ 0x152
 8dc:	00325243 	eorseq	r5, r2, r3, asr #4
 8e0:	33524343 	cmpcc	r2, #201326593	@ 0xc000001
 8e4:	4d434300 	stclmi	3, cr4, [r3, #-0]
 8e8:	43003152 	movwmi	r3, #338	@ 0x152
 8ec:	32524d43 	subscc	r4, r2, #4288	@ 0x10c0
 8f0:	64696800 	strbtvs	r6, [r9], #-2048	@ 0xfffff800
 8f4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	@ 0xfffffe84
 8f8:	74756f65 	ldrbtvc	r6, [r5], #-3941	@ 0xfffff09b
 8fc:	63696d00 	cmnvs	r9, #0, 26
 900:	6c6f705f 	stclvs	0, cr7, [pc], #-380	@ 78c <_Minimum_Stack_Size+0x68c>
 904:	6461006c 	strbtvs	r0, [r1], #-108	@ 0xffffff94
 908:	72765f63 	rsbsvc	r5, r6, #396	@ 0x18c
 90c:	73006665 	movwvc	r6, #1637	@ 0x665
 910:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 914:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	@ <UNPREDICTABLE>
 918:	7265746e 	rsbvc	r7, r5, #1845493760	@ 0x6e000000
 91c:	006c616e 	rsbeq	r6, ip, lr, ror #2
 920:	5f636461 	svcpl	0x00636461
 924:	69666e69 	stmdbvs	r6!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 928:	7265746c 	rsbvc	r7, r5, #108, 8	@ 0x6c000000
 92c:	45494400 	strbmi	r4, [r9, #-1024]	@ 0xfffffc00
 930:	72700052 	rsbsvc	r0, r0, #82	@ 0x52
 934:	6172676f 	cmnvs	r2, pc, ror #14
 938:	72656d6d 	rsbvc	r6, r5, #6976	@ 0x1b40
 93c:	3070655f 	rsbscc	r6, r0, pc, asr r5
 940:	74756f5f 	ldrbtvc	r6, [r5], #-3935	@ 0xfffff0a1
 944:	64696800 	strbtvs	r6, [r9], #-2048	@ 0xfffff800
 948:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 94c:	72700074 	rsbsvc	r0, r0, #116	@ 0x74
 950:	6172676f 	cmnvs	r2, pc, ror #14
 954:	72656d6d 	rsbvc	r6, r5, #6976	@ 0x1b40
 958:	3070655f 	rsbscc	r6, r0, pc, asr r5
 95c:	006e695f 	rsbeq	r6, lr, pc, asr r9
 960:	52454343 	subpl	r4, r5, #201326593	@ 0xc000001
 964:	49464100 	stmdbmi	r6, {r8, lr}^
 968:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
 96c:	65446570 	strbvs	r6, [r4, #-1392]	@ 0xfffffa90
 970:	53550066 	cmppl	r5, #102	@ 0x66
 974:	6f435f42 	svcvs	0x00435f42
 978:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 97c:	63736544 	cmnvs	r3, #68, 10	@ 0x11000000
 980:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 984:	7300726f 	movwvc	r7, #623	@ 0x26f
 988:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 98c:	6d5f6b63 	vldrvs	d22, [pc, #-396]	@ 808 <_Minimum_Stack_Size+0x708>
 990:	696d0073 	stmdbvs	sp!, {r0, r1, r4, r5, r6}^
 994:	6c696664 	stclvs	6, cr6, [r9], #-400	@ 0xfffffe70
 998:	00726574 	rsbseq	r6, r2, r4, ror r5
 99c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
 9a0:	43005243 	movwmi	r5, #579	@ 0x243
 9a4:	00345243 	eorseq	r5, r4, r3, asr #4
 9a8:	52434d53 	subpl	r4, r3, #5312	@ 0x14c0
 9ac:	63696d00 	cmnvs	r9, #0, 26
 9b0:	5f6e695f 	svcpl	0x006e695f
 9b4:	6c6c6163 	stfvse	f6, [ip], #-396	@ 0xfffffe74
 9b8:	6b636162 	blvs	18d8f48 <__Stack_Size+0x18d7f48>
 9bc:	43444100 	movtmi	r4, #16640	@ 0x4100
 9c0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
 9c4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
 9c8:	63646100 	cmnvs	r4, #0, 2
 9cc:	6675625f 			@ <UNDEFINED> instruction: 0x6675625f
 9d0:	00726566 	rsbseq	r6, r2, r6, ror #10
 9d4:	5f425355 	svcpl	0x00425355
 9d8:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 9dc:	505f676e 	subspl	r6, pc, lr, ror #14
 9e0:	52474f52 	subpl	r4, r7, #328	@ 0x148
 9e4:	42535500 	subsmi	r5, r3, #0, 10
 9e8:	7665445f 			@ <UNDEFINED> instruction: 0x7665445f
 9ec:	51656369 	cmnpl	r5, r9, ror #6
 9f0:	696c6175 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r8, sp, lr}^
 9f4:	72656966 	rsbvc	r6, r5, #1671168	@ 0x198000
 9f8:	63736544 	cmnvs	r3, #68, 10	@ 0x11000000
 9fc:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 a00:	7000726f 	andvc	r7, r0, pc, ror #4
 a04:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
 a08:	656d6d61 	strbvs	r6, [sp, #-3425]!	@ 0xfffff29f
 a0c:	6f705f72 	svcvs	0x00705f72
 a10:	6d006c6c 	stcvs	12, cr6, [r0, #-432]	@ 0xfffffe50
 a14:	61766469 	cmnvs	r6, r9, ror #8
 a18:	534a006c 	movtpl	r0, #41068	@ 0xa06c
 a1c:	53005251 	movwpl	r5, #593	@ 0x251
 a20:	3152504d 	cmpcc	r2, sp, asr #32
 a24:	504d5300 	subpl	r5, sp, r0, lsl #6
 a28:	6c003252 	sfmvs	f3, 4, [r0], {82}	@ 0x52
 a2c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 a30:	62756f64 	rsbsvs	r6, r5, #100, 30	@ 0x190
 a34:	6d00656c 	cfstr32vs	mvfx6, [r0, #-432]	@ 0xfffffe50
 a38:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	@ <UNPREDICTABLE>
 a3c:	0074696e 	rsbseq	r6, r4, lr, ror #18
 a40:	5f63696d 	svcpl	0x0063696d
 a44:	5f307065 	svcpl	0x00307065
 a48:	4a006e69 	bmi	1c3f4 <__Stack_Size+0x1b3f4>
 a4c:	00315244 	eorseq	r5, r1, r4, asr #4
 a50:	3252444a 	subscc	r4, r2, #1241513984	@ 0x4a000000
 a54:	52444a00 	subpl	r4, r4, #0, 20
 a58:	444a0033 	strbmi	r0, [sl], #-51	@ 0xffffffcd
 a5c:	44003452 	strmi	r3, [r0], #-1106	@ 0xfffffbae
 a60:	0052414d 	subseq	r4, r2, sp, asr #2
 a64:	72745362 	rsbsvc	r5, r4, #-2013265919	@ 0x88000001
 a68:	00676e69 	rsbeq	r6, r7, r9, ror #28
 a6c:	76727563 	ldrbtvc	r7, [r2], -r3, ror #10
 a70:	61006c61 	tstvs	r0, r1, ror #24
 a74:	765f6364 	ldrbvc	r6, [pc], -r4, ror #6
 a78:	55006c61 	strpl	r6, [r0, #-3169]	@ 0xfffff39f
 a7c:	535f4253 	cmppl	pc, #805306373	@ 0x30000005
 a80:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 a84:	72655367 	rsbvc	r5, r5, #-1677721599	@ 0x9c000001
 a88:	446c6169 	strbtmi	r6, [ip], #-361	@ 0xfffffe97
 a8c:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
 a90:	6f747069 	svcvs	0x00747069
 a94:	53550072 	cmppl	r5, #114	@ 0x72
 a98:	74535f42 	ldrbvc	r5, [r3], #-3906	@ 0xfffff0be
 a9c:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
 aa0:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
 aa4:	63736544 	cmnvs	r3, #68, 10	@ 0x11000000
 aa8:	74706972 	ldrbtvc	r6, [r0], #-2418	@ 0xfffff68e
 aac:	6f00726f 	svcvs	0x0000726f
 ab0:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
 ab4:	6c706d61 	ldclvs	13, cr6, [r0], #-388	@ 0xfffffe7c
 ab8:	746e635f 	strbtvc	r6, [lr], #-863	@ 0xfffffca1
 abc:	50414d00 	subpl	r4, r1, r0, lsl #26
 ac0:	68003252 	stmdavs	r0, {r1, r4, r6, r9, ip, sp}
 ac4:	655f6469 	ldrbvs	r6, [pc, #-1129]	@ 663 <_Minimum_Stack_Size+0x563>
 ac8:	695f3070 	ldmdbvs	pc, {r4, r5, r6, ip, sp}^	@ <UNPREDICTABLE>
 acc:	6461006e 	strbtvs	r0, [r1], #-110	@ 0xffffff92
 ad0:	64695f63 	strbtvs	r5, [r9], #-3939	@ 0xfffff09d
 ad4:	746e0078 	strbtvc	r0, [lr], #-120	@ 0xffffff88
 ad8:	5f656d69 	svcpl	0x00656d69
 adc:	6d00736d 	stcvs	3, cr7, [r0, #-436]	@ 0xfffffe4c
 ae0:	655f6369 	ldrbvs	r6, [pc, #-873]	@ 77f <_Minimum_Stack_Size+0x67f>
 ae4:	6f5f3070 	svcvs	0x005f3070
 ae8:	68007475 	stmdavs	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
 aec:	645f6469 	ldrbvs	r6, [pc], #-1129	@ af4 <_Minimum_Stack_Size+0x9f4>
 af0:	5f617461 	svcpl	0x00617461
 af4:	69680073 	stmdbvs	r8!, {r0, r1, r4, r5, r6}^
 af8:	61645f64 	cmnvs	r4, r4, ror #30
 afc:	745f6174 	ldrbvc	r6, [pc], #-372	@ b04 <_Minimum_Stack_Size+0xa04>
 b00:	42535500 	subsmi	r5, r3, #0, 10
 b04:	7665445f 			@ <UNDEFINED> instruction: 0x7665445f
 b08:	44656369 	strbtmi	r6, [r5], #-873	@ 0xfffffc97
 b0c:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
 b10:	6f747069 	svcvs	0x00747069
 b14:	44620072 	strbtmi	r0, [r2], #-114	@ 0xffffff8e
 b18:	72637365 	rsbvc	r7, r3, #-1811939327	@ 0x94000001
 b1c:	6f747069 	svcvs	0x00747069
 b20:	70795472 	rsbsvc	r5, r9, r2, ror r4
 b24:	53550065 	cmppl	r5, #101	@ 0x65
 b28:	74535f42 	ldrbvc	r5, [r3], #-3906	@ 0xfffff0be
 b2c:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
 b30:	756e614d 	strbvc	r6, [lr, #-333]!	@ 0xfffffeb3
 b34:	74636166 	strbtvc	r6, [r3], #-358	@ 0xfffffe9a
 b38:	6e697275 	mcrvs	2, 3, r7, cr9, cr5, {3}
 b3c:	73654467 	cmnvc	r5, #1728053248	@ 0x67000000
 b40:	70697263 	rsbvc	r7, r9, r3, ror #4
 b44:	00726f74 	rsbseq	r6, r2, r4, ror pc
 b48:	5f425355 	svcpl	0x00425355
 b4c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 b50:	545f676e 	ldrbpl	r6, [pc], #-1902	@ b58 <_Minimum_Stack_Size+0xa58>
 b54:	70005954 	andvc	r5, r0, r4, asr r9
 b58:	72676f72 	rsbvc	r6, r7, #456	@ 0x1c8
 b5c:	656d6d61 	strbvs	r6, [sp, #-3425]!	@ 0xfffff29f
 b60:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
 b64:	55007469 	strpl	r7, [r0, #-1129]	@ 0xfffffb97
 b68:	535f4253 	cmppl	pc, #805306373	@ 0x30000005
 b6c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 b70:	6f725067 	svcvs	0x00725067
 b74:	73654464 	cmnvc	r5, #100, 8	@ 0x64000000
 b78:	70697263 	rsbvc	r7, r9, r3, ror #4
 b7c:	00726f74 	rsbseq	r6, r2, r4, ror pc
 b80:	5f63696d 	svcpl	0x0063696d
 b84:	00666f73 	rsbeq	r6, r6, r3, ror pc
 b88:	52464f4a 	subpl	r4, r6, #296	@ 0x128
 b8c:	4f4a0031 	svcmi	0x004a0031
 b90:	00325246 	eorseq	r5, r2, r6, asr #4
 b94:	52464f4a 	subpl	r4, r6, #296	@ 0x128
 b98:	4f4a0033 	svcmi	0x004a0033
 b9c:	00345246 	eorseq	r5, r4, r6, asr #4
 ba0:	5f646968 	svcpl	0x00646968
 ba4:	5f307065 	svcpl	0x00307065
 ba8:	0074756f 	rsbseq	r7, r4, pc, ror #10
 bac:	6c617663 	stclvs	6, cr7, [r1], #-396	@ 0xfffffe74
 bb0:	654c6200 	strbvs	r6, [ip, #-512]	@ 0xfffffe00
 bb4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 bb8:	43564500 	cmpmi	r6, #0, 10
 bbc:	64610052 	strbtvs	r0, [r1], #-82	@ 0xffffffae
 bc0:	756f5f63 	strbvc	r5, [pc, #-3939]!	@ fffffc65 <BootRAM+0xef70406>
 bc4:	6c696674 	stclvs	6, cr6, [r9], #-464	@ 0xfffffe30
 bc8:	00726574 	rsbseq	r6, r2, r4, ror r5
 bcc:	2f637273 	svccs	0x00637273
 bd0:	74737973 	ldrbtvc	r7, [r3], #-2419	@ 0xfffff68d
 bd4:	2e6b6369 	cdpcs	3, 6, cr6, cr11, cr9, {3}
 bd8:	41430063 	cmpmi	r3, r3, rrx
 bdc:	0042494c 	subeq	r4, r2, ip, asr #18
 be0:	4c525443 	cfldrdmi	mvd5, [r2], {67}	@ 0x43
 be4:	414f4c00 	cmpmi	pc, r0, lsl #24
 be8:	79530044 	ldmdbvc	r3, {r2, r6}^
 bec:	63695473 	cmnvs	r9, #1929379840	@ 0x73000000
 bf0:	61485f6b 	cmpvs	r8, fp, ror #30
 bf4:	656c646e 	strbvs	r6, [ip, #-1134]!	@ 0xfffffb92
 bf8:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
 bfc:	63695473 	cmnvs	r9, #1929379840	@ 0x73000000
 c00:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 c04:	74006570 	strvc	r6, [r0], #-1392	@ 0xfffffa90
 c08:	635f7974 	cmpvs	pc, #116, 18	@ 0x1d0000
 c0c:	62006766 	andvs	r6, r0, #26738688	@ 0x1980000
 c10:	72647561 	rsbvc	r7, r4, #406847488	@ 0x18400000
 c14:	00657461 	rsbeq	r7, r5, r1, ror #8
 c18:	54524155 	ldrbpl	r4, [r2], #-341	@ 0xfffffeab
 c1c:	72775f31 	rsbsvc	r5, r7, #49, 30	@ 0xc4
 c20:	00657469 	rsbeq	r7, r5, r9, ror #8
 c24:	656d6974 	strbvs	r6, [sp, #-2420]!	@ 0xfffff68c
 c28:	5f74756f 	svcpl	0x0074756f
 c2c:	6300736d 	movwvs	r7, #877	@ 0x36d
 c30:	6c5f6364 	mrrcvs	3, 6, r6, pc, cr4	@ <UNPREDICTABLE>
 c34:	63656e69 	cmnvs	r5, #1680	@ 0x690
 c38:	6e69646f 	cdpvs	4, 6, cr6, cr9, cr15, {3}
 c3c:	61750067 	cmnvs	r5, r7, rrx
 c40:	635f7472 	cmpvs	pc, #1912602624	@ 0x72000000
 c44:	006c7274 	rsbeq	r7, ip, r4, ror r2
 c48:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
 c4c:	78725f31 	ldmdavc	r2!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
 c50:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
 c54:	616c6674 	smcvs	50788	@ 0xc664
 c58:	54470067 	strbpl	r0, [r7], #-103	@ 0xffffff99
 c5c:	75005250 	strvc	r5, [r0, #-592]	@ 0xfffffdb0
 c60:	5f747261 	svcpl	0x00747261
 c64:	5f667562 	svcpl	0x00667562
 c68:	74697277 	strbtvc	r7, [r9], #-631	@ 0xfffffd89
 c6c:	53550065 	cmppl	r5, #101	@ 0x65
 c70:	31545241 	cmpcc	r4, r1, asr #4
 c74:	5152495f 	cmppl	r2, pc, asr r9
 c78:	646e6148 	strbtvs	r6, [lr], #-328	@ 0xfffffeb8
 c7c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 c80:	52415355 	subpl	r5, r1, #1409286145	@ 0x54000001
 c84:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
 c88:	65446570 	strbvs	r6, [r4, #-1392]	@ 0xfffffa90
 c8c:	64630066 	strbtvs	r0, [r3], #-102	@ 0xffffff9a
 c90:	756f5f63 	strbvc	r5, [pc, #-3939]!	@ fffffd35 <BootRAM+0xef704d6>
 c94:	41550074 	cmpmi	r5, r4, ror r0
 c98:	5f315452 	svcpl	0x00315452
 c9c:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
 ca0:	52415500 	subpl	r5, r1, #0, 10
 ca4:	675f3154 			@ <UNDEFINED> instruction: 0x675f3154
 ca8:	00737465 	rsbseq	r7, r3, r5, ror #8
 cac:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
 cb0:	6766635f 			@ <UNDEFINED> instruction: 0x6766635f
 cb4:	52415500 	subpl	r5, r1, #0, 10
 cb8:	725f3154 	subsvc	r3, pc, #84, 2
 cbc:	00646165 	rsbeq	r6, r4, r5, ror #2
 cc0:	69726170 	ldmdbvs	r2!, {r4, r5, r6, r8, sp, lr}^
 cc4:	75007974 	strvc	r7, [r0, #-2420]	@ 0xfffff68c
 cc8:	5f747261 	svcpl	0x00747261
 ccc:	5f667562 	svcpl	0x00667562
 cd0:	657a6973 	ldrbvs	r6, [sl, #-2419]!	@ 0xfffff68d
 cd4:	79747400 	ldmdbvc	r4!, {sl, ip, sp, lr}^
 cd8:	65646f6d 	strbvs	r6, [r4, #-3949]!	@ 0xfffff093
 cdc:	63727300 	cmnvs	r2, #0, 6
 ce0:	6f72702f 	svcvs	0x0072702f
 ce4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	@ 0xfffffe64
 ce8:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
 cec:	6f770063 	svcvs	0x00770063
 cf0:	69736472 	ldmdbvs	r3!, {r1, r4, r5, r6, sl, sp, lr}^
 cf4:	7500657a 	strvc	r6, [r0, #-1402]	@ 0xfffffa86
 cf8:	31747261 	cmncc	r4, r1, ror #4
 cfc:	0078745f 	rsbseq	r7, r8, pc, asr r4
 d00:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
 d04:	6675625f 			@ <UNDEFINED> instruction: 0x6675625f
 d08:	00726566 	rsbseq	r6, r2, r6, ror #10
 d0c:	74726175 	ldrbtvc	r6, [r2], #-373	@ 0xfffffe8b
 d10:	6675625f 			@ <UNDEFINED> instruction: 0x6675625f
 d14:	6165725f 	cmnvs	r5, pc, asr r2
 d18:	72700064 	rsbsvc	r0, r0, #100	@ 0x64
 d1c:	5f72676f 	svcpl	0x0072676f
 d20:	00676663 	rsbeq	r6, r7, r3, ror #12
 d24:	706f7473 	rsbvc	r7, pc, r3, ror r4	@ <UNPREDICTABLE>
 d28:	73746962 	cmnvc	r4, #1605632	@ 0x188000
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
       4:	0800157e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, ip}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	0800157e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, ip}
      10:	08001610 	stmdaeq	r0, {r4, r9, sl, ip}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      24:	08001594 	stmdaeq	r0, {r2, r4, r7, r8, sl, ip}
      28:	080015a0 	stmdaeq	r0, {r5, r7, r8, sl, ip}
      2c:	a0520001 	subsge	r0, r2, r1
      30:	aa080015 	bge	20008c <__Stack_Size+0x1ff08c>
      34:	02080015 	andeq	r0, r8, #21
      38:	00007300 	andeq	r7, r0, r0, lsl #6
	...
      44:	a0000000 	andge	r0, r0, r0
      48:	ac080015 	stcge	0, cr0, [r8], {21}
      4c:	01080015 	tsteq	r8, r5, lsl r0
      50:	15ac5200 	strne	r5, [ip, #512]!	@ 0x200
      54:	15b60800 	ldrne	r0, [r6, #2048]!	@ 0x800
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	00000073 	andeq	r0, r0, r3, ror r0
	...
      68:	15ac0000 	strne	r0, [ip, #0]!
      6c:	15b80800 	ldrne	r0, [r8, #2048]!	@ 0x800
      70:	00010800 	andeq	r0, r1, r0, lsl #16
      74:	0015b852 	andseq	fp, r5, r2, asr r8
      78:	0015be08 	andseq	fp, r5, r8, lsl #28
      7c:	73000208 	movwvc	r0, #520	@ 0x208
	...
      8c:	0015b800 	andseq	fp, r5, r0, lsl #16
      90:	0015c008 	andseq	ip, r5, r8
      94:	52000108 	andpl	r0, r0, #8, 2
      98:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
      9c:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
      a0:	00730002 	rsbseq	r0, r3, r2
	...
      b0:	080015c2 	stmdaeq	r0, {r1, r6, r7, r8, sl, ip}
      b4:	080015ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, ip}
      b8:	ce510001 	cdpgt	0, 5, cr0, cr1, cr1, {0}
      bc:	d8080015 	stmdale	r8, {r0, r2, r4}
      c0:	02080015 	andeq	r0, r8, #21
      c4:	00047200 	andeq	r7, r4, r0, lsl #4
	...
      d0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
      d4:	dc080015 	stcle	0, cr0, [r8], {21}
      d8:	01080015 	tsteq	r8, r5, lsl r0
      dc:	15dc5100 	ldrbne	r5, [ip, #256]	@ 0x100
      e0:	15de0800 	ldrbne	r0, [lr, #2048]	@ 0x800
      e4:	00020800 	andeq	r0, r2, r0, lsl #16
      e8:	00000472 	andeq	r0, r0, r2, ror r4
      ec:	00000000 	andeq	r0, r0, r0
      f0:	02000000 	andeq	r0, r0, #0
      f4:	00030302 	andeq	r0, r3, r2, lsl #6
      f8:	01d00000 	bicseq	r0, r0, r0
      fc:	01d00800 	bicseq	r0, r0, r0, lsl #16
     100:	00010800 	andeq	r0, r1, r0, lsl #16
     104:	0001d050 	andeq	sp, r1, r0, asr r0
     108:	0001d008 	andeq	sp, r1, r8
     10c:	50000108 	andpl	r0, r0, r8, lsl #2
     110:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
     114:	080001d8 	stmdaeq	r0, {r3, r4, r6, r7, r8}
     118:	7f700003 	svcvc	0x00700003
     11c:	0001d89f 	muleq	r1, pc, r8	@ <UNPREDICTABLE>
     120:	0001da08 	andeq	sp, r1, r8, lsl #20
     124:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     130:	01000001 	tsteq	r0, r1
     134:	00000001 	andeq	r0, r0, r1
     138:	00000000 	andeq	r0, r0, r0
     13c:	0800013a 	stmdaeq	r0, {r1, r3, r4, r5, r8}
     140:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
     144:	9f300002 	svcls	0x00300002
     148:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
     14c:	08000144 	stmdaeq	r0, {r2, r6, r8}
     150:	ff0a0007 			@ <UNDEFINED> instruction: 0xff0a0007
     154:	1c0072ff 	sfmne	f7, 4, [r0], {255}	@ 0xff
     158:	0001449f 	muleq	r1, pc, r4	@ <UNPREDICTABLE>
     15c:	00014608 	andeq	r4, r1, r8, lsl #12
     160:	40000708 	andmi	r0, r0, r8, lsl #14
     164:	0072243c 	rsbseq	r2, r2, ip, lsr r4
     168:	01469f1c 	cmpeq	r6, ip, lsl pc
     16c:	014c0800 	cmpeq	ip, r0, lsl #16
     170:	00070800 	andeq	r0, r7, r0, lsl #16
     174:	72ffff0a 	rscsvc	pc, pc, #10, 30	@ 0x28
     178:	4c9f1c00 	ldcmi	12, cr1, [pc], {0}
     17c:	4e080001 	cdpmi	0, 0, cr0, cr8, cr1, {0}
     180:	06080001 	streq	r0, [r8], -r1
     184:	ffff0c00 			@ <UNDEFINED> instruction: 0xffff0c00
     188:	509f0001 	addspl	r0, pc, r1
     18c:	cc080001 	stcgt	0, cr0, [r8], {1}
     190:	06080001 	streq	r0, [r8], -r1
     194:	ffff0c00 			@ <UNDEFINED> instruction: 0xffff0c00
     198:	009f0001 	addseq	r0, pc, r1
	...
     1a4:	01010000 	mrseq	r0, (UNDEF: 1)
     1a8:	01010000 	mrseq	r0, (UNDEF: 1)
     1ac:	01000000 	mrseq	r0, (UNDEF: 0)
     1b0:	01010000 	mrseq	r0, (UNDEF: 1)
     1b4:	4c000000 	stcmi	0, cr0, [r0], {-0}
     1b8:	4e080001 	cdpmi	0, 0, cr0, cr8, cr1, {0}
     1bc:	07080001 	streq	r0, [r8, -r1]
     1c0:	ffff0a00 			@ <UNDEFINED> instruction: 0xffff0a00
     1c4:	9f1c0072 	svcls	0x001c0072
     1c8:	08000150 	stmdaeq	r0, {r4, r6, r8}
     1cc:	0800015c 	stmdaeq	r0, {r2, r3, r4, r6, r8}
     1d0:	ff0c0006 			@ <UNDEFINED> instruction: 0xff0c0006
     1d4:	9f0001ff 	svcls	0x000001ff
     1d8:	0800015c 	stmdaeq	r0, {r2, r3, r4, r6, r8}
     1dc:	08000160 	stmdaeq	r0, {r5, r6, r8}
     1e0:	9f300002 	svcls	0x00300002
     1e4:	08000160 	stmdaeq	r0, {r5, r6, r8}
     1e8:	0800016a 	stmdaeq	r0, {r1, r3, r5, r6, r8}
     1ec:	ff0a0007 			@ <UNDEFINED> instruction: 0xff0a0007
     1f0:	1c0072ff 	sfmne	f7, 4, [r0], {255}	@ 0xff
     1f4:	00016a9f 	muleq	r1, pc, sl	@ <UNPREDICTABLE>
     1f8:	00016c08 	andeq	r6, r1, r8, lsl #24
     1fc:	40000708 	andmi	r0, r0, r8, lsl #14
     200:	0072243c 	rsbseq	r2, r2, ip, lsr r4
     204:	016c9f1c 	cmneq	ip, ip, lsl pc
     208:	01720800 	cmneq	r2, r0, lsl #16
     20c:	00070800 	andeq	r0, r7, r0, lsl #16
     210:	72ffff0a 	rscsvc	pc, pc, #10, 30	@ 0x28
     214:	ac9f1c00 	ldcge	12, cr1, [pc], {0}
     218:	b0080001 	andlt	r0, r8, r1
     21c:	02080001 	andeq	r0, r8, #1
     220:	b09f3000 	addslt	r3, pc, r0
     224:	b6080001 	strlt	r0, [r8], -r1
     228:	07080001 	streq	r0, [r8, -r1]
     22c:	ffff0a00 			@ <UNDEFINED> instruction: 0xffff0a00
     230:	9f1c0072 	svcls	0x001c0072
     234:	080001b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8}
     238:	080001b8 	stmdaeq	r0, {r3, r4, r5, r7, r8}
     23c:	3c400007 	mcrrcc	0, 0, r0, r0, cr7
     240:	1c007224 	sfmne	f7, 4, [r0], {36}	@ 0x24
     244:	0001b89f 	muleq	r1, pc, r8	@ <UNPREDICTABLE>
     248:	0001cc08 	andeq	ip, r1, r8, lsl #24
     24c:	0a000708 	beq	1e74 <__Stack_Size+0xe74>
     250:	0072ffff 	ldrshteq	pc, [r2], #-255	@ 0xffffff01	@ <UNPREDICTABLE>
     254:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
     264:	02010100 	andeq	r0, r1, #0, 2
     268:	05030302 	streq	r0, [r3, #-770]	@ 0xfffffcfe
     26c:	00000005 	andeq	r0, r0, r5
     270:	00000000 	andeq	r0, r0, r0
     274:	014c0000 	mrseq	r0, (UNDEF: 76)
     278:	014e0800 	cmpeq	lr, r0, lsl #16
     27c:	00020800 	andeq	r0, r2, r0, lsl #16
     280:	01520473 	cmpeq	r2, r3, ror r4
     284:	01600800 	cmneq	r0, r0, lsl #16
     288:	00010800 	andeq	r0, r1, r0, lsl #16
     28c:	00016052 	andeq	r6, r1, r2, asr r0
     290:	00017208 	andeq	r7, r1, r8, lsl #4
     294:	73000208 	movwvc	r0, #520	@ 0x208
     298:	00019604 	andeq	r9, r1, r4, lsl #12
     29c:	00019608 	andeq	r9, r1, r8, lsl #12
     2a0:	51000108 	tstpl	r0, r8, lsl #2
     2a4:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     2a8:	08000196 	stmdaeq	r0, {r1, r2, r4, r7, r8}
     2ac:	00710009 	rsbseq	r0, r1, r9
     2b0:	8bffff11 	blhi	fffffefc <BootRAM+0xef7069d>
     2b4:	969f1a7e 			@ <UNDEFINED> instruction: 0x969f1a7e
     2b8:	96080001 	strls	r0, [r8], -r1
     2bc:	0d080001 	stceq	0, cr0, [r8, #-4]
     2c0:	11007100 	mrsne	r7, (UNDEF: 16)
     2c4:	7e8bffff 	mcrvc	15, 4, pc, cr11, cr15, {7}	@ <UNPREDICTABLE>
     2c8:	24404d1a 	strbcs	r4, [r0], #-3354	@ 0xfffff2e6
     2cc:	01969f21 	orrseq	r9, r6, r1, lsr #30
     2d0:	01960800 	orrseq	r0, r6, r0, lsl #16
     2d4:	000d0800 	andeq	r0, sp, r0, lsl #16
     2d8:	8f110071 	svchi	0x00110071
     2dc:	1a7e8bfe 	bne	1fa32dc <__Stack_Size+0x1fa22dc>
     2e0:	2124404d 			@ <UNDEFINED> instruction: 0x2124404d
     2e4:	0001969f 	muleq	r1, pc, r6	@ <UNPREDICTABLE>
     2e8:	00019a08 	andeq	r9, r1, r8, lsl #20
     2ec:	71000d08 	tstvc	r0, r8, lsl #26
     2f0:	8e8f1100 	rmfhie	f1, f7, f0
     2f4:	4d1a7e8b 	ldcmi	14, cr7, [sl, #-556]	@ 0xfffffdd4
     2f8:	9f212440 	svcls	0x00212440
     2fc:	0800019a 	stmdaeq	r0, {r1, r3, r4, r7, r8}
     300:	0800019e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8}
     304:	00720007 	rsbseq	r0, r2, r7
     308:	2124404d 			@ <UNDEFINED> instruction: 0x2124404d
     30c:	00019e9f 	muleq	r1, pc, lr	@ <UNPREDICTABLE>
     310:	0001a608 	andeq	sl, r1, r8, lsl #12
     314:	52000108 	andpl	r0, r0, #8, 2
     318:	080001a6 	stmdaeq	r0, {r1, r2, r5, r7, r8}
     31c:	080001ac 	stmdaeq	r0, {r2, r3, r5, r7, r8}
     320:	04730002 	ldrbteq	r0, [r3], #-2
     324:	080001ac 	stmdaeq	r0, {r2, r3, r5, r7, r8}
     328:	080001b0 	stmdaeq	r0, {r4, r5, r7, r8}
     32c:	0071000f 	rsbseq	r0, r1, pc
     330:	8b808f11 	blhi	fe023f7c <BootRAM+0xcf9471d>
     334:	000c1a7e 	andeq	r1, ip, lr, ror sl
     338:	21001d04 	tstcs	r0, r4, lsl #26
     33c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     340:	00000000 	andeq	r0, r0, r0
     344:	0004d800 	andeq	sp, r4, r0, lsl #16
     348:	0004da00 	andeq	sp, r4, r0, lsl #20
     34c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     350:	0004da00 	andeq	sp, r4, r0, lsl #20
     354:	00053400 	andeq	r3, r5, r0, lsl #8
     358:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     35c:	0000000c 	andeq	r0, r0, ip
	...
     368:	0004d800 	andeq	sp, r4, r0, lsl #16
     36c:	0004e800 	andeq	lr, r4, r0, lsl #16
     370:	50000100 	andpl	r0, r0, r0, lsl #2
     374:	000004e8 	andeq	r0, r0, r8, ror #9
     378:	00000534 	andeq	r0, r0, r4, lsr r5
     37c:	01f30004 	mvnseq	r0, r4
     380:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     390:	000004d8 	ldrdeq	r0, [r0], -r8
     394:	00000502 	andeq	r0, r0, r2, lsl #10
     398:	02510001 	subseq	r0, r1, #1
     39c:	06000005 	streq	r0, [r0], -r5
     3a0:	03000005 	movweq	r0, #5
     3a4:	9f027100 	svcls	0x00027100
     3a8:	00000506 	andeq	r0, r0, r6, lsl #10
     3ac:	00000534 	andeq	r0, r0, r4, lsr r5
     3b0:	01f30004 	mvnseq	r0, r4
     3b4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     3c0:	04e40000 	strbteq	r0, [r4], #0
     3c4:	04f20000 	ldrbteq	r0, [r2], #0
     3c8:	00010000 	andeq	r0, r1, r0
     3cc:	0004f252 	andeq	pc, r4, r2, asr r2	@ <UNPREDICTABLE>
     3d0:	00051400 	andeq	r1, r5, r0, lsl #8
     3d4:	73000b00 	movwvc	r0, #2816	@ 0xb00
     3d8:	23243300 			@ <UNDEFINED> instruction: 0x23243300
     3dc:	8081c080 	addhi	ip, r1, r0, lsl #1
     3e0:	00009f04 	andeq	r9, r0, r4, lsl #30
	...
     3ec:	000004ec 	andeq	r0, r0, ip, ror #9
     3f0:	00000534 	andeq	r0, r0, r4, lsr r5
     3f4:	00500001 	subseq	r0, r0, r1
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	01000000 	mrseq	r0, (UNDEF: 0)
     400:	00000000 	andeq	r0, r0, r0
     404:	0004ee02 	andeq	lr, r4, r2, lsl #28
     408:	0004f800 	andeq	pc, r4, r0, lsl #16
     40c:	70000500 	andvc	r0, r0, r0, lsl #10
     410:	9f263101 	svcls	0x00263101
     414:	000004f8 	strdeq	r0, [r0], -r8
     418:	000004fe 	strdeq	r0, [r0], -lr
     41c:	fe520001 	cdp2	0, 5, cr0, cr2, cr1, {0}
     420:	32000004 	andcc	r0, r0, #4
     424:	05000005 	streq	r0, [r0, #-5]
     428:	31017000 	mrscc	r7, (UNDEF: 1)
     42c:	00009f26 	andeq	r9, r0, r6, lsr #30
	...
     438:	02010100 	andeq	r0, r1, #0, 2
     43c:	00000500 	andeq	r0, r0, r0, lsl #10
     440:	0000050a 	andeq	r0, r0, sl, lsl #10
     444:	0a550001 	beq	1540450 <__Stack_Size+0x153f450>
     448:	10000005 	andne	r0, r0, r5
     44c:	03000005 	movweq	r0, #5
     450:	9f7c7500 	svcls	0x007c7500
     454:	00000510 	andeq	r0, r0, r0, lsl r5
     458:	00000532 	andeq	r0, r0, r2, lsr r5
     45c:	00550001 	subseq	r0, r5, r1
     460:	00000000 	andeq	r0, r0, r0
     464:	02000000 	andeq	r0, r0, #0
     468:	00050000 	andeq	r0, r5, r0
     46c:	00050600 	andeq	r0, r5, r0, lsl #12
     470:	30000200 	andcc	r0, r0, r0, lsl #4
     474:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     478:	00000000 	andeq	r0, r0, r0
     47c:	00044c00 	andeq	r4, r4, r0, lsl #24
     480:	00044e00 	andeq	r4, r4, r0, lsl #28
     484:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     488:	00044e00 	andeq	r4, r4, r0, lsl #28
     48c:	0004a000 	andeq	sl, r4, r0
     490:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     494:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     4a0:	4c000000 	stcmi	0, cr0, [r0], {-0}
     4a4:	72000004 	andvc	r0, r0, #4
     4a8:	01000004 	tsteq	r0, r4
     4ac:	04725000 	ldrbteq	r5, [r2], #-0
     4b0:	04940000 	ldreq	r0, [r4], #0
     4b4:	00040000 	andeq	r0, r4, r0
     4b8:	9f5001f3 	svcls	0x005001f3
     4bc:	00000494 	muleq	r0, r4, r4
     4c0:	000004a0 	andeq	r0, r0, r0, lsr #9
     4c4:	00500001 	subseq	r0, r0, r1
	...
     4d0:	00045a00 	andeq	r5, r4, r0, lsl #20
     4d4:	0004a000 	andeq	sl, r4, r0
     4d8:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
	...
     4e4:	04680000 	strbteq	r0, [r8], #-0
     4e8:	04a00000 	strteq	r0, [r0], #0
     4ec:	00010000 	andeq	r0, r1, r0
     4f0:	00000056 	andeq	r0, r0, r6, asr r0
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	68000100 	stmdavs	r0, {r8}
     4fc:	a0000004 	andge	r0, r0, r4
     500:	01000004 	tsteq	r0, r4
     504:	00005100 	andeq	r5, r0, r0, lsl #2
     508:	00000000 	andeq	r0, r0, r0
     50c:	02000000 	andeq	r0, r0, #0
     510:	01000002 	tsteq	r0, r2
     514:	0000046a 	andeq	r0, r0, sl, ror #8
     518:	0000046a 	andeq	r0, r0, sl, ror #8
     51c:	6a530001 	bvs	14c0528 <__Stack_Size+0x14bf528>
     520:	80000004 	andhi	r0, r0, r4
     524:	08000004 	stmdaeq	r0, {r2}
     528:	32007500 	andcc	r7, r0, #0, 10
     52c:	22007324 	andcs	r7, r0, #36, 6	@ 0x90000000
     530:	0004949f 	muleq	r4, pc, r4	@ <UNPREDICTABLE>
     534:	00049c00 	andeq	r9, r4, r0, lsl #24
     538:	75000800 	strvc	r0, [r0, #-2048]	@ 0xfffff800
     53c:	73243200 			@ <UNDEFINED> instruction: 0x73243200
     540:	009f2200 	addseq	r2, pc, r0, lsl #4
     544:	00000000 	andeq	r0, r0, r0
     548:	02000000 	andeq	r0, r0, #0
     54c:	6a000101 	bvs	958 <_Minimum_Stack_Size+0x858>
     550:	9c000004 	stcls	0, cr0, [r0], {4}
     554:	01000004 	tsteq	r0, r4
     558:	049c5500 	ldreq	r5, [ip], #1280	@ 0x500
     55c:	049e0000 	ldreq	r0, [lr], #0
     560:	00030000 	andeq	r0, r3, r0
     564:	009f0175 	addseq	r0, pc, r5, ror r1	@ <UNPREDICTABLE>
     568:	00000000 	andeq	r0, r0, r0
     56c:	04000000 	streq	r0, [r0], #-0
     570:	08000003 	stmdaeq	r0, {r0, r1}
     574:	02000003 	andeq	r0, r0, #3
     578:	08007d00 	stmdaeq	r0, {r8, sl, fp, ip, sp, lr}
     57c:	4c000003 	stcmi	0, cr0, [r0], {3}
     580:	02000004 	andeq	r0, r0, #4
     584:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
     590:	00031e00 	andeq	r1, r3, r0, lsl #28
     594:	00036e00 	andeq	r6, r3, r0, lsl #28
     598:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
     5a4:	00000002 	andeq	r0, r0, r2
     5a8:	000003aa 	andeq	r0, r0, sl, lsr #7
     5ac:	000003b4 			@ <UNDEFINED> instruction: 0x000003b4
     5b0:	9f300002 	svcls	0x00300002
     5b4:	000003b4 			@ <UNDEFINED> instruction: 0x000003b4
     5b8:	000003b6 			@ <UNDEFINED> instruction: 0x000003b6
     5bc:	74380005 	ldrtvc	r0, [r8], #-5
     5c0:	009f1c00 	addseq	r1, pc, r0, lsl #24
     5c4:	00000000 	andeq	r0, r0, r0
     5c8:	c0000000 	andgt	r0, r0, r0
     5cc:	c6000001 	strgt	r0, [r0], -r1
     5d0:	02000001 	andeq	r0, r0, #1
     5d4:	c6007d00 	strgt	r7, [r0], -r0, lsl #26
     5d8:	04000001 	streq	r0, [r0], #-1
     5dc:	02000003 	andeq	r0, r0, #3
     5e0:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
     5ec:	c0000202 	andgt	r0, r0, r2, lsl #4
     5f0:	d6000001 	strle	r0, [r0], -r1
     5f4:	01000001 	tsteq	r0, r1
     5f8:	01d65000 	bicseq	r5, r6, r0
     5fc:	03040000 	movweq	r0, #16384	@ 0x4000
     600:	00010000 	andeq	r0, r1, r0
     604:	00000055 	andeq	r0, r0, r5, asr r0
	...
     614:	0001c000 	andeq	ip, r1, r0
     618:	00022c00 	andeq	r2, r2, r0, lsl #24
     61c:	51000100 	mrspl	r0, (UNDEF: 16)
     620:	0000022c 	andeq	r0, r0, ip, lsr #4
     624:	00000270 	andeq	r0, r0, r0, ror r2
     628:	01f30004 	mvnseq	r0, r4
     62c:	02709f51 	rsbseq	r9, r0, #324	@ 0x144
     630:	02820000 	addeq	r0, r2, #0
     634:	00010000 	andeq	r0, r1, r0
     638:	00028251 	andeq	r8, r2, r1, asr r2
     63c:	00030400 	andeq	r0, r3, r0, lsl #8
     640:	f3000400 	vshl.u8	d0, d0, d0
     644:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     650:	c0000000 	andgt	r0, r0, r0
     654:	d6000001 	strle	r0, [r0], -r1
     658:	01000001 	tsteq	r0, r1
     65c:	01d65300 	bicseq	r5, r6, r0, lsl #6
     660:	03040000 	movweq	r0, #16384	@ 0x4000
     664:	00010000 	andeq	r0, r1, r0
     668:	00000057 	andeq	r0, r0, r7, asr r0
     66c:	00000000 	andeq	r0, r0, r0
     670:	00000100 	andeq	r0, r0, r0, lsl #2
     674:	00000000 	andeq	r0, r0, r0
     678:	0001d600 	andeq	sp, r1, r0, lsl #12
     67c:	00023600 	andeq	r3, r2, r0, lsl #12
     680:	70000600 	andvc	r0, r0, r0, lsl #12
     684:	1a800900 	bne	fe002a8c <BootRAM+0xcf7322d>
     688:	0002369f 	muleq	r2, pc, r6	@ <UNPREDICTABLE>
     68c:	00027000 	andeq	r7, r2, r0
     690:	f3000700 	vabd.u8	d0, d0, d0
     694:	80095001 	andhi	r5, r9, r1
     698:	02709f1a 	rsbseq	r9, r0, #26, 30	@ 0x68
     69c:	02820000 	addeq	r0, r2, #0
     6a0:	00060000 	andeq	r0, r6, r0
     6a4:	80090070 	andhi	r0, r9, r0, ror r0
     6a8:	02829f1a 	addeq	r9, r2, #26, 30	@ 0x68
     6ac:	03040000 	movweq	r0, #16384	@ 0x4000
     6b0:	00070000 	andeq	r0, r7, r0
     6b4:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     6b8:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     6c4:	02020101 	andeq	r0, r2, #1073741824	@ 0x40000000
	...
     6d8:	00020c00 	andeq	r0, r2, r0, lsl #24
     6dc:	00020c00 	andeq	r0, r2, r0, lsl #24
     6e0:	53000100 	movwpl	r0, #256	@ 0x100
     6e4:	0000020c 	andeq	r0, r0, ip, lsl #4
     6e8:	0000020c 	andeq	r0, r0, ip, lsl #4
     6ec:	0073000b 	rsbseq	r0, r3, fp
     6f0:	1a0f0f0a 	bne	3c4320 <__Stack_Size+0x3c3320>
     6f4:	2180800b 	orrcs	r8, r0, fp
     6f8:	00020c9f 	muleq	r2, pc, ip	@ <UNPREDICTABLE>
     6fc:	00021000 	andeq	r1, r2, r0
     700:	73001100 	movwvc	r1, #256	@ 0x100
     704:	0f000a00 	svceq	0x00000a00
     708:	0800751a 	stmdaeq	r0, {r1, r3, r4, r8, sl, ip, sp, lr}
     70c:	0b211aff 	bleq	847310 <__Stack_Size+0x846310>
     710:	9f218080 	svcls	0x00218080
     714:	00000214 	andeq	r0, r0, r4, lsl r2
     718:	00000220 	andeq	r0, r0, r0, lsr #4
     71c:	00730007 	rsbseq	r0, r3, r7
     720:	2180800b 	orrcs	r8, r0, fp
     724:	0002289f 	muleq	r2, pc, r8	@ <UNPREDICTABLE>
     728:	00023000 	andeq	r3, r2, r0
     72c:	53000100 	movwpl	r0, #256	@ 0x100
     730:	00000230 	andeq	r0, r0, r0, lsr r2
     734:	00000244 	andeq	r0, r0, r4, asr #4
     738:	00740002 	rsbseq	r0, r4, r2
     73c:	0000024e 	andeq	r0, r0, lr, asr #4
     740:	00000252 	andeq	r0, r0, r2, asr r2
     744:	70530001 	subsvc	r0, r3, r1
     748:	74000002 	strvc	r0, [r0], #-2
     74c:	07000002 	streq	r0, [r0, -r2]
     750:	0b007300 	bleq	1d358 <__Stack_Size+0x1c358>
     754:	9f218080 	svcls	0x00218080
     758:	00000276 	andeq	r0, r0, r6, ror r2
     75c:	0000027a 	andeq	r0, r0, sl, ror r2
     760:	00730007 	rsbseq	r0, r3, r7
     764:	2180800b 	orrcs	r8, r0, fp
     768:	00027c9f 	muleq	r2, pc, ip	@ <UNPREDICTABLE>
     76c:	00028000 	andeq	r8, r2, r0
     770:	73000700 	movwvc	r0, #1792	@ 0x700
     774:	80800b00 	addhi	r0, r0, r0, lsl #22
     778:	02829f21 	addeq	r9, r2, #33, 30	@ 0x84
     77c:	02840000 	addeq	r0, r4, #0
     780:	00020000 	andeq	r0, r2, r0
     784:	00000074 	andeq	r0, r0, r4, ror r0
     788:	00000000 	andeq	r0, r0, r0
     78c:	00bc0000 	adcseq	r0, ip, r0
     790:	00be0000 	adcseq	r0, lr, r0
     794:	00020000 	andeq	r0, r2, r0
     798:	00be007d 	adcseq	r0, lr, sp, ror r0
     79c:	01c00000 	biceq	r0, r0, r0
     7a0:	00020000 	andeq	r0, r2, r0
     7a4:	0000147d 	andeq	r1, r0, sp, ror r4
     7a8:	00000000 	andeq	r0, r0, r0
     7ac:	02000000 	andeq	r0, r0, #0
     7b0:	00bc0002 	adcseq	r0, ip, r2
     7b4:	00d00000 	sbcseq	r0, r0, r0
     7b8:	00010000 	andeq	r0, r1, r0
     7bc:	0000d050 	andeq	sp, r0, r0, asr r0
     7c0:	0001c000 	andeq	ip, r1, r0
     7c4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
     7d8:	000000bc 	strheq	r0, [r0], -ip
     7dc:	0000013e 	andeq	r0, r0, lr, lsr r1
     7e0:	3e510001 	cdpcc	0, 5, cr0, cr1, cr1, {0}
     7e4:	62000001 	andvs	r0, r0, #1
     7e8:	04000001 	streq	r0, [r0], #-1
     7ec:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
     7f0:	0001629f 	muleq	r1, pc, r2	@ <UNPREDICTABLE>
     7f4:	00017200 	andeq	r7, r1, r0, lsl #4
     7f8:	51000100 	mrspl	r0, (UNDEF: 16)
     7fc:	00000172 	andeq	r0, r0, r2, ror r1
     800:	000001c0 	andeq	r0, r0, r0, asr #3
     804:	01f30004 	mvnseq	r0, r4
     808:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     818:	000000bc 	strheq	r0, [r0], -ip
     81c:	0000015c 	andeq	r0, r0, ip, asr r1
     820:	5c520001 	mrrcpl	0, 0, r0, r2, cr1
     824:	5e000001 	cdppl	0, 0, cr0, cr0, cr1, {0}
     828:	04000001 	streq	r0, [r0], #-1
     82c:	5201f300 	andpl	pc, r1, #0, 6
     830:	0001629f 	muleq	r1, pc, r2	@ <UNPREDICTABLE>
     834:	0001c000 	andeq	ip, r1, r0
     838:	52000100 	andpl	r0, r0, #0, 2
	...
     848:	000000bc 	strheq	r0, [r0], -ip
     84c:	000000d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
     850:	d0530001 	subsle	r0, r3, r1
     854:	c0000000 	andgt	r0, r0, r0
     858:	01000001 	tsteq	r0, r1
     85c:	00005e00 	andeq	r5, r0, r0, lsl #28
     860:	00000000 	andeq	r0, r0, r0
     864:	00010000 	andeq	r0, r1, r0
     868:	00d00000 	sbcseq	r0, r0, r0
     86c:	012e0000 			@ <UNDEFINED> instruction: 0x012e0000
     870:	00060000 	andeq	r0, r6, r0
     874:	80090070 	andhi	r0, r9, r0, ror r0
     878:	012e9f1a 			@ <UNDEFINED> instruction: 0x012e9f1a
     87c:	01c00000 	biceq	r0, r0, r0
     880:	00070000 	andeq	r0, r7, r0
     884:	095001f3 	ldmdbeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
     888:	009f1a80 	addseq	r1, pc, r0, lsl #21
	...
     894:	02020101 	andeq	r0, r2, #1073741824	@ 0x40000000
	...
     8a0:	0000fe00 	andeq	pc, r0, r0, lsl #28
     8a4:	0000fe00 	andeq	pc, r0, r0, lsl #28
     8a8:	53000100 	movwpl	r0, #256	@ 0x100
     8ac:	000000fe 	strdeq	r0, [r0], -lr
     8b0:	000000fe 	strdeq	r0, [r0], -lr
     8b4:	0073000b 	rsbseq	r0, r3, fp
     8b8:	1a0f0f0a 	bne	3c44e8 <__Stack_Size+0x3c34e8>
     8bc:	2180800b 	orrcs	r8, r0, fp
     8c0:	0000fe9f 	muleq	r0, pc, lr	@ <UNPREDICTABLE>
     8c4:	00010400 	andeq	r0, r1, r0, lsl #8
     8c8:	73001100 	movwvc	r1, #256	@ 0x100
     8cc:	0f000a00 	svceq	0x00000a00
     8d0:	0800771a 	stmdaeq	r0, {r1, r3, r4, r8, r9, sl, ip, sp, lr}
     8d4:	0b211aff 	bleq	8474d8 <__Stack_Size+0x8464d8>
     8d8:	9f218080 	svcls	0x00218080
     8dc:	00000108 	andeq	r0, r0, r8, lsl #2
     8e0:	00000114 	andeq	r0, r0, r4, lsl r1
     8e4:	00730007 	rsbseq	r0, r3, r7
     8e8:	2180800b 	orrcs	r8, r0, fp
     8ec:	0001169f 	muleq	r1, pc, r6	@ <UNPREDICTABLE>
     8f0:	00011a00 	andeq	r1, r1, r0, lsl #20
     8f4:	73000700 	movwvc	r0, #1792	@ 0x700
     8f8:	80800b00 	addhi	r0, r0, r0, lsl #22
     8fc:	01629f21 	cmneq	r2, r1, lsr #30
     900:	01660000 	cmneq	r6, r0
     904:	00070000 	andeq	r0, r7, r0
     908:	800b0073 	andhi	r0, fp, r3, ror r0
     90c:	689f2180 	ldmvs	pc, {r7, r8, sp}	@ <UNPREDICTABLE>
     910:	6c000001 	stcvs	0, cr0, [r0], {1}
     914:	07000001 	streq	r0, [r0, -r1]
     918:	0b007300 	bleq	1d520 <__Stack_Size+0x1c520>
     91c:	9f218080 	svcls	0x00218080
	...
     928:	00000534 	andeq	r0, r0, r4, lsr r5
     92c:	00000536 	andeq	r0, r0, r6, lsr r5
     930:	007d0002 	rsbseq	r0, sp, r2
     934:	00000536 	andeq	r0, r0, r6, lsr r5
     938:	00000558 	andeq	r0, r0, r8, asr r5
     93c:	187d0002 	ldmdane	sp!, {r1}^
     940:	00000558 	andeq	r0, r0, r8, asr r5
     944:	0000055a 	andeq	r0, r0, sl, asr r5
     948:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
     94c:	0000055a 	andeq	r0, r0, sl, asr r5
     950:	00000594 	muleq	r0, r4, r5
     954:	187d0002 	ldmdane	sp!, {r1}^
     958:	00000594 	muleq	r0, r4, r5
     95c:	00000598 	muleq	r0, r8, r5
     960:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
     964:	00000598 	muleq	r0, r8, r5
     968:	0000059c 	muleq	r0, ip, r5
     96c:	007d0002 	rsbseq	r0, sp, r2
     970:	0000059c 	muleq	r0, ip, r5
     974:	00000698 	muleq	r0, r8, r6
     978:	187d0002 	ldmdane	sp!, {r1}^
	...
     988:	00000534 	andeq	r0, r0, r4, lsr r5
     98c:	00000546 	andeq	r0, r0, r6, asr #10
     990:	46500001 	ldrbmi	r0, [r0], -r1
     994:	98000005 	stmdals	r0, {r0, r2}
     998:	04000006 	streq	r0, [r0], #-6
     99c:	5001f300 	andpl	pc, r1, r0, lsl #6
     9a0:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     9a4:	00000000 	andeq	r0, r0, r0
     9a8:	00000100 	andeq	r0, r0, r0, lsl #2
     9ac:	00057200 	andeq	r7, r5, r0, lsl #4
     9b0:	00059200 	andeq	r9, r5, r0, lsl #4
     9b4:	30000200 	andcc	r0, r0, r0, lsl #4
     9b8:	0005d69f 	muleq	r5, pc, r6	@ <UNPREDICTABLE>
     9bc:	00062e00 	andeq	r2, r6, r0, lsl #28
     9c0:	30000200 	andcc	r0, r0, r0, lsl #4
     9c4:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     9c8:	00000000 	andeq	r0, r0, r0
     9cc:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     9d8:	00055200 	andeq	r5, r5, r0, lsl #4
     9dc:	00055600 	andeq	r5, r5, r0, lsl #12
     9e0:	70000600 	andvc	r0, r0, r0, lsl #12
     9e4:	1a7f0800 	bne	1fc29ec <__Stack_Size+0x1fc19ec>
     9e8:	0005769f 	muleq	r5, pc, r6	@ <UNPREDICTABLE>
     9ec:	00059200 	andeq	r9, r5, r0, lsl #4
     9f0:	50000100 	andpl	r0, r0, r0, lsl #2
     9f4:	000005d6 	ldrdeq	r0, [r0], -r6
     9f8:	000005e4 	andeq	r0, r0, r4, ror #11
     9fc:	e4500001 	ldrb	r0, [r0], #-1
     a00:	eb000005 	bl	a1c <_Minimum_Stack_Size+0x91c>
     a04:	0b000005 	bleq	a20 <_Minimum_Stack_Size+0x920>
     a08:	00620300 	rsbeq	r0, r2, r0, lsl #6
     a0c:	01942000 	orrseq	r2, r4, r0
     a10:	9f1a7f08 	svcls	0x001a7f08
     a14:	00000610 	andeq	r0, r0, r0, lsl r6
     a18:	00000624 	andeq	r0, r0, r4, lsr #12
     a1c:	24500001 	ldrbcs	r0, [r0], #-1
     a20:	2b000006 	blcs	a40 <_Minimum_Stack_Size+0x940>
     a24:	0b000006 	bleq	a44 <_Minimum_Stack_Size+0x944>
     a28:	00620300 	rsbeq	r0, r2, r0, lsl #6
     a2c:	01942000 	orrseq	r2, r4, r0
     a30:	9f1a7f08 	svcls	0x001a7f08
	...
     a3c:	058e0001 	streq	r0, [lr, #1]
     a40:	05920000 	ldreq	r0, [r2]
     a44:	00020000 	andeq	r0, r2, r0
     a48:	00009f32 	andeq	r9, r0, r2, lsr pc
     a4c:	00000000 	andeq	r0, r0, r0
     a50:	00010000 	andeq	r0, r1, r0
     a54:	0000058e 	andeq	r0, r0, lr, lsl #11
     a58:	00000592 	muleq	r0, r2, r5
     a5c:	10030006 	andne	r0, r3, r6
     a60:	9f080016 	svcls	0x00080016
	...
     a6c:	058e0001 	streq	r0, [lr, #1]
     a70:	05920000 	ldreq	r0, [r2]
     a74:	00020000 	andeq	r0, r2, r0
     a78:	00009f30 	andeq	r9, r0, r0, lsr pc
     a7c:	00000000 	andeq	r0, r0, r0
     a80:	00010000 	andeq	r0, r1, r0
     a84:	000005fe 	strdeq	r0, [r0], -lr
     a88:	0000060d 	andeq	r0, r0, sp, lsl #12
     a8c:	6a910002 	bvs	fe440a9c <BootRAM+0xd3b123d>
	...
     a98:	05fe0001 	ldrbeq	r0, [lr, #1]!
     a9c:	060d0000 	streq	r0, [sp], -r0
     aa0:	00020000 	andeq	r0, r2, r0
     aa4:	00006c91 	muleq	r0, r1, ip
     aa8:	00000000 	andeq	r0, r0, r0
     aac:	00010000 	andeq	r0, r1, r0
     ab0:	00000610 	andeq	r0, r0, r0, lsl r6
     ab4:	00000616 	andeq	r0, r0, r6, lsl r6
     ab8:	9f310002 	svcls	0x00310002
	...
     ac4:	06100001 	ldreq	r0, [r0], -r1
     ac8:	06160000 	ldreq	r0, [r6], -r0
     acc:	00060000 	andeq	r0, r6, r0
     ad0:	00006c03 	andeq	r6, r0, r3, lsl #24
     ad4:	00009f20 	andeq	r9, r0, r0, lsr #30
     ad8:	00000000 	andeq	r0, r0, r0
     adc:	00010000 	andeq	r0, r1, r0
     ae0:	00000610 	andeq	r0, r0, r0, lsl r6
     ae4:	00000616 	andeq	r0, r0, r6, lsl r6
     ae8:	9f300002 	svcls	0x00300002
	...
     af4:	05bc0000 	ldreq	r0, [ip, #0]!
     af8:	05d00000 	ldrbeq	r0, [r0]
     afc:	00010000 	andeq	r0, r1, r0
     b00:	00000054 	andeq	r0, r0, r4, asr r0
     b04:	00000000 	andeq	r0, r0, r0
     b08:	bc000100 	stflts	f0, [r0], {-0}
     b0c:	c2000005 	andgt	r0, r0, #5
     b10:	02000005 	andeq	r0, r0, #5
     b14:	009f3000 	addseq	r3, pc, r0
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	02000000 	andeq	r0, r0, #0
     b20:	00055e00 	andeq	r5, r5, r0, lsl #28
     b24:	00056a00 	andeq	r6, r5, r0, lsl #20
     b28:	30000200 	andcc	r0, r0, r0, lsl #4
     b2c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     b30:	00000000 	andeq	r0, r0, r0
     b34:	5e000200 	cdppl	2, 0, cr0, cr0, cr0, {0}
     b38:	6a000005 	bvs	b54 <_Minimum_Stack_Size+0xa54>
     b3c:	06000005 	streq	r0, [r0], -r5
     b40:	00620300 	rsbeq	r0, r2, r0, lsl #6
     b44:	009f2000 	addseq	r2, pc, r0
     b48:	00000000 	andeq	r0, r0, r0
     b4c:	05000000 	streq	r0, [r0, #-0]
     b50:	00063a00 	andeq	r3, r6, r0, lsl #20
     b54:	00064200 	andeq	r4, r6, r0, lsl #4
     b58:	30000200 	andcc	r0, r0, r0, lsl #4
     b5c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     b60:	00000000 	andeq	r0, r0, r0
     b64:	3a030100 	bcc	c0f6c <__Stack_Size+0xbff6c>
     b68:	3a000006 	bcc	b88 <_Minimum_Stack_Size+0xa88>
     b6c:	02000006 	andeq	r0, r0, #6
     b70:	009f3000 	addseq	r3, pc, r0
     b74:	00000000 	andeq	r0, r0, r0
     b78:	a0000000 	andge	r0, r0, r0
     b7c:	a2000004 	andge	r0, r0, #4
     b80:	02000004 	andeq	r0, r0, #4
     b84:	a2007d00 	andge	r7, r0, #0, 26
     b88:	d8000004 	stmdale	r0, {r2}
     b8c:	02000004 	andeq	r0, r0, #4
     b90:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
     b9c:	a0000000 	andge	r0, r0, r0
     ba0:	ae000004 	cdpge	0, 0, cr0, cr0, cr4, {0}
     ba4:	01000004 	tsteq	r0, r4
     ba8:	04ae5000 	strteq	r5, [lr], #0
     bac:	04d80000 	ldrbeq	r0, [r8], #0
     bb0:	00040000 	andeq	r0, r4, r0
     bb4:	9f5001f3 	svcls	0x005001f3
	...
     bc4:	04ac0000 	strteq	r0, [ip], #0
     bc8:	04b60000 	ldrteq	r0, [r6], #0
     bcc:	00010000 	andeq	r0, r1, r0
     bd0:	0004b655 	andeq	fp, r4, r5, asr r6
     bd4:	0004c400 	andeq	ip, r4, r0, lsl #8
     bd8:	52000100 	andpl	r0, r0, #0, 2
     bdc:	000004c4 	andeq	r0, r0, r4, asr #9
     be0:	000004d2 	ldrdeq	r0, [r0], -r2
     be4:	75380015 	ldrvc	r0, [r8, #-21]!	@ 0xffffffeb
     be8:	40007500 	andmi	r7, r0, r0, lsl #10
     bec:	0c22244b 	cfstrseq	mvf2, [r2], #-300	@ 0xfffffed4
     bf0:	80000008 	andhi	r0, r0, r8
     bf4:	0001282a 	andeq	r2, r1, sl, lsr #16
     bf8:	009f1316 	addseq	r1, pc, r6, lsl r3	@ <UNPREDICTABLE>
     bfc:	00000000 	andeq	r0, r0, r0
     c00:	01000000 	mrseq	r0, (UNDEF: 0)
     c04:	0004b600 	andeq	fp, r4, r0, lsl #12
     c08:	0004ba00 	andeq	fp, r4, r0, lsl #20
     c0c:	52000100 	andpl	r0, r0, #0, 2
	...
     c18:	04b60001 	ldrteq	r0, [r6], #1
     c1c:	04ba0000 	ldrteq	r0, [sl], #0
     c20:	00010000 	andeq	r0, r1, r0
     c24:	00000051 	andeq	r0, r0, r1, asr r0
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	b6000100 	strlt	r0, [r0], -r0, lsl #2
     c30:	ba000004 	blt	c48 <_Minimum_Stack_Size+0xb48>
     c34:	02000004 	andeq	r0, r0, #4
     c38:	009f3000 	addseq	r3, pc, r0
	...
     c44:	30000000 	andcc	r0, r0, r0
     c48:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     c4c:	01000000 	mrseq	r0, (UNDEF: 0)
     c50:	003e5200 	eorseq	r5, lr, r0, lsl #4
     c54:	00400000 	subeq	r0, r0, r0
     c58:	00020000 	andeq	r0, r2, r0
     c5c:	00000473 	andeq	r0, r0, r3, ror r4
     c60:	00000000 	andeq	r0, r0, r0
     c64:	00030000 	andeq	r0, r3, r0
     c68:	00010100 	andeq	r0, r1, r0, lsl #2
     c6c:	00400000 	subeq	r0, r0, r0
     c70:	00420000 	subeq	r0, r2, r0
     c74:	00020000 	andeq	r0, r2, r0
     c78:	00429f30 	subeq	r9, r2, r0, lsr pc
     c7c:	00440000 	subeq	r0, r4, r0
     c80:	00090000 	andeq	r0, r9, r0
     c84:	0186a00c 	orreq	sl, r6, ip
     c88:	1c007200 	sfmne	f7, 4, [r0], {-0}
     c8c:	0000449f 	muleq	r0, pc, r4	@ <UNPREDICTABLE>
     c90:	00004600 	andeq	r4, r0, r0, lsl #12
     c94:	0c000900 			@ <UNDEFINED> instruction: 0x0c000900
     c98:	000186a1 	andeq	r8, r1, r1, lsr #13
     c9c:	9f1c0072 	svcls	0x001c0072
     ca0:	00000046 	andeq	r0, r0, r6, asr #32
     ca4:	0000004a 	andeq	r0, r0, sl, asr #32
     ca8:	a00c0009 	andge	r0, ip, r9
     cac:	72000186 	andvc	r0, r0, #-2147483615	@ 0x80000021
     cb0:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
     cc0:	00004a00 	andeq	r4, r0, r0, lsl #20
     cc4:	00005800 	andeq	r5, r0, r0, lsl #16
     cc8:	52000100 	andpl	r0, r0, #0, 2
     ccc:	00000058 	andeq	r0, r0, r8, asr r0
     cd0:	0000005a 	andeq	r0, r0, sl, asr r0
     cd4:	04730002 	ldrbteq	r0, [r3], #-2
     cd8:	0000005a 	andeq	r0, r0, sl, asr r0
     cdc:	0000005e 	andeq	r0, r0, lr, asr r0
     ce0:	84730004 	ldrbthi	r0, [r3], #-4
     ce4:	000002d8 	ldrdeq	r0, [r0], -r8
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	00020000 	andeq	r0, r2, r0
     cf0:	005e0000 	subseq	r0, lr, r0
     cf4:	00660000 	rsbeq	r0, r6, r0
     cf8:	00020000 	andeq	r0, r2, r0
     cfc:	00669f30 	rsbeq	r9, r6, r0, lsr pc
     d00:	00680000 	rsbeq	r0, r8, r0
     d04:	00050000 	andeq	r0, r5, r0
     d08:	1c007338 	stcne	3, cr7, [r0], {56}	@ 0x38
     d0c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     d10:	00000000 	andeq	r0, r0, r0
     d14:	01010000 	mrseq	r0, (UNDEF: 1)
     d18:	78000000 	stmdavc	r0, {}	@ <UNPREDICTABLE>
     d1c:	7a000000 	bvc	d24 <_Minimum_Stack_Size+0xc24>
     d20:	09000000 	stmdbeq	r0, {}	@ <UNPREDICTABLE>
     d24:	86a00c00 	strthi	r0, [r0], r0, lsl #24
     d28:	00730001 	rsbseq	r0, r3, r1
     d2c:	007a9f1c 	rsbseq	r9, sl, ip, lsl pc
     d30:	007c0000 	rsbseq	r0, ip, r0
     d34:	00090000 	andeq	r0, r9, r0
     d38:	0186a10c 	orreq	sl, r6, ip, lsl #2
     d3c:	1c007300 	stcne	3, cr7, [r0], {-0}
     d40:	00007c9f 	muleq	r0, pc, ip	@ <UNPREDICTABLE>
     d44:	00009400 	andeq	r9, r0, r0, lsl #8
     d48:	0c000900 			@ <UNDEFINED> instruction: 0x0c000900
     d4c:	000186a0 	andeq	r8, r1, r0, lsr #13
     d50:	9f1c0073 	svcls	0x001c0073
	...
     d5c:	00980001 	addseq	r0, r8, r1
     d60:	00a00000 	adceq	r0, r0, r0
     d64:	00020000 	andeq	r0, r2, r0
     d68:	00009f44 	andeq	r9, r0, r4, asr #30
	...
     d74:	000e0000 	andeq	r0, lr, r0
     d78:	00100000 	andseq	r0, r0, r0
     d7c:	00010000 	andeq	r0, r1, r0
     d80:	00001050 	andeq	r1, r0, r0, asr r0
     d84:	00001200 	andeq	r1, r0, r0, lsl #4
     d88:	f3000400 	vshl.u8	d0, d0, d0
     d8c:	009f5001 	addseq	r5, pc, r1
	...
     d98:	0a000000 	beq	da0 <_Minimum_Stack_Size+0xca0>
     d9c:	0c000000 	stceq	0, cr0, [r0], {-0}
     da0:	01000000 	mrseq	r0, (UNDEF: 0)
     da4:	000c5000 	andeq	r5, ip, r0
     da8:	000e0000 	andeq	r0, lr, r0
     dac:	00040000 	andeq	r0, r4, r0
     db0:	9f5001f3 	svcls	0x005001f3
	...
     dbc:	000006f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
     dc0:	000006f2 	strdeq	r0, [r0], -r2
     dc4:	007d0002 	rsbseq	r0, sp, r2
     dc8:	000006f2 	strdeq	r0, [r0], -r2
     dcc:	00000728 	andeq	r0, r0, r8, lsr #14
     dd0:	087d0002 	ldmdaeq	sp!, {r1}^
     dd4:	00000728 	andeq	r0, r0, r8, lsr #14
     dd8:	00000738 	andeq	r0, r0, r8, lsr r7
     ddc:	007d0002 	rsbseq	r0, sp, r2
	...
     de8:	000005b0 			@ <UNDEFINED> instruction: 0x000005b0
     dec:	000005b2 			@ <UNDEFINED> instruction: 0x000005b2
     df0:	007d0002 	rsbseq	r0, sp, r2
     df4:	000005b2 			@ <UNDEFINED> instruction: 0x000005b2
     df8:	000006d6 	ldrdeq	r0, [r0], -r6
     dfc:	087d0002 	ldmdaeq	sp!, {r1}^
     e00:	000006d6 	ldrdeq	r0, [r0], -r6
     e04:	000006f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
     e08:	007d0002 	rsbseq	r0, sp, r2
	...
     e18:	000005c8 	andeq	r0, r0, r8, asr #11
     e1c:	000005d4 	ldrdeq	r0, [r0], -r4
     e20:	d4530001 	ldrble	r0, [r3], #-1
     e24:	da000005 	ble	e40 <_Minimum_Stack_Size+0xd40>
     e28:	05000005 	streq	r0, [r0, #-5]
     e2c:	08000c00 	stmdaeq	r0, {sl, fp}
     e30:	00004001 	andeq	r4, r0, r1
     e34:	00000000 	andeq	r0, r0, r0
     e38:	00040000 	andeq	r0, r4, r0
     e3c:	00010100 	andeq	r0, r1, r0, lsl #2
     e40:	05f20000 	ldrbeq	r0, [r2, #0]!
     e44:	05f40000 	ldrbeq	r0, [r4, #0]!
     e48:	00020000 	andeq	r0, r2, r0
     e4c:	05f49f30 	ldrbeq	r9, [r4, #3888]!	@ 0xf30
     e50:	05f60000 	ldrbeq	r0, [r6, #0]!
     e54:	00050000 	andeq	r0, r5, r0
     e58:	1c007344 	stcne	3, cr7, [r0], {68}	@ 0x44
     e5c:	0005f69f 	muleq	r5, pc, r6	@ <UNPREDICTABLE>
     e60:	0005f800 	andeq	pc, r5, r0, lsl #16
     e64:	45000500 	strmi	r0, [r0, #-1280]	@ 0xfffffb00
     e68:	9f1c0073 	svcls	0x001c0073
     e6c:	000005f8 	strdeq	r0, [r0], -r8
     e70:	000005fc 	strdeq	r0, [r0], -ip
     e74:	73440005 	movtvc	r0, #16389	@ 0x4005
     e78:	009f1c00 	addseq	r1, pc, r0, lsl #24
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	01000000 	mrseq	r0, (UNDEF: 0)
     e84:	00063a00 	andeq	r3, r6, r0, lsl #20
     e88:	00064200 	andeq	r4, r6, r0, lsl #4
     e8c:	42000200 	andmi	r0, r0, #0, 4
     e90:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
     e94:	00000000 	andeq	r0, r0, r0
     e98:	00000400 	andeq	r0, r0, r0, lsl #8
     e9c:	00000101 	andeq	r0, r0, r1, lsl #2
     ea0:	00066400 	andeq	r6, r6, r0, lsl #8
     ea4:	00066600 	andeq	r6, r6, r0, lsl #12
     ea8:	30000200 	andcc	r0, r0, r0, lsl #4
     eac:	0006669f 	muleq	r6, pc, r6	@ <UNPREDICTABLE>
     eb0:	00066800 	andeq	r6, r6, r0, lsl #16
     eb4:	44000500 	strmi	r0, [r0], #-1280	@ 0xfffffb00
     eb8:	9f1c0073 	svcls	0x001c0073
     ebc:	00000668 	andeq	r0, r0, r8, ror #12
     ec0:	0000066a 	andeq	r0, r0, sl, ror #12
     ec4:	73450005 	movtvc	r0, #20485	@ 0x5005
     ec8:	6a9f1c00 	bvs	fe7c7ed0 <BootRAM+0xd738671>
     ecc:	6e000006 	cdpvs	0, 0, cr0, cr0, cr6, {0}
     ed0:	05000006 	streq	r0, [r0, #-6]
     ed4:	00734400 	rsbseq	r4, r3, r0, lsl #8
     ed8:	00009f1c 	andeq	r9, r0, ip, lsl pc
     edc:	00000000 	andeq	r0, r0, r0
     ee0:	058c0000 	streq	r0, [ip]
     ee4:	058e0000 	streq	r0, [lr]
     ee8:	00020000 	andeq	r0, r2, r0
     eec:	058e007d 	streq	r0, [lr, #125]	@ 0x7d
     ef0:	05b00000 	ldreq	r0, [r0, #0]!
     ef4:	00020000 	andeq	r0, r2, r0
     ef8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
     f04:	058c0000 	streq	r0, [ip]
     f08:	05970000 	ldreq	r0, [r7]
     f0c:	00010000 	andeq	r0, r1, r0
     f10:	00059750 	andeq	r9, r5, r0, asr r7
     f14:	0005b000 	andeq	fp, r5, r0
     f18:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
	...
     f28:	0000058c 	andeq	r0, r0, ip, lsl #11
     f2c:	00000597 	muleq	r0, r7, r5
     f30:	97510001 	ldrbls	r0, [r1, -r1]
     f34:	b0000005 	andlt	r0, r0, r5
     f38:	04000005 	streq	r0, [r0], #-5
     f3c:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
     f40:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
     f4c:	00058c00 	andeq	r8, r5, r0, lsl #24
     f50:	00059700 	andeq	r9, r5, r0, lsl #14
     f54:	52000100 	andpl	r0, r0, #0, 2
     f58:	00000597 	muleq	r0, r7, r5
     f5c:	000005b0 			@ <UNDEFINED> instruction: 0x000005b0
     f60:	01f30004 	mvnseq	r0, r4
     f64:	00009f52 	andeq	r9, r0, r2, asr pc
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	05700000 	ldrbeq	r0, [r0, #-0]!
     f70:	05720000 	ldrbeq	r0, [r2, #-0]!
     f74:	00020000 	andeq	r0, r2, r0
     f78:	0572007d 	ldrbeq	r0, [r2, #-125]!	@ 0xffffff83
     f7c:	058c0000 	streq	r0, [ip]
     f80:	00020000 	andeq	r0, r2, r0
     f84:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     f90:	05700000 	ldrbeq	r0, [r0, #-0]!
     f94:	05770000 	ldrbeq	r0, [r7, #-0]!
     f98:	00010000 	andeq	r0, r1, r0
     f9c:	00057750 	andeq	r7, r5, r0, asr r7
     fa0:	00058c00 	andeq	r8, r5, r0, lsl #24
     fa4:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
	...
     fb4:	05700000 	ldrbeq	r0, [r0, #-0]!
     fb8:	057f0000 	ldrbeq	r0, [pc, #-0]!	@ fc0 <_Minimum_Stack_Size+0xec0>
     fbc:	00010000 	andeq	r0, r1, r0
     fc0:	00057f51 	andeq	r7, r5, r1, asr pc
     fc4:	00058800 	andeq	r8, r5, r0, lsl #16
     fc8:	f3000400 	vshl.u8	d0, d0, d0
     fcc:	889f5101 	ldmhi	pc, {r0, r8, ip, lr}	@ <UNPREDICTABLE>
     fd0:	8c000005 	stchi	0, cr0, [r0], {5}
     fd4:	01000005 	tsteq	r0, r5
     fd8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     fe8:	00000570 	andeq	r0, r0, r0, ror r5
     fec:	0000057f 	andeq	r0, r0, pc, ror r5
     ff0:	7f520001 	svcvc	0x00520001
     ff4:	88000005 	stmdahi	r0, {r0, r2}
     ff8:	04000005 	streq	r0, [r0], #-5
     ffc:	5201f300 	andpl	pc, r1, #0, 6
    1000:	0005889f 	muleq	r5, pc, r8	@ <UNPREDICTABLE>
    1004:	00058c00 	andeq	r8, r5, r0, lsl #24
    1008:	52000100 	andpl	r0, r0, #0, 2
	...
    101c:	000004e0 	andeq	r0, r0, r0, ror #9
    1020:	00000508 	andeq	r0, r0, r8, lsl #10
    1024:	08500001 	ldmdaeq	r0, {r0}^
    1028:	0c000005 	stceq	0, cr0, [r0], {5}
    102c:	04000005 	streq	r0, [r0], #-5
    1030:	5001f300 	andpl	pc, r1, r0, lsl #6
    1034:	00050c9f 	muleq	r5, pc, ip	@ <UNPREDICTABLE>
    1038:	00052000 	andeq	r2, r5, r0
    103c:	50000100 	andpl	r0, r0, r0, lsl #2
    1040:	00000520 	andeq	r0, r0, r0, lsr #10
    1044:	00000570 	andeq	r0, r0, r0, ror r5
    1048:	01f30004 	mvnseq	r0, r4
    104c:	00009f50 	andeq	r9, r0, r0, asr pc
    1050:	00000000 	andeq	r0, r0, r0
    1054:	03700000 	cmneq	r0, #0
    1058:	03740000 	cmneq	r4, #0
    105c:	00020000 	andeq	r0, r2, r0
    1060:	0374007d 	cmneq	r4, #125	@ 0x7d
    1064:	04b80000 	ldrteq	r0, [r8], #0
    1068:	00020000 	andeq	r0, r2, r0
    106c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1078:	03940000 	orrseq	r0, r4, #0
    107c:	03a00000 	moveq	r0, #0
    1080:	00010000 	andeq	r0, r1, r0
    1084:	0003a053 	andeq	sl, r3, r3, asr r0
    1088:	0003ac00 	andeq	sl, r3, r0, lsl #24
    108c:	71000200 	mrsvc	r0, R8_usr
    1090:	00000004 	andeq	r0, r0, r4
	...
    109c:	0003a200 	andeq	sl, r3, r0, lsl #4
    10a0:	0003ae00 	andeq	sl, r3, r0, lsl #28
    10a4:	52000100 	andpl	r0, r0, #0, 2
    10a8:	000003ae 	andeq	r0, r0, lr, lsr #7
    10ac:	000003ba 			@ <UNDEFINED> instruction: 0x000003ba
    10b0:	04730002 	ldrbteq	r0, [r3], #-2
	...
    10c0:	000003b0 			@ <UNDEFINED> instruction: 0x000003b0
    10c4:	000003bc 			@ <UNDEFINED> instruction: 0x000003bc
    10c8:	bc500001 	mrrclt	0, 0, r0, r0, cr1	@ <UNPREDICTABLE>
    10cc:	c6000003 	strgt	r0, [r0], -r3
    10d0:	02000003 	andeq	r0, r0, #3
    10d4:	00007200 	andeq	r7, r0, r0, lsl #4
	...
    10e0:	bc000000 	stclt	0, cr0, [r0], {-0}
    10e4:	c8000003 	stmdagt	r0, {r0, r1}
    10e8:	01000003 	tsteq	r0, r3
    10ec:	03c85000 	biceq	r5, r8, #0
    10f0:	03d20000 	bicseq	r0, r2, #0
    10f4:	00020000 	andeq	r0, r2, r0
    10f8:	00000072 	andeq	r0, r0, r2, ror r0
	...
    1104:	03c80000 	biceq	r0, r8, #0
    1108:	03d40000 	bicseq	r0, r4, #0
    110c:	00010000 	andeq	r0, r1, r0
    1110:	0003d450 	andeq	sp, r3, r0, asr r4
    1114:	0003de00 	andeq	sp, r3, r0, lsl #28
    1118:	71000200 	mrsvc	r0, R8_usr
    111c:	00000004 	andeq	r0, r0, r4
	...
    1128:	0003d400 	andeq	sp, r3, r0, lsl #8
    112c:	0003e000 	andeq	lr, r3, r0
    1130:	50000100 	andpl	r0, r0, r0, lsl #2
    1134:	000003e0 	andeq	r0, r0, r0, ror #7
    1138:	000003ea 	andeq	r0, r0, sl, ror #7
    113c:	00730002 	rsbseq	r0, r3, r2
	...
    114c:	000003e0 	andeq	r0, r0, r0, ror #7
    1150:	000003ec 	andeq	r0, r0, ip, ror #7
    1154:	ec500001 	mrrc	0, 0, r0, r0, cr1	@ <UNPREDICTABLE>
    1158:	f6000003 			@ <UNDEFINED> instruction: 0xf6000003
    115c:	02000003 	andeq	r0, r0, #3
    1160:	00007200 	andeq	r7, r0, r0, lsl #4
	...
    116c:	ec000000 	stc	0, cr0, [r0], {-0}
    1170:	f8000003 			@ <UNDEFINED> instruction: 0xf8000003
    1174:	01000003 	tsteq	r0, r3
    1178:	03f85000 	mvnseq	r5, #0
    117c:	04020000 	streq	r0, [r2], #-0
    1180:	00020000 	andeq	r0, r2, r0
    1184:	00000072 	andeq	r0, r0, r2, ror r0
	...
    1190:	03f80000 	mvnseq	r0, #0
    1194:	04040000 	streq	r0, [r4], #-0
    1198:	00010000 	andeq	r0, r1, r0
    119c:	00040450 	andeq	r0, r4, r0, asr r4
    11a0:	00040e00 	andeq	r0, r4, r0, lsl #28
    11a4:	73000200 	movwvc	r0, #512	@ 0x200
	...
    11b4:	00040400 	andeq	r0, r4, r0, lsl #8
    11b8:	00041000 	andeq	r1, r4, r0
    11bc:	50000100 	andpl	r0, r0, r0, lsl #2
    11c0:	00000410 	andeq	r0, r0, r0, lsl r4
    11c4:	0000041a 	andeq	r0, r0, sl, lsl r4
    11c8:	00730002 	rsbseq	r0, r3, r2
	...
    11d8:	00000410 	andeq	r0, r0, r0, lsl r4
    11dc:	0000041c 	andeq	r0, r0, ip, lsl r4
    11e0:	1c500001 	mrrcne	0, 0, r0, r0, cr1	@ <UNPREDICTABLE>
    11e4:	26000004 	strcs	r0, [r0], -r4
    11e8:	02000004 	andeq	r0, r0, #4
    11ec:	00007300 	andeq	r7, r0, r0, lsl #6
	...
    11f8:	1c000000 	stcne	0, cr0, [r0], {-0}
    11fc:	28000004 	stmdacs	r0, {r2}
    1200:	01000004 	tsteq	r0, r4
    1204:	04285000 	strteq	r5, [r8], #-0
    1208:	04320000 	ldrteq	r0, [r2], #-0
    120c:	00020000 	andeq	r0, r2, r0
    1210:	00000073 	andeq	r0, r0, r3, ror r0
	...
    121c:	04280000 	strteq	r0, [r8], #-0
    1220:	04340000 	ldrteq	r0, [r4], #-0
    1224:	00010000 	andeq	r0, r1, r0
    1228:	00043450 	andeq	r3, r4, r0, asr r4
    122c:	00043e00 	andeq	r3, r4, r0, lsl #28
    1230:	73000200 	movwvc	r0, #512	@ 0x200
	...
    1240:	00043400 	andeq	r3, r4, r0, lsl #8
    1244:	00044000 	andeq	r4, r4, r0
    1248:	50000100 	andpl	r0, r0, r0, lsl #2
    124c:	00000440 	andeq	r0, r0, r0, asr #8
    1250:	0000044a 	andeq	r0, r0, sl, asr #8
    1254:	00730002 	rsbseq	r0, r3, r2
	...
    1264:	00000440 	andeq	r0, r0, r0, asr #8
    1268:	0000044c 	andeq	r0, r0, ip, asr #8
    126c:	4c500001 	mrrcmi	0, 0, r0, r0, cr1	@ <UNPREDICTABLE>
    1270:	56000004 	strpl	r0, [r0], -r4
    1274:	02000004 	andeq	r0, r0, #4
    1278:	00047300 	andeq	r7, r4, r0, lsl #6
	...
    1284:	4c000000 	stcmi	0, cr0, [r0], {-0}
    1288:	5a000004 	bpl	12a0 <__Stack_Size+0x2a0>
    128c:	01000004 	tsteq	r0, r4
    1290:	045a5000 	ldrbeq	r5, [sl], #-0
    1294:	045c0000 	ldrbeq	r0, [ip], #-0
    1298:	00020000 	andeq	r0, r2, r0
    129c:	00000473 	andeq	r0, r0, r3, ror r4
	...
    12b0:	01980000 	orrseq	r0, r8, r0
    12b4:	01ae0000 			@ <UNDEFINED> instruction: 0x01ae0000
    12b8:	00010000 	andeq	r0, r1, r0
    12bc:	0001ae50 	andeq	sl, r1, r0, asr lr
    12c0:	0001b000 	andeq	fp, r1, r0
    12c4:	f3000400 	vshl.u8	d0, d0, d0
    12c8:	b09f5001 	addslt	r5, pc, r1
    12cc:	c0000001 	andgt	r0, r0, r1
    12d0:	01000001 	tsteq	r0, r1
    12d4:	01c05000 	biceq	r5, r0, r0
    12d8:	01d00000 	bicseq	r0, r0, r0
    12dc:	00040000 	andeq	r0, r4, r0
    12e0:	9f5001f3 	svcls	0x005001f3
    12e4:	000001d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    12e8:	000001d2 	ldrdeq	r0, [r0], -r2
    12ec:	d2500001 	subsle	r0, r0, #1
    12f0:	e0000001 	and	r0, r0, r1
    12f4:	04000001 	streq	r0, [r0], #-1
    12f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    12fc:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1300:	00000000 	andeq	r0, r0, r0
    1304:	00007a00 	andeq	r7, r0, r0, lsl #20
    1308:	00007c00 	andeq	r7, r0, r0, lsl #24
    130c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1310:	00007c00 	andeq	r7, r0, r0, lsl #24
    1314:	00012800 	andeq	r2, r1, r0, lsl #16
    1318:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    131c:	00000008 	andeq	r0, r0, r8
    1320:	00000000 	andeq	r0, r0, r0
    1324:	bc000000 	stclt	0, cr0, [r0], {-0}
    1328:	c0000000 	andgt	r0, r0, r0
    132c:	01000000 	mrseq	r0, (UNDEF: 0)
    1330:	00005000 	andeq	r5, r0, r0
    1334:	00000000 	andeq	r0, r0, r0
    1338:	00010000 	andeq	r0, r1, r0
    133c:	000000d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1340:	000000e0 	andeq	r0, r0, r0, ror #1
    1344:	00540001 	subseq	r0, r4, r1
	...
    1350:	02020101 	andeq	r0, r2, #1073741824	@ 0x40000000
    1354:	0000d600 	andeq	sp, r0, r0, lsl #12
    1358:	0000d600 	andeq	sp, r0, r0, lsl #12
    135c:	70000700 	andvc	r0, r0, r0, lsl #14
    1360:	ffff0a00 			@ <UNDEFINED> instruction: 0xffff0a00
    1364:	00d69f1a 	sbcseq	r9, r6, sl, lsl pc
    1368:	00d60000 	sbcseq	r0, r6, r0
    136c:	000e0000 	andeq	r0, lr, r0
    1370:	ff0a0074 			@ <UNDEFINED> instruction: 0xff0a0074
    1374:	00701aff 	ldrshteq	r1, [r0], #-175	@ 0xffffff51
    1378:	1affff0a 	bne	fa8 <_Minimum_Stack_Size+0xea8>
    137c:	00d69f1c 	sbcseq	r9, r6, ip, lsl pc
    1380:	00e00000 	rsceq	r0, r0, r0
    1384:	00100000 	andseq	r0, r0, r0
    1388:	ff0a0074 			@ <UNDEFINED> instruction: 0xff0a0074
    138c:	00701aff 	ldrshteq	r1, [r0], #-175	@ 0xffffff51
    1390:	1affff0a 	bne	fc0 <_Minimum_Stack_Size+0xec0>
    1394:	9f24331c 	svcls	0x0024331c
	...
    13a4:	00000060 	andeq	r0, r0, r0, rrx
    13a8:	0000006a 	andeq	r0, r0, sl, rrx
    13ac:	6a500001 	bvs	14013b8 <__Stack_Size+0x14003b8>
    13b0:	78000000 	stmdavc	r0, {}	@ <UNPREDICTABLE>
    13b4:	04000000 	streq	r0, [r0], #-0
    13b8:	5001f300 	andpl	pc, r1, r0, lsl #6
    13bc:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    13c8:	00004800 	andeq	r4, r0, r0, lsl #16
    13cc:	00005400 	andeq	r5, r0, r0, lsl #8
    13d0:	50000100 	andpl	r0, r0, r0, lsl #2
    13d4:	00000054 	andeq	r0, r0, r4, asr r0
    13d8:	00000060 	andeq	r0, r0, r0, rrx
    13dc:	01f30004 	mvnseq	r0, r4
    13e0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    13ec:	00020000 	andeq	r0, r2, r0
    13f0:	00020000 	andeq	r0, r2, r0
    13f4:	0002007d 	andeq	r0, r2, sp, ror r0
    13f8:	00480000 	subeq	r0, r8, r0
    13fc:	00020000 	andeq	r0, r2, r0
    1400:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    1410:	00080000 	andeq	r0, r8, r0
    1414:	00010000 	andeq	r0, r1, r0
    1418:	00000850 	andeq	r0, r0, r0, asr r8
    141c:	00004800 	andeq	r4, r0, r0, lsl #16
    1420:	f3000400 	vshl.u8	d0, d0, d0
    1424:	009f5001 	addseq	r5, pc, r1
    1428:	00000000 	andeq	r0, r0, r0
    142c:	01000000 	mrseq	r0, (UNDEF: 0)
    1430:	00001800 	andeq	r1, r0, r0, lsl #16
    1434:	00003c00 	andeq	r3, r0, r0, lsl #24
    1438:	03000600 	movweq	r0, #1536	@ 0x600
    143c:	20000072 	andcs	r0, r0, r2, ror r0
    1440:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1444:	00000000 	andeq	r0, r0, r0
    1448:	18000000 	stmdane	r0, {}	@ <UNPREDICTABLE>
    144c:	34000000 	strcc	r0, [r0], #-0
    1450:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
    1454:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    1458:	24311aff 	ldrtcs	r1, [r1], #-2815	@ 0xfffff501
    145c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1460:	00000000 	andeq	r0, r0, r0
    1464:	00000200 	andeq	r0, r0, r0, lsl #4
    1468:	00000202 	andeq	r0, r0, r2, lsl #4
    146c:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
    1470:	01000000 	mrseq	r0, (UNDEF: 0)
    1474:	00085000 	andeq	r5, r8, r0
    1478:	00180000 	andseq	r0, r8, r0
    147c:	00040000 	andeq	r0, r4, r0
    1480:	9f5001f3 	svcls	0x005001f3
    1484:	00000018 	andeq	r0, r0, r8, lsl r0
    1488:	00000038 	andeq	r0, r0, r8, lsr r0
    148c:	00500001 	subseq	r0, r0, r1
	...
    1498:	20000101 	andcs	r0, r0, r1, lsl #2
    149c:	20000000 	andcs	r0, r0, r0
    14a0:	01000000 	mrseq	r0, (UNDEF: 0)
    14a4:	00205500 	eoreq	r5, r0, r0, lsl #10
    14a8:	00380000 	eorseq	r0, r8, r0
    14ac:	00080000 	andeq	r0, r8, r0
    14b0:	24310070 	ldrtcs	r0, [r1], #-112	@ 0xffffff90
    14b4:	9f220075 	svcls	0x00220075
	...
    14c0:	000001e0 	andeq	r0, r0, r0, ror #3
    14c4:	000001e2 	andeq	r0, r0, r2, ror #3
    14c8:	007d0002 	rsbseq	r0, sp, r2
    14cc:	000001e2 	andeq	r0, r0, r2, ror #3
    14d0:	00000370 	andeq	r0, r0, r0, ror r3
    14d4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    14e8:	000001e0 	andeq	r0, r0, r0, ror #3
    14ec:	00000202 	andeq	r0, r0, r2, lsl #4
    14f0:	02500001 	subseq	r0, r0, #1
    14f4:	56000002 	strpl	r0, [r0], -r2
    14f8:	04000003 	streq	r0, [r0], #-3
    14fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    1500:	0003569f 	muleq	r3, pc, r6	@ <UNPREDICTABLE>
    1504:	00035800 	andeq	r5, r3, r0, lsl #16
    1508:	50000100 	andpl	r0, r0, r0, lsl #2
    150c:	00000358 	andeq	r0, r0, r8, asr r3
    1510:	00000370 	andeq	r0, r0, r0, ror r3
    1514:	01f30004 	mvnseq	r0, r4
    1518:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1528:	000001e0 	andeq	r0, r0, r0, ror #3
    152c:	00000206 	andeq	r0, r0, r6, lsl #4
    1530:	06510001 	ldrbeq	r0, [r1], -r1
    1534:	56000002 	strpl	r0, [r0], -r2
    1538:	04000003 	streq	r0, [r0], #-3
    153c:	5101f300 	mrspl	pc, SP_irq	@ <UNPREDICTABLE>
    1540:	0003569f 	muleq	r3, pc, r6	@ <UNPREDICTABLE>
    1544:	00037000 	andeq	r7, r3, r0
    1548:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1558:	01e00000 	mvneq	r0, r0
    155c:	02090000 	andeq	r0, r9, #0
    1560:	00010000 	andeq	r0, r1, r0
    1564:	00020952 	andeq	r0, r2, r2, asr r9
    1568:	00035600 	andeq	r5, r3, r0, lsl #12
    156c:	f3000400 	vshl.u8	d0, d0, d0
    1570:	569f5201 	ldrpl	r5, [pc], r1, lsl #4
    1574:	70000003 	andvc	r0, r0, r3
    1578:	01000003 	tsteq	r0, r3
    157c:	00005200 	andeq	r5, r0, r0, lsl #4
    1580:	00000000 	andeq	r0, r0, r0
    1584:	00010000 	andeq	r0, r1, r0
    1588:	01f20000 	mvnseq	r0, r0
    158c:	02020000 	andeq	r0, r2, #0
    1590:	00010000 	andeq	r0, r1, r0
    1594:	00020250 	andeq	r0, r2, r0, asr r2
    1598:	00035400 	andeq	r5, r3, r0, lsl #8
    159c:	f3000400 	vshl.u8	d0, d0, d0
    15a0:	009f5001 	addseq	r5, pc, r1
    15a4:	00000000 	andeq	r0, r0, r0
    15a8:	01000000 	mrseq	r0, (UNDEF: 0)
    15ac:	0001f200 	andeq	pc, r1, r0, lsl #4
    15b0:	00035400 	andeq	r5, r3, r0, lsl #8
    15b4:	f3000400 	vshl.u8	d0, d0, d0
    15b8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    15c4:	f2000000 	vhadd.s8	d0, d0, d0
    15c8:	09000001 	stmdbeq	r0, {r0}
    15cc:	01000002 	tsteq	r0, r2
    15d0:	02095200 	andeq	r5, r9, #0, 4
    15d4:	03540000 	cmpeq	r4, #0
    15d8:	00040000 	andeq	r0, r4, r0
    15dc:	9f5201f3 	svcls	0x005201f3
	...
    15e8:	01fe0002 	mvnseq	r0, r2
    15ec:	020a0000 	andeq	r0, sl, #0
    15f0:	00020000 	andeq	r0, r2, r0
    15f4:	00009f30 	andeq	r9, r0, r0, lsr pc
    15f8:	00000000 	andeq	r0, r0, r0
    15fc:	00020000 	andeq	r0, r2, r0
    1600:	000001fe 	strdeq	r0, [r0], -lr
    1604:	0000020a 	andeq	r0, r0, sl, lsl #4
    1608:	d8030006 	stmdale	r3, {r1, r2}
    160c:	9f200000 	svcls	0x00200000
	...
    1618:	0000035c 	andeq	r0, r0, ip, asr r3
    161c:	00000360 	andeq	r0, r0, r0, ror #6
    1620:	007d0002 	rsbseq	r0, sp, r2
    1624:	00000360 	andeq	r0, r0, r0, ror #6
    1628:	000003f8 	strdeq	r0, [r0], -r8
    162c:	107d0002 	rsbsne	r0, sp, r2
	...
    163c:	035c0000 	cmpeq	ip, #0
    1640:	037e0000 	cmneq	lr, #0
    1644:	00010000 	andeq	r0, r1, r0
    1648:	00037e50 	andeq	r7, r3, r0, asr lr
    164c:	00038000 	andeq	r8, r3, r0
    1650:	74000300 	strvc	r0, [r0], #-768	@ 0xfffffd00
    1654:	03809f01 	orreq	r9, r0, #1, 30
    1658:	03f80000 	mvnseq	r0, #0
    165c:	00040000 	andeq	r0, r4, r0
    1660:	9f5001f3 	svcls	0x005001f3
	...
    1670:	035c0000 	cmpeq	ip, #0
    1674:	03a60000 			@ <UNDEFINED> instruction: 0x03a60000
    1678:	00010000 	andeq	r0, r1, r0
    167c:	0003a651 	andeq	sl, r3, r1, asr r6
    1680:	0003be00 	andeq	fp, r3, r0, lsl #28
    1684:	f3000400 	vshl.u8	d0, d0, d0
    1688:	be9f5101 	fmllte	f5, f7, f1
    168c:	f8000003 			@ <UNDEFINED> instruction: 0xf8000003
    1690:	01000003 	tsteq	r0, r3
    1694:	00005100 	andeq	r5, r0, r0, lsl #2
    1698:	00000000 	andeq	r0, r0, r0
    169c:	00020000 	andeq	r0, r2, r0
    16a0:	00000000 	andeq	r0, r0, r0
    16a4:	0000035c 	andeq	r0, r0, ip, asr r3
    16a8:	0000036e 	andeq	r0, r0, lr, ror #6
    16ac:	9f300002 	svcls	0x00300002
    16b0:	0000036e 	andeq	r0, r0, lr, ror #6
    16b4:	000003ac 	andeq	r0, r0, ip, lsr #7
    16b8:	be530001 	cdplt	0, 5, cr0, cr3, cr1, {0}
    16bc:	f8000003 			@ <UNDEFINED> instruction: 0xf8000003
    16c0:	01000003 	tsteq	r0, r3
    16c4:	00005300 	andeq	r5, r0, r0, lsl #6
    16c8:	00000000 	andeq	r0, r0, r0
    16cc:	03f80000 	mvnseq	r0, #0
    16d0:	03fa0000 	mvnseq	r0, #0
    16d4:	00020000 	andeq	r0, r2, r0
    16d8:	03fa007d 	mvnseq	r0, #125	@ 0x7d
    16dc:	03fe0000 	mvnseq	r0, #0
    16e0:	00020000 	andeq	r0, r2, r0
    16e4:	03fe0c7d 	mvnseq	r0, #32000	@ 0x7d00
    16e8:	04cc0000 	strbeq	r0, [ip], #0
    16ec:	00030000 	andeq	r0, r3, r0
    16f0:	cc00d07d 	stcgt	0, cr13, [r0], {125}	@ 0x7d
    16f4:	ce000004 	cdpgt	0, 0, cr0, cr0, cr4, {0}
    16f8:	02000004 	andeq	r0, r0, #4
    16fc:	ce0c7d00 	cdpgt	13, 0, cr7, cr12, cr0, {0}
    1700:	68000004 	stmdavs	r0, {r2}
    1704:	03000005 	movweq	r0, #5
    1708:	00d07d00 	sbcseq	r7, r0, r0, lsl #26
	...
    1718:	040c0000 	streq	r0, [ip], #-0
    171c:	04100000 	ldreq	r0, [r0], #-0
    1720:	00060000 	andeq	r0, r6, r0
    1724:	ff080075 			@ <UNDEFINED> instruction: 0xff080075
    1728:	041c9f1a 	ldreq	r9, [ip], #-3866	@ 0xfffff0e6
    172c:	043e0000 	ldrteq	r0, [lr], #-0
    1730:	00010000 	andeq	r0, r1, r0
    1734:	0004ce55 	andeq	ip, r4, r5, asr lr
    1738:	0004fa00 	andeq	pc, r4, r0, lsl #20
    173c:	55000100 	strpl	r0, [r0, #-256]	@ 0xffffff00
	...
    1748:	04060503 	streq	r0, [r6], #-1283	@ 0xfffffafd
    174c:	04060000 	streq	r0, [r6], #-0
    1750:	00060000 	andeq	r0, r6, r0
    1754:	0000e803 	andeq	lr, r0, r3, lsl #16
    1758:	00009f20 	andeq	r9, r0, r0, lsr #30
    175c:	00000000 	andeq	r0, r0, r0
    1760:	00010000 	andeq	r0, r1, r0
    1764:	00000434 	andeq	r0, r0, r4, lsr r4
    1768:	0000043a 	andeq	r0, r0, sl, lsr r4
    176c:	00550001 	subseq	r0, r5, r1
    1770:	00000000 	andeq	r0, r0, r0
    1774:	01000000 	mrseq	r0, (UNDEF: 0)
    1778:	00043400 	andeq	r3, r4, r0, lsl #8
    177c:	00043a00 	andeq	r3, r4, r0, lsl #20
    1780:	5d000100 	stfpls	f0, [r0, #-0]
	...
    178c:	04340001 	ldrteq	r0, [r4], #-1
    1790:	043a0000 	ldrteq	r0, [sl], #-0
    1794:	00030000 	andeq	r0, r3, r0
    1798:	009f8109 	addseq	r8, pc, r9, lsl #2
    179c:	00000000 	andeq	r0, r0, r0
    17a0:	01000000 	mrseq	r0, (UNDEF: 0)
    17a4:	0004e800 	andeq	lr, r4, r0, lsl #16
    17a8:	0004f000 	andeq	pc, r4, r0
    17ac:	55000100 	strpl	r0, [r0, #-256]	@ 0xffffff00
	...
    17b8:	04e80001 	strbteq	r0, [r8], #1
    17bc:	04f00000 	ldrbteq	r0, [r0], #0
    17c0:	00010000 	andeq	r0, r1, r0
    17c4:	0000005d 	andeq	r0, r0, sp, asr r0
    17c8:	00000000 	andeq	r0, r0, r0
    17cc:	e8000100 	stmda	r0, {r8}
    17d0:	f0000004 			@ <UNDEFINED> instruction: 0xf0000004
    17d4:	03000004 	movweq	r0, #4
    17d8:	9f820900 	svcls	0x00820900
	...
    17e4:	00000003 	andeq	r0, r0, r3
    17e8:	00010100 	andeq	r0, r1, r0, lsl #2
    17ec:	043e0000 	ldrteq	r0, [lr], #-0
    17f0:	046a0000 	strbteq	r0, [sl], #-0
    17f4:	00020000 	andeq	r0, r2, r0
    17f8:	046a9f31 	strbteq	r9, [sl], #-3889	@ 0xfffff0cf
    17fc:	04880000 	streq	r0, [r8], #0
    1800:	00010000 	andeq	r0, r1, r0
    1804:	0004fa50 	andeq	pc, r4, r0, asr sl	@ <UNPREDICTABLE>
    1808:	0004fa00 	andeq	pc, r4, r0, lsl #20
    180c:	31000200 	mrscc	r0, R8_usr
    1810:	0004fa9f 	muleq	r4, pc, sl	@ <UNPREDICTABLE>
    1814:	00052c00 	andeq	r2, r5, r0, lsl #24
    1818:	32000200 	andcc	r0, r0, #0, 4
    181c:	00052c9f 	muleq	r5, pc, ip	@ <UNPREDICTABLE>
    1820:	00053000 	andeq	r3, r5, r0
    1824:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1834:	04900000 	ldreq	r0, [r0], #0
    1838:	04940000 	ldreq	r0, [r4], #0
    183c:	00010000 	andeq	r0, r1, r0
    1840:	00053650 	andeq	r3, r5, r0, asr r6
    1844:	00053800 	andeq	r3, r5, r0, lsl #16
    1848:	50000100 	andpl	r0, r0, r0, lsl #2
    184c:	00000538 	andeq	r0, r0, r8, lsr r5
    1850:	0000053b 	andeq	r0, r0, fp, lsr r5
    1854:	00510001 	subseq	r0, r1, r1
    1858:	00000000 	andeq	r0, r0, r0
    185c:	01000000 	mrseq	r0, (UNDEF: 0)
    1860:	00000000 	andeq	r0, r0, r0
    1864:	00045400 	andeq	r5, r4, r0, lsl #8
    1868:	00045800 	andeq	r5, r4, r0, lsl #16
    186c:	91000300 	mrsls	r0, LR_irq
    1870:	04589f50 	ldrbeq	r9, [r8], #-3920	@ 0xfffff0b0
    1874:	045b0000 	ldrbeq	r0, [fp], #-0
    1878:	00010000 	andeq	r0, r1, r0
    187c:	00045b51 	andeq	r5, r4, r1, asr fp
    1880:	00045c00 	andeq	r5, r4, r0, lsl #24
    1884:	91000300 	mrsls	r0, LR_irq
    1888:	00009f50 	andeq	r9, r0, r0, asr pc
    188c:	00000000 	andeq	r0, r0, r0
    1890:	00010000 	andeq	r0, r1, r0
    1894:	00000454 	andeq	r0, r0, r4, asr r4
    1898:	0000045c 	andeq	r0, r0, ip, asr r4
    189c:	9f320002 	svcls	0x00320002
	...
    18a8:	04720301 	ldrbteq	r0, [r2], #-769	@ 0xfffffcff
    18ac:	04720000 	ldrbteq	r0, [r2], #-0
    18b0:	00060000 	andeq	r0, r6, r0
    18b4:	0001ea03 	andeq	lr, r1, r3, lsl #20
    18b8:	00009f20 	andeq	r9, r0, r0, lsr #30
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	00010000 	andeq	r0, r1, r0
    18c4:	00000000 	andeq	r0, r0, r0
    18c8:	00000486 	andeq	r0, r0, r6, lsl #9
    18cc:	0000048a 	andeq	r0, r0, sl, lsl #9
    18d0:	50910003 	addspl	r0, r1, r3
    18d4:	00048a9f 	muleq	r4, pc, sl	@ <UNPREDICTABLE>
    18d8:	00048f00 	andeq	r8, r4, r0, lsl #30
    18dc:	51000100 	mrspl	r0, (UNDEF: 16)
    18e0:	0000048f 	andeq	r0, r0, pc, lsl #9
    18e4:	00000490 	muleq	r0, r0, r4
    18e8:	50910003 	addspl	r0, r1, r3
    18ec:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    18f0:	00000000 	andeq	r0, r0, r0
    18f4:	86000100 	strhi	r0, [r0], -r0, lsl #2
    18f8:	88000004 	stmdahi	r0, {r2}
    18fc:	01000004 	tsteq	r0, r4
    1900:	00005000 	andeq	r5, r0, r0
    1904:	00000000 	andeq	r0, r0, r0
    1908:	00010000 	andeq	r0, r1, r0
    190c:	00000000 	andeq	r0, r0, r0
    1910:	00000506 	andeq	r0, r0, r6, lsl #10
    1914:	0000050a 	andeq	r0, r0, sl, lsl #10
    1918:	50910003 	addspl	r0, r1, r3
    191c:	00050a9f 	muleq	r5, pc, sl	@ <UNPREDICTABLE>
    1920:	00050d00 	andeq	r0, r5, r0, lsl #26
    1924:	51000100 	mrspl	r0, (UNDEF: 16)
    1928:	0000050d 	andeq	r0, r0, sp, lsl #10
    192c:	0000050e 	andeq	r0, r0, lr, lsl #10
    1930:	50910003 	addspl	r0, r1, r3
    1934:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1938:	00000000 	andeq	r0, r0, r0
    193c:	06000100 	streq	r0, [r0], -r0, lsl #2
    1940:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    1944:	02000005 	andeq	r0, r0, #5
    1948:	009f3100 	addseq	r3, pc, r0, lsl #2
    194c:	00000000 	andeq	r0, r0, r0
    1950:	01000000 	mrseq	r0, (UNDEF: 0)
    1954:	00000000 	andeq	r0, r0, r0
    1958:	00052c00 	andeq	r2, r5, r0, lsl #24
    195c:	00052e00 	andeq	r2, r5, r0, lsl #28
    1960:	91000300 	mrsls	r0, LR_irq
    1964:	052e9f50 	streq	r9, [lr, #-3920]!	@ 0xfffff0b0
    1968:	05330000 	ldreq	r0, [r3, #-0]!
    196c:	00010000 	andeq	r0, r1, r0
    1970:	00053351 	andeq	r3, r5, r1, asr r3
    1974:	00053400 	andeq	r3, r5, r0, lsl #8
    1978:	91000300 	mrsls	r0, LR_irq
    197c:	00009f50 	andeq	r9, r0, r0, asr pc
    1980:	00000000 	andeq	r0, r0, r0
    1984:	00010000 	andeq	r0, r1, r0
    1988:	0000052c 	andeq	r0, r0, ip, lsr #10
    198c:	00000534 	andeq	r0, r0, r4, lsr r5
    1990:	9f320002 	svcls	0x00320002
	...
    199c:	0000029c 	muleq	r0, ip, r2
    19a0:	000002a0 	andeq	r0, r0, r0, lsr #5
    19a4:	007d0002 	rsbseq	r0, sp, r2
    19a8:	000002a0 	andeq	r0, r0, r0, lsr #5
    19ac:	0000035c 	andeq	r0, r0, ip, asr r3
    19b0:	107d0002 	rsbsne	r0, sp, r2
	...
    19c0:	000002a2 	andeq	r0, r0, r2, lsr #5
    19c4:	000002b0 			@ <UNDEFINED> instruction: 0x000002b0
    19c8:	b0530001 	subslt	r0, r3, r1
    19cc:	bc000002 	stclt	0, cr0, [r0], {2}
    19d0:	02000002 	andeq	r0, r0, #2
    19d4:	00047200 	andeq	r7, r4, r0, lsl #4
	...
    19e4:	0002b000 	andeq	fp, r2, r0
    19e8:	0002be00 	andeq	fp, r2, r0, lsl #28
    19ec:	53000100 	movwpl	r0, #256	@ 0x100
    19f0:	000002be 			@ <UNDEFINED> instruction: 0x000002be
    19f4:	000002c2 	andeq	r0, r0, r2, asr #5
    19f8:	04720002 	ldrbteq	r0, [r2], #-2
    19fc:	000002c2 	andeq	r0, r0, r2, asr #5
    1a00:	000002ca 	andeq	r0, r0, sl, asr #5
    1a04:	040c0005 	streq	r0, [ip], #-5
    1a08:	00400108 	subeq	r0, r0, r8, lsl #2
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	01000000 	mrseq	r0, (UNDEF: 0)
    1a14:	0002fa00 	andeq	pc, r2, r0, lsl #20
    1a18:	0002fc00 	andeq	pc, r2, r0, lsl #24
    1a1c:	08000300 	stmdaeq	r0, {r8, r9}
    1a20:	00009f25 	andeq	r9, r0, r5, lsr #30
    1a24:	00000000 	andeq	r0, r0, r0
    1a28:	02140000 	andseq	r0, r4, #0
    1a2c:	02160000 	andseq	r0, r6, #0
    1a30:	00020000 	andeq	r0, r2, r0
    1a34:	0216007d 	andseq	r0, r6, #125	@ 0x7d
    1a38:	029c0000 	addseq	r0, ip, #0
    1a3c:	00020000 	andeq	r0, r2, r0
    1a40:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    1a4c:	02140000 	andseq	r0, r4, #0
    1a50:	022a0000 	eoreq	r0, sl, #0
    1a54:	00010000 	andeq	r0, r1, r0
    1a58:	00022a50 	andeq	r2, r2, r0, asr sl
    1a5c:	00029c00 	andeq	r9, r2, r0, lsl #24
    1a60:	f3000400 	vshl.u8	d0, d0, d0
    1a64:	009f5001 	addseq	r5, pc, r1
	...
    1a78:	00021400 	andeq	r1, r2, r0, lsl #8
    1a7c:	00023000 	andeq	r3, r2, r0
    1a80:	51000100 	mrspl	r0, (UNDEF: 16)
    1a84:	00000230 	andeq	r0, r0, r0, lsr r2
    1a88:	00000246 	andeq	r0, r0, r6, asr #4
    1a8c:	01f30004 	mvnseq	r0, r4
    1a90:	02469f51 	subeq	r9, r6, #324	@ 0x144
    1a94:	02500000 	subseq	r0, r0, #0
    1a98:	00010000 	andeq	r0, r1, r0
    1a9c:	00025051 	andeq	r5, r2, r1, asr r0
    1aa0:	00028800 	andeq	r8, r2, r0, lsl #16
    1aa4:	f3000400 	vshl.u8	d0, d0, d0
    1aa8:	889f5101 	ldmhi	pc, {r0, r8, ip, lr}	@ <UNPREDICTABLE>
    1aac:	9c000002 	stcls	0, cr0, [r0], {2}
    1ab0:	01000002 	tsteq	r0, r2
    1ab4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1ac8:	00000214 	andeq	r0, r0, r4, lsl r2
    1acc:	00000233 	andeq	r0, r0, r3, lsr r2
    1ad0:	33520001 	cmpcc	r2, #1
    1ad4:	46000002 	strmi	r0, [r0], -r2
    1ad8:	04000002 	streq	r0, [r0], #-2
    1adc:	5201f300 	andpl	pc, r1, #0, 6
    1ae0:	0002469f 	muleq	r2, pc, r6	@ <UNPREDICTABLE>
    1ae4:	00025300 	andeq	r5, r2, r0, lsl #6
    1ae8:	52000100 	andpl	r0, r0, #0, 2
    1aec:	00000253 	andeq	r0, r0, r3, asr r2
    1af0:	00000288 	andeq	r0, r0, r8, lsl #5
    1af4:	01f30004 	mvnseq	r0, r4
    1af8:	02889f52 	addeq	r9, r8, #328	@ 0x148
    1afc:	029c0000 	addseq	r0, ip, #0
    1b00:	00010000 	andeq	r0, r1, r0
    1b04:	00000052 	andeq	r0, r0, r2, asr r0
    1b08:	00000000 	andeq	r0, r0, r0
    1b0c:	2e000100 	adfcss	f0, f0, f0
    1b10:	34000002 	strcc	r0, [r0], #-2
    1b14:	06000002 	streq	r0, [r0], -r2
    1b18:	00130300 	andseq	r0, r3, r0, lsl #6
    1b1c:	009f2000 	addseq	r2, pc, r0
    1b20:	00000000 	andeq	r0, r0, r0
    1b24:	01000000 	mrseq	r0, (UNDEF: 0)
    1b28:	00022e00 	andeq	r2, r2, r0, lsl #28
    1b2c:	00023400 	andeq	r3, r2, r0, lsl #8
    1b30:	30000200 	andcc	r0, r0, r0, lsl #4
    1b34:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1b38:	00000000 	andeq	r0, r0, r0
    1b3c:	4a000100 	bmi	1f44 <__Stack_Size+0xf44>
    1b40:	54000002 	strpl	r0, [r0], #-2
    1b44:	06000002 	streq	r0, [r0], -r2
    1b48:	000c0300 	andeq	r0, ip, r0, lsl #6
    1b4c:	009f2000 	addseq	r2, pc, r0
    1b50:	00000000 	andeq	r0, r0, r0
    1b54:	01000000 	mrseq	r0, (UNDEF: 0)
    1b58:	00024a00 	andeq	r4, r2, r0, lsl #20
    1b5c:	00025400 	andeq	r5, r2, r0, lsl #8
    1b60:	30000200 	andcc	r0, r0, r0, lsl #4
    1b64:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
	...
    1b74:	00017400 	andeq	r7, r1, r0, lsl #8
    1b78:	00019600 	andeq	r9, r1, r0, lsl #12
    1b7c:	50000100 	andpl	r0, r0, r0, lsl #2
    1b80:	00000196 	muleq	r0, r6, r1
    1b84:	0000019a 	muleq	r0, sl, r1
    1b88:	01f30004 	mvnseq	r0, r4
    1b8c:	019a9f50 	orrseq	r9, sl, r0, asr pc
    1b90:	01a00000 	moveq	r0, r0
    1b94:	00010000 	andeq	r0, r1, r0
    1b98:	0001a050 	andeq	sl, r1, r0, asr r0
    1b9c:	0001ac00 	andeq	sl, r1, r0, lsl #24
    1ba0:	f3000400 	vshl.u8	d0, d0, d0
    1ba4:	009f5001 	addseq	r5, pc, r1
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	1c000000 	stcne	0, cr0, [r0], {-0}
    1bb0:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
    1bb4:	02000001 	andeq	r0, r0, #1
    1bb8:	1e007d00 	cdpne	13, 0, cr7, cr0, cr0, {0}
    1bbc:	74000001 	strvc	r0, [r0], #-1
    1bc0:	02000001 	andeq	r0, r0, #1
    1bc4:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    1bd8:	00011c00 	andeq	r1, r1, r0, lsl #24
    1bdc:	00012600 	andeq	r2, r1, r0, lsl #12
    1be0:	50000100 	andpl	r0, r0, r0, lsl #2
    1be4:	0000012a 	andeq	r0, r0, sl, lsr #2
    1be8:	0000012c 	andeq	r0, r0, ip, lsr #2
    1bec:	2c550001 	mrrccs	0, 0, r0, r5, cr1
    1bf0:	48000001 	stmdami	r0, {r0}
    1bf4:	01000001 	tsteq	r0, r1
    1bf8:	01485700 	cmpeq	r8, r0, lsl #14
    1bfc:	01600000 	cmneq	r0, r0
    1c00:	00010000 	andeq	r0, r1, r0
    1c04:	00016055 	andeq	r6, r1, r5, asr r0
    1c08:	00017400 	andeq	r7, r1, r0, lsl #8
    1c0c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    1c18:	01000000 	mrseq	r0, (UNDEF: 0)
    1c1c:	011c0001 	tsteq	ip, r1
    1c20:	01260000 			@ <UNDEFINED> instruction: 0x01260000
    1c24:	00010000 	andeq	r0, r1, r0
    1c28:	00012a51 	andeq	r2, r1, r1, asr sl
    1c2c:	00012a00 	andeq	r2, r1, r0, lsl #20
    1c30:	74000300 	strvc	r0, [r0], #-768	@ 0xfffffd00
    1c34:	012a9f01 			@ <UNDEFINED> instruction: 0x012a9f01
    1c38:	016e0000 	cmneq	lr, r0
    1c3c:	00010000 	andeq	r0, r1, r0
    1c40:	00000054 	andeq	r0, r0, r4, asr r0
    1c44:	00000000 	andeq	r0, r0, r0
    1c48:	48040200 	stmdami	r4, {r9}
    1c4c:	48000001 	stmdami	r0, {r0}
    1c50:	06000001 	streq	r0, [r0], -r1
    1c54:	00e80300 	rsceq	r0, r8, r0, lsl #6
    1c58:	009f2000 	addseq	r2, pc, r0
    1c5c:	00000000 	andeq	r0, r0, r0
    1c60:	f0000000 			@ <UNDEFINED> instruction: 0xf0000000
    1c64:	f2000000 	vhadd.s8	d0, d0, d0
    1c68:	02000000 	andeq	r0, r0, #0
    1c6c:	f2007d00 	vadd.f32	d7, d0, d0
    1c70:	1c000000 	stcne	0, cr0, [r0], {-0}
    1c74:	02000001 	andeq	r0, r0, #1
    1c78:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    1c84:	01010000 	mrseq	r0, (UNDEF: 1)
    1c88:	f0000000 			@ <UNDEFINED> instruction: 0xf0000000
    1c8c:	f8000000 			@ <UNDEFINED> instruction: 0xf8000000
    1c90:	01000000 	mrseq	r0, (UNDEF: 0)
    1c94:	00f85000 	rscseq	r5, r8, r0
    1c98:	010c0000 	mrseq	r0, (UNDEF: 12)
    1c9c:	00010000 	andeq	r0, r1, r0
    1ca0:	00010c54 	andeq	r0, r1, r4, asr ip
    1ca4:	00011600 	andeq	r1, r1, r0, lsl #12
    1ca8:	74000300 	strvc	r0, [r0], #-768	@ 0xfffffd00
    1cac:	01169f01 	tsteq	r6, r1, lsl #30
    1cb0:	011c0000 	tsteq	ip, r0
    1cb4:	00010000 	andeq	r0, r1, r0
    1cb8:	00000054 	andeq	r0, r0, r4, asr r0
    1cbc:	00000000 	andeq	r0, r0, r0
    1cc0:	f0000000 			@ <UNDEFINED> instruction: 0xf0000000
    1cc4:	f8000000 			@ <UNDEFINED> instruction: 0xf8000000
    1cc8:	01000000 	mrseq	r0, (UNDEF: 0)
    1ccc:	00005100 	andeq	r5, r0, r0, lsl #2
    1cd0:	00000000 	andeq	r0, r0, r0
    1cd4:	04020000 	streq	r0, [r2], #-0
    1cd8:	000000fe 	strdeq	r0, [r0], -lr
    1cdc:	000000fe 	strdeq	r0, [r0], -lr
    1ce0:	e8030006 	stmda	r3, {r1, r2}
    1ce4:	9f200000 	svcls	0x00200000
	...
    1cf0:	000000c8 	andeq	r0, r0, r8, asr #1
    1cf4:	000000ca 	andeq	r0, r0, sl, asr #1
    1cf8:	007d0002 	rsbseq	r0, sp, r2
    1cfc:	000000ca 	andeq	r0, r0, sl, asr #1
    1d00:	000000f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1d04:	107d0002 	rsbsne	r0, sp, r2
	...
    1d14:	00020200 	andeq	r0, r2, r0, lsl #4
    1d18:	000000c8 	andeq	r0, r0, r8, asr #1
    1d1c:	000000d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    1d20:	d0500001 	subsle	r0, r0, r1
    1d24:	d4000000 	strle	r0, [r0], #-0
    1d28:	03000000 	movweq	r0, #0
    1d2c:	9f017400 	svcls	0x00017400
    1d30:	000000d4 	ldrdeq	r0, [r0], -r4
    1d34:	000000d8 	ldrdeq	r0, [r0], -r8
    1d38:	d8540001 	ldmdale	r4, {r0}^
    1d3c:	f0000000 			@ <UNDEFINED> instruction: 0xf0000000
    1d40:	03000000 	movweq	r0, #0
    1d44:	9f017400 	svcls	0x00017400
	...
    1d50:	0000009c 	muleq	r0, ip, r0
    1d54:	0000009e 	muleq	r0, lr, r0
    1d58:	007d0002 	rsbseq	r0, sp, r2
    1d5c:	0000009e 	muleq	r0, lr, r0
    1d60:	000000c8 	andeq	r0, r0, r8, asr #1
    1d64:	107d0002 	rsbsne	r0, sp, r2
	...
    1d70:	02000000 	andeq	r0, r0, #0
    1d74:	00000002 	andeq	r0, r0, r2
    1d78:	0000009c 	muleq	r0, ip, r0
    1d7c:	000000a6 	andeq	r0, r0, r6, lsr #1
    1d80:	a6500001 	ldrbge	r0, [r0], -r1
    1d84:	ac000000 	stcge	0, cr0, [r0], {-0}
    1d88:	01000000 	mrseq	r0, (UNDEF: 0)
    1d8c:	00ac5400 	adceq	r5, ip, r0, lsl #8
    1d90:	00b00000 	adcseq	r0, r0, r0
    1d94:	00030000 	andeq	r0, r3, r0
    1d98:	b09f0174 	addslt	r0, pc, r4, ror r1	@ <UNPREDICTABLE>
    1d9c:	c8000000 	stmdagt	r0, {}	@ <UNPREDICTABLE>
    1da0:	01000000 	mrseq	r0, (UNDEF: 0)
    1da4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    1db0:	0000009c 	muleq	r0, ip, r0
    1db4:	000000a6 	andeq	r0, r0, r6, lsr #1
    1db8:	00510001 	subseq	r0, r1, r1
    1dbc:	00000000 	andeq	r0, r0, r0
    1dc0:	52000000 	andpl	r0, r0, #0
    1dc4:	54000000 	strpl	r0, [r0], #-0
    1dc8:	02000000 	andeq	r0, r0, #0
    1dcc:	54007d00 	strpl	r7, [r0], #-3328	@ 0xfffff300
    1dd0:	66000000 	strvs	r0, [r0], -r0
    1dd4:	02000000 	andeq	r0, r0, #0
    1dd8:	66087d00 	strvs	r7, [r8], -r0, lsl #26
    1ddc:	6a000000 	bvs	1de4 <__Stack_Size+0xde4>
    1de0:	02000000 	andeq	r0, r0, #0
    1de4:	6a007d00 	bvs	211ec <__Stack_Size+0x201ec>
    1de8:	9c000000 	stcls	0, cr0, [r0], {-0}
    1dec:	02000000 	andeq	r0, r0, #0
    1df0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1dfc:	00005e00 	andeq	r5, r0, r0, lsl #28
    1e00:	00006a00 	andeq	r6, r0, r0, lsl #20
    1e04:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1e10:	00700301 	rsbseq	r0, r0, r1, lsl #6
    1e14:	00700000 	rsbseq	r0, r0, r0
    1e18:	00060000 	andeq	r0, r6, r0
    1e1c:	0001ea03 	andeq	lr, r1, r3, lsl #20
    1e20:	00009f20 	andeq	r9, r0, r0, lsr #30
	...
    1e30:	000a0000 	andeq	r0, sl, r0
    1e34:	001a0000 	andseq	r0, sl, r0
    1e38:	00010000 	andeq	r0, r1, r0
    1e3c:	00001a50 	andeq	r1, r0, r0, asr sl
    1e40:	00002c00 	andeq	r2, r0, r0, lsl #24
    1e44:	53000100 	movwpl	r0, #256	@ 0x100
    1e48:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e4c:	0000002e 	andeq	r0, r0, lr, lsr #32
    1e50:	2e500001 	cdpcs	0, 5, cr0, cr0, cr1, {0}
    1e54:	30000000 	andcc	r0, r0, r0
    1e58:	01000000 	mrseq	r0, (UNDEF: 0)
    1e5c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1e68:	0000001e 	andeq	r0, r0, lr, lsl r0
    1e6c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e70:	00500001 	subseq	r0, r0, r1
    1e74:	00000000 	andeq	r0, r0, r0
    1e78:	03000000 	movweq	r0, #0
    1e7c:	00000a05 	andeq	r0, r0, r5, lsl #20
    1e80:	00000a00 	andeq	r0, r0, r0, lsl #20
    1e84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1e98:	00000006 	andeq	r0, r0, r6
    1e9c:	06500001 	ldrbeq	r0, [r0], -r1
    1ea0:	0a000000 	beq	1ea8 <__Stack_Size+0xea8>
    1ea4:	04000000 	streq	r0, [r0], #-0
    1ea8:	5001f300 	andpl	pc, r1, r0, lsl #6
    1eac:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
    1eb0:	00000000 	andeq	r0, r0, r0
    1eb4:	30040200 	andcc	r0, r4, r0, lsl #4
    1eb8:	30000000 	andcc	r0, r0, r0
    1ebc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ec0:	00005000 	andeq	r5, r0, r0
	...
    1ecc:	0000003c 	andeq	r0, r0, ip, lsr r0
    1ed0:	00000050 	andeq	r0, r0, r0, asr r0
    1ed4:	00510001 	subseq	r0, r1, r1
	...
    1ee0:	00003c00 	andeq	r3, r0, r0, lsl #24
    1ee4:	00005000 	andeq	r5, r0, r0
    1ee8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1ef4:	01ce0000 	biceq	r0, lr, r0
    1ef8:	02140000 	andseq	r0, r4, #0
    1efc:	00010000 	andeq	r0, r1, r0
    1f00:	00000050 	andeq	r0, r0, r0, asr r0
    1f04:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	0800014c 	stmdaeq	r0, {r2, r3, r6, r8}
   4:	0800014e 	stmdaeq	r0, {r1, r2, r3, r6, r8}
   8:	08000150 	stmdaeq	r0, {r4, r6, r8}
   c:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  10:	08000172 	stmdaeq	r0, {r1, r4, r5, r6, r8}
  14:	080001cc 	stmdaeq	r0, {r2, r3, r6, r7, r8}
	...
  20:	08000120 	stmdaeq	r0, {r5, r8}
  24:	080001da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8}
  28:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
  2c:	08001610 	stmdaeq	r0, {r4, r9, sl, ip}
	...
  38:	00000040 	andeq	r0, r0, r0, asr #32
  3c:	00000040 	andeq	r0, r0, r0, asr #32
  40:	00000042 	andeq	r0, r0, r2, asr #32
  44:	00000048 	andeq	r0, r0, r8, asr #32
	...
  50:	00000048 	andeq	r0, r0, r8, asr #32
  54:	0000004a 	andeq	r0, r0, sl, asr #32
  58:	0000004c 	andeq	r0, r0, ip, asr #32
  5c:	00000056 	andeq	r0, r0, r6, asr r0
	...
  68:	0000004a 	andeq	r0, r0, sl, asr #32
  6c:	0000004c 	andeq	r0, r0, ip, asr #32
  70:	0000005e 	andeq	r0, r0, lr, asr r0
  74:	0000005e 	andeq	r0, r0, lr, asr r0
  78:	00000066 	andeq	r0, r0, r6, rrx
  7c:	00000078 	andeq	r0, r0, r8, ror r0
	...
  88:	00000312 	andeq	r0, r0, r2, lsl r3
  8c:	00000316 	andeq	r0, r0, r6, lsl r3
  90:	00000316 	andeq	r0, r0, r6, lsl r3
  94:	00000366 	andeq	r0, r0, r6, ror #6
	...
  a0:	000003a0 	andeq	r0, r0, r0, lsr #7
  a4:	000003a2 	andeq	r0, r0, r2, lsr #7
  a8:	000003aa 	andeq	r0, r0, sl, lsr #7
  ac:	000003ac 	andeq	r0, r0, ip, lsr #7
  b0:	000003b4 			@ <UNDEFINED> instruction: 0x000003b4
  b4:	000003c4 	andeq	r0, r0, r4, asr #7
	...
  c0:	0000044e 	andeq	r0, r0, lr, asr #8
  c4:	00000450 	andeq	r0, r0, r0, asr r4
  c8:	0000046a 	andeq	r0, r0, sl, ror #8
  cc:	00000470 	andeq	r0, r0, r0, ror r4
  d0:	00000494 	muleq	r0, r4, r4
  d4:	000004a0 	andeq	r0, r0, r0, lsr #9
	...
  e0:	000004ac 	andeq	r0, r0, ip, lsr #9
  e4:	000004ae 	andeq	r0, r0, lr, lsr #9
  e8:	000004b6 			@ <UNDEFINED> instruction: 0x000004b6
  ec:	000004ba 			@ <UNDEFINED> instruction: 0x000004ba
	...
  f8:	0000055e 	andeq	r0, r0, lr, asr r5
  fc:	0000055e 	andeq	r0, r0, lr, asr r5
 100:	00000560 	andeq	r0, r0, r0, ror #10
 104:	0000056a 	andeq	r0, r0, sl, ror #10
	...
 110:	0000057a 	andeq	r0, r0, sl, ror r5
 114:	00000592 	muleq	r0, r2, r5
 118:	000005d6 	ldrdeq	r0, [r0], -r6
 11c:	0000060e 	andeq	r0, r0, lr, lsl #12
 120:	00000610 	andeq	r0, r0, r0, lsl r6
 124:	0000062e 	andeq	r0, r0, lr, lsr #12
	...
 130:	000005f4 	strdeq	r0, [r0], -r4
 134:	000005f6 	strdeq	r0, [r0], -r6
 138:	000005fe 	strdeq	r0, [r0], -lr
 13c:	0000060e 	andeq	r0, r0, lr, lsl #12
	...
 148:	00000598 	muleq	r0, r8, r5
 14c:	0000059c 	muleq	r0, ip, r5
 150:	0000063a 	andeq	r0, r0, sl, lsr r6
 154:	00000642 	andeq	r0, r0, r2, asr #12
	...
 160:	000005b4 			@ <UNDEFINED> instruction: 0x000005b4
 164:	000005b8 			@ <UNDEFINED> instruction: 0x000005b8
 168:	000005bc 			@ <UNDEFINED> instruction: 0x000005bc
 16c:	000005c0 	andeq	r0, r0, r0, asr #11
	...
 178:	00000004 	andeq	r0, r0, r4
 17c:	00000008 	andeq	r0, r0, r8
 180:	0000000a 	andeq	r0, r0, sl
 184:	00000014 	andeq	r0, r0, r4, lsl r0
 188:	00000018 	andeq	r0, r0, r8, lsl r0
 18c:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
 198:	00000376 	andeq	r0, r0, r6, ror r3
 19c:	00000378 	andeq	r0, r0, r8, ror r3
 1a0:	00000392 	muleq	r0, r2, r3
 1a4:	0000039e 	muleq	r0, lr, r3
	...
 1b0:	000005c2 	andeq	r0, r0, r2, asr #11
 1b4:	000005c4 	andeq	r0, r0, r4, asr #11
 1b8:	000005c6 	andeq	r0, r0, r6, asr #11
 1bc:	000005ce 	andeq	r0, r0, lr, asr #11
	...
 1c8:	000005f2 	strdeq	r0, [r0], -r2
 1cc:	000005f2 	strdeq	r0, [r0], -r2
 1d0:	000005f4 	strdeq	r0, [r0], -r4
 1d4:	000005fa 	strdeq	r0, [r0], -sl
	...
 1e0:	00000664 	andeq	r0, r0, r4, ror #12
 1e4:	00000664 	andeq	r0, r0, r4, ror #12
 1e8:	00000666 	andeq	r0, r0, r6, ror #12
 1ec:	0000066c 	andeq	r0, r0, ip, ror #12
	...
 1f8:	000006f6 	strdeq	r0, [r0], -r6
 1fc:	000006f8 	strdeq	r0, [r0], -r8
 200:	000006fa 	strdeq	r0, [r0], -sl
 204:	000006fc 	strdeq	r0, [r0], -ip
	...
 210:	0000005c 	andeq	r0, r0, ip, asr r0
 214:	00000062 	andeq	r0, r0, r2, rrx
 218:	00000066 	andeq	r0, r0, r6, rrx
 21c:	0000006a 	andeq	r0, r0, sl, rrx
	...
 228:	000000f4 	strdeq	r0, [r0], -r4
 22c:	000000f8 	strdeq	r0, [r0], -r8
 230:	000000fe 	strdeq	r0, [r0], -lr
 234:	00000102 	andeq	r0, r0, r2, lsl #2
	...
 240:	00000122 	andeq	r0, r0, r2, lsr #2
 244:	00000126 	andeq	r0, r0, r6, lsr #2
 248:	00000148 	andeq	r0, r0, r8, asr #2
 24c:	0000014c 	andeq	r0, r0, ip, asr #2
	...
 258:	000001ca 	andeq	r0, r0, sl, asr #3
 25c:	000001cc 	andeq	r0, r0, ip, asr #3
 260:	000001ce 	andeq	r0, r0, lr, asr #3
 264:	00000214 	andeq	r0, r0, r4, lsl r2
	...
 270:	0000029c 	muleq	r0, ip, r2
 274:	0000029e 	muleq	r0, lr, r2
 278:	000002a0 	andeq	r0, r0, r0, lsr #5
 27c:	000002a2 	andeq	r0, r0, r2, lsr #5
 280:	000002a4 	andeq	r0, r0, r4, lsr #5
 284:	000002ae 	andeq	r0, r0, lr, lsr #5
	...
 290:	000002ae 	andeq	r0, r0, lr, lsr #5
 294:	000002b0 			@ <UNDEFINED> instruction: 0x000002b0
 298:	000002b2 			@ <UNDEFINED> instruction: 0x000002b2
 29c:	000002bc 			@ <UNDEFINED> instruction: 0x000002bc
	...
 2a8:	000002b0 			@ <UNDEFINED> instruction: 0x000002b0
 2ac:	000002b2 			@ <UNDEFINED> instruction: 0x000002b2
 2b0:	000002ea 	andeq	r0, r0, sl, ror #5
 2b4:	000002ec 	andeq	r0, r0, ip, ror #5
 2b8:	000002fa 	strdeq	r0, [r0], -sl
 2bc:	000002fc 	strdeq	r0, [r0], -ip
	...
 2c8:	00000376 	andeq	r0, r0, r6, ror r3
 2cc:	0000039c 	muleq	r0, ip, r3
 2d0:	000003be 			@ <UNDEFINED> instruction: 0x000003be
 2d4:	000003f8 	strdeq	r0, [r0], -r8
	...
 2e0:	0000043a 	andeq	r0, r0, sl, lsr r4
 2e4:	0000043e 	andeq	r0, r0, lr, lsr r4
 2e8:	000004e8 	andeq	r0, r0, r8, ror #9
 2ec:	000004f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
	...
 2f8:	0000043e 	andeq	r0, r0, lr, lsr r4
 2fc:	00000498 	muleq	r0, r8, r4
 300:	000004fa 	strdeq	r0, [r0], -sl
 304:	0000053e 	andeq	r0, r0, lr, lsr r5
	...
 310:	0000051a 	andeq	r0, r0, sl, lsl r5
 314:	0000051c 	andeq	r0, r0, ip, lsl r5
 318:	0000051e 	andeq	r0, r0, lr, lsl r5
 31c:	00000520 	andeq	r0, r0, r0, lsr #10
	...
